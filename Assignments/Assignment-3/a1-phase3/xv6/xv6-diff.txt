-----------------------------------------
+ 	    Update: kernel/syscall.h 	    +
-----------------------------------------

/* Assignment 1E update */
#define SYS_trace  22

-----------------------------------------


-----------------------------------------
+       Update: user/user.h  	        +
-----------------------------------------

/* Assignment 1E update */
int trace(int);

-----------------------------------------


-----------------------------------------
+       Update: user/usys.pl  	        +
-----------------------------------------

# Assignment 1E update 
int trace(int);

-----------------------------------------


-----------------------------------------
+        Update: kernal/sysproc.c  	    +
-----------------------------------------

/* Assignment 1E update */
uint64
sys_trace(void)
{
    int mask;
    
    argint(0, &mask);
    
    myproc()->trace_mask = mask;
    
    return 0;  /* not reached */
}

-----------------------------------------


-----------------------------------------
+       Update: kernal/syscall.c  	    +
-----------------------------------------

/* Assignment 1E update */
extern uint64 sys_trace(void);

...
...
...

/* Assignment 1E update */
[SYS_trace]   sys_trace,

...
...
...

/* Assignment 1E update */
static char *syscalls_names[] = {
[SYS_fork]    "fork",
[SYS_exit]    "exit",
[SYS_wait]    "wait",
[SYS_pipe]    "pipe",
[SYS_read]    "read",
[SYS_kill]    "kill",
[SYS_exec]    "exec",
[SYS_fstat]   "fstat",
[SYS_chdir]   "chdir",
[SYS_dup]     "dup",
[SYS_getpid]  "getpid",
[SYS_sbrk]    "sbrk",
[SYS_sleep]   "sleep",
[SYS_uptime]  "uptime",
[SYS_open]    "open",
[SYS_write]   "write",
[SYS_mknod]   "mknod",
[SYS_unlink]  "unlink",
[SYS_link]    "link",
[SYS_mkdir]   "mkdir",
[SYS_close]   "close",
[SYS_trace]   "trace",
};

...
...
...

/* Assignment 1E update */
if((p->trace_mask & (1 << num)) != 0){
    int checkPoint = (num < NELEM(syscalls_names));
    char* name = (checkPoint) ? syscalls_names[num] : "unknown"; 

    printf("%d: syscall %s -> %ld\n", p->pid, name, p->trapframe->a0);
}

-----------------------------------------



-----------------------------------------
+       Update: kernal/proc.c  	        +
-----------------------------------------


/* Assignment 1E update */
p->trace_mask = 0;

...
...
...

/* Assignment 1E update */
np->trace_mask = p->trace_mask;

-----------------------------------------

