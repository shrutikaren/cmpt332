diff --git a/Assignments/Assignment-6/diff.txt b/Assignments/Assignment-6/diff.txt
index 19fcf75..e69de29 100644
--- a/Assignments/Assignment-6/diff.txt
+++ b/Assignments/Assignment-6/diff.txt
@@ -1,73233 +0,0 @@
-diff --git a/Assignments/Assignment-6/xv6/Makefile b/Assignments/Assignment-6/xv6/Makefile
-index f8c820e..1f93684 100644
---- a/Assignments/Assignment-6/xv6/Makefile
-+++ b/Assignments/Assignment-6/xv6/Makefile
-@@ -32,22 +32,24 @@ OBJS = \
- 
- # riscv64-unknown-elf- or riscv64-linux-gnu-
- # perhaps in /opt/riscv/bin
--#TOOLPREFIX = 
--
--# Try to infer the correct TOOLPREFIX if not set
- ifndef TOOLPREFIX
--TOOLPREFIX := $(shell if riscv64-unknown-elf-objdump -i 2>&1 | grep 'elf64-big' >/dev/null 2>&1; \
--	then echo 'riscv64-unknown-elf-'; \
--	elif riscv64-linux-gnu-objdump -i 2>&1 | grep 'elf64-big' >/dev/null 2>&1; \
--	then echo 'riscv64-linux-gnu-'; \
--	elif riscv64-unknown-linux-gnu-objdump -i 2>&1 | grep 'elf64-big' >/dev/null 2>&1; \
--	then echo 'riscv64-unknown-linux-gnu-'; \
--	else echo "***" 1>&2; \
--	echo "*** Error: Couldn't find a riscv64 version of GCC/binutils." 1>&2; \
--	echo "*** To turn off this error, run 'gmake TOOLPREFIX= ...'." 1>&2; \
--	echo "***" 1>&2; exit 1; fi)
-+TOOLPREFIX := /usr/local/riscv/bin/riscv64-unknown-elf-
- endif
- 
-+# Try to infer the correct TOOLPREFIX if not set
-+#ifndef TOOLPREFIX
-+#TOOLPREFIX := $(shell if riscv64-unknown-elf-objdump -i 2>&1 | grep 'elf64-big' >/dev/null 2>&1; \
-+#	then echo 'riscv64-unknown-elf-'; \
-+#	elif riscv64-linux-gnu-objdump -i 2>&1 | grep 'elf64-big' >/dev/null 2>&1; \
-+#	then echo 'riscv64-linux-gnu-'; \
-+#	elif riscv64-unknown-linux-gnu-objdump -i 2>&1 | grep 'elf64-big' >/dev/null 2>&1; \
-+#	then echo 'riscv64-unknown-linux-gnu-'; \
-+#	else echo "***" 1>&2; \
-+#	echo "*** Error: Couldn't find a riscv64 version of GCC/binutils." 1>&2; \
-+#	echo "*** To turn off this error, run 'gmake TOOLPREFIX= ...'." 1>&2; \
-+#	echo "***" 1>&2; exit 1; fi)
-+#endif
-+
- QEMU = qemu-system-riscv64
- 
- CC = $(TOOLPREFIX)gcc
-diff --git a/Assignments/Assignment-6/xv6/kernel/bio.d b/Assignments/Assignment-6/xv6/kernel/bio.d
-index 8c4ab0c..63aa36f 100644
---- a/Assignments/Assignment-6/xv6/kernel/bio.d
-+++ b/Assignments/Assignment-6/xv6/kernel/bio.d
-@@ -1,4 +1,3 @@
--kernel/bio.o: kernel/bio.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/param.h kernel/spinlock.h kernel/sleeplock.h \
-- kernel/riscv.h kernel/defs.h kernel/fs.h kernel/buf.h
-+kernel/bio.o: kernel/bio.c kernel/types.h kernel/param.h \
-+ kernel/spinlock.h kernel/sleeplock.h kernel/riscv.h kernel/defs.h \
-+ kernel/fs.h kernel/buf.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/bio.o b/Assignments/Assignment-6/xv6/kernel/bio.o
-index 745e29a..0f7c29d 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/bio.o and b/Assignments/Assignment-6/xv6/kernel/bio.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/console.d b/Assignments/Assignment-6/xv6/kernel/console.d
-index 0480493..75ad18e 100644
---- a/Assignments/Assignment-6/xv6/kernel/console.d
-+++ b/Assignments/Assignment-6/xv6/kernel/console.d
-@@ -1,6 +1,5 @@
- kernel/console.o: kernel/console.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- /student/cmpt332/xv6-2024/riscv/lib/gcc/riscv64-unknown-linux-gnu/13.2.0/include/stdarg.h \
-+ /usr/local/riscv/lib/gcc/riscv64-unknown-elf/12.2.0/include/stdarg.h \
-  kernel/types.h kernel/param.h kernel/spinlock.h kernel/sleeplock.h \
-  kernel/fs.h kernel/file.h kernel/memlayout.h kernel/riscv.h \
-  kernel/defs.h kernel/proc.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/console.o b/Assignments/Assignment-6/xv6/kernel/console.o
-index af461aa..a6fb4e2 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/console.o and b/Assignments/Assignment-6/xv6/kernel/console.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/entry.o b/Assignments/Assignment-6/xv6/kernel/entry.o
-index 1e73147..c6ae2ea 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/entry.o and b/Assignments/Assignment-6/xv6/kernel/entry.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/exec.d b/Assignments/Assignment-6/xv6/kernel/exec.d
-index f51c728..f162b3b 100644
---- a/Assignments/Assignment-6/xv6/kernel/exec.d
-+++ b/Assignments/Assignment-6/xv6/kernel/exec.d
-@@ -1,4 +1,3 @@
--kernel/exec.o: kernel/exec.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/param.h kernel/memlayout.h kernel/riscv.h \
-- kernel/spinlock.h kernel/proc.h kernel/defs.h kernel/elf.h
-+kernel/exec.o: kernel/exec.c kernel/types.h kernel/param.h \
-+ kernel/memlayout.h kernel/riscv.h kernel/spinlock.h kernel/proc.h \
-+ kernel/defs.h kernel/elf.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/exec.o b/Assignments/Assignment-6/xv6/kernel/exec.o
-index 8235849..a1177b2 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/exec.o and b/Assignments/Assignment-6/xv6/kernel/exec.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/file.d b/Assignments/Assignment-6/xv6/kernel/file.d
-index 3957707..222a010 100644
---- a/Assignments/Assignment-6/xv6/kernel/file.d
-+++ b/Assignments/Assignment-6/xv6/kernel/file.d
-@@ -1,5 +1,3 @@
--kernel/file.o: kernel/file.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/riscv.h kernel/defs.h kernel/param.h kernel/fs.h \
-- kernel/spinlock.h kernel/sleeplock.h kernel/file.h kernel/stat.h \
-- kernel/proc.h
-+kernel/file.o: kernel/file.c kernel/types.h kernel/riscv.h kernel/defs.h \
-+ kernel/param.h kernel/fs.h kernel/spinlock.h kernel/sleeplock.h \
-+ kernel/file.h kernel/stat.h kernel/proc.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/file.o b/Assignments/Assignment-6/xv6/kernel/file.o
-index c28d41b..959a78e 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/file.o and b/Assignments/Assignment-6/xv6/kernel/file.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/fs.d b/Assignments/Assignment-6/xv6/kernel/fs.d
-index 709526c..9e5d3ff 100644
---- a/Assignments/Assignment-6/xv6/kernel/fs.d
-+++ b/Assignments/Assignment-6/xv6/kernel/fs.d
-@@ -1,5 +1,3 @@
--kernel/fs.o: kernel/fs.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/riscv.h kernel/defs.h kernel/param.h kernel/stat.h \
-- kernel/spinlock.h kernel/proc.h kernel/sleeplock.h kernel/fs.h \
-- kernel/buf.h kernel/file.h
-+kernel/fs.o: kernel/fs.c kernel/types.h kernel/riscv.h kernel/defs.h \
-+ kernel/param.h kernel/stat.h kernel/spinlock.h kernel/proc.h \
-+ kernel/sleeplock.h kernel/fs.h kernel/buf.h kernel/file.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/fs.o b/Assignments/Assignment-6/xv6/kernel/fs.o
-index 7afa185..774e0e7 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/fs.o and b/Assignments/Assignment-6/xv6/kernel/fs.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/kalloc.d b/Assignments/Assignment-6/xv6/kernel/kalloc.d
-index 541b646..d495b70 100644
---- a/Assignments/Assignment-6/xv6/kernel/kalloc.d
-+++ b/Assignments/Assignment-6/xv6/kernel/kalloc.d
-@@ -1,4 +1,2 @@
--kernel/kalloc.o: kernel/kalloc.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/param.h kernel/memlayout.h kernel/spinlock.h \
-- kernel/riscv.h kernel/defs.h
-+kernel/kalloc.o: kernel/kalloc.c kernel/types.h kernel/param.h \
-+ kernel/memlayout.h kernel/spinlock.h kernel/riscv.h kernel/defs.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/kalloc.o b/Assignments/Assignment-6/xv6/kernel/kalloc.o
-index ab5580f..d8db248 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/kalloc.o and b/Assignments/Assignment-6/xv6/kernel/kalloc.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/kernel b/Assignments/Assignment-6/xv6/kernel/kernel
-index 0cc8999..7151f0a 100755
-Binary files a/Assignments/Assignment-6/xv6/kernel/kernel and b/Assignments/Assignment-6/xv6/kernel/kernel differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/kernel.asm b/Assignments/Assignment-6/xv6/kernel/kernel.asm
-index d7044a1..976a482 100644
---- a/Assignments/Assignment-6/xv6/kernel/kernel.asm
-+++ b/Assignments/Assignment-6/xv6/kernel/kernel.asm
-@@ -5,11 +5,11 @@ kernel/kernel:     file format elf64-littleriscv
- Disassembly of section .text:
- 
- 0000000080000000 <_entry>:
--    80000000:	0000a117          	auipc	sp,0xa
--    80000004:	20010113          	addi	sp,sp,512 # 8000a200 <stack0>
-+    80000000:	00008117          	auipc	sp,0x8
-+    80000004:	91010113          	add	sp,sp,-1776 # 80007910 <stack0>
-     80000008:	6505                	lui	a0,0x1
-     8000000a:	f14025f3          	csrr	a1,mhartid
--    8000000e:	0585                	addi	a1,a1,1
-+    8000000e:	0585                	add	a1,a1,1
-     80000010:	02b50533          	mul	a0,a0,a1
-     80000014:	912a                	add	sp,sp,a0
-     80000016:	04a000ef          	jal	80000060 <start>
-@@ -24,9 +24,9 @@ Disassembly of section .text:
- void
- timerinit()
- {
--    8000001c:	1141                	addi	sp,sp,-16
-+    8000001c:	1141                	add	sp,sp,-16
-     8000001e:	e422                	sd	s0,8(sp)
--    80000020:	0800                	addi	s0,sp,16
-+    80000020:	0800                	add	s0,sp,16
- #define MIE_STIE (1L << 5)  /* supervisor timer */
- static inline uint64
- r_mie()
-@@ -36,7 +36,7 @@ r_mie()
-     80000022:	304027f3          	csrr	a5,mie
-   /* enable supervisor-mode timer interrupts. */
-   w_mie(r_mie() | MIE_STIE);
--    80000026:	0207e793          	ori	a5,a5,32
-+    80000026:	0207e793          	or	a5,a5,32
- }
- 
- static inline void 
-@@ -55,7 +55,7 @@ r_menvcfg()
-   /* enable the sstc extension (i.e. stimecmp). */
-   w_menvcfg(r_menvcfg() | (1L << 63)); 
-     80000032:	577d                	li	a4,-1
--    80000034:	177e                	slli	a4,a4,0x3f
-+    80000034:	177e                	sll	a4,a4,0x3f
-     80000036:	8fd9                	or	a5,a5,a4
- 
- static inline void 
-@@ -74,7 +74,7 @@ r_mcounteren()
-   
-   /* allow supervisor to use stimecmp and time. */
-   w_mcounteren(r_mcounteren() | 2);
--    80000040:	0027e793          	ori	a5,a5,2
-+    80000040:	0027e793          	or	a5,a5,2
-   asm volatile("csrw mcounteren, %0" : : "r" (x));
-     80000044:	30679073          	csrw	mcounteren,a5
- /* machine-mode cycle counter */
-@@ -88,55 +88,55 @@ r_time()
-   /* ask for the very first timer interrupt. */
-   w_stimecmp(r_time() + 1000000);
-     8000004c:	000f4737          	lui	a4,0xf4
--    80000050:	24070713          	addi	a4,a4,576 # f4240 <_entry-0x7ff0bdc0>
-+    80000050:	24070713          	add	a4,a4,576 # f4240 <_entry-0x7ff0bdc0>
-     80000054:	97ba                	add	a5,a5,a4
-   asm volatile("csrw 0x14d, %0" : : "r" (x));
-     80000056:	14d79073          	csrw	stimecmp,a5
- }
-     8000005a:	6422                	ld	s0,8(sp)
--    8000005c:	0141                	addi	sp,sp,16
-+    8000005c:	0141                	add	sp,sp,16
-     8000005e:	8082                	ret
- 
- 0000000080000060 <start>:
- {
--    80000060:	1141                	addi	sp,sp,-16
-+    80000060:	1141                	add	sp,sp,-16
-     80000062:	e406                	sd	ra,8(sp)
-     80000064:	e022                	sd	s0,0(sp)
--    80000066:	0800                	addi	s0,sp,16
-+    80000066:	0800                	add	s0,sp,16
-   asm volatile("csrr %0, mstatus" : "=r" (x) );
-     80000068:	300027f3          	csrr	a5,mstatus
-   x &= ~MSTATUS_MPP_MASK;
-     8000006c:	7779                	lui	a4,0xffffe
--    8000006e:	7ff70713          	addi	a4,a4,2047 # ffffffffffffe7ff <end+0xffffffff7ffdb2cf>
-+    8000006e:	7ff70713          	add	a4,a4,2047 # ffffffffffffe7ff <end+0xffffffff7ffddbbf>
-     80000072:	8ff9                	and	a5,a5,a4
-   x |= MSTATUS_MPP_S;
-     80000074:	6705                	lui	a4,0x1
--    80000076:	80070713          	addi	a4,a4,-2048 # 800 <_entry-0x7ffff800>
-+    80000076:	80070713          	add	a4,a4,-2048 # 800 <_entry-0x7ffff800>
-     8000007a:	8fd9                	or	a5,a5,a4
-   asm volatile("csrw mstatus, %0" : : "r" (x));
-     8000007c:	30079073          	csrw	mstatus,a5
-   asm volatile("csrw mepc, %0" : : "r" (x));
-     80000080:	00001797          	auipc	a5,0x1
--    80000084:	de278793          	addi	a5,a5,-542 # 80000e62 <main>
-+    80000084:	d9478793          	add	a5,a5,-620 # 80000e14 <main>
-     80000088:	34179073          	csrw	mepc,a5
-   asm volatile("csrw satp, %0" : : "r" (x));
-     8000008c:	4781                	li	a5,0
-     8000008e:	18079073          	csrw	satp,a5
-   asm volatile("csrw medeleg, %0" : : "r" (x));
-     80000092:	67c1                	lui	a5,0x10
--    80000094:	17fd                	addi	a5,a5,-1 # ffff <_entry-0x7fff0001>
-+    80000094:	17fd                	add	a5,a5,-1 # ffff <_entry-0x7fff0001>
-     80000096:	30279073          	csrw	medeleg,a5
-   asm volatile("csrw mideleg, %0" : : "r" (x));
-     8000009a:	30379073          	csrw	mideleg,a5
-   asm volatile("csrr %0, sie" : "=r" (x) );
-     8000009e:	104027f3          	csrr	a5,sie
-   w_sie(r_sie() | SIE_SEIE | SIE_STIE | SIE_SSIE);
--    800000a2:	2227e793          	ori	a5,a5,546
-+    800000a2:	2227e793          	or	a5,a5,546
-   asm volatile("csrw sie, %0" : : "r" (x));
-     800000a6:	10479073          	csrw	sie,a5
-   asm volatile("csrw pmpaddr0, %0" : : "r" (x));
-     800000aa:	57fd                	li	a5,-1
--    800000ac:	83a9                	srli	a5,a5,0xa
-+    800000ac:	83a9                	srl	a5,a5,0xa
-     800000ae:	3b079073          	csrw	pmpaddr0,a5
-   asm volatile("csrw pmpcfg0, %0" : : "r" (x));
-     800000b2:	47bd                	li	a5,15
-@@ -159,7 +159,7 @@ w_tp(uint64 x)
- }
-     800000c8:	60a2                	ld	ra,8(sp)
-     800000ca:	6402                	ld	s0,0(sp)
--    800000cc:	0141                	addi	sp,sp,16
-+    800000cc:	0141                	add	sp,sp,16
-     800000ce:	8082                	ret
- 
- 00000000800000d0 <consolewrite>:
-@@ -169,19 +169,19 @@ w_tp(uint64 x)
- int
- consolewrite(int user_src, uint64 src, int n)
- {
--    800000d0:	715d                	addi	sp,sp,-80
-+    800000d0:	715d                	add	sp,sp,-80
-     800000d2:	e486                	sd	ra,72(sp)
-     800000d4:	e0a2                	sd	s0,64(sp)
--    800000d6:	f84a                	sd	s2,48(sp)
--    800000d8:	0880                	addi	s0,sp,80
-+    800000d6:	fc26                	sd	s1,56(sp)
-+    800000d8:	f84a                	sd	s2,48(sp)
-+    800000da:	f44e                	sd	s3,40(sp)
-+    800000dc:	f052                	sd	s4,32(sp)
-+    800000de:	ec56                	sd	s5,24(sp)
-+    800000e0:	0880                	add	s0,sp,80
-   int i;
- 
-   for(i = 0; i < n; i++){
--    800000da:	04c05263          	blez	a2,8000011e <consolewrite+0x4e>
--    800000de:	fc26                	sd	s1,56(sp)
--    800000e0:	f44e                	sd	s3,40(sp)
--    800000e2:	f052                	sd	s4,32(sp)
--    800000e4:	ec56                	sd	s5,24(sp)
-+    800000e2:	04c05363          	blez	a2,80000128 <consolewrite+0x58>
-     800000e6:	8a2a                	mv	s4,a0
-     800000e8:	84ae                	mv	s1,a1
-     800000ea:	89b2                	mv	s3,a2
-@@ -192,12307 +192,12039 @@ consolewrite(int user_src, uint64 src, int n)
-     800000f0:	4685                	li	a3,1
-     800000f2:	8626                	mv	a2,s1
-     800000f4:	85d2                	mv	a1,s4
--    800000f6:	fbf40513          	addi	a0,s0,-65
--    800000fa:	15a020ef          	jal	80002254 <either_copyin>
--    800000fe:	03550263          	beq	a0,s5,80000122 <consolewrite+0x52>
-+    800000f6:	fbf40513          	add	a0,s0,-65
-+    800000fa:	0a8020ef          	jal	800021a2 <either_copyin>
-+    800000fe:	01550b63          	beq	a0,s5,80000114 <consolewrite+0x44>
-       break;
-     uartputc(c);
-     80000102:	fbf44503          	lbu	a0,-65(s0)
--    80000106:	035000ef          	jal	8000093a <uartputc>
-+    80000106:	7e2000ef          	jal	800008e8 <uartputc>
-   for(i = 0; i < n; i++){
--    8000010a:	2905                	addiw	s2,s2,1
--    8000010c:	0485                	addi	s1,s1,1
-+    8000010a:	2905                	addw	s2,s2,1
-+    8000010c:	0485                	add	s1,s1,1
-     8000010e:	ff2991e3          	bne	s3,s2,800000f0 <consolewrite+0x20>
-     80000112:	894e                	mv	s2,s3
--    80000114:	74e2                	ld	s1,56(sp)
--    80000116:	79a2                	ld	s3,40(sp)
--    80000118:	7a02                	ld	s4,32(sp)
--    8000011a:	6ae2                	ld	s5,24(sp)
--    8000011c:	a039                	j	8000012a <consolewrite+0x5a>
--    8000011e:	4901                	li	s2,0
--    80000120:	a029                	j	8000012a <consolewrite+0x5a>
--    80000122:	74e2                	ld	s1,56(sp)
--    80000124:	79a2                	ld	s3,40(sp)
--    80000126:	7a02                	ld	s4,32(sp)
--    80000128:	6ae2                	ld	s5,24(sp)
-   }
- 
-   return i;
- }
--    8000012a:	854a                	mv	a0,s2
--    8000012c:	60a6                	ld	ra,72(sp)
--    8000012e:	6406                	ld	s0,64(sp)
--    80000130:	7942                	ld	s2,48(sp)
--    80000132:	6161                	addi	sp,sp,80
--    80000134:	8082                	ret
-+    80000114:	854a                	mv	a0,s2
-+    80000116:	60a6                	ld	ra,72(sp)
-+    80000118:	6406                	ld	s0,64(sp)
-+    8000011a:	74e2                	ld	s1,56(sp)
-+    8000011c:	7942                	ld	s2,48(sp)
-+    8000011e:	79a2                	ld	s3,40(sp)
-+    80000120:	7a02                	ld	s4,32(sp)
-+    80000122:	6ae2                	ld	s5,24(sp)
-+    80000124:	6161                	add	sp,sp,80
-+    80000126:	8082                	ret
-+  for(i = 0; i < n; i++){
-+    80000128:	4901                	li	s2,0
-+    8000012a:	b7ed                	j	80000114 <consolewrite+0x44>
- 
--0000000080000136 <consoleread>:
-+000000008000012c <consoleread>:
- /* user_dist indicates whether dst is a user */
- /* or kernel address. */
- /* */
- int
- consoleread(int user_dst, uint64 dst, int n)
- {
--    80000136:	711d                	addi	sp,sp,-96
--    80000138:	ec86                	sd	ra,88(sp)
--    8000013a:	e8a2                	sd	s0,80(sp)
--    8000013c:	e4a6                	sd	s1,72(sp)
--    8000013e:	e0ca                	sd	s2,64(sp)
--    80000140:	fc4e                	sd	s3,56(sp)
--    80000142:	f852                	sd	s4,48(sp)
--    80000144:	f456                	sd	s5,40(sp)
--    80000146:	f05a                	sd	s6,32(sp)
--    80000148:	1080                	addi	s0,sp,96
--    8000014a:	8aaa                	mv	s5,a0
--    8000014c:	8a2e                	mv	s4,a1
--    8000014e:	89b2                	mv	s3,a2
-+    8000012c:	711d                	add	sp,sp,-96
-+    8000012e:	ec86                	sd	ra,88(sp)
-+    80000130:	e8a2                	sd	s0,80(sp)
-+    80000132:	e4a6                	sd	s1,72(sp)
-+    80000134:	e0ca                	sd	s2,64(sp)
-+    80000136:	fc4e                	sd	s3,56(sp)
-+    80000138:	f852                	sd	s4,48(sp)
-+    8000013a:	f456                	sd	s5,40(sp)
-+    8000013c:	f05a                	sd	s6,32(sp)
-+    8000013e:	ec5e                	sd	s7,24(sp)
-+    80000140:	1080                	add	s0,sp,96
-+    80000142:	8aaa                	mv	s5,a0
-+    80000144:	8a2e                	mv	s4,a1
-+    80000146:	89b2                	mv	s3,a2
-   uint target;
-   int c;
-   char cbuf;
- 
-   target = n;
--    80000150:	00060b1b          	sext.w	s6,a2
-+    80000148:	00060b1b          	sext.w	s6,a2
-   acquire(&cons.lock);
--    80000154:	00012517          	auipc	a0,0x12
--    80000158:	0ac50513          	addi	a0,a0,172 # 80012200 <cons>
--    8000015c:	299000ef          	jal	80000bf4 <acquire>
-+    8000014c:	0000f517          	auipc	a0,0xf
-+    80000150:	7c450513          	add	a0,a0,1988 # 8000f910 <cons>
-+    80000154:	24d000ef          	jal	80000ba0 <acquire>
-   while(n > 0){
-     /* wait until interrupt handler has put some */
-     /* input into cons.buffer. */
-     while(cons.r == cons.w){
--    80000160:	00012497          	auipc	s1,0x12
--    80000164:	0a048493          	addi	s1,s1,160 # 80012200 <cons>
-+    80000158:	0000f497          	auipc	s1,0xf
-+    8000015c:	7b848493          	add	s1,s1,1976 # 8000f910 <cons>
-       if(killed(myproc())){
-         release(&cons.lock);
-         return -1;
-       }
-       sleep(&cons.r, &cons.lock);
--    80000168:	00012917          	auipc	s2,0x12
--    8000016c:	13090913          	addi	s2,s2,304 # 80012298 <cons+0x98>
-+    80000160:	00010917          	auipc	s2,0x10
-+    80000164:	84890913          	add	s2,s2,-1976 # 8000f9a8 <cons+0x98>
-   while(n > 0){
--    80000170:	0b305d63          	blez	s3,8000022a <consoleread+0xf4>
-+    80000168:	07305a63          	blez	s3,800001dc <consoleread+0xb0>
-     while(cons.r == cons.w){
--    80000174:	0984a783          	lw	a5,152(s1)
--    80000178:	09c4a703          	lw	a4,156(s1)
--    8000017c:	0af71263          	bne	a4,a5,80000220 <consoleread+0xea>
-+    8000016c:	0984a783          	lw	a5,152(s1)
-+    80000170:	09c4a703          	lw	a4,156(s1)
-+    80000174:	02f71163          	bne	a4,a5,80000196 <consoleread+0x6a>
-       if(killed(myproc())){
--    80000180:	760010ef          	jal	800018e0 <myproc>
--    80000184:	763010ef          	jal	800020e6 <killed>
--    80000188:	e12d                	bnez	a0,800001ea <consoleread+0xb4>
-+    80000178:	6b8010ef          	jal	80001830 <myproc>
-+    8000017c:	6b9010ef          	jal	80002034 <killed>
-+    80000180:	e53d                	bnez	a0,800001ee <consoleread+0xc2>
-       sleep(&cons.r, &cons.lock);
--    8000018a:	85a6                	mv	a1,s1
--    8000018c:	854a                	mv	a0,s2
--    8000018e:	521010ef          	jal	80001eae <sleep>
-+    80000182:	85a6                	mv	a1,s1
-+    80000184:	854a                	mv	a0,s2
-+    80000186:	477010ef          	jal	80001dfc <sleep>
-     while(cons.r == cons.w){
--    80000192:	0984a783          	lw	a5,152(s1)
--    80000196:	09c4a703          	lw	a4,156(s1)
--    8000019a:	fef703e3          	beq	a4,a5,80000180 <consoleread+0x4a>
--    8000019e:	ec5e                	sd	s7,24(sp)
-+    8000018a:	0984a783          	lw	a5,152(s1)
-+    8000018e:	09c4a703          	lw	a4,156(s1)
-+    80000192:	fef703e3          	beq	a4,a5,80000178 <consoleread+0x4c>
-     }
- 
-     c = cons.buf[cons.r++ % INPUT_BUF_SIZE];
--    800001a0:	00012717          	auipc	a4,0x12
--    800001a4:	06070713          	addi	a4,a4,96 # 80012200 <cons>
--    800001a8:	0017869b          	addiw	a3,a5,1
--    800001ac:	08d72c23          	sw	a3,152(a4)
--    800001b0:	07f7f693          	andi	a3,a5,127
--    800001b4:	9736                	add	a4,a4,a3
--    800001b6:	01874703          	lbu	a4,24(a4)
--    800001ba:	00070b9b          	sext.w	s7,a4
-+    80000196:	0000f717          	auipc	a4,0xf
-+    8000019a:	77a70713          	add	a4,a4,1914 # 8000f910 <cons>
-+    8000019e:	0017869b          	addw	a3,a5,1
-+    800001a2:	08d72c23          	sw	a3,152(a4)
-+    800001a6:	07f7f693          	and	a3,a5,127
-+    800001aa:	9736                	add	a4,a4,a3
-+    800001ac:	01874703          	lbu	a4,24(a4)
-+    800001b0:	00070b9b          	sext.w	s7,a4
- 
-     if(c == C('D')){  /* end-of-file */
--    800001be:	4691                	li	a3,4
--    800001c0:	04db8663          	beq	s7,a3,8000020c <consoleread+0xd6>
-+    800001b4:	4691                	li	a3,4
-+    800001b6:	04db8e63          	beq	s7,a3,80000212 <consoleread+0xe6>
-       }
-       break;
-     }
- 
-     /* copy the input byte to the user-space buffer. */
-     cbuf = c;
--    800001c4:	fae407a3          	sb	a4,-81(s0)
-+    800001ba:	fae407a3          	sb	a4,-81(s0)
-     if(either_copyout(user_dst, dst, &cbuf, 1) == -1)
--    800001c8:	4685                	li	a3,1
--    800001ca:	faf40613          	addi	a2,s0,-81
--    800001ce:	85d2                	mv	a1,s4
--    800001d0:	8556                	mv	a0,s5
--    800001d2:	038020ef          	jal	8000220a <either_copyout>
--    800001d6:	57fd                	li	a5,-1
--    800001d8:	04f50863          	beq	a0,a5,80000228 <consoleread+0xf2>
-+    800001be:	4685                	li	a3,1
-+    800001c0:	faf40613          	add	a2,s0,-81
-+    800001c4:	85d2                	mv	a1,s4
-+    800001c6:	8556                	mv	a0,s5
-+    800001c8:	791010ef          	jal	80002158 <either_copyout>
-+    800001cc:	57fd                	li	a5,-1
-+    800001ce:	00f50763          	beq	a0,a5,800001dc <consoleread+0xb0>
-       break;
- 
-     dst++;
--    800001dc:	0a05                	addi	s4,s4,1
-+    800001d2:	0a05                	add	s4,s4,1
-     --n;
--    800001de:	39fd                	addiw	s3,s3,-1
-+    800001d4:	39fd                	addw	s3,s3,-1
- 
-     if(c == '\n'){
--    800001e0:	47a9                	li	a5,10
--    800001e2:	04fb8d63          	beq	s7,a5,8000023c <consoleread+0x106>
--    800001e6:	6be2                	ld	s7,24(sp)
--    800001e8:	b761                	j	80000170 <consoleread+0x3a>
--        release(&cons.lock);
--    800001ea:	00012517          	auipc	a0,0x12
--    800001ee:	01650513          	addi	a0,a0,22 # 80012200 <cons>
--    800001f2:	29b000ef          	jal	80000c8c <release>
--        return -1;
--    800001f6:	557d                	li	a0,-1
-+    800001d6:	47a9                	li	a5,10
-+    800001d8:	f8fb98e3          	bne	s7,a5,80000168 <consoleread+0x3c>
-+      /* a whole line has arrived, return to */
-+      /* the user-level read(). */
-+      break;
-     }
-   }
-   release(&cons.lock);
-+    800001dc:	0000f517          	auipc	a0,0xf
-+    800001e0:	73450513          	add	a0,a0,1844 # 8000f910 <cons>
-+    800001e4:	255000ef          	jal	80000c38 <release>
- 
-   return target - n;
--}
--    800001f8:	60e6                	ld	ra,88(sp)
--    800001fa:	6446                	ld	s0,80(sp)
--    800001fc:	64a6                	ld	s1,72(sp)
--    800001fe:	6906                	ld	s2,64(sp)
--    80000200:	79e2                	ld	s3,56(sp)
--    80000202:	7a42                	ld	s4,48(sp)
--    80000204:	7aa2                	ld	s5,40(sp)
--    80000206:	7b02                	ld	s6,32(sp)
--    80000208:	6125                	addi	sp,sp,96
--    8000020a:	8082                	ret
-+    800001e8:	413b053b          	subw	a0,s6,s3
-+    800001ec:	a801                	j	800001fc <consoleread+0xd0>
-+        release(&cons.lock);
-+    800001ee:	0000f517          	auipc	a0,0xf
-+    800001f2:	72250513          	add	a0,a0,1826 # 8000f910 <cons>
-+    800001f6:	243000ef          	jal	80000c38 <release>
-+        return -1;
-+    800001fa:	557d                	li	a0,-1
-+}
-+    800001fc:	60e6                	ld	ra,88(sp)
-+    800001fe:	6446                	ld	s0,80(sp)
-+    80000200:	64a6                	ld	s1,72(sp)
-+    80000202:	6906                	ld	s2,64(sp)
-+    80000204:	79e2                	ld	s3,56(sp)
-+    80000206:	7a42                	ld	s4,48(sp)
-+    80000208:	7aa2                	ld	s5,40(sp)
-+    8000020a:	7b02                	ld	s6,32(sp)
-+    8000020c:	6be2                	ld	s7,24(sp)
-+    8000020e:	6125                	add	sp,sp,96
-+    80000210:	8082                	ret
-       if(n < target){
--    8000020c:	0009871b          	sext.w	a4,s3
--    80000210:	01677a63          	bgeu	a4,s6,80000224 <consoleread+0xee>
-+    80000212:	0009871b          	sext.w	a4,s3
-+    80000216:	fd6773e3          	bgeu	a4,s6,800001dc <consoleread+0xb0>
-         cons.r--;
--    80000214:	00012717          	auipc	a4,0x12
--    80000218:	08f72223          	sw	a5,132(a4) # 80012298 <cons+0x98>
--    8000021c:	6be2                	ld	s7,24(sp)
--    8000021e:	a031                	j	8000022a <consoleread+0xf4>
--    80000220:	ec5e                	sd	s7,24(sp)
--    80000222:	bfbd                	j	800001a0 <consoleread+0x6a>
--    80000224:	6be2                	ld	s7,24(sp)
--    80000226:	a011                	j	8000022a <consoleread+0xf4>
--    80000228:	6be2                	ld	s7,24(sp)
--  release(&cons.lock);
--    8000022a:	00012517          	auipc	a0,0x12
--    8000022e:	fd650513          	addi	a0,a0,-42 # 80012200 <cons>
--    80000232:	25b000ef          	jal	80000c8c <release>
--  return target - n;
--    80000236:	413b053b          	subw	a0,s6,s3
--    8000023a:	bf7d                	j	800001f8 <consoleread+0xc2>
--    8000023c:	6be2                	ld	s7,24(sp)
--    8000023e:	b7f5                	j	8000022a <consoleread+0xf4>
-+    8000021a:	0000f717          	auipc	a4,0xf
-+    8000021e:	78f72723          	sw	a5,1934(a4) # 8000f9a8 <cons+0x98>
-+    80000222:	bf6d                	j	800001dc <consoleread+0xb0>
- 
--0000000080000240 <consputc>:
-+0000000080000224 <consputc>:
- {
--    80000240:	1141                	addi	sp,sp,-16
--    80000242:	e406                	sd	ra,8(sp)
--    80000244:	e022                	sd	s0,0(sp)
--    80000246:	0800                	addi	s0,sp,16
-+    80000224:	1141                	add	sp,sp,-16
-+    80000226:	e406                	sd	ra,8(sp)
-+    80000228:	e022                	sd	s0,0(sp)
-+    8000022a:	0800                	add	s0,sp,16
-   if(c == BACKSPACE){
--    80000248:	10000793          	li	a5,256
--    8000024c:	00f50863          	beq	a0,a5,8000025c <consputc+0x1c>
-+    8000022c:	10000793          	li	a5,256
-+    80000230:	00f50863          	beq	a0,a5,80000240 <consputc+0x1c>
-     uartputc_sync(c);
--    80000250:	604000ef          	jal	80000854 <uartputc_sync>
-+    80000234:	5de000ef          	jal	80000812 <uartputc_sync>
- }
--    80000254:	60a2                	ld	ra,8(sp)
--    80000256:	6402                	ld	s0,0(sp)
--    80000258:	0141                	addi	sp,sp,16
--    8000025a:	8082                	ret
-+    80000238:	60a2                	ld	ra,8(sp)
-+    8000023a:	6402                	ld	s0,0(sp)
-+    8000023c:	0141                	add	sp,sp,16
-+    8000023e:	8082                	ret
-     uartputc_sync('\b'); uartputc_sync(' '); uartputc_sync('\b');
--    8000025c:	4521                	li	a0,8
--    8000025e:	5f6000ef          	jal	80000854 <uartputc_sync>
--    80000262:	02000513          	li	a0,32
--    80000266:	5ee000ef          	jal	80000854 <uartputc_sync>
--    8000026a:	4521                	li	a0,8
--    8000026c:	5e8000ef          	jal	80000854 <uartputc_sync>
--    80000270:	b7d5                	j	80000254 <consputc+0x14>
--
--0000000080000272 <consoleintr>:
-+    80000240:	4521                	li	a0,8
-+    80000242:	5d0000ef          	jal	80000812 <uartputc_sync>
-+    80000246:	02000513          	li	a0,32
-+    8000024a:	5c8000ef          	jal	80000812 <uartputc_sync>
-+    8000024e:	4521                	li	a0,8
-+    80000250:	5c2000ef          	jal	80000812 <uartputc_sync>
-+    80000254:	b7d5                	j	80000238 <consputc+0x14>
-+
-+0000000080000256 <consoleintr>:
- /* do erase/kill processing, append to cons.buf, */
- /* wake up consoleread() if a whole line has arrived. */
- /* */
- void
- consoleintr(int c)
- {
--    80000272:	1101                	addi	sp,sp,-32
--    80000274:	ec06                	sd	ra,24(sp)
--    80000276:	e822                	sd	s0,16(sp)
--    80000278:	e426                	sd	s1,8(sp)
--    8000027a:	1000                	addi	s0,sp,32
--    8000027c:	84aa                	mv	s1,a0
-+    80000256:	1101                	add	sp,sp,-32
-+    80000258:	ec06                	sd	ra,24(sp)
-+    8000025a:	e822                	sd	s0,16(sp)
-+    8000025c:	e426                	sd	s1,8(sp)
-+    8000025e:	e04a                	sd	s2,0(sp)
-+    80000260:	1000                	add	s0,sp,32
-+    80000262:	84aa                	mv	s1,a0
-   acquire(&cons.lock);
--    8000027e:	00012517          	auipc	a0,0x12
--    80000282:	f8250513          	addi	a0,a0,-126 # 80012200 <cons>
--    80000286:	16f000ef          	jal	80000bf4 <acquire>
-+    80000264:	0000f517          	auipc	a0,0xf
-+    80000268:	6ac50513          	add	a0,a0,1708 # 8000f910 <cons>
-+    8000026c:	135000ef          	jal	80000ba0 <acquire>
- 
-   switch(c){
--    8000028a:	47d5                	li	a5,21
--    8000028c:	08f48f63          	beq	s1,a5,8000032a <consoleintr+0xb8>
--    80000290:	0297c563          	blt	a5,s1,800002ba <consoleintr+0x48>
--    80000294:	47a1                	li	a5,8
--    80000296:	0ef48463          	beq	s1,a5,8000037e <consoleintr+0x10c>
--    8000029a:	47c1                	li	a5,16
--    8000029c:	10f49563          	bne	s1,a5,800003a6 <consoleintr+0x134>
-+    80000270:	47d5                	li	a5,21
-+    80000272:	0af48063          	beq	s1,a5,80000312 <consoleintr+0xbc>
-+    80000276:	0297c663          	blt	a5,s1,800002a2 <consoleintr+0x4c>
-+    8000027a:	47a1                	li	a5,8
-+    8000027c:	0cf48f63          	beq	s1,a5,8000035a <consoleintr+0x104>
-+    80000280:	47c1                	li	a5,16
-+    80000282:	10f49063          	bne	s1,a5,80000382 <consoleintr+0x12c>
-   case C('P'):  /* Print process list. */
-     procdump();
--    800002a0:	7ff010ef          	jal	8000229e <procdump>
-+    80000286:	767010ef          	jal	800021ec <procdump>
-       }
-     }
-     break;
-   }
-   
-   release(&cons.lock);
--    800002a4:	00012517          	auipc	a0,0x12
--    800002a8:	f5c50513          	addi	a0,a0,-164 # 80012200 <cons>
--    800002ac:	1e1000ef          	jal	80000c8c <release>
--}
--    800002b0:	60e2                	ld	ra,24(sp)
--    800002b2:	6442                	ld	s0,16(sp)
--    800002b4:	64a2                	ld	s1,8(sp)
--    800002b6:	6105                	addi	sp,sp,32
--    800002b8:	8082                	ret
-+    8000028a:	0000f517          	auipc	a0,0xf
-+    8000028e:	68650513          	add	a0,a0,1670 # 8000f910 <cons>
-+    80000292:	1a7000ef          	jal	80000c38 <release>
-+}
-+    80000296:	60e2                	ld	ra,24(sp)
-+    80000298:	6442                	ld	s0,16(sp)
-+    8000029a:	64a2                	ld	s1,8(sp)
-+    8000029c:	6902                	ld	s2,0(sp)
-+    8000029e:	6105                	add	sp,sp,32
-+    800002a0:	8082                	ret
-   switch(c){
--    800002ba:	07f00793          	li	a5,127
--    800002be:	0cf48063          	beq	s1,a5,8000037e <consoleintr+0x10c>
-+    800002a2:	07f00793          	li	a5,127
-+    800002a6:	0af48a63          	beq	s1,a5,8000035a <consoleintr+0x104>
-     if(c != 0 && cons.e-cons.r < INPUT_BUF_SIZE){
--    800002c2:	00012717          	auipc	a4,0x12
--    800002c6:	f3e70713          	addi	a4,a4,-194 # 80012200 <cons>
--    800002ca:	0a072783          	lw	a5,160(a4)
--    800002ce:	09872703          	lw	a4,152(a4)
--    800002d2:	9f99                	subw	a5,a5,a4
--    800002d4:	07f00713          	li	a4,127
--    800002d8:	fcf766e3          	bltu	a4,a5,800002a4 <consoleintr+0x32>
-+    800002aa:	0000f717          	auipc	a4,0xf
-+    800002ae:	66670713          	add	a4,a4,1638 # 8000f910 <cons>
-+    800002b2:	0a072783          	lw	a5,160(a4)
-+    800002b6:	09872703          	lw	a4,152(a4)
-+    800002ba:	9f99                	subw	a5,a5,a4
-+    800002bc:	07f00713          	li	a4,127
-+    800002c0:	fcf765e3          	bltu	a4,a5,8000028a <consoleintr+0x34>
-       c = (c == '\r') ? '\n' : c;
--    800002dc:	47b5                	li	a5,13
--    800002de:	0cf48763          	beq	s1,a5,800003ac <consoleintr+0x13a>
-+    800002c4:	47b5                	li	a5,13
-+    800002c6:	0cf48163          	beq	s1,a5,80000388 <consoleintr+0x132>
-       consputc(c);
--    800002e2:	8526                	mv	a0,s1
--    800002e4:	f5dff0ef          	jal	80000240 <consputc>
-+    800002ca:	8526                	mv	a0,s1
-+    800002cc:	f59ff0ef          	jal	80000224 <consputc>
-       cons.buf[cons.e++ % INPUT_BUF_SIZE] = c;
--    800002e8:	00012797          	auipc	a5,0x12
--    800002ec:	f1878793          	addi	a5,a5,-232 # 80012200 <cons>
--    800002f0:	0a07a683          	lw	a3,160(a5)
--    800002f4:	0016871b          	addiw	a4,a3,1
--    800002f8:	0007061b          	sext.w	a2,a4
--    800002fc:	0ae7a023          	sw	a4,160(a5)
--    80000300:	07f6f693          	andi	a3,a3,127
--    80000304:	97b6                	add	a5,a5,a3
--    80000306:	00978c23          	sb	s1,24(a5)
-+    800002d0:	0000f797          	auipc	a5,0xf
-+    800002d4:	64078793          	add	a5,a5,1600 # 8000f910 <cons>
-+    800002d8:	0a07a683          	lw	a3,160(a5)
-+    800002dc:	0016871b          	addw	a4,a3,1
-+    800002e0:	0007061b          	sext.w	a2,a4
-+    800002e4:	0ae7a023          	sw	a4,160(a5)
-+    800002e8:	07f6f693          	and	a3,a3,127
-+    800002ec:	97b6                	add	a5,a5,a3
-+    800002ee:	00978c23          	sb	s1,24(a5)
-       if(c == '\n' || c == C('D') || cons.e-cons.r == INPUT_BUF_SIZE){
--    8000030a:	47a9                	li	a5,10
--    8000030c:	0cf48563          	beq	s1,a5,800003d6 <consoleintr+0x164>
--    80000310:	4791                	li	a5,4
--    80000312:	0cf48263          	beq	s1,a5,800003d6 <consoleintr+0x164>
--    80000316:	00012797          	auipc	a5,0x12
--    8000031a:	f827a783          	lw	a5,-126(a5) # 80012298 <cons+0x98>
--    8000031e:	9f1d                	subw	a4,a4,a5
--    80000320:	08000793          	li	a5,128
--    80000324:	f8f710e3          	bne	a4,a5,800002a4 <consoleintr+0x32>
--    80000328:	a07d                	j	800003d6 <consoleintr+0x164>
--    8000032a:	e04a                	sd	s2,0(sp)
-+    800002f2:	47a9                	li	a5,10
-+    800002f4:	0af48f63          	beq	s1,a5,800003b2 <consoleintr+0x15c>
-+    800002f8:	4791                	li	a5,4
-+    800002fa:	0af48c63          	beq	s1,a5,800003b2 <consoleintr+0x15c>
-+    800002fe:	0000f797          	auipc	a5,0xf
-+    80000302:	6aa7a783          	lw	a5,1706(a5) # 8000f9a8 <cons+0x98>
-+    80000306:	9f1d                	subw	a4,a4,a5
-+    80000308:	08000793          	li	a5,128
-+    8000030c:	f6f71fe3          	bne	a4,a5,8000028a <consoleintr+0x34>
-+    80000310:	a04d                	j	800003b2 <consoleintr+0x15c>
-     while(cons.e != cons.w &&
--    8000032c:	00012717          	auipc	a4,0x12
--    80000330:	ed470713          	addi	a4,a4,-300 # 80012200 <cons>
--    80000334:	0a072783          	lw	a5,160(a4)
--    80000338:	09c72703          	lw	a4,156(a4)
-+    80000312:	0000f717          	auipc	a4,0xf
-+    80000316:	5fe70713          	add	a4,a4,1534 # 8000f910 <cons>
-+    8000031a:	0a072783          	lw	a5,160(a4)
-+    8000031e:	09c72703          	lw	a4,156(a4)
-           cons.buf[(cons.e-1) % INPUT_BUF_SIZE] != '\n'){
--    8000033c:	00012497          	auipc	s1,0x12
--    80000340:	ec448493          	addi	s1,s1,-316 # 80012200 <cons>
-+    80000322:	0000f497          	auipc	s1,0xf
-+    80000326:	5ee48493          	add	s1,s1,1518 # 8000f910 <cons>
-     while(cons.e != cons.w &&
--    80000344:	4929                	li	s2,10
--    80000346:	02f70863          	beq	a4,a5,80000376 <consoleintr+0x104>
-+    8000032a:	4929                	li	s2,10
-+    8000032c:	f4f70fe3          	beq	a4,a5,8000028a <consoleintr+0x34>
-           cons.buf[(cons.e-1) % INPUT_BUF_SIZE] != '\n'){
--    8000034a:	37fd                	addiw	a5,a5,-1
--    8000034c:	07f7f713          	andi	a4,a5,127
--    80000350:	9726                	add	a4,a4,s1
-+    80000330:	37fd                	addw	a5,a5,-1
-+    80000332:	07f7f713          	and	a4,a5,127
-+    80000336:	9726                	add	a4,a4,s1
-     while(cons.e != cons.w &&
--    80000352:	01874703          	lbu	a4,24(a4)
--    80000356:	03270263          	beq	a4,s2,8000037a <consoleintr+0x108>
-+    80000338:	01874703          	lbu	a4,24(a4)
-+    8000033c:	f52707e3          	beq	a4,s2,8000028a <consoleintr+0x34>
-       cons.e--;
--    8000035a:	0af4a023          	sw	a5,160(s1)
-+    80000340:	0af4a023          	sw	a5,160(s1)
-       consputc(BACKSPACE);
--    8000035e:	10000513          	li	a0,256
--    80000362:	edfff0ef          	jal	80000240 <consputc>
-+    80000344:	10000513          	li	a0,256
-+    80000348:	eddff0ef          	jal	80000224 <consputc>
-     while(cons.e != cons.w &&
--    80000366:	0a04a783          	lw	a5,160(s1)
--    8000036a:	09c4a703          	lw	a4,156(s1)
--    8000036e:	fcf71ee3          	bne	a4,a5,8000034a <consoleintr+0xd8>
--    80000372:	6902                	ld	s2,0(sp)
--    80000374:	bf05                	j	800002a4 <consoleintr+0x32>
--    80000376:	6902                	ld	s2,0(sp)
--    80000378:	b735                	j	800002a4 <consoleintr+0x32>
--    8000037a:	6902                	ld	s2,0(sp)
--    8000037c:	b725                	j	800002a4 <consoleintr+0x32>
-+    8000034c:	0a04a783          	lw	a5,160(s1)
-+    80000350:	09c4a703          	lw	a4,156(s1)
-+    80000354:	fcf71ee3          	bne	a4,a5,80000330 <consoleintr+0xda>
-+    80000358:	bf0d                	j	8000028a <consoleintr+0x34>
-     if(cons.e != cons.w){
--    8000037e:	00012717          	auipc	a4,0x12
--    80000382:	e8270713          	addi	a4,a4,-382 # 80012200 <cons>
--    80000386:	0a072783          	lw	a5,160(a4)
--    8000038a:	09c72703          	lw	a4,156(a4)
--    8000038e:	f0f70be3          	beq	a4,a5,800002a4 <consoleintr+0x32>
-+    8000035a:	0000f717          	auipc	a4,0xf
-+    8000035e:	5b670713          	add	a4,a4,1462 # 8000f910 <cons>
-+    80000362:	0a072783          	lw	a5,160(a4)
-+    80000366:	09c72703          	lw	a4,156(a4)
-+    8000036a:	f2f700e3          	beq	a4,a5,8000028a <consoleintr+0x34>
-       cons.e--;
--    80000392:	37fd                	addiw	a5,a5,-1
--    80000394:	00012717          	auipc	a4,0x12
--    80000398:	f0f72623          	sw	a5,-244(a4) # 800122a0 <cons+0xa0>
-+    8000036e:	37fd                	addw	a5,a5,-1
-+    80000370:	0000f717          	auipc	a4,0xf
-+    80000374:	64f72023          	sw	a5,1600(a4) # 8000f9b0 <cons+0xa0>
-       consputc(BACKSPACE);
--    8000039c:	10000513          	li	a0,256
--    800003a0:	ea1ff0ef          	jal	80000240 <consputc>
--    800003a4:	b701                	j	800002a4 <consoleintr+0x32>
-+    80000378:	10000513          	li	a0,256
-+    8000037c:	ea9ff0ef          	jal	80000224 <consputc>
-+    80000380:	b729                	j	8000028a <consoleintr+0x34>
-     if(c != 0 && cons.e-cons.r < INPUT_BUF_SIZE){
--    800003a6:	ee048fe3          	beqz	s1,800002a4 <consoleintr+0x32>
--    800003aa:	bf21                	j	800002c2 <consoleintr+0x50>
-+    80000382:	f00484e3          	beqz	s1,8000028a <consoleintr+0x34>
-+    80000386:	b715                	j	800002aa <consoleintr+0x54>
-       consputc(c);
--    800003ac:	4529                	li	a0,10
--    800003ae:	e93ff0ef          	jal	80000240 <consputc>
-+    80000388:	4529                	li	a0,10
-+    8000038a:	e9bff0ef          	jal	80000224 <consputc>
-       cons.buf[cons.e++ % INPUT_BUF_SIZE] = c;
--    800003b2:	00012797          	auipc	a5,0x12
--    800003b6:	e4e78793          	addi	a5,a5,-434 # 80012200 <cons>
--    800003ba:	0a07a703          	lw	a4,160(a5)
--    800003be:	0017069b          	addiw	a3,a4,1
--    800003c2:	0006861b          	sext.w	a2,a3
--    800003c6:	0ad7a023          	sw	a3,160(a5)
--    800003ca:	07f77713          	andi	a4,a4,127
--    800003ce:	97ba                	add	a5,a5,a4
--    800003d0:	4729                	li	a4,10
--    800003d2:	00e78c23          	sb	a4,24(a5)
-+    8000038e:	0000f797          	auipc	a5,0xf
-+    80000392:	58278793          	add	a5,a5,1410 # 8000f910 <cons>
-+    80000396:	0a07a703          	lw	a4,160(a5)
-+    8000039a:	0017069b          	addw	a3,a4,1
-+    8000039e:	0006861b          	sext.w	a2,a3
-+    800003a2:	0ad7a023          	sw	a3,160(a5)
-+    800003a6:	07f77713          	and	a4,a4,127
-+    800003aa:	97ba                	add	a5,a5,a4
-+    800003ac:	4729                	li	a4,10
-+    800003ae:	00e78c23          	sb	a4,24(a5)
-         cons.w = cons.e;
--    800003d6:	00012797          	auipc	a5,0x12
--    800003da:	ecc7a323          	sw	a2,-314(a5) # 8001229c <cons+0x9c>
-+    800003b2:	0000f797          	auipc	a5,0xf
-+    800003b6:	5ec7ad23          	sw	a2,1530(a5) # 8000f9ac <cons+0x9c>
-         wakeup(&cons.r);
--    800003de:	00012517          	auipc	a0,0x12
--    800003e2:	eba50513          	addi	a0,a0,-326 # 80012298 <cons+0x98>
--    800003e6:	315010ef          	jal	80001efa <wakeup>
--    800003ea:	bd6d                	j	800002a4 <consoleintr+0x32>
-+    800003ba:	0000f517          	auipc	a0,0xf
-+    800003be:	5ee50513          	add	a0,a0,1518 # 8000f9a8 <cons+0x98>
-+    800003c2:	287010ef          	jal	80001e48 <wakeup>
-+    800003c6:	b5d1                	j	8000028a <consoleintr+0x34>
- 
--00000000800003ec <consoleinit>:
-+00000000800003c8 <consoleinit>:
- 
- void
- consoleinit(void)
- {
--    800003ec:	1141                	addi	sp,sp,-16
--    800003ee:	e406                	sd	ra,8(sp)
--    800003f0:	e022                	sd	s0,0(sp)
--    800003f2:	0800                	addi	s0,sp,16
-+    800003c8:	1141                	add	sp,sp,-16
-+    800003ca:	e406                	sd	ra,8(sp)
-+    800003cc:	e022                	sd	s0,0(sp)
-+    800003ce:	0800                	add	s0,sp,16
-   initlock(&cons.lock, "cons");
--    800003f4:	00007597          	auipc	a1,0x7
--    800003f8:	c0c58593          	addi	a1,a1,-1012 # 80007000 <etext>
--    800003fc:	00012517          	auipc	a0,0x12
--    80000400:	e0450513          	addi	a0,a0,-508 # 80012200 <cons>
--    80000404:	770000ef          	jal	80000b74 <initlock>
-+    800003d0:	00007597          	auipc	a1,0x7
-+    800003d4:	c4058593          	add	a1,a1,-960 # 80007010 <etext+0x10>
-+    800003d8:	0000f517          	auipc	a0,0xf
-+    800003dc:	53850513          	add	a0,a0,1336 # 8000f910 <cons>
-+    800003e0:	740000ef          	jal	80000b20 <initlock>
- 
-   uartinit();
--    80000408:	3f4000ef          	jal	800007fc <uartinit>
-+    800003e4:	3e2000ef          	jal	800007c6 <uartinit>
- 
-   /* connect read and write system calls */
-   /* to consoleread and consolewrite. */
-   devsw[CONSOLE].read = consoleread;
--    8000040c:	00022797          	auipc	a5,0x22
--    80000410:	f8c78793          	addi	a5,a5,-116 # 80022398 <devsw>
--    80000414:	00000717          	auipc	a4,0x0
--    80000418:	d2270713          	addi	a4,a4,-734 # 80000136 <consoleread>
--    8000041c:	eb98                	sd	a4,16(a5)
-+    800003e8:	0001f797          	auipc	a5,0x1f
-+    800003ec:	6c078793          	add	a5,a5,1728 # 8001faa8 <devsw>
-+    800003f0:	00000717          	auipc	a4,0x0
-+    800003f4:	d3c70713          	add	a4,a4,-708 # 8000012c <consoleread>
-+    800003f8:	eb98                	sd	a4,16(a5)
-   devsw[CONSOLE].write = consolewrite;
--    8000041e:	00000717          	auipc	a4,0x0
--    80000422:	cb270713          	addi	a4,a4,-846 # 800000d0 <consolewrite>
--    80000426:	ef98                	sd	a4,24(a5)
-+    800003fa:	00000717          	auipc	a4,0x0
-+    800003fe:	cd670713          	add	a4,a4,-810 # 800000d0 <consolewrite>
-+    80000402:	ef98                	sd	a4,24(a5)
- }
--    80000428:	60a2                	ld	ra,8(sp)
--    8000042a:	6402                	ld	s0,0(sp)
--    8000042c:	0141                	addi	sp,sp,16
--    8000042e:	8082                	ret
-+    80000404:	60a2                	ld	ra,8(sp)
-+    80000406:	6402                	ld	s0,0(sp)
-+    80000408:	0141                	add	sp,sp,16
-+    8000040a:	8082                	ret
- 
--0000000080000430 <printint>:
-+000000008000040c <printint>:
- 
- static char digits[] = "0123456789abcdef";
- 
- static void
- printint(long long xx, int base, int sign)
- {
--    80000430:	7179                	addi	sp,sp,-48
--    80000432:	f406                	sd	ra,40(sp)
--    80000434:	f022                	sd	s0,32(sp)
--    80000436:	1800                	addi	s0,sp,48
-+    8000040c:	7179                	add	sp,sp,-48
-+    8000040e:	f406                	sd	ra,40(sp)
-+    80000410:	f022                	sd	s0,32(sp)
-+    80000412:	ec26                	sd	s1,24(sp)
-+    80000414:	e84a                	sd	s2,16(sp)
-+    80000416:	1800                	add	s0,sp,48
-   char buf[16];
-   int i;
-   unsigned long long x;
- 
-   if(sign && (sign = (xx < 0)))
--    80000438:	c219                	beqz	a2,8000043e <printint+0xe>
--    8000043a:	08054063          	bltz	a0,800004ba <printint+0x8a>
-+    80000418:	c219                	beqz	a2,8000041e <printint+0x12>
-+    8000041a:	06054e63          	bltz	a0,80000496 <printint+0x8a>
-     x = -xx;
-   else
-     x = xx;
--    8000043e:	4881                	li	a7,0
--    80000440:	fd040693          	addi	a3,s0,-48
-+    8000041e:	4881                	li	a7,0
-+    80000420:	fd040693          	add	a3,s0,-48
- 
-   i = 0;
--    80000444:	4781                	li	a5,0
-+    80000424:	4781                	li	a5,0
-   do {
-     buf[i++] = digits[x % base];
--    80000446:	00007617          	auipc	a2,0x7
--    8000044a:	32a60613          	addi	a2,a2,810 # 80007770 <digits>
--    8000044e:	883e                	mv	a6,a5
--    80000450:	2785                	addiw	a5,a5,1
--    80000452:	02b57733          	remu	a4,a0,a1
--    80000456:	9732                	add	a4,a4,a2
--    80000458:	00074703          	lbu	a4,0(a4)
--    8000045c:	00e68023          	sb	a4,0(a3)
-+    80000426:	00007617          	auipc	a2,0x7
-+    8000042a:	c1260613          	add	a2,a2,-1006 # 80007038 <digits>
-+    8000042e:	883e                	mv	a6,a5
-+    80000430:	2785                	addw	a5,a5,1
-+    80000432:	02b57733          	remu	a4,a0,a1
-+    80000436:	9732                	add	a4,a4,a2
-+    80000438:	00074703          	lbu	a4,0(a4)
-+    8000043c:	00e68023          	sb	a4,0(a3)
-   } while((x /= base) != 0);
--    80000460:	872a                	mv	a4,a0
--    80000462:	02b55533          	divu	a0,a0,a1
--    80000466:	0685                	addi	a3,a3,1
--    80000468:	feb773e3          	bgeu	a4,a1,8000044e <printint+0x1e>
-+    80000440:	872a                	mv	a4,a0
-+    80000442:	02b55533          	divu	a0,a0,a1
-+    80000446:	0685                	add	a3,a3,1
-+    80000448:	feb773e3          	bgeu	a4,a1,8000042e <printint+0x22>
- 
-   if(sign)
--    8000046c:	00088a63          	beqz	a7,80000480 <printint+0x50>
-+    8000044c:	00088a63          	beqz	a7,80000460 <printint+0x54>
-     buf[i++] = '-';
--    80000470:	1781                	addi	a5,a5,-32
--    80000472:	97a2                	add	a5,a5,s0
--    80000474:	02d00713          	li	a4,45
--    80000478:	fee78823          	sb	a4,-16(a5)
--    8000047c:	0028079b          	addiw	a5,a6,2
-+    80000450:	1781                	add	a5,a5,-32
-+    80000452:	97a2                	add	a5,a5,s0
-+    80000454:	02d00713          	li	a4,45
-+    80000458:	fee78823          	sb	a4,-16(a5)
-+    8000045c:	0028079b          	addw	a5,a6,2
- 
-   while(--i >= 0)
--    80000480:	02f05963          	blez	a5,800004b2 <printint+0x82>
--    80000484:	ec26                	sd	s1,24(sp)
--    80000486:	e84a                	sd	s2,16(sp)
--    80000488:	fd040713          	addi	a4,s0,-48
--    8000048c:	00f704b3          	add	s1,a4,a5
--    80000490:	fff70913          	addi	s2,a4,-1
--    80000494:	993e                	add	s2,s2,a5
--    80000496:	37fd                	addiw	a5,a5,-1
--    80000498:	1782                	slli	a5,a5,0x20
--    8000049a:	9381                	srli	a5,a5,0x20
--    8000049c:	40f90933          	sub	s2,s2,a5
-+    80000460:	02f05563          	blez	a5,8000048a <printint+0x7e>
-+    80000464:	fd040713          	add	a4,s0,-48
-+    80000468:	00f704b3          	add	s1,a4,a5
-+    8000046c:	fff70913          	add	s2,a4,-1
-+    80000470:	993e                	add	s2,s2,a5
-+    80000472:	37fd                	addw	a5,a5,-1
-+    80000474:	1782                	sll	a5,a5,0x20
-+    80000476:	9381                	srl	a5,a5,0x20
-+    80000478:	40f90933          	sub	s2,s2,a5
-     consputc(buf[i]);
--    800004a0:	fff4c503          	lbu	a0,-1(s1)
--    800004a4:	d9dff0ef          	jal	80000240 <consputc>
-+    8000047c:	fff4c503          	lbu	a0,-1(s1)
-+    80000480:	da5ff0ef          	jal	80000224 <consputc>
-   while(--i >= 0)
--    800004a8:	14fd                	addi	s1,s1,-1
--    800004aa:	ff249be3          	bne	s1,s2,800004a0 <printint+0x70>
--    800004ae:	64e2                	ld	s1,24(sp)
--    800004b0:	6942                	ld	s2,16(sp)
--}
--    800004b2:	70a2                	ld	ra,40(sp)
--    800004b4:	7402                	ld	s0,32(sp)
--    800004b6:	6145                	addi	sp,sp,48
--    800004b8:	8082                	ret
-+    80000484:	14fd                	add	s1,s1,-1
-+    80000486:	ff249be3          	bne	s1,s2,8000047c <printint+0x70>
-+}
-+    8000048a:	70a2                	ld	ra,40(sp)
-+    8000048c:	7402                	ld	s0,32(sp)
-+    8000048e:	64e2                	ld	s1,24(sp)
-+    80000490:	6942                	ld	s2,16(sp)
-+    80000492:	6145                	add	sp,sp,48
-+    80000494:	8082                	ret
-     x = -xx;
--    800004ba:	40a00533          	neg	a0,a0
-+    80000496:	40a00533          	neg	a0,a0
-   if(sign && (sign = (xx < 0)))
--    800004be:	4885                	li	a7,1
-+    8000049a:	4885                	li	a7,1
-     x = -xx;
--    800004c0:	b741                	j	80000440 <printint+0x10>
-+    8000049c:	b751                	j	80000420 <printint+0x14>
- 
--00000000800004c2 <printf>:
-+000000008000049e <printf>:
- }
- 
- /* Print to the console. */
- int
- printf(char *fmt, ...)
- {
--    800004c2:	7155                	addi	sp,sp,-208
--    800004c4:	e506                	sd	ra,136(sp)
--    800004c6:	e122                	sd	s0,128(sp)
--    800004c8:	f0d2                	sd	s4,96(sp)
--    800004ca:	0900                	addi	s0,sp,144
--    800004cc:	8a2a                	mv	s4,a0
--    800004ce:	e40c                	sd	a1,8(s0)
--    800004d0:	e810                	sd	a2,16(s0)
--    800004d2:	ec14                	sd	a3,24(s0)
--    800004d4:	f018                	sd	a4,32(s0)
--    800004d6:	f41c                	sd	a5,40(s0)
--    800004d8:	03043823          	sd	a6,48(s0)
--    800004dc:	03143c23          	sd	a7,56(s0)
-+    8000049e:	7155                	add	sp,sp,-208
-+    800004a0:	e506                	sd	ra,136(sp)
-+    800004a2:	e122                	sd	s0,128(sp)
-+    800004a4:	fca6                	sd	s1,120(sp)
-+    800004a6:	f8ca                	sd	s2,112(sp)
-+    800004a8:	f4ce                	sd	s3,104(sp)
-+    800004aa:	f0d2                	sd	s4,96(sp)
-+    800004ac:	ecd6                	sd	s5,88(sp)
-+    800004ae:	e8da                	sd	s6,80(sp)
-+    800004b0:	e4de                	sd	s7,72(sp)
-+    800004b2:	e0e2                	sd	s8,64(sp)
-+    800004b4:	fc66                	sd	s9,56(sp)
-+    800004b6:	f86a                	sd	s10,48(sp)
-+    800004b8:	f46e                	sd	s11,40(sp)
-+    800004ba:	0900                	add	s0,sp,144
-+    800004bc:	8a2a                	mv	s4,a0
-+    800004be:	e40c                	sd	a1,8(s0)
-+    800004c0:	e810                	sd	a2,16(s0)
-+    800004c2:	ec14                	sd	a3,24(s0)
-+    800004c4:	f018                	sd	a4,32(s0)
-+    800004c6:	f41c                	sd	a5,40(s0)
-+    800004c8:	03043823          	sd	a6,48(s0)
-+    800004cc:	03143c23          	sd	a7,56(s0)
-   va_list ap;
-   int i, cx, c0, c1, c2, locking;
-   char *s;
- 
-   locking = pr.locking;
--    800004e0:	00012797          	auipc	a5,0x12
--    800004e4:	de07a783          	lw	a5,-544(a5) # 800122c0 <pr+0x18>
--    800004e8:	f6f43c23          	sd	a5,-136(s0)
-+    800004d0:	0000f797          	auipc	a5,0xf
-+    800004d4:	5007a783          	lw	a5,1280(a5) # 8000f9d0 <pr+0x18>
-+    800004d8:	f6f43c23          	sd	a5,-136(s0)
-   if(locking)
--    800004ec:	e3a1                	bnez	a5,8000052c <printf+0x6a>
-+    800004dc:	e79d                	bnez	a5,8000050a <printf+0x6c>
-     acquire(&pr.lock);
- 
-   va_start(ap, fmt);
--    800004ee:	00840793          	addi	a5,s0,8
--    800004f2:	f8f43423          	sd	a5,-120(s0)
-+    800004de:	00840793          	add	a5,s0,8
-+    800004e2:	f8f43423          	sd	a5,-120(s0)
-   for(i = 0; (cx = fmt[i] & 0xff) != 0; i++){
--    800004f6:	00054503          	lbu	a0,0(a0)
--    800004fa:	26050763          	beqz	a0,80000768 <printf+0x2a6>
--    800004fe:	fca6                	sd	s1,120(sp)
--    80000500:	f8ca                	sd	s2,112(sp)
--    80000502:	f4ce                	sd	s3,104(sp)
--    80000504:	ecd6                	sd	s5,88(sp)
--    80000506:	e8da                	sd	s6,80(sp)
--    80000508:	e0e2                	sd	s8,64(sp)
--    8000050a:	fc66                	sd	s9,56(sp)
--    8000050c:	f86a                	sd	s10,48(sp)
--    8000050e:	f46e                	sd	s11,40(sp)
--    80000510:	4981                	li	s3,0
-+    800004e6:	00054503          	lbu	a0,0(a0)
-+    800004ea:	24050a63          	beqz	a0,8000073e <printf+0x2a0>
-+    800004ee:	4981                	li	s3,0
-     if(cx != '%'){
--    80000512:	02500a93          	li	s5,37
-+    800004f0:	02500a93          	li	s5,37
-     i++;
-     c0 = fmt[i+0] & 0xff;
-     c1 = c2 = 0;
-     if(c0) c1 = fmt[i+1] & 0xff;
-     if(c1) c2 = fmt[i+2] & 0xff;
-     if(c0 == 'd'){
--    80000516:	06400b13          	li	s6,100
-+    800004f4:	06400b13          	li	s6,100
-       printint(va_arg(ap, int), 10, 1);
-     } else if(c0 == 'l' && c1 == 'd'){
--    8000051a:	06c00c13          	li	s8,108
-+    800004f8:	06c00c13          	li	s8,108
-       printint(va_arg(ap, uint64), 10, 1);
-       i += 1;
-     } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-       printint(va_arg(ap, uint64), 10, 1);
-       i += 2;
-     } else if(c0 == 'u'){
--    8000051e:	07500c93          	li	s9,117
-+    800004fc:	07500c93          	li	s9,117
-       printint(va_arg(ap, uint64), 10, 0);
-       i += 1;
-     } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-       printint(va_arg(ap, uint64), 10, 0);
-       i += 2;
-     } else if(c0 == 'x'){
--    80000522:	07800d13          	li	s10,120
-+    80000500:	07800d13          	li	s10,120
-       printint(va_arg(ap, uint64), 16, 0);
-       i += 1;
-     } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-       printint(va_arg(ap, uint64), 16, 0);
-       i += 2;
-     } else if(c0 == 'p'){
--    80000526:	07000d93          	li	s11,112
--    8000052a:	a815                	j	8000055e <printf+0x9c>
-+    80000504:	07000d93          	li	s11,112
-+    80000508:	a081                	j	80000548 <printf+0xaa>
-     acquire(&pr.lock);
--    8000052c:	00012517          	auipc	a0,0x12
--    80000530:	d7c50513          	addi	a0,a0,-644 # 800122a8 <pr>
--    80000534:	6c0000ef          	jal	80000bf4 <acquire>
-+    8000050a:	0000f517          	auipc	a0,0xf
-+    8000050e:	4ae50513          	add	a0,a0,1198 # 8000f9b8 <pr>
-+    80000512:	68e000ef          	jal	80000ba0 <acquire>
-   va_start(ap, fmt);
--    80000538:	00840793          	addi	a5,s0,8
--    8000053c:	f8f43423          	sd	a5,-120(s0)
-+    80000516:	00840793          	add	a5,s0,8
-+    8000051a:	f8f43423          	sd	a5,-120(s0)
-   for(i = 0; (cx = fmt[i] & 0xff) != 0; i++){
--    80000540:	000a4503          	lbu	a0,0(s4)
--    80000544:	fd4d                	bnez	a0,800004fe <printf+0x3c>
--    80000546:	a481                	j	80000786 <printf+0x2c4>
-+    8000051e:	000a4503          	lbu	a0,0(s4)
-+    80000522:	f571                	bnez	a0,800004ee <printf+0x50>
-+#endif
-+  }
-+  va_end(ap);
-+
-+  if(locking)
-+    release(&pr.lock);
-+    80000524:	0000f517          	auipc	a0,0xf
-+    80000528:	49450513          	add	a0,a0,1172 # 8000f9b8 <pr>
-+    8000052c:	70c000ef          	jal	80000c38 <release>
-+    80000530:	a439                	j	8000073e <printf+0x2a0>
-       consputc(cx);
--    80000548:	cf9ff0ef          	jal	80000240 <consputc>
-+    80000532:	cf3ff0ef          	jal	80000224 <consputc>
-       continue;
--    8000054c:	84ce                	mv	s1,s3
-+    80000536:	84ce                	mv	s1,s3
-   for(i = 0; (cx = fmt[i] & 0xff) != 0; i++){
--    8000054e:	0014899b          	addiw	s3,s1,1
--    80000552:	013a07b3          	add	a5,s4,s3
--    80000556:	0007c503          	lbu	a0,0(a5)
--    8000055a:	1e050b63          	beqz	a0,80000750 <printf+0x28e>
-+    80000538:	0014899b          	addw	s3,s1,1
-+    8000053c:	013a07b3          	add	a5,s4,s3
-+    80000540:	0007c503          	lbu	a0,0(a5)
-+    80000544:	1e050963          	beqz	a0,80000736 <printf+0x298>
-     if(cx != '%'){
--    8000055e:	ff5515e3          	bne	a0,s5,80000548 <printf+0x86>
-+    80000548:	ff5515e3          	bne	a0,s5,80000532 <printf+0x94>
-     i++;
--    80000562:	0019849b          	addiw	s1,s3,1
-+    8000054c:	0019849b          	addw	s1,s3,1
-     c0 = fmt[i+0] & 0xff;
--    80000566:	009a07b3          	add	a5,s4,s1
--    8000056a:	0007c903          	lbu	s2,0(a5)
-+    80000550:	009a07b3          	add	a5,s4,s1
-+    80000554:	0007c903          	lbu	s2,0(a5)
-     if(c0) c1 = fmt[i+1] & 0xff;
--    8000056e:	1e090163          	beqz	s2,80000750 <printf+0x28e>
--    80000572:	0017c783          	lbu	a5,1(a5)
-+    80000558:	1c090f63          	beqz	s2,80000736 <printf+0x298>
-+    8000055c:	0017c783          	lbu	a5,1(a5)
-     c1 = c2 = 0;
--    80000576:	86be                	mv	a3,a5
-+    80000560:	86be                	mv	a3,a5
-     if(c1) c2 = fmt[i+2] & 0xff;
--    80000578:	c789                	beqz	a5,80000582 <printf+0xc0>
--    8000057a:	009a0733          	add	a4,s4,s1
--    8000057e:	00274683          	lbu	a3,2(a4)
-+    80000562:	c789                	beqz	a5,8000056c <printf+0xce>
-+    80000564:	009a0733          	add	a4,s4,s1
-+    80000568:	00274683          	lbu	a3,2(a4)
-     if(c0 == 'd'){
--    80000582:	03690763          	beq	s2,s6,800005b0 <printf+0xee>
-+    8000056c:	03690763          	beq	s2,s6,8000059a <printf+0xfc>
-     } else if(c0 == 'l' && c1 == 'd'){
--    80000586:	05890163          	beq	s2,s8,800005c8 <printf+0x106>
-+    80000570:	05890163          	beq	s2,s8,800005b2 <printf+0x114>
-     } else if(c0 == 'u'){
--    8000058a:	0d990b63          	beq	s2,s9,80000660 <printf+0x19e>
-+    80000574:	0d990b63          	beq	s2,s9,8000064a <printf+0x1ac>
-     } else if(c0 == 'x'){
--    8000058e:	13a90163          	beq	s2,s10,800006b0 <printf+0x1ee>
-+    80000578:	13a90163          	beq	s2,s10,8000069a <printf+0x1fc>
-     } else if(c0 == 'p'){
--    80000592:	13b90b63          	beq	s2,s11,800006c8 <printf+0x206>
--      printptr(va_arg(ap, uint64));
-+    8000057c:	13b90b63          	beq	s2,s11,800006b2 <printf+0x214>
-     } else if(c0 == 's'){
--    80000596:	07300793          	li	a5,115
--    8000059a:	16f90a63          	beq	s2,a5,8000070e <printf+0x24c>
--      if((s = va_arg(ap, char*)) == 0)
--        s = "(null)";
--      for(; *s; s++)
--        consputc(*s);
-+    80000580:	07300793          	li	a5,115
-+    80000584:	16f90863          	beq	s2,a5,800006f4 <printf+0x256>
-     } else if(c0 == '%'){
--    8000059e:	1b590463          	beq	s2,s5,80000746 <printf+0x284>
--      consputc('%');
--    } else if(c0 == 0){
--      break;
--    } else {
--      /* Print unknown % sequence to draw attention. */
-+    80000588:	1b590263          	beq	s2,s5,8000072c <printf+0x28e>
-       consputc('%');
--    800005a2:	8556                	mv	a0,s5
--    800005a4:	c9dff0ef          	jal	80000240 <consputc>
-+    8000058c:	8556                	mv	a0,s5
-+    8000058e:	c97ff0ef          	jal	80000224 <consputc>
-       consputc(c0);
--    800005a8:	854a                	mv	a0,s2
--    800005aa:	c97ff0ef          	jal	80000240 <consputc>
--    800005ae:	b745                	j	8000054e <printf+0x8c>
-+    80000592:	854a                	mv	a0,s2
-+    80000594:	c91ff0ef          	jal	80000224 <consputc>
-+    80000598:	b745                	j	80000538 <printf+0x9a>
-       printint(va_arg(ap, int), 10, 1);
--    800005b0:	f8843783          	ld	a5,-120(s0)
--    800005b4:	00878713          	addi	a4,a5,8
--    800005b8:	f8e43423          	sd	a4,-120(s0)
--    800005bc:	4605                	li	a2,1
--    800005be:	45a9                	li	a1,10
--    800005c0:	4388                	lw	a0,0(a5)
--    800005c2:	e6fff0ef          	jal	80000430 <printint>
--    800005c6:	b761                	j	8000054e <printf+0x8c>
-+    8000059a:	f8843783          	ld	a5,-120(s0)
-+    8000059e:	00878713          	add	a4,a5,8
-+    800005a2:	f8e43423          	sd	a4,-120(s0)
-+    800005a6:	4605                	li	a2,1
-+    800005a8:	45a9                	li	a1,10
-+    800005aa:	4388                	lw	a0,0(a5)
-+    800005ac:	e61ff0ef          	jal	8000040c <printint>
-+    800005b0:	b761                	j	80000538 <printf+0x9a>
-     } else if(c0 == 'l' && c1 == 'd'){
--    800005c8:	03678663          	beq	a5,s6,800005f4 <printf+0x132>
-+    800005b2:	03678663          	beq	a5,s6,800005de <printf+0x140>
-     } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
--    800005cc:	05878263          	beq	a5,s8,80000610 <printf+0x14e>
-+    800005b6:	05878263          	beq	a5,s8,800005fa <printf+0x15c>
-     } else if(c0 == 'l' && c1 == 'u'){
--    800005d0:	0b978463          	beq	a5,s9,80000678 <printf+0x1b6>
-+    800005ba:	0b978463          	beq	a5,s9,80000662 <printf+0x1c4>
-     } else if(c0 == 'l' && c1 == 'x'){
--    800005d4:	fda797e3          	bne	a5,s10,800005a2 <printf+0xe0>
-+    800005be:	fda797e3          	bne	a5,s10,8000058c <printf+0xee>
-       printint(va_arg(ap, uint64), 16, 0);
--    800005d8:	f8843783          	ld	a5,-120(s0)
--    800005dc:	00878713          	addi	a4,a5,8
--    800005e0:	f8e43423          	sd	a4,-120(s0)
--    800005e4:	4601                	li	a2,0
--    800005e6:	45c1                	li	a1,16
--    800005e8:	6388                	ld	a0,0(a5)
--    800005ea:	e47ff0ef          	jal	80000430 <printint>
-+    800005c2:	f8843783          	ld	a5,-120(s0)
-+    800005c6:	00878713          	add	a4,a5,8
-+    800005ca:	f8e43423          	sd	a4,-120(s0)
-+    800005ce:	4601                	li	a2,0
-+    800005d0:	45c1                	li	a1,16
-+    800005d2:	6388                	ld	a0,0(a5)
-+    800005d4:	e39ff0ef          	jal	8000040c <printint>
-       i += 1;
--    800005ee:	0029849b          	addiw	s1,s3,2
--    800005f2:	bfb1                	j	8000054e <printf+0x8c>
-+    800005d8:	0029849b          	addw	s1,s3,2
-+    800005dc:	bfb1                	j	80000538 <printf+0x9a>
-       printint(va_arg(ap, uint64), 10, 1);
--    800005f4:	f8843783          	ld	a5,-120(s0)
--    800005f8:	00878713          	addi	a4,a5,8
--    800005fc:	f8e43423          	sd	a4,-120(s0)
--    80000600:	4605                	li	a2,1
--    80000602:	45a9                	li	a1,10
--    80000604:	6388                	ld	a0,0(a5)
--    80000606:	e2bff0ef          	jal	80000430 <printint>
-+    800005de:	f8843783          	ld	a5,-120(s0)
-+    800005e2:	00878713          	add	a4,a5,8
-+    800005e6:	f8e43423          	sd	a4,-120(s0)
-+    800005ea:	4605                	li	a2,1
-+    800005ec:	45a9                	li	a1,10
-+    800005ee:	6388                	ld	a0,0(a5)
-+    800005f0:	e1dff0ef          	jal	8000040c <printint>
-       i += 1;
--    8000060a:	0029849b          	addiw	s1,s3,2
--    8000060e:	b781                	j	8000054e <printf+0x8c>
-+    800005f4:	0029849b          	addw	s1,s3,2
-+    800005f8:	b781                	j	80000538 <printf+0x9a>
-     } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
--    80000610:	06400793          	li	a5,100
--    80000614:	02f68863          	beq	a3,a5,80000644 <printf+0x182>
-+    800005fa:	06400793          	li	a5,100
-+    800005fe:	02f68863          	beq	a3,a5,8000062e <printf+0x190>
-     } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
--    80000618:	07500793          	li	a5,117
--    8000061c:	06f68c63          	beq	a3,a5,80000694 <printf+0x1d2>
-+    80000602:	07500793          	li	a5,117
-+    80000606:	06f68c63          	beq	a3,a5,8000067e <printf+0x1e0>
-     } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
--    80000620:	07800793          	li	a5,120
--    80000624:	f6f69fe3          	bne	a3,a5,800005a2 <printf+0xe0>
-+    8000060a:	07800793          	li	a5,120
-+    8000060e:	f6f69fe3          	bne	a3,a5,8000058c <printf+0xee>
-       printint(va_arg(ap, uint64), 16, 0);
--    80000628:	f8843783          	ld	a5,-120(s0)
--    8000062c:	00878713          	addi	a4,a5,8
--    80000630:	f8e43423          	sd	a4,-120(s0)
--    80000634:	4601                	li	a2,0
--    80000636:	45c1                	li	a1,16
--    80000638:	6388                	ld	a0,0(a5)
--    8000063a:	df7ff0ef          	jal	80000430 <printint>
-+    80000612:	f8843783          	ld	a5,-120(s0)
-+    80000616:	00878713          	add	a4,a5,8
-+    8000061a:	f8e43423          	sd	a4,-120(s0)
-+    8000061e:	4601                	li	a2,0
-+    80000620:	45c1                	li	a1,16
-+    80000622:	6388                	ld	a0,0(a5)
-+    80000624:	de9ff0ef          	jal	8000040c <printint>
-       i += 2;
--    8000063e:	0039849b          	addiw	s1,s3,3
--    80000642:	b731                	j	8000054e <printf+0x8c>
-+    80000628:	0039849b          	addw	s1,s3,3
-+    8000062c:	b731                	j	80000538 <printf+0x9a>
-       printint(va_arg(ap, uint64), 10, 1);
--    80000644:	f8843783          	ld	a5,-120(s0)
--    80000648:	00878713          	addi	a4,a5,8
--    8000064c:	f8e43423          	sd	a4,-120(s0)
--    80000650:	4605                	li	a2,1
--    80000652:	45a9                	li	a1,10
--    80000654:	6388                	ld	a0,0(a5)
--    80000656:	ddbff0ef          	jal	80000430 <printint>
-+    8000062e:	f8843783          	ld	a5,-120(s0)
-+    80000632:	00878713          	add	a4,a5,8
-+    80000636:	f8e43423          	sd	a4,-120(s0)
-+    8000063a:	4605                	li	a2,1
-+    8000063c:	45a9                	li	a1,10
-+    8000063e:	6388                	ld	a0,0(a5)
-+    80000640:	dcdff0ef          	jal	8000040c <printint>
-       i += 2;
--    8000065a:	0039849b          	addiw	s1,s3,3
--    8000065e:	bdc5                	j	8000054e <printf+0x8c>
-+    80000644:	0039849b          	addw	s1,s3,3
-+    80000648:	bdc5                	j	80000538 <printf+0x9a>
-       printint(va_arg(ap, int), 10, 0);
--    80000660:	f8843783          	ld	a5,-120(s0)
--    80000664:	00878713          	addi	a4,a5,8
--    80000668:	f8e43423          	sd	a4,-120(s0)
--    8000066c:	4601                	li	a2,0
--    8000066e:	45a9                	li	a1,10
--    80000670:	4388                	lw	a0,0(a5)
--    80000672:	dbfff0ef          	jal	80000430 <printint>
--    80000676:	bde1                	j	8000054e <printf+0x8c>
-+    8000064a:	f8843783          	ld	a5,-120(s0)
-+    8000064e:	00878713          	add	a4,a5,8
-+    80000652:	f8e43423          	sd	a4,-120(s0)
-+    80000656:	4601                	li	a2,0
-+    80000658:	45a9                	li	a1,10
-+    8000065a:	4388                	lw	a0,0(a5)
-+    8000065c:	db1ff0ef          	jal	8000040c <printint>
-+    80000660:	bde1                	j	80000538 <printf+0x9a>
-       printint(va_arg(ap, uint64), 10, 0);
--    80000678:	f8843783          	ld	a5,-120(s0)
--    8000067c:	00878713          	addi	a4,a5,8
--    80000680:	f8e43423          	sd	a4,-120(s0)
--    80000684:	4601                	li	a2,0
--    80000686:	45a9                	li	a1,10
--    80000688:	6388                	ld	a0,0(a5)
--    8000068a:	da7ff0ef          	jal	80000430 <printint>
-+    80000662:	f8843783          	ld	a5,-120(s0)
-+    80000666:	00878713          	add	a4,a5,8
-+    8000066a:	f8e43423          	sd	a4,-120(s0)
-+    8000066e:	4601                	li	a2,0
-+    80000670:	45a9                	li	a1,10
-+    80000672:	6388                	ld	a0,0(a5)
-+    80000674:	d99ff0ef          	jal	8000040c <printint>
-       i += 1;
--    8000068e:	0029849b          	addiw	s1,s3,2
--    80000692:	bd75                	j	8000054e <printf+0x8c>
-+    80000678:	0029849b          	addw	s1,s3,2
-+    8000067c:	bd75                	j	80000538 <printf+0x9a>
-       printint(va_arg(ap, uint64), 10, 0);
--    80000694:	f8843783          	ld	a5,-120(s0)
--    80000698:	00878713          	addi	a4,a5,8
--    8000069c:	f8e43423          	sd	a4,-120(s0)
--    800006a0:	4601                	li	a2,0
--    800006a2:	45a9                	li	a1,10
--    800006a4:	6388                	ld	a0,0(a5)
--    800006a6:	d8bff0ef          	jal	80000430 <printint>
-+    8000067e:	f8843783          	ld	a5,-120(s0)
-+    80000682:	00878713          	add	a4,a5,8
-+    80000686:	f8e43423          	sd	a4,-120(s0)
-+    8000068a:	4601                	li	a2,0
-+    8000068c:	45a9                	li	a1,10
-+    8000068e:	6388                	ld	a0,0(a5)
-+    80000690:	d7dff0ef          	jal	8000040c <printint>
-       i += 2;
--    800006aa:	0039849b          	addiw	s1,s3,3
--    800006ae:	b545                	j	8000054e <printf+0x8c>
-+    80000694:	0039849b          	addw	s1,s3,3
-+    80000698:	b545                	j	80000538 <printf+0x9a>
-       printint(va_arg(ap, int), 16, 0);
--    800006b0:	f8843783          	ld	a5,-120(s0)
--    800006b4:	00878713          	addi	a4,a5,8
--    800006b8:	f8e43423          	sd	a4,-120(s0)
--    800006bc:	4601                	li	a2,0
--    800006be:	45c1                	li	a1,16
--    800006c0:	4388                	lw	a0,0(a5)
--    800006c2:	d6fff0ef          	jal	80000430 <printint>
--    800006c6:	b561                	j	8000054e <printf+0x8c>
--    800006c8:	e4de                	sd	s7,72(sp)
-+    8000069a:	f8843783          	ld	a5,-120(s0)
-+    8000069e:	00878713          	add	a4,a5,8
-+    800006a2:	f8e43423          	sd	a4,-120(s0)
-+    800006a6:	4601                	li	a2,0
-+    800006a8:	45c1                	li	a1,16
-+    800006aa:	4388                	lw	a0,0(a5)
-+    800006ac:	d61ff0ef          	jal	8000040c <printint>
-+    800006b0:	b561                	j	80000538 <printf+0x9a>
-       printptr(va_arg(ap, uint64));
--    800006ca:	f8843783          	ld	a5,-120(s0)
--    800006ce:	00878713          	addi	a4,a5,8
--    800006d2:	f8e43423          	sd	a4,-120(s0)
--    800006d6:	0007b983          	ld	s3,0(a5)
-+    800006b2:	f8843783          	ld	a5,-120(s0)
-+    800006b6:	00878713          	add	a4,a5,8
-+    800006ba:	f8e43423          	sd	a4,-120(s0)
-+    800006be:	0007b983          	ld	s3,0(a5)
-   consputc('0');
--    800006da:	03000513          	li	a0,48
--    800006de:	b63ff0ef          	jal	80000240 <consputc>
-+    800006c2:	03000513          	li	a0,48
-+    800006c6:	b5fff0ef          	jal	80000224 <consputc>
-   consputc('x');
--    800006e2:	07800513          	li	a0,120
--    800006e6:	b5bff0ef          	jal	80000240 <consputc>
--    800006ea:	4941                	li	s2,16
-+    800006ca:	07800513          	li	a0,120
-+    800006ce:	b57ff0ef          	jal	80000224 <consputc>
-+    800006d2:	4941                	li	s2,16
-     consputc(digits[x >> (sizeof(uint64) * 8 - 4)]);
--    800006ec:	00007b97          	auipc	s7,0x7
--    800006f0:	084b8b93          	addi	s7,s7,132 # 80007770 <digits>
--    800006f4:	03c9d793          	srli	a5,s3,0x3c
--    800006f8:	97de                	add	a5,a5,s7
--    800006fa:	0007c503          	lbu	a0,0(a5)
--    800006fe:	b43ff0ef          	jal	80000240 <consputc>
-+    800006d4:	00007b97          	auipc	s7,0x7
-+    800006d8:	964b8b93          	add	s7,s7,-1692 # 80007038 <digits>
-+    800006dc:	03c9d793          	srl	a5,s3,0x3c
-+    800006e0:	97de                	add	a5,a5,s7
-+    800006e2:	0007c503          	lbu	a0,0(a5)
-+    800006e6:	b3fff0ef          	jal	80000224 <consputc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
--    80000702:	0992                	slli	s3,s3,0x4
--    80000704:	397d                	addiw	s2,s2,-1
--    80000706:	fe0917e3          	bnez	s2,800006f4 <printf+0x232>
--    8000070a:	6ba6                	ld	s7,72(sp)
--    8000070c:	b589                	j	8000054e <printf+0x8c>
-+    800006ea:	0992                	sll	s3,s3,0x4
-+    800006ec:	397d                	addw	s2,s2,-1
-+    800006ee:	fe0917e3          	bnez	s2,800006dc <printf+0x23e>
-+    800006f2:	b599                	j	80000538 <printf+0x9a>
-       if((s = va_arg(ap, char*)) == 0)
--    8000070e:	f8843783          	ld	a5,-120(s0)
--    80000712:	00878713          	addi	a4,a5,8
--    80000716:	f8e43423          	sd	a4,-120(s0)
--    8000071a:	0007b903          	ld	s2,0(a5)
--    8000071e:	00090d63          	beqz	s2,80000738 <printf+0x276>
-+    800006f4:	f8843783          	ld	a5,-120(s0)
-+    800006f8:	00878713          	add	a4,a5,8
-+    800006fc:	f8e43423          	sd	a4,-120(s0)
-+    80000700:	0007b903          	ld	s2,0(a5)
-+    80000704:	00090d63          	beqz	s2,8000071e <printf+0x280>
-       for(; *s; s++)
--    80000722:	00094503          	lbu	a0,0(s2)
--    80000726:	e20504e3          	beqz	a0,8000054e <printf+0x8c>
-+    80000708:	00094503          	lbu	a0,0(s2)
-+    8000070c:	e20506e3          	beqz	a0,80000538 <printf+0x9a>
-         consputc(*s);
--    8000072a:	b17ff0ef          	jal	80000240 <consputc>
-+    80000710:	b15ff0ef          	jal	80000224 <consputc>
-       for(; *s; s++)
--    8000072e:	0905                	addi	s2,s2,1
--    80000730:	00094503          	lbu	a0,0(s2)
--    80000734:	f97d                	bnez	a0,8000072a <printf+0x268>
--    80000736:	bd21                	j	8000054e <printf+0x8c>
-+    80000714:	0905                	add	s2,s2,1
-+    80000716:	00094503          	lbu	a0,0(s2)
-+    8000071a:	f97d                	bnez	a0,80000710 <printf+0x272>
-+    8000071c:	bd31                	j	80000538 <printf+0x9a>
-         s = "(null)";
--    80000738:	00007917          	auipc	s2,0x7
--    8000073c:	8d090913          	addi	s2,s2,-1840 # 80007008 <etext+0x8>
-+    8000071e:	00007917          	auipc	s2,0x7
-+    80000722:	8fa90913          	add	s2,s2,-1798 # 80007018 <etext+0x18>
-       for(; *s; s++)
--    80000740:	02800513          	li	a0,40
--    80000744:	b7dd                	j	8000072a <printf+0x268>
-+    80000726:	02800513          	li	a0,40
-+    8000072a:	b7dd                	j	80000710 <printf+0x272>
-       consputc('%');
--    80000746:	02500513          	li	a0,37
--    8000074a:	af7ff0ef          	jal	80000240 <consputc>
--    8000074e:	b501                	j	8000054e <printf+0x8c>
--    }
--#endif
--  }
--  va_end(ap);
--
-+    8000072c:	02500513          	li	a0,37
-+    80000730:	af5ff0ef          	jal	80000224 <consputc>
-+    80000734:	b511                	j	80000538 <printf+0x9a>
-   if(locking)
--    80000750:	f7843783          	ld	a5,-136(s0)
--    80000754:	e385                	bnez	a5,80000774 <printf+0x2b2>
--    80000756:	74e6                	ld	s1,120(sp)
--    80000758:	7946                	ld	s2,112(sp)
--    8000075a:	79a6                	ld	s3,104(sp)
--    8000075c:	6ae6                	ld	s5,88(sp)
--    8000075e:	6b46                	ld	s6,80(sp)
--    80000760:	6c06                	ld	s8,64(sp)
--    80000762:	7ce2                	ld	s9,56(sp)
--    80000764:	7d42                	ld	s10,48(sp)
--    80000766:	7da2                	ld	s11,40(sp)
--    release(&pr.lock);
-+    80000736:	f7843783          	ld	a5,-136(s0)
-+    8000073a:	de0795e3          	bnez	a5,80000524 <printf+0x86>
- 
-   return 0;
- }
--    80000768:	4501                	li	a0,0
--    8000076a:	60aa                	ld	ra,136(sp)
--    8000076c:	640a                	ld	s0,128(sp)
--    8000076e:	7a06                	ld	s4,96(sp)
--    80000770:	6169                	addi	sp,sp,208
--    80000772:	8082                	ret
--    80000774:	74e6                	ld	s1,120(sp)
--    80000776:	7946                	ld	s2,112(sp)
--    80000778:	79a6                	ld	s3,104(sp)
--    8000077a:	6ae6                	ld	s5,88(sp)
--    8000077c:	6b46                	ld	s6,80(sp)
--    8000077e:	6c06                	ld	s8,64(sp)
--    80000780:	7ce2                	ld	s9,56(sp)
--    80000782:	7d42                	ld	s10,48(sp)
--    80000784:	7da2                	ld	s11,40(sp)
--    release(&pr.lock);
--    80000786:	00012517          	auipc	a0,0x12
--    8000078a:	b2250513          	addi	a0,a0,-1246 # 800122a8 <pr>
--    8000078e:	4fe000ef          	jal	80000c8c <release>
--    80000792:	bfd9                	j	80000768 <printf+0x2a6>
--
--0000000080000794 <panic>:
-+    8000073e:	4501                	li	a0,0
-+    80000740:	60aa                	ld	ra,136(sp)
-+    80000742:	640a                	ld	s0,128(sp)
-+    80000744:	74e6                	ld	s1,120(sp)
-+    80000746:	7946                	ld	s2,112(sp)
-+    80000748:	79a6                	ld	s3,104(sp)
-+    8000074a:	7a06                	ld	s4,96(sp)
-+    8000074c:	6ae6                	ld	s5,88(sp)
-+    8000074e:	6b46                	ld	s6,80(sp)
-+    80000750:	6ba6                	ld	s7,72(sp)
-+    80000752:	6c06                	ld	s8,64(sp)
-+    80000754:	7ce2                	ld	s9,56(sp)
-+    80000756:	7d42                	ld	s10,48(sp)
-+    80000758:	7da2                	ld	s11,40(sp)
-+    8000075a:	6169                	add	sp,sp,208
-+    8000075c:	8082                	ret
-+
-+000000008000075e <panic>:
- 
- void
- panic(char *s)
- {
--    80000794:	1101                	addi	sp,sp,-32
--    80000796:	ec06                	sd	ra,24(sp)
--    80000798:	e822                	sd	s0,16(sp)
--    8000079a:	e426                	sd	s1,8(sp)
--    8000079c:	1000                	addi	s0,sp,32
--    8000079e:	84aa                	mv	s1,a0
-+    8000075e:	1101                	add	sp,sp,-32
-+    80000760:	ec06                	sd	ra,24(sp)
-+    80000762:	e822                	sd	s0,16(sp)
-+    80000764:	e426                	sd	s1,8(sp)
-+    80000766:	1000                	add	s0,sp,32
-+    80000768:	84aa                	mv	s1,a0
-   pr.locking = 0;
--    800007a0:	00012797          	auipc	a5,0x12
--    800007a4:	b207a023          	sw	zero,-1248(a5) # 800122c0 <pr+0x18>
-+    8000076a:	0000f797          	auipc	a5,0xf
-+    8000076e:	2607a323          	sw	zero,614(a5) # 8000f9d0 <pr+0x18>
-   printf("panic: ");
--    800007a8:	00007517          	auipc	a0,0x7
--    800007ac:	87050513          	addi	a0,a0,-1936 # 80007018 <etext+0x18>
--    800007b0:	d13ff0ef          	jal	800004c2 <printf>
-+    80000772:	00007517          	auipc	a0,0x7
-+    80000776:	8ae50513          	add	a0,a0,-1874 # 80007020 <etext+0x20>
-+    8000077a:	d25ff0ef          	jal	8000049e <printf>
-   printf("%s\n", s);
--    800007b4:	85a6                	mv	a1,s1
--    800007b6:	00007517          	auipc	a0,0x7
--    800007ba:	86a50513          	addi	a0,a0,-1942 # 80007020 <etext+0x20>
--    800007be:	d05ff0ef          	jal	800004c2 <printf>
-+    8000077e:	85a6                	mv	a1,s1
-+    80000780:	00007517          	auipc	a0,0x7
-+    80000784:	8a850513          	add	a0,a0,-1880 # 80007028 <etext+0x28>
-+    80000788:	d17ff0ef          	jal	8000049e <printf>
-   panicked = 1; /* freeze uart output from other CPUs */
--    800007c2:	4785                	li	a5,1
--    800007c4:	0000a717          	auipc	a4,0xa
--    800007c8:	9ef72e23          	sw	a5,-1540(a4) # 8000a1c0 <panicked>
-+    8000078c:	4785                	li	a5,1
-+    8000078e:	00007717          	auipc	a4,0x7
-+    80000792:	14f72123          	sw	a5,322(a4) # 800078d0 <panicked>
-   for(;;)
--    800007cc:	a001                	j	800007cc <panic+0x38>
-+    80000796:	a001                	j	80000796 <panic+0x38>
- 
--00000000800007ce <printfinit>:
-+0000000080000798 <printfinit>:
-     ;
- }
- 
- void
- printfinit(void)
- {
--    800007ce:	1101                	addi	sp,sp,-32
--    800007d0:	ec06                	sd	ra,24(sp)
--    800007d2:	e822                	sd	s0,16(sp)
--    800007d4:	e426                	sd	s1,8(sp)
--    800007d6:	1000                	addi	s0,sp,32
-+    80000798:	1101                	add	sp,sp,-32
-+    8000079a:	ec06                	sd	ra,24(sp)
-+    8000079c:	e822                	sd	s0,16(sp)
-+    8000079e:	e426                	sd	s1,8(sp)
-+    800007a0:	1000                	add	s0,sp,32
-   initlock(&pr.lock, "pr");
--    800007d8:	00012497          	auipc	s1,0x12
--    800007dc:	ad048493          	addi	s1,s1,-1328 # 800122a8 <pr>
--    800007e0:	00007597          	auipc	a1,0x7
--    800007e4:	84858593          	addi	a1,a1,-1976 # 80007028 <etext+0x28>
--    800007e8:	8526                	mv	a0,s1
--    800007ea:	38a000ef          	jal	80000b74 <initlock>
-+    800007a2:	0000f497          	auipc	s1,0xf
-+    800007a6:	21648493          	add	s1,s1,534 # 8000f9b8 <pr>
-+    800007aa:	00007597          	auipc	a1,0x7
-+    800007ae:	88658593          	add	a1,a1,-1914 # 80007030 <etext+0x30>
-+    800007b2:	8526                	mv	a0,s1
-+    800007b4:	36c000ef          	jal	80000b20 <initlock>
-   pr.locking = 1;
--    800007ee:	4785                	li	a5,1
--    800007f0:	cc9c                	sw	a5,24(s1)
-+    800007b8:	4785                	li	a5,1
-+    800007ba:	cc9c                	sw	a5,24(s1)
- }
--    800007f2:	60e2                	ld	ra,24(sp)
--    800007f4:	6442                	ld	s0,16(sp)
--    800007f6:	64a2                	ld	s1,8(sp)
--    800007f8:	6105                	addi	sp,sp,32
--    800007fa:	8082                	ret
-+    800007bc:	60e2                	ld	ra,24(sp)
-+    800007be:	6442                	ld	s0,16(sp)
-+    800007c0:	64a2                	ld	s1,8(sp)
-+    800007c2:	6105                	add	sp,sp,32
-+    800007c4:	8082                	ret
- 
--00000000800007fc <uartinit>:
-+00000000800007c6 <uartinit>:
- 
- void uartstart();
- 
- void
- uartinit(void)
- {
--    800007fc:	1141                	addi	sp,sp,-16
--    800007fe:	e406                	sd	ra,8(sp)
--    80000800:	e022                	sd	s0,0(sp)
--    80000802:	0800                	addi	s0,sp,16
-+    800007c6:	1141                	add	sp,sp,-16
-+    800007c8:	e406                	sd	ra,8(sp)
-+    800007ca:	e022                	sd	s0,0(sp)
-+    800007cc:	0800                	add	s0,sp,16
-   /* disable interrupts. */
-   WriteReg(IER, 0x00);
--    80000804:	100007b7          	lui	a5,0x10000
--    80000808:	000780a3          	sb	zero,1(a5) # 10000001 <_entry-0x6fffffff>
-+    800007ce:	100007b7          	lui	a5,0x10000
-+    800007d2:	000780a3          	sb	zero,1(a5) # 10000001 <_entry-0x6fffffff>
- 
-   /* special mode to set baud rate. */
-   WriteReg(LCR, LCR_BAUD_LATCH);
--    8000080c:	10000737          	lui	a4,0x10000
--    80000810:	f8000693          	li	a3,-128
--    80000814:	00d701a3          	sb	a3,3(a4) # 10000003 <_entry-0x6ffffffd>
-+    800007d6:	f8000713          	li	a4,-128
-+    800007da:	00e781a3          	sb	a4,3(a5)
- 
-   /* LSB for baud rate of 38.4K. */
-   WriteReg(0, 0x03);
--    80000818:	468d                	li	a3,3
--    8000081a:	10000637          	lui	a2,0x10000
--    8000081e:	00d60023          	sb	a3,0(a2) # 10000000 <_entry-0x70000000>
-+    800007de:	470d                	li	a4,3
-+    800007e0:	00e78023          	sb	a4,0(a5)
- 
-   /* MSB for baud rate of 38.4K. */
-   WriteReg(1, 0x00);
--    80000822:	000780a3          	sb	zero,1(a5)
-+    800007e4:	000780a3          	sb	zero,1(a5)
- 
-   /* leave set-baud mode, */
-   /* and set word length to 8 bits, no parity. */
-   WriteReg(LCR, LCR_EIGHT_BITS);
--    80000826:	00d701a3          	sb	a3,3(a4)
-+    800007e8:	00e781a3          	sb	a4,3(a5)
- 
-   /* reset and enable FIFOs. */
-   WriteReg(FCR, FCR_FIFO_ENABLE | FCR_FIFO_CLEAR);
--    8000082a:	10000737          	lui	a4,0x10000
--    8000082e:	461d                	li	a2,7
--    80000830:	00c70123          	sb	a2,2(a4) # 10000002 <_entry-0x6ffffffe>
-+    800007ec:	469d                	li	a3,7
-+    800007ee:	00d78123          	sb	a3,2(a5)
- 
-   /* enable transmit and receive interrupts. */
-   WriteReg(IER, IER_TX_ENABLE | IER_RX_ENABLE);
--    80000834:	00d780a3          	sb	a3,1(a5)
-+    800007f2:	00e780a3          	sb	a4,1(a5)
- 
-   initlock(&uart_tx_lock, "uart");
--    80000838:	00006597          	auipc	a1,0x6
--    8000083c:	7f858593          	addi	a1,a1,2040 # 80007030 <etext+0x30>
--    80000840:	00012517          	auipc	a0,0x12
--    80000844:	a8850513          	addi	a0,a0,-1400 # 800122c8 <uart_tx_lock>
--    80000848:	32c000ef          	jal	80000b74 <initlock>
--}
--    8000084c:	60a2                	ld	ra,8(sp)
--    8000084e:	6402                	ld	s0,0(sp)
--    80000850:	0141                	addi	sp,sp,16
--    80000852:	8082                	ret
--
--0000000080000854 <uartputc_sync>:
-+    800007f6:	00007597          	auipc	a1,0x7
-+    800007fa:	85a58593          	add	a1,a1,-1958 # 80007050 <digits+0x18>
-+    800007fe:	0000f517          	auipc	a0,0xf
-+    80000802:	1da50513          	add	a0,a0,474 # 8000f9d8 <uart_tx_lock>
-+    80000806:	31a000ef          	jal	80000b20 <initlock>
-+}
-+    8000080a:	60a2                	ld	ra,8(sp)
-+    8000080c:	6402                	ld	s0,0(sp)
-+    8000080e:	0141                	add	sp,sp,16
-+    80000810:	8082                	ret
-+
-+0000000080000812 <uartputc_sync>:
- /* use interrupts, for use by kernel printf() and */
- /* to echo characters. it spins waiting for the uart's */
- /* output register to be empty. */
- void
- uartputc_sync(int c)
- {
--    80000854:	1101                	addi	sp,sp,-32
--    80000856:	ec06                	sd	ra,24(sp)
--    80000858:	e822                	sd	s0,16(sp)
--    8000085a:	e426                	sd	s1,8(sp)
--    8000085c:	1000                	addi	s0,sp,32
--    8000085e:	84aa                	mv	s1,a0
-+    80000812:	1101                	add	sp,sp,-32
-+    80000814:	ec06                	sd	ra,24(sp)
-+    80000816:	e822                	sd	s0,16(sp)
-+    80000818:	e426                	sd	s1,8(sp)
-+    8000081a:	1000                	add	s0,sp,32
-+    8000081c:	84aa                	mv	s1,a0
-   push_off();
--    80000860:	354000ef          	jal	80000bb4 <push_off>
-+    8000081e:	342000ef          	jal	80000b60 <push_off>
- 
-   if(panicked){
--    80000864:	0000a797          	auipc	a5,0xa
--    80000868:	95c7a783          	lw	a5,-1700(a5) # 8000a1c0 <panicked>
--    8000086c:	e795                	bnez	a5,80000898 <uartputc_sync+0x44>
-+    80000822:	00007797          	auipc	a5,0x7
-+    80000826:	0ae7a783          	lw	a5,174(a5) # 800078d0 <panicked>
-     for(;;)
-       ;
-   }
- 
-   /* wait for Transmit Holding Empty to be set in LSR. */
-   while((ReadReg(LSR) & LSR_TX_IDLE) == 0)
--    8000086e:	10000737          	lui	a4,0x10000
--    80000872:	0715                	addi	a4,a4,5 # 10000005 <_entry-0x6ffffffb>
--    80000874:	00074783          	lbu	a5,0(a4)
--    80000878:	0207f793          	andi	a5,a5,32
--    8000087c:	dfe5                	beqz	a5,80000874 <uartputc_sync+0x20>
-+    8000082a:	10000737          	lui	a4,0x10000
-+  if(panicked){
-+    8000082e:	c391                	beqz	a5,80000832 <uartputc_sync+0x20>
-+    for(;;)
-+    80000830:	a001                	j	80000830 <uartputc_sync+0x1e>
-+  while((ReadReg(LSR) & LSR_TX_IDLE) == 0)
-+    80000832:	00574783          	lbu	a5,5(a4) # 10000005 <_entry-0x6ffffffb>
-+    80000836:	0207f793          	and	a5,a5,32
-+    8000083a:	dfe5                	beqz	a5,80000832 <uartputc_sync+0x20>
-     ;
-   WriteReg(THR, c);
--    8000087e:	0ff4f513          	zext.b	a0,s1
--    80000882:	100007b7          	lui	a5,0x10000
--    80000886:	00a78023          	sb	a0,0(a5) # 10000000 <_entry-0x70000000>
-+    8000083c:	0ff4f513          	zext.b	a0,s1
-+    80000840:	100007b7          	lui	a5,0x10000
-+    80000844:	00a78023          	sb	a0,0(a5) # 10000000 <_entry-0x70000000>
- 
-   pop_off();
--    8000088a:	3ae000ef          	jal	80000c38 <pop_off>
-+    80000848:	39c000ef          	jal	80000be4 <pop_off>
- }
--    8000088e:	60e2                	ld	ra,24(sp)
--    80000890:	6442                	ld	s0,16(sp)
--    80000892:	64a2                	ld	s1,8(sp)
--    80000894:	6105                	addi	sp,sp,32
--    80000896:	8082                	ret
--    for(;;)
--    80000898:	a001                	j	80000898 <uartputc_sync+0x44>
-+    8000084c:	60e2                	ld	ra,24(sp)
-+    8000084e:	6442                	ld	s0,16(sp)
-+    80000850:	64a2                	ld	s1,8(sp)
-+    80000852:	6105                	add	sp,sp,32
-+    80000854:	8082                	ret
- 
--000000008000089a <uartstart>:
-+0000000080000856 <uartstart>:
- /* called from both the top- and bottom-half. */
- void
- uartstart()
- {
-   while(1){
-     if(uart_tx_w == uart_tx_r){
--    8000089a:	0000a797          	auipc	a5,0xa
--    8000089e:	92e7b783          	ld	a5,-1746(a5) # 8000a1c8 <uart_tx_r>
--    800008a2:	0000a717          	auipc	a4,0xa
--    800008a6:	92e73703          	ld	a4,-1746(a4) # 8000a1d0 <uart_tx_w>
--    800008aa:	08f70263          	beq	a4,a5,8000092e <uartstart+0x94>
--{
--    800008ae:	7139                	addi	sp,sp,-64
--    800008b0:	fc06                	sd	ra,56(sp)
--    800008b2:	f822                	sd	s0,48(sp)
--    800008b4:	f426                	sd	s1,40(sp)
--    800008b6:	f04a                	sd	s2,32(sp)
--    800008b8:	ec4e                	sd	s3,24(sp)
--    800008ba:	e852                	sd	s4,16(sp)
--    800008bc:	e456                	sd	s5,8(sp)
--    800008be:	e05a                	sd	s6,0(sp)
--    800008c0:	0080                	addi	s0,sp,64
-+    80000856:	00007797          	auipc	a5,0x7
-+    8000085a:	0827b783          	ld	a5,130(a5) # 800078d8 <uart_tx_r>
-+    8000085e:	00007717          	auipc	a4,0x7
-+    80000862:	08273703          	ld	a4,130(a4) # 800078e0 <uart_tx_w>
-+    80000866:	06f70c63          	beq	a4,a5,800008de <uartstart+0x88>
-+{
-+    8000086a:	7139                	add	sp,sp,-64
-+    8000086c:	fc06                	sd	ra,56(sp)
-+    8000086e:	f822                	sd	s0,48(sp)
-+    80000870:	f426                	sd	s1,40(sp)
-+    80000872:	f04a                	sd	s2,32(sp)
-+    80000874:	ec4e                	sd	s3,24(sp)
-+    80000876:	e852                	sd	s4,16(sp)
-+    80000878:	e456                	sd	s5,8(sp)
-+    8000087a:	0080                	add	s0,sp,64
-       /* transmit buffer is empty. */
-       ReadReg(ISR);
-       return;
-     }
-     
-     if((ReadReg(LSR) & LSR_TX_IDLE) == 0){
--    800008c2:	10000937          	lui	s2,0x10000
--    800008c6:	0915                	addi	s2,s2,5 # 10000005 <_entry-0x6ffffffb>
-+    8000087c:	10000937          	lui	s2,0x10000
-       /* so we cannot give it another byte. */
-       /* it will interrupt when it's ready for a new byte. */
-       return;
-     }
-     
-     int c = uart_tx_buf[uart_tx_r % UART_TX_BUF_SIZE];
--    800008c8:	00012a97          	auipc	s5,0x12
--    800008cc:	a00a8a93          	addi	s5,s5,-1536 # 800122c8 <uart_tx_lock>
-+    80000880:	0000fa17          	auipc	s4,0xf
-+    80000884:	158a0a13          	add	s4,s4,344 # 8000f9d8 <uart_tx_lock>
-     uart_tx_r += 1;
--    800008d0:	0000a497          	auipc	s1,0xa
--    800008d4:	8f848493          	addi	s1,s1,-1800 # 8000a1c8 <uart_tx_r>
--    
--    /* maybe uartputc() is waiting for space in the buffer. */
--    wakeup(&uart_tx_r);
--    
--    WriteReg(THR, c);
--    800008d8:	10000a37          	lui	s4,0x10000
-+    80000888:	00007497          	auipc	s1,0x7
-+    8000088c:	05048493          	add	s1,s1,80 # 800078d8 <uart_tx_r>
-     if(uart_tx_w == uart_tx_r){
--    800008dc:	0000a997          	auipc	s3,0xa
--    800008e0:	8f498993          	addi	s3,s3,-1804 # 8000a1d0 <uart_tx_w>
-+    80000890:	00007997          	auipc	s3,0x7
-+    80000894:	05098993          	add	s3,s3,80 # 800078e0 <uart_tx_w>
-     if((ReadReg(LSR) & LSR_TX_IDLE) == 0){
--    800008e4:	00094703          	lbu	a4,0(s2)
--    800008e8:	02077713          	andi	a4,a4,32
--    800008ec:	c71d                	beqz	a4,8000091a <uartstart+0x80>
-+    80000898:	00594703          	lbu	a4,5(s2) # 10000005 <_entry-0x6ffffffb>
-+    8000089c:	02077713          	and	a4,a4,32
-+    800008a0:	c715                	beqz	a4,800008cc <uartstart+0x76>
-     int c = uart_tx_buf[uart_tx_r % UART_TX_BUF_SIZE];
--    800008ee:	01f7f713          	andi	a4,a5,31
--    800008f2:	9756                	add	a4,a4,s5
--    800008f4:	01874b03          	lbu	s6,24(a4)
-+    800008a2:	01f7f713          	and	a4,a5,31
-+    800008a6:	9752                	add	a4,a4,s4
-+    800008a8:	01874a83          	lbu	s5,24(a4)
-     uart_tx_r += 1;
--    800008f8:	0785                	addi	a5,a5,1
--    800008fa:	e09c                	sd	a5,0(s1)
-+    800008ac:	0785                	add	a5,a5,1
-+    800008ae:	e09c                	sd	a5,0(s1)
-+    
-+    /* maybe uartputc() is waiting for space in the buffer. */
-     wakeup(&uart_tx_r);
--    800008fc:	8526                	mv	a0,s1
--    800008fe:	5fc010ef          	jal	80001efa <wakeup>
-+    800008b0:	8526                	mv	a0,s1
-+    800008b2:	596010ef          	jal	80001e48 <wakeup>
-+    
-     WriteReg(THR, c);
--    80000902:	016a0023          	sb	s6,0(s4) # 10000000 <_entry-0x70000000>
-+    800008b6:	01590023          	sb	s5,0(s2)
-     if(uart_tx_w == uart_tx_r){
--    80000906:	609c                	ld	a5,0(s1)
--    80000908:	0009b703          	ld	a4,0(s3)
--    8000090c:	fcf71ce3          	bne	a4,a5,800008e4 <uartstart+0x4a>
-+    800008ba:	609c                	ld	a5,0(s1)
-+    800008bc:	0009b703          	ld	a4,0(s3)
-+    800008c0:	fcf71ce3          	bne	a4,a5,80000898 <uartstart+0x42>
-       ReadReg(ISR);
--    80000910:	100007b7          	lui	a5,0x10000
--    80000914:	0789                	addi	a5,a5,2 # 10000002 <_entry-0x6ffffffe>
--    80000916:	0007c783          	lbu	a5,0(a5)
-+    800008c4:	100007b7          	lui	a5,0x10000
-+    800008c8:	0027c783          	lbu	a5,2(a5) # 10000002 <_entry-0x6ffffffe>
-   }
- }
--    8000091a:	70e2                	ld	ra,56(sp)
--    8000091c:	7442                	ld	s0,48(sp)
--    8000091e:	74a2                	ld	s1,40(sp)
--    80000920:	7902                	ld	s2,32(sp)
--    80000922:	69e2                	ld	s3,24(sp)
--    80000924:	6a42                	ld	s4,16(sp)
--    80000926:	6aa2                	ld	s5,8(sp)
--    80000928:	6b02                	ld	s6,0(sp)
--    8000092a:	6121                	addi	sp,sp,64
--    8000092c:	8082                	ret
-+    800008cc:	70e2                	ld	ra,56(sp)
-+    800008ce:	7442                	ld	s0,48(sp)
-+    800008d0:	74a2                	ld	s1,40(sp)
-+    800008d2:	7902                	ld	s2,32(sp)
-+    800008d4:	69e2                	ld	s3,24(sp)
-+    800008d6:	6a42                	ld	s4,16(sp)
-+    800008d8:	6aa2                	ld	s5,8(sp)
-+    800008da:	6121                	add	sp,sp,64
-+    800008dc:	8082                	ret
-       ReadReg(ISR);
--    8000092e:	100007b7          	lui	a5,0x10000
--    80000932:	0789                	addi	a5,a5,2 # 10000002 <_entry-0x6ffffffe>
--    80000934:	0007c783          	lbu	a5,0(a5)
-+    800008de:	100007b7          	lui	a5,0x10000
-+    800008e2:	0027c783          	lbu	a5,2(a5) # 10000002 <_entry-0x6ffffffe>
-       return;
--    80000938:	8082                	ret
--
--000000008000093a <uartputc>:
--{
--    8000093a:	7179                	addi	sp,sp,-48
--    8000093c:	f406                	sd	ra,40(sp)
--    8000093e:	f022                	sd	s0,32(sp)
--    80000940:	ec26                	sd	s1,24(sp)
--    80000942:	e84a                	sd	s2,16(sp)
--    80000944:	e44e                	sd	s3,8(sp)
--    80000946:	e052                	sd	s4,0(sp)
--    80000948:	1800                	addi	s0,sp,48
--    8000094a:	8a2a                	mv	s4,a0
-+    800008e6:	8082                	ret
-+
-+00000000800008e8 <uartputc>:
-+{
-+    800008e8:	7179                	add	sp,sp,-48
-+    800008ea:	f406                	sd	ra,40(sp)
-+    800008ec:	f022                	sd	s0,32(sp)
-+    800008ee:	ec26                	sd	s1,24(sp)
-+    800008f0:	e84a                	sd	s2,16(sp)
-+    800008f2:	e44e                	sd	s3,8(sp)
-+    800008f4:	e052                	sd	s4,0(sp)
-+    800008f6:	1800                	add	s0,sp,48
-+    800008f8:	8a2a                	mv	s4,a0
-   acquire(&uart_tx_lock);
--    8000094c:	00012517          	auipc	a0,0x12
--    80000950:	97c50513          	addi	a0,a0,-1668 # 800122c8 <uart_tx_lock>
--    80000954:	2a0000ef          	jal	80000bf4 <acquire>
-+    800008fa:	0000f517          	auipc	a0,0xf
-+    800008fe:	0de50513          	add	a0,a0,222 # 8000f9d8 <uart_tx_lock>
-+    80000902:	29e000ef          	jal	80000ba0 <acquire>
-   if(panicked){
--    80000958:	0000a797          	auipc	a5,0xa
--    8000095c:	8687a783          	lw	a5,-1944(a5) # 8000a1c0 <panicked>
--    80000960:	efbd                	bnez	a5,800009de <uartputc+0xa4>
-+    80000906:	00007797          	auipc	a5,0x7
-+    8000090a:	fca7a783          	lw	a5,-54(a5) # 800078d0 <panicked>
-+    8000090e:	efbd                	bnez	a5,8000098c <uartputc+0xa4>
-   while(uart_tx_w == uart_tx_r + UART_TX_BUF_SIZE){
--    80000962:	0000a717          	auipc	a4,0xa
--    80000966:	86e73703          	ld	a4,-1938(a4) # 8000a1d0 <uart_tx_w>
--    8000096a:	0000a797          	auipc	a5,0xa
--    8000096e:	85e7b783          	ld	a5,-1954(a5) # 8000a1c8 <uart_tx_r>
--    80000972:	02078793          	addi	a5,a5,32
-+    80000910:	00007717          	auipc	a4,0x7
-+    80000914:	fd073703          	ld	a4,-48(a4) # 800078e0 <uart_tx_w>
-+    80000918:	00007797          	auipc	a5,0x7
-+    8000091c:	fc07b783          	ld	a5,-64(a5) # 800078d8 <uart_tx_r>
-+    80000920:	02078793          	add	a5,a5,32
-     sleep(&uart_tx_r, &uart_tx_lock);
--    80000976:	00012997          	auipc	s3,0x12
--    8000097a:	95298993          	addi	s3,s3,-1710 # 800122c8 <uart_tx_lock>
--    8000097e:	0000a497          	auipc	s1,0xa
--    80000982:	84a48493          	addi	s1,s1,-1974 # 8000a1c8 <uart_tx_r>
-+    80000924:	0000f997          	auipc	s3,0xf
-+    80000928:	0b498993          	add	s3,s3,180 # 8000f9d8 <uart_tx_lock>
-+    8000092c:	00007497          	auipc	s1,0x7
-+    80000930:	fac48493          	add	s1,s1,-84 # 800078d8 <uart_tx_r>
-   while(uart_tx_w == uart_tx_r + UART_TX_BUF_SIZE){
--    80000986:	0000a917          	auipc	s2,0xa
--    8000098a:	84a90913          	addi	s2,s2,-1974 # 8000a1d0 <uart_tx_w>
--    8000098e:	00e79d63          	bne	a5,a4,800009a8 <uartputc+0x6e>
-+    80000934:	00007917          	auipc	s2,0x7
-+    80000938:	fac90913          	add	s2,s2,-84 # 800078e0 <uart_tx_w>
-+    8000093c:	00e79d63          	bne	a5,a4,80000956 <uartputc+0x6e>
-     sleep(&uart_tx_r, &uart_tx_lock);
--    80000992:	85ce                	mv	a1,s3
--    80000994:	8526                	mv	a0,s1
--    80000996:	518010ef          	jal	80001eae <sleep>
-+    80000940:	85ce                	mv	a1,s3
-+    80000942:	8526                	mv	a0,s1
-+    80000944:	4b8010ef          	jal	80001dfc <sleep>
-   while(uart_tx_w == uart_tx_r + UART_TX_BUF_SIZE){
--    8000099a:	00093703          	ld	a4,0(s2)
--    8000099e:	609c                	ld	a5,0(s1)
--    800009a0:	02078793          	addi	a5,a5,32
--    800009a4:	fee787e3          	beq	a5,a4,80000992 <uartputc+0x58>
-+    80000948:	00093703          	ld	a4,0(s2)
-+    8000094c:	609c                	ld	a5,0(s1)
-+    8000094e:	02078793          	add	a5,a5,32
-+    80000952:	fee787e3          	beq	a5,a4,80000940 <uartputc+0x58>
-   uart_tx_buf[uart_tx_w % UART_TX_BUF_SIZE] = c;
--    800009a8:	00012497          	auipc	s1,0x12
--    800009ac:	92048493          	addi	s1,s1,-1760 # 800122c8 <uart_tx_lock>
--    800009b0:	01f77793          	andi	a5,a4,31
--    800009b4:	97a6                	add	a5,a5,s1
--    800009b6:	01478c23          	sb	s4,24(a5)
-+    80000956:	0000f497          	auipc	s1,0xf
-+    8000095a:	08248493          	add	s1,s1,130 # 8000f9d8 <uart_tx_lock>
-+    8000095e:	01f77793          	and	a5,a4,31
-+    80000962:	97a6                	add	a5,a5,s1
-+    80000964:	01478c23          	sb	s4,24(a5)
-   uart_tx_w += 1;
--    800009ba:	0705                	addi	a4,a4,1
--    800009bc:	0000a797          	auipc	a5,0xa
--    800009c0:	80e7ba23          	sd	a4,-2028(a5) # 8000a1d0 <uart_tx_w>
-+    80000968:	0705                	add	a4,a4,1
-+    8000096a:	00007797          	auipc	a5,0x7
-+    8000096e:	f6e7bb23          	sd	a4,-138(a5) # 800078e0 <uart_tx_w>
-   uartstart();
--    800009c4:	ed7ff0ef          	jal	8000089a <uartstart>
-+    80000972:	ee5ff0ef          	jal	80000856 <uartstart>
-   release(&uart_tx_lock);
--    800009c8:	8526                	mv	a0,s1
--    800009ca:	2c2000ef          	jal	80000c8c <release>
--}
--    800009ce:	70a2                	ld	ra,40(sp)
--    800009d0:	7402                	ld	s0,32(sp)
--    800009d2:	64e2                	ld	s1,24(sp)
--    800009d4:	6942                	ld	s2,16(sp)
--    800009d6:	69a2                	ld	s3,8(sp)
--    800009d8:	6a02                	ld	s4,0(sp)
--    800009da:	6145                	addi	sp,sp,48
--    800009dc:	8082                	ret
-+    80000976:	8526                	mv	a0,s1
-+    80000978:	2c0000ef          	jal	80000c38 <release>
-+}
-+    8000097c:	70a2                	ld	ra,40(sp)
-+    8000097e:	7402                	ld	s0,32(sp)
-+    80000980:	64e2                	ld	s1,24(sp)
-+    80000982:	6942                	ld	s2,16(sp)
-+    80000984:	69a2                	ld	s3,8(sp)
-+    80000986:	6a02                	ld	s4,0(sp)
-+    80000988:	6145                	add	sp,sp,48
-+    8000098a:	8082                	ret
-     for(;;)
--    800009de:	a001                	j	800009de <uartputc+0xa4>
-+    8000098c:	a001                	j	8000098c <uartputc+0xa4>
- 
--00000000800009e0 <uartgetc>:
-+000000008000098e <uartgetc>:
- 
- /* read one input character from the UART. */
- /* return -1 if none is waiting. */
- int
- uartgetc(void)
- {
--    800009e0:	1141                	addi	sp,sp,-16
--    800009e2:	e422                	sd	s0,8(sp)
--    800009e4:	0800                	addi	s0,sp,16
-+    8000098e:	1141                	add	sp,sp,-16
-+    80000990:	e422                	sd	s0,8(sp)
-+    80000992:	0800                	add	s0,sp,16
-   if(ReadReg(LSR) & 0x01){
--    800009e6:	100007b7          	lui	a5,0x10000
--    800009ea:	0795                	addi	a5,a5,5 # 10000005 <_entry-0x6ffffffb>
--    800009ec:	0007c783          	lbu	a5,0(a5)
--    800009f0:	8b85                	andi	a5,a5,1
--    800009f2:	cb81                	beqz	a5,80000a02 <uartgetc+0x22>
-+    80000994:	100007b7          	lui	a5,0x10000
-+    80000998:	0057c783          	lbu	a5,5(a5) # 10000005 <_entry-0x6ffffffb>
-+    8000099c:	8b85                	and	a5,a5,1
-+    8000099e:	cb81                	beqz	a5,800009ae <uartgetc+0x20>
-     /* input data is ready. */
-     return ReadReg(RHR);
--    800009f4:	100007b7          	lui	a5,0x10000
--    800009f8:	0007c503          	lbu	a0,0(a5) # 10000000 <_entry-0x70000000>
-+    800009a0:	100007b7          	lui	a5,0x10000
-+    800009a4:	0007c503          	lbu	a0,0(a5) # 10000000 <_entry-0x70000000>
-   } else {
-     return -1;
-   }
- }
--    800009fc:	6422                	ld	s0,8(sp)
--    800009fe:	0141                	addi	sp,sp,16
--    80000a00:	8082                	ret
-+    800009a8:	6422                	ld	s0,8(sp)
-+    800009aa:	0141                	add	sp,sp,16
-+    800009ac:	8082                	ret
-     return -1;
--    80000a02:	557d                	li	a0,-1
--    80000a04:	bfe5                	j	800009fc <uartgetc+0x1c>
-+    800009ae:	557d                	li	a0,-1
-+    800009b0:	bfe5                	j	800009a8 <uartgetc+0x1a>
- 
--0000000080000a06 <uartintr>:
-+00000000800009b2 <uartintr>:
- /* handle a uart interrupt, raised because input has */
- /* arrived, or the uart is ready for more output, or */
- /* both. called from devintr(). */
- void
- uartintr(void)
- {
--    80000a06:	1101                	addi	sp,sp,-32
--    80000a08:	ec06                	sd	ra,24(sp)
--    80000a0a:	e822                	sd	s0,16(sp)
--    80000a0c:	e426                	sd	s1,8(sp)
--    80000a0e:	1000                	addi	s0,sp,32
-+    800009b2:	1101                	add	sp,sp,-32
-+    800009b4:	ec06                	sd	ra,24(sp)
-+    800009b6:	e822                	sd	s0,16(sp)
-+    800009b8:	e426                	sd	s1,8(sp)
-+    800009ba:	1000                	add	s0,sp,32
-   /* read and process incoming characters. */
-   while(1){
-     int c = uartgetc();
-     if(c == -1)
--    80000a10:	54fd                	li	s1,-1
--    80000a12:	a019                	j	80000a18 <uartintr+0x12>
-+    800009bc:	54fd                	li	s1,-1
-+    800009be:	a019                	j	800009c4 <uartintr+0x12>
-       break;
-     consoleintr(c);
--    80000a14:	85fff0ef          	jal	80000272 <consoleintr>
-+    800009c0:	897ff0ef          	jal	80000256 <consoleintr>
-     int c = uartgetc();
--    80000a18:	fc9ff0ef          	jal	800009e0 <uartgetc>
-+    800009c4:	fcbff0ef          	jal	8000098e <uartgetc>
-     if(c == -1)
--    80000a1c:	fe951ce3          	bne	a0,s1,80000a14 <uartintr+0xe>
-+    800009c8:	fe951ce3          	bne	a0,s1,800009c0 <uartintr+0xe>
-   }
- 
-   /* send buffered characters. */
-   acquire(&uart_tx_lock);
--    80000a20:	00012497          	auipc	s1,0x12
--    80000a24:	8a848493          	addi	s1,s1,-1880 # 800122c8 <uart_tx_lock>
--    80000a28:	8526                	mv	a0,s1
--    80000a2a:	1ca000ef          	jal	80000bf4 <acquire>
-+    800009cc:	0000f497          	auipc	s1,0xf
-+    800009d0:	00c48493          	add	s1,s1,12 # 8000f9d8 <uart_tx_lock>
-+    800009d4:	8526                	mv	a0,s1
-+    800009d6:	1ca000ef          	jal	80000ba0 <acquire>
-   uartstart();
--    80000a2e:	e6dff0ef          	jal	8000089a <uartstart>
-+    800009da:	e7dff0ef          	jal	80000856 <uartstart>
-   release(&uart_tx_lock);
--    80000a32:	8526                	mv	a0,s1
--    80000a34:	258000ef          	jal	80000c8c <release>
-+    800009de:	8526                	mv	a0,s1
-+    800009e0:	258000ef          	jal	80000c38 <release>
- }
--    80000a38:	60e2                	ld	ra,24(sp)
--    80000a3a:	6442                	ld	s0,16(sp)
--    80000a3c:	64a2                	ld	s1,8(sp)
--    80000a3e:	6105                	addi	sp,sp,32
--    80000a40:	8082                	ret
-+    800009e4:	60e2                	ld	ra,24(sp)
-+    800009e6:	6442                	ld	s0,16(sp)
-+    800009e8:	64a2                	ld	s1,8(sp)
-+    800009ea:	6105                	add	sp,sp,32
-+    800009ec:	8082                	ret
- 
--0000000080000a42 <kfree>:
-+00000000800009ee <kfree>:
- /* which normally should have been returned by a */
- /* call to kalloc().  (The exception is when */
- /* initializing the allocator; see kinit above.) */
- void
- kfree(void *pa)
- {
--    80000a42:	1101                	addi	sp,sp,-32
--    80000a44:	ec06                	sd	ra,24(sp)
--    80000a46:	e822                	sd	s0,16(sp)
--    80000a48:	e426                	sd	s1,8(sp)
--    80000a4a:	e04a                	sd	s2,0(sp)
--    80000a4c:	1000                	addi	s0,sp,32
-+    800009ee:	1101                	add	sp,sp,-32
-+    800009f0:	ec06                	sd	ra,24(sp)
-+    800009f2:	e822                	sd	s0,16(sp)
-+    800009f4:	e426                	sd	s1,8(sp)
-+    800009f6:	e04a                	sd	s2,0(sp)
-+    800009f8:	1000                	add	s0,sp,32
-   struct run *r;
- 
-   if(((uint64)pa % PGSIZE) != 0 || (char*)pa < end || (uint64)pa >= PHYSTOP)
--    80000a4e:	03451793          	slli	a5,a0,0x34
--    80000a52:	e7a9                	bnez	a5,80000a9c <kfree+0x5a>
--    80000a54:	84aa                	mv	s1,a0
--    80000a56:	00023797          	auipc	a5,0x23
--    80000a5a:	ada78793          	addi	a5,a5,-1318 # 80023530 <end>
--    80000a5e:	02f56f63          	bltu	a0,a5,80000a9c <kfree+0x5a>
--    80000a62:	47c5                	li	a5,17
--    80000a64:	07ee                	slli	a5,a5,0x1b
--    80000a66:	02f57b63          	bgeu	a0,a5,80000a9c <kfree+0x5a>
-+    800009fa:	03451793          	sll	a5,a0,0x34
-+    800009fe:	e7a9                	bnez	a5,80000a48 <kfree+0x5a>
-+    80000a00:	84aa                	mv	s1,a0
-+    80000a02:	00020797          	auipc	a5,0x20
-+    80000a06:	23e78793          	add	a5,a5,574 # 80020c40 <end>
-+    80000a0a:	02f56f63          	bltu	a0,a5,80000a48 <kfree+0x5a>
-+    80000a0e:	47c5                	li	a5,17
-+    80000a10:	07ee                	sll	a5,a5,0x1b
-+    80000a12:	02f57b63          	bgeu	a0,a5,80000a48 <kfree+0x5a>
-     panic("kfree");
- 
-   /* Fill with junk to catch dangling refs. */
-   memset(pa, 1, PGSIZE);
--    80000a6a:	6605                	lui	a2,0x1
--    80000a6c:	4585                	li	a1,1
--    80000a6e:	25a000ef          	jal	80000cc8 <memset>
-+    80000a16:	6605                	lui	a2,0x1
-+    80000a18:	4585                	li	a1,1
-+    80000a1a:	25a000ef          	jal	80000c74 <memset>
- 
-   r = (struct run*)pa;
- 
-   acquire(&kmem.lock);
--    80000a72:	00012917          	auipc	s2,0x12
--    80000a76:	88e90913          	addi	s2,s2,-1906 # 80012300 <kmem>
--    80000a7a:	854a                	mv	a0,s2
--    80000a7c:	178000ef          	jal	80000bf4 <acquire>
-+    80000a1e:	0000f917          	auipc	s2,0xf
-+    80000a22:	ff290913          	add	s2,s2,-14 # 8000fa10 <kmem>
-+    80000a26:	854a                	mv	a0,s2
-+    80000a28:	178000ef          	jal	80000ba0 <acquire>
-   r->next = kmem.freelist;
--    80000a80:	01893783          	ld	a5,24(s2)
--    80000a84:	e09c                	sd	a5,0(s1)
-+    80000a2c:	01893783          	ld	a5,24(s2)
-+    80000a30:	e09c                	sd	a5,0(s1)
-   kmem.freelist = r;
--    80000a86:	00993c23          	sd	s1,24(s2)
-+    80000a32:	00993c23          	sd	s1,24(s2)
-   release(&kmem.lock);
--    80000a8a:	854a                	mv	a0,s2
--    80000a8c:	200000ef          	jal	80000c8c <release>
--}
--    80000a90:	60e2                	ld	ra,24(sp)
--    80000a92:	6442                	ld	s0,16(sp)
--    80000a94:	64a2                	ld	s1,8(sp)
--    80000a96:	6902                	ld	s2,0(sp)
--    80000a98:	6105                	addi	sp,sp,32
--    80000a9a:	8082                	ret
-+    80000a36:	854a                	mv	a0,s2
-+    80000a38:	200000ef          	jal	80000c38 <release>
-+}
-+    80000a3c:	60e2                	ld	ra,24(sp)
-+    80000a3e:	6442                	ld	s0,16(sp)
-+    80000a40:	64a2                	ld	s1,8(sp)
-+    80000a42:	6902                	ld	s2,0(sp)
-+    80000a44:	6105                	add	sp,sp,32
-+    80000a46:	8082                	ret
-     panic("kfree");
--    80000a9c:	00006517          	auipc	a0,0x6
--    80000aa0:	59c50513          	addi	a0,a0,1436 # 80007038 <etext+0x38>
--    80000aa4:	cf1ff0ef          	jal	80000794 <panic>
--
--0000000080000aa8 <freerange>:
--{
--    80000aa8:	7179                	addi	sp,sp,-48
--    80000aaa:	f406                	sd	ra,40(sp)
--    80000aac:	f022                	sd	s0,32(sp)
--    80000aae:	ec26                	sd	s1,24(sp)
--    80000ab0:	1800                	addi	s0,sp,48
-+    80000a48:	00006517          	auipc	a0,0x6
-+    80000a4c:	61050513          	add	a0,a0,1552 # 80007058 <digits+0x20>
-+    80000a50:	d0fff0ef          	jal	8000075e <panic>
-+
-+0000000080000a54 <freerange>:
-+{
-+    80000a54:	7179                	add	sp,sp,-48
-+    80000a56:	f406                	sd	ra,40(sp)
-+    80000a58:	f022                	sd	s0,32(sp)
-+    80000a5a:	ec26                	sd	s1,24(sp)
-+    80000a5c:	e84a                	sd	s2,16(sp)
-+    80000a5e:	e44e                	sd	s3,8(sp)
-+    80000a60:	e052                	sd	s4,0(sp)
-+    80000a62:	1800                	add	s0,sp,48
-   p = (char*)PGROUNDUP((uint64)pa_start);
--    80000ab2:	6785                	lui	a5,0x1
--    80000ab4:	fff78713          	addi	a4,a5,-1 # fff <_entry-0x7ffff001>
--    80000ab8:	00e504b3          	add	s1,a0,a4
--    80000abc:	777d                	lui	a4,0xfffff
--    80000abe:	8cf9                	and	s1,s1,a4
-+    80000a64:	6785                	lui	a5,0x1
-+    80000a66:	fff78713          	add	a4,a5,-1 # fff <_entry-0x7ffff001>
-+    80000a6a:	00e504b3          	add	s1,a0,a4
-+    80000a6e:	777d                	lui	a4,0xfffff
-+    80000a70:	8cf9                	and	s1,s1,a4
-   for(; p + PGSIZE <= (char*)pa_end; p += PGSIZE)
--    80000ac0:	94be                	add	s1,s1,a5
--    80000ac2:	0295e263          	bltu	a1,s1,80000ae6 <freerange+0x3e>
--    80000ac6:	e84a                	sd	s2,16(sp)
--    80000ac8:	e44e                	sd	s3,8(sp)
--    80000aca:	e052                	sd	s4,0(sp)
--    80000acc:	892e                	mv	s2,a1
-+    80000a72:	94be                	add	s1,s1,a5
-+    80000a74:	0095ec63          	bltu	a1,s1,80000a8c <freerange+0x38>
-+    80000a78:	892e                	mv	s2,a1
-     kfree(p);
--    80000ace:	7a7d                	lui	s4,0xfffff
-+    80000a7a:	7a7d                	lui	s4,0xfffff
-   for(; p + PGSIZE <= (char*)pa_end; p += PGSIZE)
--    80000ad0:	6985                	lui	s3,0x1
-+    80000a7c:	6985                	lui	s3,0x1
-     kfree(p);
--    80000ad2:	01448533          	add	a0,s1,s4
--    80000ad6:	f6dff0ef          	jal	80000a42 <kfree>
-+    80000a7e:	01448533          	add	a0,s1,s4
-+    80000a82:	f6dff0ef          	jal	800009ee <kfree>
-   for(; p + PGSIZE <= (char*)pa_end; p += PGSIZE)
--    80000ada:	94ce                	add	s1,s1,s3
--    80000adc:	fe997be3          	bgeu	s2,s1,80000ad2 <freerange+0x2a>
--    80000ae0:	6942                	ld	s2,16(sp)
--    80000ae2:	69a2                	ld	s3,8(sp)
--    80000ae4:	6a02                	ld	s4,0(sp)
--}
--    80000ae6:	70a2                	ld	ra,40(sp)
--    80000ae8:	7402                	ld	s0,32(sp)
--    80000aea:	64e2                	ld	s1,24(sp)
--    80000aec:	6145                	addi	sp,sp,48
--    80000aee:	8082                	ret
--
--0000000080000af0 <kinit>:
--{
--    80000af0:	1141                	addi	sp,sp,-16
--    80000af2:	e406                	sd	ra,8(sp)
--    80000af4:	e022                	sd	s0,0(sp)
--    80000af6:	0800                	addi	s0,sp,16
-+    80000a86:	94ce                	add	s1,s1,s3
-+    80000a88:	fe997be3          	bgeu	s2,s1,80000a7e <freerange+0x2a>
-+}
-+    80000a8c:	70a2                	ld	ra,40(sp)
-+    80000a8e:	7402                	ld	s0,32(sp)
-+    80000a90:	64e2                	ld	s1,24(sp)
-+    80000a92:	6942                	ld	s2,16(sp)
-+    80000a94:	69a2                	ld	s3,8(sp)
-+    80000a96:	6a02                	ld	s4,0(sp)
-+    80000a98:	6145                	add	sp,sp,48
-+    80000a9a:	8082                	ret
-+
-+0000000080000a9c <kinit>:
-+{
-+    80000a9c:	1141                	add	sp,sp,-16
-+    80000a9e:	e406                	sd	ra,8(sp)
-+    80000aa0:	e022                	sd	s0,0(sp)
-+    80000aa2:	0800                	add	s0,sp,16
-   initlock(&kmem.lock, "kmem");
--    80000af8:	00006597          	auipc	a1,0x6
--    80000afc:	54858593          	addi	a1,a1,1352 # 80007040 <etext+0x40>
--    80000b00:	00012517          	auipc	a0,0x12
--    80000b04:	80050513          	addi	a0,a0,-2048 # 80012300 <kmem>
--    80000b08:	06c000ef          	jal	80000b74 <initlock>
-+    80000aa4:	00006597          	auipc	a1,0x6
-+    80000aa8:	5bc58593          	add	a1,a1,1468 # 80007060 <digits+0x28>
-+    80000aac:	0000f517          	auipc	a0,0xf
-+    80000ab0:	f6450513          	add	a0,a0,-156 # 8000fa10 <kmem>
-+    80000ab4:	06c000ef          	jal	80000b20 <initlock>
-   freerange(end, (void*)PHYSTOP);
--    80000b0c:	45c5                	li	a1,17
--    80000b0e:	05ee                	slli	a1,a1,0x1b
--    80000b10:	00023517          	auipc	a0,0x23
--    80000b14:	a2050513          	addi	a0,a0,-1504 # 80023530 <end>
--    80000b18:	f91ff0ef          	jal	80000aa8 <freerange>
--}
--    80000b1c:	60a2                	ld	ra,8(sp)
--    80000b1e:	6402                	ld	s0,0(sp)
--    80000b20:	0141                	addi	sp,sp,16
--    80000b22:	8082                	ret
--
--0000000080000b24 <kalloc>:
-+    80000ab8:	45c5                	li	a1,17
-+    80000aba:	05ee                	sll	a1,a1,0x1b
-+    80000abc:	00020517          	auipc	a0,0x20
-+    80000ac0:	18450513          	add	a0,a0,388 # 80020c40 <end>
-+    80000ac4:	f91ff0ef          	jal	80000a54 <freerange>
-+}
-+    80000ac8:	60a2                	ld	ra,8(sp)
-+    80000aca:	6402                	ld	s0,0(sp)
-+    80000acc:	0141                	add	sp,sp,16
-+    80000ace:	8082                	ret
-+
-+0000000080000ad0 <kalloc>:
- /* Allocate one 4096-byte page of physical memory. */
- /* Returns a pointer that the kernel can use. */
- /* Returns 0 if the memory cannot be allocated. */
- void *
- kalloc(void)
- {
--    80000b24:	1101                	addi	sp,sp,-32
--    80000b26:	ec06                	sd	ra,24(sp)
--    80000b28:	e822                	sd	s0,16(sp)
--    80000b2a:	e426                	sd	s1,8(sp)
--    80000b2c:	1000                	addi	s0,sp,32
-+    80000ad0:	1101                	add	sp,sp,-32
-+    80000ad2:	ec06                	sd	ra,24(sp)
-+    80000ad4:	e822                	sd	s0,16(sp)
-+    80000ad6:	e426                	sd	s1,8(sp)
-+    80000ad8:	1000                	add	s0,sp,32
-   struct run *r;
- 
-   acquire(&kmem.lock);
--    80000b2e:	00011497          	auipc	s1,0x11
--    80000b32:	7d248493          	addi	s1,s1,2002 # 80012300 <kmem>
--    80000b36:	8526                	mv	a0,s1
--    80000b38:	0bc000ef          	jal	80000bf4 <acquire>
-+    80000ada:	0000f497          	auipc	s1,0xf
-+    80000ade:	f3648493          	add	s1,s1,-202 # 8000fa10 <kmem>
-+    80000ae2:	8526                	mv	a0,s1
-+    80000ae4:	0bc000ef          	jal	80000ba0 <acquire>
-   r = kmem.freelist;
--    80000b3c:	6c84                	ld	s1,24(s1)
-+    80000ae8:	6c84                	ld	s1,24(s1)
-   if(r)
--    80000b3e:	c485                	beqz	s1,80000b66 <kalloc+0x42>
-+    80000aea:	c485                	beqz	s1,80000b12 <kalloc+0x42>
-     kmem.freelist = r->next;
--    80000b40:	609c                	ld	a5,0(s1)
--    80000b42:	00011517          	auipc	a0,0x11
--    80000b46:	7be50513          	addi	a0,a0,1982 # 80012300 <kmem>
--    80000b4a:	ed1c                	sd	a5,24(a0)
-+    80000aec:	609c                	ld	a5,0(s1)
-+    80000aee:	0000f517          	auipc	a0,0xf
-+    80000af2:	f2250513          	add	a0,a0,-222 # 8000fa10 <kmem>
-+    80000af6:	ed1c                	sd	a5,24(a0)
-   release(&kmem.lock);
--    80000b4c:	140000ef          	jal	80000c8c <release>
-+    80000af8:	140000ef          	jal	80000c38 <release>
- 
-   if(r)
-     memset((char*)r, 5, PGSIZE); /* fill with junk */
--    80000b50:	6605                	lui	a2,0x1
--    80000b52:	4595                	li	a1,5
--    80000b54:	8526                	mv	a0,s1
--    80000b56:	172000ef          	jal	80000cc8 <memset>
-+    80000afc:	6605                	lui	a2,0x1
-+    80000afe:	4595                	li	a1,5
-+    80000b00:	8526                	mv	a0,s1
-+    80000b02:	172000ef          	jal	80000c74 <memset>
-   return (void*)r;
- }
--    80000b5a:	8526                	mv	a0,s1
--    80000b5c:	60e2                	ld	ra,24(sp)
--    80000b5e:	6442                	ld	s0,16(sp)
--    80000b60:	64a2                	ld	s1,8(sp)
--    80000b62:	6105                	addi	sp,sp,32
--    80000b64:	8082                	ret
-+    80000b06:	8526                	mv	a0,s1
-+    80000b08:	60e2                	ld	ra,24(sp)
-+    80000b0a:	6442                	ld	s0,16(sp)
-+    80000b0c:	64a2                	ld	s1,8(sp)
-+    80000b0e:	6105                	add	sp,sp,32
-+    80000b10:	8082                	ret
-   release(&kmem.lock);
--    80000b66:	00011517          	auipc	a0,0x11
--    80000b6a:	79a50513          	addi	a0,a0,1946 # 80012300 <kmem>
--    80000b6e:	11e000ef          	jal	80000c8c <release>
-+    80000b12:	0000f517          	auipc	a0,0xf
-+    80000b16:	efe50513          	add	a0,a0,-258 # 8000fa10 <kmem>
-+    80000b1a:	11e000ef          	jal	80000c38 <release>
-   if(r)
--    80000b72:	b7e5                	j	80000b5a <kalloc+0x36>
-+    80000b1e:	b7e5                	j	80000b06 <kalloc+0x36>
- 
--0000000080000b74 <initlock>:
-+0000000080000b20 <initlock>:
- #include "proc.h"
- #include "defs.h"
- 
- void
- initlock(struct spinlock *lk, char *name)
- {
--    80000b74:	1141                	addi	sp,sp,-16
--    80000b76:	e422                	sd	s0,8(sp)
--    80000b78:	0800                	addi	s0,sp,16
-+    80000b20:	1141                	add	sp,sp,-16
-+    80000b22:	e422                	sd	s0,8(sp)
-+    80000b24:	0800                	add	s0,sp,16
-   lk->name = name;
--    80000b7a:	e50c                	sd	a1,8(a0)
-+    80000b26:	e50c                	sd	a1,8(a0)
-   lk->locked = 0;
--    80000b7c:	00052023          	sw	zero,0(a0)
-+    80000b28:	00052023          	sw	zero,0(a0)
-   lk->cpu = 0;
--    80000b80:	00053823          	sd	zero,16(a0)
-+    80000b2c:	00053823          	sd	zero,16(a0)
- }
--    80000b84:	6422                	ld	s0,8(sp)
--    80000b86:	0141                	addi	sp,sp,16
--    80000b88:	8082                	ret
-+    80000b30:	6422                	ld	s0,8(sp)
-+    80000b32:	0141                	add	sp,sp,16
-+    80000b34:	8082                	ret
- 
--0000000080000b8a <holding>:
-+0000000080000b36 <holding>:
- /* Interrupts must be off. */
- int
- holding(struct spinlock *lk)
- {
-   int r;
-   r = (lk->locked && lk->cpu == mycpu());
--    80000b8a:	411c                	lw	a5,0(a0)
--    80000b8c:	e399                	bnez	a5,80000b92 <holding+0x8>
--    80000b8e:	4501                	li	a0,0
-+    80000b36:	411c                	lw	a5,0(a0)
-+    80000b38:	e399                	bnez	a5,80000b3e <holding+0x8>
-+    80000b3a:	4501                	li	a0,0
-   return r;
- }
--    80000b90:	8082                	ret
-+    80000b3c:	8082                	ret
- {
--    80000b92:	1101                	addi	sp,sp,-32
--    80000b94:	ec06                	sd	ra,24(sp)
--    80000b96:	e822                	sd	s0,16(sp)
--    80000b98:	e426                	sd	s1,8(sp)
--    80000b9a:	1000                	addi	s0,sp,32
-+    80000b3e:	1101                	add	sp,sp,-32
-+    80000b40:	ec06                	sd	ra,24(sp)
-+    80000b42:	e822                	sd	s0,16(sp)
-+    80000b44:	e426                	sd	s1,8(sp)
-+    80000b46:	1000                	add	s0,sp,32
-   r = (lk->locked && lk->cpu == mycpu());
--    80000b9c:	6904                	ld	s1,16(a0)
--    80000b9e:	527000ef          	jal	800018c4 <mycpu>
--    80000ba2:	40a48533          	sub	a0,s1,a0
--    80000ba6:	00153513          	seqz	a0,a0
--}
--    80000baa:	60e2                	ld	ra,24(sp)
--    80000bac:	6442                	ld	s0,16(sp)
--    80000bae:	64a2                	ld	s1,8(sp)
--    80000bb0:	6105                	addi	sp,sp,32
--    80000bb2:	8082                	ret
--
--0000000080000bb4 <push_off>:
-+    80000b48:	6904                	ld	s1,16(a0)
-+    80000b4a:	4cb000ef          	jal	80001814 <mycpu>
-+    80000b4e:	40a48533          	sub	a0,s1,a0
-+    80000b52:	00153513          	seqz	a0,a0
-+}
-+    80000b56:	60e2                	ld	ra,24(sp)
-+    80000b58:	6442                	ld	s0,16(sp)
-+    80000b5a:	64a2                	ld	s1,8(sp)
-+    80000b5c:	6105                	add	sp,sp,32
-+    80000b5e:	8082                	ret
-+
-+0000000080000b60 <push_off>:
- /* it takes two pop_off()s to undo two push_off()s.  Also, if interrupts */
- /* are initially off, then push_off, pop_off leaves them off. */
- 
- void
- push_off(void)
- {
--    80000bb4:	1101                	addi	sp,sp,-32
--    80000bb6:	ec06                	sd	ra,24(sp)
--    80000bb8:	e822                	sd	s0,16(sp)
--    80000bba:	e426                	sd	s1,8(sp)
--    80000bbc:	1000                	addi	s0,sp,32
-+    80000b60:	1101                	add	sp,sp,-32
-+    80000b62:	ec06                	sd	ra,24(sp)
-+    80000b64:	e822                	sd	s0,16(sp)
-+    80000b66:	e426                	sd	s1,8(sp)
-+    80000b68:	1000                	add	s0,sp,32
-   asm volatile("csrr %0, sstatus" : "=r" (x) );
--    80000bbe:	100024f3          	csrr	s1,sstatus
--    80000bc2:	100027f3          	csrr	a5,sstatus
-+    80000b6a:	100024f3          	csrr	s1,sstatus
-+    80000b6e:	100027f3          	csrr	a5,sstatus
-   w_sstatus(r_sstatus() & ~SSTATUS_SIE);
--    80000bc6:	9bf5                	andi	a5,a5,-3
-+    80000b72:	9bf5                	and	a5,a5,-3
-   asm volatile("csrw sstatus, %0" : : "r" (x));
--    80000bc8:	10079073          	csrw	sstatus,a5
-+    80000b74:	10079073          	csrw	sstatus,a5
-   int old = intr_get();
- 
-   intr_off();
-   if(mycpu()->noff == 0)
--    80000bcc:	4f9000ef          	jal	800018c4 <mycpu>
--    80000bd0:	5d3c                	lw	a5,120(a0)
--    80000bd2:	cb99                	beqz	a5,80000be8 <push_off+0x34>
-+    80000b78:	49d000ef          	jal	80001814 <mycpu>
-+    80000b7c:	5d3c                	lw	a5,120(a0)
-+    80000b7e:	cb99                	beqz	a5,80000b94 <push_off+0x34>
-     mycpu()->intena = old;
-   mycpu()->noff += 1;
--    80000bd4:	4f1000ef          	jal	800018c4 <mycpu>
--    80000bd8:	5d3c                	lw	a5,120(a0)
--    80000bda:	2785                	addiw	a5,a5,1
--    80000bdc:	dd3c                	sw	a5,120(a0)
--}
--    80000bde:	60e2                	ld	ra,24(sp)
--    80000be0:	6442                	ld	s0,16(sp)
--    80000be2:	64a2                	ld	s1,8(sp)
--    80000be4:	6105                	addi	sp,sp,32
--    80000be6:	8082                	ret
-+    80000b80:	495000ef          	jal	80001814 <mycpu>
-+    80000b84:	5d3c                	lw	a5,120(a0)
-+    80000b86:	2785                	addw	a5,a5,1
-+    80000b88:	dd3c                	sw	a5,120(a0)
-+}
-+    80000b8a:	60e2                	ld	ra,24(sp)
-+    80000b8c:	6442                	ld	s0,16(sp)
-+    80000b8e:	64a2                	ld	s1,8(sp)
-+    80000b90:	6105                	add	sp,sp,32
-+    80000b92:	8082                	ret
-     mycpu()->intena = old;
--    80000be8:	4dd000ef          	jal	800018c4 <mycpu>
-+    80000b94:	481000ef          	jal	80001814 <mycpu>
-   return (x & SSTATUS_SIE) != 0;
--    80000bec:	8085                	srli	s1,s1,0x1
--    80000bee:	8885                	andi	s1,s1,1
--    80000bf0:	dd64                	sw	s1,124(a0)
--    80000bf2:	b7cd                	j	80000bd4 <push_off+0x20>
--
--0000000080000bf4 <acquire>:
--{
--    80000bf4:	1101                	addi	sp,sp,-32
--    80000bf6:	ec06                	sd	ra,24(sp)
--    80000bf8:	e822                	sd	s0,16(sp)
--    80000bfa:	e426                	sd	s1,8(sp)
--    80000bfc:	1000                	addi	s0,sp,32
--    80000bfe:	84aa                	mv	s1,a0
-+    80000b98:	8085                	srl	s1,s1,0x1
-+    80000b9a:	8885                	and	s1,s1,1
-+    80000b9c:	dd64                	sw	s1,124(a0)
-+    80000b9e:	b7cd                	j	80000b80 <push_off+0x20>
-+
-+0000000080000ba0 <acquire>:
-+{
-+    80000ba0:	1101                	add	sp,sp,-32
-+    80000ba2:	ec06                	sd	ra,24(sp)
-+    80000ba4:	e822                	sd	s0,16(sp)
-+    80000ba6:	e426                	sd	s1,8(sp)
-+    80000ba8:	1000                	add	s0,sp,32
-+    80000baa:	84aa                	mv	s1,a0
-   push_off(); /* disable interrupts to avoid deadlock. */
--    80000c00:	fb5ff0ef          	jal	80000bb4 <push_off>
-+    80000bac:	fb5ff0ef          	jal	80000b60 <push_off>
-   if(holding(lk))
--    80000c04:	8526                	mv	a0,s1
--    80000c06:	f85ff0ef          	jal	80000b8a <holding>
-+    80000bb0:	8526                	mv	a0,s1
-+    80000bb2:	f85ff0ef          	jal	80000b36 <holding>
-   while(__sync_lock_test_and_set(&lk->locked, 1) != 0)
--    80000c0a:	4705                	li	a4,1
-+    80000bb6:	4705                	li	a4,1
-   if(holding(lk))
--    80000c0c:	e105                	bnez	a0,80000c2c <acquire+0x38>
-+    80000bb8:	e105                	bnez	a0,80000bd8 <acquire+0x38>
-   while(__sync_lock_test_and_set(&lk->locked, 1) != 0)
--    80000c0e:	87ba                	mv	a5,a4
--    80000c10:	0cf4a7af          	amoswap.w.aq	a5,a5,(s1)
--    80000c14:	2781                	sext.w	a5,a5
--    80000c16:	ffe5                	bnez	a5,80000c0e <acquire+0x1a>
-+    80000bba:	87ba                	mv	a5,a4
-+    80000bbc:	0cf4a7af          	amoswap.w.aq	a5,a5,(s1)
-+    80000bc0:	2781                	sext.w	a5,a5
-+    80000bc2:	ffe5                	bnez	a5,80000bba <acquire+0x1a>
-   __sync_synchronize();
--    80000c18:	0ff0000f          	fence
-+    80000bc4:	0ff0000f          	fence
-   lk->cpu = mycpu();
--    80000c1c:	4a9000ef          	jal	800018c4 <mycpu>
--    80000c20:	e888                	sd	a0,16(s1)
--}
--    80000c22:	60e2                	ld	ra,24(sp)
--    80000c24:	6442                	ld	s0,16(sp)
--    80000c26:	64a2                	ld	s1,8(sp)
--    80000c28:	6105                	addi	sp,sp,32
--    80000c2a:	8082                	ret
-+    80000bc8:	44d000ef          	jal	80001814 <mycpu>
-+    80000bcc:	e888                	sd	a0,16(s1)
-+}
-+    80000bce:	60e2                	ld	ra,24(sp)
-+    80000bd0:	6442                	ld	s0,16(sp)
-+    80000bd2:	64a2                	ld	s1,8(sp)
-+    80000bd4:	6105                	add	sp,sp,32
-+    80000bd6:	8082                	ret
-     panic("acquire");
--    80000c2c:	00006517          	auipc	a0,0x6
--    80000c30:	41c50513          	addi	a0,a0,1052 # 80007048 <etext+0x48>
--    80000c34:	b61ff0ef          	jal	80000794 <panic>
-+    80000bd8:	00006517          	auipc	a0,0x6
-+    80000bdc:	49050513          	add	a0,a0,1168 # 80007068 <digits+0x30>
-+    80000be0:	b7fff0ef          	jal	8000075e <panic>
- 
--0000000080000c38 <pop_off>:
-+0000000080000be4 <pop_off>:
- 
- void
- pop_off(void)
- {
--    80000c38:	1141                	addi	sp,sp,-16
--    80000c3a:	e406                	sd	ra,8(sp)
--    80000c3c:	e022                	sd	s0,0(sp)
--    80000c3e:	0800                	addi	s0,sp,16
-+    80000be4:	1141                	add	sp,sp,-16
-+    80000be6:	e406                	sd	ra,8(sp)
-+    80000be8:	e022                	sd	s0,0(sp)
-+    80000bea:	0800                	add	s0,sp,16
-   struct cpu *c = mycpu();
--    80000c40:	485000ef          	jal	800018c4 <mycpu>
-+    80000bec:	429000ef          	jal	80001814 <mycpu>
-   asm volatile("csrr %0, sstatus" : "=r" (x) );
--    80000c44:	100027f3          	csrr	a5,sstatus
-+    80000bf0:	100027f3          	csrr	a5,sstatus
-   return (x & SSTATUS_SIE) != 0;
--    80000c48:	8b89                	andi	a5,a5,2
-+    80000bf4:	8b89                	and	a5,a5,2
-   if(intr_get())
--    80000c4a:	e78d                	bnez	a5,80000c74 <pop_off+0x3c>
-+    80000bf6:	e78d                	bnez	a5,80000c20 <pop_off+0x3c>
-     panic("pop_off - interruptible");
-   if(c->noff < 1)
--    80000c4c:	5d3c                	lw	a5,120(a0)
--    80000c4e:	02f05963          	blez	a5,80000c80 <pop_off+0x48>
-+    80000bf8:	5d3c                	lw	a5,120(a0)
-+    80000bfa:	02f05963          	blez	a5,80000c2c <pop_off+0x48>
-     panic("pop_off");
-   c->noff -= 1;
--    80000c52:	37fd                	addiw	a5,a5,-1
--    80000c54:	0007871b          	sext.w	a4,a5
--    80000c58:	dd3c                	sw	a5,120(a0)
-+    80000bfe:	37fd                	addw	a5,a5,-1
-+    80000c00:	0007871b          	sext.w	a4,a5
-+    80000c04:	dd3c                	sw	a5,120(a0)
-   if(c->noff == 0 && c->intena)
--    80000c5a:	eb09                	bnez	a4,80000c6c <pop_off+0x34>
--    80000c5c:	5d7c                	lw	a5,124(a0)
--    80000c5e:	c799                	beqz	a5,80000c6c <pop_off+0x34>
-+    80000c06:	eb09                	bnez	a4,80000c18 <pop_off+0x34>
-+    80000c08:	5d7c                	lw	a5,124(a0)
-+    80000c0a:	c799                	beqz	a5,80000c18 <pop_off+0x34>
-   asm volatile("csrr %0, sstatus" : "=r" (x) );
--    80000c60:	100027f3          	csrr	a5,sstatus
-+    80000c0c:	100027f3          	csrr	a5,sstatus
-   w_sstatus(r_sstatus() | SSTATUS_SIE);
--    80000c64:	0027e793          	ori	a5,a5,2
-+    80000c10:	0027e793          	or	a5,a5,2
-   asm volatile("csrw sstatus, %0" : : "r" (x));
--    80000c68:	10079073          	csrw	sstatus,a5
-+    80000c14:	10079073          	csrw	sstatus,a5
-     intr_on();
- }
--    80000c6c:	60a2                	ld	ra,8(sp)
--    80000c6e:	6402                	ld	s0,0(sp)
--    80000c70:	0141                	addi	sp,sp,16
--    80000c72:	8082                	ret
-+    80000c18:	60a2                	ld	ra,8(sp)
-+    80000c1a:	6402                	ld	s0,0(sp)
-+    80000c1c:	0141                	add	sp,sp,16
-+    80000c1e:	8082                	ret
-     panic("pop_off - interruptible");
--    80000c74:	00006517          	auipc	a0,0x6
--    80000c78:	3dc50513          	addi	a0,a0,988 # 80007050 <etext+0x50>
--    80000c7c:	b19ff0ef          	jal	80000794 <panic>
-+    80000c20:	00006517          	auipc	a0,0x6
-+    80000c24:	45050513          	add	a0,a0,1104 # 80007070 <digits+0x38>
-+    80000c28:	b37ff0ef          	jal	8000075e <panic>
-     panic("pop_off");
--    80000c80:	00006517          	auipc	a0,0x6
--    80000c84:	3e850513          	addi	a0,a0,1000 # 80007068 <etext+0x68>
--    80000c88:	b0dff0ef          	jal	80000794 <panic>
--
--0000000080000c8c <release>:
--{
--    80000c8c:	1101                	addi	sp,sp,-32
--    80000c8e:	ec06                	sd	ra,24(sp)
--    80000c90:	e822                	sd	s0,16(sp)
--    80000c92:	e426                	sd	s1,8(sp)
--    80000c94:	1000                	addi	s0,sp,32
--    80000c96:	84aa                	mv	s1,a0
-+    80000c2c:	00006517          	auipc	a0,0x6
-+    80000c30:	45c50513          	add	a0,a0,1116 # 80007088 <digits+0x50>
-+    80000c34:	b2bff0ef          	jal	8000075e <panic>
-+
-+0000000080000c38 <release>:
-+{
-+    80000c38:	1101                	add	sp,sp,-32
-+    80000c3a:	ec06                	sd	ra,24(sp)
-+    80000c3c:	e822                	sd	s0,16(sp)
-+    80000c3e:	e426                	sd	s1,8(sp)
-+    80000c40:	1000                	add	s0,sp,32
-+    80000c42:	84aa                	mv	s1,a0
-   if(!holding(lk))
--    80000c98:	ef3ff0ef          	jal	80000b8a <holding>
--    80000c9c:	c105                	beqz	a0,80000cbc <release+0x30>
-+    80000c44:	ef3ff0ef          	jal	80000b36 <holding>
-+    80000c48:	c105                	beqz	a0,80000c68 <release+0x30>
-   lk->cpu = 0;
--    80000c9e:	0004b823          	sd	zero,16(s1)
-+    80000c4a:	0004b823          	sd	zero,16(s1)
-   __sync_synchronize();
--    80000ca2:	0ff0000f          	fence
-+    80000c4e:	0ff0000f          	fence
-   __sync_lock_release(&lk->locked);
--    80000ca6:	0f50000f          	fence	iorw,ow
--    80000caa:	0804a02f          	amoswap.w	zero,zero,(s1)
-+    80000c52:	0f50000f          	fence	iorw,ow
-+    80000c56:	0804a02f          	amoswap.w	zero,zero,(s1)
-   pop_off();
--    80000cae:	f8bff0ef          	jal	80000c38 <pop_off>
-+    80000c5a:	f8bff0ef          	jal	80000be4 <pop_off>
- }
--    80000cb2:	60e2                	ld	ra,24(sp)
--    80000cb4:	6442                	ld	s0,16(sp)
--    80000cb6:	64a2                	ld	s1,8(sp)
--    80000cb8:	6105                	addi	sp,sp,32
--    80000cba:	8082                	ret
-+    80000c5e:	60e2                	ld	ra,24(sp)
-+    80000c60:	6442                	ld	s0,16(sp)
-+    80000c62:	64a2                	ld	s1,8(sp)
-+    80000c64:	6105                	add	sp,sp,32
-+    80000c66:	8082                	ret
-     panic("release");
--    80000cbc:	00006517          	auipc	a0,0x6
--    80000cc0:	3b450513          	addi	a0,a0,948 # 80007070 <etext+0x70>
--    80000cc4:	ad1ff0ef          	jal	80000794 <panic>
-+    80000c68:	00006517          	auipc	a0,0x6
-+    80000c6c:	42850513          	add	a0,a0,1064 # 80007090 <digits+0x58>
-+    80000c70:	aefff0ef          	jal	8000075e <panic>
- 
--0000000080000cc8 <memset>:
-+0000000080000c74 <memset>:
- #include "types.h"
- 
- void*
- memset(void *dst, int c, uint n)
- {
--    80000cc8:	1141                	addi	sp,sp,-16
--    80000cca:	e422                	sd	s0,8(sp)
--    80000ccc:	0800                	addi	s0,sp,16
-+    80000c74:	1141                	add	sp,sp,-16
-+    80000c76:	e422                	sd	s0,8(sp)
-+    80000c78:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
--    80000cce:	ca19                	beqz	a2,80000ce4 <memset+0x1c>
--    80000cd0:	87aa                	mv	a5,a0
--    80000cd2:	1602                	slli	a2,a2,0x20
--    80000cd4:	9201                	srli	a2,a2,0x20
--    80000cd6:	00a60733          	add	a4,a2,a0
-+    80000c7a:	ca19                	beqz	a2,80000c90 <memset+0x1c>
-+    80000c7c:	87aa                	mv	a5,a0
-+    80000c7e:	1602                	sll	a2,a2,0x20
-+    80000c80:	9201                	srl	a2,a2,0x20
-+    80000c82:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
--    80000cda:	00b78023          	sb	a1,0(a5)
-+    80000c86:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
--    80000cde:	0785                	addi	a5,a5,1
--    80000ce0:	fee79de3          	bne	a5,a4,80000cda <memset+0x12>
-+    80000c8a:	0785                	add	a5,a5,1
-+    80000c8c:	fee79de3          	bne	a5,a4,80000c86 <memset+0x12>
-   }
-   return dst;
- }
--    80000ce4:	6422                	ld	s0,8(sp)
--    80000ce6:	0141                	addi	sp,sp,16
--    80000ce8:	8082                	ret
-+    80000c90:	6422                	ld	s0,8(sp)
-+    80000c92:	0141                	add	sp,sp,16
-+    80000c94:	8082                	ret
- 
--0000000080000cea <memcmp>:
-+0000000080000c96 <memcmp>:
- 
- int
- memcmp(const void *v1, const void *v2, uint n)
- {
--    80000cea:	1141                	addi	sp,sp,-16
--    80000cec:	e422                	sd	s0,8(sp)
--    80000cee:	0800                	addi	s0,sp,16
-+    80000c96:	1141                	add	sp,sp,-16
-+    80000c98:	e422                	sd	s0,8(sp)
-+    80000c9a:	0800                	add	s0,sp,16
-   const uchar *s1, *s2;
- 
-   s1 = v1;
-   s2 = v2;
-   while(n-- > 0){
--    80000cf0:	ca05                	beqz	a2,80000d20 <memcmp+0x36>
--    80000cf2:	fff6069b          	addiw	a3,a2,-1 # fff <_entry-0x7ffff001>
--    80000cf6:	1682                	slli	a3,a3,0x20
--    80000cf8:	9281                	srli	a3,a3,0x20
--    80000cfa:	0685                	addi	a3,a3,1
--    80000cfc:	96aa                	add	a3,a3,a0
-+    80000c9c:	ca05                	beqz	a2,80000ccc <memcmp+0x36>
-+    80000c9e:	fff6069b          	addw	a3,a2,-1 # fff <_entry-0x7ffff001>
-+    80000ca2:	1682                	sll	a3,a3,0x20
-+    80000ca4:	9281                	srl	a3,a3,0x20
-+    80000ca6:	0685                	add	a3,a3,1
-+    80000ca8:	96aa                	add	a3,a3,a0
-     if(*s1 != *s2)
--    80000cfe:	00054783          	lbu	a5,0(a0)
--    80000d02:	0005c703          	lbu	a4,0(a1)
--    80000d06:	00e79863          	bne	a5,a4,80000d16 <memcmp+0x2c>
-+    80000caa:	00054783          	lbu	a5,0(a0)
-+    80000cae:	0005c703          	lbu	a4,0(a1)
-+    80000cb2:	00e79863          	bne	a5,a4,80000cc2 <memcmp+0x2c>
-       return *s1 - *s2;
-     s1++, s2++;
--    80000d0a:	0505                	addi	a0,a0,1
--    80000d0c:	0585                	addi	a1,a1,1
-+    80000cb6:	0505                	add	a0,a0,1
-+    80000cb8:	0585                	add	a1,a1,1
-   while(n-- > 0){
--    80000d0e:	fed518e3          	bne	a0,a3,80000cfe <memcmp+0x14>
-+    80000cba:	fed518e3          	bne	a0,a3,80000caa <memcmp+0x14>
-   }
- 
-   return 0;
--    80000d12:	4501                	li	a0,0
--    80000d14:	a019                	j	80000d1a <memcmp+0x30>
-+    80000cbe:	4501                	li	a0,0
-+    80000cc0:	a019                	j	80000cc6 <memcmp+0x30>
-       return *s1 - *s2;
--    80000d16:	40e7853b          	subw	a0,a5,a4
-+    80000cc2:	40e7853b          	subw	a0,a5,a4
- }
--    80000d1a:	6422                	ld	s0,8(sp)
--    80000d1c:	0141                	addi	sp,sp,16
--    80000d1e:	8082                	ret
-+    80000cc6:	6422                	ld	s0,8(sp)
-+    80000cc8:	0141                	add	sp,sp,16
-+    80000cca:	8082                	ret
-   return 0;
--    80000d20:	4501                	li	a0,0
--    80000d22:	bfe5                	j	80000d1a <memcmp+0x30>
-+    80000ccc:	4501                	li	a0,0
-+    80000cce:	bfe5                	j	80000cc6 <memcmp+0x30>
- 
--0000000080000d24 <memmove>:
-+0000000080000cd0 <memmove>:
- 
- void*
- memmove(void *dst, const void *src, uint n)
- {
--    80000d24:	1141                	addi	sp,sp,-16
--    80000d26:	e422                	sd	s0,8(sp)
--    80000d28:	0800                	addi	s0,sp,16
-+    80000cd0:	1141                	add	sp,sp,-16
-+    80000cd2:	e422                	sd	s0,8(sp)
-+    80000cd4:	0800                	add	s0,sp,16
-   const char *s;
-   char *d;
- 
-   if(n == 0)
--    80000d2a:	c205                	beqz	a2,80000d4a <memmove+0x26>
-+    80000cd6:	c205                	beqz	a2,80000cf6 <memmove+0x26>
-     return dst;
-   
-   s = src;
-   d = dst;
-   if(s < d && s + n > d){
--    80000d2c:	02a5e263          	bltu	a1,a0,80000d50 <memmove+0x2c>
-+    80000cd8:	02a5e263          	bltu	a1,a0,80000cfc <memmove+0x2c>
-     s += n;
-     d += n;
-     while(n-- > 0)
-       *--d = *--s;
-   } else
-     while(n-- > 0)
--    80000d30:	1602                	slli	a2,a2,0x20
--    80000d32:	9201                	srli	a2,a2,0x20
--    80000d34:	00c587b3          	add	a5,a1,a2
-+    80000cdc:	1602                	sll	a2,a2,0x20
-+    80000cde:	9201                	srl	a2,a2,0x20
-+    80000ce0:	00c587b3          	add	a5,a1,a2
- {
--    80000d38:	872a                	mv	a4,a0
-+    80000ce4:	872a                	mv	a4,a0
-       *d++ = *s++;
--    80000d3a:	0585                	addi	a1,a1,1
--    80000d3c:	0705                	addi	a4,a4,1 # fffffffffffff001 <end+0xffffffff7ffdbad1>
--    80000d3e:	fff5c683          	lbu	a3,-1(a1)
--    80000d42:	fed70fa3          	sb	a3,-1(a4)
-+    80000ce6:	0585                	add	a1,a1,1
-+    80000ce8:	0705                	add	a4,a4,1 # fffffffffffff001 <end+0xffffffff7ffde3c1>
-+    80000cea:	fff5c683          	lbu	a3,-1(a1)
-+    80000cee:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
--    80000d46:	feb79ae3          	bne	a5,a1,80000d3a <memmove+0x16>
-+    80000cf2:	fef59ae3          	bne	a1,a5,80000ce6 <memmove+0x16>
- 
-   return dst;
- }
--    80000d4a:	6422                	ld	s0,8(sp)
--    80000d4c:	0141                	addi	sp,sp,16
--    80000d4e:	8082                	ret
-+    80000cf6:	6422                	ld	s0,8(sp)
-+    80000cf8:	0141                	add	sp,sp,16
-+    80000cfa:	8082                	ret
-   if(s < d && s + n > d){
--    80000d50:	02061693          	slli	a3,a2,0x20
--    80000d54:	9281                	srli	a3,a3,0x20
--    80000d56:	00d58733          	add	a4,a1,a3
--    80000d5a:	fce57be3          	bgeu	a0,a4,80000d30 <memmove+0xc>
-+    80000cfc:	02061693          	sll	a3,a2,0x20
-+    80000d00:	9281                	srl	a3,a3,0x20
-+    80000d02:	00d58733          	add	a4,a1,a3
-+    80000d06:	fce57be3          	bgeu	a0,a4,80000cdc <memmove+0xc>
-     d += n;
--    80000d5e:	96aa                	add	a3,a3,a0
-+    80000d0a:	96aa                	add	a3,a3,a0
-     while(n-- > 0)
--    80000d60:	fff6079b          	addiw	a5,a2,-1
--    80000d64:	1782                	slli	a5,a5,0x20
--    80000d66:	9381                	srli	a5,a5,0x20
--    80000d68:	fff7c793          	not	a5,a5
--    80000d6c:	97ba                	add	a5,a5,a4
-+    80000d0c:	fff6079b          	addw	a5,a2,-1
-+    80000d10:	1782                	sll	a5,a5,0x20
-+    80000d12:	9381                	srl	a5,a5,0x20
-+    80000d14:	fff7c793          	not	a5,a5
-+    80000d18:	97ba                	add	a5,a5,a4
-       *--d = *--s;
--    80000d6e:	177d                	addi	a4,a4,-1
--    80000d70:	16fd                	addi	a3,a3,-1
--    80000d72:	00074603          	lbu	a2,0(a4)
--    80000d76:	00c68023          	sb	a2,0(a3)
-+    80000d1a:	177d                	add	a4,a4,-1
-+    80000d1c:	16fd                	add	a3,a3,-1
-+    80000d1e:	00074603          	lbu	a2,0(a4)
-+    80000d22:	00c68023          	sb	a2,0(a3)
-     while(n-- > 0)
--    80000d7a:	fef71ae3          	bne	a4,a5,80000d6e <memmove+0x4a>
--    80000d7e:	b7f1                	j	80000d4a <memmove+0x26>
-+    80000d26:	fee79ae3          	bne	a5,a4,80000d1a <memmove+0x4a>
-+    80000d2a:	b7f1                	j	80000cf6 <memmove+0x26>
- 
--0000000080000d80 <memcpy>:
-+0000000080000d2c <memcpy>:
- 
- /* memcpy exists to placate GCC.  Use memmove. */
- void*
- memcpy(void *dst, const void *src, uint n)
- {
--    80000d80:	1141                	addi	sp,sp,-16
--    80000d82:	e406                	sd	ra,8(sp)
--    80000d84:	e022                	sd	s0,0(sp)
--    80000d86:	0800                	addi	s0,sp,16
-+    80000d2c:	1141                	add	sp,sp,-16
-+    80000d2e:	e406                	sd	ra,8(sp)
-+    80000d30:	e022                	sd	s0,0(sp)
-+    80000d32:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
--    80000d88:	f9dff0ef          	jal	80000d24 <memmove>
-+    80000d34:	f9dff0ef          	jal	80000cd0 <memmove>
- }
--    80000d8c:	60a2                	ld	ra,8(sp)
--    80000d8e:	6402                	ld	s0,0(sp)
--    80000d90:	0141                	addi	sp,sp,16
--    80000d92:	8082                	ret
-+    80000d38:	60a2                	ld	ra,8(sp)
-+    80000d3a:	6402                	ld	s0,0(sp)
-+    80000d3c:	0141                	add	sp,sp,16
-+    80000d3e:	8082                	ret
- 
--0000000080000d94 <strncmp>:
-+0000000080000d40 <strncmp>:
- 
- int
- strncmp(const char *p, const char *q, uint n)
- {
--    80000d94:	1141                	addi	sp,sp,-16
--    80000d96:	e422                	sd	s0,8(sp)
--    80000d98:	0800                	addi	s0,sp,16
-+    80000d40:	1141                	add	sp,sp,-16
-+    80000d42:	e422                	sd	s0,8(sp)
-+    80000d44:	0800                	add	s0,sp,16
-   while(n > 0 && *p && *p == *q)
--    80000d9a:	ce11                	beqz	a2,80000db6 <strncmp+0x22>
--    80000d9c:	00054783          	lbu	a5,0(a0)
--    80000da0:	cf89                	beqz	a5,80000dba <strncmp+0x26>
--    80000da2:	0005c703          	lbu	a4,0(a1)
--    80000da6:	00f71a63          	bne	a4,a5,80000dba <strncmp+0x26>
-+    80000d46:	ce11                	beqz	a2,80000d62 <strncmp+0x22>
-+    80000d48:	00054783          	lbu	a5,0(a0)
-+    80000d4c:	cf89                	beqz	a5,80000d66 <strncmp+0x26>
-+    80000d4e:	0005c703          	lbu	a4,0(a1)
-+    80000d52:	00f71a63          	bne	a4,a5,80000d66 <strncmp+0x26>
-     n--, p++, q++;
--    80000daa:	367d                	addiw	a2,a2,-1
--    80000dac:	0505                	addi	a0,a0,1
--    80000dae:	0585                	addi	a1,a1,1
-+    80000d56:	367d                	addw	a2,a2,-1
-+    80000d58:	0505                	add	a0,a0,1
-+    80000d5a:	0585                	add	a1,a1,1
-   while(n > 0 && *p && *p == *q)
--    80000db0:	f675                	bnez	a2,80000d9c <strncmp+0x8>
-+    80000d5c:	f675                	bnez	a2,80000d48 <strncmp+0x8>
-   if(n == 0)
-     return 0;
--    80000db2:	4501                	li	a0,0
--    80000db4:	a801                	j	80000dc4 <strncmp+0x30>
--    80000db6:	4501                	li	a0,0
--    80000db8:	a031                	j	80000dc4 <strncmp+0x30>
-+    80000d5e:	4501                	li	a0,0
-+    80000d60:	a809                	j	80000d72 <strncmp+0x32>
-+    80000d62:	4501                	li	a0,0
-+    80000d64:	a039                	j	80000d72 <strncmp+0x32>
-+  if(n == 0)
-+    80000d66:	ca09                	beqz	a2,80000d78 <strncmp+0x38>
-   return (uchar)*p - (uchar)*q;
--    80000dba:	00054503          	lbu	a0,0(a0)
--    80000dbe:	0005c783          	lbu	a5,0(a1)
--    80000dc2:	9d1d                	subw	a0,a0,a5
-+    80000d68:	00054503          	lbu	a0,0(a0)
-+    80000d6c:	0005c783          	lbu	a5,0(a1)
-+    80000d70:	9d1d                	subw	a0,a0,a5
- }
--    80000dc4:	6422                	ld	s0,8(sp)
--    80000dc6:	0141                	addi	sp,sp,16
--    80000dc8:	8082                	ret
-+    80000d72:	6422                	ld	s0,8(sp)
-+    80000d74:	0141                	add	sp,sp,16
-+    80000d76:	8082                	ret
-+    return 0;
-+    80000d78:	4501                	li	a0,0
-+    80000d7a:	bfe5                	j	80000d72 <strncmp+0x32>
- 
--0000000080000dca <strncpy>:
-+0000000080000d7c <strncpy>:
- 
- char*
- strncpy(char *s, const char *t, int n)
- {
--    80000dca:	1141                	addi	sp,sp,-16
--    80000dcc:	e422                	sd	s0,8(sp)
--    80000dce:	0800                	addi	s0,sp,16
-+    80000d7c:	1141                	add	sp,sp,-16
-+    80000d7e:	e422                	sd	s0,8(sp)
-+    80000d80:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while(n-- > 0 && (*s++ = *t++) != 0)
--    80000dd0:	87aa                	mv	a5,a0
--    80000dd2:	86b2                	mv	a3,a2
--    80000dd4:	367d                	addiw	a2,a2,-1
--    80000dd6:	02d05563          	blez	a3,80000e00 <strncpy+0x36>
--    80000dda:	0785                	addi	a5,a5,1
--    80000ddc:	0005c703          	lbu	a4,0(a1)
--    80000de0:	fee78fa3          	sb	a4,-1(a5)
--    80000de4:	0585                	addi	a1,a1,1
--    80000de6:	f775                	bnez	a4,80000dd2 <strncpy+0x8>
-+    80000d82:	87aa                	mv	a5,a0
-+    80000d84:	86b2                	mv	a3,a2
-+    80000d86:	367d                	addw	a2,a2,-1
-+    80000d88:	00d05963          	blez	a3,80000d9a <strncpy+0x1e>
-+    80000d8c:	0785                	add	a5,a5,1
-+    80000d8e:	0005c703          	lbu	a4,0(a1)
-+    80000d92:	fee78fa3          	sb	a4,-1(a5)
-+    80000d96:	0585                	add	a1,a1,1
-+    80000d98:	f775                	bnez	a4,80000d84 <strncpy+0x8>
-     ;
-   while(n-- > 0)
--    80000de8:	873e                	mv	a4,a5
--    80000dea:	9fb5                	addw	a5,a5,a3
--    80000dec:	37fd                	addiw	a5,a5,-1
--    80000dee:	00c05963          	blez	a2,80000e00 <strncpy+0x36>
-+    80000d9a:	873e                	mv	a4,a5
-+    80000d9c:	9fb5                	addw	a5,a5,a3
-+    80000d9e:	37fd                	addw	a5,a5,-1
-+    80000da0:	00c05963          	blez	a2,80000db2 <strncpy+0x36>
-     *s++ = 0;
--    80000df2:	0705                	addi	a4,a4,1
--    80000df4:	fe070fa3          	sb	zero,-1(a4)
-+    80000da4:	0705                	add	a4,a4,1
-+    80000da6:	fe070fa3          	sb	zero,-1(a4)
-   while(n-- > 0)
--    80000df8:	40e786bb          	subw	a3,a5,a4
--    80000dfc:	fed04be3          	bgtz	a3,80000df2 <strncpy+0x28>
-+    80000daa:	40e786bb          	subw	a3,a5,a4
-+    80000dae:	fed04be3          	bgtz	a3,80000da4 <strncpy+0x28>
-   return os;
- }
--    80000e00:	6422                	ld	s0,8(sp)
--    80000e02:	0141                	addi	sp,sp,16
--    80000e04:	8082                	ret
-+    80000db2:	6422                	ld	s0,8(sp)
-+    80000db4:	0141                	add	sp,sp,16
-+    80000db6:	8082                	ret
- 
--0000000080000e06 <safestrcpy>:
-+0000000080000db8 <safestrcpy>:
- 
- /* Like strncpy but guaranteed to NUL-terminate. */
- char*
- safestrcpy(char *s, const char *t, int n)
- {
--    80000e06:	1141                	addi	sp,sp,-16
--    80000e08:	e422                	sd	s0,8(sp)
--    80000e0a:	0800                	addi	s0,sp,16
-+    80000db8:	1141                	add	sp,sp,-16
-+    80000dba:	e422                	sd	s0,8(sp)
-+    80000dbc:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   if(n <= 0)
--    80000e0c:	02c05363          	blez	a2,80000e32 <safestrcpy+0x2c>
--    80000e10:	fff6069b          	addiw	a3,a2,-1
--    80000e14:	1682                	slli	a3,a3,0x20
--    80000e16:	9281                	srli	a3,a3,0x20
--    80000e18:	96ae                	add	a3,a3,a1
--    80000e1a:	87aa                	mv	a5,a0
-+    80000dbe:	02c05363          	blez	a2,80000de4 <safestrcpy+0x2c>
-+    80000dc2:	fff6069b          	addw	a3,a2,-1
-+    80000dc6:	1682                	sll	a3,a3,0x20
-+    80000dc8:	9281                	srl	a3,a3,0x20
-+    80000dca:	96ae                	add	a3,a3,a1
-+    80000dcc:	87aa                	mv	a5,a0
-     return os;
-   while(--n > 0 && (*s++ = *t++) != 0)
--    80000e1c:	00d58963          	beq	a1,a3,80000e2e <safestrcpy+0x28>
--    80000e20:	0585                	addi	a1,a1,1
--    80000e22:	0785                	addi	a5,a5,1
--    80000e24:	fff5c703          	lbu	a4,-1(a1)
--    80000e28:	fee78fa3          	sb	a4,-1(a5)
--    80000e2c:	fb65                	bnez	a4,80000e1c <safestrcpy+0x16>
-+    80000dce:	00d58963          	beq	a1,a3,80000de0 <safestrcpy+0x28>
-+    80000dd2:	0585                	add	a1,a1,1
-+    80000dd4:	0785                	add	a5,a5,1
-+    80000dd6:	fff5c703          	lbu	a4,-1(a1)
-+    80000dda:	fee78fa3          	sb	a4,-1(a5)
-+    80000dde:	fb65                	bnez	a4,80000dce <safestrcpy+0x16>
-     ;
-   *s = 0;
--    80000e2e:	00078023          	sb	zero,0(a5)
-+    80000de0:	00078023          	sb	zero,0(a5)
-   return os;
- }
--    80000e32:	6422                	ld	s0,8(sp)
--    80000e34:	0141                	addi	sp,sp,16
--    80000e36:	8082                	ret
-+    80000de4:	6422                	ld	s0,8(sp)
-+    80000de6:	0141                	add	sp,sp,16
-+    80000de8:	8082                	ret
- 
--0000000080000e38 <strlen>:
-+0000000080000dea <strlen>:
- 
- int
- strlen(const char *s)
- {
--    80000e38:	1141                	addi	sp,sp,-16
--    80000e3a:	e422                	sd	s0,8(sp)
--    80000e3c:	0800                	addi	s0,sp,16
-+    80000dea:	1141                	add	sp,sp,-16
-+    80000dec:	e422                	sd	s0,8(sp)
-+    80000dee:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
--    80000e3e:	00054783          	lbu	a5,0(a0)
--    80000e42:	cf91                	beqz	a5,80000e5e <strlen+0x26>
--    80000e44:	0505                	addi	a0,a0,1
--    80000e46:	87aa                	mv	a5,a0
--    80000e48:	86be                	mv	a3,a5
--    80000e4a:	0785                	addi	a5,a5,1
--    80000e4c:	fff7c703          	lbu	a4,-1(a5)
--    80000e50:	ff65                	bnez	a4,80000e48 <strlen+0x10>
--    80000e52:	40a6853b          	subw	a0,a3,a0
--    80000e56:	2505                	addiw	a0,a0,1
-+    80000df0:	00054783          	lbu	a5,0(a0)
-+    80000df4:	cf91                	beqz	a5,80000e10 <strlen+0x26>
-+    80000df6:	0505                	add	a0,a0,1
-+    80000df8:	87aa                	mv	a5,a0
-+    80000dfa:	86be                	mv	a3,a5
-+    80000dfc:	0785                	add	a5,a5,1
-+    80000dfe:	fff7c703          	lbu	a4,-1(a5)
-+    80000e02:	ff65                	bnez	a4,80000dfa <strlen+0x10>
-+    80000e04:	40a6853b          	subw	a0,a3,a0
-+    80000e08:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
--    80000e58:	6422                	ld	s0,8(sp)
--    80000e5a:	0141                	addi	sp,sp,16
--    80000e5c:	8082                	ret
-+    80000e0a:	6422                	ld	s0,8(sp)
-+    80000e0c:	0141                	add	sp,sp,16
-+    80000e0e:	8082                	ret
-   for(n = 0; s[n]; n++)
--    80000e5e:	4501                	li	a0,0
--    80000e60:	bfe5                	j	80000e58 <strlen+0x20>
-+    80000e10:	4501                	li	a0,0
-+    80000e12:	bfe5                	j	80000e0a <strlen+0x20>
- 
--0000000080000e62 <main>:
-+0000000080000e14 <main>:
- volatile static int started = 0;
- 
- /* start() jumps here in supervisor mode on all CPUs. */
- void
- main()
- {
--    80000e62:	1141                	addi	sp,sp,-16
--    80000e64:	e406                	sd	ra,8(sp)
--    80000e66:	e022                	sd	s0,0(sp)
--    80000e68:	0800                	addi	s0,sp,16
-+    80000e14:	1141                	add	sp,sp,-16
-+    80000e16:	e406                	sd	ra,8(sp)
-+    80000e18:	e022                	sd	s0,0(sp)
-+    80000e1a:	0800                	add	s0,sp,16
-   if(cpuid() == 0){
--    80000e6a:	24b000ef          	jal	800018b4 <cpuid>
-+    80000e1c:	1e9000ef          	jal	80001804 <cpuid>
-     virtio_disk_init(); /* emulated hard disk */
-     userinit();      /* first user process */
-     __sync_synchronize();
-     started = 1;
-   } else {
-     while(started == 0)
--    80000e6e:	00009717          	auipc	a4,0x9
--    80000e72:	36a70713          	addi	a4,a4,874 # 8000a1d8 <started>
-+    80000e20:	00007717          	auipc	a4,0x7
-+    80000e24:	ac870713          	add	a4,a4,-1336 # 800078e8 <started>
-   if(cpuid() == 0){
--    80000e76:	c51d                	beqz	a0,80000ea4 <main+0x42>
-+    80000e28:	c51d                	beqz	a0,80000e56 <main+0x42>
-     while(started == 0)
--    80000e78:	431c                	lw	a5,0(a4)
--    80000e7a:	2781                	sext.w	a5,a5
--    80000e7c:	dff5                	beqz	a5,80000e78 <main+0x16>
-+    80000e2a:	431c                	lw	a5,0(a4)
-+    80000e2c:	2781                	sext.w	a5,a5
-+    80000e2e:	dff5                	beqz	a5,80000e2a <main+0x16>
-       ;
-     __sync_synchronize();
--    80000e7e:	0ff0000f          	fence
-+    80000e30:	0ff0000f          	fence
-     printf("hart %d starting\n", cpuid());
--    80000e82:	233000ef          	jal	800018b4 <cpuid>
--    80000e86:	85aa                	mv	a1,a0
--    80000e88:	00006517          	auipc	a0,0x6
--    80000e8c:	21050513          	addi	a0,a0,528 # 80007098 <etext+0x98>
--    80000e90:	e32ff0ef          	jal	800004c2 <printf>
-+    80000e34:	1d1000ef          	jal	80001804 <cpuid>
-+    80000e38:	85aa                	mv	a1,a0
-+    80000e3a:	00006517          	auipc	a0,0x6
-+    80000e3e:	27650513          	add	a0,a0,630 # 800070b0 <digits+0x78>
-+    80000e42:	e5cff0ef          	jal	8000049e <printf>
-     kvminithart();    /* turn on paging */
--    80000e94:	080000ef          	jal	80000f14 <kvminithart>
-+    80000e46:	080000ef          	jal	80000ec6 <kvminithart>
-     trapinithart();   /* install kernel trap vector */
--    80000e98:	538010ef          	jal	800023d0 <trapinithart>
-+    80000e4a:	4d4010ef          	jal	8000231e <trapinithart>
-     plicinithart();   /* ask PLIC for device interrupts */
--    80000e9c:	3bc040ef          	jal	80005258 <plicinithart>
-+    80000e4e:	216040ef          	jal	80005064 <plicinithart>
-   }
- 
-   scheduler();        
--    80000ea0:	675000ef          	jal	80001d14 <scheduler>
-+    80000e52:	611000ef          	jal	80001c62 <scheduler>
-     consoleinit();
--    80000ea4:	d48ff0ef          	jal	800003ec <consoleinit>
-+    80000e56:	d72ff0ef          	jal	800003c8 <consoleinit>
-     printfinit();
--    80000ea8:	927ff0ef          	jal	800007ce <printfinit>
-+    80000e5a:	93fff0ef          	jal	80000798 <printfinit>
-     printf("\n");
--    80000eac:	00006517          	auipc	a0,0x6
--    80000eb0:	1cc50513          	addi	a0,a0,460 # 80007078 <etext+0x78>
--    80000eb4:	e0eff0ef          	jal	800004c2 <printf>
-+    80000e5e:	00006517          	auipc	a0,0x6
-+    80000e62:	26250513          	add	a0,a0,610 # 800070c0 <digits+0x88>
-+    80000e66:	e38ff0ef          	jal	8000049e <printf>
-     printf("xv6 kernel is booting\n");
--    80000eb8:	00006517          	auipc	a0,0x6
--    80000ebc:	1c850513          	addi	a0,a0,456 # 80007080 <etext+0x80>
--    80000ec0:	e02ff0ef          	jal	800004c2 <printf>
-+    80000e6a:	00006517          	auipc	a0,0x6
-+    80000e6e:	22e50513          	add	a0,a0,558 # 80007098 <digits+0x60>
-+    80000e72:	e2cff0ef          	jal	8000049e <printf>
-     printf("\n");
--    80000ec4:	00006517          	auipc	a0,0x6
--    80000ec8:	1b450513          	addi	a0,a0,436 # 80007078 <etext+0x78>
--    80000ecc:	df6ff0ef          	jal	800004c2 <printf>
-+    80000e76:	00006517          	auipc	a0,0x6
-+    80000e7a:	24a50513          	add	a0,a0,586 # 800070c0 <digits+0x88>
-+    80000e7e:	e20ff0ef          	jal	8000049e <printf>
-     kinit();         /* physical page allocator */
--    80000ed0:	c21ff0ef          	jal	80000af0 <kinit>
-+    80000e82:	c1bff0ef          	jal	80000a9c <kinit>
-     kvminit();       /* create kernel page table */
--    80000ed4:	2ca000ef          	jal	8000119e <kvminit>
-+    80000e86:	2ca000ef          	jal	80001150 <kvminit>
-     kvminithart();   /* turn on paging */
--    80000ed8:	03c000ef          	jal	80000f14 <kvminithart>
-+    80000e8a:	03c000ef          	jal	80000ec6 <kvminithart>
-     procinit();      /* process table */
--    80000edc:	123000ef          	jal	800017fe <procinit>
-+    80000e8e:	0cf000ef          	jal	8000175c <procinit>
-     trapinit();      /* trap vectors */
--    80000ee0:	4cc010ef          	jal	800023ac <trapinit>
-+    80000e92:	468010ef          	jal	800022fa <trapinit>
-     trapinithart();  /* install kernel trap vector */
--    80000ee4:	4ec010ef          	jal	800023d0 <trapinithart>
-+    80000e96:	488010ef          	jal	8000231e <trapinithart>
-     plicinit();      /* set up interrupt controller */
--    80000ee8:	356040ef          	jal	8000523e <plicinit>
-+    80000e9a:	1b4040ef          	jal	8000504e <plicinit>
-     plicinithart();  /* ask PLIC for device interrupts */
--    80000eec:	36c040ef          	jal	80005258 <plicinithart>
-+    80000e9e:	1c6040ef          	jal	80005064 <plicinithart>
-     binit();         /* buffer cache */
--    80000ef0:	313010ef          	jal	80002a02 <binit>
-+    80000ea2:	2a7010ef          	jal	80002948 <binit>
-     iinit();         /* inode table */
--    80000ef4:	104020ef          	jal	80002ff8 <iinit>
-+    80000ea6:	080020ef          	jal	80002f26 <iinit>
-     fileinit();      /* file table */
--    80000ef8:	6b1020ef          	jal	80003da8 <fileinit>
-+    80000eaa:	5f3020ef          	jal	80003c9c <fileinit>
-     virtio_disk_init(); /* emulated hard disk */
--    80000efc:	44c040ef          	jal	80005348 <virtio_disk_init>
-+    80000eae:	2a6040ef          	jal	80005154 <virtio_disk_init>
-     userinit();      /* first user process */
--    80000f00:	449000ef          	jal	80001b48 <userinit>
-+    80000eb2:	3e7000ef          	jal	80001a98 <userinit>
-     __sync_synchronize();
--    80000f04:	0ff0000f          	fence
-+    80000eb6:	0ff0000f          	fence
-     started = 1;
--    80000f08:	4785                	li	a5,1
--    80000f0a:	00009717          	auipc	a4,0x9
--    80000f0e:	2cf72723          	sw	a5,718(a4) # 8000a1d8 <started>
--    80000f12:	b779                	j	80000ea0 <main+0x3e>
-+    80000eba:	4785                	li	a5,1
-+    80000ebc:	00007717          	auipc	a4,0x7
-+    80000ec0:	a2f72623          	sw	a5,-1492(a4) # 800078e8 <started>
-+    80000ec4:	b779                	j	80000e52 <main+0x3e>
- 
--0000000080000f14 <kvminithart>:
-+0000000080000ec6 <kvminithart>:
- 
- /* Switch h/w page table register to the kernel's page table, */
- /* and enable paging. */
- void
- kvminithart()
- {
--    80000f14:	1141                	addi	sp,sp,-16
--    80000f16:	e422                	sd	s0,8(sp)
--    80000f18:	0800                	addi	s0,sp,16
-+    80000ec6:	1141                	add	sp,sp,-16
-+    80000ec8:	e422                	sd	s0,8(sp)
-+    80000eca:	0800                	add	s0,sp,16
- /* flush the TLB. */
- static inline void
- sfence_vma()
- {
-   /* the zero, zero means flush all TLB entries. */
-   asm volatile("sfence.vma zero, zero");
--    80000f1a:	12000073          	sfence.vma
-+    80000ecc:	12000073          	sfence.vma
-   /* wait for any previous writes to the page table memory to finish. */
-   sfence_vma();
- 
-   w_satp(MAKE_SATP(kernel_pagetable));
--    80000f1e:	00009797          	auipc	a5,0x9
--    80000f22:	2c27b783          	ld	a5,706(a5) # 8000a1e0 <kernel_pagetable>
--    80000f26:	83b1                	srli	a5,a5,0xc
--    80000f28:	577d                	li	a4,-1
--    80000f2a:	177e                	slli	a4,a4,0x3f
--    80000f2c:	8fd9                	or	a5,a5,a4
-+    80000ed0:	00007797          	auipc	a5,0x7
-+    80000ed4:	a207b783          	ld	a5,-1504(a5) # 800078f0 <kernel_pagetable>
-+    80000ed8:	83b1                	srl	a5,a5,0xc
-+    80000eda:	577d                	li	a4,-1
-+    80000edc:	177e                	sll	a4,a4,0x3f
-+    80000ede:	8fd9                	or	a5,a5,a4
-   asm volatile("csrw satp, %0" : : "r" (x));
--    80000f2e:	18079073          	csrw	satp,a5
-+    80000ee0:	18079073          	csrw	satp,a5
-   asm volatile("sfence.vma zero, zero");
--    80000f32:	12000073          	sfence.vma
-+    80000ee4:	12000073          	sfence.vma
- 
-   /* flush stale entries from the TLB. */
-   sfence_vma();
- }
--    80000f36:	6422                	ld	s0,8(sp)
--    80000f38:	0141                	addi	sp,sp,16
--    80000f3a:	8082                	ret
-+    80000ee8:	6422                	ld	s0,8(sp)
-+    80000eea:	0141                	add	sp,sp,16
-+    80000eec:	8082                	ret
- 
--0000000080000f3c <walk>:
-+0000000080000eee <walk>:
- /*   21..29 -- 9 bits of level-1 index. */
- /*   12..20 -- 9 bits of level-0 index. */
- /*    0..11 -- 12 bits of byte offset within the page. */
- pte_t *
- walk(pagetable_t pagetable, uint64 va, int alloc)
- {
--    80000f3c:	7139                	addi	sp,sp,-64
--    80000f3e:	fc06                	sd	ra,56(sp)
--    80000f40:	f822                	sd	s0,48(sp)
--    80000f42:	f426                	sd	s1,40(sp)
--    80000f44:	f04a                	sd	s2,32(sp)
--    80000f46:	ec4e                	sd	s3,24(sp)
--    80000f48:	e852                	sd	s4,16(sp)
--    80000f4a:	e456                	sd	s5,8(sp)
--    80000f4c:	e05a                	sd	s6,0(sp)
--    80000f4e:	0080                	addi	s0,sp,64
--    80000f50:	84aa                	mv	s1,a0
--    80000f52:	89ae                	mv	s3,a1
--    80000f54:	8ab2                	mv	s5,a2
-+    80000eee:	7139                	add	sp,sp,-64
-+    80000ef0:	fc06                	sd	ra,56(sp)
-+    80000ef2:	f822                	sd	s0,48(sp)
-+    80000ef4:	f426                	sd	s1,40(sp)
-+    80000ef6:	f04a                	sd	s2,32(sp)
-+    80000ef8:	ec4e                	sd	s3,24(sp)
-+    80000efa:	e852                	sd	s4,16(sp)
-+    80000efc:	e456                	sd	s5,8(sp)
-+    80000efe:	e05a                	sd	s6,0(sp)
-+    80000f00:	0080                	add	s0,sp,64
-+    80000f02:	84aa                	mv	s1,a0
-+    80000f04:	89ae                	mv	s3,a1
-+    80000f06:	8ab2                	mv	s5,a2
-   if(va >= MAXVA)
--    80000f56:	57fd                	li	a5,-1
--    80000f58:	83e9                	srli	a5,a5,0x1a
--    80000f5a:	4a79                	li	s4,30
-+    80000f08:	57fd                	li	a5,-1
-+    80000f0a:	83e9                	srl	a5,a5,0x1a
-+    80000f0c:	4a79                	li	s4,30
-     panic("walk");
- 
-   for(int level = 2; level > 0; level--) {
--    80000f5c:	4b31                	li	s6,12
-+    80000f0e:	4b31                	li	s6,12
-   if(va >= MAXVA)
--    80000f5e:	02b7fc63          	bgeu	a5,a1,80000f96 <walk+0x5a>
-+    80000f10:	02b7fc63          	bgeu	a5,a1,80000f48 <walk+0x5a>
-     panic("walk");
--    80000f62:	00006517          	auipc	a0,0x6
--    80000f66:	14e50513          	addi	a0,a0,334 # 800070b0 <etext+0xb0>
--    80000f6a:	82bff0ef          	jal	80000794 <panic>
-+    80000f14:	00006517          	auipc	a0,0x6
-+    80000f18:	1b450513          	add	a0,a0,436 # 800070c8 <digits+0x90>
-+    80000f1c:	843ff0ef          	jal	8000075e <panic>
-     pte_t *pte = &pagetable[PX(level, va)];
-     if(*pte & PTE_V) {
-       pagetable = (pagetable_t)PTE2PA(*pte);
-     } else {
-       if(!alloc || (pagetable = (pde_t*)kalloc()) == 0)
--    80000f6e:	060a8263          	beqz	s5,80000fd2 <walk+0x96>
--    80000f72:	bb3ff0ef          	jal	80000b24 <kalloc>
--    80000f76:	84aa                	mv	s1,a0
--    80000f78:	c139                	beqz	a0,80000fbe <walk+0x82>
-+    80000f20:	060a8263          	beqz	s5,80000f84 <walk+0x96>
-+    80000f24:	badff0ef          	jal	80000ad0 <kalloc>
-+    80000f28:	84aa                	mv	s1,a0
-+    80000f2a:	c139                	beqz	a0,80000f70 <walk+0x82>
-         return 0;
-       memset(pagetable, 0, PGSIZE);
--    80000f7a:	6605                	lui	a2,0x1
--    80000f7c:	4581                	li	a1,0
--    80000f7e:	d4bff0ef          	jal	80000cc8 <memset>
-+    80000f2c:	6605                	lui	a2,0x1
-+    80000f2e:	4581                	li	a1,0
-+    80000f30:	d45ff0ef          	jal	80000c74 <memset>
-       *pte = PA2PTE(pagetable) | PTE_V;
--    80000f82:	00c4d793          	srli	a5,s1,0xc
--    80000f86:	07aa                	slli	a5,a5,0xa
--    80000f88:	0017e793          	ori	a5,a5,1
--    80000f8c:	00f93023          	sd	a5,0(s2)
-+    80000f34:	00c4d793          	srl	a5,s1,0xc
-+    80000f38:	07aa                	sll	a5,a5,0xa
-+    80000f3a:	0017e793          	or	a5,a5,1
-+    80000f3e:	00f93023          	sd	a5,0(s2)
-   for(int level = 2; level > 0; level--) {
--    80000f90:	3a5d                	addiw	s4,s4,-9 # ffffffffffffeff7 <end+0xffffffff7ffdbac7>
--    80000f92:	036a0063          	beq	s4,s6,80000fb2 <walk+0x76>
-+    80000f42:	3a5d                	addw	s4,s4,-9 # ffffffffffffeff7 <end+0xffffffff7ffde3b7>
-+    80000f44:	036a0063          	beq	s4,s6,80000f64 <walk+0x76>
-     pte_t *pte = &pagetable[PX(level, va)];
--    80000f96:	0149d933          	srl	s2,s3,s4
--    80000f9a:	1ff97913          	andi	s2,s2,511
--    80000f9e:	090e                	slli	s2,s2,0x3
--    80000fa0:	9926                	add	s2,s2,s1
-+    80000f48:	0149d933          	srl	s2,s3,s4
-+    80000f4c:	1ff97913          	and	s2,s2,511
-+    80000f50:	090e                	sll	s2,s2,0x3
-+    80000f52:	9926                	add	s2,s2,s1
-     if(*pte & PTE_V) {
--    80000fa2:	00093483          	ld	s1,0(s2)
--    80000fa6:	0014f793          	andi	a5,s1,1
--    80000faa:	d3f1                	beqz	a5,80000f6e <walk+0x32>
-+    80000f54:	00093483          	ld	s1,0(s2)
-+    80000f58:	0014f793          	and	a5,s1,1
-+    80000f5c:	d3f1                	beqz	a5,80000f20 <walk+0x32>
-       pagetable = (pagetable_t)PTE2PA(*pte);
--    80000fac:	80a9                	srli	s1,s1,0xa
--    80000fae:	04b2                	slli	s1,s1,0xc
--    80000fb0:	b7c5                	j	80000f90 <walk+0x54>
-+    80000f5e:	80a9                	srl	s1,s1,0xa
-+    80000f60:	04b2                	sll	s1,s1,0xc
-+    80000f62:	b7c5                	j	80000f42 <walk+0x54>
-     }
-   }
-   return &pagetable[PX(0, va)];
--    80000fb2:	00c9d513          	srli	a0,s3,0xc
--    80000fb6:	1ff57513          	andi	a0,a0,511
--    80000fba:	050e                	slli	a0,a0,0x3
--    80000fbc:	9526                	add	a0,a0,s1
--}
--    80000fbe:	70e2                	ld	ra,56(sp)
--    80000fc0:	7442                	ld	s0,48(sp)
--    80000fc2:	74a2                	ld	s1,40(sp)
--    80000fc4:	7902                	ld	s2,32(sp)
--    80000fc6:	69e2                	ld	s3,24(sp)
--    80000fc8:	6a42                	ld	s4,16(sp)
--    80000fca:	6aa2                	ld	s5,8(sp)
--    80000fcc:	6b02                	ld	s6,0(sp)
--    80000fce:	6121                	addi	sp,sp,64
--    80000fd0:	8082                	ret
-+    80000f64:	00c9d513          	srl	a0,s3,0xc
-+    80000f68:	1ff57513          	and	a0,a0,511
-+    80000f6c:	050e                	sll	a0,a0,0x3
-+    80000f6e:	9526                	add	a0,a0,s1
-+}
-+    80000f70:	70e2                	ld	ra,56(sp)
-+    80000f72:	7442                	ld	s0,48(sp)
-+    80000f74:	74a2                	ld	s1,40(sp)
-+    80000f76:	7902                	ld	s2,32(sp)
-+    80000f78:	69e2                	ld	s3,24(sp)
-+    80000f7a:	6a42                	ld	s4,16(sp)
-+    80000f7c:	6aa2                	ld	s5,8(sp)
-+    80000f7e:	6b02                	ld	s6,0(sp)
-+    80000f80:	6121                	add	sp,sp,64
-+    80000f82:	8082                	ret
-         return 0;
--    80000fd2:	4501                	li	a0,0
--    80000fd4:	b7ed                	j	80000fbe <walk+0x82>
-+    80000f84:	4501                	li	a0,0
-+    80000f86:	b7ed                	j	80000f70 <walk+0x82>
- 
--0000000080000fd6 <walkaddr>:
-+0000000080000f88 <walkaddr>:
- walkaddr(pagetable_t pagetable, uint64 va)
- {
-   pte_t *pte;
-   uint64 pa;
- 
-   if(va >= MAXVA)
--    80000fd6:	57fd                	li	a5,-1
--    80000fd8:	83e9                	srli	a5,a5,0x1a
--    80000fda:	00b7f463          	bgeu	a5,a1,80000fe2 <walkaddr+0xc>
-+    80000f88:	57fd                	li	a5,-1
-+    80000f8a:	83e9                	srl	a5,a5,0x1a
-+    80000f8c:	00b7f463          	bgeu	a5,a1,80000f94 <walkaddr+0xc>
-     return 0;
--    80000fde:	4501                	li	a0,0
-+    80000f90:	4501                	li	a0,0
-     return 0;
-   if((*pte & PTE_U) == 0)
-     return 0;
-   pa = PTE2PA(*pte);
-   return pa;
- }
--    80000fe0:	8082                	ret
-+    80000f92:	8082                	ret
- {
--    80000fe2:	1141                	addi	sp,sp,-16
--    80000fe4:	e406                	sd	ra,8(sp)
--    80000fe6:	e022                	sd	s0,0(sp)
--    80000fe8:	0800                	addi	s0,sp,16
-+    80000f94:	1141                	add	sp,sp,-16
-+    80000f96:	e406                	sd	ra,8(sp)
-+    80000f98:	e022                	sd	s0,0(sp)
-+    80000f9a:	0800                	add	s0,sp,16
-   pte = walk(pagetable, va, 0);
--    80000fea:	4601                	li	a2,0
--    80000fec:	f51ff0ef          	jal	80000f3c <walk>
-+    80000f9c:	4601                	li	a2,0
-+    80000f9e:	f51ff0ef          	jal	80000eee <walk>
-   if(pte == 0)
--    80000ff0:	c105                	beqz	a0,80001010 <walkaddr+0x3a>
-+    80000fa2:	c105                	beqz	a0,80000fc2 <walkaddr+0x3a>
-   if((*pte & PTE_V) == 0)
--    80000ff2:	611c                	ld	a5,0(a0)
-+    80000fa4:	611c                	ld	a5,0(a0)
-   if((*pte & PTE_U) == 0)
--    80000ff4:	0117f693          	andi	a3,a5,17
--    80000ff8:	4745                	li	a4,17
-+    80000fa6:	0117f693          	and	a3,a5,17
-+    80000faa:	4745                	li	a4,17
-     return 0;
--    80000ffa:	4501                	li	a0,0
-+    80000fac:	4501                	li	a0,0
-   if((*pte & PTE_U) == 0)
--    80000ffc:	00e68663          	beq	a3,a4,80001008 <walkaddr+0x32>
-+    80000fae:	00e68663          	beq	a3,a4,80000fba <walkaddr+0x32>
- }
--    80001000:	60a2                	ld	ra,8(sp)
--    80001002:	6402                	ld	s0,0(sp)
--    80001004:	0141                	addi	sp,sp,16
--    80001006:	8082                	ret
-+    80000fb2:	60a2                	ld	ra,8(sp)
-+    80000fb4:	6402                	ld	s0,0(sp)
-+    80000fb6:	0141                	add	sp,sp,16
-+    80000fb8:	8082                	ret
-   pa = PTE2PA(*pte);
--    80001008:	83a9                	srli	a5,a5,0xa
--    8000100a:	00c79513          	slli	a0,a5,0xc
-+    80000fba:	83a9                	srl	a5,a5,0xa
-+    80000fbc:	00c79513          	sll	a0,a5,0xc
-   return pa;
--    8000100e:	bfcd                	j	80001000 <walkaddr+0x2a>
-+    80000fc0:	bfcd                	j	80000fb2 <walkaddr+0x2a>
-     return 0;
--    80001010:	4501                	li	a0,0
--    80001012:	b7fd                	j	80001000 <walkaddr+0x2a>
-+    80000fc2:	4501                	li	a0,0
-+    80000fc4:	b7fd                	j	80000fb2 <walkaddr+0x2a>
- 
--0000000080001014 <mappages>:
-+0000000080000fc6 <mappages>:
- /* va and size MUST be page-aligned. */
- /* Returns 0 on success, -1 if walk() couldn't */
- /* allocate a needed page-table page. */
- int
- mappages(pagetable_t pagetable, uint64 va, uint64 size, uint64 pa, int perm)
- {
--    80001014:	715d                	addi	sp,sp,-80
--    80001016:	e486                	sd	ra,72(sp)
--    80001018:	e0a2                	sd	s0,64(sp)
--    8000101a:	fc26                	sd	s1,56(sp)
--    8000101c:	f84a                	sd	s2,48(sp)
--    8000101e:	f44e                	sd	s3,40(sp)
--    80001020:	f052                	sd	s4,32(sp)
--    80001022:	ec56                	sd	s5,24(sp)
--    80001024:	e85a                	sd	s6,16(sp)
--    80001026:	e45e                	sd	s7,8(sp)
--    80001028:	0880                	addi	s0,sp,80
-+    80000fc6:	715d                	add	sp,sp,-80
-+    80000fc8:	e486                	sd	ra,72(sp)
-+    80000fca:	e0a2                	sd	s0,64(sp)
-+    80000fcc:	fc26                	sd	s1,56(sp)
-+    80000fce:	f84a                	sd	s2,48(sp)
-+    80000fd0:	f44e                	sd	s3,40(sp)
-+    80000fd2:	f052                	sd	s4,32(sp)
-+    80000fd4:	ec56                	sd	s5,24(sp)
-+    80000fd6:	e85a                	sd	s6,16(sp)
-+    80000fd8:	e45e                	sd	s7,8(sp)
-+    80000fda:	0880                	add	s0,sp,80
-   uint64 a, last;
-   pte_t *pte;
- 
-   if((va % PGSIZE) != 0)
--    8000102a:	03459793          	slli	a5,a1,0x34
--    8000102e:	e7a9                	bnez	a5,80001078 <mappages+0x64>
--    80001030:	8aaa                	mv	s5,a0
--    80001032:	8b3a                	mv	s6,a4
-+    80000fdc:	03459793          	sll	a5,a1,0x34
-+    80000fe0:	e7a9                	bnez	a5,8000102a <mappages+0x64>
-+    80000fe2:	8aaa                	mv	s5,a0
-+    80000fe4:	8b3a                	mv	s6,a4
-     panic("mappages: va not aligned");
- 
-   if((size % PGSIZE) != 0)
--    80001034:	03461793          	slli	a5,a2,0x34
--    80001038:	e7b1                	bnez	a5,80001084 <mappages+0x70>
-+    80000fe6:	03461793          	sll	a5,a2,0x34
-+    80000fea:	e7b1                	bnez	a5,80001036 <mappages+0x70>
-     panic("mappages: size not aligned");
- 
-   if(size == 0)
--    8000103a:	ca39                	beqz	a2,80001090 <mappages+0x7c>
-+    80000fec:	ca39                	beqz	a2,80001042 <mappages+0x7c>
-     panic("mappages: size");
-   
-   a = va;
-   last = va + size - PGSIZE;
--    8000103c:	77fd                	lui	a5,0xfffff
--    8000103e:	963e                	add	a2,a2,a5
--    80001040:	00b609b3          	add	s3,a2,a1
-+    80000fee:	77fd                	lui	a5,0xfffff
-+    80000ff0:	963e                	add	a2,a2,a5
-+    80000ff2:	00b609b3          	add	s3,a2,a1
-   a = va;
--    80001044:	892e                	mv	s2,a1
--    80001046:	40b68a33          	sub	s4,a3,a1
-+    80000ff6:	892e                	mv	s2,a1
-+    80000ff8:	40b68a33          	sub	s4,a3,a1
-     if(*pte & PTE_V)
-       panic("mappages: remap");
-     *pte = PA2PTE(pa) | perm | PTE_V;
-     if(a == last)
-       break;
-     a += PGSIZE;
--    8000104a:	6b85                	lui	s7,0x1
--    8000104c:	014904b3          	add	s1,s2,s4
-+    80000ffc:	6b85                	lui	s7,0x1
-+    80000ffe:	012a04b3          	add	s1,s4,s2
-     if((pte = walk(pagetable, a, 1)) == 0)
--    80001050:	4605                	li	a2,1
--    80001052:	85ca                	mv	a1,s2
--    80001054:	8556                	mv	a0,s5
--    80001056:	ee7ff0ef          	jal	80000f3c <walk>
--    8000105a:	c539                	beqz	a0,800010a8 <mappages+0x94>
-+    80001002:	4605                	li	a2,1
-+    80001004:	85ca                	mv	a1,s2
-+    80001006:	8556                	mv	a0,s5
-+    80001008:	ee7ff0ef          	jal	80000eee <walk>
-+    8000100c:	c539                	beqz	a0,8000105a <mappages+0x94>
-     if(*pte & PTE_V)
--    8000105c:	611c                	ld	a5,0(a0)
--    8000105e:	8b85                	andi	a5,a5,1
--    80001060:	ef95                	bnez	a5,8000109c <mappages+0x88>
-+    8000100e:	611c                	ld	a5,0(a0)
-+    80001010:	8b85                	and	a5,a5,1
-+    80001012:	ef95                	bnez	a5,8000104e <mappages+0x88>
-     *pte = PA2PTE(pa) | perm | PTE_V;
--    80001062:	80b1                	srli	s1,s1,0xc
--    80001064:	04aa                	slli	s1,s1,0xa
--    80001066:	0164e4b3          	or	s1,s1,s6
--    8000106a:	0014e493          	ori	s1,s1,1
--    8000106e:	e104                	sd	s1,0(a0)
-+    80001014:	80b1                	srl	s1,s1,0xc
-+    80001016:	04aa                	sll	s1,s1,0xa
-+    80001018:	0164e4b3          	or	s1,s1,s6
-+    8000101c:	0014e493          	or	s1,s1,1
-+    80001020:	e104                	sd	s1,0(a0)
-     if(a == last)
--    80001070:	05390863          	beq	s2,s3,800010c0 <mappages+0xac>
-+    80001022:	05390863          	beq	s2,s3,80001072 <mappages+0xac>
-     a += PGSIZE;
--    80001074:	995e                	add	s2,s2,s7
-+    80001026:	995e                	add	s2,s2,s7
-     if((pte = walk(pagetable, a, 1)) == 0)
--    80001076:	bfd9                	j	8000104c <mappages+0x38>
-+    80001028:	bfd9                	j	80000ffe <mappages+0x38>
-     panic("mappages: va not aligned");
--    80001078:	00006517          	auipc	a0,0x6
--    8000107c:	04050513          	addi	a0,a0,64 # 800070b8 <etext+0xb8>
--    80001080:	f14ff0ef          	jal	80000794 <panic>
-+    8000102a:	00006517          	auipc	a0,0x6
-+    8000102e:	0a650513          	add	a0,a0,166 # 800070d0 <digits+0x98>
-+    80001032:	f2cff0ef          	jal	8000075e <panic>
-     panic("mappages: size not aligned");
--    80001084:	00006517          	auipc	a0,0x6
--    80001088:	05450513          	addi	a0,a0,84 # 800070d8 <etext+0xd8>
--    8000108c:	f08ff0ef          	jal	80000794 <panic>
-+    80001036:	00006517          	auipc	a0,0x6
-+    8000103a:	0ba50513          	add	a0,a0,186 # 800070f0 <digits+0xb8>
-+    8000103e:	f20ff0ef          	jal	8000075e <panic>
-     panic("mappages: size");
--    80001090:	00006517          	auipc	a0,0x6
--    80001094:	06850513          	addi	a0,a0,104 # 800070f8 <etext+0xf8>
--    80001098:	efcff0ef          	jal	80000794 <panic>
-+    80001042:	00006517          	auipc	a0,0x6
-+    80001046:	0ce50513          	add	a0,a0,206 # 80007110 <digits+0xd8>
-+    8000104a:	f14ff0ef          	jal	8000075e <panic>
-       panic("mappages: remap");
--    8000109c:	00006517          	auipc	a0,0x6
--    800010a0:	06c50513          	addi	a0,a0,108 # 80007108 <etext+0x108>
--    800010a4:	ef0ff0ef          	jal	80000794 <panic>
-+    8000104e:	00006517          	auipc	a0,0x6
-+    80001052:	0d250513          	add	a0,a0,210 # 80007120 <digits+0xe8>
-+    80001056:	f08ff0ef          	jal	8000075e <panic>
-       return -1;
--    800010a8:	557d                	li	a0,-1
-+    8000105a:	557d                	li	a0,-1
-     pa += PGSIZE;
-   }
-   return 0;
- }
--    800010aa:	60a6                	ld	ra,72(sp)
--    800010ac:	6406                	ld	s0,64(sp)
--    800010ae:	74e2                	ld	s1,56(sp)
--    800010b0:	7942                	ld	s2,48(sp)
--    800010b2:	79a2                	ld	s3,40(sp)
--    800010b4:	7a02                	ld	s4,32(sp)
--    800010b6:	6ae2                	ld	s5,24(sp)
--    800010b8:	6b42                	ld	s6,16(sp)
--    800010ba:	6ba2                	ld	s7,8(sp)
--    800010bc:	6161                	addi	sp,sp,80
--    800010be:	8082                	ret
-+    8000105c:	60a6                	ld	ra,72(sp)
-+    8000105e:	6406                	ld	s0,64(sp)
-+    80001060:	74e2                	ld	s1,56(sp)
-+    80001062:	7942                	ld	s2,48(sp)
-+    80001064:	79a2                	ld	s3,40(sp)
-+    80001066:	7a02                	ld	s4,32(sp)
-+    80001068:	6ae2                	ld	s5,24(sp)
-+    8000106a:	6b42                	ld	s6,16(sp)
-+    8000106c:	6ba2                	ld	s7,8(sp)
-+    8000106e:	6161                	add	sp,sp,80
-+    80001070:	8082                	ret
-   return 0;
--    800010c0:	4501                	li	a0,0
--    800010c2:	b7e5                	j	800010aa <mappages+0x96>
-+    80001072:	4501                	li	a0,0
-+    80001074:	b7e5                	j	8000105c <mappages+0x96>
- 
--00000000800010c4 <kvmmap>:
-+0000000080001076 <kvmmap>:
- {
--    800010c4:	1141                	addi	sp,sp,-16
--    800010c6:	e406                	sd	ra,8(sp)
--    800010c8:	e022                	sd	s0,0(sp)
--    800010ca:	0800                	addi	s0,sp,16
--    800010cc:	87b6                	mv	a5,a3
-+    80001076:	1141                	add	sp,sp,-16
-+    80001078:	e406                	sd	ra,8(sp)
-+    8000107a:	e022                	sd	s0,0(sp)
-+    8000107c:	0800                	add	s0,sp,16
-+    8000107e:	87b6                	mv	a5,a3
-   if(mappages(kpgtbl, va, sz, pa, perm) != 0)
--    800010ce:	86b2                	mv	a3,a2
--    800010d0:	863e                	mv	a2,a5
--    800010d2:	f43ff0ef          	jal	80001014 <mappages>
--    800010d6:	e509                	bnez	a0,800010e0 <kvmmap+0x1c>
--}
--    800010d8:	60a2                	ld	ra,8(sp)
--    800010da:	6402                	ld	s0,0(sp)
--    800010dc:	0141                	addi	sp,sp,16
--    800010de:	8082                	ret
-+    80001080:	86b2                	mv	a3,a2
-+    80001082:	863e                	mv	a2,a5
-+    80001084:	f43ff0ef          	jal	80000fc6 <mappages>
-+    80001088:	e509                	bnez	a0,80001092 <kvmmap+0x1c>
-+}
-+    8000108a:	60a2                	ld	ra,8(sp)
-+    8000108c:	6402                	ld	s0,0(sp)
-+    8000108e:	0141                	add	sp,sp,16
-+    80001090:	8082                	ret
-     panic("kvmmap");
--    800010e0:	00006517          	auipc	a0,0x6
--    800010e4:	03850513          	addi	a0,a0,56 # 80007118 <etext+0x118>
--    800010e8:	eacff0ef          	jal	80000794 <panic>
--
--00000000800010ec <kvmmake>:
--{
--    800010ec:	1101                	addi	sp,sp,-32
--    800010ee:	ec06                	sd	ra,24(sp)
--    800010f0:	e822                	sd	s0,16(sp)
--    800010f2:	e426                	sd	s1,8(sp)
--    800010f4:	e04a                	sd	s2,0(sp)
--    800010f6:	1000                	addi	s0,sp,32
-+    80001092:	00006517          	auipc	a0,0x6
-+    80001096:	09e50513          	add	a0,a0,158 # 80007130 <digits+0xf8>
-+    8000109a:	ec4ff0ef          	jal	8000075e <panic>
-+
-+000000008000109e <kvmmake>:
-+{
-+    8000109e:	1101                	add	sp,sp,-32
-+    800010a0:	ec06                	sd	ra,24(sp)
-+    800010a2:	e822                	sd	s0,16(sp)
-+    800010a4:	e426                	sd	s1,8(sp)
-+    800010a6:	e04a                	sd	s2,0(sp)
-+    800010a8:	1000                	add	s0,sp,32
-   kpgtbl = (pagetable_t) kalloc();
--    800010f8:	a2dff0ef          	jal	80000b24 <kalloc>
--    800010fc:	84aa                	mv	s1,a0
-+    800010aa:	a27ff0ef          	jal	80000ad0 <kalloc>
-+    800010ae:	84aa                	mv	s1,a0
-   memset(kpgtbl, 0, PGSIZE);
--    800010fe:	6605                	lui	a2,0x1
--    80001100:	4581                	li	a1,0
--    80001102:	bc7ff0ef          	jal	80000cc8 <memset>
-+    800010b0:	6605                	lui	a2,0x1
-+    800010b2:	4581                	li	a1,0
-+    800010b4:	bc1ff0ef          	jal	80000c74 <memset>
-   kvmmap(kpgtbl, UART0, UART0, PGSIZE, PTE_R | PTE_W);
--    80001106:	4719                	li	a4,6
--    80001108:	6685                	lui	a3,0x1
--    8000110a:	10000637          	lui	a2,0x10000
--    8000110e:	100005b7          	lui	a1,0x10000
--    80001112:	8526                	mv	a0,s1
--    80001114:	fb1ff0ef          	jal	800010c4 <kvmmap>
-+    800010b8:	4719                	li	a4,6
-+    800010ba:	6685                	lui	a3,0x1
-+    800010bc:	10000637          	lui	a2,0x10000
-+    800010c0:	100005b7          	lui	a1,0x10000
-+    800010c4:	8526                	mv	a0,s1
-+    800010c6:	fb1ff0ef          	jal	80001076 <kvmmap>
-   kvmmap(kpgtbl, VIRTIO0, VIRTIO0, PGSIZE, PTE_R | PTE_W);
--    80001118:	4719                	li	a4,6
--    8000111a:	6685                	lui	a3,0x1
--    8000111c:	10001637          	lui	a2,0x10001
--    80001120:	100015b7          	lui	a1,0x10001
--    80001124:	8526                	mv	a0,s1
--    80001126:	f9fff0ef          	jal	800010c4 <kvmmap>
-+    800010ca:	4719                	li	a4,6
-+    800010cc:	6685                	lui	a3,0x1
-+    800010ce:	10001637          	lui	a2,0x10001
-+    800010d2:	100015b7          	lui	a1,0x10001
-+    800010d6:	8526                	mv	a0,s1
-+    800010d8:	f9fff0ef          	jal	80001076 <kvmmap>
-   kvmmap(kpgtbl, PLIC, PLIC, 0x4000000, PTE_R | PTE_W);
--    8000112a:	4719                	li	a4,6
--    8000112c:	040006b7          	lui	a3,0x4000
--    80001130:	0c000637          	lui	a2,0xc000
--    80001134:	0c0005b7          	lui	a1,0xc000
--    80001138:	8526                	mv	a0,s1
--    8000113a:	f8bff0ef          	jal	800010c4 <kvmmap>
-+    800010dc:	4719                	li	a4,6
-+    800010de:	040006b7          	lui	a3,0x4000
-+    800010e2:	0c000637          	lui	a2,0xc000
-+    800010e6:	0c0005b7          	lui	a1,0xc000
-+    800010ea:	8526                	mv	a0,s1
-+    800010ec:	f8bff0ef          	jal	80001076 <kvmmap>
-   kvmmap(kpgtbl, KERNBASE, KERNBASE, (uint64)etext-KERNBASE, PTE_R | PTE_X);
--    8000113e:	00006917          	auipc	s2,0x6
--    80001142:	ec290913          	addi	s2,s2,-318 # 80007000 <etext>
--    80001146:	4729                	li	a4,10
--    80001148:	80006697          	auipc	a3,0x80006
--    8000114c:	eb868693          	addi	a3,a3,-328 # 7000 <_entry-0x7fff9000>
--    80001150:	4605                	li	a2,1
--    80001152:	067e                	slli	a2,a2,0x1f
--    80001154:	85b2                	mv	a1,a2
--    80001156:	8526                	mv	a0,s1
--    80001158:	f6dff0ef          	jal	800010c4 <kvmmap>
-+    800010f0:	00006917          	auipc	s2,0x6
-+    800010f4:	f1090913          	add	s2,s2,-240 # 80007000 <etext>
-+    800010f8:	4729                	li	a4,10
-+    800010fa:	80006697          	auipc	a3,0x80006
-+    800010fe:	f0668693          	add	a3,a3,-250 # 7000 <_entry-0x7fff9000>
-+    80001102:	4605                	li	a2,1
-+    80001104:	067e                	sll	a2,a2,0x1f
-+    80001106:	85b2                	mv	a1,a2
-+    80001108:	8526                	mv	a0,s1
-+    8000110a:	f6dff0ef          	jal	80001076 <kvmmap>
-   kvmmap(kpgtbl, (uint64)etext, (uint64)etext, PHYSTOP-(uint64)etext, PTE_R | PTE_W);
--    8000115c:	46c5                	li	a3,17
--    8000115e:	06ee                	slli	a3,a3,0x1b
--    80001160:	4719                	li	a4,6
--    80001162:	412686b3          	sub	a3,a3,s2
--    80001166:	864a                	mv	a2,s2
--    80001168:	85ca                	mv	a1,s2
--    8000116a:	8526                	mv	a0,s1
--    8000116c:	f59ff0ef          	jal	800010c4 <kvmmap>
-+    8000110e:	4719                	li	a4,6
-+    80001110:	46c5                	li	a3,17
-+    80001112:	06ee                	sll	a3,a3,0x1b
-+    80001114:	412686b3          	sub	a3,a3,s2
-+    80001118:	864a                	mv	a2,s2
-+    8000111a:	85ca                	mv	a1,s2
-+    8000111c:	8526                	mv	a0,s1
-+    8000111e:	f59ff0ef          	jal	80001076 <kvmmap>
-   kvmmap(kpgtbl, TRAMPOLINE, (uint64)trampoline, PGSIZE, PTE_R | PTE_X);
--    80001170:	4729                	li	a4,10
--    80001172:	6685                	lui	a3,0x1
--    80001174:	00005617          	auipc	a2,0x5
--    80001178:	e8c60613          	addi	a2,a2,-372 # 80006000 <_trampoline>
--    8000117c:	040005b7          	lui	a1,0x4000
--    80001180:	15fd                	addi	a1,a1,-1 # 3ffffff <_entry-0x7c000001>
--    80001182:	05b2                	slli	a1,a1,0xc
--    80001184:	8526                	mv	a0,s1
--    80001186:	f3fff0ef          	jal	800010c4 <kvmmap>
-+    80001122:	4729                	li	a4,10
-+    80001124:	6685                	lui	a3,0x1
-+    80001126:	00005617          	auipc	a2,0x5
-+    8000112a:	eda60613          	add	a2,a2,-294 # 80006000 <_trampoline>
-+    8000112e:	040005b7          	lui	a1,0x4000
-+    80001132:	15fd                	add	a1,a1,-1 # 3ffffff <_entry-0x7c000001>
-+    80001134:	05b2                	sll	a1,a1,0xc
-+    80001136:	8526                	mv	a0,s1
-+    80001138:	f3fff0ef          	jal	80001076 <kvmmap>
-   proc_mapstacks(kpgtbl);
--    8000118a:	8526                	mv	a0,s1
--    8000118c:	5da000ef          	jal	80001766 <proc_mapstacks>
--}
--    80001190:	8526                	mv	a0,s1
--    80001192:	60e2                	ld	ra,24(sp)
--    80001194:	6442                	ld	s0,16(sp)
--    80001196:	64a2                	ld	s1,8(sp)
--    80001198:	6902                	ld	s2,0(sp)
--    8000119a:	6105                	addi	sp,sp,32
--    8000119c:	8082                	ret
--
--000000008000119e <kvminit>:
--{
--    8000119e:	1141                	addi	sp,sp,-16
--    800011a0:	e406                	sd	ra,8(sp)
--    800011a2:	e022                	sd	s0,0(sp)
--    800011a4:	0800                	addi	s0,sp,16
-+    8000113c:	8526                	mv	a0,s1
-+    8000113e:	594000ef          	jal	800016d2 <proc_mapstacks>
-+}
-+    80001142:	8526                	mv	a0,s1
-+    80001144:	60e2                	ld	ra,24(sp)
-+    80001146:	6442                	ld	s0,16(sp)
-+    80001148:	64a2                	ld	s1,8(sp)
-+    8000114a:	6902                	ld	s2,0(sp)
-+    8000114c:	6105                	add	sp,sp,32
-+    8000114e:	8082                	ret
-+
-+0000000080001150 <kvminit>:
-+{
-+    80001150:	1141                	add	sp,sp,-16
-+    80001152:	e406                	sd	ra,8(sp)
-+    80001154:	e022                	sd	s0,0(sp)
-+    80001156:	0800                	add	s0,sp,16
-   kernel_pagetable = kvmmake();
--    800011a6:	f47ff0ef          	jal	800010ec <kvmmake>
--    800011aa:	00009797          	auipc	a5,0x9
--    800011ae:	02a7bb23          	sd	a0,54(a5) # 8000a1e0 <kernel_pagetable>
-+    80001158:	f47ff0ef          	jal	8000109e <kvmmake>
-+    8000115c:	00006797          	auipc	a5,0x6
-+    80001160:	78a7ba23          	sd	a0,1940(a5) # 800078f0 <kernel_pagetable>
- }
--    800011b2:	60a2                	ld	ra,8(sp)
--    800011b4:	6402                	ld	s0,0(sp)
--    800011b6:	0141                	addi	sp,sp,16
--    800011b8:	8082                	ret
-+    80001164:	60a2                	ld	ra,8(sp)
-+    80001166:	6402                	ld	s0,0(sp)
-+    80001168:	0141                	add	sp,sp,16
-+    8000116a:	8082                	ret
- 
--00000000800011ba <uvmunmap>:
-+000000008000116c <uvmunmap>:
- /* Remove npages of mappings starting from va. va must be */
- /* page-aligned. The mappings must exist. */
- /* Optionally free the physical memory. */
- void
- uvmunmap(pagetable_t pagetable, uint64 va, uint64 npages, int do_free)
- {
--    800011ba:	715d                	addi	sp,sp,-80
--    800011bc:	e486                	sd	ra,72(sp)
--    800011be:	e0a2                	sd	s0,64(sp)
--    800011c0:	0880                	addi	s0,sp,80
-+    8000116c:	715d                	add	sp,sp,-80
-+    8000116e:	e486                	sd	ra,72(sp)
-+    80001170:	e0a2                	sd	s0,64(sp)
-+    80001172:	fc26                	sd	s1,56(sp)
-+    80001174:	f84a                	sd	s2,48(sp)
-+    80001176:	f44e                	sd	s3,40(sp)
-+    80001178:	f052                	sd	s4,32(sp)
-+    8000117a:	ec56                	sd	s5,24(sp)
-+    8000117c:	e85a                	sd	s6,16(sp)
-+    8000117e:	e45e                	sd	s7,8(sp)
-+    80001180:	0880                	add	s0,sp,80
-   uint64 a;
-   pte_t *pte;
- 
-   if((va % PGSIZE) != 0)
--    800011c2:	03459793          	slli	a5,a1,0x34
--    800011c6:	e39d                	bnez	a5,800011ec <uvmunmap+0x32>
--    800011c8:	f84a                	sd	s2,48(sp)
--    800011ca:	f44e                	sd	s3,40(sp)
--    800011cc:	f052                	sd	s4,32(sp)
--    800011ce:	ec56                	sd	s5,24(sp)
--    800011d0:	e85a                	sd	s6,16(sp)
--    800011d2:	e45e                	sd	s7,8(sp)
--    800011d4:	8a2a                	mv	s4,a0
--    800011d6:	892e                	mv	s2,a1
--    800011d8:	8ab6                	mv	s5,a3
-+    80001182:	03459793          	sll	a5,a1,0x34
-+    80001186:	e795                	bnez	a5,800011b2 <uvmunmap+0x46>
-+    80001188:	8a2a                	mv	s4,a0
-+    8000118a:	892e                	mv	s2,a1
-+    8000118c:	8ab6                	mv	s5,a3
-     panic("uvmunmap: not aligned");
- 
-   for(a = va; a < va + npages*PGSIZE; a += PGSIZE){
--    800011da:	0632                	slli	a2,a2,0xc
--    800011dc:	00b609b3          	add	s3,a2,a1
-+    8000118e:	0632                	sll	a2,a2,0xc
-+    80001190:	00b609b3          	add	s3,a2,a1
-     if((pte = walk(pagetable, a, 0)) == 0)
-       panic("uvmunmap: walk");
-     if((*pte & PTE_V) == 0)
-       panic("uvmunmap: not mapped");
-     if(PTE_FLAGS(*pte) == PTE_V)
--    800011e0:	4b85                	li	s7,1
-+    80001194:	4b85                	li	s7,1
-   for(a = va; a < va + npages*PGSIZE; a += PGSIZE){
--    800011e2:	6b05                	lui	s6,0x1
--    800011e4:	0735ff63          	bgeu	a1,s3,80001262 <uvmunmap+0xa8>
--    800011e8:	fc26                	sd	s1,56(sp)
--    800011ea:	a0a9                	j	80001234 <uvmunmap+0x7a>
--    800011ec:	fc26                	sd	s1,56(sp)
--    800011ee:	f84a                	sd	s2,48(sp)
--    800011f0:	f44e                	sd	s3,40(sp)
--    800011f2:	f052                	sd	s4,32(sp)
--    800011f4:	ec56                	sd	s5,24(sp)
--    800011f6:	e85a                	sd	s6,16(sp)
--    800011f8:	e45e                	sd	s7,8(sp)
-+    80001196:	6b05                	lui	s6,0x1
-+    80001198:	0535ea63          	bltu	a1,s3,800011ec <uvmunmap+0x80>
-+      uint64 pa = PTE2PA(*pte);
-+      kfree((void*)pa);
-+    }
-+    *pte = 0;
-+  }
-+}
-+    8000119c:	60a6                	ld	ra,72(sp)
-+    8000119e:	6406                	ld	s0,64(sp)
-+    800011a0:	74e2                	ld	s1,56(sp)
-+    800011a2:	7942                	ld	s2,48(sp)
-+    800011a4:	79a2                	ld	s3,40(sp)
-+    800011a6:	7a02                	ld	s4,32(sp)
-+    800011a8:	6ae2                	ld	s5,24(sp)
-+    800011aa:	6b42                	ld	s6,16(sp)
-+    800011ac:	6ba2                	ld	s7,8(sp)
-+    800011ae:	6161                	add	sp,sp,80
-+    800011b0:	8082                	ret
-     panic("uvmunmap: not aligned");
--    800011fa:	00006517          	auipc	a0,0x6
--    800011fe:	f2650513          	addi	a0,a0,-218 # 80007120 <etext+0x120>
--    80001202:	d92ff0ef          	jal	80000794 <panic>
-+    800011b2:	00006517          	auipc	a0,0x6
-+    800011b6:	f8650513          	add	a0,a0,-122 # 80007138 <digits+0x100>
-+    800011ba:	da4ff0ef          	jal	8000075e <panic>
-       panic("uvmunmap: walk");
--    80001206:	00006517          	auipc	a0,0x6
--    8000120a:	f3250513          	addi	a0,a0,-206 # 80007138 <etext+0x138>
--    8000120e:	d86ff0ef          	jal	80000794 <panic>
-+    800011be:	00006517          	auipc	a0,0x6
-+    800011c2:	f9250513          	add	a0,a0,-110 # 80007150 <digits+0x118>
-+    800011c6:	d98ff0ef          	jal	8000075e <panic>
-       panic("uvmunmap: not mapped");
--    80001212:	00006517          	auipc	a0,0x6
--    80001216:	f3650513          	addi	a0,a0,-202 # 80007148 <etext+0x148>
--    8000121a:	d7aff0ef          	jal	80000794 <panic>
-+    800011ca:	00006517          	auipc	a0,0x6
-+    800011ce:	f9650513          	add	a0,a0,-106 # 80007160 <digits+0x128>
-+    800011d2:	d8cff0ef          	jal	8000075e <panic>
-       panic("uvmunmap: not a leaf");
--    8000121e:	00006517          	auipc	a0,0x6
--    80001222:	f4250513          	addi	a0,a0,-190 # 80007160 <etext+0x160>
--    80001226:	d6eff0ef          	jal	80000794 <panic>
--    if(do_free){
--      uint64 pa = PTE2PA(*pte);
--      kfree((void*)pa);
--    }
-+    800011d6:	00006517          	auipc	a0,0x6
-+    800011da:	fa250513          	add	a0,a0,-94 # 80007178 <digits+0x140>
-+    800011de:	d80ff0ef          	jal	8000075e <panic>
-     *pte = 0;
--    8000122a:	0004b023          	sd	zero,0(s1)
-+    800011e2:	0004b023          	sd	zero,0(s1)
-   for(a = va; a < va + npages*PGSIZE; a += PGSIZE){
--    8000122e:	995a                	add	s2,s2,s6
--    80001230:	03397863          	bgeu	s2,s3,80001260 <uvmunmap+0xa6>
-+    800011e6:	995a                	add	s2,s2,s6
-+    800011e8:	fb397ae3          	bgeu	s2,s3,8000119c <uvmunmap+0x30>
-     if((pte = walk(pagetable, a, 0)) == 0)
--    80001234:	4601                	li	a2,0
--    80001236:	85ca                	mv	a1,s2
--    80001238:	8552                	mv	a0,s4
--    8000123a:	d03ff0ef          	jal	80000f3c <walk>
--    8000123e:	84aa                	mv	s1,a0
--    80001240:	d179                	beqz	a0,80001206 <uvmunmap+0x4c>
-+    800011ec:	4601                	li	a2,0
-+    800011ee:	85ca                	mv	a1,s2
-+    800011f0:	8552                	mv	a0,s4
-+    800011f2:	cfdff0ef          	jal	80000eee <walk>
-+    800011f6:	84aa                	mv	s1,a0
-+    800011f8:	d179                	beqz	a0,800011be <uvmunmap+0x52>
-     if((*pte & PTE_V) == 0)
--    80001242:	6108                	ld	a0,0(a0)
--    80001244:	00157793          	andi	a5,a0,1
--    80001248:	d7e9                	beqz	a5,80001212 <uvmunmap+0x58>
-+    800011fa:	6108                	ld	a0,0(a0)
-+    800011fc:	00157793          	and	a5,a0,1
-+    80001200:	d7e9                	beqz	a5,800011ca <uvmunmap+0x5e>
-     if(PTE_FLAGS(*pte) == PTE_V)
--    8000124a:	3ff57793          	andi	a5,a0,1023
--    8000124e:	fd7788e3          	beq	a5,s7,8000121e <uvmunmap+0x64>
-+    80001202:	3ff57793          	and	a5,a0,1023
-+    80001206:	fd7788e3          	beq	a5,s7,800011d6 <uvmunmap+0x6a>
-     if(do_free){
--    80001252:	fc0a8ce3          	beqz	s5,8000122a <uvmunmap+0x70>
-+    8000120a:	fc0a8ce3          	beqz	s5,800011e2 <uvmunmap+0x76>
-       uint64 pa = PTE2PA(*pte);
--    80001256:	8129                	srli	a0,a0,0xa
-+    8000120e:	8129                	srl	a0,a0,0xa
-       kfree((void*)pa);
--    80001258:	0532                	slli	a0,a0,0xc
--    8000125a:	fe8ff0ef          	jal	80000a42 <kfree>
--    8000125e:	b7f1                	j	8000122a <uvmunmap+0x70>
--    80001260:	74e2                	ld	s1,56(sp)
--    80001262:	7942                	ld	s2,48(sp)
--    80001264:	79a2                	ld	s3,40(sp)
--    80001266:	7a02                	ld	s4,32(sp)
--    80001268:	6ae2                	ld	s5,24(sp)
--    8000126a:	6b42                	ld	s6,16(sp)
--    8000126c:	6ba2                	ld	s7,8(sp)
--  }
--}
--    8000126e:	60a6                	ld	ra,72(sp)
--    80001270:	6406                	ld	s0,64(sp)
--    80001272:	6161                	addi	sp,sp,80
--    80001274:	8082                	ret
-+    80001210:	0532                	sll	a0,a0,0xc
-+    80001212:	fdcff0ef          	jal	800009ee <kfree>
-+    80001216:	b7f1                	j	800011e2 <uvmunmap+0x76>
- 
--0000000080001276 <uvmcreate>:
-+0000000080001218 <uvmcreate>:
- 
- /* create an empty user page table. */
- /* returns 0 if out of memory. */
- pagetable_t
- uvmcreate()
- {
--    80001276:	1101                	addi	sp,sp,-32
--    80001278:	ec06                	sd	ra,24(sp)
--    8000127a:	e822                	sd	s0,16(sp)
--    8000127c:	e426                	sd	s1,8(sp)
--    8000127e:	1000                	addi	s0,sp,32
-+    80001218:	1101                	add	sp,sp,-32
-+    8000121a:	ec06                	sd	ra,24(sp)
-+    8000121c:	e822                	sd	s0,16(sp)
-+    8000121e:	e426                	sd	s1,8(sp)
-+    80001220:	1000                	add	s0,sp,32
-   pagetable_t pagetable;
-   pagetable = (pagetable_t) kalloc();
--    80001280:	8a5ff0ef          	jal	80000b24 <kalloc>
--    80001284:	84aa                	mv	s1,a0
-+    80001222:	8afff0ef          	jal	80000ad0 <kalloc>
-+    80001226:	84aa                	mv	s1,a0
-   if(pagetable == 0)
--    80001286:	c509                	beqz	a0,80001290 <uvmcreate+0x1a>
-+    80001228:	c509                	beqz	a0,80001232 <uvmcreate+0x1a>
-     return 0;
-   memset(pagetable, 0, PGSIZE);
--    80001288:	6605                	lui	a2,0x1
--    8000128a:	4581                	li	a1,0
--    8000128c:	a3dff0ef          	jal	80000cc8 <memset>
-+    8000122a:	6605                	lui	a2,0x1
-+    8000122c:	4581                	li	a1,0
-+    8000122e:	a47ff0ef          	jal	80000c74 <memset>
-   return pagetable;
- }
--    80001290:	8526                	mv	a0,s1
--    80001292:	60e2                	ld	ra,24(sp)
--    80001294:	6442                	ld	s0,16(sp)
--    80001296:	64a2                	ld	s1,8(sp)
--    80001298:	6105                	addi	sp,sp,32
--    8000129a:	8082                	ret
-+    80001232:	8526                	mv	a0,s1
-+    80001234:	60e2                	ld	ra,24(sp)
-+    80001236:	6442                	ld	s0,16(sp)
-+    80001238:	64a2                	ld	s1,8(sp)
-+    8000123a:	6105                	add	sp,sp,32
-+    8000123c:	8082                	ret
- 
--000000008000129c <uvmfirst>:
-+000000008000123e <uvmfirst>:
- /* Load the user initcode into address 0 of pagetable, */
- /* for the very first process. */
- /* sz must be less than a page. */
- void
- uvmfirst(pagetable_t pagetable, uchar *src, uint sz)
- {
--    8000129c:	7179                	addi	sp,sp,-48
--    8000129e:	f406                	sd	ra,40(sp)
--    800012a0:	f022                	sd	s0,32(sp)
--    800012a2:	ec26                	sd	s1,24(sp)
--    800012a4:	e84a                	sd	s2,16(sp)
--    800012a6:	e44e                	sd	s3,8(sp)
--    800012a8:	e052                	sd	s4,0(sp)
--    800012aa:	1800                	addi	s0,sp,48
-+    8000123e:	7179                	add	sp,sp,-48
-+    80001240:	f406                	sd	ra,40(sp)
-+    80001242:	f022                	sd	s0,32(sp)
-+    80001244:	ec26                	sd	s1,24(sp)
-+    80001246:	e84a                	sd	s2,16(sp)
-+    80001248:	e44e                	sd	s3,8(sp)
-+    8000124a:	e052                	sd	s4,0(sp)
-+    8000124c:	1800                	add	s0,sp,48
-   char *mem;
- 
-   if(sz >= PGSIZE)
--    800012ac:	6785                	lui	a5,0x1
--    800012ae:	04f67063          	bgeu	a2,a5,800012ee <uvmfirst+0x52>
--    800012b2:	8a2a                	mv	s4,a0
--    800012b4:	89ae                	mv	s3,a1
--    800012b6:	84b2                	mv	s1,a2
-+    8000124e:	6785                	lui	a5,0x1
-+    80001250:	04f67063          	bgeu	a2,a5,80001290 <uvmfirst+0x52>
-+    80001254:	8a2a                	mv	s4,a0
-+    80001256:	89ae                	mv	s3,a1
-+    80001258:	84b2                	mv	s1,a2
-     panic("uvmfirst: more than a page");
-   mem = kalloc();
--    800012b8:	86dff0ef          	jal	80000b24 <kalloc>
--    800012bc:	892a                	mv	s2,a0
-+    8000125a:	877ff0ef          	jal	80000ad0 <kalloc>
-+    8000125e:	892a                	mv	s2,a0
-   memset(mem, 0, PGSIZE);
--    800012be:	6605                	lui	a2,0x1
--    800012c0:	4581                	li	a1,0
--    800012c2:	a07ff0ef          	jal	80000cc8 <memset>
-+    80001260:	6605                	lui	a2,0x1
-+    80001262:	4581                	li	a1,0
-+    80001264:	a11ff0ef          	jal	80000c74 <memset>
-   mappages(pagetable, 0, PGSIZE, (uint64)mem, PTE_W|PTE_R|PTE_X|PTE_U);
--    800012c6:	4779                	li	a4,30
--    800012c8:	86ca                	mv	a3,s2
--    800012ca:	6605                	lui	a2,0x1
--    800012cc:	4581                	li	a1,0
--    800012ce:	8552                	mv	a0,s4
--    800012d0:	d45ff0ef          	jal	80001014 <mappages>
-+    80001268:	4779                	li	a4,30
-+    8000126a:	86ca                	mv	a3,s2
-+    8000126c:	6605                	lui	a2,0x1
-+    8000126e:	4581                	li	a1,0
-+    80001270:	8552                	mv	a0,s4
-+    80001272:	d55ff0ef          	jal	80000fc6 <mappages>
-   memmove(mem, src, sz);
--    800012d4:	8626                	mv	a2,s1
--    800012d6:	85ce                	mv	a1,s3
--    800012d8:	854a                	mv	a0,s2
--    800012da:	a4bff0ef          	jal	80000d24 <memmove>
--}
--    800012de:	70a2                	ld	ra,40(sp)
--    800012e0:	7402                	ld	s0,32(sp)
--    800012e2:	64e2                	ld	s1,24(sp)
--    800012e4:	6942                	ld	s2,16(sp)
--    800012e6:	69a2                	ld	s3,8(sp)
--    800012e8:	6a02                	ld	s4,0(sp)
--    800012ea:	6145                	addi	sp,sp,48
--    800012ec:	8082                	ret
-+    80001276:	8626                	mv	a2,s1
-+    80001278:	85ce                	mv	a1,s3
-+    8000127a:	854a                	mv	a0,s2
-+    8000127c:	a55ff0ef          	jal	80000cd0 <memmove>
-+}
-+    80001280:	70a2                	ld	ra,40(sp)
-+    80001282:	7402                	ld	s0,32(sp)
-+    80001284:	64e2                	ld	s1,24(sp)
-+    80001286:	6942                	ld	s2,16(sp)
-+    80001288:	69a2                	ld	s3,8(sp)
-+    8000128a:	6a02                	ld	s4,0(sp)
-+    8000128c:	6145                	add	sp,sp,48
-+    8000128e:	8082                	ret
-     panic("uvmfirst: more than a page");
--    800012ee:	00006517          	auipc	a0,0x6
--    800012f2:	e8a50513          	addi	a0,a0,-374 # 80007178 <etext+0x178>
--    800012f6:	c9eff0ef          	jal	80000794 <panic>
-+    80001290:	00006517          	auipc	a0,0x6
-+    80001294:	f0050513          	add	a0,a0,-256 # 80007190 <digits+0x158>
-+    80001298:	cc6ff0ef          	jal	8000075e <panic>
- 
--00000000800012fa <uvmdealloc>:
-+000000008000129c <uvmdealloc>:
- /* newsz.  oldsz and newsz need not be page-aligned, nor does newsz */
- /* need to be less than oldsz.  oldsz can be larger than the actual */
- /* process size.  Returns the new process size. */
- uint64
- uvmdealloc(pagetable_t pagetable, uint64 oldsz, uint64 newsz)
- {
--    800012fa:	1101                	addi	sp,sp,-32
--    800012fc:	ec06                	sd	ra,24(sp)
--    800012fe:	e822                	sd	s0,16(sp)
--    80001300:	e426                	sd	s1,8(sp)
--    80001302:	1000                	addi	s0,sp,32
-+    8000129c:	1101                	add	sp,sp,-32
-+    8000129e:	ec06                	sd	ra,24(sp)
-+    800012a0:	e822                	sd	s0,16(sp)
-+    800012a2:	e426                	sd	s1,8(sp)
-+    800012a4:	1000                	add	s0,sp,32
-   if(newsz >= oldsz)
-     return oldsz;
--    80001304:	84ae                	mv	s1,a1
-+    800012a6:	84ae                	mv	s1,a1
-   if(newsz >= oldsz)
--    80001306:	00b67d63          	bgeu	a2,a1,80001320 <uvmdealloc+0x26>
--    8000130a:	84b2                	mv	s1,a2
-+    800012a8:	00b67d63          	bgeu	a2,a1,800012c2 <uvmdealloc+0x26>
-+    800012ac:	84b2                	mv	s1,a2
- 
-   if(PGROUNDUP(newsz) < PGROUNDUP(oldsz)){
--    8000130c:	6785                	lui	a5,0x1
--    8000130e:	17fd                	addi	a5,a5,-1 # fff <_entry-0x7ffff001>
--    80001310:	00f60733          	add	a4,a2,a5
--    80001314:	76fd                	lui	a3,0xfffff
--    80001316:	8f75                	and	a4,a4,a3
--    80001318:	97ae                	add	a5,a5,a1
--    8000131a:	8ff5                	and	a5,a5,a3
--    8000131c:	00f76863          	bltu	a4,a5,8000132c <uvmdealloc+0x32>
-+    800012ae:	6785                	lui	a5,0x1
-+    800012b0:	17fd                	add	a5,a5,-1 # fff <_entry-0x7ffff001>
-+    800012b2:	00f60733          	add	a4,a2,a5
-+    800012b6:	76fd                	lui	a3,0xfffff
-+    800012b8:	8f75                	and	a4,a4,a3
-+    800012ba:	97ae                	add	a5,a5,a1
-+    800012bc:	8ff5                	and	a5,a5,a3
-+    800012be:	00f76863          	bltu	a4,a5,800012ce <uvmdealloc+0x32>
-     int npages = (PGROUNDUP(oldsz) - PGROUNDUP(newsz)) / PGSIZE;
-     uvmunmap(pagetable, PGROUNDUP(newsz), npages, 1);
-   }
- 
-   return newsz;
- }
--    80001320:	8526                	mv	a0,s1
--    80001322:	60e2                	ld	ra,24(sp)
--    80001324:	6442                	ld	s0,16(sp)
--    80001326:	64a2                	ld	s1,8(sp)
--    80001328:	6105                	addi	sp,sp,32
--    8000132a:	8082                	ret
-+    800012c2:	8526                	mv	a0,s1
-+    800012c4:	60e2                	ld	ra,24(sp)
-+    800012c6:	6442                	ld	s0,16(sp)
-+    800012c8:	64a2                	ld	s1,8(sp)
-+    800012ca:	6105                	add	sp,sp,32
-+    800012cc:	8082                	ret
-     int npages = (PGROUNDUP(oldsz) - PGROUNDUP(newsz)) / PGSIZE;
--    8000132c:	8f99                	sub	a5,a5,a4
--    8000132e:	83b1                	srli	a5,a5,0xc
-+    800012ce:	8f99                	sub	a5,a5,a4
-+    800012d0:	83b1                	srl	a5,a5,0xc
-     uvmunmap(pagetable, PGROUNDUP(newsz), npages, 1);
--    80001330:	4685                	li	a3,1
--    80001332:	0007861b          	sext.w	a2,a5
--    80001336:	85ba                	mv	a1,a4
--    80001338:	e83ff0ef          	jal	800011ba <uvmunmap>
--    8000133c:	b7d5                	j	80001320 <uvmdealloc+0x26>
-+    800012d2:	4685                	li	a3,1
-+    800012d4:	0007861b          	sext.w	a2,a5
-+    800012d8:	85ba                	mv	a1,a4
-+    800012da:	e93ff0ef          	jal	8000116c <uvmunmap>
-+    800012de:	b7d5                	j	800012c2 <uvmdealloc+0x26>
- 
--000000008000133e <uvmalloc>:
-+00000000800012e0 <uvmalloc>:
-   if(newsz < oldsz)
--    8000133e:	08b66f63          	bltu	a2,a1,800013dc <uvmalloc+0x9e>
--{
--    80001342:	7139                	addi	sp,sp,-64
--    80001344:	fc06                	sd	ra,56(sp)
--    80001346:	f822                	sd	s0,48(sp)
--    80001348:	ec4e                	sd	s3,24(sp)
--    8000134a:	e852                	sd	s4,16(sp)
--    8000134c:	e456                	sd	s5,8(sp)
--    8000134e:	0080                	addi	s0,sp,64
--    80001350:	8aaa                	mv	s5,a0
--    80001352:	8a32                	mv	s4,a2
-+    800012e0:	08b66963          	bltu	a2,a1,80001372 <uvmalloc+0x92>
-+{
-+    800012e4:	7139                	add	sp,sp,-64
-+    800012e6:	fc06                	sd	ra,56(sp)
-+    800012e8:	f822                	sd	s0,48(sp)
-+    800012ea:	f426                	sd	s1,40(sp)
-+    800012ec:	f04a                	sd	s2,32(sp)
-+    800012ee:	ec4e                	sd	s3,24(sp)
-+    800012f0:	e852                	sd	s4,16(sp)
-+    800012f2:	e456                	sd	s5,8(sp)
-+    800012f4:	e05a                	sd	s6,0(sp)
-+    800012f6:	0080                	add	s0,sp,64
-+    800012f8:	8aaa                	mv	s5,a0
-+    800012fa:	8a32                	mv	s4,a2
-   oldsz = PGROUNDUP(oldsz);
--    80001354:	6785                	lui	a5,0x1
--    80001356:	17fd                	addi	a5,a5,-1 # fff <_entry-0x7ffff001>
--    80001358:	95be                	add	a1,a1,a5
--    8000135a:	77fd                	lui	a5,0xfffff
--    8000135c:	00f5f9b3          	and	s3,a1,a5
-+    800012fc:	6785                	lui	a5,0x1
-+    800012fe:	17fd                	add	a5,a5,-1 # fff <_entry-0x7ffff001>
-+    80001300:	95be                	add	a1,a1,a5
-+    80001302:	77fd                	lui	a5,0xfffff
-+    80001304:	00f5f9b3          	and	s3,a1,a5
-   for(a = oldsz; a < newsz; a += PGSIZE){
--    80001360:	08c9f063          	bgeu	s3,a2,800013e0 <uvmalloc+0xa2>
--    80001364:	f426                	sd	s1,40(sp)
--    80001366:	f04a                	sd	s2,32(sp)
--    80001368:	e05a                	sd	s6,0(sp)
--    8000136a:	894e                	mv	s2,s3
-+    80001308:	06c9f763          	bgeu	s3,a2,80001376 <uvmalloc+0x96>
-+    8000130c:	894e                	mv	s2,s3
-     if(mappages(pagetable, a, PGSIZE, (uint64)mem, PTE_R|PTE_U|xperm) != 0){
--    8000136c:	0126eb13          	ori	s6,a3,18
-+    8000130e:	0126eb13          	or	s6,a3,18
-     mem = kalloc();
--    80001370:	fb4ff0ef          	jal	80000b24 <kalloc>
--    80001374:	84aa                	mv	s1,a0
-+    80001312:	fbeff0ef          	jal	80000ad0 <kalloc>
-+    80001316:	84aa                	mv	s1,a0
-     if(mem == 0){
--    80001376:	c515                	beqz	a0,800013a2 <uvmalloc+0x64>
-+    80001318:	c11d                	beqz	a0,8000133e <uvmalloc+0x5e>
-     memset(mem, 0, PGSIZE);
--    80001378:	6605                	lui	a2,0x1
--    8000137a:	4581                	li	a1,0
--    8000137c:	94dff0ef          	jal	80000cc8 <memset>
-+    8000131a:	6605                	lui	a2,0x1
-+    8000131c:	4581                	li	a1,0
-+    8000131e:	957ff0ef          	jal	80000c74 <memset>
-     if(mappages(pagetable, a, PGSIZE, (uint64)mem, PTE_R|PTE_U|xperm) != 0){
--    80001380:	875a                	mv	a4,s6
--    80001382:	86a6                	mv	a3,s1
--    80001384:	6605                	lui	a2,0x1
--    80001386:	85ca                	mv	a1,s2
--    80001388:	8556                	mv	a0,s5
--    8000138a:	c8bff0ef          	jal	80001014 <mappages>
--    8000138e:	e915                	bnez	a0,800013c2 <uvmalloc+0x84>
-+    80001322:	875a                	mv	a4,s6
-+    80001324:	86a6                	mv	a3,s1
-+    80001326:	6605                	lui	a2,0x1
-+    80001328:	85ca                	mv	a1,s2
-+    8000132a:	8556                	mv	a0,s5
-+    8000132c:	c9bff0ef          	jal	80000fc6 <mappages>
-+    80001330:	e51d                	bnez	a0,8000135e <uvmalloc+0x7e>
-   for(a = oldsz; a < newsz; a += PGSIZE){
--    80001390:	6785                	lui	a5,0x1
--    80001392:	993e                	add	s2,s2,a5
--    80001394:	fd496ee3          	bltu	s2,s4,80001370 <uvmalloc+0x32>
-+    80001332:	6785                	lui	a5,0x1
-+    80001334:	993e                	add	s2,s2,a5
-+    80001336:	fd496ee3          	bltu	s2,s4,80001312 <uvmalloc+0x32>
-   return newsz;
--    80001398:	8552                	mv	a0,s4
--    8000139a:	74a2                	ld	s1,40(sp)
--    8000139c:	7902                	ld	s2,32(sp)
--    8000139e:	6b02                	ld	s6,0(sp)
--    800013a0:	a811                	j	800013b4 <uvmalloc+0x76>
-+    8000133a:	8552                	mv	a0,s4
-+    8000133c:	a039                	j	8000134a <uvmalloc+0x6a>
-       uvmdealloc(pagetable, a, oldsz);
--    800013a2:	864e                	mv	a2,s3
--    800013a4:	85ca                	mv	a1,s2
--    800013a6:	8556                	mv	a0,s5
--    800013a8:	f53ff0ef          	jal	800012fa <uvmdealloc>
-+    8000133e:	864e                	mv	a2,s3
-+    80001340:	85ca                	mv	a1,s2
-+    80001342:	8556                	mv	a0,s5
-+    80001344:	f59ff0ef          	jal	8000129c <uvmdealloc>
-       return 0;
--    800013ac:	4501                	li	a0,0
--    800013ae:	74a2                	ld	s1,40(sp)
--    800013b0:	7902                	ld	s2,32(sp)
--    800013b2:	6b02                	ld	s6,0(sp)
--}
--    800013b4:	70e2                	ld	ra,56(sp)
--    800013b6:	7442                	ld	s0,48(sp)
--    800013b8:	69e2                	ld	s3,24(sp)
--    800013ba:	6a42                	ld	s4,16(sp)
--    800013bc:	6aa2                	ld	s5,8(sp)
--    800013be:	6121                	addi	sp,sp,64
--    800013c0:	8082                	ret
-+    80001348:	4501                	li	a0,0
-+}
-+    8000134a:	70e2                	ld	ra,56(sp)
-+    8000134c:	7442                	ld	s0,48(sp)
-+    8000134e:	74a2                	ld	s1,40(sp)
-+    80001350:	7902                	ld	s2,32(sp)
-+    80001352:	69e2                	ld	s3,24(sp)
-+    80001354:	6a42                	ld	s4,16(sp)
-+    80001356:	6aa2                	ld	s5,8(sp)
-+    80001358:	6b02                	ld	s6,0(sp)
-+    8000135a:	6121                	add	sp,sp,64
-+    8000135c:	8082                	ret
-       kfree(mem);
--    800013c2:	8526                	mv	a0,s1
--    800013c4:	e7eff0ef          	jal	80000a42 <kfree>
-+    8000135e:	8526                	mv	a0,s1
-+    80001360:	e8eff0ef          	jal	800009ee <kfree>
-       uvmdealloc(pagetable, a, oldsz);
--    800013c8:	864e                	mv	a2,s3
--    800013ca:	85ca                	mv	a1,s2
--    800013cc:	8556                	mv	a0,s5
--    800013ce:	f2dff0ef          	jal	800012fa <uvmdealloc>
-+    80001364:	864e                	mv	a2,s3
-+    80001366:	85ca                	mv	a1,s2
-+    80001368:	8556                	mv	a0,s5
-+    8000136a:	f33ff0ef          	jal	8000129c <uvmdealloc>
-       return 0;
--    800013d2:	4501                	li	a0,0
--    800013d4:	74a2                	ld	s1,40(sp)
--    800013d6:	7902                	ld	s2,32(sp)
--    800013d8:	6b02                	ld	s6,0(sp)
--    800013da:	bfe9                	j	800013b4 <uvmalloc+0x76>
-+    8000136e:	4501                	li	a0,0
-+    80001370:	bfe9                	j	8000134a <uvmalloc+0x6a>
-     return oldsz;
--    800013dc:	852e                	mv	a0,a1
-+    80001372:	852e                	mv	a0,a1
- }
--    800013de:	8082                	ret
-+    80001374:	8082                	ret
-   return newsz;
--    800013e0:	8532                	mv	a0,a2
--    800013e2:	bfc9                	j	800013b4 <uvmalloc+0x76>
-+    80001376:	8532                	mv	a0,a2
-+    80001378:	bfc9                	j	8000134a <uvmalloc+0x6a>
- 
--00000000800013e4 <freewalk>:
-+000000008000137a <freewalk>:
- 
- /* Recursively free page-table pages. */
- /* All leaf mappings must already have been removed. */
- void
- freewalk(pagetable_t pagetable)
- {
--    800013e4:	7179                	addi	sp,sp,-48
--    800013e6:	f406                	sd	ra,40(sp)
--    800013e8:	f022                	sd	s0,32(sp)
--    800013ea:	ec26                	sd	s1,24(sp)
--    800013ec:	e84a                	sd	s2,16(sp)
--    800013ee:	e44e                	sd	s3,8(sp)
--    800013f0:	e052                	sd	s4,0(sp)
--    800013f2:	1800                	addi	s0,sp,48
--    800013f4:	8a2a                	mv	s4,a0
-+    8000137a:	7179                	add	sp,sp,-48
-+    8000137c:	f406                	sd	ra,40(sp)
-+    8000137e:	f022                	sd	s0,32(sp)
-+    80001380:	ec26                	sd	s1,24(sp)
-+    80001382:	e84a                	sd	s2,16(sp)
-+    80001384:	e44e                	sd	s3,8(sp)
-+    80001386:	e052                	sd	s4,0(sp)
-+    80001388:	1800                	add	s0,sp,48
-+    8000138a:	8a2a                	mv	s4,a0
-   /* there are 2^9 = 512 PTEs in a page table. */
-   for(int i = 0; i < 512; i++){
--    800013f6:	84aa                	mv	s1,a0
--    800013f8:	6905                	lui	s2,0x1
--    800013fa:	992a                	add	s2,s2,a0
-+    8000138c:	84aa                	mv	s1,a0
-+    8000138e:	6905                	lui	s2,0x1
-+    80001390:	992a                	add	s2,s2,a0
-     pte_t pte = pagetable[i];
-     if((pte & PTE_V) && (pte & (PTE_R|PTE_W|PTE_X)) == 0){
--    800013fc:	4985                	li	s3,1
--    800013fe:	a819                	j	80001414 <freewalk+0x30>
-+    80001392:	4985                	li	s3,1
-+    80001394:	a819                	j	800013aa <freewalk+0x30>
-       /* this PTE points to a lower-level page table. */
-       uint64 child = PTE2PA(pte);
--    80001400:	83a9                	srli	a5,a5,0xa
-+    80001396:	83a9                	srl	a5,a5,0xa
-       freewalk((pagetable_t)child);
--    80001402:	00c79513          	slli	a0,a5,0xc
--    80001406:	fdfff0ef          	jal	800013e4 <freewalk>
-+    80001398:	00c79513          	sll	a0,a5,0xc
-+    8000139c:	fdfff0ef          	jal	8000137a <freewalk>
-       pagetable[i] = 0;
--    8000140a:	0004b023          	sd	zero,0(s1)
-+    800013a0:	0004b023          	sd	zero,0(s1)
-   for(int i = 0; i < 512; i++){
--    8000140e:	04a1                	addi	s1,s1,8
--    80001410:	01248f63          	beq	s1,s2,8000142e <freewalk+0x4a>
-+    800013a4:	04a1                	add	s1,s1,8
-+    800013a6:	01248f63          	beq	s1,s2,800013c4 <freewalk+0x4a>
-     pte_t pte = pagetable[i];
--    80001414:	609c                	ld	a5,0(s1)
-+    800013aa:	609c                	ld	a5,0(s1)
-     if((pte & PTE_V) && (pte & (PTE_R|PTE_W|PTE_X)) == 0){
--    80001416:	00f7f713          	andi	a4,a5,15
--    8000141a:	ff3703e3          	beq	a4,s3,80001400 <freewalk+0x1c>
-+    800013ac:	00f7f713          	and	a4,a5,15
-+    800013b0:	ff3703e3          	beq	a4,s3,80001396 <freewalk+0x1c>
-     } else if(pte & PTE_V){
--    8000141e:	8b85                	andi	a5,a5,1
--    80001420:	d7fd                	beqz	a5,8000140e <freewalk+0x2a>
-+    800013b4:	8b85                	and	a5,a5,1
-+    800013b6:	d7fd                	beqz	a5,800013a4 <freewalk+0x2a>
-       panic("freewalk: leaf");
--    80001422:	00006517          	auipc	a0,0x6
--    80001426:	d7650513          	addi	a0,a0,-650 # 80007198 <etext+0x198>
--    8000142a:	b6aff0ef          	jal	80000794 <panic>
-+    800013b8:	00006517          	auipc	a0,0x6
-+    800013bc:	df850513          	add	a0,a0,-520 # 800071b0 <digits+0x178>
-+    800013c0:	b9eff0ef          	jal	8000075e <panic>
-     }
-   }
-   kfree((void*)pagetable);
--    8000142e:	8552                	mv	a0,s4
--    80001430:	e12ff0ef          	jal	80000a42 <kfree>
-+    800013c4:	8552                	mv	a0,s4
-+    800013c6:	e28ff0ef          	jal	800009ee <kfree>
- }
--    80001434:	70a2                	ld	ra,40(sp)
--    80001436:	7402                	ld	s0,32(sp)
--    80001438:	64e2                	ld	s1,24(sp)
--    8000143a:	6942                	ld	s2,16(sp)
--    8000143c:	69a2                	ld	s3,8(sp)
--    8000143e:	6a02                	ld	s4,0(sp)
--    80001440:	6145                	addi	sp,sp,48
--    80001442:	8082                	ret
-+    800013ca:	70a2                	ld	ra,40(sp)
-+    800013cc:	7402                	ld	s0,32(sp)
-+    800013ce:	64e2                	ld	s1,24(sp)
-+    800013d0:	6942                	ld	s2,16(sp)
-+    800013d2:	69a2                	ld	s3,8(sp)
-+    800013d4:	6a02                	ld	s4,0(sp)
-+    800013d6:	6145                	add	sp,sp,48
-+    800013d8:	8082                	ret
- 
--0000000080001444 <uvmfree>:
-+00000000800013da <uvmfree>:
- 
- /* Free user memory pages, */
- /* then free page-table pages. */
- void
- uvmfree(pagetable_t pagetable, uint64 sz)
- {
--    80001444:	1101                	addi	sp,sp,-32
--    80001446:	ec06                	sd	ra,24(sp)
--    80001448:	e822                	sd	s0,16(sp)
--    8000144a:	e426                	sd	s1,8(sp)
--    8000144c:	1000                	addi	s0,sp,32
--    8000144e:	84aa                	mv	s1,a0
-+    800013da:	1101                	add	sp,sp,-32
-+    800013dc:	ec06                	sd	ra,24(sp)
-+    800013de:	e822                	sd	s0,16(sp)
-+    800013e0:	e426                	sd	s1,8(sp)
-+    800013e2:	1000                	add	s0,sp,32
-+    800013e4:	84aa                	mv	s1,a0
-   if(sz > 0)
--    80001450:	e989                	bnez	a1,80001462 <uvmfree+0x1e>
-+    800013e6:	e989                	bnez	a1,800013f8 <uvmfree+0x1e>
-     uvmunmap(pagetable, 0, PGROUNDUP(sz)/PGSIZE, 1);
-   freewalk(pagetable);
--    80001452:	8526                	mv	a0,s1
--    80001454:	f91ff0ef          	jal	800013e4 <freewalk>
--}
--    80001458:	60e2                	ld	ra,24(sp)
--    8000145a:	6442                	ld	s0,16(sp)
--    8000145c:	64a2                	ld	s1,8(sp)
--    8000145e:	6105                	addi	sp,sp,32
--    80001460:	8082                	ret
-+    800013e8:	8526                	mv	a0,s1
-+    800013ea:	f91ff0ef          	jal	8000137a <freewalk>
-+}
-+    800013ee:	60e2                	ld	ra,24(sp)
-+    800013f0:	6442                	ld	s0,16(sp)
-+    800013f2:	64a2                	ld	s1,8(sp)
-+    800013f4:	6105                	add	sp,sp,32
-+    800013f6:	8082                	ret
-     uvmunmap(pagetable, 0, PGROUNDUP(sz)/PGSIZE, 1);
--    80001462:	6785                	lui	a5,0x1
--    80001464:	17fd                	addi	a5,a5,-1 # fff <_entry-0x7ffff001>
--    80001466:	95be                	add	a1,a1,a5
--    80001468:	4685                	li	a3,1
--    8000146a:	00c5d613          	srli	a2,a1,0xc
--    8000146e:	4581                	li	a1,0
--    80001470:	d4bff0ef          	jal	800011ba <uvmunmap>
--    80001474:	bff9                	j	80001452 <uvmfree+0xe>
--
--0000000080001476 <uvmcopy>:
-+    800013f8:	6785                	lui	a5,0x1
-+    800013fa:	17fd                	add	a5,a5,-1 # fff <_entry-0x7ffff001>
-+    800013fc:	95be                	add	a1,a1,a5
-+    800013fe:	4685                	li	a3,1
-+    80001400:	00c5d613          	srl	a2,a1,0xc
-+    80001404:	4581                	li	a1,0
-+    80001406:	d67ff0ef          	jal	8000116c <uvmunmap>
-+    8000140a:	bff9                	j	800013e8 <uvmfree+0xe>
-+
-+000000008000140c <uvmcopy>:
-   pte_t *pte;
-   uint64 pa, i;
-   uint flags;
-   char *mem;
- 
-   for(i = 0; i < sz; i += PGSIZE){
--    80001476:	c65d                	beqz	a2,80001524 <uvmcopy+0xae>
--{
--    80001478:	715d                	addi	sp,sp,-80
--    8000147a:	e486                	sd	ra,72(sp)
--    8000147c:	e0a2                	sd	s0,64(sp)
--    8000147e:	fc26                	sd	s1,56(sp)
--    80001480:	f84a                	sd	s2,48(sp)
--    80001482:	f44e                	sd	s3,40(sp)
--    80001484:	f052                	sd	s4,32(sp)
--    80001486:	ec56                	sd	s5,24(sp)
--    80001488:	e85a                	sd	s6,16(sp)
--    8000148a:	e45e                	sd	s7,8(sp)
--    8000148c:	0880                	addi	s0,sp,80
--    8000148e:	8b2a                	mv	s6,a0
--    80001490:	8aae                	mv	s5,a1
--    80001492:	8a32                	mv	s4,a2
-+    8000140c:	c65d                	beqz	a2,800014ba <uvmcopy+0xae>
-+{
-+    8000140e:	715d                	add	sp,sp,-80
-+    80001410:	e486                	sd	ra,72(sp)
-+    80001412:	e0a2                	sd	s0,64(sp)
-+    80001414:	fc26                	sd	s1,56(sp)
-+    80001416:	f84a                	sd	s2,48(sp)
-+    80001418:	f44e                	sd	s3,40(sp)
-+    8000141a:	f052                	sd	s4,32(sp)
-+    8000141c:	ec56                	sd	s5,24(sp)
-+    8000141e:	e85a                	sd	s6,16(sp)
-+    80001420:	e45e                	sd	s7,8(sp)
-+    80001422:	0880                	add	s0,sp,80
-+    80001424:	8b2a                	mv	s6,a0
-+    80001426:	8aae                	mv	s5,a1
-+    80001428:	8a32                	mv	s4,a2
-   for(i = 0; i < sz; i += PGSIZE){
--    80001494:	4981                	li	s3,0
-+    8000142a:	4981                	li	s3,0
-     if((pte = walk(old, i, 0)) == 0)
--    80001496:	4601                	li	a2,0
--    80001498:	85ce                	mv	a1,s3
--    8000149a:	855a                	mv	a0,s6
--    8000149c:	aa1ff0ef          	jal	80000f3c <walk>
--    800014a0:	c121                	beqz	a0,800014e0 <uvmcopy+0x6a>
-+    8000142c:	4601                	li	a2,0
-+    8000142e:	85ce                	mv	a1,s3
-+    80001430:	855a                	mv	a0,s6
-+    80001432:	abdff0ef          	jal	80000eee <walk>
-+    80001436:	c121                	beqz	a0,80001476 <uvmcopy+0x6a>
-       panic("uvmcopy: pte should exist");
-     if((*pte & PTE_V) == 0)
--    800014a2:	6118                	ld	a4,0(a0)
--    800014a4:	00177793          	andi	a5,a4,1
--    800014a8:	c3b1                	beqz	a5,800014ec <uvmcopy+0x76>
-+    80001438:	6118                	ld	a4,0(a0)
-+    8000143a:	00177793          	and	a5,a4,1
-+    8000143e:	c3b1                	beqz	a5,80001482 <uvmcopy+0x76>
-       panic("uvmcopy: page not present");
-     pa = PTE2PA(*pte);
--    800014aa:	00a75593          	srli	a1,a4,0xa
--    800014ae:	00c59b93          	slli	s7,a1,0xc
-+    80001440:	00a75593          	srl	a1,a4,0xa
-+    80001444:	00c59b93          	sll	s7,a1,0xc
-     flags = PTE_FLAGS(*pte);
--    800014b2:	3ff77493          	andi	s1,a4,1023
-+    80001448:	3ff77493          	and	s1,a4,1023
-     if((mem = kalloc()) == 0)
--    800014b6:	e6eff0ef          	jal	80000b24 <kalloc>
--    800014ba:	892a                	mv	s2,a0
--    800014bc:	c129                	beqz	a0,800014fe <uvmcopy+0x88>
-+    8000144c:	e84ff0ef          	jal	80000ad0 <kalloc>
-+    80001450:	892a                	mv	s2,a0
-+    80001452:	c129                	beqz	a0,80001494 <uvmcopy+0x88>
-       goto err;
-     memmove(mem, (char*)pa, PGSIZE);
--    800014be:	6605                	lui	a2,0x1
--    800014c0:	85de                	mv	a1,s7
--    800014c2:	863ff0ef          	jal	80000d24 <memmove>
-+    80001454:	6605                	lui	a2,0x1
-+    80001456:	85de                	mv	a1,s7
-+    80001458:	879ff0ef          	jal	80000cd0 <memmove>
-     if(mappages(new, i, PGSIZE, (uint64)mem, flags) != 0){
--    800014c6:	8726                	mv	a4,s1
--    800014c8:	86ca                	mv	a3,s2
--    800014ca:	6605                	lui	a2,0x1
--    800014cc:	85ce                	mv	a1,s3
--    800014ce:	8556                	mv	a0,s5
--    800014d0:	b45ff0ef          	jal	80001014 <mappages>
--    800014d4:	e115                	bnez	a0,800014f8 <uvmcopy+0x82>
-+    8000145c:	8726                	mv	a4,s1
-+    8000145e:	86ca                	mv	a3,s2
-+    80001460:	6605                	lui	a2,0x1
-+    80001462:	85ce                	mv	a1,s3
-+    80001464:	8556                	mv	a0,s5
-+    80001466:	b61ff0ef          	jal	80000fc6 <mappages>
-+    8000146a:	e115                	bnez	a0,8000148e <uvmcopy+0x82>
-   for(i = 0; i < sz; i += PGSIZE){
--    800014d6:	6785                	lui	a5,0x1
--    800014d8:	99be                	add	s3,s3,a5
--    800014da:	fb49eee3          	bltu	s3,s4,80001496 <uvmcopy+0x20>
--    800014de:	a805                	j	8000150e <uvmcopy+0x98>
-+    8000146c:	6785                	lui	a5,0x1
-+    8000146e:	99be                	add	s3,s3,a5
-+    80001470:	fb49eee3          	bltu	s3,s4,8000142c <uvmcopy+0x20>
-+    80001474:	a805                	j	800014a4 <uvmcopy+0x98>
-       panic("uvmcopy: pte should exist");
--    800014e0:	00006517          	auipc	a0,0x6
--    800014e4:	cc850513          	addi	a0,a0,-824 # 800071a8 <etext+0x1a8>
--    800014e8:	aacff0ef          	jal	80000794 <panic>
-+    80001476:	00006517          	auipc	a0,0x6
-+    8000147a:	d4a50513          	add	a0,a0,-694 # 800071c0 <digits+0x188>
-+    8000147e:	ae0ff0ef          	jal	8000075e <panic>
-       panic("uvmcopy: page not present");
--    800014ec:	00006517          	auipc	a0,0x6
--    800014f0:	cdc50513          	addi	a0,a0,-804 # 800071c8 <etext+0x1c8>
--    800014f4:	aa0ff0ef          	jal	80000794 <panic>
-+    80001482:	00006517          	auipc	a0,0x6
-+    80001486:	d5e50513          	add	a0,a0,-674 # 800071e0 <digits+0x1a8>
-+    8000148a:	ad4ff0ef          	jal	8000075e <panic>
-       kfree(mem);
--    800014f8:	854a                	mv	a0,s2
--    800014fa:	d48ff0ef          	jal	80000a42 <kfree>
-+    8000148e:	854a                	mv	a0,s2
-+    80001490:	d5eff0ef          	jal	800009ee <kfree>
-     }
-   }
-   return 0;
- 
-  err:
-   uvmunmap(new, 0, i / PGSIZE, 1);
--    800014fe:	4685                	li	a3,1
--    80001500:	00c9d613          	srli	a2,s3,0xc
--    80001504:	4581                	li	a1,0
--    80001506:	8556                	mv	a0,s5
--    80001508:	cb3ff0ef          	jal	800011ba <uvmunmap>
-+    80001494:	4685                	li	a3,1
-+    80001496:	00c9d613          	srl	a2,s3,0xc
-+    8000149a:	4581                	li	a1,0
-+    8000149c:	8556                	mv	a0,s5
-+    8000149e:	ccfff0ef          	jal	8000116c <uvmunmap>
-   return -1;
--    8000150c:	557d                	li	a0,-1
--}
--    8000150e:	60a6                	ld	ra,72(sp)
--    80001510:	6406                	ld	s0,64(sp)
--    80001512:	74e2                	ld	s1,56(sp)
--    80001514:	7942                	ld	s2,48(sp)
--    80001516:	79a2                	ld	s3,40(sp)
--    80001518:	7a02                	ld	s4,32(sp)
--    8000151a:	6ae2                	ld	s5,24(sp)
--    8000151c:	6b42                	ld	s6,16(sp)
--    8000151e:	6ba2                	ld	s7,8(sp)
--    80001520:	6161                	addi	sp,sp,80
--    80001522:	8082                	ret
-+    800014a2:	557d                	li	a0,-1
-+}
-+    800014a4:	60a6                	ld	ra,72(sp)
-+    800014a6:	6406                	ld	s0,64(sp)
-+    800014a8:	74e2                	ld	s1,56(sp)
-+    800014aa:	7942                	ld	s2,48(sp)
-+    800014ac:	79a2                	ld	s3,40(sp)
-+    800014ae:	7a02                	ld	s4,32(sp)
-+    800014b0:	6ae2                	ld	s5,24(sp)
-+    800014b2:	6b42                	ld	s6,16(sp)
-+    800014b4:	6ba2                	ld	s7,8(sp)
-+    800014b6:	6161                	add	sp,sp,80
-+    800014b8:	8082                	ret
-   return 0;
--    80001524:	4501                	li	a0,0
-+    800014ba:	4501                	li	a0,0
- }
--    80001526:	8082                	ret
-+    800014bc:	8082                	ret
- 
--0000000080001528 <uvmclear>:
-+00000000800014be <uvmclear>:
- 
- /* mark a PTE invalid for user access. */
- /* used by exec for the user stack guard page. */
- void
- uvmclear(pagetable_t pagetable, uint64 va)
- {
--    80001528:	1141                	addi	sp,sp,-16
--    8000152a:	e406                	sd	ra,8(sp)
--    8000152c:	e022                	sd	s0,0(sp)
--    8000152e:	0800                	addi	s0,sp,16
-+    800014be:	1141                	add	sp,sp,-16
-+    800014c0:	e406                	sd	ra,8(sp)
-+    800014c2:	e022                	sd	s0,0(sp)
-+    800014c4:	0800                	add	s0,sp,16
-   pte_t *pte;
-   
-   pte = walk(pagetable, va, 0);
--    80001530:	4601                	li	a2,0
--    80001532:	a0bff0ef          	jal	80000f3c <walk>
-+    800014c6:	4601                	li	a2,0
-+    800014c8:	a27ff0ef          	jal	80000eee <walk>
-   if(pte == 0)
--    80001536:	c901                	beqz	a0,80001546 <uvmclear+0x1e>
-+    800014cc:	c901                	beqz	a0,800014dc <uvmclear+0x1e>
-     panic("uvmclear");
-   *pte &= ~PTE_U;
--    80001538:	611c                	ld	a5,0(a0)
--    8000153a:	9bbd                	andi	a5,a5,-17
--    8000153c:	e11c                	sd	a5,0(a0)
--}
--    8000153e:	60a2                	ld	ra,8(sp)
--    80001540:	6402                	ld	s0,0(sp)
--    80001542:	0141                	addi	sp,sp,16
--    80001544:	8082                	ret
-+    800014ce:	611c                	ld	a5,0(a0)
-+    800014d0:	9bbd                	and	a5,a5,-17
-+    800014d2:	e11c                	sd	a5,0(a0)
-+}
-+    800014d4:	60a2                	ld	ra,8(sp)
-+    800014d6:	6402                	ld	s0,0(sp)
-+    800014d8:	0141                	add	sp,sp,16
-+    800014da:	8082                	ret
-     panic("uvmclear");
--    80001546:	00006517          	auipc	a0,0x6
--    8000154a:	ca250513          	addi	a0,a0,-862 # 800071e8 <etext+0x1e8>
--    8000154e:	a46ff0ef          	jal	80000794 <panic>
-+    800014dc:	00006517          	auipc	a0,0x6
-+    800014e0:	d2450513          	add	a0,a0,-732 # 80007200 <digits+0x1c8>
-+    800014e4:	a7aff0ef          	jal	8000075e <panic>
- 
--0000000080001552 <copyout>:
-+00000000800014e8 <copyout>:
- copyout(pagetable_t pagetable, uint64 dstva, char *src, uint64 len)
- {
-   uint64 n, va0, pa0;
-   pte_t *pte;
- 
-   while(len > 0){
--    80001552:	cad1                	beqz	a3,800015e6 <copyout+0x94>
--{
--    80001554:	711d                	addi	sp,sp,-96
--    80001556:	ec86                	sd	ra,88(sp)
--    80001558:	e8a2                	sd	s0,80(sp)
--    8000155a:	e4a6                	sd	s1,72(sp)
--    8000155c:	fc4e                	sd	s3,56(sp)
--    8000155e:	f456                	sd	s5,40(sp)
--    80001560:	f05a                	sd	s6,32(sp)
--    80001562:	ec5e                	sd	s7,24(sp)
--    80001564:	1080                	addi	s0,sp,96
--    80001566:	8baa                	mv	s7,a0
--    80001568:	8aae                	mv	s5,a1
--    8000156a:	8b32                	mv	s6,a2
--    8000156c:	89b6                	mv	s3,a3
-+    800014e8:	c6c9                	beqz	a3,80001572 <copyout+0x8a>
-+{
-+    800014ea:	711d                	add	sp,sp,-96
-+    800014ec:	ec86                	sd	ra,88(sp)
-+    800014ee:	e8a2                	sd	s0,80(sp)
-+    800014f0:	e4a6                	sd	s1,72(sp)
-+    800014f2:	e0ca                	sd	s2,64(sp)
-+    800014f4:	fc4e                	sd	s3,56(sp)
-+    800014f6:	f852                	sd	s4,48(sp)
-+    800014f8:	f456                	sd	s5,40(sp)
-+    800014fa:	f05a                	sd	s6,32(sp)
-+    800014fc:	ec5e                	sd	s7,24(sp)
-+    800014fe:	e862                	sd	s8,16(sp)
-+    80001500:	e466                	sd	s9,8(sp)
-+    80001502:	e06a                	sd	s10,0(sp)
-+    80001504:	1080                	add	s0,sp,96
-+    80001506:	8baa                	mv	s7,a0
-+    80001508:	8aae                	mv	s5,a1
-+    8000150a:	8b32                	mv	s6,a2
-+    8000150c:	89b6                	mv	s3,a3
-     va0 = PGROUNDDOWN(dstva);
--    8000156e:	74fd                	lui	s1,0xfffff
--    80001570:	8ced                	and	s1,s1,a1
-+    8000150e:	74fd                	lui	s1,0xfffff
-+    80001510:	8ced                	and	s1,s1,a1
-     if(va0 >= MAXVA)
--    80001572:	57fd                	li	a5,-1
--    80001574:	83e9                	srli	a5,a5,0x1a
--    80001576:	0697ea63          	bltu	a5,s1,800015ea <copyout+0x98>
--    8000157a:	e0ca                	sd	s2,64(sp)
--    8000157c:	f852                	sd	s4,48(sp)
--    8000157e:	e862                	sd	s8,16(sp)
--    80001580:	e466                	sd	s9,8(sp)
--    80001582:	e06a                	sd	s10,0(sp)
-+    80001512:	57fd                	li	a5,-1
-+    80001514:	83e9                	srl	a5,a5,0x1a
-+    80001516:	0697e063          	bltu	a5,s1,80001576 <copyout+0x8e>
-       return -1;
-     pte = walk(pagetable, va0, 0);
-     if(pte == 0 || (*pte & PTE_V) == 0 || (*pte & PTE_U) == 0 ||
--    80001584:	4cd5                	li	s9,21
--    80001586:	6d05                	lui	s10,0x1
-+    8000151a:	4cd5                	li	s9,21
-+    8000151c:	6d05                	lui	s10,0x1
-     if(va0 >= MAXVA)
--    80001588:	8c3e                	mv	s8,a5
--    8000158a:	a025                	j	800015b2 <copyout+0x60>
-+    8000151e:	8c3e                	mv	s8,a5
-+    80001520:	a025                	j	80001548 <copyout+0x60>
-        (*pte & PTE_W) == 0)
-       return -1;
-     pa0 = PTE2PA(*pte);
--    8000158c:	83a9                	srli	a5,a5,0xa
--    8000158e:	07b2                	slli	a5,a5,0xc
-+    80001522:	83a9                	srl	a5,a5,0xa
-+    80001524:	07b2                	sll	a5,a5,0xc
-     n = PGSIZE - (dstva - va0);
-     if(n > len)
-       n = len;
-     memmove((void *)(pa0 + (dstva - va0)), src, n);
--    80001590:	409a8533          	sub	a0,s5,s1
--    80001594:	0009061b          	sext.w	a2,s2
--    80001598:	85da                	mv	a1,s6
--    8000159a:	953e                	add	a0,a0,a5
--    8000159c:	f88ff0ef          	jal	80000d24 <memmove>
-+    80001526:	409a8533          	sub	a0,s5,s1
-+    8000152a:	0009061b          	sext.w	a2,s2
-+    8000152e:	85da                	mv	a1,s6
-+    80001530:	953e                	add	a0,a0,a5
-+    80001532:	f9eff0ef          	jal	80000cd0 <memmove>
- 
-     len -= n;
--    800015a0:	412989b3          	sub	s3,s3,s2
-+    80001536:	412989b3          	sub	s3,s3,s2
-     src += n;
--    800015a4:	9b4a                	add	s6,s6,s2
-+    8000153a:	9b4a                	add	s6,s6,s2
-   while(len > 0){
--    800015a6:	02098963          	beqz	s3,800015d8 <copyout+0x86>
-+    8000153c:	02098963          	beqz	s3,8000156e <copyout+0x86>
-     if(va0 >= MAXVA)
--    800015aa:	054c6263          	bltu	s8,s4,800015ee <copyout+0x9c>
--    800015ae:	84d2                	mv	s1,s4
--    800015b0:	8ad2                	mv	s5,s4
-+    80001540:	034c6d63          	bltu	s8,s4,8000157a <copyout+0x92>
-+    va0 = PGROUNDDOWN(dstva);
-+    80001544:	84d2                	mv	s1,s4
-+    dstva = va0 + PGSIZE;
-+    80001546:	8ad2                	mv	s5,s4
-     pte = walk(pagetable, va0, 0);
--    800015b2:	4601                	li	a2,0
--    800015b4:	85a6                	mv	a1,s1
--    800015b6:	855e                	mv	a0,s7
--    800015b8:	985ff0ef          	jal	80000f3c <walk>
-+    80001548:	4601                	li	a2,0
-+    8000154a:	85a6                	mv	a1,s1
-+    8000154c:	855e                	mv	a0,s7
-+    8000154e:	9a1ff0ef          	jal	80000eee <walk>
-     if(pte == 0 || (*pte & PTE_V) == 0 || (*pte & PTE_U) == 0 ||
--    800015bc:	c121                	beqz	a0,800015fc <copyout+0xaa>
--    800015be:	611c                	ld	a5,0(a0)
--    800015c0:	0157f713          	andi	a4,a5,21
--    800015c4:	05971b63          	bne	a4,s9,8000161a <copyout+0xc8>
-+    80001552:	c515                	beqz	a0,8000157e <copyout+0x96>
-+    80001554:	611c                	ld	a5,0(a0)
-+    80001556:	0157f713          	and	a4,a5,21
-+    8000155a:	05971163          	bne	a4,s9,8000159c <copyout+0xb4>
-     n = PGSIZE - (dstva - va0);
--    800015c8:	01a48a33          	add	s4,s1,s10
--    800015cc:	415a0933          	sub	s2,s4,s5
--    if(n > len)
--    800015d0:	fb29fee3          	bgeu	s3,s2,8000158c <copyout+0x3a>
--    800015d4:	894e                	mv	s2,s3
--    800015d6:	bf5d                	j	8000158c <copyout+0x3a>
--    dstva = va0 + PGSIZE;
-+    8000155e:	01a48a33          	add	s4,s1,s10
-+    80001562:	415a0933          	sub	s2,s4,s5
-+    80001566:	fb29fee3          	bgeu	s3,s2,80001522 <copyout+0x3a>
-+    8000156a:	894e                	mv	s2,s3
-+    8000156c:	bf5d                	j	80001522 <copyout+0x3a>
-   }
-   return 0;
--    800015d8:	4501                	li	a0,0
--    800015da:	6906                	ld	s2,64(sp)
--    800015dc:	7a42                	ld	s4,48(sp)
--    800015de:	6c42                	ld	s8,16(sp)
--    800015e0:	6ca2                	ld	s9,8(sp)
--    800015e2:	6d02                	ld	s10,0(sp)
--    800015e4:	a015                	j	80001608 <copyout+0xb6>
--    800015e6:	4501                	li	a0,0
--}
--    800015e8:	8082                	ret
-+    8000156e:	4501                	li	a0,0
-+    80001570:	a801                	j	80001580 <copyout+0x98>
-+    80001572:	4501                	li	a0,0
-+}
-+    80001574:	8082                	ret
-       return -1;
--    800015ea:	557d                	li	a0,-1
--    800015ec:	a831                	j	80001608 <copyout+0xb6>
--    800015ee:	557d                	li	a0,-1
--    800015f0:	6906                	ld	s2,64(sp)
--    800015f2:	7a42                	ld	s4,48(sp)
--    800015f4:	6c42                	ld	s8,16(sp)
--    800015f6:	6ca2                	ld	s9,8(sp)
--    800015f8:	6d02                	ld	s10,0(sp)
--    800015fa:	a039                	j	80001608 <copyout+0xb6>
-+    80001576:	557d                	li	a0,-1
-+    80001578:	a021                	j	80001580 <copyout+0x98>
-+    8000157a:	557d                	li	a0,-1
-+    8000157c:	a011                	j	80001580 <copyout+0x98>
-       return -1;
--    800015fc:	557d                	li	a0,-1
--    800015fe:	6906                	ld	s2,64(sp)
--    80001600:	7a42                	ld	s4,48(sp)
--    80001602:	6c42                	ld	s8,16(sp)
--    80001604:	6ca2                	ld	s9,8(sp)
--    80001606:	6d02                	ld	s10,0(sp)
--}
--    80001608:	60e6                	ld	ra,88(sp)
--    8000160a:	6446                	ld	s0,80(sp)
--    8000160c:	64a6                	ld	s1,72(sp)
--    8000160e:	79e2                	ld	s3,56(sp)
--    80001610:	7aa2                	ld	s5,40(sp)
--    80001612:	7b02                	ld	s6,32(sp)
--    80001614:	6be2                	ld	s7,24(sp)
--    80001616:	6125                	addi	sp,sp,96
--    80001618:	8082                	ret
-+    8000157e:	557d                	li	a0,-1
-+}
-+    80001580:	60e6                	ld	ra,88(sp)
-+    80001582:	6446                	ld	s0,80(sp)
-+    80001584:	64a6                	ld	s1,72(sp)
-+    80001586:	6906                	ld	s2,64(sp)
-+    80001588:	79e2                	ld	s3,56(sp)
-+    8000158a:	7a42                	ld	s4,48(sp)
-+    8000158c:	7aa2                	ld	s5,40(sp)
-+    8000158e:	7b02                	ld	s6,32(sp)
-+    80001590:	6be2                	ld	s7,24(sp)
-+    80001592:	6c42                	ld	s8,16(sp)
-+    80001594:	6ca2                	ld	s9,8(sp)
-+    80001596:	6d02                	ld	s10,0(sp)
-+    80001598:	6125                	add	sp,sp,96
-+    8000159a:	8082                	ret
-       return -1;
--    8000161a:	557d                	li	a0,-1
--    8000161c:	6906                	ld	s2,64(sp)
--    8000161e:	7a42                	ld	s4,48(sp)
--    80001620:	6c42                	ld	s8,16(sp)
--    80001622:	6ca2                	ld	s9,8(sp)
--    80001624:	6d02                	ld	s10,0(sp)
--    80001626:	b7cd                	j	80001608 <copyout+0xb6>
--
--0000000080001628 <copyin>:
-+    8000159c:	557d                	li	a0,-1
-+    8000159e:	b7cd                	j	80001580 <copyout+0x98>
-+
-+00000000800015a0 <copyin>:
- int
- copyin(pagetable_t pagetable, char *dst, uint64 srcva, uint64 len)
- {
-   uint64 n, va0, pa0;
- 
-   while(len > 0){
--    80001628:	c6a5                	beqz	a3,80001690 <copyin+0x68>
--{
--    8000162a:	715d                	addi	sp,sp,-80
--    8000162c:	e486                	sd	ra,72(sp)
--    8000162e:	e0a2                	sd	s0,64(sp)
--    80001630:	fc26                	sd	s1,56(sp)
--    80001632:	f84a                	sd	s2,48(sp)
--    80001634:	f44e                	sd	s3,40(sp)
--    80001636:	f052                	sd	s4,32(sp)
--    80001638:	ec56                	sd	s5,24(sp)
--    8000163a:	e85a                	sd	s6,16(sp)
--    8000163c:	e45e                	sd	s7,8(sp)
--    8000163e:	e062                	sd	s8,0(sp)
--    80001640:	0880                	addi	s0,sp,80
--    80001642:	8b2a                	mv	s6,a0
--    80001644:	8a2e                	mv	s4,a1
--    80001646:	8c32                	mv	s8,a2
--    80001648:	89b6                	mv	s3,a3
-+    800015a0:	c6a5                	beqz	a3,80001608 <copyin+0x68>
-+{
-+    800015a2:	715d                	add	sp,sp,-80
-+    800015a4:	e486                	sd	ra,72(sp)
-+    800015a6:	e0a2                	sd	s0,64(sp)
-+    800015a8:	fc26                	sd	s1,56(sp)
-+    800015aa:	f84a                	sd	s2,48(sp)
-+    800015ac:	f44e                	sd	s3,40(sp)
-+    800015ae:	f052                	sd	s4,32(sp)
-+    800015b0:	ec56                	sd	s5,24(sp)
-+    800015b2:	e85a                	sd	s6,16(sp)
-+    800015b4:	e45e                	sd	s7,8(sp)
-+    800015b6:	e062                	sd	s8,0(sp)
-+    800015b8:	0880                	add	s0,sp,80
-+    800015ba:	8b2a                	mv	s6,a0
-+    800015bc:	8a2e                	mv	s4,a1
-+    800015be:	8c32                	mv	s8,a2
-+    800015c0:	89b6                	mv	s3,a3
-     va0 = PGROUNDDOWN(srcva);
--    8000164a:	7bfd                	lui	s7,0xfffff
-+    800015c2:	7bfd                	lui	s7,0xfffff
-     pa0 = walkaddr(pagetable, va0);
-     if(pa0 == 0)
-       return -1;
-     n = PGSIZE - (srcva - va0);
--    8000164c:	6a85                	lui	s5,0x1
--    8000164e:	a00d                	j	80001670 <copyin+0x48>
-+    800015c4:	6a85                	lui	s5,0x1
-+    800015c6:	a00d                	j	800015e8 <copyin+0x48>
-     if(n > len)
-       n = len;
-     memmove(dst, (void *)(pa0 + (srcva - va0)), n);
--    80001650:	018505b3          	add	a1,a0,s8
--    80001654:	0004861b          	sext.w	a2,s1
--    80001658:	412585b3          	sub	a1,a1,s2
--    8000165c:	8552                	mv	a0,s4
--    8000165e:	ec6ff0ef          	jal	80000d24 <memmove>
-+    800015c8:	018505b3          	add	a1,a0,s8
-+    800015cc:	0004861b          	sext.w	a2,s1
-+    800015d0:	412585b3          	sub	a1,a1,s2
-+    800015d4:	8552                	mv	a0,s4
-+    800015d6:	efaff0ef          	jal	80000cd0 <memmove>
- 
-     len -= n;
--    80001662:	409989b3          	sub	s3,s3,s1
-+    800015da:	409989b3          	sub	s3,s3,s1
-     dst += n;
--    80001666:	9a26                	add	s4,s4,s1
-+    800015de:	9a26                	add	s4,s4,s1
-     srcva = va0 + PGSIZE;
--    80001668:	01590c33          	add	s8,s2,s5
-+    800015e0:	01590c33          	add	s8,s2,s5
-   while(len > 0){
--    8000166c:	02098063          	beqz	s3,8000168c <copyin+0x64>
-+    800015e4:	02098063          	beqz	s3,80001604 <copyin+0x64>
-     va0 = PGROUNDDOWN(srcva);
--    80001670:	017c7933          	and	s2,s8,s7
-+    800015e8:	017c7933          	and	s2,s8,s7
-     pa0 = walkaddr(pagetable, va0);
--    80001674:	85ca                	mv	a1,s2
--    80001676:	855a                	mv	a0,s6
--    80001678:	95fff0ef          	jal	80000fd6 <walkaddr>
-+    800015ec:	85ca                	mv	a1,s2
-+    800015ee:	855a                	mv	a0,s6
-+    800015f0:	999ff0ef          	jal	80000f88 <walkaddr>
-     if(pa0 == 0)
--    8000167c:	cd01                	beqz	a0,80001694 <copyin+0x6c>
-+    800015f4:	cd01                	beqz	a0,8000160c <copyin+0x6c>
-     n = PGSIZE - (srcva - va0);
--    8000167e:	418904b3          	sub	s1,s2,s8
--    80001682:	94d6                	add	s1,s1,s5
--    if(n > len)
--    80001684:	fc99f6e3          	bgeu	s3,s1,80001650 <copyin+0x28>
--    80001688:	84ce                	mv	s1,s3
--    8000168a:	b7d9                	j	80001650 <copyin+0x28>
-+    800015f6:	418904b3          	sub	s1,s2,s8
-+    800015fa:	94d6                	add	s1,s1,s5
-+    800015fc:	fc99f6e3          	bgeu	s3,s1,800015c8 <copyin+0x28>
-+    80001600:	84ce                	mv	s1,s3
-+    80001602:	b7d9                	j	800015c8 <copyin+0x28>
-   }
-   return 0;
--    8000168c:	4501                	li	a0,0
--    8000168e:	a021                	j	80001696 <copyin+0x6e>
--    80001690:	4501                	li	a0,0
-+    80001604:	4501                	li	a0,0
-+    80001606:	a021                	j	8000160e <copyin+0x6e>
-+    80001608:	4501                	li	a0,0
- }
--    80001692:	8082                	ret
-+    8000160a:	8082                	ret
-       return -1;
--    80001694:	557d                	li	a0,-1
--}
--    80001696:	60a6                	ld	ra,72(sp)
--    80001698:	6406                	ld	s0,64(sp)
--    8000169a:	74e2                	ld	s1,56(sp)
--    8000169c:	7942                	ld	s2,48(sp)
--    8000169e:	79a2                	ld	s3,40(sp)
--    800016a0:	7a02                	ld	s4,32(sp)
--    800016a2:	6ae2                	ld	s5,24(sp)
--    800016a4:	6b42                	ld	s6,16(sp)
--    800016a6:	6ba2                	ld	s7,8(sp)
--    800016a8:	6c02                	ld	s8,0(sp)
--    800016aa:	6161                	addi	sp,sp,80
--    800016ac:	8082                	ret
--
--00000000800016ae <copyinstr>:
-+    8000160c:	557d                	li	a0,-1
-+}
-+    8000160e:	60a6                	ld	ra,72(sp)
-+    80001610:	6406                	ld	s0,64(sp)
-+    80001612:	74e2                	ld	s1,56(sp)
-+    80001614:	7942                	ld	s2,48(sp)
-+    80001616:	79a2                	ld	s3,40(sp)
-+    80001618:	7a02                	ld	s4,32(sp)
-+    8000161a:	6ae2                	ld	s5,24(sp)
-+    8000161c:	6b42                	ld	s6,16(sp)
-+    8000161e:	6ba2                	ld	s7,8(sp)
-+    80001620:	6c02                	ld	s8,0(sp)
-+    80001622:	6161                	add	sp,sp,80
-+    80001624:	8082                	ret
-+
-+0000000080001626 <copyinstr>:
- copyinstr(pagetable_t pagetable, char *dst, uint64 srcva, uint64 max)
- {
-   uint64 n, va0, pa0;
-   int got_null = 0;
- 
-   while(got_null == 0 && max > 0){
--    800016ae:	c6dd                	beqz	a3,8000175c <copyinstr+0xae>
--{
--    800016b0:	715d                	addi	sp,sp,-80
--    800016b2:	e486                	sd	ra,72(sp)
--    800016b4:	e0a2                	sd	s0,64(sp)
--    800016b6:	fc26                	sd	s1,56(sp)
--    800016b8:	f84a                	sd	s2,48(sp)
--    800016ba:	f44e                	sd	s3,40(sp)
--    800016bc:	f052                	sd	s4,32(sp)
--    800016be:	ec56                	sd	s5,24(sp)
--    800016c0:	e85a                	sd	s6,16(sp)
--    800016c2:	e45e                	sd	s7,8(sp)
--    800016c4:	0880                	addi	s0,sp,80
--    800016c6:	8a2a                	mv	s4,a0
--    800016c8:	8b2e                	mv	s6,a1
--    800016ca:	8bb2                	mv	s7,a2
--    800016cc:	8936                	mv	s2,a3
-+    80001626:	c2cd                	beqz	a3,800016c8 <copyinstr+0xa2>
-+{
-+    80001628:	715d                	add	sp,sp,-80
-+    8000162a:	e486                	sd	ra,72(sp)
-+    8000162c:	e0a2                	sd	s0,64(sp)
-+    8000162e:	fc26                	sd	s1,56(sp)
-+    80001630:	f84a                	sd	s2,48(sp)
-+    80001632:	f44e                	sd	s3,40(sp)
-+    80001634:	f052                	sd	s4,32(sp)
-+    80001636:	ec56                	sd	s5,24(sp)
-+    80001638:	e85a                	sd	s6,16(sp)
-+    8000163a:	e45e                	sd	s7,8(sp)
-+    8000163c:	0880                	add	s0,sp,80
-+    8000163e:	8a2a                	mv	s4,a0
-+    80001640:	8b2e                	mv	s6,a1
-+    80001642:	8bb2                	mv	s7,a2
-+    80001644:	84b6                	mv	s1,a3
-     va0 = PGROUNDDOWN(srcva);
--    800016ce:	7afd                	lui	s5,0xfffff
-+    80001646:	7afd                	lui	s5,0xfffff
-     pa0 = walkaddr(pagetable, va0);
-     if(pa0 == 0)
-       return -1;
-     n = PGSIZE - (srcva - va0);
--    800016d0:	6985                	lui	s3,0x1
--    800016d2:	a825                	j	8000170a <copyinstr+0x5c>
-+    80001648:	6985                	lui	s3,0x1
-+    8000164a:	a02d                	j	80001674 <copyinstr+0x4e>
-       n = max;
- 
-     char *p = (char *) (pa0 + (srcva - va0));
-     while(n > 0){
-       if(*p == '\0'){
-         *dst = '\0';
--    800016d4:	00078023          	sb	zero,0(a5) # 1000 <_entry-0x7ffff000>
--    800016d8:	4785                	li	a5,1
-+    8000164c:	00078023          	sb	zero,0(a5) # 1000 <_entry-0x7ffff000>
-+    80001650:	4785                	li	a5,1
-       dst++;
-     }
- 
-     srcva = va0 + PGSIZE;
-   }
-   if(got_null){
--    800016da:	37fd                	addiw	a5,a5,-1
--    800016dc:	0007851b          	sext.w	a0,a5
-+    80001652:	37fd                	addw	a5,a5,-1
-+    80001654:	0007851b          	sext.w	a0,a5
-     return 0;
-   } else {
-     return -1;
-   }
- }
--    800016e0:	60a6                	ld	ra,72(sp)
--    800016e2:	6406                	ld	s0,64(sp)
--    800016e4:	74e2                	ld	s1,56(sp)
--    800016e6:	7942                	ld	s2,48(sp)
--    800016e8:	79a2                	ld	s3,40(sp)
--    800016ea:	7a02                	ld	s4,32(sp)
--    800016ec:	6ae2                	ld	s5,24(sp)
--    800016ee:	6b42                	ld	s6,16(sp)
--    800016f0:	6ba2                	ld	s7,8(sp)
--    800016f2:	6161                	addi	sp,sp,80
--    800016f4:	8082                	ret
--    800016f6:	fff90713          	addi	a4,s2,-1 # fff <_entry-0x7ffff001>
--    800016fa:	9742                	add	a4,a4,a6
--      --max;
--    800016fc:	40b70933          	sub	s2,a4,a1
-+    80001658:	60a6                	ld	ra,72(sp)
-+    8000165a:	6406                	ld	s0,64(sp)
-+    8000165c:	74e2                	ld	s1,56(sp)
-+    8000165e:	7942                	ld	s2,48(sp)
-+    80001660:	79a2                	ld	s3,40(sp)
-+    80001662:	7a02                	ld	s4,32(sp)
-+    80001664:	6ae2                	ld	s5,24(sp)
-+    80001666:	6b42                	ld	s6,16(sp)
-+    80001668:	6ba2                	ld	s7,8(sp)
-+    8000166a:	6161                	add	sp,sp,80
-+    8000166c:	8082                	ret
-     srcva = va0 + PGSIZE;
--    80001700:	01348bb3          	add	s7,s1,s3
-+    8000166e:	01390bb3          	add	s7,s2,s3
-   while(got_null == 0 && max > 0){
--    80001704:	04e58463          	beq	a1,a4,8000174c <copyinstr+0x9e>
--{
--    80001708:	8b3e                	mv	s6,a5
-+    80001672:	c4b9                	beqz	s1,800016c0 <copyinstr+0x9a>
-     va0 = PGROUNDDOWN(srcva);
--    8000170a:	015bf4b3          	and	s1,s7,s5
-+    80001674:	015bf933          	and	s2,s7,s5
-     pa0 = walkaddr(pagetable, va0);
--    8000170e:	85a6                	mv	a1,s1
--    80001710:	8552                	mv	a0,s4
--    80001712:	8c5ff0ef          	jal	80000fd6 <walkaddr>
-+    80001678:	85ca                	mv	a1,s2
-+    8000167a:	8552                	mv	a0,s4
-+    8000167c:	90dff0ef          	jal	80000f88 <walkaddr>
-     if(pa0 == 0)
--    80001716:	cd0d                	beqz	a0,80001750 <copyinstr+0xa2>
-+    80001680:	c131                	beqz	a0,800016c4 <copyinstr+0x9e>
-     n = PGSIZE - (srcva - va0);
--    80001718:	417486b3          	sub	a3,s1,s7
--    8000171c:	96ce                	add	a3,a3,s3
--    if(n > max)
--    8000171e:	00d97363          	bgeu	s2,a3,80001724 <copyinstr+0x76>
--    80001722:	86ca                	mv	a3,s2
-+    80001682:	417906b3          	sub	a3,s2,s7
-+    80001686:	96ce                	add	a3,a3,s3
-+    80001688:	00d4f363          	bgeu	s1,a3,8000168e <copyinstr+0x68>
-+    8000168c:	86a6                	mv	a3,s1
-     char *p = (char *) (pa0 + (srcva - va0));
--    80001724:	955e                	add	a0,a0,s7
--    80001726:	8d05                	sub	a0,a0,s1
-+    8000168e:	955e                	add	a0,a0,s7
-+    80001690:	41250533          	sub	a0,a0,s2
-     while(n > 0){
--    80001728:	c695                	beqz	a3,80001754 <copyinstr+0xa6>
--    8000172a:	87da                	mv	a5,s6
--    8000172c:	885a                	mv	a6,s6
-+    80001694:	dee9                	beqz	a3,8000166e <copyinstr+0x48>
-+    80001696:	87da                	mv	a5,s6
-+    80001698:	885a                	mv	a6,s6
-       if(*p == '\0'){
--    8000172e:	41650633          	sub	a2,a0,s6
-+    8000169a:	41650633          	sub	a2,a0,s6
-     while(n > 0){
--    80001732:	96da                	add	a3,a3,s6
--    80001734:	85be                	mv	a1,a5
-+    8000169e:	96da                	add	a3,a3,s6
-+    800016a0:	85be                	mv	a1,a5
-       if(*p == '\0'){
--    80001736:	00f60733          	add	a4,a2,a5
--    8000173a:	00074703          	lbu	a4,0(a4)
--    8000173e:	db59                	beqz	a4,800016d4 <copyinstr+0x26>
-+    800016a2:	00f60733          	add	a4,a2,a5
-+    800016a6:	00074703          	lbu	a4,0(a4)
-+    800016aa:	d34d                	beqz	a4,8000164c <copyinstr+0x26>
-         *dst = *p;
--    80001740:	00e78023          	sb	a4,0(a5)
-+    800016ac:	00e78023          	sb	a4,0(a5)
-       dst++;
--    80001744:	0785                	addi	a5,a5,1
-+    800016b0:	0785                	add	a5,a5,1
-     while(n > 0){
--    80001746:	fed797e3          	bne	a5,a3,80001734 <copyinstr+0x86>
--    8000174a:	b775                	j	800016f6 <copyinstr+0x48>
--    8000174c:	4781                	li	a5,0
--    8000174e:	b771                	j	800016da <copyinstr+0x2c>
-+    800016b2:	fed797e3          	bne	a5,a3,800016a0 <copyinstr+0x7a>
-+    800016b6:	14fd                	add	s1,s1,-1 # ffffffffffffefff <end+0xffffffff7ffde3bf>
-+    800016b8:	94c2                	add	s1,s1,a6
-+      --max;
-+    800016ba:	8c8d                	sub	s1,s1,a1
-+      dst++;
-+    800016bc:	8b3e                	mv	s6,a5
-+    800016be:	bf45                	j	8000166e <copyinstr+0x48>
-+    800016c0:	4781                	li	a5,0
-+    800016c2:	bf41                	j	80001652 <copyinstr+0x2c>
-       return -1;
--    80001750:	557d                	li	a0,-1
--    80001752:	b779                	j	800016e0 <copyinstr+0x32>
--    srcva = va0 + PGSIZE;
--    80001754:	6b85                	lui	s7,0x1
--    80001756:	9ba6                	add	s7,s7,s1
--    80001758:	87da                	mv	a5,s6
--    8000175a:	b77d                	j	80001708 <copyinstr+0x5a>
-+    800016c4:	557d                	li	a0,-1
-+    800016c6:	bf49                	j	80001658 <copyinstr+0x32>
-   int got_null = 0;
--    8000175c:	4781                	li	a5,0
-+    800016c8:	4781                	li	a5,0
-   if(got_null){
--    8000175e:	37fd                	addiw	a5,a5,-1
--    80001760:	0007851b          	sext.w	a0,a5
-+    800016ca:	37fd                	addw	a5,a5,-1
-+    800016cc:	0007851b          	sext.w	a0,a5
- }
--    80001764:	8082                	ret
-+    800016d0:	8082                	ret
- 
--0000000080001766 <proc_mapstacks>:
-+00000000800016d2 <proc_mapstacks>:
- /* Allocate a page for each process's kernel stack. */
- /* Map it high in memory, followed by an invalid */
- /* guard page. */
- void
- proc_mapstacks(pagetable_t kpgtbl)
- {
--    80001766:	7139                	addi	sp,sp,-64
--    80001768:	fc06                	sd	ra,56(sp)
--    8000176a:	f822                	sd	s0,48(sp)
--    8000176c:	f426                	sd	s1,40(sp)
--    8000176e:	f04a                	sd	s2,32(sp)
--    80001770:	ec4e                	sd	s3,24(sp)
--    80001772:	e852                	sd	s4,16(sp)
--    80001774:	e456                	sd	s5,8(sp)
--    80001776:	e05a                	sd	s6,0(sp)
--    80001778:	0080                	addi	s0,sp,64
--    8000177a:	8a2a                	mv	s4,a0
-+    800016d2:	7139                	add	sp,sp,-64
-+    800016d4:	fc06                	sd	ra,56(sp)
-+    800016d6:	f822                	sd	s0,48(sp)
-+    800016d8:	f426                	sd	s1,40(sp)
-+    800016da:	f04a                	sd	s2,32(sp)
-+    800016dc:	ec4e                	sd	s3,24(sp)
-+    800016de:	e852                	sd	s4,16(sp)
-+    800016e0:	e456                	sd	s5,8(sp)
-+    800016e2:	e05a                	sd	s6,0(sp)
-+    800016e4:	0080                	add	s0,sp,64
-+    800016e6:	89aa                	mv	s3,a0
-   struct proc *p;
-   
-   for(p = proc; p < &proc[NPROC]; p++) {
--    8000177c:	00011497          	auipc	s1,0x11
--    80001780:	fd448493          	addi	s1,s1,-44 # 80012750 <proc>
-+    800016e8:	0000e497          	auipc	s1,0xe
-+    800016ec:	77848493          	add	s1,s1,1912 # 8000fe60 <proc>
-     char *pa = kalloc();
-     if(pa == 0)
-       panic("kalloc");
-     uint64 va = KSTACK((int) (p - proc));
--    80001784:	8b26                	mv	s6,s1
--    80001786:	04fa5937          	lui	s2,0x4fa5
--    8000178a:	fa590913          	addi	s2,s2,-91 # 4fa4fa5 <_entry-0x7b05b05b>
--    8000178e:	0932                	slli	s2,s2,0xc
--    80001790:	fa590913          	addi	s2,s2,-91
--    80001794:	0932                	slli	s2,s2,0xc
--    80001796:	fa590913          	addi	s2,s2,-91
--    8000179a:	0932                	slli	s2,s2,0xc
--    8000179c:	fa590913          	addi	s2,s2,-91
--    800017a0:	040009b7          	lui	s3,0x4000
--    800017a4:	19fd                	addi	s3,s3,-1 # 3ffffff <_entry-0x7c000001>
--    800017a6:	09b2                	slli	s3,s3,0xc
-+    800016f0:	8b26                	mv	s6,s1
-+    800016f2:	00006a97          	auipc	s5,0x6
-+    800016f6:	90ea8a93          	add	s5,s5,-1778 # 80007000 <etext>
-+    800016fa:	04000937          	lui	s2,0x4000
-+    800016fe:	197d                	add	s2,s2,-1 # 3ffffff <_entry-0x7c000001>
-+    80001700:	0932                	sll	s2,s2,0xc
-   for(p = proc; p < &proc[NPROC]; p++) {
--    800017a8:	00017a97          	auipc	s5,0x17
--    800017ac:	9a8a8a93          	addi	s5,s5,-1624 # 80018150 <tickslock>
-+    80001702:	00014a17          	auipc	s4,0x14
-+    80001706:	15ea0a13          	add	s4,s4,350 # 80015860 <tickslock>
-     char *pa = kalloc();
--    800017b0:	b74ff0ef          	jal	80000b24 <kalloc>
--    800017b4:	862a                	mv	a2,a0
-+    8000170a:	bc6ff0ef          	jal	80000ad0 <kalloc>
-+    8000170e:	862a                	mv	a2,a0
-     if(pa == 0)
--    800017b6:	cd15                	beqz	a0,800017f2 <proc_mapstacks+0x8c>
-+    80001710:	c121                	beqz	a0,80001750 <proc_mapstacks+0x7e>
-     uint64 va = KSTACK((int) (p - proc));
--    800017b8:	416485b3          	sub	a1,s1,s6
--    800017bc:	858d                	srai	a1,a1,0x3
--    800017be:	032585b3          	mul	a1,a1,s2
--    800017c2:	2585                	addiw	a1,a1,1
--    800017c4:	00d5959b          	slliw	a1,a1,0xd
-+    80001712:	416485b3          	sub	a1,s1,s6
-+    80001716:	858d                	sra	a1,a1,0x3
-+    80001718:	000ab783          	ld	a5,0(s5)
-+    8000171c:	02f585b3          	mul	a1,a1,a5
-+    80001720:	2585                	addw	a1,a1,1
-+    80001722:	00d5959b          	sllw	a1,a1,0xd
-     kvmmap(kpgtbl, va, (uint64)pa, PGSIZE, PTE_R | PTE_W);
--    800017c8:	4719                	li	a4,6
--    800017ca:	6685                	lui	a3,0x1
--    800017cc:	40b985b3          	sub	a1,s3,a1
--    800017d0:	8552                	mv	a0,s4
--    800017d2:	8f3ff0ef          	jal	800010c4 <kvmmap>
-+    80001726:	4719                	li	a4,6
-+    80001728:	6685                	lui	a3,0x1
-+    8000172a:	40b905b3          	sub	a1,s2,a1
-+    8000172e:	854e                	mv	a0,s3
-+    80001730:	947ff0ef          	jal	80001076 <kvmmap>
-   for(p = proc; p < &proc[NPROC]; p++) {
--    800017d6:	16848493          	addi	s1,s1,360
--    800017da:	fd549be3          	bne	s1,s5,800017b0 <proc_mapstacks+0x4a>
-+    80001734:	16848493          	add	s1,s1,360
-+    80001738:	fd4499e3          	bne	s1,s4,8000170a <proc_mapstacks+0x38>
-   }
- }
--    800017de:	70e2                	ld	ra,56(sp)
--    800017e0:	7442                	ld	s0,48(sp)
--    800017e2:	74a2                	ld	s1,40(sp)
--    800017e4:	7902                	ld	s2,32(sp)
--    800017e6:	69e2                	ld	s3,24(sp)
--    800017e8:	6a42                	ld	s4,16(sp)
--    800017ea:	6aa2                	ld	s5,8(sp)
--    800017ec:	6b02                	ld	s6,0(sp)
--    800017ee:	6121                	addi	sp,sp,64
--    800017f0:	8082                	ret
-+    8000173c:	70e2                	ld	ra,56(sp)
-+    8000173e:	7442                	ld	s0,48(sp)
-+    80001740:	74a2                	ld	s1,40(sp)
-+    80001742:	7902                	ld	s2,32(sp)
-+    80001744:	69e2                	ld	s3,24(sp)
-+    80001746:	6a42                	ld	s4,16(sp)
-+    80001748:	6aa2                	ld	s5,8(sp)
-+    8000174a:	6b02                	ld	s6,0(sp)
-+    8000174c:	6121                	add	sp,sp,64
-+    8000174e:	8082                	ret
-       panic("kalloc");
--    800017f2:	00006517          	auipc	a0,0x6
--    800017f6:	a0650513          	addi	a0,a0,-1530 # 800071f8 <etext+0x1f8>
--    800017fa:	f9bfe0ef          	jal	80000794 <panic>
-+    80001750:	00006517          	auipc	a0,0x6
-+    80001754:	ac050513          	add	a0,a0,-1344 # 80007210 <digits+0x1d8>
-+    80001758:	806ff0ef          	jal	8000075e <panic>
- 
--00000000800017fe <procinit>:
-+000000008000175c <procinit>:
- 
- /* initialize the proc table. */
- void
- procinit(void)
- {
--    800017fe:	7139                	addi	sp,sp,-64
--    80001800:	fc06                	sd	ra,56(sp)
--    80001802:	f822                	sd	s0,48(sp)
--    80001804:	f426                	sd	s1,40(sp)
--    80001806:	f04a                	sd	s2,32(sp)
--    80001808:	ec4e                	sd	s3,24(sp)
--    8000180a:	e852                	sd	s4,16(sp)
--    8000180c:	e456                	sd	s5,8(sp)
--    8000180e:	e05a                	sd	s6,0(sp)
--    80001810:	0080                	addi	s0,sp,64
-+    8000175c:	7139                	add	sp,sp,-64
-+    8000175e:	fc06                	sd	ra,56(sp)
-+    80001760:	f822                	sd	s0,48(sp)
-+    80001762:	f426                	sd	s1,40(sp)
-+    80001764:	f04a                	sd	s2,32(sp)
-+    80001766:	ec4e                	sd	s3,24(sp)
-+    80001768:	e852                	sd	s4,16(sp)
-+    8000176a:	e456                	sd	s5,8(sp)
-+    8000176c:	e05a                	sd	s6,0(sp)
-+    8000176e:	0080                	add	s0,sp,64
-   struct proc *p;
-   
-   initlock(&pid_lock, "nextpid");
--    80001812:	00006597          	auipc	a1,0x6
--    80001816:	9ee58593          	addi	a1,a1,-1554 # 80007200 <etext+0x200>
--    8000181a:	00011517          	auipc	a0,0x11
--    8000181e:	b0650513          	addi	a0,a0,-1274 # 80012320 <pid_lock>
--    80001822:	b52ff0ef          	jal	80000b74 <initlock>
-+    80001770:	00006597          	auipc	a1,0x6
-+    80001774:	aa858593          	add	a1,a1,-1368 # 80007218 <digits+0x1e0>
-+    80001778:	0000e517          	auipc	a0,0xe
-+    8000177c:	2b850513          	add	a0,a0,696 # 8000fa30 <pid_lock>
-+    80001780:	ba0ff0ef          	jal	80000b20 <initlock>
-   initlock(&wait_lock, "wait_lock");
--    80001826:	00006597          	auipc	a1,0x6
--    8000182a:	9e258593          	addi	a1,a1,-1566 # 80007208 <etext+0x208>
--    8000182e:	00011517          	auipc	a0,0x11
--    80001832:	b0a50513          	addi	a0,a0,-1270 # 80012338 <wait_lock>
--    80001836:	b3eff0ef          	jal	80000b74 <initlock>
-+    80001784:	00006597          	auipc	a1,0x6
-+    80001788:	a9c58593          	add	a1,a1,-1380 # 80007220 <digits+0x1e8>
-+    8000178c:	0000e517          	auipc	a0,0xe
-+    80001790:	2bc50513          	add	a0,a0,700 # 8000fa48 <wait_lock>
-+    80001794:	b8cff0ef          	jal	80000b20 <initlock>
-   for(p = proc; p < &proc[NPROC]; p++) {
--    8000183a:	00011497          	auipc	s1,0x11
--    8000183e:	f1648493          	addi	s1,s1,-234 # 80012750 <proc>
-+    80001798:	0000e497          	auipc	s1,0xe
-+    8000179c:	6c848493          	add	s1,s1,1736 # 8000fe60 <proc>
-       initlock(&p->lock, "proc");
--    80001842:	00006b17          	auipc	s6,0x6
--    80001846:	9d6b0b13          	addi	s6,s6,-1578 # 80007218 <etext+0x218>
-+    800017a0:	00006b17          	auipc	s6,0x6
-+    800017a4:	a90b0b13          	add	s6,s6,-1392 # 80007230 <digits+0x1f8>
-       p->state = UNUSED;
-       p->kstack = KSTACK((int) (p - proc));
--    8000184a:	8aa6                	mv	s5,s1
--    8000184c:	04fa5937          	lui	s2,0x4fa5
--    80001850:	fa590913          	addi	s2,s2,-91 # 4fa4fa5 <_entry-0x7b05b05b>
--    80001854:	0932                	slli	s2,s2,0xc
--    80001856:	fa590913          	addi	s2,s2,-91
--    8000185a:	0932                	slli	s2,s2,0xc
--    8000185c:	fa590913          	addi	s2,s2,-91
--    80001860:	0932                	slli	s2,s2,0xc
--    80001862:	fa590913          	addi	s2,s2,-91
--    80001866:	040009b7          	lui	s3,0x4000
--    8000186a:	19fd                	addi	s3,s3,-1 # 3ffffff <_entry-0x7c000001>
--    8000186c:	09b2                	slli	s3,s3,0xc
-+    800017a8:	8aa6                	mv	s5,s1
-+    800017aa:	00006a17          	auipc	s4,0x6
-+    800017ae:	856a0a13          	add	s4,s4,-1962 # 80007000 <etext>
-+    800017b2:	04000937          	lui	s2,0x4000
-+    800017b6:	197d                	add	s2,s2,-1 # 3ffffff <_entry-0x7c000001>
-+    800017b8:	0932                	sll	s2,s2,0xc
-   for(p = proc; p < &proc[NPROC]; p++) {
--    8000186e:	00017a17          	auipc	s4,0x17
--    80001872:	8e2a0a13          	addi	s4,s4,-1822 # 80018150 <tickslock>
-+    800017ba:	00014997          	auipc	s3,0x14
-+    800017be:	0a698993          	add	s3,s3,166 # 80015860 <tickslock>
-       initlock(&p->lock, "proc");
--    80001876:	85da                	mv	a1,s6
--    80001878:	8526                	mv	a0,s1
--    8000187a:	afaff0ef          	jal	80000b74 <initlock>
-+    800017c2:	85da                	mv	a1,s6
-+    800017c4:	8526                	mv	a0,s1
-+    800017c6:	b5aff0ef          	jal	80000b20 <initlock>
-       p->state = UNUSED;
--    8000187e:	0004ac23          	sw	zero,24(s1)
-+    800017ca:	0004ac23          	sw	zero,24(s1)
-       p->kstack = KSTACK((int) (p - proc));
--    80001882:	415487b3          	sub	a5,s1,s5
--    80001886:	878d                	srai	a5,a5,0x3
--    80001888:	032787b3          	mul	a5,a5,s2
--    8000188c:	2785                	addiw	a5,a5,1
--    8000188e:	00d7979b          	slliw	a5,a5,0xd
--    80001892:	40f987b3          	sub	a5,s3,a5
--    80001896:	e0bc                	sd	a5,64(s1)
-+    800017ce:	415487b3          	sub	a5,s1,s5
-+    800017d2:	878d                	sra	a5,a5,0x3
-+    800017d4:	000a3703          	ld	a4,0(s4)
-+    800017d8:	02e787b3          	mul	a5,a5,a4
-+    800017dc:	2785                	addw	a5,a5,1
-+    800017de:	00d7979b          	sllw	a5,a5,0xd
-+    800017e2:	40f907b3          	sub	a5,s2,a5
-+    800017e6:	e0bc                	sd	a5,64(s1)
-   for(p = proc; p < &proc[NPROC]; p++) {
--    80001898:	16848493          	addi	s1,s1,360
--    8000189c:	fd449de3          	bne	s1,s4,80001876 <procinit+0x78>
-+    800017e8:	16848493          	add	s1,s1,360
-+    800017ec:	fd349be3          	bne	s1,s3,800017c2 <procinit+0x66>
-   }
- }
--    800018a0:	70e2                	ld	ra,56(sp)
--    800018a2:	7442                	ld	s0,48(sp)
--    800018a4:	74a2                	ld	s1,40(sp)
--    800018a6:	7902                	ld	s2,32(sp)
--    800018a8:	69e2                	ld	s3,24(sp)
--    800018aa:	6a42                	ld	s4,16(sp)
--    800018ac:	6aa2                	ld	s5,8(sp)
--    800018ae:	6b02                	ld	s6,0(sp)
--    800018b0:	6121                	addi	sp,sp,64
--    800018b2:	8082                	ret
--
--00000000800018b4 <cpuid>:
-+    800017f0:	70e2                	ld	ra,56(sp)
-+    800017f2:	7442                	ld	s0,48(sp)
-+    800017f4:	74a2                	ld	s1,40(sp)
-+    800017f6:	7902                	ld	s2,32(sp)
-+    800017f8:	69e2                	ld	s3,24(sp)
-+    800017fa:	6a42                	ld	s4,16(sp)
-+    800017fc:	6aa2                	ld	s5,8(sp)
-+    800017fe:	6b02                	ld	s6,0(sp)
-+    80001800:	6121                	add	sp,sp,64
-+    80001802:	8082                	ret
-+
-+0000000080001804 <cpuid>:
- /* Must be called with interrupts disabled, */
- /* to prevent race with process being moved */
- /* to a different CPU. */
- int
- cpuid()
- {
--    800018b4:	1141                	addi	sp,sp,-16
--    800018b6:	e422                	sd	s0,8(sp)
--    800018b8:	0800                	addi	s0,sp,16
-+    80001804:	1141                	add	sp,sp,-16
-+    80001806:	e422                	sd	s0,8(sp)
-+    80001808:	0800                	add	s0,sp,16
-   asm volatile("mv %0, tp" : "=r" (x) );
--    800018ba:	8512                	mv	a0,tp
-+    8000180a:	8512                	mv	a0,tp
-   int id = r_tp();
-   return id;
- }
--    800018bc:	2501                	sext.w	a0,a0
--    800018be:	6422                	ld	s0,8(sp)
--    800018c0:	0141                	addi	sp,sp,16
--    800018c2:	8082                	ret
-+    8000180c:	2501                	sext.w	a0,a0
-+    8000180e:	6422                	ld	s0,8(sp)
-+    80001810:	0141                	add	sp,sp,16
-+    80001812:	8082                	ret
- 
--00000000800018c4 <mycpu>:
-+0000000080001814 <mycpu>:
- 
- /* Return this CPU's cpu struct. */
- /* Interrupts must be disabled. */
- struct cpu*
- mycpu(void)
- {
--    800018c4:	1141                	addi	sp,sp,-16
--    800018c6:	e422                	sd	s0,8(sp)
--    800018c8:	0800                	addi	s0,sp,16
--    800018ca:	8792                	mv	a5,tp
-+    80001814:	1141                	add	sp,sp,-16
-+    80001816:	e422                	sd	s0,8(sp)
-+    80001818:	0800                	add	s0,sp,16
-+    8000181a:	8792                	mv	a5,tp
-   int id = cpuid();
-   struct cpu *c = &cpus[id];
--    800018cc:	2781                	sext.w	a5,a5
--    800018ce:	079e                	slli	a5,a5,0x7
-+    8000181c:	2781                	sext.w	a5,a5
-+    8000181e:	079e                	sll	a5,a5,0x7
-   return c;
- }
--    800018d0:	00011517          	auipc	a0,0x11
--    800018d4:	a8050513          	addi	a0,a0,-1408 # 80012350 <cpus>
--    800018d8:	953e                	add	a0,a0,a5
--    800018da:	6422                	ld	s0,8(sp)
--    800018dc:	0141                	addi	sp,sp,16
--    800018de:	8082                	ret
-+    80001820:	0000e517          	auipc	a0,0xe
-+    80001824:	24050513          	add	a0,a0,576 # 8000fa60 <cpus>
-+    80001828:	953e                	add	a0,a0,a5
-+    8000182a:	6422                	ld	s0,8(sp)
-+    8000182c:	0141                	add	sp,sp,16
-+    8000182e:	8082                	ret
- 
--00000000800018e0 <myproc>:
-+0000000080001830 <myproc>:
- 
- /* Return the current struct proc *, or zero if none. */
- struct proc*
- myproc(void)
- {
--    800018e0:	1101                	addi	sp,sp,-32
--    800018e2:	ec06                	sd	ra,24(sp)
--    800018e4:	e822                	sd	s0,16(sp)
--    800018e6:	e426                	sd	s1,8(sp)
--    800018e8:	1000                	addi	s0,sp,32
-+    80001830:	1101                	add	sp,sp,-32
-+    80001832:	ec06                	sd	ra,24(sp)
-+    80001834:	e822                	sd	s0,16(sp)
-+    80001836:	e426                	sd	s1,8(sp)
-+    80001838:	1000                	add	s0,sp,32
-   push_off();
--    800018ea:	acaff0ef          	jal	80000bb4 <push_off>
--    800018ee:	8792                	mv	a5,tp
-+    8000183a:	b26ff0ef          	jal	80000b60 <push_off>
-+    8000183e:	8792                	mv	a5,tp
-   struct cpu *c = mycpu();
-   struct proc *p = c->proc;
--    800018f0:	2781                	sext.w	a5,a5
--    800018f2:	079e                	slli	a5,a5,0x7
--    800018f4:	00011717          	auipc	a4,0x11
--    800018f8:	a2c70713          	addi	a4,a4,-1492 # 80012320 <pid_lock>
--    800018fc:	97ba                	add	a5,a5,a4
--    800018fe:	7b84                	ld	s1,48(a5)
-+    80001840:	2781                	sext.w	a5,a5
-+    80001842:	079e                	sll	a5,a5,0x7
-+    80001844:	0000e717          	auipc	a4,0xe
-+    80001848:	1ec70713          	add	a4,a4,492 # 8000fa30 <pid_lock>
-+    8000184c:	97ba                	add	a5,a5,a4
-+    8000184e:	7b84                	ld	s1,48(a5)
-   pop_off();
--    80001900:	b38ff0ef          	jal	80000c38 <pop_off>
-+    80001850:	b94ff0ef          	jal	80000be4 <pop_off>
-   return p;
- }
--    80001904:	8526                	mv	a0,s1
--    80001906:	60e2                	ld	ra,24(sp)
--    80001908:	6442                	ld	s0,16(sp)
--    8000190a:	64a2                	ld	s1,8(sp)
--    8000190c:	6105                	addi	sp,sp,32
--    8000190e:	8082                	ret
-+    80001854:	8526                	mv	a0,s1
-+    80001856:	60e2                	ld	ra,24(sp)
-+    80001858:	6442                	ld	s0,16(sp)
-+    8000185a:	64a2                	ld	s1,8(sp)
-+    8000185c:	6105                	add	sp,sp,32
-+    8000185e:	8082                	ret
- 
--0000000080001910 <forkret>:
-+0000000080001860 <forkret>:
- 
- /* A fork child's very first scheduling by scheduler() */
- /* will swtch to forkret. */
- void
- forkret(void)
- {
--    80001910:	1141                	addi	sp,sp,-16
--    80001912:	e406                	sd	ra,8(sp)
--    80001914:	e022                	sd	s0,0(sp)
--    80001916:	0800                	addi	s0,sp,16
-+    80001860:	1141                	add	sp,sp,-16
-+    80001862:	e406                	sd	ra,8(sp)
-+    80001864:	e022                	sd	s0,0(sp)
-+    80001866:	0800                	add	s0,sp,16
-   static int first = 1;
- 
-   /* Still holding p->lock from scheduler. */
-   release(&myproc()->lock);
--    80001918:	fc9ff0ef          	jal	800018e0 <myproc>
--    8000191c:	b70ff0ef          	jal	80000c8c <release>
-+    80001868:	fc9ff0ef          	jal	80001830 <myproc>
-+    8000186c:	bccff0ef          	jal	80000c38 <release>
- 
-   if (first) {
--    80001920:	00009797          	auipc	a5,0x9
--    80001924:	8507a783          	lw	a5,-1968(a5) # 8000a170 <first.1>
--    80001928:	e799                	bnez	a5,80001936 <forkret+0x26>
-+    80001870:	00006797          	auipc	a5,0x6
-+    80001874:	0107a783          	lw	a5,16(a5) # 80007880 <first.1>
-+    80001878:	e799                	bnez	a5,80001886 <forkret+0x26>
-     first = 0;
-     /* ensure other cores see first=0. */
-     __sync_synchronize();
-   }
- 
-   usertrapret();
--    8000192a:	2bf000ef          	jal	800023e8 <usertrapret>
-+    8000187a:	2bd000ef          	jal	80002336 <usertrapret>
- }
--    8000192e:	60a2                	ld	ra,8(sp)
--    80001930:	6402                	ld	s0,0(sp)
--    80001932:	0141                	addi	sp,sp,16
--    80001934:	8082                	ret
-+    8000187e:	60a2                	ld	ra,8(sp)
-+    80001880:	6402                	ld	s0,0(sp)
-+    80001882:	0141                	add	sp,sp,16
-+    80001884:	8082                	ret
-     fsinit(ROOTDEV);
--    80001936:	4505                	li	a0,1
--    80001938:	654010ef          	jal	80002f8c <fsinit>
-+    80001886:	4505                	li	a0,1
-+    80001888:	632010ef          	jal	80002eba <fsinit>
-     first = 0;
--    8000193c:	00009797          	auipc	a5,0x9
--    80001940:	8207aa23          	sw	zero,-1996(a5) # 8000a170 <first.1>
-+    8000188c:	00006797          	auipc	a5,0x6
-+    80001890:	fe07aa23          	sw	zero,-12(a5) # 80007880 <first.1>
-     __sync_synchronize();
--    80001944:	0ff0000f          	fence
--    80001948:	b7cd                	j	8000192a <forkret+0x1a>
-+    80001894:	0ff0000f          	fence
-+    80001898:	b7cd                	j	8000187a <forkret+0x1a>
- 
--000000008000194a <allocpid>:
-+000000008000189a <allocpid>:
- {
--    8000194a:	1101                	addi	sp,sp,-32
--    8000194c:	ec06                	sd	ra,24(sp)
--    8000194e:	e822                	sd	s0,16(sp)
--    80001950:	e426                	sd	s1,8(sp)
--    80001952:	e04a                	sd	s2,0(sp)
--    80001954:	1000                	addi	s0,sp,32
-+    8000189a:	1101                	add	sp,sp,-32
-+    8000189c:	ec06                	sd	ra,24(sp)
-+    8000189e:	e822                	sd	s0,16(sp)
-+    800018a0:	e426                	sd	s1,8(sp)
-+    800018a2:	e04a                	sd	s2,0(sp)
-+    800018a4:	1000                	add	s0,sp,32
-   acquire(&pid_lock);
--    80001956:	00011917          	auipc	s2,0x11
--    8000195a:	9ca90913          	addi	s2,s2,-1590 # 80012320 <pid_lock>
--    8000195e:	854a                	mv	a0,s2
--    80001960:	a94ff0ef          	jal	80000bf4 <acquire>
-+    800018a6:	0000e917          	auipc	s2,0xe
-+    800018aa:	18a90913          	add	s2,s2,394 # 8000fa30 <pid_lock>
-+    800018ae:	854a                	mv	a0,s2
-+    800018b0:	af0ff0ef          	jal	80000ba0 <acquire>
-   pid = nextpid;
--    80001964:	00009797          	auipc	a5,0x9
--    80001968:	81078793          	addi	a5,a5,-2032 # 8000a174 <nextpid>
--    8000196c:	4384                	lw	s1,0(a5)
-+    800018b4:	00006797          	auipc	a5,0x6
-+    800018b8:	fd078793          	add	a5,a5,-48 # 80007884 <nextpid>
-+    800018bc:	4384                	lw	s1,0(a5)
-   nextpid = nextpid + 1;
--    8000196e:	0014871b          	addiw	a4,s1,1
--    80001972:	c398                	sw	a4,0(a5)
-+    800018be:	0014871b          	addw	a4,s1,1
-+    800018c2:	c398                	sw	a4,0(a5)
-   release(&pid_lock);
--    80001974:	854a                	mv	a0,s2
--    80001976:	b16ff0ef          	jal	80000c8c <release>
--}
--    8000197a:	8526                	mv	a0,s1
--    8000197c:	60e2                	ld	ra,24(sp)
--    8000197e:	6442                	ld	s0,16(sp)
--    80001980:	64a2                	ld	s1,8(sp)
--    80001982:	6902                	ld	s2,0(sp)
--    80001984:	6105                	addi	sp,sp,32
--    80001986:	8082                	ret
--
--0000000080001988 <proc_pagetable>:
--{
--    80001988:	1101                	addi	sp,sp,-32
--    8000198a:	ec06                	sd	ra,24(sp)
--    8000198c:	e822                	sd	s0,16(sp)
--    8000198e:	e426                	sd	s1,8(sp)
--    80001990:	e04a                	sd	s2,0(sp)
--    80001992:	1000                	addi	s0,sp,32
--    80001994:	892a                	mv	s2,a0
-+    800018c4:	854a                	mv	a0,s2
-+    800018c6:	b72ff0ef          	jal	80000c38 <release>
-+}
-+    800018ca:	8526                	mv	a0,s1
-+    800018cc:	60e2                	ld	ra,24(sp)
-+    800018ce:	6442                	ld	s0,16(sp)
-+    800018d0:	64a2                	ld	s1,8(sp)
-+    800018d2:	6902                	ld	s2,0(sp)
-+    800018d4:	6105                	add	sp,sp,32
-+    800018d6:	8082                	ret
-+
-+00000000800018d8 <proc_pagetable>:
-+{
-+    800018d8:	1101                	add	sp,sp,-32
-+    800018da:	ec06                	sd	ra,24(sp)
-+    800018dc:	e822                	sd	s0,16(sp)
-+    800018de:	e426                	sd	s1,8(sp)
-+    800018e0:	e04a                	sd	s2,0(sp)
-+    800018e2:	1000                	add	s0,sp,32
-+    800018e4:	892a                	mv	s2,a0
-   pagetable = uvmcreate();
--    80001996:	8e1ff0ef          	jal	80001276 <uvmcreate>
--    8000199a:	84aa                	mv	s1,a0
-+    800018e6:	933ff0ef          	jal	80001218 <uvmcreate>
-+    800018ea:	84aa                	mv	s1,a0
-   if(pagetable == 0)
--    8000199c:	cd05                	beqz	a0,800019d4 <proc_pagetable+0x4c>
-+    800018ec:	cd05                	beqz	a0,80001924 <proc_pagetable+0x4c>
-   if(mappages(pagetable, TRAMPOLINE, PGSIZE,
--    8000199e:	4729                	li	a4,10
--    800019a0:	00004697          	auipc	a3,0x4
--    800019a4:	66068693          	addi	a3,a3,1632 # 80006000 <_trampoline>
--    800019a8:	6605                	lui	a2,0x1
--    800019aa:	040005b7          	lui	a1,0x4000
--    800019ae:	15fd                	addi	a1,a1,-1 # 3ffffff <_entry-0x7c000001>
--    800019b0:	05b2                	slli	a1,a1,0xc
--    800019b2:	e62ff0ef          	jal	80001014 <mappages>
--    800019b6:	02054663          	bltz	a0,800019e2 <proc_pagetable+0x5a>
-+    800018ee:	4729                	li	a4,10
-+    800018f0:	00004697          	auipc	a3,0x4
-+    800018f4:	71068693          	add	a3,a3,1808 # 80006000 <_trampoline>
-+    800018f8:	6605                	lui	a2,0x1
-+    800018fa:	040005b7          	lui	a1,0x4000
-+    800018fe:	15fd                	add	a1,a1,-1 # 3ffffff <_entry-0x7c000001>
-+    80001900:	05b2                	sll	a1,a1,0xc
-+    80001902:	ec4ff0ef          	jal	80000fc6 <mappages>
-+    80001906:	02054663          	bltz	a0,80001932 <proc_pagetable+0x5a>
-   if(mappages(pagetable, TRAPFRAME, PGSIZE,
--    800019ba:	4719                	li	a4,6
--    800019bc:	05893683          	ld	a3,88(s2)
--    800019c0:	6605                	lui	a2,0x1
--    800019c2:	020005b7          	lui	a1,0x2000
--    800019c6:	15fd                	addi	a1,a1,-1 # 1ffffff <_entry-0x7e000001>
--    800019c8:	05b6                	slli	a1,a1,0xd
--    800019ca:	8526                	mv	a0,s1
--    800019cc:	e48ff0ef          	jal	80001014 <mappages>
--    800019d0:	00054f63          	bltz	a0,800019ee <proc_pagetable+0x66>
--}
--    800019d4:	8526                	mv	a0,s1
--    800019d6:	60e2                	ld	ra,24(sp)
--    800019d8:	6442                	ld	s0,16(sp)
--    800019da:	64a2                	ld	s1,8(sp)
--    800019dc:	6902                	ld	s2,0(sp)
--    800019de:	6105                	addi	sp,sp,32
--    800019e0:	8082                	ret
-+    8000190a:	4719                	li	a4,6
-+    8000190c:	05893683          	ld	a3,88(s2)
-+    80001910:	6605                	lui	a2,0x1
-+    80001912:	020005b7          	lui	a1,0x2000
-+    80001916:	15fd                	add	a1,a1,-1 # 1ffffff <_entry-0x7e000001>
-+    80001918:	05b6                	sll	a1,a1,0xd
-+    8000191a:	8526                	mv	a0,s1
-+    8000191c:	eaaff0ef          	jal	80000fc6 <mappages>
-+    80001920:	00054f63          	bltz	a0,8000193e <proc_pagetable+0x66>
-+}
-+    80001924:	8526                	mv	a0,s1
-+    80001926:	60e2                	ld	ra,24(sp)
-+    80001928:	6442                	ld	s0,16(sp)
-+    8000192a:	64a2                	ld	s1,8(sp)
-+    8000192c:	6902                	ld	s2,0(sp)
-+    8000192e:	6105                	add	sp,sp,32
-+    80001930:	8082                	ret
-     uvmfree(pagetable, 0);
--    800019e2:	4581                	li	a1,0
--    800019e4:	8526                	mv	a0,s1
--    800019e6:	a5fff0ef          	jal	80001444 <uvmfree>
-+    80001932:	4581                	li	a1,0
-+    80001934:	8526                	mv	a0,s1
-+    80001936:	aa5ff0ef          	jal	800013da <uvmfree>
-     return 0;
--    800019ea:	4481                	li	s1,0
--    800019ec:	b7e5                	j	800019d4 <proc_pagetable+0x4c>
-+    8000193a:	4481                	li	s1,0
-+    8000193c:	b7e5                	j	80001924 <proc_pagetable+0x4c>
-     uvmunmap(pagetable, TRAMPOLINE, 1, 0);
--    800019ee:	4681                	li	a3,0
--    800019f0:	4605                	li	a2,1
--    800019f2:	040005b7          	lui	a1,0x4000
--    800019f6:	15fd                	addi	a1,a1,-1 # 3ffffff <_entry-0x7c000001>
--    800019f8:	05b2                	slli	a1,a1,0xc
--    800019fa:	8526                	mv	a0,s1
--    800019fc:	fbeff0ef          	jal	800011ba <uvmunmap>
-+    8000193e:	4681                	li	a3,0
-+    80001940:	4605                	li	a2,1
-+    80001942:	040005b7          	lui	a1,0x4000
-+    80001946:	15fd                	add	a1,a1,-1 # 3ffffff <_entry-0x7c000001>
-+    80001948:	05b2                	sll	a1,a1,0xc
-+    8000194a:	8526                	mv	a0,s1
-+    8000194c:	821ff0ef          	jal	8000116c <uvmunmap>
-     uvmfree(pagetable, 0);
--    80001a00:	4581                	li	a1,0
--    80001a02:	8526                	mv	a0,s1
--    80001a04:	a41ff0ef          	jal	80001444 <uvmfree>
-+    80001950:	4581                	li	a1,0
-+    80001952:	8526                	mv	a0,s1
-+    80001954:	a87ff0ef          	jal	800013da <uvmfree>
-     return 0;
--    80001a08:	4481                	li	s1,0
--    80001a0a:	b7e9                	j	800019d4 <proc_pagetable+0x4c>
--
--0000000080001a0c <proc_freepagetable>:
--{
--    80001a0c:	1101                	addi	sp,sp,-32
--    80001a0e:	ec06                	sd	ra,24(sp)
--    80001a10:	e822                	sd	s0,16(sp)
--    80001a12:	e426                	sd	s1,8(sp)
--    80001a14:	e04a                	sd	s2,0(sp)
--    80001a16:	1000                	addi	s0,sp,32
--    80001a18:	84aa                	mv	s1,a0
--    80001a1a:	892e                	mv	s2,a1
-+    80001958:	4481                	li	s1,0
-+    8000195a:	b7e9                	j	80001924 <proc_pagetable+0x4c>
-+
-+000000008000195c <proc_freepagetable>:
-+{
-+    8000195c:	1101                	add	sp,sp,-32
-+    8000195e:	ec06                	sd	ra,24(sp)
-+    80001960:	e822                	sd	s0,16(sp)
-+    80001962:	e426                	sd	s1,8(sp)
-+    80001964:	e04a                	sd	s2,0(sp)
-+    80001966:	1000                	add	s0,sp,32
-+    80001968:	84aa                	mv	s1,a0
-+    8000196a:	892e                	mv	s2,a1
-   uvmunmap(pagetable, TRAMPOLINE, 1, 0);
--    80001a1c:	4681                	li	a3,0
--    80001a1e:	4605                	li	a2,1
--    80001a20:	040005b7          	lui	a1,0x4000
--    80001a24:	15fd                	addi	a1,a1,-1 # 3ffffff <_entry-0x7c000001>
--    80001a26:	05b2                	slli	a1,a1,0xc
--    80001a28:	f92ff0ef          	jal	800011ba <uvmunmap>
-+    8000196c:	4681                	li	a3,0
-+    8000196e:	4605                	li	a2,1
-+    80001970:	040005b7          	lui	a1,0x4000
-+    80001974:	15fd                	add	a1,a1,-1 # 3ffffff <_entry-0x7c000001>
-+    80001976:	05b2                	sll	a1,a1,0xc
-+    80001978:	ff4ff0ef          	jal	8000116c <uvmunmap>
-   uvmunmap(pagetable, TRAPFRAME, 1, 0);
--    80001a2c:	4681                	li	a3,0
--    80001a2e:	4605                	li	a2,1
--    80001a30:	020005b7          	lui	a1,0x2000
--    80001a34:	15fd                	addi	a1,a1,-1 # 1ffffff <_entry-0x7e000001>
--    80001a36:	05b6                	slli	a1,a1,0xd
--    80001a38:	8526                	mv	a0,s1
--    80001a3a:	f80ff0ef          	jal	800011ba <uvmunmap>
-+    8000197c:	4681                	li	a3,0
-+    8000197e:	4605                	li	a2,1
-+    80001980:	020005b7          	lui	a1,0x2000
-+    80001984:	15fd                	add	a1,a1,-1 # 1ffffff <_entry-0x7e000001>
-+    80001986:	05b6                	sll	a1,a1,0xd
-+    80001988:	8526                	mv	a0,s1
-+    8000198a:	fe2ff0ef          	jal	8000116c <uvmunmap>
-   uvmfree(pagetable, sz);
--    80001a3e:	85ca                	mv	a1,s2
--    80001a40:	8526                	mv	a0,s1
--    80001a42:	a03ff0ef          	jal	80001444 <uvmfree>
--}
--    80001a46:	60e2                	ld	ra,24(sp)
--    80001a48:	6442                	ld	s0,16(sp)
--    80001a4a:	64a2                	ld	s1,8(sp)
--    80001a4c:	6902                	ld	s2,0(sp)
--    80001a4e:	6105                	addi	sp,sp,32
--    80001a50:	8082                	ret
--
--0000000080001a52 <freeproc>:
--{
--    80001a52:	1101                	addi	sp,sp,-32
--    80001a54:	ec06                	sd	ra,24(sp)
--    80001a56:	e822                	sd	s0,16(sp)
--    80001a58:	e426                	sd	s1,8(sp)
--    80001a5a:	1000                	addi	s0,sp,32
--    80001a5c:	84aa                	mv	s1,a0
-+    8000198e:	85ca                	mv	a1,s2
-+    80001990:	8526                	mv	a0,s1
-+    80001992:	a49ff0ef          	jal	800013da <uvmfree>
-+}
-+    80001996:	60e2                	ld	ra,24(sp)
-+    80001998:	6442                	ld	s0,16(sp)
-+    8000199a:	64a2                	ld	s1,8(sp)
-+    8000199c:	6902                	ld	s2,0(sp)
-+    8000199e:	6105                	add	sp,sp,32
-+    800019a0:	8082                	ret
-+
-+00000000800019a2 <freeproc>:
-+{
-+    800019a2:	1101                	add	sp,sp,-32
-+    800019a4:	ec06                	sd	ra,24(sp)
-+    800019a6:	e822                	sd	s0,16(sp)
-+    800019a8:	e426                	sd	s1,8(sp)
-+    800019aa:	1000                	add	s0,sp,32
-+    800019ac:	84aa                	mv	s1,a0
-   if(p->trapframe)
--    80001a5e:	6d28                	ld	a0,88(a0)
--    80001a60:	c119                	beqz	a0,80001a66 <freeproc+0x14>
-+    800019ae:	6d28                	ld	a0,88(a0)
-+    800019b0:	c119                	beqz	a0,800019b6 <freeproc+0x14>
-     kfree((void*)p->trapframe);
--    80001a62:	fe1fe0ef          	jal	80000a42 <kfree>
-+    800019b2:	83cff0ef          	jal	800009ee <kfree>
-   p->trapframe = 0;
--    80001a66:	0404bc23          	sd	zero,88(s1)
-+    800019b6:	0404bc23          	sd	zero,88(s1)
-   if(p->pagetable)
--    80001a6a:	68a8                	ld	a0,80(s1)
--    80001a6c:	c501                	beqz	a0,80001a74 <freeproc+0x22>
-+    800019ba:	68a8                	ld	a0,80(s1)
-+    800019bc:	c501                	beqz	a0,800019c4 <freeproc+0x22>
-     proc_freepagetable(p->pagetable, p->sz);
--    80001a6e:	64ac                	ld	a1,72(s1)
--    80001a70:	f9dff0ef          	jal	80001a0c <proc_freepagetable>
-+    800019be:	64ac                	ld	a1,72(s1)
-+    800019c0:	f9dff0ef          	jal	8000195c <proc_freepagetable>
-   p->pagetable = 0;
--    80001a74:	0404b823          	sd	zero,80(s1)
-+    800019c4:	0404b823          	sd	zero,80(s1)
-   p->sz = 0;
--    80001a78:	0404b423          	sd	zero,72(s1)
-+    800019c8:	0404b423          	sd	zero,72(s1)
-   p->pid = 0;
--    80001a7c:	0204a823          	sw	zero,48(s1)
-+    800019cc:	0204a823          	sw	zero,48(s1)
-   p->parent = 0;
--    80001a80:	0204bc23          	sd	zero,56(s1)
-+    800019d0:	0204bc23          	sd	zero,56(s1)
-   p->name[0] = 0;
--    80001a84:	14048c23          	sb	zero,344(s1)
-+    800019d4:	14048c23          	sb	zero,344(s1)
-   p->chan = 0;
--    80001a88:	0204b023          	sd	zero,32(s1)
-+    800019d8:	0204b023          	sd	zero,32(s1)
-   p->killed = 0;
--    80001a8c:	0204a423          	sw	zero,40(s1)
-+    800019dc:	0204a423          	sw	zero,40(s1)
-   p->xstate = 0;
--    80001a90:	0204a623          	sw	zero,44(s1)
-+    800019e0:	0204a623          	sw	zero,44(s1)
-   p->state = UNUSED;
--    80001a94:	0004ac23          	sw	zero,24(s1)
--}
--    80001a98:	60e2                	ld	ra,24(sp)
--    80001a9a:	6442                	ld	s0,16(sp)
--    80001a9c:	64a2                	ld	s1,8(sp)
--    80001a9e:	6105                	addi	sp,sp,32
--    80001aa0:	8082                	ret
--
--0000000080001aa2 <allocproc>:
--{
--    80001aa2:	1101                	addi	sp,sp,-32
--    80001aa4:	ec06                	sd	ra,24(sp)
--    80001aa6:	e822                	sd	s0,16(sp)
--    80001aa8:	e426                	sd	s1,8(sp)
--    80001aaa:	e04a                	sd	s2,0(sp)
--    80001aac:	1000                	addi	s0,sp,32
-+    800019e4:	0004ac23          	sw	zero,24(s1)
-+}
-+    800019e8:	60e2                	ld	ra,24(sp)
-+    800019ea:	6442                	ld	s0,16(sp)
-+    800019ec:	64a2                	ld	s1,8(sp)
-+    800019ee:	6105                	add	sp,sp,32
-+    800019f0:	8082                	ret
-+
-+00000000800019f2 <allocproc>:
-+{
-+    800019f2:	1101                	add	sp,sp,-32
-+    800019f4:	ec06                	sd	ra,24(sp)
-+    800019f6:	e822                	sd	s0,16(sp)
-+    800019f8:	e426                	sd	s1,8(sp)
-+    800019fa:	e04a                	sd	s2,0(sp)
-+    800019fc:	1000                	add	s0,sp,32
-   for(p = proc; p < &proc[NPROC]; p++) {
--    80001aae:	00011497          	auipc	s1,0x11
--    80001ab2:	ca248493          	addi	s1,s1,-862 # 80012750 <proc>
--    80001ab6:	00016917          	auipc	s2,0x16
--    80001aba:	69a90913          	addi	s2,s2,1690 # 80018150 <tickslock>
-+    800019fe:	0000e497          	auipc	s1,0xe
-+    80001a02:	46248493          	add	s1,s1,1122 # 8000fe60 <proc>
-+    80001a06:	00014917          	auipc	s2,0x14
-+    80001a0a:	e5a90913          	add	s2,s2,-422 # 80015860 <tickslock>
-     acquire(&p->lock);
--    80001abe:	8526                	mv	a0,s1
--    80001ac0:	934ff0ef          	jal	80000bf4 <acquire>
-+    80001a0e:	8526                	mv	a0,s1
-+    80001a10:	990ff0ef          	jal	80000ba0 <acquire>
-     if(p->state == UNUSED) {
--    80001ac4:	4c9c                	lw	a5,24(s1)
--    80001ac6:	cb91                	beqz	a5,80001ada <allocproc+0x38>
-+    80001a14:	4c9c                	lw	a5,24(s1)
-+    80001a16:	cb91                	beqz	a5,80001a2a <allocproc+0x38>
-       release(&p->lock);
--    80001ac8:	8526                	mv	a0,s1
--    80001aca:	9c2ff0ef          	jal	80000c8c <release>
-+    80001a18:	8526                	mv	a0,s1
-+    80001a1a:	a1eff0ef          	jal	80000c38 <release>
-   for(p = proc; p < &proc[NPROC]; p++) {
--    80001ace:	16848493          	addi	s1,s1,360
--    80001ad2:	ff2496e3          	bne	s1,s2,80001abe <allocproc+0x1c>
-+    80001a1e:	16848493          	add	s1,s1,360
-+    80001a22:	ff2496e3          	bne	s1,s2,80001a0e <allocproc+0x1c>
-   return 0;
--    80001ad6:	4481                	li	s1,0
--    80001ad8:	a089                	j	80001b1a <allocproc+0x78>
-+    80001a26:	4481                	li	s1,0
-+    80001a28:	a089                	j	80001a6a <allocproc+0x78>
-   p->pid = allocpid();
--    80001ada:	e71ff0ef          	jal	8000194a <allocpid>
--    80001ade:	d888                	sw	a0,48(s1)
-+    80001a2a:	e71ff0ef          	jal	8000189a <allocpid>
-+    80001a2e:	d888                	sw	a0,48(s1)
-   p->state = USED;
--    80001ae0:	4785                	li	a5,1
--    80001ae2:	cc9c                	sw	a5,24(s1)
-+    80001a30:	4785                	li	a5,1
-+    80001a32:	cc9c                	sw	a5,24(s1)
-   if((p->trapframe = (struct trapframe *)kalloc()) == 0){
--    80001ae4:	840ff0ef          	jal	80000b24 <kalloc>
--    80001ae8:	892a                	mv	s2,a0
--    80001aea:	eca8                	sd	a0,88(s1)
--    80001aec:	cd15                	beqz	a0,80001b28 <allocproc+0x86>
-+    80001a34:	89cff0ef          	jal	80000ad0 <kalloc>
-+    80001a38:	892a                	mv	s2,a0
-+    80001a3a:	eca8                	sd	a0,88(s1)
-+    80001a3c:	cd15                	beqz	a0,80001a78 <allocproc+0x86>
-   p->pagetable = proc_pagetable(p);
--    80001aee:	8526                	mv	a0,s1
--    80001af0:	e99ff0ef          	jal	80001988 <proc_pagetable>
--    80001af4:	892a                	mv	s2,a0
--    80001af6:	e8a8                	sd	a0,80(s1)
-+    80001a3e:	8526                	mv	a0,s1
-+    80001a40:	e99ff0ef          	jal	800018d8 <proc_pagetable>
-+    80001a44:	892a                	mv	s2,a0
-+    80001a46:	e8a8                	sd	a0,80(s1)
-   if(p->pagetable == 0){
--    80001af8:	c121                	beqz	a0,80001b38 <allocproc+0x96>
-+    80001a48:	c121                	beqz	a0,80001a88 <allocproc+0x96>
-   memset(&p->context, 0, sizeof(p->context));
--    80001afa:	07000613          	li	a2,112
--    80001afe:	4581                	li	a1,0
--    80001b00:	06048513          	addi	a0,s1,96
--    80001b04:	9c4ff0ef          	jal	80000cc8 <memset>
-+    80001a4a:	07000613          	li	a2,112
-+    80001a4e:	4581                	li	a1,0
-+    80001a50:	06048513          	add	a0,s1,96
-+    80001a54:	a20ff0ef          	jal	80000c74 <memset>
-   p->context.ra = (uint64)forkret;
--    80001b08:	00000797          	auipc	a5,0x0
--    80001b0c:	e0878793          	addi	a5,a5,-504 # 80001910 <forkret>
--    80001b10:	f0bc                	sd	a5,96(s1)
-+    80001a58:	00000797          	auipc	a5,0x0
-+    80001a5c:	e0878793          	add	a5,a5,-504 # 80001860 <forkret>
-+    80001a60:	f0bc                	sd	a5,96(s1)
-   p->context.sp = p->kstack + PGSIZE;
--    80001b12:	60bc                	ld	a5,64(s1)
--    80001b14:	6705                	lui	a4,0x1
--    80001b16:	97ba                	add	a5,a5,a4
--    80001b18:	f4bc                	sd	a5,104(s1)
--}
--    80001b1a:	8526                	mv	a0,s1
--    80001b1c:	60e2                	ld	ra,24(sp)
--    80001b1e:	6442                	ld	s0,16(sp)
--    80001b20:	64a2                	ld	s1,8(sp)
--    80001b22:	6902                	ld	s2,0(sp)
--    80001b24:	6105                	addi	sp,sp,32
--    80001b26:	8082                	ret
-+    80001a62:	60bc                	ld	a5,64(s1)
-+    80001a64:	6705                	lui	a4,0x1
-+    80001a66:	97ba                	add	a5,a5,a4
-+    80001a68:	f4bc                	sd	a5,104(s1)
-+}
-+    80001a6a:	8526                	mv	a0,s1
-+    80001a6c:	60e2                	ld	ra,24(sp)
-+    80001a6e:	6442                	ld	s0,16(sp)
-+    80001a70:	64a2                	ld	s1,8(sp)
-+    80001a72:	6902                	ld	s2,0(sp)
-+    80001a74:	6105                	add	sp,sp,32
-+    80001a76:	8082                	ret
-     freeproc(p);
--    80001b28:	8526                	mv	a0,s1
--    80001b2a:	f29ff0ef          	jal	80001a52 <freeproc>
-+    80001a78:	8526                	mv	a0,s1
-+    80001a7a:	f29ff0ef          	jal	800019a2 <freeproc>
-     release(&p->lock);
--    80001b2e:	8526                	mv	a0,s1
--    80001b30:	95cff0ef          	jal	80000c8c <release>
-+    80001a7e:	8526                	mv	a0,s1
-+    80001a80:	9b8ff0ef          	jal	80000c38 <release>
-     return 0;
--    80001b34:	84ca                	mv	s1,s2
--    80001b36:	b7d5                	j	80001b1a <allocproc+0x78>
-+    80001a84:	84ca                	mv	s1,s2
-+    80001a86:	b7d5                	j	80001a6a <allocproc+0x78>
-     freeproc(p);
--    80001b38:	8526                	mv	a0,s1
--    80001b3a:	f19ff0ef          	jal	80001a52 <freeproc>
-+    80001a88:	8526                	mv	a0,s1
-+    80001a8a:	f19ff0ef          	jal	800019a2 <freeproc>
-     release(&p->lock);
--    80001b3e:	8526                	mv	a0,s1
--    80001b40:	94cff0ef          	jal	80000c8c <release>
-+    80001a8e:	8526                	mv	a0,s1
-+    80001a90:	9a8ff0ef          	jal	80000c38 <release>
-     return 0;
--    80001b44:	84ca                	mv	s1,s2
--    80001b46:	bfd1                	j	80001b1a <allocproc+0x78>
-+    80001a94:	84ca                	mv	s1,s2
-+    80001a96:	bfd1                	j	80001a6a <allocproc+0x78>
- 
--0000000080001b48 <userinit>:
-+0000000080001a98 <userinit>:
- {
--    80001b48:	1101                	addi	sp,sp,-32
--    80001b4a:	ec06                	sd	ra,24(sp)
--    80001b4c:	e822                	sd	s0,16(sp)
--    80001b4e:	e426                	sd	s1,8(sp)
--    80001b50:	1000                	addi	s0,sp,32
-+    80001a98:	1101                	add	sp,sp,-32
-+    80001a9a:	ec06                	sd	ra,24(sp)
-+    80001a9c:	e822                	sd	s0,16(sp)
-+    80001a9e:	e426                	sd	s1,8(sp)
-+    80001aa0:	1000                	add	s0,sp,32
-   p = allocproc();
--    80001b52:	f51ff0ef          	jal	80001aa2 <allocproc>
--    80001b56:	84aa                	mv	s1,a0
-+    80001aa2:	f51ff0ef          	jal	800019f2 <allocproc>
-+    80001aa6:	84aa                	mv	s1,a0
-   initproc = p;
--    80001b58:	00008797          	auipc	a5,0x8
--    80001b5c:	68a7b823          	sd	a0,1680(a5) # 8000a1e8 <initproc>
-+    80001aa8:	00006797          	auipc	a5,0x6
-+    80001aac:	e4a7b823          	sd	a0,-432(a5) # 800078f8 <initproc>
-   uvmfirst(p->pagetable, initcode, sizeof(initcode));
--    80001b60:	03400613          	li	a2,52
--    80001b64:	00008597          	auipc	a1,0x8
--    80001b68:	61c58593          	addi	a1,a1,1564 # 8000a180 <initcode>
--    80001b6c:	6928                	ld	a0,80(a0)
--    80001b6e:	f2eff0ef          	jal	8000129c <uvmfirst>
-+    80001ab0:	03400613          	li	a2,52
-+    80001ab4:	00006597          	auipc	a1,0x6
-+    80001ab8:	ddc58593          	add	a1,a1,-548 # 80007890 <initcode>
-+    80001abc:	6928                	ld	a0,80(a0)
-+    80001abe:	f80ff0ef          	jal	8000123e <uvmfirst>
-   p->sz = PGSIZE;
--    80001b72:	6785                	lui	a5,0x1
--    80001b74:	e4bc                	sd	a5,72(s1)
-+    80001ac2:	6785                	lui	a5,0x1
-+    80001ac4:	e4bc                	sd	a5,72(s1)
-   p->trapframe->epc = 0;      /* user program counter */
--    80001b76:	6cb8                	ld	a4,88(s1)
--    80001b78:	00073c23          	sd	zero,24(a4) # 1018 <_entry-0x7fffefe8>
-+    80001ac6:	6cb8                	ld	a4,88(s1)
-+    80001ac8:	00073c23          	sd	zero,24(a4) # 1018 <_entry-0x7fffefe8>
-   p->trapframe->sp = PGSIZE;  /* user stack pointer */
--    80001b7c:	6cb8                	ld	a4,88(s1)
--    80001b7e:	fb1c                	sd	a5,48(a4)
-+    80001acc:	6cb8                	ld	a4,88(s1)
-+    80001ace:	fb1c                	sd	a5,48(a4)
-   safestrcpy(p->name, "initcode", sizeof(p->name));
--    80001b80:	4641                	li	a2,16
--    80001b82:	00005597          	auipc	a1,0x5
--    80001b86:	69e58593          	addi	a1,a1,1694 # 80007220 <etext+0x220>
--    80001b8a:	15848513          	addi	a0,s1,344
--    80001b8e:	a78ff0ef          	jal	80000e06 <safestrcpy>
-+    80001ad0:	4641                	li	a2,16
-+    80001ad2:	00005597          	auipc	a1,0x5
-+    80001ad6:	76658593          	add	a1,a1,1894 # 80007238 <digits+0x200>
-+    80001ada:	15848513          	add	a0,s1,344
-+    80001ade:	adaff0ef          	jal	80000db8 <safestrcpy>
-   p->cwd = namei("/");
--    80001b92:	00005517          	auipc	a0,0x5
--    80001b96:	69e50513          	addi	a0,a0,1694 # 80007230 <etext+0x230>
--    80001b9a:	501010ef          	jal	8000389a <namei>
--    80001b9e:	14a4b823          	sd	a0,336(s1)
-+    80001ae2:	00005517          	auipc	a0,0x5
-+    80001ae6:	76650513          	add	a0,a0,1894 # 80007248 <digits+0x210>
-+    80001aea:	4ab010ef          	jal	80003794 <namei>
-+    80001aee:	14a4b823          	sd	a0,336(s1)
-   p->state = RUNNABLE;
--    80001ba2:	478d                	li	a5,3
--    80001ba4:	cc9c                	sw	a5,24(s1)
-+    80001af2:	478d                	li	a5,3
-+    80001af4:	cc9c                	sw	a5,24(s1)
-   release(&p->lock);
--    80001ba6:	8526                	mv	a0,s1
--    80001ba8:	8e4ff0ef          	jal	80000c8c <release>
--}
--    80001bac:	60e2                	ld	ra,24(sp)
--    80001bae:	6442                	ld	s0,16(sp)
--    80001bb0:	64a2                	ld	s1,8(sp)
--    80001bb2:	6105                	addi	sp,sp,32
--    80001bb4:	8082                	ret
--
--0000000080001bb6 <growproc>:
--{
--    80001bb6:	1101                	addi	sp,sp,-32
--    80001bb8:	ec06                	sd	ra,24(sp)
--    80001bba:	e822                	sd	s0,16(sp)
--    80001bbc:	e426                	sd	s1,8(sp)
--    80001bbe:	e04a                	sd	s2,0(sp)
--    80001bc0:	1000                	addi	s0,sp,32
--    80001bc2:	892a                	mv	s2,a0
-+    80001af6:	8526                	mv	a0,s1
-+    80001af8:	940ff0ef          	jal	80000c38 <release>
-+}
-+    80001afc:	60e2                	ld	ra,24(sp)
-+    80001afe:	6442                	ld	s0,16(sp)
-+    80001b00:	64a2                	ld	s1,8(sp)
-+    80001b02:	6105                	add	sp,sp,32
-+    80001b04:	8082                	ret
-+
-+0000000080001b06 <growproc>:
-+{
-+    80001b06:	1101                	add	sp,sp,-32
-+    80001b08:	ec06                	sd	ra,24(sp)
-+    80001b0a:	e822                	sd	s0,16(sp)
-+    80001b0c:	e426                	sd	s1,8(sp)
-+    80001b0e:	e04a                	sd	s2,0(sp)
-+    80001b10:	1000                	add	s0,sp,32
-+    80001b12:	892a                	mv	s2,a0
-   struct proc *p = myproc();
--    80001bc4:	d1dff0ef          	jal	800018e0 <myproc>
--    80001bc8:	84aa                	mv	s1,a0
-+    80001b14:	d1dff0ef          	jal	80001830 <myproc>
-+    80001b18:	84aa                	mv	s1,a0
-   sz = p->sz;
--    80001bca:	652c                	ld	a1,72(a0)
-+    80001b1a:	652c                	ld	a1,72(a0)
-   if(n > 0){
--    80001bcc:	01204c63          	bgtz	s2,80001be4 <growproc+0x2e>
-+    80001b1c:	01204c63          	bgtz	s2,80001b34 <growproc+0x2e>
-   } else if(n < 0){
--    80001bd0:	02094463          	bltz	s2,80001bf8 <growproc+0x42>
-+    80001b20:	02094463          	bltz	s2,80001b48 <growproc+0x42>
-   p->sz = sz;
--    80001bd4:	e4ac                	sd	a1,72(s1)
-+    80001b24:	e4ac                	sd	a1,72(s1)
-   return 0;
--    80001bd6:	4501                	li	a0,0
--}
--    80001bd8:	60e2                	ld	ra,24(sp)
--    80001bda:	6442                	ld	s0,16(sp)
--    80001bdc:	64a2                	ld	s1,8(sp)
--    80001bde:	6902                	ld	s2,0(sp)
--    80001be0:	6105                	addi	sp,sp,32
--    80001be2:	8082                	ret
-+    80001b26:	4501                	li	a0,0
-+}
-+    80001b28:	60e2                	ld	ra,24(sp)
-+    80001b2a:	6442                	ld	s0,16(sp)
-+    80001b2c:	64a2                	ld	s1,8(sp)
-+    80001b2e:	6902                	ld	s2,0(sp)
-+    80001b30:	6105                	add	sp,sp,32
-+    80001b32:	8082                	ret
-     if((sz = uvmalloc(p->pagetable, sz, sz + n, PTE_W)) == 0) {
--    80001be4:	4691                	li	a3,4
--    80001be6:	00b90633          	add	a2,s2,a1
--    80001bea:	6928                	ld	a0,80(a0)
--    80001bec:	f52ff0ef          	jal	8000133e <uvmalloc>
--    80001bf0:	85aa                	mv	a1,a0
--    80001bf2:	f16d                	bnez	a0,80001bd4 <growproc+0x1e>
-+    80001b34:	4691                	li	a3,4
-+    80001b36:	00b90633          	add	a2,s2,a1
-+    80001b3a:	6928                	ld	a0,80(a0)
-+    80001b3c:	fa4ff0ef          	jal	800012e0 <uvmalloc>
-+    80001b40:	85aa                	mv	a1,a0
-+    80001b42:	f16d                	bnez	a0,80001b24 <growproc+0x1e>
-       return -1;
--    80001bf4:	557d                	li	a0,-1
--    80001bf6:	b7cd                	j	80001bd8 <growproc+0x22>
-+    80001b44:	557d                	li	a0,-1
-+    80001b46:	b7cd                	j	80001b28 <growproc+0x22>
-     sz = uvmdealloc(p->pagetable, sz, sz + n);
--    80001bf8:	00b90633          	add	a2,s2,a1
--    80001bfc:	6928                	ld	a0,80(a0)
--    80001bfe:	efcff0ef          	jal	800012fa <uvmdealloc>
--    80001c02:	85aa                	mv	a1,a0
--    80001c04:	bfc1                	j	80001bd4 <growproc+0x1e>
--
--0000000080001c06 <fork>:
--{
--    80001c06:	7139                	addi	sp,sp,-64
--    80001c08:	fc06                	sd	ra,56(sp)
--    80001c0a:	f822                	sd	s0,48(sp)
--    80001c0c:	f04a                	sd	s2,32(sp)
--    80001c0e:	e456                	sd	s5,8(sp)
--    80001c10:	0080                	addi	s0,sp,64
-+    80001b48:	00b90633          	add	a2,s2,a1
-+    80001b4c:	6928                	ld	a0,80(a0)
-+    80001b4e:	f4eff0ef          	jal	8000129c <uvmdealloc>
-+    80001b52:	85aa                	mv	a1,a0
-+    80001b54:	bfc1                	j	80001b24 <growproc+0x1e>
-+
-+0000000080001b56 <fork>:
-+{
-+    80001b56:	7139                	add	sp,sp,-64
-+    80001b58:	fc06                	sd	ra,56(sp)
-+    80001b5a:	f822                	sd	s0,48(sp)
-+    80001b5c:	f426                	sd	s1,40(sp)
-+    80001b5e:	f04a                	sd	s2,32(sp)
-+    80001b60:	ec4e                	sd	s3,24(sp)
-+    80001b62:	e852                	sd	s4,16(sp)
-+    80001b64:	e456                	sd	s5,8(sp)
-+    80001b66:	0080                	add	s0,sp,64
-   struct proc *p = myproc();
--    80001c12:	ccfff0ef          	jal	800018e0 <myproc>
--    80001c16:	8aaa                	mv	s5,a0
-+    80001b68:	cc9ff0ef          	jal	80001830 <myproc>
-+    80001b6c:	8aaa                	mv	s5,a0
-   if((np = allocproc()) == 0){
--    80001c18:	e8bff0ef          	jal	80001aa2 <allocproc>
--    80001c1c:	0e050a63          	beqz	a0,80001d10 <fork+0x10a>
--    80001c20:	e852                	sd	s4,16(sp)
--    80001c22:	8a2a                	mv	s4,a0
-+    80001b6e:	e85ff0ef          	jal	800019f2 <allocproc>
-+    80001b72:	0e050663          	beqz	a0,80001c5e <fork+0x108>
-+    80001b76:	8a2a                	mv	s4,a0
-   if(uvmcopy(p->pagetable, np->pagetable, p->sz) < 0){
--    80001c24:	048ab603          	ld	a2,72(s5)
--    80001c28:	692c                	ld	a1,80(a0)
--    80001c2a:	050ab503          	ld	a0,80(s5)
--    80001c2e:	849ff0ef          	jal	80001476 <uvmcopy>
--    80001c32:	04054a63          	bltz	a0,80001c86 <fork+0x80>
--    80001c36:	f426                	sd	s1,40(sp)
--    80001c38:	ec4e                	sd	s3,24(sp)
-+    80001b78:	048ab603          	ld	a2,72(s5)
-+    80001b7c:	692c                	ld	a1,80(a0)
-+    80001b7e:	050ab503          	ld	a0,80(s5)
-+    80001b82:	88bff0ef          	jal	8000140c <uvmcopy>
-+    80001b86:	04054863          	bltz	a0,80001bd6 <fork+0x80>
-   np->sz = p->sz;
--    80001c3a:	048ab783          	ld	a5,72(s5)
--    80001c3e:	04fa3423          	sd	a5,72(s4)
-+    80001b8a:	048ab783          	ld	a5,72(s5)
-+    80001b8e:	04fa3423          	sd	a5,72(s4)
-   *(np->trapframe) = *(p->trapframe);
--    80001c42:	058ab683          	ld	a3,88(s5)
--    80001c46:	87b6                	mv	a5,a3
--    80001c48:	058a3703          	ld	a4,88(s4)
--    80001c4c:	12068693          	addi	a3,a3,288
--    80001c50:	0007b803          	ld	a6,0(a5) # 1000 <_entry-0x7ffff000>
--    80001c54:	6788                	ld	a0,8(a5)
--    80001c56:	6b8c                	ld	a1,16(a5)
--    80001c58:	6f90                	ld	a2,24(a5)
--    80001c5a:	01073023          	sd	a6,0(a4)
--    80001c5e:	e708                	sd	a0,8(a4)
--    80001c60:	eb0c                	sd	a1,16(a4)
--    80001c62:	ef10                	sd	a2,24(a4)
--    80001c64:	02078793          	addi	a5,a5,32
--    80001c68:	02070713          	addi	a4,a4,32
--    80001c6c:	fed792e3          	bne	a5,a3,80001c50 <fork+0x4a>
-+    80001b92:	058ab683          	ld	a3,88(s5)
-+    80001b96:	87b6                	mv	a5,a3
-+    80001b98:	058a3703          	ld	a4,88(s4)
-+    80001b9c:	12068693          	add	a3,a3,288
-+    80001ba0:	0007b803          	ld	a6,0(a5) # 1000 <_entry-0x7ffff000>
-+    80001ba4:	6788                	ld	a0,8(a5)
-+    80001ba6:	6b8c                	ld	a1,16(a5)
-+    80001ba8:	6f90                	ld	a2,24(a5)
-+    80001baa:	01073023          	sd	a6,0(a4)
-+    80001bae:	e708                	sd	a0,8(a4)
-+    80001bb0:	eb0c                	sd	a1,16(a4)
-+    80001bb2:	ef10                	sd	a2,24(a4)
-+    80001bb4:	02078793          	add	a5,a5,32
-+    80001bb8:	02070713          	add	a4,a4,32
-+    80001bbc:	fed792e3          	bne	a5,a3,80001ba0 <fork+0x4a>
-   np->trapframe->a0 = 0;
--    80001c70:	058a3783          	ld	a5,88(s4)
--    80001c74:	0607b823          	sd	zero,112(a5)
-+    80001bc0:	058a3783          	ld	a5,88(s4)
-+    80001bc4:	0607b823          	sd	zero,112(a5)
-   for(i = 0; i < NOFILE; i++)
--    80001c78:	0d0a8493          	addi	s1,s5,208
--    80001c7c:	0d0a0913          	addi	s2,s4,208
--    80001c80:	150a8993          	addi	s3,s5,336
--    80001c84:	a831                	j	80001ca0 <fork+0x9a>
-+    80001bc8:	0d0a8493          	add	s1,s5,208
-+    80001bcc:	0d0a0913          	add	s2,s4,208
-+    80001bd0:	150a8993          	add	s3,s5,336
-+    80001bd4:	a829                	j	80001bee <fork+0x98>
-     freeproc(np);
--    80001c86:	8552                	mv	a0,s4
--    80001c88:	dcbff0ef          	jal	80001a52 <freeproc>
-+    80001bd6:	8552                	mv	a0,s4
-+    80001bd8:	dcbff0ef          	jal	800019a2 <freeproc>
-     release(&np->lock);
--    80001c8c:	8552                	mv	a0,s4
--    80001c8e:	ffffe0ef          	jal	80000c8c <release>
-+    80001bdc:	8552                	mv	a0,s4
-+    80001bde:	85aff0ef          	jal	80000c38 <release>
-     return -1;
--    80001c92:	597d                	li	s2,-1
--    80001c94:	6a42                	ld	s4,16(sp)
--    80001c96:	a0b5                	j	80001d02 <fork+0xfc>
-+    80001be2:	597d                	li	s2,-1
-+    80001be4:	a09d                	j	80001c4a <fork+0xf4>
-   for(i = 0; i < NOFILE; i++)
--    80001c98:	04a1                	addi	s1,s1,8
--    80001c9a:	0921                	addi	s2,s2,8
--    80001c9c:	01348963          	beq	s1,s3,80001cae <fork+0xa8>
-+    80001be6:	04a1                	add	s1,s1,8
-+    80001be8:	0921                	add	s2,s2,8
-+    80001bea:	01348963          	beq	s1,s3,80001bfc <fork+0xa6>
-     if(p->ofile[i])
--    80001ca0:	6088                	ld	a0,0(s1)
--    80001ca2:	d97d                	beqz	a0,80001c98 <fork+0x92>
-+    80001bee:	6088                	ld	a0,0(s1)
-+    80001bf0:	d97d                	beqz	a0,80001be6 <fork+0x90>
-       np->ofile[i] = filedup(p->ofile[i]);
--    80001ca4:	186020ef          	jal	80003e2a <filedup>
--    80001ca8:	00a93023          	sd	a0,0(s2)
--    80001cac:	b7f5                	j	80001c98 <fork+0x92>
-+    80001bf2:	12c020ef          	jal	80003d1e <filedup>
-+    80001bf6:	00a93023          	sd	a0,0(s2)
-+    80001bfa:	b7f5                	j	80001be6 <fork+0x90>
-   np->cwd = idup(p->cwd);
--    80001cae:	150ab503          	ld	a0,336(s5)
--    80001cb2:	4d8010ef          	jal	8000318a <idup>
--    80001cb6:	14aa3823          	sd	a0,336(s4)
-+    80001bfc:	150ab503          	ld	a0,336(s5)
-+    80001c00:	4ac010ef          	jal	800030ac <idup>
-+    80001c04:	14aa3823          	sd	a0,336(s4)
-   safestrcpy(np->name, p->name, sizeof(p->name));
--    80001cba:	4641                	li	a2,16
--    80001cbc:	158a8593          	addi	a1,s5,344
--    80001cc0:	158a0513          	addi	a0,s4,344
--    80001cc4:	942ff0ef          	jal	80000e06 <safestrcpy>
-+    80001c08:	4641                	li	a2,16
-+    80001c0a:	158a8593          	add	a1,s5,344
-+    80001c0e:	158a0513          	add	a0,s4,344
-+    80001c12:	9a6ff0ef          	jal	80000db8 <safestrcpy>
-   pid = np->pid;
--    80001cc8:	030a2903          	lw	s2,48(s4)
-+    80001c16:	030a2903          	lw	s2,48(s4)
-   release(&np->lock);
--    80001ccc:	8552                	mv	a0,s4
--    80001cce:	fbffe0ef          	jal	80000c8c <release>
-+    80001c1a:	8552                	mv	a0,s4
-+    80001c1c:	81cff0ef          	jal	80000c38 <release>
-   acquire(&wait_lock);
--    80001cd2:	00010497          	auipc	s1,0x10
--    80001cd6:	66648493          	addi	s1,s1,1638 # 80012338 <wait_lock>
--    80001cda:	8526                	mv	a0,s1
--    80001cdc:	f19fe0ef          	jal	80000bf4 <acquire>
-+    80001c20:	0000e497          	auipc	s1,0xe
-+    80001c24:	e2848493          	add	s1,s1,-472 # 8000fa48 <wait_lock>
-+    80001c28:	8526                	mv	a0,s1
-+    80001c2a:	f77fe0ef          	jal	80000ba0 <acquire>
-   np->parent = p;
--    80001ce0:	035a3c23          	sd	s5,56(s4)
-+    80001c2e:	035a3c23          	sd	s5,56(s4)
-   release(&wait_lock);
--    80001ce4:	8526                	mv	a0,s1
--    80001ce6:	fa7fe0ef          	jal	80000c8c <release>
-+    80001c32:	8526                	mv	a0,s1
-+    80001c34:	804ff0ef          	jal	80000c38 <release>
-   acquire(&np->lock);
--    80001cea:	8552                	mv	a0,s4
--    80001cec:	f09fe0ef          	jal	80000bf4 <acquire>
-+    80001c38:	8552                	mv	a0,s4
-+    80001c3a:	f67fe0ef          	jal	80000ba0 <acquire>
-   np->state = RUNNABLE;
--    80001cf0:	478d                	li	a5,3
--    80001cf2:	00fa2c23          	sw	a5,24(s4)
-+    80001c3e:	478d                	li	a5,3
-+    80001c40:	00fa2c23          	sw	a5,24(s4)
-   release(&np->lock);
--    80001cf6:	8552                	mv	a0,s4
--    80001cf8:	f95fe0ef          	jal	80000c8c <release>
--  return pid;
--    80001cfc:	74a2                	ld	s1,40(sp)
--    80001cfe:	69e2                	ld	s3,24(sp)
--    80001d00:	6a42                	ld	s4,16(sp)
--}
--    80001d02:	854a                	mv	a0,s2
--    80001d04:	70e2                	ld	ra,56(sp)
--    80001d06:	7442                	ld	s0,48(sp)
--    80001d08:	7902                	ld	s2,32(sp)
--    80001d0a:	6aa2                	ld	s5,8(sp)
--    80001d0c:	6121                	addi	sp,sp,64
--    80001d0e:	8082                	ret
-+    80001c44:	8552                	mv	a0,s4
-+    80001c46:	ff3fe0ef          	jal	80000c38 <release>
-+}
-+    80001c4a:	854a                	mv	a0,s2
-+    80001c4c:	70e2                	ld	ra,56(sp)
-+    80001c4e:	7442                	ld	s0,48(sp)
-+    80001c50:	74a2                	ld	s1,40(sp)
-+    80001c52:	7902                	ld	s2,32(sp)
-+    80001c54:	69e2                	ld	s3,24(sp)
-+    80001c56:	6a42                	ld	s4,16(sp)
-+    80001c58:	6aa2                	ld	s5,8(sp)
-+    80001c5a:	6121                	add	sp,sp,64
-+    80001c5c:	8082                	ret
-     return -1;
--    80001d10:	597d                	li	s2,-1
--    80001d12:	bfc5                	j	80001d02 <fork+0xfc>
--
--0000000080001d14 <scheduler>:
--{
--    80001d14:	715d                	addi	sp,sp,-80
--    80001d16:	e486                	sd	ra,72(sp)
--    80001d18:	e0a2                	sd	s0,64(sp)
--    80001d1a:	fc26                	sd	s1,56(sp)
--    80001d1c:	f84a                	sd	s2,48(sp)
--    80001d1e:	f44e                	sd	s3,40(sp)
--    80001d20:	f052                	sd	s4,32(sp)
--    80001d22:	ec56                	sd	s5,24(sp)
--    80001d24:	e85a                	sd	s6,16(sp)
--    80001d26:	e45e                	sd	s7,8(sp)
--    80001d28:	e062                	sd	s8,0(sp)
--    80001d2a:	0880                	addi	s0,sp,80
--    80001d2c:	8792                	mv	a5,tp
-+    80001c5e:	597d                	li	s2,-1
-+    80001c60:	b7ed                	j	80001c4a <fork+0xf4>
-+
-+0000000080001c62 <scheduler>:
-+{
-+    80001c62:	715d                	add	sp,sp,-80
-+    80001c64:	e486                	sd	ra,72(sp)
-+    80001c66:	e0a2                	sd	s0,64(sp)
-+    80001c68:	fc26                	sd	s1,56(sp)
-+    80001c6a:	f84a                	sd	s2,48(sp)
-+    80001c6c:	f44e                	sd	s3,40(sp)
-+    80001c6e:	f052                	sd	s4,32(sp)
-+    80001c70:	ec56                	sd	s5,24(sp)
-+    80001c72:	e85a                	sd	s6,16(sp)
-+    80001c74:	e45e                	sd	s7,8(sp)
-+    80001c76:	e062                	sd	s8,0(sp)
-+    80001c78:	0880                	add	s0,sp,80
-+    80001c7a:	8792                	mv	a5,tp
-   int id = r_tp();
--    80001d2e:	2781                	sext.w	a5,a5
-+    80001c7c:	2781                	sext.w	a5,a5
-   c->proc = 0;
--    80001d30:	00779b13          	slli	s6,a5,0x7
--    80001d34:	00010717          	auipc	a4,0x10
--    80001d38:	5ec70713          	addi	a4,a4,1516 # 80012320 <pid_lock>
--    80001d3c:	975a                	add	a4,a4,s6
--    80001d3e:	02073823          	sd	zero,48(a4)
-+    80001c7e:	00779b13          	sll	s6,a5,0x7
-+    80001c82:	0000e717          	auipc	a4,0xe
-+    80001c86:	dae70713          	add	a4,a4,-594 # 8000fa30 <pid_lock>
-+    80001c8a:	975a                	add	a4,a4,s6
-+    80001c8c:	02073823          	sd	zero,48(a4)
-         swtch(&c->context, &p->context);
--    80001d42:	00010717          	auipc	a4,0x10
--    80001d46:	61670713          	addi	a4,a4,1558 # 80012358 <cpus+0x8>
--    80001d4a:	9b3a                	add	s6,s6,a4
-+    80001c90:	0000e717          	auipc	a4,0xe
-+    80001c94:	dd870713          	add	a4,a4,-552 # 8000fa68 <cpus+0x8>
-+    80001c98:	9b3a                	add	s6,s6,a4
-         p->state = RUNNING;
--    80001d4c:	4c11                	li	s8,4
-+    80001c9a:	4c11                	li	s8,4
-         c->proc = p;
--    80001d4e:	079e                	slli	a5,a5,0x7
--    80001d50:	00010a17          	auipc	s4,0x10
--    80001d54:	5d0a0a13          	addi	s4,s4,1488 # 80012320 <pid_lock>
--    80001d58:	9a3e                	add	s4,s4,a5
-+    80001c9c:	079e                	sll	a5,a5,0x7
-+    80001c9e:	0000ea17          	auipc	s4,0xe
-+    80001ca2:	d92a0a13          	add	s4,s4,-622 # 8000fa30 <pid_lock>
-+    80001ca6:	9a3e                	add	s4,s4,a5
-         found = 1;
--    80001d5a:	4b85                	li	s7,1
-+    80001ca8:	4b85                	li	s7,1
-     for(p = proc; p < &proc[NPROC]; p++) {
--    80001d5c:	00016997          	auipc	s3,0x16
--    80001d60:	3f498993          	addi	s3,s3,1012 # 80018150 <tickslock>
--    80001d64:	a0a9                	j	80001dae <scheduler+0x9a>
-+    80001caa:	00014997          	auipc	s3,0x14
-+    80001cae:	bb698993          	add	s3,s3,-1098 # 80015860 <tickslock>
-+    80001cb2:	a0a9                	j	80001cfc <scheduler+0x9a>
-       release(&p->lock);
--    80001d66:	8526                	mv	a0,s1
--    80001d68:	f25fe0ef          	jal	80000c8c <release>
-+    80001cb4:	8526                	mv	a0,s1
-+    80001cb6:	f83fe0ef          	jal	80000c38 <release>
-     for(p = proc; p < &proc[NPROC]; p++) {
--    80001d6c:	16848493          	addi	s1,s1,360
--    80001d70:	03348563          	beq	s1,s3,80001d9a <scheduler+0x86>
-+    80001cba:	16848493          	add	s1,s1,360
-+    80001cbe:	03348563          	beq	s1,s3,80001ce8 <scheduler+0x86>
-       acquire(&p->lock);
--    80001d74:	8526                	mv	a0,s1
--    80001d76:	e7ffe0ef          	jal	80000bf4 <acquire>
-+    80001cc2:	8526                	mv	a0,s1
-+    80001cc4:	eddfe0ef          	jal	80000ba0 <acquire>
-       if(p->state == RUNNABLE) {
--    80001d7a:	4c9c                	lw	a5,24(s1)
--    80001d7c:	ff2795e3          	bne	a5,s2,80001d66 <scheduler+0x52>
-+    80001cc8:	4c9c                	lw	a5,24(s1)
-+    80001cca:	ff2795e3          	bne	a5,s2,80001cb4 <scheduler+0x52>
-         p->state = RUNNING;
--    80001d80:	0184ac23          	sw	s8,24(s1)
-+    80001cce:	0184ac23          	sw	s8,24(s1)
-         c->proc = p;
--    80001d84:	029a3823          	sd	s1,48(s4)
-+    80001cd2:	029a3823          	sd	s1,48(s4)
-         swtch(&c->context, &p->context);
--    80001d88:	06048593          	addi	a1,s1,96
--    80001d8c:	855a                	mv	a0,s6
--    80001d8e:	5b4000ef          	jal	80002342 <swtch>
-+    80001cd6:	06048593          	add	a1,s1,96
-+    80001cda:	855a                	mv	a0,s6
-+    80001cdc:	5b4000ef          	jal	80002290 <swtch>
-         c->proc = 0;
--    80001d92:	020a3823          	sd	zero,48(s4)
-+    80001ce0:	020a3823          	sd	zero,48(s4)
-         found = 1;
--    80001d96:	8ade                	mv	s5,s7
--    80001d98:	b7f9                	j	80001d66 <scheduler+0x52>
-+    80001ce4:	8ade                	mv	s5,s7
-+    80001ce6:	b7f9                	j	80001cb4 <scheduler+0x52>
-     if(found == 0) {
--    80001d9a:	000a9a63          	bnez	s5,80001dae <scheduler+0x9a>
-+    80001ce8:	000a9a63          	bnez	s5,80001cfc <scheduler+0x9a>
-   asm volatile("csrr %0, sstatus" : "=r" (x) );
--    80001d9e:	100027f3          	csrr	a5,sstatus
-+    80001cec:	100027f3          	csrr	a5,sstatus
-   w_sstatus(r_sstatus() | SSTATUS_SIE);
--    80001da2:	0027e793          	ori	a5,a5,2
-+    80001cf0:	0027e793          	or	a5,a5,2
-   asm volatile("csrw sstatus, %0" : : "r" (x));
--    80001da6:	10079073          	csrw	sstatus,a5
-+    80001cf4:	10079073          	csrw	sstatus,a5
-       asm volatile("wfi");
--    80001daa:	10500073          	wfi
-+    80001cf8:	10500073          	wfi
-   asm volatile("csrr %0, sstatus" : "=r" (x) );
--    80001dae:	100027f3          	csrr	a5,sstatus
-+    80001cfc:	100027f3          	csrr	a5,sstatus
-   w_sstatus(r_sstatus() | SSTATUS_SIE);
--    80001db2:	0027e793          	ori	a5,a5,2
-+    80001d00:	0027e793          	or	a5,a5,2
-   asm volatile("csrw sstatus, %0" : : "r" (x));
--    80001db6:	10079073          	csrw	sstatus,a5
-+    80001d04:	10079073          	csrw	sstatus,a5
-     int found = 0;
--    80001dba:	4a81                	li	s5,0
-+    80001d08:	4a81                	li	s5,0
-     for(p = proc; p < &proc[NPROC]; p++) {
--    80001dbc:	00011497          	auipc	s1,0x11
--    80001dc0:	99448493          	addi	s1,s1,-1644 # 80012750 <proc>
-+    80001d0a:	0000e497          	auipc	s1,0xe
-+    80001d0e:	15648493          	add	s1,s1,342 # 8000fe60 <proc>
-       if(p->state == RUNNABLE) {
--    80001dc4:	490d                	li	s2,3
--    80001dc6:	b77d                	j	80001d74 <scheduler+0x60>
--
--0000000080001dc8 <sched>:
--{
--    80001dc8:	7179                	addi	sp,sp,-48
--    80001dca:	f406                	sd	ra,40(sp)
--    80001dcc:	f022                	sd	s0,32(sp)
--    80001dce:	ec26                	sd	s1,24(sp)
--    80001dd0:	e84a                	sd	s2,16(sp)
--    80001dd2:	e44e                	sd	s3,8(sp)
--    80001dd4:	1800                	addi	s0,sp,48
-+    80001d12:	490d                	li	s2,3
-+    80001d14:	b77d                	j	80001cc2 <scheduler+0x60>
-+
-+0000000080001d16 <sched>:
-+{
-+    80001d16:	7179                	add	sp,sp,-48
-+    80001d18:	f406                	sd	ra,40(sp)
-+    80001d1a:	f022                	sd	s0,32(sp)
-+    80001d1c:	ec26                	sd	s1,24(sp)
-+    80001d1e:	e84a                	sd	s2,16(sp)
-+    80001d20:	e44e                	sd	s3,8(sp)
-+    80001d22:	1800                	add	s0,sp,48
-   struct proc *p = myproc();
--    80001dd6:	b0bff0ef          	jal	800018e0 <myproc>
--    80001dda:	84aa                	mv	s1,a0
-+    80001d24:	b0dff0ef          	jal	80001830 <myproc>
-+    80001d28:	84aa                	mv	s1,a0
-   if(!holding(&p->lock))
--    80001ddc:	daffe0ef          	jal	80000b8a <holding>
--    80001de0:	c92d                	beqz	a0,80001e52 <sched+0x8a>
-+    80001d2a:	e0dfe0ef          	jal	80000b36 <holding>
-+    80001d2e:	c92d                	beqz	a0,80001da0 <sched+0x8a>
-   asm volatile("mv %0, tp" : "=r" (x) );
--    80001de2:	8792                	mv	a5,tp
-+    80001d30:	8792                	mv	a5,tp
-   if(mycpu()->noff != 1)
--    80001de4:	2781                	sext.w	a5,a5
--    80001de6:	079e                	slli	a5,a5,0x7
--    80001de8:	00010717          	auipc	a4,0x10
--    80001dec:	53870713          	addi	a4,a4,1336 # 80012320 <pid_lock>
--    80001df0:	97ba                	add	a5,a5,a4
--    80001df2:	0a87a703          	lw	a4,168(a5)
--    80001df6:	4785                	li	a5,1
--    80001df8:	06f71363          	bne	a4,a5,80001e5e <sched+0x96>
-+    80001d32:	2781                	sext.w	a5,a5
-+    80001d34:	079e                	sll	a5,a5,0x7
-+    80001d36:	0000e717          	auipc	a4,0xe
-+    80001d3a:	cfa70713          	add	a4,a4,-774 # 8000fa30 <pid_lock>
-+    80001d3e:	97ba                	add	a5,a5,a4
-+    80001d40:	0a87a703          	lw	a4,168(a5)
-+    80001d44:	4785                	li	a5,1
-+    80001d46:	06f71363          	bne	a4,a5,80001dac <sched+0x96>
-   if(p->state == RUNNING)
--    80001dfc:	4c98                	lw	a4,24(s1)
--    80001dfe:	4791                	li	a5,4
--    80001e00:	06f70563          	beq	a4,a5,80001e6a <sched+0xa2>
-+    80001d4a:	4c98                	lw	a4,24(s1)
-+    80001d4c:	4791                	li	a5,4
-+    80001d4e:	06f70563          	beq	a4,a5,80001db8 <sched+0xa2>
-   asm volatile("csrr %0, sstatus" : "=r" (x) );
--    80001e04:	100027f3          	csrr	a5,sstatus
-+    80001d52:	100027f3          	csrr	a5,sstatus
-   return (x & SSTATUS_SIE) != 0;
--    80001e08:	8b89                	andi	a5,a5,2
-+    80001d56:	8b89                	and	a5,a5,2
-   if(intr_get())
--    80001e0a:	e7b5                	bnez	a5,80001e76 <sched+0xae>
-+    80001d58:	e7b5                	bnez	a5,80001dc4 <sched+0xae>
-   asm volatile("mv %0, tp" : "=r" (x) );
--    80001e0c:	8792                	mv	a5,tp
-+    80001d5a:	8792                	mv	a5,tp
-   intena = mycpu()->intena;
--    80001e0e:	00010917          	auipc	s2,0x10
--    80001e12:	51290913          	addi	s2,s2,1298 # 80012320 <pid_lock>
--    80001e16:	2781                	sext.w	a5,a5
--    80001e18:	079e                	slli	a5,a5,0x7
--    80001e1a:	97ca                	add	a5,a5,s2
--    80001e1c:	0ac7a983          	lw	s3,172(a5)
--    80001e20:	8792                	mv	a5,tp
-+    80001d5c:	0000e917          	auipc	s2,0xe
-+    80001d60:	cd490913          	add	s2,s2,-812 # 8000fa30 <pid_lock>
-+    80001d64:	2781                	sext.w	a5,a5
-+    80001d66:	079e                	sll	a5,a5,0x7
-+    80001d68:	97ca                	add	a5,a5,s2
-+    80001d6a:	0ac7a983          	lw	s3,172(a5)
-+    80001d6e:	8792                	mv	a5,tp
-   swtch(&p->context, &mycpu()->context);
--    80001e22:	2781                	sext.w	a5,a5
--    80001e24:	079e                	slli	a5,a5,0x7
--    80001e26:	00010597          	auipc	a1,0x10
--    80001e2a:	53258593          	addi	a1,a1,1330 # 80012358 <cpus+0x8>
--    80001e2e:	95be                	add	a1,a1,a5
--    80001e30:	06048513          	addi	a0,s1,96
--    80001e34:	50e000ef          	jal	80002342 <swtch>
--    80001e38:	8792                	mv	a5,tp
-+    80001d70:	2781                	sext.w	a5,a5
-+    80001d72:	079e                	sll	a5,a5,0x7
-+    80001d74:	0000e597          	auipc	a1,0xe
-+    80001d78:	cf458593          	add	a1,a1,-780 # 8000fa68 <cpus+0x8>
-+    80001d7c:	95be                	add	a1,a1,a5
-+    80001d7e:	06048513          	add	a0,s1,96
-+    80001d82:	50e000ef          	jal	80002290 <swtch>
-+    80001d86:	8792                	mv	a5,tp
-   mycpu()->intena = intena;
--    80001e3a:	2781                	sext.w	a5,a5
--    80001e3c:	079e                	slli	a5,a5,0x7
--    80001e3e:	993e                	add	s2,s2,a5
--    80001e40:	0b392623          	sw	s3,172(s2)
--}
--    80001e44:	70a2                	ld	ra,40(sp)
--    80001e46:	7402                	ld	s0,32(sp)
--    80001e48:	64e2                	ld	s1,24(sp)
--    80001e4a:	6942                	ld	s2,16(sp)
--    80001e4c:	69a2                	ld	s3,8(sp)
--    80001e4e:	6145                	addi	sp,sp,48
--    80001e50:	8082                	ret
-+    80001d88:	2781                	sext.w	a5,a5
-+    80001d8a:	079e                	sll	a5,a5,0x7
-+    80001d8c:	993e                	add	s2,s2,a5
-+    80001d8e:	0b392623          	sw	s3,172(s2)
-+}
-+    80001d92:	70a2                	ld	ra,40(sp)
-+    80001d94:	7402                	ld	s0,32(sp)
-+    80001d96:	64e2                	ld	s1,24(sp)
-+    80001d98:	6942                	ld	s2,16(sp)
-+    80001d9a:	69a2                	ld	s3,8(sp)
-+    80001d9c:	6145                	add	sp,sp,48
-+    80001d9e:	8082                	ret
-     panic("sched p->lock");
--    80001e52:	00005517          	auipc	a0,0x5
--    80001e56:	3e650513          	addi	a0,a0,998 # 80007238 <etext+0x238>
--    80001e5a:	93bfe0ef          	jal	80000794 <panic>
-+    80001da0:	00005517          	auipc	a0,0x5
-+    80001da4:	4b050513          	add	a0,a0,1200 # 80007250 <digits+0x218>
-+    80001da8:	9b7fe0ef          	jal	8000075e <panic>
-     panic("sched locks");
--    80001e5e:	00005517          	auipc	a0,0x5
--    80001e62:	3ea50513          	addi	a0,a0,1002 # 80007248 <etext+0x248>
--    80001e66:	92ffe0ef          	jal	80000794 <panic>
-+    80001dac:	00005517          	auipc	a0,0x5
-+    80001db0:	4b450513          	add	a0,a0,1204 # 80007260 <digits+0x228>
-+    80001db4:	9abfe0ef          	jal	8000075e <panic>
-     panic("sched running");
--    80001e6a:	00005517          	auipc	a0,0x5
--    80001e6e:	3ee50513          	addi	a0,a0,1006 # 80007258 <etext+0x258>
--    80001e72:	923fe0ef          	jal	80000794 <panic>
-+    80001db8:	00005517          	auipc	a0,0x5
-+    80001dbc:	4b850513          	add	a0,a0,1208 # 80007270 <digits+0x238>
-+    80001dc0:	99ffe0ef          	jal	8000075e <panic>
-     panic("sched interruptible");
--    80001e76:	00005517          	auipc	a0,0x5
--    80001e7a:	3f250513          	addi	a0,a0,1010 # 80007268 <etext+0x268>
--    80001e7e:	917fe0ef          	jal	80000794 <panic>
-+    80001dc4:	00005517          	auipc	a0,0x5
-+    80001dc8:	4bc50513          	add	a0,a0,1212 # 80007280 <digits+0x248>
-+    80001dcc:	993fe0ef          	jal	8000075e <panic>
- 
--0000000080001e82 <yield>:
-+0000000080001dd0 <yield>:
- {
--    80001e82:	1101                	addi	sp,sp,-32
--    80001e84:	ec06                	sd	ra,24(sp)
--    80001e86:	e822                	sd	s0,16(sp)
--    80001e88:	e426                	sd	s1,8(sp)
--    80001e8a:	1000                	addi	s0,sp,32
-+    80001dd0:	1101                	add	sp,sp,-32
-+    80001dd2:	ec06                	sd	ra,24(sp)
-+    80001dd4:	e822                	sd	s0,16(sp)
-+    80001dd6:	e426                	sd	s1,8(sp)
-+    80001dd8:	1000                	add	s0,sp,32
-   struct proc *p = myproc();
--    80001e8c:	a55ff0ef          	jal	800018e0 <myproc>
--    80001e90:	84aa                	mv	s1,a0
-+    80001dda:	a57ff0ef          	jal	80001830 <myproc>
-+    80001dde:	84aa                	mv	s1,a0
-   acquire(&p->lock);
--    80001e92:	d63fe0ef          	jal	80000bf4 <acquire>
-+    80001de0:	dc1fe0ef          	jal	80000ba0 <acquire>
-   p->state = RUNNABLE;
--    80001e96:	478d                	li	a5,3
--    80001e98:	cc9c                	sw	a5,24(s1)
-+    80001de4:	478d                	li	a5,3
-+    80001de6:	cc9c                	sw	a5,24(s1)
-   sched();
--    80001e9a:	f2fff0ef          	jal	80001dc8 <sched>
-+    80001de8:	f2fff0ef          	jal	80001d16 <sched>
-   release(&p->lock);
--    80001e9e:	8526                	mv	a0,s1
--    80001ea0:	dedfe0ef          	jal	80000c8c <release>
-+    80001dec:	8526                	mv	a0,s1
-+    80001dee:	e4bfe0ef          	jal	80000c38 <release>
- }
--    80001ea4:	60e2                	ld	ra,24(sp)
--    80001ea6:	6442                	ld	s0,16(sp)
--    80001ea8:	64a2                	ld	s1,8(sp)
--    80001eaa:	6105                	addi	sp,sp,32
--    80001eac:	8082                	ret
-+    80001df2:	60e2                	ld	ra,24(sp)
-+    80001df4:	6442                	ld	s0,16(sp)
-+    80001df6:	64a2                	ld	s1,8(sp)
-+    80001df8:	6105                	add	sp,sp,32
-+    80001dfa:	8082                	ret
- 
--0000000080001eae <sleep>:
-+0000000080001dfc <sleep>:
- 
- /* Atomically release lock and sleep on chan. */
- /* Reacquires lock when awakened. */
- void
- sleep(void *chan, struct spinlock *lk)
- {
--    80001eae:	7179                	addi	sp,sp,-48
--    80001eb0:	f406                	sd	ra,40(sp)
--    80001eb2:	f022                	sd	s0,32(sp)
--    80001eb4:	ec26                	sd	s1,24(sp)
--    80001eb6:	e84a                	sd	s2,16(sp)
--    80001eb8:	e44e                	sd	s3,8(sp)
--    80001eba:	1800                	addi	s0,sp,48
--    80001ebc:	89aa                	mv	s3,a0
--    80001ebe:	892e                	mv	s2,a1
-+    80001dfc:	7179                	add	sp,sp,-48
-+    80001dfe:	f406                	sd	ra,40(sp)
-+    80001e00:	f022                	sd	s0,32(sp)
-+    80001e02:	ec26                	sd	s1,24(sp)
-+    80001e04:	e84a                	sd	s2,16(sp)
-+    80001e06:	e44e                	sd	s3,8(sp)
-+    80001e08:	1800                	add	s0,sp,48
-+    80001e0a:	89aa                	mv	s3,a0
-+    80001e0c:	892e                	mv	s2,a1
-   struct proc *p = myproc();
--    80001ec0:	a21ff0ef          	jal	800018e0 <myproc>
--    80001ec4:	84aa                	mv	s1,a0
-+    80001e0e:	a23ff0ef          	jal	80001830 <myproc>
-+    80001e12:	84aa                	mv	s1,a0
-   /* Once we hold p->lock, we can be */
-   /* guaranteed that we won't miss any wakeup */
-   /* (wakeup locks p->lock), */
-   /* so it's okay to release lk. */
- 
-   acquire(&p->lock);  /*DOC: sleeplock1 */
--    80001ec6:	d2ffe0ef          	jal	80000bf4 <acquire>
-+    80001e14:	d8dfe0ef          	jal	80000ba0 <acquire>
-   release(lk);
--    80001eca:	854a                	mv	a0,s2
--    80001ecc:	dc1fe0ef          	jal	80000c8c <release>
-+    80001e18:	854a                	mv	a0,s2
-+    80001e1a:	e1ffe0ef          	jal	80000c38 <release>
- 
-   /* Go to sleep. */
-   p->chan = chan;
--    80001ed0:	0334b023          	sd	s3,32(s1)
-+    80001e1e:	0334b023          	sd	s3,32(s1)
-   p->state = SLEEPING;
--    80001ed4:	4789                	li	a5,2
--    80001ed6:	cc9c                	sw	a5,24(s1)
-+    80001e22:	4789                	li	a5,2
-+    80001e24:	cc9c                	sw	a5,24(s1)
- 
-   sched();
--    80001ed8:	ef1ff0ef          	jal	80001dc8 <sched>
-+    80001e26:	ef1ff0ef          	jal	80001d16 <sched>
- 
-   /* Tidy up. */
-   p->chan = 0;
--    80001edc:	0204b023          	sd	zero,32(s1)
-+    80001e2a:	0204b023          	sd	zero,32(s1)
- 
-   /* Reacquire original lock. */
-   release(&p->lock);
--    80001ee0:	8526                	mv	a0,s1
--    80001ee2:	dabfe0ef          	jal	80000c8c <release>
-+    80001e2e:	8526                	mv	a0,s1
-+    80001e30:	e09fe0ef          	jal	80000c38 <release>
-   acquire(lk);
--    80001ee6:	854a                	mv	a0,s2
--    80001ee8:	d0dfe0ef          	jal	80000bf4 <acquire>
-+    80001e34:	854a                	mv	a0,s2
-+    80001e36:	d6bfe0ef          	jal	80000ba0 <acquire>
- }
--    80001eec:	70a2                	ld	ra,40(sp)
--    80001eee:	7402                	ld	s0,32(sp)
--    80001ef0:	64e2                	ld	s1,24(sp)
--    80001ef2:	6942                	ld	s2,16(sp)
--    80001ef4:	69a2                	ld	s3,8(sp)
--    80001ef6:	6145                	addi	sp,sp,48
--    80001ef8:	8082                	ret
-+    80001e3a:	70a2                	ld	ra,40(sp)
-+    80001e3c:	7402                	ld	s0,32(sp)
-+    80001e3e:	64e2                	ld	s1,24(sp)
-+    80001e40:	6942                	ld	s2,16(sp)
-+    80001e42:	69a2                	ld	s3,8(sp)
-+    80001e44:	6145                	add	sp,sp,48
-+    80001e46:	8082                	ret
- 
--0000000080001efa <wakeup>:
-+0000000080001e48 <wakeup>:
- 
- /* Wake up all processes sleeping on chan. */
- /* Must be called without any p->lock. */
- void
- wakeup(void *chan)
- {
--    80001efa:	7139                	addi	sp,sp,-64
--    80001efc:	fc06                	sd	ra,56(sp)
--    80001efe:	f822                	sd	s0,48(sp)
--    80001f00:	f426                	sd	s1,40(sp)
--    80001f02:	f04a                	sd	s2,32(sp)
--    80001f04:	ec4e                	sd	s3,24(sp)
--    80001f06:	e852                	sd	s4,16(sp)
--    80001f08:	e456                	sd	s5,8(sp)
--    80001f0a:	0080                	addi	s0,sp,64
--    80001f0c:	8a2a                	mv	s4,a0
-+    80001e48:	7139                	add	sp,sp,-64
-+    80001e4a:	fc06                	sd	ra,56(sp)
-+    80001e4c:	f822                	sd	s0,48(sp)
-+    80001e4e:	f426                	sd	s1,40(sp)
-+    80001e50:	f04a                	sd	s2,32(sp)
-+    80001e52:	ec4e                	sd	s3,24(sp)
-+    80001e54:	e852                	sd	s4,16(sp)
-+    80001e56:	e456                	sd	s5,8(sp)
-+    80001e58:	0080                	add	s0,sp,64
-+    80001e5a:	8a2a                	mv	s4,a0
-   struct proc *p;
- 
-   for(p = proc; p < &proc[NPROC]; p++) {
--    80001f0e:	00011497          	auipc	s1,0x11
--    80001f12:	84248493          	addi	s1,s1,-1982 # 80012750 <proc>
-+    80001e5c:	0000e497          	auipc	s1,0xe
-+    80001e60:	00448493          	add	s1,s1,4 # 8000fe60 <proc>
-     if(p != myproc()){
-       acquire(&p->lock);
-       if(p->state == SLEEPING && p->chan == chan) {
--    80001f16:	4989                	li	s3,2
-+    80001e64:	4989                	li	s3,2
-         p->state = RUNNABLE;
--    80001f18:	4a8d                	li	s5,3
-+    80001e66:	4a8d                	li	s5,3
-   for(p = proc; p < &proc[NPROC]; p++) {
--    80001f1a:	00016917          	auipc	s2,0x16
--    80001f1e:	23690913          	addi	s2,s2,566 # 80018150 <tickslock>
--    80001f22:	a801                	j	80001f32 <wakeup+0x38>
-+    80001e68:	00014917          	auipc	s2,0x14
-+    80001e6c:	9f890913          	add	s2,s2,-1544 # 80015860 <tickslock>
-+    80001e70:	a801                	j	80001e80 <wakeup+0x38>
-       }
-       release(&p->lock);
--    80001f24:	8526                	mv	a0,s1
--    80001f26:	d67fe0ef          	jal	80000c8c <release>
-+    80001e72:	8526                	mv	a0,s1
-+    80001e74:	dc5fe0ef          	jal	80000c38 <release>
-   for(p = proc; p < &proc[NPROC]; p++) {
--    80001f2a:	16848493          	addi	s1,s1,360
--    80001f2e:	03248263          	beq	s1,s2,80001f52 <wakeup+0x58>
-+    80001e78:	16848493          	add	s1,s1,360
-+    80001e7c:	03248263          	beq	s1,s2,80001ea0 <wakeup+0x58>
-     if(p != myproc()){
--    80001f32:	9afff0ef          	jal	800018e0 <myproc>
--    80001f36:	fea48ae3          	beq	s1,a0,80001f2a <wakeup+0x30>
-+    80001e80:	9b1ff0ef          	jal	80001830 <myproc>
-+    80001e84:	fea48ae3          	beq	s1,a0,80001e78 <wakeup+0x30>
-       acquire(&p->lock);
--    80001f3a:	8526                	mv	a0,s1
--    80001f3c:	cb9fe0ef          	jal	80000bf4 <acquire>
-+    80001e88:	8526                	mv	a0,s1
-+    80001e8a:	d17fe0ef          	jal	80000ba0 <acquire>
-       if(p->state == SLEEPING && p->chan == chan) {
--    80001f40:	4c9c                	lw	a5,24(s1)
--    80001f42:	ff3791e3          	bne	a5,s3,80001f24 <wakeup+0x2a>
--    80001f46:	709c                	ld	a5,32(s1)
--    80001f48:	fd479ee3          	bne	a5,s4,80001f24 <wakeup+0x2a>
-+    80001e8e:	4c9c                	lw	a5,24(s1)
-+    80001e90:	ff3791e3          	bne	a5,s3,80001e72 <wakeup+0x2a>
-+    80001e94:	709c                	ld	a5,32(s1)
-+    80001e96:	fd479ee3          	bne	a5,s4,80001e72 <wakeup+0x2a>
-         p->state = RUNNABLE;
--    80001f4c:	0154ac23          	sw	s5,24(s1)
--    80001f50:	bfd1                	j	80001f24 <wakeup+0x2a>
-+    80001e9a:	0154ac23          	sw	s5,24(s1)
-+    80001e9e:	bfd1                	j	80001e72 <wakeup+0x2a>
-     }
-   }
- }
--    80001f52:	70e2                	ld	ra,56(sp)
--    80001f54:	7442                	ld	s0,48(sp)
--    80001f56:	74a2                	ld	s1,40(sp)
--    80001f58:	7902                	ld	s2,32(sp)
--    80001f5a:	69e2                	ld	s3,24(sp)
--    80001f5c:	6a42                	ld	s4,16(sp)
--    80001f5e:	6aa2                	ld	s5,8(sp)
--    80001f60:	6121                	addi	sp,sp,64
--    80001f62:	8082                	ret
--
--0000000080001f64 <reparent>:
--{
--    80001f64:	7179                	addi	sp,sp,-48
--    80001f66:	f406                	sd	ra,40(sp)
--    80001f68:	f022                	sd	s0,32(sp)
--    80001f6a:	ec26                	sd	s1,24(sp)
--    80001f6c:	e84a                	sd	s2,16(sp)
--    80001f6e:	e44e                	sd	s3,8(sp)
--    80001f70:	e052                	sd	s4,0(sp)
--    80001f72:	1800                	addi	s0,sp,48
--    80001f74:	892a                	mv	s2,a0
-+    80001ea0:	70e2                	ld	ra,56(sp)
-+    80001ea2:	7442                	ld	s0,48(sp)
-+    80001ea4:	74a2                	ld	s1,40(sp)
-+    80001ea6:	7902                	ld	s2,32(sp)
-+    80001ea8:	69e2                	ld	s3,24(sp)
-+    80001eaa:	6a42                	ld	s4,16(sp)
-+    80001eac:	6aa2                	ld	s5,8(sp)
-+    80001eae:	6121                	add	sp,sp,64
-+    80001eb0:	8082                	ret
-+
-+0000000080001eb2 <reparent>:
-+{
-+    80001eb2:	7179                	add	sp,sp,-48
-+    80001eb4:	f406                	sd	ra,40(sp)
-+    80001eb6:	f022                	sd	s0,32(sp)
-+    80001eb8:	ec26                	sd	s1,24(sp)
-+    80001eba:	e84a                	sd	s2,16(sp)
-+    80001ebc:	e44e                	sd	s3,8(sp)
-+    80001ebe:	e052                	sd	s4,0(sp)
-+    80001ec0:	1800                	add	s0,sp,48
-+    80001ec2:	892a                	mv	s2,a0
-   for(pp = proc; pp < &proc[NPROC]; pp++){
--    80001f76:	00010497          	auipc	s1,0x10
--    80001f7a:	7da48493          	addi	s1,s1,2010 # 80012750 <proc>
-+    80001ec4:	0000e497          	auipc	s1,0xe
-+    80001ec8:	f9c48493          	add	s1,s1,-100 # 8000fe60 <proc>
-       pp->parent = initproc;
--    80001f7e:	00008a17          	auipc	s4,0x8
--    80001f82:	26aa0a13          	addi	s4,s4,618 # 8000a1e8 <initproc>
-+    80001ecc:	00006a17          	auipc	s4,0x6
-+    80001ed0:	a2ca0a13          	add	s4,s4,-1492 # 800078f8 <initproc>
-   for(pp = proc; pp < &proc[NPROC]; pp++){
--    80001f86:	00016997          	auipc	s3,0x16
--    80001f8a:	1ca98993          	addi	s3,s3,458 # 80018150 <tickslock>
--    80001f8e:	a029                	j	80001f98 <reparent+0x34>
--    80001f90:	16848493          	addi	s1,s1,360
--    80001f94:	01348b63          	beq	s1,s3,80001faa <reparent+0x46>
-+    80001ed4:	00014997          	auipc	s3,0x14
-+    80001ed8:	98c98993          	add	s3,s3,-1652 # 80015860 <tickslock>
-+    80001edc:	a029                	j	80001ee6 <reparent+0x34>
-+    80001ede:	16848493          	add	s1,s1,360
-+    80001ee2:	01348b63          	beq	s1,s3,80001ef8 <reparent+0x46>
-     if(pp->parent == p){
--    80001f98:	7c9c                	ld	a5,56(s1)
--    80001f9a:	ff279be3          	bne	a5,s2,80001f90 <reparent+0x2c>
-+    80001ee6:	7c9c                	ld	a5,56(s1)
-+    80001ee8:	ff279be3          	bne	a5,s2,80001ede <reparent+0x2c>
-       pp->parent = initproc;
--    80001f9e:	000a3503          	ld	a0,0(s4)
--    80001fa2:	fc88                	sd	a0,56(s1)
-+    80001eec:	000a3503          	ld	a0,0(s4)
-+    80001ef0:	fc88                	sd	a0,56(s1)
-       wakeup(initproc);
--    80001fa4:	f57ff0ef          	jal	80001efa <wakeup>
--    80001fa8:	b7e5                	j	80001f90 <reparent+0x2c>
--}
--    80001faa:	70a2                	ld	ra,40(sp)
--    80001fac:	7402                	ld	s0,32(sp)
--    80001fae:	64e2                	ld	s1,24(sp)
--    80001fb0:	6942                	ld	s2,16(sp)
--    80001fb2:	69a2                	ld	s3,8(sp)
--    80001fb4:	6a02                	ld	s4,0(sp)
--    80001fb6:	6145                	addi	sp,sp,48
--    80001fb8:	8082                	ret
--
--0000000080001fba <exit>:
--{
--    80001fba:	7179                	addi	sp,sp,-48
--    80001fbc:	f406                	sd	ra,40(sp)
--    80001fbe:	f022                	sd	s0,32(sp)
--    80001fc0:	ec26                	sd	s1,24(sp)
--    80001fc2:	e84a                	sd	s2,16(sp)
--    80001fc4:	e44e                	sd	s3,8(sp)
--    80001fc6:	e052                	sd	s4,0(sp)
--    80001fc8:	1800                	addi	s0,sp,48
--    80001fca:	8a2a                	mv	s4,a0
-+    80001ef2:	f57ff0ef          	jal	80001e48 <wakeup>
-+    80001ef6:	b7e5                	j	80001ede <reparent+0x2c>
-+}
-+    80001ef8:	70a2                	ld	ra,40(sp)
-+    80001efa:	7402                	ld	s0,32(sp)
-+    80001efc:	64e2                	ld	s1,24(sp)
-+    80001efe:	6942                	ld	s2,16(sp)
-+    80001f00:	69a2                	ld	s3,8(sp)
-+    80001f02:	6a02                	ld	s4,0(sp)
-+    80001f04:	6145                	add	sp,sp,48
-+    80001f06:	8082                	ret
-+
-+0000000080001f08 <exit>:
-+{
-+    80001f08:	7179                	add	sp,sp,-48
-+    80001f0a:	f406                	sd	ra,40(sp)
-+    80001f0c:	f022                	sd	s0,32(sp)
-+    80001f0e:	ec26                	sd	s1,24(sp)
-+    80001f10:	e84a                	sd	s2,16(sp)
-+    80001f12:	e44e                	sd	s3,8(sp)
-+    80001f14:	e052                	sd	s4,0(sp)
-+    80001f16:	1800                	add	s0,sp,48
-+    80001f18:	8a2a                	mv	s4,a0
-   struct proc *p = myproc();
--    80001fcc:	915ff0ef          	jal	800018e0 <myproc>
--    80001fd0:	89aa                	mv	s3,a0
-+    80001f1a:	917ff0ef          	jal	80001830 <myproc>
-+    80001f1e:	89aa                	mv	s3,a0
-   if(p == initproc)
--    80001fd2:	00008797          	auipc	a5,0x8
--    80001fd6:	2167b783          	ld	a5,534(a5) # 8000a1e8 <initproc>
--    80001fda:	0d050493          	addi	s1,a0,208
--    80001fde:	15050913          	addi	s2,a0,336
--    80001fe2:	00a79f63          	bne	a5,a0,80002000 <exit+0x46>
-+    80001f20:	00006797          	auipc	a5,0x6
-+    80001f24:	9d87b783          	ld	a5,-1576(a5) # 800078f8 <initproc>
-+    80001f28:	0d050493          	add	s1,a0,208
-+    80001f2c:	15050913          	add	s2,a0,336
-+    80001f30:	00a79f63          	bne	a5,a0,80001f4e <exit+0x46>
-     panic("init exiting");
--    80001fe6:	00005517          	auipc	a0,0x5
--    80001fea:	29a50513          	addi	a0,a0,666 # 80007280 <etext+0x280>
--    80001fee:	fa6fe0ef          	jal	80000794 <panic>
-+    80001f34:	00005517          	auipc	a0,0x5
-+    80001f38:	36450513          	add	a0,a0,868 # 80007298 <digits+0x260>
-+    80001f3c:	823fe0ef          	jal	8000075e <panic>
-       fileclose(f);
--    80001ff2:	67f010ef          	jal	80003e70 <fileclose>
-+    80001f40:	625010ef          	jal	80003d64 <fileclose>
-       p->ofile[fd] = 0;
--    80001ff6:	0004b023          	sd	zero,0(s1)
-+    80001f44:	0004b023          	sd	zero,0(s1)
-   for(int fd = 0; fd < NOFILE; fd++){
--    80001ffa:	04a1                	addi	s1,s1,8
--    80001ffc:	01248563          	beq	s1,s2,80002006 <exit+0x4c>
-+    80001f48:	04a1                	add	s1,s1,8
-+    80001f4a:	01248563          	beq	s1,s2,80001f54 <exit+0x4c>
-     if(p->ofile[fd]){
--    80002000:	6088                	ld	a0,0(s1)
--    80002002:	f965                	bnez	a0,80001ff2 <exit+0x38>
--    80002004:	bfdd                	j	80001ffa <exit+0x40>
-+    80001f4e:	6088                	ld	a0,0(s1)
-+    80001f50:	f965                	bnez	a0,80001f40 <exit+0x38>
-+    80001f52:	bfdd                	j	80001f48 <exit+0x40>
-   begin_op();
--    80002006:	251010ef          	jal	80003a56 <begin_op>
-+    80001f54:	1fd010ef          	jal	80003950 <begin_op>
-   iput(p->cwd);
--    8000200a:	1509b503          	ld	a0,336(s3)
--    8000200e:	334010ef          	jal	80003342 <iput>
-+    80001f58:	1509b503          	ld	a0,336(s3)
-+    80001f5c:	304010ef          	jal	80003260 <iput>
-   end_op();
--    80002012:	2af010ef          	jal	80003ac0 <end_op>
-+    80001f60:	25b010ef          	jal	800039ba <end_op>
-   p->cwd = 0;
--    80002016:	1409b823          	sd	zero,336(s3)
-+    80001f64:	1409b823          	sd	zero,336(s3)
-   acquire(&wait_lock);
--    8000201a:	00010497          	auipc	s1,0x10
--    8000201e:	31e48493          	addi	s1,s1,798 # 80012338 <wait_lock>
--    80002022:	8526                	mv	a0,s1
--    80002024:	bd1fe0ef          	jal	80000bf4 <acquire>
-+    80001f68:	0000e497          	auipc	s1,0xe
-+    80001f6c:	ae048493          	add	s1,s1,-1312 # 8000fa48 <wait_lock>
-+    80001f70:	8526                	mv	a0,s1
-+    80001f72:	c2ffe0ef          	jal	80000ba0 <acquire>
-   reparent(p);
--    80002028:	854e                	mv	a0,s3
--    8000202a:	f3bff0ef          	jal	80001f64 <reparent>
-+    80001f76:	854e                	mv	a0,s3
-+    80001f78:	f3bff0ef          	jal	80001eb2 <reparent>
-   wakeup(p->parent);
--    8000202e:	0389b503          	ld	a0,56(s3)
--    80002032:	ec9ff0ef          	jal	80001efa <wakeup>
-+    80001f7c:	0389b503          	ld	a0,56(s3)
-+    80001f80:	ec9ff0ef          	jal	80001e48 <wakeup>
-   acquire(&p->lock);
--    80002036:	854e                	mv	a0,s3
--    80002038:	bbdfe0ef          	jal	80000bf4 <acquire>
-+    80001f84:	854e                	mv	a0,s3
-+    80001f86:	c1bfe0ef          	jal	80000ba0 <acquire>
-   p->xstate = status;
--    8000203c:	0349a623          	sw	s4,44(s3)
-+    80001f8a:	0349a623          	sw	s4,44(s3)
-   p->state = ZOMBIE;
--    80002040:	4795                	li	a5,5
--    80002042:	00f9ac23          	sw	a5,24(s3)
-+    80001f8e:	4795                	li	a5,5
-+    80001f90:	00f9ac23          	sw	a5,24(s3)
-   release(&wait_lock);
--    80002046:	8526                	mv	a0,s1
--    80002048:	c45fe0ef          	jal	80000c8c <release>
-+    80001f94:	8526                	mv	a0,s1
-+    80001f96:	ca3fe0ef          	jal	80000c38 <release>
-   sched();
--    8000204c:	d7dff0ef          	jal	80001dc8 <sched>
-+    80001f9a:	d7dff0ef          	jal	80001d16 <sched>
-   panic("zombie exit");
--    80002050:	00005517          	auipc	a0,0x5
--    80002054:	24050513          	addi	a0,a0,576 # 80007290 <etext+0x290>
--    80002058:	f3cfe0ef          	jal	80000794 <panic>
-+    80001f9e:	00005517          	auipc	a0,0x5
-+    80001fa2:	30a50513          	add	a0,a0,778 # 800072a8 <digits+0x270>
-+    80001fa6:	fb8fe0ef          	jal	8000075e <panic>
- 
--000000008000205c <kill>:
-+0000000080001faa <kill>:
- /* Kill the process with the given pid. */
- /* The victim won't exit until it tries to return */
- /* to user space (see usertrap() in trap.c). */
- int
- kill(int pid)
- {
--    8000205c:	7179                	addi	sp,sp,-48
--    8000205e:	f406                	sd	ra,40(sp)
--    80002060:	f022                	sd	s0,32(sp)
--    80002062:	ec26                	sd	s1,24(sp)
--    80002064:	e84a                	sd	s2,16(sp)
--    80002066:	e44e                	sd	s3,8(sp)
--    80002068:	1800                	addi	s0,sp,48
--    8000206a:	892a                	mv	s2,a0
-+    80001faa:	7179                	add	sp,sp,-48
-+    80001fac:	f406                	sd	ra,40(sp)
-+    80001fae:	f022                	sd	s0,32(sp)
-+    80001fb0:	ec26                	sd	s1,24(sp)
-+    80001fb2:	e84a                	sd	s2,16(sp)
-+    80001fb4:	e44e                	sd	s3,8(sp)
-+    80001fb6:	1800                	add	s0,sp,48
-+    80001fb8:	892a                	mv	s2,a0
-   struct proc *p;
- 
-   for(p = proc; p < &proc[NPROC]; p++){
--    8000206c:	00010497          	auipc	s1,0x10
--    80002070:	6e448493          	addi	s1,s1,1764 # 80012750 <proc>
--    80002074:	00016997          	auipc	s3,0x16
--    80002078:	0dc98993          	addi	s3,s3,220 # 80018150 <tickslock>
-+    80001fba:	0000e497          	auipc	s1,0xe
-+    80001fbe:	ea648493          	add	s1,s1,-346 # 8000fe60 <proc>
-+    80001fc2:	00014997          	auipc	s3,0x14
-+    80001fc6:	89e98993          	add	s3,s3,-1890 # 80015860 <tickslock>
-     acquire(&p->lock);
--    8000207c:	8526                	mv	a0,s1
--    8000207e:	b77fe0ef          	jal	80000bf4 <acquire>
-+    80001fca:	8526                	mv	a0,s1
-+    80001fcc:	bd5fe0ef          	jal	80000ba0 <acquire>
-     if(p->pid == pid){
--    80002082:	589c                	lw	a5,48(s1)
--    80002084:	01278b63          	beq	a5,s2,8000209a <kill+0x3e>
-+    80001fd0:	589c                	lw	a5,48(s1)
-+    80001fd2:	01278b63          	beq	a5,s2,80001fe8 <kill+0x3e>
-         p->state = RUNNABLE;
-       }
-       release(&p->lock);
-       return 0;
-     }
-     release(&p->lock);
--    80002088:	8526                	mv	a0,s1
--    8000208a:	c03fe0ef          	jal	80000c8c <release>
-+    80001fd6:	8526                	mv	a0,s1
-+    80001fd8:	c61fe0ef          	jal	80000c38 <release>
-   for(p = proc; p < &proc[NPROC]; p++){
--    8000208e:	16848493          	addi	s1,s1,360
--    80002092:	ff3495e3          	bne	s1,s3,8000207c <kill+0x20>
-+    80001fdc:	16848493          	add	s1,s1,360
-+    80001fe0:	ff3495e3          	bne	s1,s3,80001fca <kill+0x20>
-   }
-   return -1;
--    80002096:	557d                	li	a0,-1
--    80002098:	a819                	j	800020ae <kill+0x52>
-+    80001fe4:	557d                	li	a0,-1
-+    80001fe6:	a819                	j	80001ffc <kill+0x52>
-       p->killed = 1;
--    8000209a:	4785                	li	a5,1
--    8000209c:	d49c                	sw	a5,40(s1)
-+    80001fe8:	4785                	li	a5,1
-+    80001fea:	d49c                	sw	a5,40(s1)
-       if(p->state == SLEEPING){
--    8000209e:	4c98                	lw	a4,24(s1)
--    800020a0:	4789                	li	a5,2
--    800020a2:	00f70d63          	beq	a4,a5,800020bc <kill+0x60>
-+    80001fec:	4c98                	lw	a4,24(s1)
-+    80001fee:	4789                	li	a5,2
-+    80001ff0:	00f70d63          	beq	a4,a5,8000200a <kill+0x60>
-       release(&p->lock);
--    800020a6:	8526                	mv	a0,s1
--    800020a8:	be5fe0ef          	jal	80000c8c <release>
-+    80001ff4:	8526                	mv	a0,s1
-+    80001ff6:	c43fe0ef          	jal	80000c38 <release>
-       return 0;
--    800020ac:	4501                	li	a0,0
--}
--    800020ae:	70a2                	ld	ra,40(sp)
--    800020b0:	7402                	ld	s0,32(sp)
--    800020b2:	64e2                	ld	s1,24(sp)
--    800020b4:	6942                	ld	s2,16(sp)
--    800020b6:	69a2                	ld	s3,8(sp)
--    800020b8:	6145                	addi	sp,sp,48
--    800020ba:	8082                	ret
-+    80001ffa:	4501                	li	a0,0
-+}
-+    80001ffc:	70a2                	ld	ra,40(sp)
-+    80001ffe:	7402                	ld	s0,32(sp)
-+    80002000:	64e2                	ld	s1,24(sp)
-+    80002002:	6942                	ld	s2,16(sp)
-+    80002004:	69a2                	ld	s3,8(sp)
-+    80002006:	6145                	add	sp,sp,48
-+    80002008:	8082                	ret
-         p->state = RUNNABLE;
--    800020bc:	478d                	li	a5,3
--    800020be:	cc9c                	sw	a5,24(s1)
--    800020c0:	b7dd                	j	800020a6 <kill+0x4a>
-+    8000200a:	478d                	li	a5,3
-+    8000200c:	cc9c                	sw	a5,24(s1)
-+    8000200e:	b7dd                	j	80001ff4 <kill+0x4a>
- 
--00000000800020c2 <setkilled>:
-+0000000080002010 <setkilled>:
- 
- void
- setkilled(struct proc *p)
- {
--    800020c2:	1101                	addi	sp,sp,-32
--    800020c4:	ec06                	sd	ra,24(sp)
--    800020c6:	e822                	sd	s0,16(sp)
--    800020c8:	e426                	sd	s1,8(sp)
--    800020ca:	1000                	addi	s0,sp,32
--    800020cc:	84aa                	mv	s1,a0
-+    80002010:	1101                	add	sp,sp,-32
-+    80002012:	ec06                	sd	ra,24(sp)
-+    80002014:	e822                	sd	s0,16(sp)
-+    80002016:	e426                	sd	s1,8(sp)
-+    80002018:	1000                	add	s0,sp,32
-+    8000201a:	84aa                	mv	s1,a0
-   acquire(&p->lock);
--    800020ce:	b27fe0ef          	jal	80000bf4 <acquire>
-+    8000201c:	b85fe0ef          	jal	80000ba0 <acquire>
-   p->killed = 1;
--    800020d2:	4785                	li	a5,1
--    800020d4:	d49c                	sw	a5,40(s1)
-+    80002020:	4785                	li	a5,1
-+    80002022:	d49c                	sw	a5,40(s1)
-   release(&p->lock);
--    800020d6:	8526                	mv	a0,s1
--    800020d8:	bb5fe0ef          	jal	80000c8c <release>
-+    80002024:	8526                	mv	a0,s1
-+    80002026:	c13fe0ef          	jal	80000c38 <release>
- }
--    800020dc:	60e2                	ld	ra,24(sp)
--    800020de:	6442                	ld	s0,16(sp)
--    800020e0:	64a2                	ld	s1,8(sp)
--    800020e2:	6105                	addi	sp,sp,32
--    800020e4:	8082                	ret
-+    8000202a:	60e2                	ld	ra,24(sp)
-+    8000202c:	6442                	ld	s0,16(sp)
-+    8000202e:	64a2                	ld	s1,8(sp)
-+    80002030:	6105                	add	sp,sp,32
-+    80002032:	8082                	ret
- 
--00000000800020e6 <killed>:
-+0000000080002034 <killed>:
- 
- int
- killed(struct proc *p)
- {
--    800020e6:	1101                	addi	sp,sp,-32
--    800020e8:	ec06                	sd	ra,24(sp)
--    800020ea:	e822                	sd	s0,16(sp)
--    800020ec:	e426                	sd	s1,8(sp)
--    800020ee:	e04a                	sd	s2,0(sp)
--    800020f0:	1000                	addi	s0,sp,32
--    800020f2:	84aa                	mv	s1,a0
-+    80002034:	1101                	add	sp,sp,-32
-+    80002036:	ec06                	sd	ra,24(sp)
-+    80002038:	e822                	sd	s0,16(sp)
-+    8000203a:	e426                	sd	s1,8(sp)
-+    8000203c:	e04a                	sd	s2,0(sp)
-+    8000203e:	1000                	add	s0,sp,32
-+    80002040:	84aa                	mv	s1,a0
-   int k;
-   
-   acquire(&p->lock);
--    800020f4:	b01fe0ef          	jal	80000bf4 <acquire>
-+    80002042:	b5ffe0ef          	jal	80000ba0 <acquire>
-   k = p->killed;
--    800020f8:	0284a903          	lw	s2,40(s1)
-+    80002046:	0284a903          	lw	s2,40(s1)
-   release(&p->lock);
--    800020fc:	8526                	mv	a0,s1
--    800020fe:	b8ffe0ef          	jal	80000c8c <release>
-+    8000204a:	8526                	mv	a0,s1
-+    8000204c:	bedfe0ef          	jal	80000c38 <release>
-   return k;
- }
--    80002102:	854a                	mv	a0,s2
--    80002104:	60e2                	ld	ra,24(sp)
--    80002106:	6442                	ld	s0,16(sp)
--    80002108:	64a2                	ld	s1,8(sp)
--    8000210a:	6902                	ld	s2,0(sp)
--    8000210c:	6105                	addi	sp,sp,32
--    8000210e:	8082                	ret
--
--0000000080002110 <wait>:
--{
--    80002110:	715d                	addi	sp,sp,-80
--    80002112:	e486                	sd	ra,72(sp)
--    80002114:	e0a2                	sd	s0,64(sp)
--    80002116:	fc26                	sd	s1,56(sp)
--    80002118:	f84a                	sd	s2,48(sp)
--    8000211a:	f44e                	sd	s3,40(sp)
--    8000211c:	f052                	sd	s4,32(sp)
--    8000211e:	ec56                	sd	s5,24(sp)
--    80002120:	e85a                	sd	s6,16(sp)
--    80002122:	e45e                	sd	s7,8(sp)
--    80002124:	e062                	sd	s8,0(sp)
--    80002126:	0880                	addi	s0,sp,80
--    80002128:	8b2a                	mv	s6,a0
-+    80002050:	854a                	mv	a0,s2
-+    80002052:	60e2                	ld	ra,24(sp)
-+    80002054:	6442                	ld	s0,16(sp)
-+    80002056:	64a2                	ld	s1,8(sp)
-+    80002058:	6902                	ld	s2,0(sp)
-+    8000205a:	6105                	add	sp,sp,32
-+    8000205c:	8082                	ret
-+
-+000000008000205e <wait>:
-+{
-+    8000205e:	715d                	add	sp,sp,-80
-+    80002060:	e486                	sd	ra,72(sp)
-+    80002062:	e0a2                	sd	s0,64(sp)
-+    80002064:	fc26                	sd	s1,56(sp)
-+    80002066:	f84a                	sd	s2,48(sp)
-+    80002068:	f44e                	sd	s3,40(sp)
-+    8000206a:	f052                	sd	s4,32(sp)
-+    8000206c:	ec56                	sd	s5,24(sp)
-+    8000206e:	e85a                	sd	s6,16(sp)
-+    80002070:	e45e                	sd	s7,8(sp)
-+    80002072:	e062                	sd	s8,0(sp)
-+    80002074:	0880                	add	s0,sp,80
-+    80002076:	8b2a                	mv	s6,a0
-   struct proc *p = myproc();
--    8000212a:	fb6ff0ef          	jal	800018e0 <myproc>
--    8000212e:	892a                	mv	s2,a0
-+    80002078:	fb8ff0ef          	jal	80001830 <myproc>
-+    8000207c:	892a                	mv	s2,a0
-   acquire(&wait_lock);
--    80002130:	00010517          	auipc	a0,0x10
--    80002134:	20850513          	addi	a0,a0,520 # 80012338 <wait_lock>
--    80002138:	abdfe0ef          	jal	80000bf4 <acquire>
-+    8000207e:	0000e517          	auipc	a0,0xe
-+    80002082:	9ca50513          	add	a0,a0,-1590 # 8000fa48 <wait_lock>
-+    80002086:	b1bfe0ef          	jal	80000ba0 <acquire>
-     havekids = 0;
--    8000213c:	4b81                	li	s7,0
-+    8000208a:	4b81                	li	s7,0
-         if(pp->state == ZOMBIE){
--    8000213e:	4a15                	li	s4,5
-+    8000208c:	4a15                	li	s4,5
-         havekids = 1;
--    80002140:	4a85                	li	s5,1
-+    8000208e:	4a85                	li	s5,1
-     for(pp = proc; pp < &proc[NPROC]; pp++){
--    80002142:	00016997          	auipc	s3,0x16
--    80002146:	00e98993          	addi	s3,s3,14 # 80018150 <tickslock>
-+    80002090:	00013997          	auipc	s3,0x13
-+    80002094:	7d098993          	add	s3,s3,2000 # 80015860 <tickslock>
-     sleep(p, &wait_lock);  /*DOC: wait-sleep */
--    8000214a:	00010c17          	auipc	s8,0x10
--    8000214e:	1eec0c13          	addi	s8,s8,494 # 80012338 <wait_lock>
--    80002152:	a871                	j	800021ee <wait+0xde>
-+    80002098:	0000ec17          	auipc	s8,0xe
-+    8000209c:	9b0c0c13          	add	s8,s8,-1616 # 8000fa48 <wait_lock>
-+    800020a0:	a871                	j	8000213c <wait+0xde>
-           pid = pp->pid;
--    80002154:	0304a983          	lw	s3,48(s1)
-+    800020a2:	0304a983          	lw	s3,48(s1)
-           if(addr != 0 && copyout(p->pagetable, addr, (char *)&pp->xstate,
--    80002158:	000b0c63          	beqz	s6,80002170 <wait+0x60>
--    8000215c:	4691                	li	a3,4
--    8000215e:	02c48613          	addi	a2,s1,44
--    80002162:	85da                	mv	a1,s6
--    80002164:	05093503          	ld	a0,80(s2)
--    80002168:	beaff0ef          	jal	80001552 <copyout>
--    8000216c:	02054b63          	bltz	a0,800021a2 <wait+0x92>
-+    800020a6:	000b0c63          	beqz	s6,800020be <wait+0x60>
-+    800020aa:	4691                	li	a3,4
-+    800020ac:	02c48613          	add	a2,s1,44
-+    800020b0:	85da                	mv	a1,s6
-+    800020b2:	05093503          	ld	a0,80(s2)
-+    800020b6:	c32ff0ef          	jal	800014e8 <copyout>
-+    800020ba:	02054b63          	bltz	a0,800020f0 <wait+0x92>
-           freeproc(pp);
--    80002170:	8526                	mv	a0,s1
--    80002172:	8e1ff0ef          	jal	80001a52 <freeproc>
-+    800020be:	8526                	mv	a0,s1
-+    800020c0:	8e3ff0ef          	jal	800019a2 <freeproc>
-           release(&pp->lock);
--    80002176:	8526                	mv	a0,s1
--    80002178:	b15fe0ef          	jal	80000c8c <release>
-+    800020c4:	8526                	mv	a0,s1
-+    800020c6:	b73fe0ef          	jal	80000c38 <release>
-           release(&wait_lock);
--    8000217c:	00010517          	auipc	a0,0x10
--    80002180:	1bc50513          	addi	a0,a0,444 # 80012338 <wait_lock>
--    80002184:	b09fe0ef          	jal	80000c8c <release>
--}
--    80002188:	854e                	mv	a0,s3
--    8000218a:	60a6                	ld	ra,72(sp)
--    8000218c:	6406                	ld	s0,64(sp)
--    8000218e:	74e2                	ld	s1,56(sp)
--    80002190:	7942                	ld	s2,48(sp)
--    80002192:	79a2                	ld	s3,40(sp)
--    80002194:	7a02                	ld	s4,32(sp)
--    80002196:	6ae2                	ld	s5,24(sp)
--    80002198:	6b42                	ld	s6,16(sp)
--    8000219a:	6ba2                	ld	s7,8(sp)
--    8000219c:	6c02                	ld	s8,0(sp)
--    8000219e:	6161                	addi	sp,sp,80
--    800021a0:	8082                	ret
-+    800020ca:	0000e517          	auipc	a0,0xe
-+    800020ce:	97e50513          	add	a0,a0,-1666 # 8000fa48 <wait_lock>
-+    800020d2:	b67fe0ef          	jal	80000c38 <release>
-+}
-+    800020d6:	854e                	mv	a0,s3
-+    800020d8:	60a6                	ld	ra,72(sp)
-+    800020da:	6406                	ld	s0,64(sp)
-+    800020dc:	74e2                	ld	s1,56(sp)
-+    800020de:	7942                	ld	s2,48(sp)
-+    800020e0:	79a2                	ld	s3,40(sp)
-+    800020e2:	7a02                	ld	s4,32(sp)
-+    800020e4:	6ae2                	ld	s5,24(sp)
-+    800020e6:	6b42                	ld	s6,16(sp)
-+    800020e8:	6ba2                	ld	s7,8(sp)
-+    800020ea:	6c02                	ld	s8,0(sp)
-+    800020ec:	6161                	add	sp,sp,80
-+    800020ee:	8082                	ret
-             release(&pp->lock);
--    800021a2:	8526                	mv	a0,s1
--    800021a4:	ae9fe0ef          	jal	80000c8c <release>
-+    800020f0:	8526                	mv	a0,s1
-+    800020f2:	b47fe0ef          	jal	80000c38 <release>
-             release(&wait_lock);
--    800021a8:	00010517          	auipc	a0,0x10
--    800021ac:	19050513          	addi	a0,a0,400 # 80012338 <wait_lock>
--    800021b0:	addfe0ef          	jal	80000c8c <release>
-+    800020f6:	0000e517          	auipc	a0,0xe
-+    800020fa:	95250513          	add	a0,a0,-1710 # 8000fa48 <wait_lock>
-+    800020fe:	b3bfe0ef          	jal	80000c38 <release>
-             return -1;
--    800021b4:	59fd                	li	s3,-1
--    800021b6:	bfc9                	j	80002188 <wait+0x78>
-+    80002102:	59fd                	li	s3,-1
-+    80002104:	bfc9                	j	800020d6 <wait+0x78>
-     for(pp = proc; pp < &proc[NPROC]; pp++){
--    800021b8:	16848493          	addi	s1,s1,360
--    800021bc:	03348063          	beq	s1,s3,800021dc <wait+0xcc>
-+    80002106:	16848493          	add	s1,s1,360
-+    8000210a:	03348063          	beq	s1,s3,8000212a <wait+0xcc>
-       if(pp->parent == p){
--    800021c0:	7c9c                	ld	a5,56(s1)
--    800021c2:	ff279be3          	bne	a5,s2,800021b8 <wait+0xa8>
-+    8000210e:	7c9c                	ld	a5,56(s1)
-+    80002110:	ff279be3          	bne	a5,s2,80002106 <wait+0xa8>
-         acquire(&pp->lock);
--    800021c6:	8526                	mv	a0,s1
--    800021c8:	a2dfe0ef          	jal	80000bf4 <acquire>
-+    80002114:	8526                	mv	a0,s1
-+    80002116:	a8bfe0ef          	jal	80000ba0 <acquire>
-         if(pp->state == ZOMBIE){
--    800021cc:	4c9c                	lw	a5,24(s1)
--    800021ce:	f94783e3          	beq	a5,s4,80002154 <wait+0x44>
-+    8000211a:	4c9c                	lw	a5,24(s1)
-+    8000211c:	f94783e3          	beq	a5,s4,800020a2 <wait+0x44>
-         release(&pp->lock);
--    800021d2:	8526                	mv	a0,s1
--    800021d4:	ab9fe0ef          	jal	80000c8c <release>
-+    80002120:	8526                	mv	a0,s1
-+    80002122:	b17fe0ef          	jal	80000c38 <release>
-         havekids = 1;
--    800021d8:	8756                	mv	a4,s5
--    800021da:	bff9                	j	800021b8 <wait+0xa8>
-+    80002126:	8756                	mv	a4,s5
-+    80002128:	bff9                	j	80002106 <wait+0xa8>
-     if(!havekids || killed(p)){
--    800021dc:	cf19                	beqz	a4,800021fa <wait+0xea>
--    800021de:	854a                	mv	a0,s2
--    800021e0:	f07ff0ef          	jal	800020e6 <killed>
--    800021e4:	e919                	bnez	a0,800021fa <wait+0xea>
-+    8000212a:	cf19                	beqz	a4,80002148 <wait+0xea>
-+    8000212c:	854a                	mv	a0,s2
-+    8000212e:	f07ff0ef          	jal	80002034 <killed>
-+    80002132:	e919                	bnez	a0,80002148 <wait+0xea>
-     sleep(p, &wait_lock);  /*DOC: wait-sleep */
--    800021e6:	85e2                	mv	a1,s8
--    800021e8:	854a                	mv	a0,s2
--    800021ea:	cc5ff0ef          	jal	80001eae <sleep>
-+    80002134:	85e2                	mv	a1,s8
-+    80002136:	854a                	mv	a0,s2
-+    80002138:	cc5ff0ef          	jal	80001dfc <sleep>
-     havekids = 0;
--    800021ee:	875e                	mv	a4,s7
-+    8000213c:	875e                	mv	a4,s7
-     for(pp = proc; pp < &proc[NPROC]; pp++){
--    800021f0:	00010497          	auipc	s1,0x10
--    800021f4:	56048493          	addi	s1,s1,1376 # 80012750 <proc>
--    800021f8:	b7e1                	j	800021c0 <wait+0xb0>
-+    8000213e:	0000e497          	auipc	s1,0xe
-+    80002142:	d2248493          	add	s1,s1,-734 # 8000fe60 <proc>
-+    80002146:	b7e1                	j	8000210e <wait+0xb0>
-       release(&wait_lock);
--    800021fa:	00010517          	auipc	a0,0x10
--    800021fe:	13e50513          	addi	a0,a0,318 # 80012338 <wait_lock>
--    80002202:	a8bfe0ef          	jal	80000c8c <release>
-+    80002148:	0000e517          	auipc	a0,0xe
-+    8000214c:	90050513          	add	a0,a0,-1792 # 8000fa48 <wait_lock>
-+    80002150:	ae9fe0ef          	jal	80000c38 <release>
-       return -1;
--    80002206:	59fd                	li	s3,-1
--    80002208:	b741                	j	80002188 <wait+0x78>
-+    80002154:	59fd                	li	s3,-1
-+    80002156:	b741                	j	800020d6 <wait+0x78>
- 
--000000008000220a <either_copyout>:
-+0000000080002158 <either_copyout>:
- /* Copy to either a user address, or kernel address, */
- /* depending on usr_dst. */
- /* Returns 0 on success, -1 on error. */
- int
- either_copyout(int user_dst, uint64 dst, void *src, uint64 len)
- {
--    8000220a:	7179                	addi	sp,sp,-48
--    8000220c:	f406                	sd	ra,40(sp)
--    8000220e:	f022                	sd	s0,32(sp)
--    80002210:	ec26                	sd	s1,24(sp)
--    80002212:	e84a                	sd	s2,16(sp)
--    80002214:	e44e                	sd	s3,8(sp)
--    80002216:	e052                	sd	s4,0(sp)
--    80002218:	1800                	addi	s0,sp,48
--    8000221a:	84aa                	mv	s1,a0
--    8000221c:	892e                	mv	s2,a1
--    8000221e:	89b2                	mv	s3,a2
--    80002220:	8a36                	mv	s4,a3
-+    80002158:	7179                	add	sp,sp,-48
-+    8000215a:	f406                	sd	ra,40(sp)
-+    8000215c:	f022                	sd	s0,32(sp)
-+    8000215e:	ec26                	sd	s1,24(sp)
-+    80002160:	e84a                	sd	s2,16(sp)
-+    80002162:	e44e                	sd	s3,8(sp)
-+    80002164:	e052                	sd	s4,0(sp)
-+    80002166:	1800                	add	s0,sp,48
-+    80002168:	84aa                	mv	s1,a0
-+    8000216a:	892e                	mv	s2,a1
-+    8000216c:	89b2                	mv	s3,a2
-+    8000216e:	8a36                	mv	s4,a3
-   struct proc *p = myproc();
--    80002222:	ebeff0ef          	jal	800018e0 <myproc>
-+    80002170:	ec0ff0ef          	jal	80001830 <myproc>
-   if(user_dst){
--    80002226:	cc99                	beqz	s1,80002244 <either_copyout+0x3a>
-+    80002174:	cc99                	beqz	s1,80002192 <either_copyout+0x3a>
-     return copyout(p->pagetable, dst, src, len);
--    80002228:	86d2                	mv	a3,s4
--    8000222a:	864e                	mv	a2,s3
--    8000222c:	85ca                	mv	a1,s2
--    8000222e:	6928                	ld	a0,80(a0)
--    80002230:	b22ff0ef          	jal	80001552 <copyout>
-+    80002176:	86d2                	mv	a3,s4
-+    80002178:	864e                	mv	a2,s3
-+    8000217a:	85ca                	mv	a1,s2
-+    8000217c:	6928                	ld	a0,80(a0)
-+    8000217e:	b6aff0ef          	jal	800014e8 <copyout>
-   } else {
-     memmove((char *)dst, src, len);
-     return 0;
-   }
- }
--    80002234:	70a2                	ld	ra,40(sp)
--    80002236:	7402                	ld	s0,32(sp)
--    80002238:	64e2                	ld	s1,24(sp)
--    8000223a:	6942                	ld	s2,16(sp)
--    8000223c:	69a2                	ld	s3,8(sp)
--    8000223e:	6a02                	ld	s4,0(sp)
--    80002240:	6145                	addi	sp,sp,48
--    80002242:	8082                	ret
-+    80002182:	70a2                	ld	ra,40(sp)
-+    80002184:	7402                	ld	s0,32(sp)
-+    80002186:	64e2                	ld	s1,24(sp)
-+    80002188:	6942                	ld	s2,16(sp)
-+    8000218a:	69a2                	ld	s3,8(sp)
-+    8000218c:	6a02                	ld	s4,0(sp)
-+    8000218e:	6145                	add	sp,sp,48
-+    80002190:	8082                	ret
-     memmove((char *)dst, src, len);
--    80002244:	000a061b          	sext.w	a2,s4
--    80002248:	85ce                	mv	a1,s3
--    8000224a:	854a                	mv	a0,s2
--    8000224c:	ad9fe0ef          	jal	80000d24 <memmove>
-+    80002192:	000a061b          	sext.w	a2,s4
-+    80002196:	85ce                	mv	a1,s3
-+    80002198:	854a                	mv	a0,s2
-+    8000219a:	b37fe0ef          	jal	80000cd0 <memmove>
-     return 0;
--    80002250:	8526                	mv	a0,s1
--    80002252:	b7cd                	j	80002234 <either_copyout+0x2a>
-+    8000219e:	8526                	mv	a0,s1
-+    800021a0:	b7cd                	j	80002182 <either_copyout+0x2a>
- 
--0000000080002254 <either_copyin>:
-+00000000800021a2 <either_copyin>:
- /* Copy from either a user address, or kernel address, */
- /* depending on usr_src. */
- /* Returns 0 on success, -1 on error. */
- int
- either_copyin(void *dst, int user_src, uint64 src, uint64 len)
- {
--    80002254:	7179                	addi	sp,sp,-48
--    80002256:	f406                	sd	ra,40(sp)
--    80002258:	f022                	sd	s0,32(sp)
--    8000225a:	ec26                	sd	s1,24(sp)
--    8000225c:	e84a                	sd	s2,16(sp)
--    8000225e:	e44e                	sd	s3,8(sp)
--    80002260:	e052                	sd	s4,0(sp)
--    80002262:	1800                	addi	s0,sp,48
--    80002264:	892a                	mv	s2,a0
--    80002266:	84ae                	mv	s1,a1
--    80002268:	89b2                	mv	s3,a2
--    8000226a:	8a36                	mv	s4,a3
-+    800021a2:	7179                	add	sp,sp,-48
-+    800021a4:	f406                	sd	ra,40(sp)
-+    800021a6:	f022                	sd	s0,32(sp)
-+    800021a8:	ec26                	sd	s1,24(sp)
-+    800021aa:	e84a                	sd	s2,16(sp)
-+    800021ac:	e44e                	sd	s3,8(sp)
-+    800021ae:	e052                	sd	s4,0(sp)
-+    800021b0:	1800                	add	s0,sp,48
-+    800021b2:	892a                	mv	s2,a0
-+    800021b4:	84ae                	mv	s1,a1
-+    800021b6:	89b2                	mv	s3,a2
-+    800021b8:	8a36                	mv	s4,a3
-   struct proc *p = myproc();
--    8000226c:	e74ff0ef          	jal	800018e0 <myproc>
-+    800021ba:	e76ff0ef          	jal	80001830 <myproc>
-   if(user_src){
--    80002270:	cc99                	beqz	s1,8000228e <either_copyin+0x3a>
-+    800021be:	cc99                	beqz	s1,800021dc <either_copyin+0x3a>
-     return copyin(p->pagetable, dst, src, len);
--    80002272:	86d2                	mv	a3,s4
--    80002274:	864e                	mv	a2,s3
--    80002276:	85ca                	mv	a1,s2
--    80002278:	6928                	ld	a0,80(a0)
--    8000227a:	baeff0ef          	jal	80001628 <copyin>
-+    800021c0:	86d2                	mv	a3,s4
-+    800021c2:	864e                	mv	a2,s3
-+    800021c4:	85ca                	mv	a1,s2
-+    800021c6:	6928                	ld	a0,80(a0)
-+    800021c8:	bd8ff0ef          	jal	800015a0 <copyin>
-   } else {
-     memmove(dst, (char*)src, len);
-     return 0;
-   }
- }
--    8000227e:	70a2                	ld	ra,40(sp)
--    80002280:	7402                	ld	s0,32(sp)
--    80002282:	64e2                	ld	s1,24(sp)
--    80002284:	6942                	ld	s2,16(sp)
--    80002286:	69a2                	ld	s3,8(sp)
--    80002288:	6a02                	ld	s4,0(sp)
--    8000228a:	6145                	addi	sp,sp,48
--    8000228c:	8082                	ret
-+    800021cc:	70a2                	ld	ra,40(sp)
-+    800021ce:	7402                	ld	s0,32(sp)
-+    800021d0:	64e2                	ld	s1,24(sp)
-+    800021d2:	6942                	ld	s2,16(sp)
-+    800021d4:	69a2                	ld	s3,8(sp)
-+    800021d6:	6a02                	ld	s4,0(sp)
-+    800021d8:	6145                	add	sp,sp,48
-+    800021da:	8082                	ret
-     memmove(dst, (char*)src, len);
--    8000228e:	000a061b          	sext.w	a2,s4
--    80002292:	85ce                	mv	a1,s3
--    80002294:	854a                	mv	a0,s2
--    80002296:	a8ffe0ef          	jal	80000d24 <memmove>
-+    800021dc:	000a061b          	sext.w	a2,s4
-+    800021e0:	85ce                	mv	a1,s3
-+    800021e2:	854a                	mv	a0,s2
-+    800021e4:	aedfe0ef          	jal	80000cd0 <memmove>
-     return 0;
--    8000229a:	8526                	mv	a0,s1
--    8000229c:	b7cd                	j	8000227e <either_copyin+0x2a>
-+    800021e8:	8526                	mv	a0,s1
-+    800021ea:	b7cd                	j	800021cc <either_copyin+0x2a>
- 
--000000008000229e <procdump>:
-+00000000800021ec <procdump>:
- /* Print a process listing to console.  For debugging. */
- /* Runs when user types ^P on console. */
- /* No lock to avoid wedging a stuck machine further. */
- void
- procdump(void)
- {
--    8000229e:	715d                	addi	sp,sp,-80
--    800022a0:	e486                	sd	ra,72(sp)
--    800022a2:	e0a2                	sd	s0,64(sp)
--    800022a4:	fc26                	sd	s1,56(sp)
--    800022a6:	f84a                	sd	s2,48(sp)
--    800022a8:	f44e                	sd	s3,40(sp)
--    800022aa:	f052                	sd	s4,32(sp)
--    800022ac:	ec56                	sd	s5,24(sp)
--    800022ae:	e85a                	sd	s6,16(sp)
--    800022b0:	e45e                	sd	s7,8(sp)
--    800022b2:	0880                	addi	s0,sp,80
-+    800021ec:	715d                	add	sp,sp,-80
-+    800021ee:	e486                	sd	ra,72(sp)
-+    800021f0:	e0a2                	sd	s0,64(sp)
-+    800021f2:	fc26                	sd	s1,56(sp)
-+    800021f4:	f84a                	sd	s2,48(sp)
-+    800021f6:	f44e                	sd	s3,40(sp)
-+    800021f8:	f052                	sd	s4,32(sp)
-+    800021fa:	ec56                	sd	s5,24(sp)
-+    800021fc:	e85a                	sd	s6,16(sp)
-+    800021fe:	e45e                	sd	s7,8(sp)
-+    80002200:	0880                	add	s0,sp,80
-   [ZOMBIE]    "zombie"
-   };
-   struct proc *p;
-   char *state;
- 
-   printf("\n");
--    800022b4:	00005517          	auipc	a0,0x5
--    800022b8:	dc450513          	addi	a0,a0,-572 # 80007078 <etext+0x78>
--    800022bc:	a06fe0ef          	jal	800004c2 <printf>
-+    80002202:	00005517          	auipc	a0,0x5
-+    80002206:	ebe50513          	add	a0,a0,-322 # 800070c0 <digits+0x88>
-+    8000220a:	a94fe0ef          	jal	8000049e <printf>
-   for(p = proc; p < &proc[NPROC]; p++){
--    800022c0:	00010497          	auipc	s1,0x10
--    800022c4:	5e848493          	addi	s1,s1,1512 # 800128a8 <proc+0x158>
--    800022c8:	00016917          	auipc	s2,0x16
--    800022cc:	fe090913          	addi	s2,s2,-32 # 800182a8 <bcache+0x140>
-+    8000220e:	0000e497          	auipc	s1,0xe
-+    80002212:	daa48493          	add	s1,s1,-598 # 8000ffb8 <proc+0x158>
-+    80002216:	00013917          	auipc	s2,0x13
-+    8000221a:	7a290913          	add	s2,s2,1954 # 800159b8 <bcache+0x140>
-     if(p->state == UNUSED)
-       continue;
-     if(p->state >= 0 && p->state < NELEM(states) && states[p->state])
--    800022d0:	4b15                	li	s6,5
-+    8000221e:	4b15                	li	s6,5
-       state = states[p->state];
-     else
-       state = "???";
--    800022d2:	00005997          	auipc	s3,0x5
--    800022d6:	fce98993          	addi	s3,s3,-50 # 800072a0 <etext+0x2a0>
-+    80002220:	00005997          	auipc	s3,0x5
-+    80002224:	09898993          	add	s3,s3,152 # 800072b8 <digits+0x280>
-     printf("%d %s %s", p->pid, state, p->name);
--    800022da:	00005a97          	auipc	s5,0x5
--    800022de:	fcea8a93          	addi	s5,s5,-50 # 800072a8 <etext+0x2a8>
-+    80002228:	00005a97          	auipc	s5,0x5
-+    8000222c:	098a8a93          	add	s5,s5,152 # 800072c0 <digits+0x288>
-     printf("\n");
--    800022e2:	00005a17          	auipc	s4,0x5
--    800022e6:	d96a0a13          	addi	s4,s4,-618 # 80007078 <etext+0x78>
-+    80002230:	00005a17          	auipc	s4,0x5
-+    80002234:	e90a0a13          	add	s4,s4,-368 # 800070c0 <digits+0x88>
-     if(p->state >= 0 && p->state < NELEM(states) && states[p->state])
--    800022ea:	00005b97          	auipc	s7,0x5
--    800022ee:	49eb8b93          	addi	s7,s7,1182 # 80007788 <states.0>
--    800022f2:	a829                	j	8000230c <procdump+0x6e>
-+    80002238:	00005b97          	auipc	s7,0x5
-+    8000223c:	0c8b8b93          	add	s7,s7,200 # 80007300 <states.0>
-+    80002240:	a829                	j	8000225a <procdump+0x6e>
-     printf("%d %s %s", p->pid, state, p->name);
--    800022f4:	ed86a583          	lw	a1,-296(a3)
--    800022f8:	8556                	mv	a0,s5
--    800022fa:	9c8fe0ef          	jal	800004c2 <printf>
-+    80002242:	ed86a583          	lw	a1,-296(a3)
-+    80002246:	8556                	mv	a0,s5
-+    80002248:	a56fe0ef          	jal	8000049e <printf>
-     printf("\n");
--    800022fe:	8552                	mv	a0,s4
--    80002300:	9c2fe0ef          	jal	800004c2 <printf>
-+    8000224c:	8552                	mv	a0,s4
-+    8000224e:	a50fe0ef          	jal	8000049e <printf>
-   for(p = proc; p < &proc[NPROC]; p++){
--    80002304:	16848493          	addi	s1,s1,360
--    80002308:	03248263          	beq	s1,s2,8000232c <procdump+0x8e>
-+    80002252:	16848493          	add	s1,s1,360
-+    80002256:	03248263          	beq	s1,s2,8000227a <procdump+0x8e>
-     if(p->state == UNUSED)
--    8000230c:	86a6                	mv	a3,s1
--    8000230e:	ec04a783          	lw	a5,-320(s1)
--    80002312:	dbed                	beqz	a5,80002304 <procdump+0x66>
-+    8000225a:	86a6                	mv	a3,s1
-+    8000225c:	ec04a783          	lw	a5,-320(s1)
-+    80002260:	dbed                	beqz	a5,80002252 <procdump+0x66>
-       state = "???";
--    80002314:	864e                	mv	a2,s3
-+    80002262:	864e                	mv	a2,s3
-     if(p->state >= 0 && p->state < NELEM(states) && states[p->state])
--    80002316:	fcfb6fe3          	bltu	s6,a5,800022f4 <procdump+0x56>
--    8000231a:	02079713          	slli	a4,a5,0x20
--    8000231e:	01d75793          	srli	a5,a4,0x1d
--    80002322:	97de                	add	a5,a5,s7
--    80002324:	6390                	ld	a2,0(a5)
--    80002326:	f679                	bnez	a2,800022f4 <procdump+0x56>
-+    80002264:	fcfb6fe3          	bltu	s6,a5,80002242 <procdump+0x56>
-+    80002268:	02079713          	sll	a4,a5,0x20
-+    8000226c:	01d75793          	srl	a5,a4,0x1d
-+    80002270:	97de                	add	a5,a5,s7
-+    80002272:	6390                	ld	a2,0(a5)
-+    80002274:	f679                	bnez	a2,80002242 <procdump+0x56>
-       state = "???";
--    80002328:	864e                	mv	a2,s3
--    8000232a:	b7e9                	j	800022f4 <procdump+0x56>
-+    80002276:	864e                	mv	a2,s3
-+    80002278:	b7e9                	j	80002242 <procdump+0x56>
-   }
- }
--    8000232c:	60a6                	ld	ra,72(sp)
--    8000232e:	6406                	ld	s0,64(sp)
--    80002330:	74e2                	ld	s1,56(sp)
--    80002332:	7942                	ld	s2,48(sp)
--    80002334:	79a2                	ld	s3,40(sp)
--    80002336:	7a02                	ld	s4,32(sp)
--    80002338:	6ae2                	ld	s5,24(sp)
--    8000233a:	6b42                	ld	s6,16(sp)
--    8000233c:	6ba2                	ld	s7,8(sp)
--    8000233e:	6161                	addi	sp,sp,80
--    80002340:	8082                	ret
--
--0000000080002342 <swtch>:
--    80002342:	00153023          	sd	ra,0(a0)
--    80002346:	00253423          	sd	sp,8(a0)
--    8000234a:	e900                	sd	s0,16(a0)
--    8000234c:	ed04                	sd	s1,24(a0)
--    8000234e:	03253023          	sd	s2,32(a0)
--    80002352:	03353423          	sd	s3,40(a0)
--    80002356:	03453823          	sd	s4,48(a0)
--    8000235a:	03553c23          	sd	s5,56(a0)
--    8000235e:	05653023          	sd	s6,64(a0)
--    80002362:	05753423          	sd	s7,72(a0)
--    80002366:	05853823          	sd	s8,80(a0)
--    8000236a:	05953c23          	sd	s9,88(a0)
--    8000236e:	07a53023          	sd	s10,96(a0)
--    80002372:	07b53423          	sd	s11,104(a0)
--    80002376:	0005b083          	ld	ra,0(a1)
--    8000237a:	0085b103          	ld	sp,8(a1)
--    8000237e:	6980                	ld	s0,16(a1)
--    80002380:	6d84                	ld	s1,24(a1)
--    80002382:	0205b903          	ld	s2,32(a1)
--    80002386:	0285b983          	ld	s3,40(a1)
--    8000238a:	0305ba03          	ld	s4,48(a1)
--    8000238e:	0385ba83          	ld	s5,56(a1)
--    80002392:	0405bb03          	ld	s6,64(a1)
--    80002396:	0485bb83          	ld	s7,72(a1)
--    8000239a:	0505bc03          	ld	s8,80(a1)
--    8000239e:	0585bc83          	ld	s9,88(a1)
--    800023a2:	0605bd03          	ld	s10,96(a1)
--    800023a6:	0685bd83          	ld	s11,104(a1)
--    800023aa:	8082                	ret
--
--00000000800023ac <trapinit>:
-+    8000227a:	60a6                	ld	ra,72(sp)
-+    8000227c:	6406                	ld	s0,64(sp)
-+    8000227e:	74e2                	ld	s1,56(sp)
-+    80002280:	7942                	ld	s2,48(sp)
-+    80002282:	79a2                	ld	s3,40(sp)
-+    80002284:	7a02                	ld	s4,32(sp)
-+    80002286:	6ae2                	ld	s5,24(sp)
-+    80002288:	6b42                	ld	s6,16(sp)
-+    8000228a:	6ba2                	ld	s7,8(sp)
-+    8000228c:	6161                	add	sp,sp,80
-+    8000228e:	8082                	ret
-+
-+0000000080002290 <swtch>:
-+    80002290:	00153023          	sd	ra,0(a0)
-+    80002294:	00253423          	sd	sp,8(a0)
-+    80002298:	e900                	sd	s0,16(a0)
-+    8000229a:	ed04                	sd	s1,24(a0)
-+    8000229c:	03253023          	sd	s2,32(a0)
-+    800022a0:	03353423          	sd	s3,40(a0)
-+    800022a4:	03453823          	sd	s4,48(a0)
-+    800022a8:	03553c23          	sd	s5,56(a0)
-+    800022ac:	05653023          	sd	s6,64(a0)
-+    800022b0:	05753423          	sd	s7,72(a0)
-+    800022b4:	05853823          	sd	s8,80(a0)
-+    800022b8:	05953c23          	sd	s9,88(a0)
-+    800022bc:	07a53023          	sd	s10,96(a0)
-+    800022c0:	07b53423          	sd	s11,104(a0)
-+    800022c4:	0005b083          	ld	ra,0(a1)
-+    800022c8:	0085b103          	ld	sp,8(a1)
-+    800022cc:	6980                	ld	s0,16(a1)
-+    800022ce:	6d84                	ld	s1,24(a1)
-+    800022d0:	0205b903          	ld	s2,32(a1)
-+    800022d4:	0285b983          	ld	s3,40(a1)
-+    800022d8:	0305ba03          	ld	s4,48(a1)
-+    800022dc:	0385ba83          	ld	s5,56(a1)
-+    800022e0:	0405bb03          	ld	s6,64(a1)
-+    800022e4:	0485bb83          	ld	s7,72(a1)
-+    800022e8:	0505bc03          	ld	s8,80(a1)
-+    800022ec:	0585bc83          	ld	s9,88(a1)
-+    800022f0:	0605bd03          	ld	s10,96(a1)
-+    800022f4:	0685bd83          	ld	s11,104(a1)
-+    800022f8:	8082                	ret
-+
-+00000000800022fa <trapinit>:
- 
- extern int devintr();
- 
- void
- trapinit(void)
- {
--    800023ac:	1141                	addi	sp,sp,-16
--    800023ae:	e406                	sd	ra,8(sp)
--    800023b0:	e022                	sd	s0,0(sp)
--    800023b2:	0800                	addi	s0,sp,16
-+    800022fa:	1141                	add	sp,sp,-16
-+    800022fc:	e406                	sd	ra,8(sp)
-+    800022fe:	e022                	sd	s0,0(sp)
-+    80002300:	0800                	add	s0,sp,16
-   initlock(&tickslock, "time");
--    800023b4:	00005597          	auipc	a1,0x5
--    800023b8:	f3458593          	addi	a1,a1,-204 # 800072e8 <etext+0x2e8>
--    800023bc:	00016517          	auipc	a0,0x16
--    800023c0:	d9450513          	addi	a0,a0,-620 # 80018150 <tickslock>
--    800023c4:	fb0fe0ef          	jal	80000b74 <initlock>
-+    80002302:	00005597          	auipc	a1,0x5
-+    80002306:	02e58593          	add	a1,a1,46 # 80007330 <states.0+0x30>
-+    8000230a:	00013517          	auipc	a0,0x13
-+    8000230e:	55650513          	add	a0,a0,1366 # 80015860 <tickslock>
-+    80002312:	80ffe0ef          	jal	80000b20 <initlock>
- }
--    800023c8:	60a2                	ld	ra,8(sp)
--    800023ca:	6402                	ld	s0,0(sp)
--    800023cc:	0141                	addi	sp,sp,16
--    800023ce:	8082                	ret
-+    80002316:	60a2                	ld	ra,8(sp)
-+    80002318:	6402                	ld	s0,0(sp)
-+    8000231a:	0141                	add	sp,sp,16
-+    8000231c:	8082                	ret
- 
--00000000800023d0 <trapinithart>:
-+000000008000231e <trapinithart>:
- 
- /* set up to take exceptions and traps while in the kernel. */
- void
- trapinithart(void)
- {
--    800023d0:	1141                	addi	sp,sp,-16
--    800023d2:	e422                	sd	s0,8(sp)
--    800023d4:	0800                	addi	s0,sp,16
-+    8000231e:	1141                	add	sp,sp,-16
-+    80002320:	e422                	sd	s0,8(sp)
-+    80002322:	0800                	add	s0,sp,16
-   asm volatile("csrw stvec, %0" : : "r" (x));
--    800023d6:	00003797          	auipc	a5,0x3
--    800023da:	e0a78793          	addi	a5,a5,-502 # 800051e0 <kernelvec>
--    800023de:	10579073          	csrw	stvec,a5
-+    80002324:	00003797          	auipc	a5,0x3
-+    80002328:	ccc78793          	add	a5,a5,-820 # 80004ff0 <kernelvec>
-+    8000232c:	10579073          	csrw	stvec,a5
-   w_stvec((uint64)kernelvec);
- }
--    800023e2:	6422                	ld	s0,8(sp)
--    800023e4:	0141                	addi	sp,sp,16
--    800023e6:	8082                	ret
-+    80002330:	6422                	ld	s0,8(sp)
-+    80002332:	0141                	add	sp,sp,16
-+    80002334:	8082                	ret
- 
--00000000800023e8 <usertrapret>:
-+0000000080002336 <usertrapret>:
- /* */
- /* return to user space */
- /* */
- void
- usertrapret(void)
- {
--    800023e8:	1141                	addi	sp,sp,-16
--    800023ea:	e406                	sd	ra,8(sp)
--    800023ec:	e022                	sd	s0,0(sp)
--    800023ee:	0800                	addi	s0,sp,16
-+    80002336:	1141                	add	sp,sp,-16
-+    80002338:	e406                	sd	ra,8(sp)
-+    8000233a:	e022                	sd	s0,0(sp)
-+    8000233c:	0800                	add	s0,sp,16
-   struct proc *p = myproc();
--    800023f0:	cf0ff0ef          	jal	800018e0 <myproc>
-+    8000233e:	cf2ff0ef          	jal	80001830 <myproc>
-   asm volatile("csrr %0, sstatus" : "=r" (x) );
--    800023f4:	100027f3          	csrr	a5,sstatus
-+    80002342:	100027f3          	csrr	a5,sstatus
-   w_sstatus(r_sstatus() & ~SSTATUS_SIE);
--    800023f8:	9bf5                	andi	a5,a5,-3
-+    80002346:	9bf5                	and	a5,a5,-3
-   asm volatile("csrw sstatus, %0" : : "r" (x));
--    800023fa:	10079073          	csrw	sstatus,a5
-+    80002348:	10079073          	csrw	sstatus,a5
-   /* kerneltrap() to usertrap(), so turn off interrupts until */
-   /* we're back in user space, where usertrap() is correct. */
-   intr_off();
- 
-   /* send syscalls, interrupts, and exceptions to uservec in trampoline.S */
-   uint64 trampoline_uservec = TRAMPOLINE + (uservec - trampoline);
--    800023fe:	00004697          	auipc	a3,0x4
--    80002402:	c0268693          	addi	a3,a3,-1022 # 80006000 <_trampoline>
--    80002406:	00004717          	auipc	a4,0x4
--    8000240a:	bfa70713          	addi	a4,a4,-1030 # 80006000 <_trampoline>
--    8000240e:	8f15                	sub	a4,a4,a3
--    80002410:	040007b7          	lui	a5,0x4000
--    80002414:	17fd                	addi	a5,a5,-1 # 3ffffff <_entry-0x7c000001>
--    80002416:	07b2                	slli	a5,a5,0xc
--    80002418:	973e                	add	a4,a4,a5
-+    8000234c:	00004697          	auipc	a3,0x4
-+    80002350:	cb468693          	add	a3,a3,-844 # 80006000 <_trampoline>
-+    80002354:	00004717          	auipc	a4,0x4
-+    80002358:	cac70713          	add	a4,a4,-852 # 80006000 <_trampoline>
-+    8000235c:	8f15                	sub	a4,a4,a3
-+    8000235e:	040007b7          	lui	a5,0x4000
-+    80002362:	17fd                	add	a5,a5,-1 # 3ffffff <_entry-0x7c000001>
-+    80002364:	07b2                	sll	a5,a5,0xc
-+    80002366:	973e                	add	a4,a4,a5
-   asm volatile("csrw stvec, %0" : : "r" (x));
--    8000241a:	10571073          	csrw	stvec,a4
-+    80002368:	10571073          	csrw	stvec,a4
-   w_stvec(trampoline_uservec);
- 
-   /* set up trapframe values that uservec will need when */
-   /* the process next traps into the kernel. */
-   p->trapframe->kernel_satp = r_satp();         /* kernel page table */
--    8000241e:	6d38                	ld	a4,88(a0)
-+    8000236c:	6d38                	ld	a4,88(a0)
-   asm volatile("csrr %0, satp" : "=r" (x) );
--    80002420:	18002673          	csrr	a2,satp
--    80002424:	e310                	sd	a2,0(a4)
-+    8000236e:	18002673          	csrr	a2,satp
-+    80002372:	e310                	sd	a2,0(a4)
-   p->trapframe->kernel_sp = p->kstack + PGSIZE; /* process's kernel stack */
--    80002426:	6d30                	ld	a2,88(a0)
--    80002428:	6138                	ld	a4,64(a0)
--    8000242a:	6585                	lui	a1,0x1
--    8000242c:	972e                	add	a4,a4,a1
--    8000242e:	e618                	sd	a4,8(a2)
-+    80002374:	6d30                	ld	a2,88(a0)
-+    80002376:	6138                	ld	a4,64(a0)
-+    80002378:	6585                	lui	a1,0x1
-+    8000237a:	972e                	add	a4,a4,a1
-+    8000237c:	e618                	sd	a4,8(a2)
-   p->trapframe->kernel_trap = (uint64)usertrap;
--    80002430:	6d38                	ld	a4,88(a0)
--    80002432:	00000617          	auipc	a2,0x0
--    80002436:	11060613          	addi	a2,a2,272 # 80002542 <usertrap>
--    8000243a:	eb10                	sd	a2,16(a4)
-+    8000237e:	6d38                	ld	a4,88(a0)
-+    80002380:	00000617          	auipc	a2,0x0
-+    80002384:	10c60613          	add	a2,a2,268 # 8000248c <usertrap>
-+    80002388:	eb10                	sd	a2,16(a4)
-   p->trapframe->kernel_hartid = r_tp();         /* hartid for cpuid() */
--    8000243c:	6d38                	ld	a4,88(a0)
-+    8000238a:	6d38                	ld	a4,88(a0)
-   asm volatile("mv %0, tp" : "=r" (x) );
--    8000243e:	8612                	mv	a2,tp
--    80002440:	f310                	sd	a2,32(a4)
-+    8000238c:	8612                	mv	a2,tp
-+    8000238e:	f310                	sd	a2,32(a4)
-   asm volatile("csrr %0, sstatus" : "=r" (x) );
--    80002442:	10002773          	csrr	a4,sstatus
-+    80002390:	10002773          	csrr	a4,sstatus
-   /* set up the registers that trampoline.S's sret will use */
-   /* to get to user space. */
-   
-   /* set S Previous Privilege mode to User. */
-   unsigned long x = r_sstatus();
-   x &= ~SSTATUS_SPP; /* clear SPP to 0 for user mode */
--    80002446:	eff77713          	andi	a4,a4,-257
-+    80002394:	eff77713          	and	a4,a4,-257
-   x |= SSTATUS_SPIE; /* enable interrupts in user mode */
--    8000244a:	02076713          	ori	a4,a4,32
-+    80002398:	02076713          	or	a4,a4,32
-   asm volatile("csrw sstatus, %0" : : "r" (x));
--    8000244e:	10071073          	csrw	sstatus,a4
-+    8000239c:	10071073          	csrw	sstatus,a4
-   w_sstatus(x);
- 
-   /* set S Exception Program Counter to the saved user pc. */
-   w_sepc(p->trapframe->epc);
--    80002452:	6d38                	ld	a4,88(a0)
-+    800023a0:	6d38                	ld	a4,88(a0)
-   asm volatile("csrw sepc, %0" : : "r" (x));
--    80002454:	6f18                	ld	a4,24(a4)
--    80002456:	14171073          	csrw	sepc,a4
-+    800023a2:	6f18                	ld	a4,24(a4)
-+    800023a4:	14171073          	csrw	sepc,a4
- 
-   /* tell trampoline.S the user page table to switch to. */
-   uint64 satp = MAKE_SATP(p->pagetable);
--    8000245a:	6928                	ld	a0,80(a0)
--    8000245c:	8131                	srli	a0,a0,0xc
-+    800023a8:	6928                	ld	a0,80(a0)
-+    800023aa:	8131                	srl	a0,a0,0xc
- 
-   /* jump to userret in trampoline.S at the top of memory, which  */
-   /* switches to the user page table, restores user registers, */
-   /* and switches to user mode with sret. */
-   uint64 trampoline_userret = TRAMPOLINE + (userret - trampoline);
--    8000245e:	00004717          	auipc	a4,0x4
--    80002462:	c3e70713          	addi	a4,a4,-962 # 8000609c <userret>
--    80002466:	8f15                	sub	a4,a4,a3
--    80002468:	97ba                	add	a5,a5,a4
-+    800023ac:	00004717          	auipc	a4,0x4
-+    800023b0:	cf070713          	add	a4,a4,-784 # 8000609c <userret>
-+    800023b4:	8f15                	sub	a4,a4,a3
-+    800023b6:	97ba                	add	a5,a5,a4
-   ((void (*)(uint64))trampoline_userret)(satp);
--    8000246a:	577d                	li	a4,-1
--    8000246c:	177e                	slli	a4,a4,0x3f
--    8000246e:	8d59                	or	a0,a0,a4
--    80002470:	9782                	jalr	a5
-+    800023b8:	577d                	li	a4,-1
-+    800023ba:	177e                	sll	a4,a4,0x3f
-+    800023bc:	8d59                	or	a0,a0,a4
-+    800023be:	9782                	jalr	a5
- }
--    80002472:	60a2                	ld	ra,8(sp)
--    80002474:	6402                	ld	s0,0(sp)
--    80002476:	0141                	addi	sp,sp,16
--    80002478:	8082                	ret
-+    800023c0:	60a2                	ld	ra,8(sp)
-+    800023c2:	6402                	ld	s0,0(sp)
-+    800023c4:	0141                	add	sp,sp,16
-+    800023c6:	8082                	ret
- 
--000000008000247a <clockintr>:
-+00000000800023c8 <clockintr>:
-   w_sstatus(sstatus);
- }
- 
- void
- clockintr()
- {
--    8000247a:	1101                	addi	sp,sp,-32
--    8000247c:	ec06                	sd	ra,24(sp)
--    8000247e:	e822                	sd	s0,16(sp)
--    80002480:	1000                	addi	s0,sp,32
-+    800023c8:	1101                	add	sp,sp,-32
-+    800023ca:	ec06                	sd	ra,24(sp)
-+    800023cc:	e822                	sd	s0,16(sp)
-+    800023ce:	e426                	sd	s1,8(sp)
-+    800023d0:	1000                	add	s0,sp,32
-   if(cpuid() == 0){
--    80002482:	c32ff0ef          	jal	800018b4 <cpuid>
--    80002486:	cd11                	beqz	a0,800024a2 <clockintr+0x28>
-+    800023d2:	c32ff0ef          	jal	80001804 <cpuid>
-+    800023d6:	cd19                	beqz	a0,800023f4 <clockintr+0x2c>
-   asm volatile("csrr %0, time" : "=r" (x) );
--    80002488:	c01027f3          	rdtime	a5
-+    800023d8:	c01027f3          	rdtime	a5
-   }
- 
-   /* ask for the next timer interrupt. this also clears */
-   /* the interrupt request. 1000000 is about a tenth */
-   /* of a second. */
-   w_stimecmp(r_time() + 1000000);
--    8000248c:	000f4737          	lui	a4,0xf4
--    80002490:	24070713          	addi	a4,a4,576 # f4240 <_entry-0x7ff0bdc0>
--    80002494:	97ba                	add	a5,a5,a4
-+    800023dc:	000f4737          	lui	a4,0xf4
-+    800023e0:	24070713          	add	a4,a4,576 # f4240 <_entry-0x7ff0bdc0>
-+    800023e4:	97ba                	add	a5,a5,a4
-   asm volatile("csrw 0x14d, %0" : : "r" (x));
--    80002496:	14d79073          	csrw	stimecmp,a5
-+    800023e6:	14d79073          	csrw	stimecmp,a5
- }
--    8000249a:	60e2                	ld	ra,24(sp)
--    8000249c:	6442                	ld	s0,16(sp)
--    8000249e:	6105                	addi	sp,sp,32
--    800024a0:	8082                	ret
--    800024a2:	e426                	sd	s1,8(sp)
-+    800023ea:	60e2                	ld	ra,24(sp)
-+    800023ec:	6442                	ld	s0,16(sp)
-+    800023ee:	64a2                	ld	s1,8(sp)
-+    800023f0:	6105                	add	sp,sp,32
-+    800023f2:	8082                	ret
-     acquire(&tickslock);
--    800024a4:	00016497          	auipc	s1,0x16
--    800024a8:	cac48493          	addi	s1,s1,-852 # 80018150 <tickslock>
--    800024ac:	8526                	mv	a0,s1
--    800024ae:	f46fe0ef          	jal	80000bf4 <acquire>
-+    800023f4:	00013497          	auipc	s1,0x13
-+    800023f8:	46c48493          	add	s1,s1,1132 # 80015860 <tickslock>
-+    800023fc:	8526                	mv	a0,s1
-+    800023fe:	fa2fe0ef          	jal	80000ba0 <acquire>
-     ticks++;
--    800024b2:	00008517          	auipc	a0,0x8
--    800024b6:	d3e50513          	addi	a0,a0,-706 # 8000a1f0 <ticks>
--    800024ba:	411c                	lw	a5,0(a0)
--    800024bc:	2785                	addiw	a5,a5,1
--    800024be:	c11c                	sw	a5,0(a0)
-+    80002402:	00005517          	auipc	a0,0x5
-+    80002406:	4fe50513          	add	a0,a0,1278 # 80007900 <ticks>
-+    8000240a:	411c                	lw	a5,0(a0)
-+    8000240c:	2785                	addw	a5,a5,1
-+    8000240e:	c11c                	sw	a5,0(a0)
-     wakeup(&ticks);
--    800024c0:	a3bff0ef          	jal	80001efa <wakeup>
-+    80002410:	a39ff0ef          	jal	80001e48 <wakeup>
-     release(&tickslock);
--    800024c4:	8526                	mv	a0,s1
--    800024c6:	fc6fe0ef          	jal	80000c8c <release>
--    800024ca:	64a2                	ld	s1,8(sp)
--    800024cc:	bf75                	j	80002488 <clockintr+0xe>
-+    80002414:	8526                	mv	a0,s1
-+    80002416:	823fe0ef          	jal	80000c38 <release>
-+    8000241a:	bf7d                	j	800023d8 <clockintr+0x10>
- 
--00000000800024ce <devintr>:
-+000000008000241c <devintr>:
- /* returns 2 if timer interrupt, */
- /* 1 if other device, */
- /* 0 if not recognized. */
- int
- devintr()
- {
--    800024ce:	1101                	addi	sp,sp,-32
--    800024d0:	ec06                	sd	ra,24(sp)
--    800024d2:	e822                	sd	s0,16(sp)
--    800024d4:	1000                	addi	s0,sp,32
-+    8000241c:	1101                	add	sp,sp,-32
-+    8000241e:	ec06                	sd	ra,24(sp)
-+    80002420:	e822                	sd	s0,16(sp)
-+    80002422:	e426                	sd	s1,8(sp)
-+    80002424:	1000                	add	s0,sp,32
-   asm volatile("csrr %0, scause" : "=r" (x) );
--    800024d6:	14202773          	csrr	a4,scause
-+    80002426:	14202773          	csrr	a4,scause
-   uint64 scause = r_scause();
- 
-   if(scause == 0x8000000000000009L){
--    800024da:	57fd                	li	a5,-1
--    800024dc:	17fe                	slli	a5,a5,0x3f
--    800024de:	07a5                	addi	a5,a5,9
--    800024e0:	00f70c63          	beq	a4,a5,800024f8 <devintr+0x2a>
-+    8000242a:	57fd                	li	a5,-1
-+    8000242c:	17fe                	sll	a5,a5,0x3f
-+    8000242e:	07a5                	add	a5,a5,9
-+    80002430:	00f70d63          	beq	a4,a5,8000244a <devintr+0x2e>
-     /* now allowed to interrupt again. */
-     if(irq)
-       plic_complete(irq);
- 
-     return 1;
-   } else if(scause == 0x8000000000000005L){
--    800024e4:	57fd                	li	a5,-1
--    800024e6:	17fe                	slli	a5,a5,0x3f
--    800024e8:	0795                	addi	a5,a5,5
-+    80002434:	57fd                	li	a5,-1
-+    80002436:	17fe                	sll	a5,a5,0x3f
-+    80002438:	0795                	add	a5,a5,5
-     /* timer interrupt. */
-     clockintr();
-     return 2;
-   } else {
-     return 0;
--    800024ea:	4501                	li	a0,0
-+    8000243a:	4501                	li	a0,0
-   } else if(scause == 0x8000000000000005L){
--    800024ec:	04f70763          	beq	a4,a5,8000253a <devintr+0x6c>
-+    8000243c:	04f70463          	beq	a4,a5,80002484 <devintr+0x68>
-   }
- }
--    800024f0:	60e2                	ld	ra,24(sp)
--    800024f2:	6442                	ld	s0,16(sp)
--    800024f4:	6105                	addi	sp,sp,32
--    800024f6:	8082                	ret
--    800024f8:	e426                	sd	s1,8(sp)
-+    80002440:	60e2                	ld	ra,24(sp)
-+    80002442:	6442                	ld	s0,16(sp)
-+    80002444:	64a2                	ld	s1,8(sp)
-+    80002446:	6105                	add	sp,sp,32
-+    80002448:	8082                	ret
-     int irq = plic_claim();
--    800024fa:	593020ef          	jal	8000528c <plic_claim>
--    800024fe:	84aa                	mv	s1,a0
-+    8000244a:	44f020ef          	jal	80005098 <plic_claim>
-+    8000244e:	84aa                	mv	s1,a0
-     if(irq == UART0_IRQ){
--    80002500:	47a9                	li	a5,10
--    80002502:	00f50963          	beq	a0,a5,80002514 <devintr+0x46>
-+    80002450:	47a9                	li	a5,10
-+    80002452:	02f50363          	beq	a0,a5,80002478 <devintr+0x5c>
-     } else if(irq == VIRTIO0_IRQ){
--    80002506:	4785                	li	a5,1
--    80002508:	00f50963          	beq	a0,a5,8000251a <devintr+0x4c>
-+    80002456:	4785                	li	a5,1
-+    80002458:	02f50363          	beq	a0,a5,8000247e <devintr+0x62>
-     return 1;
--    8000250c:	4505                	li	a0,1
-+    8000245c:	4505                	li	a0,1
-     } else if(irq){
--    8000250e:	e889                	bnez	s1,80002520 <devintr+0x52>
--    80002510:	64a2                	ld	s1,8(sp)
--    80002512:	bff9                	j	800024f0 <devintr+0x22>
-+    8000245e:	d0ed                	beqz	s1,80002440 <devintr+0x24>
-+      printf("unexpected interrupt irq=%d\n", irq);
-+    80002460:	85a6                	mv	a1,s1
-+    80002462:	00005517          	auipc	a0,0x5
-+    80002466:	ed650513          	add	a0,a0,-298 # 80007338 <states.0+0x38>
-+    8000246a:	834fe0ef          	jal	8000049e <printf>
-+      plic_complete(irq);
-+    8000246e:	8526                	mv	a0,s1
-+    80002470:	449020ef          	jal	800050b8 <plic_complete>
-+    return 1;
-+    80002474:	4505                	li	a0,1
-+    80002476:	b7e9                	j	80002440 <devintr+0x24>
-       uartintr();
--    80002514:	cf2fe0ef          	jal	80000a06 <uartintr>
-+    80002478:	d3afe0ef          	jal	800009b2 <uartintr>
-     if(irq)
--    80002518:	a819                	j	8000252e <devintr+0x60>
-+    8000247c:	bfcd                	j	8000246e <devintr+0x52>
-       virtio_disk_intr();
--    8000251a:	238030ef          	jal	80005752 <virtio_disk_intr>
-+    8000247e:	0a4030ef          	jal	80005522 <virtio_disk_intr>
-     if(irq)
--    8000251e:	a801                	j	8000252e <devintr+0x60>
--      printf("unexpected interrupt irq=%d\n", irq);
--    80002520:	85a6                	mv	a1,s1
--    80002522:	00005517          	auipc	a0,0x5
--    80002526:	dce50513          	addi	a0,a0,-562 # 800072f0 <etext+0x2f0>
--    8000252a:	f99fd0ef          	jal	800004c2 <printf>
--      plic_complete(irq);
--    8000252e:	8526                	mv	a0,s1
--    80002530:	57d020ef          	jal	800052ac <plic_complete>
--    return 1;
--    80002534:	4505                	li	a0,1
--    80002536:	64a2                	ld	s1,8(sp)
--    80002538:	bf65                	j	800024f0 <devintr+0x22>
-+    80002482:	b7f5                	j	8000246e <devintr+0x52>
-     clockintr();
--    8000253a:	f41ff0ef          	jal	8000247a <clockintr>
-+    80002484:	f45ff0ef          	jal	800023c8 <clockintr>
-     return 2;
--    8000253e:	4509                	li	a0,2
--    80002540:	bf45                	j	800024f0 <devintr+0x22>
-+    80002488:	4509                	li	a0,2
-+    8000248a:	bf5d                	j	80002440 <devintr+0x24>
- 
--0000000080002542 <usertrap>:
-+000000008000248c <usertrap>:
- {
--    80002542:	1101                	addi	sp,sp,-32
--    80002544:	ec06                	sd	ra,24(sp)
--    80002546:	e822                	sd	s0,16(sp)
--    80002548:	e426                	sd	s1,8(sp)
--    8000254a:	e04a                	sd	s2,0(sp)
--    8000254c:	1000                	addi	s0,sp,32
-+    8000248c:	1101                	add	sp,sp,-32
-+    8000248e:	ec06                	sd	ra,24(sp)
-+    80002490:	e822                	sd	s0,16(sp)
-+    80002492:	e426                	sd	s1,8(sp)
-+    80002494:	e04a                	sd	s2,0(sp)
-+    80002496:	1000                	add	s0,sp,32
-   asm volatile("csrr %0, sstatus" : "=r" (x) );
--    8000254e:	100027f3          	csrr	a5,sstatus
-+    80002498:	100027f3          	csrr	a5,sstatus
-   if((r_sstatus() & SSTATUS_SPP) != 0)
--    80002552:	1007f793          	andi	a5,a5,256
--    80002556:	ef85                	bnez	a5,8000258e <usertrap+0x4c>
-+    8000249c:	1007f793          	and	a5,a5,256
-+    800024a0:	ef85                	bnez	a5,800024d8 <usertrap+0x4c>
-   asm volatile("csrw stvec, %0" : : "r" (x));
--    80002558:	00003797          	auipc	a5,0x3
--    8000255c:	c8878793          	addi	a5,a5,-888 # 800051e0 <kernelvec>
--    80002560:	10579073          	csrw	stvec,a5
-+    800024a2:	00003797          	auipc	a5,0x3
-+    800024a6:	b4e78793          	add	a5,a5,-1202 # 80004ff0 <kernelvec>
-+    800024aa:	10579073          	csrw	stvec,a5
-   struct proc *p = myproc();
--    80002564:	b7cff0ef          	jal	800018e0 <myproc>
--    80002568:	84aa                	mv	s1,a0
-+    800024ae:	b82ff0ef          	jal	80001830 <myproc>
-+    800024b2:	84aa                	mv	s1,a0
-   p->trapframe->epc = r_sepc();
--    8000256a:	6d3c                	ld	a5,88(a0)
-+    800024b4:	6d3c                	ld	a5,88(a0)
-   asm volatile("csrr %0, sepc" : "=r" (x) );
--    8000256c:	14102773          	csrr	a4,sepc
--    80002570:	ef98                	sd	a4,24(a5)
-+    800024b6:	14102773          	csrr	a4,sepc
-+    800024ba:	ef98                	sd	a4,24(a5)
-   asm volatile("csrr %0, scause" : "=r" (x) );
--    80002572:	14202773          	csrr	a4,scause
-+    800024bc:	14202773          	csrr	a4,scause
-   if(r_scause() == 8){
--    80002576:	47a1                	li	a5,8
--    80002578:	02f70163          	beq	a4,a5,8000259a <usertrap+0x58>
-+    800024c0:	47a1                	li	a5,8
-+    800024c2:	02f70163          	beq	a4,a5,800024e4 <usertrap+0x58>
-   } else if((which_dev = devintr()) != 0){
--    8000257c:	f53ff0ef          	jal	800024ce <devintr>
--    80002580:	892a                	mv	s2,a0
--    80002582:	c135                	beqz	a0,800025e6 <usertrap+0xa4>
-+    800024c6:	f57ff0ef          	jal	8000241c <devintr>
-+    800024ca:	892a                	mv	s2,a0
-+    800024cc:	c135                	beqz	a0,80002530 <usertrap+0xa4>
-   if(killed(p))
--    80002584:	8526                	mv	a0,s1
--    80002586:	b61ff0ef          	jal	800020e6 <killed>
--    8000258a:	cd1d                	beqz	a0,800025c8 <usertrap+0x86>
--    8000258c:	a81d                	j	800025c2 <usertrap+0x80>
-+    800024ce:	8526                	mv	a0,s1
-+    800024d0:	b65ff0ef          	jal	80002034 <killed>
-+    800024d4:	cd1d                	beqz	a0,80002512 <usertrap+0x86>
-+    800024d6:	a81d                	j	8000250c <usertrap+0x80>
-     panic("usertrap: not from user mode");
--    8000258e:	00005517          	auipc	a0,0x5
--    80002592:	d8250513          	addi	a0,a0,-638 # 80007310 <etext+0x310>
--    80002596:	9fefe0ef          	jal	80000794 <panic>
-+    800024d8:	00005517          	auipc	a0,0x5
-+    800024dc:	e8050513          	add	a0,a0,-384 # 80007358 <states.0+0x58>
-+    800024e0:	a7efe0ef          	jal	8000075e <panic>
-     if(killed(p))
--    8000259a:	b4dff0ef          	jal	800020e6 <killed>
--    8000259e:	e121                	bnez	a0,800025de <usertrap+0x9c>
-+    800024e4:	b51ff0ef          	jal	80002034 <killed>
-+    800024e8:	e121                	bnez	a0,80002528 <usertrap+0x9c>
-     p->trapframe->epc += 4;
--    800025a0:	6cb8                	ld	a4,88(s1)
--    800025a2:	6f1c                	ld	a5,24(a4)
--    800025a4:	0791                	addi	a5,a5,4
--    800025a6:	ef1c                	sd	a5,24(a4)
-+    800024ea:	6cb8                	ld	a4,88(s1)
-+    800024ec:	6f1c                	ld	a5,24(a4)
-+    800024ee:	0791                	add	a5,a5,4
-+    800024f0:	ef1c                	sd	a5,24(a4)
-   asm volatile("csrr %0, sstatus" : "=r" (x) );
--    800025a8:	100027f3          	csrr	a5,sstatus
-+    800024f2:	100027f3          	csrr	a5,sstatus
-   w_sstatus(r_sstatus() | SSTATUS_SIE);
--    800025ac:	0027e793          	ori	a5,a5,2
-+    800024f6:	0027e793          	or	a5,a5,2
-   asm volatile("csrw sstatus, %0" : : "r" (x));
--    800025b0:	10079073          	csrw	sstatus,a5
-+    800024fa:	10079073          	csrw	sstatus,a5
-     syscall();
--    800025b4:	248000ef          	jal	800027fc <syscall>
-+    800024fe:	248000ef          	jal	80002746 <syscall>
-   if(killed(p))
--    800025b8:	8526                	mv	a0,s1
--    800025ba:	b2dff0ef          	jal	800020e6 <killed>
--    800025be:	c901                	beqz	a0,800025ce <usertrap+0x8c>
--    800025c0:	4901                	li	s2,0
-+    80002502:	8526                	mv	a0,s1
-+    80002504:	b31ff0ef          	jal	80002034 <killed>
-+    80002508:	c901                	beqz	a0,80002518 <usertrap+0x8c>
-+    8000250a:	4901                	li	s2,0
-     exit(-1);
--    800025c2:	557d                	li	a0,-1
--    800025c4:	9f7ff0ef          	jal	80001fba <exit>
-+    8000250c:	557d                	li	a0,-1
-+    8000250e:	9fbff0ef          	jal	80001f08 <exit>
-   if(which_dev == 2)
--    800025c8:	4789                	li	a5,2
--    800025ca:	04f90563          	beq	s2,a5,80002614 <usertrap+0xd2>
-+    80002512:	4789                	li	a5,2
-+    80002514:	04f90563          	beq	s2,a5,8000255e <usertrap+0xd2>
-   usertrapret();
--    800025ce:	e1bff0ef          	jal	800023e8 <usertrapret>
--}
--    800025d2:	60e2                	ld	ra,24(sp)
--    800025d4:	6442                	ld	s0,16(sp)
--    800025d6:	64a2                	ld	s1,8(sp)
--    800025d8:	6902                	ld	s2,0(sp)
--    800025da:	6105                	addi	sp,sp,32
--    800025dc:	8082                	ret
-+    80002518:	e1fff0ef          	jal	80002336 <usertrapret>
-+}
-+    8000251c:	60e2                	ld	ra,24(sp)
-+    8000251e:	6442                	ld	s0,16(sp)
-+    80002520:	64a2                	ld	s1,8(sp)
-+    80002522:	6902                	ld	s2,0(sp)
-+    80002524:	6105                	add	sp,sp,32
-+    80002526:	8082                	ret
-       exit(-1);
--    800025de:	557d                	li	a0,-1
--    800025e0:	9dbff0ef          	jal	80001fba <exit>
--    800025e4:	bf75                	j	800025a0 <usertrap+0x5e>
-+    80002528:	557d                	li	a0,-1
-+    8000252a:	9dfff0ef          	jal	80001f08 <exit>
-+    8000252e:	bf75                	j	800024ea <usertrap+0x5e>
-   asm volatile("csrr %0, scause" : "=r" (x) );
--    800025e6:	142025f3          	csrr	a1,scause
-+    80002530:	142025f3          	csrr	a1,scause
-     printf("usertrap(): unexpected scause 0x%lx pid=%d\n", r_scause(), p->pid);
--    800025ea:	5890                	lw	a2,48(s1)
--    800025ec:	00005517          	auipc	a0,0x5
--    800025f0:	d4450513          	addi	a0,a0,-700 # 80007330 <etext+0x330>
--    800025f4:	ecffd0ef          	jal	800004c2 <printf>
-+    80002534:	5890                	lw	a2,48(s1)
-+    80002536:	00005517          	auipc	a0,0x5
-+    8000253a:	e4250513          	add	a0,a0,-446 # 80007378 <states.0+0x78>
-+    8000253e:	f61fd0ef          	jal	8000049e <printf>
-   asm volatile("csrr %0, sepc" : "=r" (x) );
--    800025f8:	141025f3          	csrr	a1,sepc
-+    80002542:	141025f3          	csrr	a1,sepc
-   asm volatile("csrr %0, stval" : "=r" (x) );
--    800025fc:	14302673          	csrr	a2,stval
-+    80002546:	14302673          	csrr	a2,stval
-     printf("            sepc=0x%lx stval=0x%lx\n", r_sepc(), r_stval());
--    80002600:	00005517          	auipc	a0,0x5
--    80002604:	d6050513          	addi	a0,a0,-672 # 80007360 <etext+0x360>
--    80002608:	ebbfd0ef          	jal	800004c2 <printf>
-+    8000254a:	00005517          	auipc	a0,0x5
-+    8000254e:	e5e50513          	add	a0,a0,-418 # 800073a8 <states.0+0xa8>
-+    80002552:	f4dfd0ef          	jal	8000049e <printf>
-     setkilled(p);
--    8000260c:	8526                	mv	a0,s1
--    8000260e:	ab5ff0ef          	jal	800020c2 <setkilled>
--    80002612:	b75d                	j	800025b8 <usertrap+0x76>
-+    80002556:	8526                	mv	a0,s1
-+    80002558:	ab9ff0ef          	jal	80002010 <setkilled>
-+    8000255c:	b75d                	j	80002502 <usertrap+0x76>
-     yield();
--    80002614:	86fff0ef          	jal	80001e82 <yield>
--    80002618:	bf5d                	j	800025ce <usertrap+0x8c>
--
--000000008000261a <kerneltrap>:
--{
--    8000261a:	7179                	addi	sp,sp,-48
--    8000261c:	f406                	sd	ra,40(sp)
--    8000261e:	f022                	sd	s0,32(sp)
--    80002620:	ec26                	sd	s1,24(sp)
--    80002622:	e84a                	sd	s2,16(sp)
--    80002624:	e44e                	sd	s3,8(sp)
--    80002626:	1800                	addi	s0,sp,48
-+    8000255e:	873ff0ef          	jal	80001dd0 <yield>
-+    80002562:	bf5d                	j	80002518 <usertrap+0x8c>
-+
-+0000000080002564 <kerneltrap>:
-+{
-+    80002564:	7179                	add	sp,sp,-48
-+    80002566:	f406                	sd	ra,40(sp)
-+    80002568:	f022                	sd	s0,32(sp)
-+    8000256a:	ec26                	sd	s1,24(sp)
-+    8000256c:	e84a                	sd	s2,16(sp)
-+    8000256e:	e44e                	sd	s3,8(sp)
-+    80002570:	1800                	add	s0,sp,48
-   asm volatile("csrr %0, sepc" : "=r" (x) );
--    80002628:	14102973          	csrr	s2,sepc
-+    80002572:	14102973          	csrr	s2,sepc
-   asm volatile("csrr %0, sstatus" : "=r" (x) );
--    8000262c:	100024f3          	csrr	s1,sstatus
-+    80002576:	100024f3          	csrr	s1,sstatus
-   asm volatile("csrr %0, scause" : "=r" (x) );
--    80002630:	142029f3          	csrr	s3,scause
-+    8000257a:	142029f3          	csrr	s3,scause
-   if((sstatus & SSTATUS_SPP) == 0)
--    80002634:	1004f793          	andi	a5,s1,256
--    80002638:	c795                	beqz	a5,80002664 <kerneltrap+0x4a>
-+    8000257e:	1004f793          	and	a5,s1,256
-+    80002582:	c795                	beqz	a5,800025ae <kerneltrap+0x4a>
-   asm volatile("csrr %0, sstatus" : "=r" (x) );
--    8000263a:	100027f3          	csrr	a5,sstatus
-+    80002584:	100027f3          	csrr	a5,sstatus
-   return (x & SSTATUS_SIE) != 0;
--    8000263e:	8b89                	andi	a5,a5,2
-+    80002588:	8b89                	and	a5,a5,2
-   if(intr_get() != 0)
--    80002640:	eb85                	bnez	a5,80002670 <kerneltrap+0x56>
-+    8000258a:	eb85                	bnez	a5,800025ba <kerneltrap+0x56>
-   if((which_dev = devintr()) == 0){
--    80002642:	e8dff0ef          	jal	800024ce <devintr>
--    80002646:	c91d                	beqz	a0,8000267c <kerneltrap+0x62>
-+    8000258c:	e91ff0ef          	jal	8000241c <devintr>
-+    80002590:	c91d                	beqz	a0,800025c6 <kerneltrap+0x62>
-   if(which_dev == 2 && myproc() != 0)
--    80002648:	4789                	li	a5,2
--    8000264a:	04f50a63          	beq	a0,a5,8000269e <kerneltrap+0x84>
-+    80002592:	4789                	li	a5,2
-+    80002594:	04f50a63          	beq	a0,a5,800025e8 <kerneltrap+0x84>
-   asm volatile("csrw sepc, %0" : : "r" (x));
--    8000264e:	14191073          	csrw	sepc,s2
-+    80002598:	14191073          	csrw	sepc,s2
-   asm volatile("csrw sstatus, %0" : : "r" (x));
--    80002652:	10049073          	csrw	sstatus,s1
--}
--    80002656:	70a2                	ld	ra,40(sp)
--    80002658:	7402                	ld	s0,32(sp)
--    8000265a:	64e2                	ld	s1,24(sp)
--    8000265c:	6942                	ld	s2,16(sp)
--    8000265e:	69a2                	ld	s3,8(sp)
--    80002660:	6145                	addi	sp,sp,48
--    80002662:	8082                	ret
-+    8000259c:	10049073          	csrw	sstatus,s1
-+}
-+    800025a0:	70a2                	ld	ra,40(sp)
-+    800025a2:	7402                	ld	s0,32(sp)
-+    800025a4:	64e2                	ld	s1,24(sp)
-+    800025a6:	6942                	ld	s2,16(sp)
-+    800025a8:	69a2                	ld	s3,8(sp)
-+    800025aa:	6145                	add	sp,sp,48
-+    800025ac:	8082                	ret
-     panic("kerneltrap: not from supervisor mode");
--    80002664:	00005517          	auipc	a0,0x5
--    80002668:	d2450513          	addi	a0,a0,-732 # 80007388 <etext+0x388>
--    8000266c:	928fe0ef          	jal	80000794 <panic>
-+    800025ae:	00005517          	auipc	a0,0x5
-+    800025b2:	e2250513          	add	a0,a0,-478 # 800073d0 <states.0+0xd0>
-+    800025b6:	9a8fe0ef          	jal	8000075e <panic>
-     panic("kerneltrap: interrupts enabled");
--    80002670:	00005517          	auipc	a0,0x5
--    80002674:	d4050513          	addi	a0,a0,-704 # 800073b0 <etext+0x3b0>
--    80002678:	91cfe0ef          	jal	80000794 <panic>
-+    800025ba:	00005517          	auipc	a0,0x5
-+    800025be:	e3e50513          	add	a0,a0,-450 # 800073f8 <states.0+0xf8>
-+    800025c2:	99cfe0ef          	jal	8000075e <panic>
-   asm volatile("csrr %0, sepc" : "=r" (x) );
--    8000267c:	14102673          	csrr	a2,sepc
-+    800025c6:	14102673          	csrr	a2,sepc
-   asm volatile("csrr %0, stval" : "=r" (x) );
--    80002680:	143026f3          	csrr	a3,stval
-+    800025ca:	143026f3          	csrr	a3,stval
-     printf("scause=0x%lx sepc=0x%lx stval=0x%lx\n", scause, r_sepc(), r_stval());
--    80002684:	85ce                	mv	a1,s3
--    80002686:	00005517          	auipc	a0,0x5
--    8000268a:	d4a50513          	addi	a0,a0,-694 # 800073d0 <etext+0x3d0>
--    8000268e:	e35fd0ef          	jal	800004c2 <printf>
-+    800025ce:	85ce                	mv	a1,s3
-+    800025d0:	00005517          	auipc	a0,0x5
-+    800025d4:	e4850513          	add	a0,a0,-440 # 80007418 <states.0+0x118>
-+    800025d8:	ec7fd0ef          	jal	8000049e <printf>
-     panic("kerneltrap");
--    80002692:	00005517          	auipc	a0,0x5
--    80002696:	d6650513          	addi	a0,a0,-666 # 800073f8 <etext+0x3f8>
--    8000269a:	8fafe0ef          	jal	80000794 <panic>
-+    800025dc:	00005517          	auipc	a0,0x5
-+    800025e0:	e6450513          	add	a0,a0,-412 # 80007440 <states.0+0x140>
-+    800025e4:	97afe0ef          	jal	8000075e <panic>
-   if(which_dev == 2 && myproc() != 0)
--    8000269e:	a42ff0ef          	jal	800018e0 <myproc>
--    800026a2:	d555                	beqz	a0,8000264e <kerneltrap+0x34>
-+    800025e8:	a48ff0ef          	jal	80001830 <myproc>
-+    800025ec:	d555                	beqz	a0,80002598 <kerneltrap+0x34>
-     yield();
--    800026a4:	fdeff0ef          	jal	80001e82 <yield>
--    800026a8:	b75d                	j	8000264e <kerneltrap+0x34>
-+    800025ee:	fe2ff0ef          	jal	80001dd0 <yield>
-+    800025f2:	b75d                	j	80002598 <kerneltrap+0x34>
- 
--00000000800026aa <argraw>:
-+00000000800025f4 <argraw>:
-   return strlen(buf);
- }
- 
- static uint64
- argraw(int n)
- {
--    800026aa:	1101                	addi	sp,sp,-32
--    800026ac:	ec06                	sd	ra,24(sp)
--    800026ae:	e822                	sd	s0,16(sp)
--    800026b0:	e426                	sd	s1,8(sp)
--    800026b2:	1000                	addi	s0,sp,32
--    800026b4:	84aa                	mv	s1,a0
-+    800025f4:	1101                	add	sp,sp,-32
-+    800025f6:	ec06                	sd	ra,24(sp)
-+    800025f8:	e822                	sd	s0,16(sp)
-+    800025fa:	e426                	sd	s1,8(sp)
-+    800025fc:	1000                	add	s0,sp,32
-+    800025fe:	84aa                	mv	s1,a0
-   struct proc *p = myproc();
--    800026b6:	a2aff0ef          	jal	800018e0 <myproc>
-+    80002600:	a30ff0ef          	jal	80001830 <myproc>
-   switch (n) {
--    800026ba:	4795                	li	a5,5
--    800026bc:	0497e163          	bltu	a5,s1,800026fe <argraw+0x54>
--    800026c0:	048a                	slli	s1,s1,0x2
--    800026c2:	00005717          	auipc	a4,0x5
--    800026c6:	0f670713          	addi	a4,a4,246 # 800077b8 <states.0+0x30>
--    800026ca:	94ba                	add	s1,s1,a4
--    800026cc:	409c                	lw	a5,0(s1)
--    800026ce:	97ba                	add	a5,a5,a4
--    800026d0:	8782                	jr	a5
-+    80002604:	4795                	li	a5,5
-+    80002606:	0497e163          	bltu	a5,s1,80002648 <argraw+0x54>
-+    8000260a:	048a                	sll	s1,s1,0x2
-+    8000260c:	00005717          	auipc	a4,0x5
-+    80002610:	e6c70713          	add	a4,a4,-404 # 80007478 <states.0+0x178>
-+    80002614:	94ba                	add	s1,s1,a4
-+    80002616:	409c                	lw	a5,0(s1)
-+    80002618:	97ba                	add	a5,a5,a4
-+    8000261a:	8782                	jr	a5
-   case 0:
-     return p->trapframe->a0;
--    800026d2:	6d3c                	ld	a5,88(a0)
--    800026d4:	7ba8                	ld	a0,112(a5)
-+    8000261c:	6d3c                	ld	a5,88(a0)
-+    8000261e:	7ba8                	ld	a0,112(a5)
-   case 5:
-     return p->trapframe->a5;
-   }
-   panic("argraw");
-   return -1;
- }
--    800026d6:	60e2                	ld	ra,24(sp)
--    800026d8:	6442                	ld	s0,16(sp)
--    800026da:	64a2                	ld	s1,8(sp)
--    800026dc:	6105                	addi	sp,sp,32
--    800026de:	8082                	ret
-+    80002620:	60e2                	ld	ra,24(sp)
-+    80002622:	6442                	ld	s0,16(sp)
-+    80002624:	64a2                	ld	s1,8(sp)
-+    80002626:	6105                	add	sp,sp,32
-+    80002628:	8082                	ret
-     return p->trapframe->a1;
--    800026e0:	6d3c                	ld	a5,88(a0)
--    800026e2:	7fa8                	ld	a0,120(a5)
--    800026e4:	bfcd                	j	800026d6 <argraw+0x2c>
-+    8000262a:	6d3c                	ld	a5,88(a0)
-+    8000262c:	7fa8                	ld	a0,120(a5)
-+    8000262e:	bfcd                	j	80002620 <argraw+0x2c>
-     return p->trapframe->a2;
--    800026e6:	6d3c                	ld	a5,88(a0)
--    800026e8:	63c8                	ld	a0,128(a5)
--    800026ea:	b7f5                	j	800026d6 <argraw+0x2c>
-+    80002630:	6d3c                	ld	a5,88(a0)
-+    80002632:	63c8                	ld	a0,128(a5)
-+    80002634:	b7f5                	j	80002620 <argraw+0x2c>
-     return p->trapframe->a3;
--    800026ec:	6d3c                	ld	a5,88(a0)
--    800026ee:	67c8                	ld	a0,136(a5)
--    800026f0:	b7dd                	j	800026d6 <argraw+0x2c>
-+    80002636:	6d3c                	ld	a5,88(a0)
-+    80002638:	67c8                	ld	a0,136(a5)
-+    8000263a:	b7dd                	j	80002620 <argraw+0x2c>
-     return p->trapframe->a4;
--    800026f2:	6d3c                	ld	a5,88(a0)
--    800026f4:	6bc8                	ld	a0,144(a5)
--    800026f6:	b7c5                	j	800026d6 <argraw+0x2c>
-+    8000263c:	6d3c                	ld	a5,88(a0)
-+    8000263e:	6bc8                	ld	a0,144(a5)
-+    80002640:	b7c5                	j	80002620 <argraw+0x2c>
-     return p->trapframe->a5;
--    800026f8:	6d3c                	ld	a5,88(a0)
--    800026fa:	6fc8                	ld	a0,152(a5)
--    800026fc:	bfe9                	j	800026d6 <argraw+0x2c>
-+    80002642:	6d3c                	ld	a5,88(a0)
-+    80002644:	6fc8                	ld	a0,152(a5)
-+    80002646:	bfe9                	j	80002620 <argraw+0x2c>
-   panic("argraw");
--    800026fe:	00005517          	auipc	a0,0x5
--    80002702:	d0a50513          	addi	a0,a0,-758 # 80007408 <etext+0x408>
--    80002706:	88efe0ef          	jal	80000794 <panic>
--
--000000008000270a <fetchaddr>:
--{
--    8000270a:	1101                	addi	sp,sp,-32
--    8000270c:	ec06                	sd	ra,24(sp)
--    8000270e:	e822                	sd	s0,16(sp)
--    80002710:	e426                	sd	s1,8(sp)
--    80002712:	e04a                	sd	s2,0(sp)
--    80002714:	1000                	addi	s0,sp,32
--    80002716:	84aa                	mv	s1,a0
--    80002718:	892e                	mv	s2,a1
-+    80002648:	00005517          	auipc	a0,0x5
-+    8000264c:	e0850513          	add	a0,a0,-504 # 80007450 <states.0+0x150>
-+    80002650:	90efe0ef          	jal	8000075e <panic>
-+
-+0000000080002654 <fetchaddr>:
-+{
-+    80002654:	1101                	add	sp,sp,-32
-+    80002656:	ec06                	sd	ra,24(sp)
-+    80002658:	e822                	sd	s0,16(sp)
-+    8000265a:	e426                	sd	s1,8(sp)
-+    8000265c:	e04a                	sd	s2,0(sp)
-+    8000265e:	1000                	add	s0,sp,32
-+    80002660:	84aa                	mv	s1,a0
-+    80002662:	892e                	mv	s2,a1
-   struct proc *p = myproc();
--    8000271a:	9c6ff0ef          	jal	800018e0 <myproc>
-+    80002664:	9ccff0ef          	jal	80001830 <myproc>
-   if(addr >= p->sz || addr+sizeof(uint64) > p->sz) /* both tests needed, in case of overflow */
--    8000271e:	653c                	ld	a5,72(a0)
--    80002720:	02f4f663          	bgeu	s1,a5,8000274c <fetchaddr+0x42>
--    80002724:	00848713          	addi	a4,s1,8
--    80002728:	02e7e463          	bltu	a5,a4,80002750 <fetchaddr+0x46>
-+    80002668:	653c                	ld	a5,72(a0)
-+    8000266a:	02f4f663          	bgeu	s1,a5,80002696 <fetchaddr+0x42>
-+    8000266e:	00848713          	add	a4,s1,8
-+    80002672:	02e7e463          	bltu	a5,a4,8000269a <fetchaddr+0x46>
-   if(copyin(p->pagetable, (char *)ip, addr, sizeof(*ip)) != 0)
--    8000272c:	46a1                	li	a3,8
--    8000272e:	8626                	mv	a2,s1
--    80002730:	85ca                	mv	a1,s2
--    80002732:	6928                	ld	a0,80(a0)
--    80002734:	ef5fe0ef          	jal	80001628 <copyin>
--    80002738:	00a03533          	snez	a0,a0
--    8000273c:	40a00533          	neg	a0,a0
--}
--    80002740:	60e2                	ld	ra,24(sp)
--    80002742:	6442                	ld	s0,16(sp)
--    80002744:	64a2                	ld	s1,8(sp)
--    80002746:	6902                	ld	s2,0(sp)
--    80002748:	6105                	addi	sp,sp,32
--    8000274a:	8082                	ret
-+    80002676:	46a1                	li	a3,8
-+    80002678:	8626                	mv	a2,s1
-+    8000267a:	85ca                	mv	a1,s2
-+    8000267c:	6928                	ld	a0,80(a0)
-+    8000267e:	f23fe0ef          	jal	800015a0 <copyin>
-+    80002682:	00a03533          	snez	a0,a0
-+    80002686:	40a00533          	neg	a0,a0
-+}
-+    8000268a:	60e2                	ld	ra,24(sp)
-+    8000268c:	6442                	ld	s0,16(sp)
-+    8000268e:	64a2                	ld	s1,8(sp)
-+    80002690:	6902                	ld	s2,0(sp)
-+    80002692:	6105                	add	sp,sp,32
-+    80002694:	8082                	ret
-     return -1;
--    8000274c:	557d                	li	a0,-1
--    8000274e:	bfcd                	j	80002740 <fetchaddr+0x36>
--    80002750:	557d                	li	a0,-1
--    80002752:	b7fd                	j	80002740 <fetchaddr+0x36>
--
--0000000080002754 <fetchstr>:
--{
--    80002754:	7179                	addi	sp,sp,-48
--    80002756:	f406                	sd	ra,40(sp)
--    80002758:	f022                	sd	s0,32(sp)
--    8000275a:	ec26                	sd	s1,24(sp)
--    8000275c:	e84a                	sd	s2,16(sp)
--    8000275e:	e44e                	sd	s3,8(sp)
--    80002760:	1800                	addi	s0,sp,48
--    80002762:	892a                	mv	s2,a0
--    80002764:	84ae                	mv	s1,a1
--    80002766:	89b2                	mv	s3,a2
-+    80002696:	557d                	li	a0,-1
-+    80002698:	bfcd                	j	8000268a <fetchaddr+0x36>
-+    8000269a:	557d                	li	a0,-1
-+    8000269c:	b7fd                	j	8000268a <fetchaddr+0x36>
-+
-+000000008000269e <fetchstr>:
-+{
-+    8000269e:	7179                	add	sp,sp,-48
-+    800026a0:	f406                	sd	ra,40(sp)
-+    800026a2:	f022                	sd	s0,32(sp)
-+    800026a4:	ec26                	sd	s1,24(sp)
-+    800026a6:	e84a                	sd	s2,16(sp)
-+    800026a8:	e44e                	sd	s3,8(sp)
-+    800026aa:	1800                	add	s0,sp,48
-+    800026ac:	892a                	mv	s2,a0
-+    800026ae:	84ae                	mv	s1,a1
-+    800026b0:	89b2                	mv	s3,a2
-   struct proc *p = myproc();
--    80002768:	978ff0ef          	jal	800018e0 <myproc>
-+    800026b2:	97eff0ef          	jal	80001830 <myproc>
-   if(copyinstr(p->pagetable, buf, addr, max) < 0)
--    8000276c:	86ce                	mv	a3,s3
--    8000276e:	864a                	mv	a2,s2
--    80002770:	85a6                	mv	a1,s1
--    80002772:	6928                	ld	a0,80(a0)
--    80002774:	f3bfe0ef          	jal	800016ae <copyinstr>
--    80002778:	00054c63          	bltz	a0,80002790 <fetchstr+0x3c>
-+    800026b6:	86ce                	mv	a3,s3
-+    800026b8:	864a                	mv	a2,s2
-+    800026ba:	85a6                	mv	a1,s1
-+    800026bc:	6928                	ld	a0,80(a0)
-+    800026be:	f69fe0ef          	jal	80001626 <copyinstr>
-+    800026c2:	00054c63          	bltz	a0,800026da <fetchstr+0x3c>
-   return strlen(buf);
--    8000277c:	8526                	mv	a0,s1
--    8000277e:	ebafe0ef          	jal	80000e38 <strlen>
--}
--    80002782:	70a2                	ld	ra,40(sp)
--    80002784:	7402                	ld	s0,32(sp)
--    80002786:	64e2                	ld	s1,24(sp)
--    80002788:	6942                	ld	s2,16(sp)
--    8000278a:	69a2                	ld	s3,8(sp)
--    8000278c:	6145                	addi	sp,sp,48
--    8000278e:	8082                	ret
-+    800026c6:	8526                	mv	a0,s1
-+    800026c8:	f22fe0ef          	jal	80000dea <strlen>
-+}
-+    800026cc:	70a2                	ld	ra,40(sp)
-+    800026ce:	7402                	ld	s0,32(sp)
-+    800026d0:	64e2                	ld	s1,24(sp)
-+    800026d2:	6942                	ld	s2,16(sp)
-+    800026d4:	69a2                	ld	s3,8(sp)
-+    800026d6:	6145                	add	sp,sp,48
-+    800026d8:	8082                	ret
-     return -1;
--    80002790:	557d                	li	a0,-1
--    80002792:	bfc5                	j	80002782 <fetchstr+0x2e>
-+    800026da:	557d                	li	a0,-1
-+    800026dc:	bfc5                	j	800026cc <fetchstr+0x2e>
- 
--0000000080002794 <argint>:
-+00000000800026de <argint>:
- 
- /* Fetch the nth 32-bit system call argument. */
- void
- argint(int n, int *ip)
- {
--    80002794:	1101                	addi	sp,sp,-32
--    80002796:	ec06                	sd	ra,24(sp)
--    80002798:	e822                	sd	s0,16(sp)
--    8000279a:	e426                	sd	s1,8(sp)
--    8000279c:	1000                	addi	s0,sp,32
--    8000279e:	84ae                	mv	s1,a1
-+    800026de:	1101                	add	sp,sp,-32
-+    800026e0:	ec06                	sd	ra,24(sp)
-+    800026e2:	e822                	sd	s0,16(sp)
-+    800026e4:	e426                	sd	s1,8(sp)
-+    800026e6:	1000                	add	s0,sp,32
-+    800026e8:	84ae                	mv	s1,a1
-   *ip = argraw(n);
--    800027a0:	f0bff0ef          	jal	800026aa <argraw>
--    800027a4:	c088                	sw	a0,0(s1)
-+    800026ea:	f0bff0ef          	jal	800025f4 <argraw>
-+    800026ee:	c088                	sw	a0,0(s1)
- }
--    800027a6:	60e2                	ld	ra,24(sp)
--    800027a8:	6442                	ld	s0,16(sp)
--    800027aa:	64a2                	ld	s1,8(sp)
--    800027ac:	6105                	addi	sp,sp,32
--    800027ae:	8082                	ret
-+    800026f0:	60e2                	ld	ra,24(sp)
-+    800026f2:	6442                	ld	s0,16(sp)
-+    800026f4:	64a2                	ld	s1,8(sp)
-+    800026f6:	6105                	add	sp,sp,32
-+    800026f8:	8082                	ret
- 
--00000000800027b0 <argaddr>:
-+00000000800026fa <argaddr>:
- /* Retrieve an argument as a pointer. */
- /* Doesn't check for legality, since */
- /* copyin/copyout will do that. */
- void
- argaddr(int n, uint64 *ip)
- {
--    800027b0:	1101                	addi	sp,sp,-32
--    800027b2:	ec06                	sd	ra,24(sp)
--    800027b4:	e822                	sd	s0,16(sp)
--    800027b6:	e426                	sd	s1,8(sp)
--    800027b8:	1000                	addi	s0,sp,32
--    800027ba:	84ae                	mv	s1,a1
-+    800026fa:	1101                	add	sp,sp,-32
-+    800026fc:	ec06                	sd	ra,24(sp)
-+    800026fe:	e822                	sd	s0,16(sp)
-+    80002700:	e426                	sd	s1,8(sp)
-+    80002702:	1000                	add	s0,sp,32
-+    80002704:	84ae                	mv	s1,a1
-   *ip = argraw(n);
--    800027bc:	eefff0ef          	jal	800026aa <argraw>
--    800027c0:	e088                	sd	a0,0(s1)
-+    80002706:	eefff0ef          	jal	800025f4 <argraw>
-+    8000270a:	e088                	sd	a0,0(s1)
- }
--    800027c2:	60e2                	ld	ra,24(sp)
--    800027c4:	6442                	ld	s0,16(sp)
--    800027c6:	64a2                	ld	s1,8(sp)
--    800027c8:	6105                	addi	sp,sp,32
--    800027ca:	8082                	ret
-+    8000270c:	60e2                	ld	ra,24(sp)
-+    8000270e:	6442                	ld	s0,16(sp)
-+    80002710:	64a2                	ld	s1,8(sp)
-+    80002712:	6105                	add	sp,sp,32
-+    80002714:	8082                	ret
- 
--00000000800027cc <argstr>:
-+0000000080002716 <argstr>:
- /* Fetch the nth word-sized system call argument as a null-terminated string. */
- /* Copies into buf, at most max. */
- /* Returns string length if OK (including nul), -1 if error. */
- int
- argstr(int n, char *buf, int max)
- {
--    800027cc:	7179                	addi	sp,sp,-48
--    800027ce:	f406                	sd	ra,40(sp)
--    800027d0:	f022                	sd	s0,32(sp)
--    800027d2:	ec26                	sd	s1,24(sp)
--    800027d4:	e84a                	sd	s2,16(sp)
--    800027d6:	1800                	addi	s0,sp,48
--    800027d8:	84ae                	mv	s1,a1
--    800027da:	8932                	mv	s2,a2
-+    80002716:	7179                	add	sp,sp,-48
-+    80002718:	f406                	sd	ra,40(sp)
-+    8000271a:	f022                	sd	s0,32(sp)
-+    8000271c:	ec26                	sd	s1,24(sp)
-+    8000271e:	e84a                	sd	s2,16(sp)
-+    80002720:	1800                	add	s0,sp,48
-+    80002722:	84ae                	mv	s1,a1
-+    80002724:	8932                	mv	s2,a2
-   uint64 addr;
-   argaddr(n, &addr);
--    800027dc:	fd840593          	addi	a1,s0,-40
--    800027e0:	fd1ff0ef          	jal	800027b0 <argaddr>
-+    80002726:	fd840593          	add	a1,s0,-40
-+    8000272a:	fd1ff0ef          	jal	800026fa <argaddr>
-   return fetchstr(addr, buf, max);
--    800027e4:	864a                	mv	a2,s2
--    800027e6:	85a6                	mv	a1,s1
--    800027e8:	fd843503          	ld	a0,-40(s0)
--    800027ec:	f69ff0ef          	jal	80002754 <fetchstr>
--}
--    800027f0:	70a2                	ld	ra,40(sp)
--    800027f2:	7402                	ld	s0,32(sp)
--    800027f4:	64e2                	ld	s1,24(sp)
--    800027f6:	6942                	ld	s2,16(sp)
--    800027f8:	6145                	addi	sp,sp,48
--    800027fa:	8082                	ret
--
--00000000800027fc <syscall>:
-+    8000272e:	864a                	mv	a2,s2
-+    80002730:	85a6                	mv	a1,s1
-+    80002732:	fd843503          	ld	a0,-40(s0)
-+    80002736:	f69ff0ef          	jal	8000269e <fetchstr>
-+}
-+    8000273a:	70a2                	ld	ra,40(sp)
-+    8000273c:	7402                	ld	s0,32(sp)
-+    8000273e:	64e2                	ld	s1,24(sp)
-+    80002740:	6942                	ld	s2,16(sp)
-+    80002742:	6145                	add	sp,sp,48
-+    80002744:	8082                	ret
-+
-+0000000080002746 <syscall>:
- [SYS_close]   sys_close,
- };
- 
- void
- syscall(void)
- {
--    800027fc:	1101                	addi	sp,sp,-32
--    800027fe:	ec06                	sd	ra,24(sp)
--    80002800:	e822                	sd	s0,16(sp)
--    80002802:	e426                	sd	s1,8(sp)
--    80002804:	e04a                	sd	s2,0(sp)
--    80002806:	1000                	addi	s0,sp,32
-+    80002746:	1101                	add	sp,sp,-32
-+    80002748:	ec06                	sd	ra,24(sp)
-+    8000274a:	e822                	sd	s0,16(sp)
-+    8000274c:	e426                	sd	s1,8(sp)
-+    8000274e:	e04a                	sd	s2,0(sp)
-+    80002750:	1000                	add	s0,sp,32
-   int num;
-   struct proc *p = myproc();
--    80002808:	8d8ff0ef          	jal	800018e0 <myproc>
--    8000280c:	84aa                	mv	s1,a0
-+    80002752:	8deff0ef          	jal	80001830 <myproc>
-+    80002756:	84aa                	mv	s1,a0
- 
-   num = p->trapframe->a7;
--    8000280e:	05853903          	ld	s2,88(a0)
--    80002812:	0a893783          	ld	a5,168(s2)
--    80002816:	0007869b          	sext.w	a3,a5
-+    80002758:	05853903          	ld	s2,88(a0)
-+    8000275c:	0a893783          	ld	a5,168(s2)
-+    80002760:	0007869b          	sext.w	a3,a5
-   if(num > 0 && num < NELEM(syscalls) && syscalls[num]) {
--    8000281a:	37fd                	addiw	a5,a5,-1
--    8000281c:	4751                	li	a4,20
--    8000281e:	00f76f63          	bltu	a4,a5,8000283c <syscall+0x40>
--    80002822:	00369713          	slli	a4,a3,0x3
--    80002826:	00005797          	auipc	a5,0x5
--    8000282a:	faa78793          	addi	a5,a5,-86 # 800077d0 <syscalls>
--    8000282e:	97ba                	add	a5,a5,a4
--    80002830:	639c                	ld	a5,0(a5)
--    80002832:	c789                	beqz	a5,8000283c <syscall+0x40>
-+    80002764:	37fd                	addw	a5,a5,-1
-+    80002766:	4751                	li	a4,20
-+    80002768:	00f76f63          	bltu	a4,a5,80002786 <syscall+0x40>
-+    8000276c:	00369713          	sll	a4,a3,0x3
-+    80002770:	00005797          	auipc	a5,0x5
-+    80002774:	d2078793          	add	a5,a5,-736 # 80007490 <syscalls>
-+    80002778:	97ba                	add	a5,a5,a4
-+    8000277a:	639c                	ld	a5,0(a5)
-+    8000277c:	c789                	beqz	a5,80002786 <syscall+0x40>
-     /* Use num to lookup the system call function for num, call it, */
-     /* and store its return value in p->trapframe->a0 */
-     p->trapframe->a0 = syscalls[num]();
--    80002834:	9782                	jalr	a5
--    80002836:	06a93823          	sd	a0,112(s2)
--    8000283a:	a829                	j	80002854 <syscall+0x58>
-+    8000277e:	9782                	jalr	a5
-+    80002780:	06a93823          	sd	a0,112(s2)
-+    80002784:	a829                	j	8000279e <syscall+0x58>
-   } else {
-     printf("%d %s: unknown sys call %d\n",
--    8000283c:	15848613          	addi	a2,s1,344
--    80002840:	588c                	lw	a1,48(s1)
--    80002842:	00005517          	auipc	a0,0x5
--    80002846:	bce50513          	addi	a0,a0,-1074 # 80007410 <etext+0x410>
--    8000284a:	c79fd0ef          	jal	800004c2 <printf>
-+    80002786:	15848613          	add	a2,s1,344
-+    8000278a:	588c                	lw	a1,48(s1)
-+    8000278c:	00005517          	auipc	a0,0x5
-+    80002790:	ccc50513          	add	a0,a0,-820 # 80007458 <states.0+0x158>
-+    80002794:	d0bfd0ef          	jal	8000049e <printf>
-             p->pid, p->name, num);
-     p->trapframe->a0 = -1;
--    8000284e:	6cbc                	ld	a5,88(s1)
--    80002850:	577d                	li	a4,-1
--    80002852:	fbb8                	sd	a4,112(a5)
-+    80002798:	6cbc                	ld	a5,88(s1)
-+    8000279a:	577d                	li	a4,-1
-+    8000279c:	fbb8                	sd	a4,112(a5)
-   }
- }
--    80002854:	60e2                	ld	ra,24(sp)
--    80002856:	6442                	ld	s0,16(sp)
--    80002858:	64a2                	ld	s1,8(sp)
--    8000285a:	6902                	ld	s2,0(sp)
--    8000285c:	6105                	addi	sp,sp,32
--    8000285e:	8082                	ret
-+    8000279e:	60e2                	ld	ra,24(sp)
-+    800027a0:	6442                	ld	s0,16(sp)
-+    800027a2:	64a2                	ld	s1,8(sp)
-+    800027a4:	6902                	ld	s2,0(sp)
-+    800027a6:	6105                	add	sp,sp,32
-+    800027a8:	8082                	ret
- 
--0000000080002860 <sys_exit>:
-+00000000800027aa <sys_exit>:
- #include "spinlock.h"
- #include "proc.h"
- 
- uint64
- sys_exit(void)
- {
--    80002860:	1101                	addi	sp,sp,-32
--    80002862:	ec06                	sd	ra,24(sp)
--    80002864:	e822                	sd	s0,16(sp)
--    80002866:	1000                	addi	s0,sp,32
-+    800027aa:	1101                	add	sp,sp,-32
-+    800027ac:	ec06                	sd	ra,24(sp)
-+    800027ae:	e822                	sd	s0,16(sp)
-+    800027b0:	1000                	add	s0,sp,32
-   int n;
-   argint(0, &n);
--    80002868:	fec40593          	addi	a1,s0,-20
--    8000286c:	4501                	li	a0,0
--    8000286e:	f27ff0ef          	jal	80002794 <argint>
-+    800027b2:	fec40593          	add	a1,s0,-20
-+    800027b6:	4501                	li	a0,0
-+    800027b8:	f27ff0ef          	jal	800026de <argint>
-   exit(n);
--    80002872:	fec42503          	lw	a0,-20(s0)
--    80002876:	f44ff0ef          	jal	80001fba <exit>
-+    800027bc:	fec42503          	lw	a0,-20(s0)
-+    800027c0:	f48ff0ef          	jal	80001f08 <exit>
-   return 0;  /* not reached */
- }
--    8000287a:	4501                	li	a0,0
--    8000287c:	60e2                	ld	ra,24(sp)
--    8000287e:	6442                	ld	s0,16(sp)
--    80002880:	6105                	addi	sp,sp,32
--    80002882:	8082                	ret
-+    800027c4:	4501                	li	a0,0
-+    800027c6:	60e2                	ld	ra,24(sp)
-+    800027c8:	6442                	ld	s0,16(sp)
-+    800027ca:	6105                	add	sp,sp,32
-+    800027cc:	8082                	ret
- 
--0000000080002884 <sys_getpid>:
-+00000000800027ce <sys_getpid>:
- 
- uint64
- sys_getpid(void)
- {
--    80002884:	1141                	addi	sp,sp,-16
--    80002886:	e406                	sd	ra,8(sp)
--    80002888:	e022                	sd	s0,0(sp)
--    8000288a:	0800                	addi	s0,sp,16
-+    800027ce:	1141                	add	sp,sp,-16
-+    800027d0:	e406                	sd	ra,8(sp)
-+    800027d2:	e022                	sd	s0,0(sp)
-+    800027d4:	0800                	add	s0,sp,16
-   return myproc()->pid;
--    8000288c:	854ff0ef          	jal	800018e0 <myproc>
-+    800027d6:	85aff0ef          	jal	80001830 <myproc>
- }
--    80002890:	5908                	lw	a0,48(a0)
--    80002892:	60a2                	ld	ra,8(sp)
--    80002894:	6402                	ld	s0,0(sp)
--    80002896:	0141                	addi	sp,sp,16
--    80002898:	8082                	ret
-+    800027da:	5908                	lw	a0,48(a0)
-+    800027dc:	60a2                	ld	ra,8(sp)
-+    800027de:	6402                	ld	s0,0(sp)
-+    800027e0:	0141                	add	sp,sp,16
-+    800027e2:	8082                	ret
- 
--000000008000289a <sys_fork>:
-+00000000800027e4 <sys_fork>:
- 
- uint64
- sys_fork(void)
- {
--    8000289a:	1141                	addi	sp,sp,-16
--    8000289c:	e406                	sd	ra,8(sp)
--    8000289e:	e022                	sd	s0,0(sp)
--    800028a0:	0800                	addi	s0,sp,16
-+    800027e4:	1141                	add	sp,sp,-16
-+    800027e6:	e406                	sd	ra,8(sp)
-+    800027e8:	e022                	sd	s0,0(sp)
-+    800027ea:	0800                	add	s0,sp,16
-   return fork();
--    800028a2:	b64ff0ef          	jal	80001c06 <fork>
-+    800027ec:	b6aff0ef          	jal	80001b56 <fork>
- }
--    800028a6:	60a2                	ld	ra,8(sp)
--    800028a8:	6402                	ld	s0,0(sp)
--    800028aa:	0141                	addi	sp,sp,16
--    800028ac:	8082                	ret
-+    800027f0:	60a2                	ld	ra,8(sp)
-+    800027f2:	6402                	ld	s0,0(sp)
-+    800027f4:	0141                	add	sp,sp,16
-+    800027f6:	8082                	ret
- 
--00000000800028ae <sys_wait>:
-+00000000800027f8 <sys_wait>:
- 
- uint64
- sys_wait(void)
- {
--    800028ae:	1101                	addi	sp,sp,-32
--    800028b0:	ec06                	sd	ra,24(sp)
--    800028b2:	e822                	sd	s0,16(sp)
--    800028b4:	1000                	addi	s0,sp,32
-+    800027f8:	1101                	add	sp,sp,-32
-+    800027fa:	ec06                	sd	ra,24(sp)
-+    800027fc:	e822                	sd	s0,16(sp)
-+    800027fe:	1000                	add	s0,sp,32
-   uint64 p;
-   argaddr(0, &p);
--    800028b6:	fe840593          	addi	a1,s0,-24
--    800028ba:	4501                	li	a0,0
--    800028bc:	ef5ff0ef          	jal	800027b0 <argaddr>
-+    80002800:	fe840593          	add	a1,s0,-24
-+    80002804:	4501                	li	a0,0
-+    80002806:	ef5ff0ef          	jal	800026fa <argaddr>
-   return wait(p);
--    800028c0:	fe843503          	ld	a0,-24(s0)
--    800028c4:	84dff0ef          	jal	80002110 <wait>
-+    8000280a:	fe843503          	ld	a0,-24(s0)
-+    8000280e:	851ff0ef          	jal	8000205e <wait>
- }
--    800028c8:	60e2                	ld	ra,24(sp)
--    800028ca:	6442                	ld	s0,16(sp)
--    800028cc:	6105                	addi	sp,sp,32
--    800028ce:	8082                	ret
-+    80002812:	60e2                	ld	ra,24(sp)
-+    80002814:	6442                	ld	s0,16(sp)
-+    80002816:	6105                	add	sp,sp,32
-+    80002818:	8082                	ret
- 
--00000000800028d0 <sys_sbrk>:
-+000000008000281a <sys_sbrk>:
- 
- uint64
- sys_sbrk(void)
- {
--    800028d0:	7179                	addi	sp,sp,-48
--    800028d2:	f406                	sd	ra,40(sp)
--    800028d4:	f022                	sd	s0,32(sp)
--    800028d6:	ec26                	sd	s1,24(sp)
--    800028d8:	1800                	addi	s0,sp,48
-+    8000281a:	7179                	add	sp,sp,-48
-+    8000281c:	f406                	sd	ra,40(sp)
-+    8000281e:	f022                	sd	s0,32(sp)
-+    80002820:	ec26                	sd	s1,24(sp)
-+    80002822:	1800                	add	s0,sp,48
-   uint64 addr;
-   int n;
- 
-   argint(0, &n);
--    800028da:	fdc40593          	addi	a1,s0,-36
--    800028de:	4501                	li	a0,0
--    800028e0:	eb5ff0ef          	jal	80002794 <argint>
-+    80002824:	fdc40593          	add	a1,s0,-36
-+    80002828:	4501                	li	a0,0
-+    8000282a:	eb5ff0ef          	jal	800026de <argint>
-   addr = myproc()->sz;
--    800028e4:	ffdfe0ef          	jal	800018e0 <myproc>
--    800028e8:	6524                	ld	s1,72(a0)
-+    8000282e:	802ff0ef          	jal	80001830 <myproc>
-+    80002832:	6524                	ld	s1,72(a0)
-   if(growproc(n) < 0)
--    800028ea:	fdc42503          	lw	a0,-36(s0)
--    800028ee:	ac8ff0ef          	jal	80001bb6 <growproc>
--    800028f2:	00054863          	bltz	a0,80002902 <sys_sbrk+0x32>
-+    80002834:	fdc42503          	lw	a0,-36(s0)
-+    80002838:	aceff0ef          	jal	80001b06 <growproc>
-+    8000283c:	00054863          	bltz	a0,8000284c <sys_sbrk+0x32>
-     return -1;
-   return addr;
- }
--    800028f6:	8526                	mv	a0,s1
--    800028f8:	70a2                	ld	ra,40(sp)
--    800028fa:	7402                	ld	s0,32(sp)
--    800028fc:	64e2                	ld	s1,24(sp)
--    800028fe:	6145                	addi	sp,sp,48
--    80002900:	8082                	ret
-+    80002840:	8526                	mv	a0,s1
-+    80002842:	70a2                	ld	ra,40(sp)
-+    80002844:	7402                	ld	s0,32(sp)
-+    80002846:	64e2                	ld	s1,24(sp)
-+    80002848:	6145                	add	sp,sp,48
-+    8000284a:	8082                	ret
-     return -1;
--    80002902:	54fd                	li	s1,-1
--    80002904:	bfcd                	j	800028f6 <sys_sbrk+0x26>
-+    8000284c:	54fd                	li	s1,-1
-+    8000284e:	bfcd                	j	80002840 <sys_sbrk+0x26>
- 
--0000000080002906 <sys_sleep>:
-+0000000080002850 <sys_sleep>:
- 
- uint64
- sys_sleep(void)
- {
--    80002906:	7139                	addi	sp,sp,-64
--    80002908:	fc06                	sd	ra,56(sp)
--    8000290a:	f822                	sd	s0,48(sp)
--    8000290c:	f04a                	sd	s2,32(sp)
--    8000290e:	0080                	addi	s0,sp,64
-+    80002850:	7139                	add	sp,sp,-64
-+    80002852:	fc06                	sd	ra,56(sp)
-+    80002854:	f822                	sd	s0,48(sp)
-+    80002856:	f426                	sd	s1,40(sp)
-+    80002858:	f04a                	sd	s2,32(sp)
-+    8000285a:	ec4e                	sd	s3,24(sp)
-+    8000285c:	0080                	add	s0,sp,64
-   int n;
-   uint ticks0;
- 
-   argint(0, &n);
--    80002910:	fcc40593          	addi	a1,s0,-52
--    80002914:	4501                	li	a0,0
--    80002916:	e7fff0ef          	jal	80002794 <argint>
-+    8000285e:	fcc40593          	add	a1,s0,-52
-+    80002862:	4501                	li	a0,0
-+    80002864:	e7bff0ef          	jal	800026de <argint>
-   if(n < 0)
--    8000291a:	fcc42783          	lw	a5,-52(s0)
--    8000291e:	0607c763          	bltz	a5,8000298c <sys_sleep+0x86>
-+    80002868:	fcc42783          	lw	a5,-52(s0)
-+    8000286c:	0607c563          	bltz	a5,800028d6 <sys_sleep+0x86>
-     n = 0;
-   acquire(&tickslock);
--    80002922:	00016517          	auipc	a0,0x16
--    80002926:	82e50513          	addi	a0,a0,-2002 # 80018150 <tickslock>
--    8000292a:	acafe0ef          	jal	80000bf4 <acquire>
-+    80002870:	00013517          	auipc	a0,0x13
-+    80002874:	ff050513          	add	a0,a0,-16 # 80015860 <tickslock>
-+    80002878:	b28fe0ef          	jal	80000ba0 <acquire>
-   ticks0 = ticks;
--    8000292e:	00008917          	auipc	s2,0x8
--    80002932:	8c292903          	lw	s2,-1854(s2) # 8000a1f0 <ticks>
-+    8000287c:	00005917          	auipc	s2,0x5
-+    80002880:	08492903          	lw	s2,132(s2) # 80007900 <ticks>
-   while(ticks - ticks0 < n){
--    80002936:	fcc42783          	lw	a5,-52(s0)
--    8000293a:	cf8d                	beqz	a5,80002974 <sys_sleep+0x6e>
--    8000293c:	f426                	sd	s1,40(sp)
--    8000293e:	ec4e                	sd	s3,24(sp)
-+    80002884:	fcc42783          	lw	a5,-52(s0)
-+    80002888:	cb8d                	beqz	a5,800028ba <sys_sleep+0x6a>
-     if(killed(myproc())){
-       release(&tickslock);
-       return -1;
-     }
-     sleep(&ticks, &tickslock);
--    80002940:	00016997          	auipc	s3,0x16
--    80002944:	81098993          	addi	s3,s3,-2032 # 80018150 <tickslock>
--    80002948:	00008497          	auipc	s1,0x8
--    8000294c:	8a848493          	addi	s1,s1,-1880 # 8000a1f0 <ticks>
-+    8000288a:	00013997          	auipc	s3,0x13
-+    8000288e:	fd698993          	add	s3,s3,-42 # 80015860 <tickslock>
-+    80002892:	00005497          	auipc	s1,0x5
-+    80002896:	06e48493          	add	s1,s1,110 # 80007900 <ticks>
-     if(killed(myproc())){
--    80002950:	f91fe0ef          	jal	800018e0 <myproc>
--    80002954:	f92ff0ef          	jal	800020e6 <killed>
--    80002958:	ed0d                	bnez	a0,80002992 <sys_sleep+0x8c>
-+    8000289a:	f97fe0ef          	jal	80001830 <myproc>
-+    8000289e:	f96ff0ef          	jal	80002034 <killed>
-+    800028a2:	ed0d                	bnez	a0,800028dc <sys_sleep+0x8c>
-     sleep(&ticks, &tickslock);
--    8000295a:	85ce                	mv	a1,s3
--    8000295c:	8526                	mv	a0,s1
--    8000295e:	d50ff0ef          	jal	80001eae <sleep>
-+    800028a4:	85ce                	mv	a1,s3
-+    800028a6:	8526                	mv	a0,s1
-+    800028a8:	d54ff0ef          	jal	80001dfc <sleep>
-   while(ticks - ticks0 < n){
--    80002962:	409c                	lw	a5,0(s1)
--    80002964:	412787bb          	subw	a5,a5,s2
--    80002968:	fcc42703          	lw	a4,-52(s0)
--    8000296c:	fee7e2e3          	bltu	a5,a4,80002950 <sys_sleep+0x4a>
--    80002970:	74a2                	ld	s1,40(sp)
--    80002972:	69e2                	ld	s3,24(sp)
-+    800028ac:	409c                	lw	a5,0(s1)
-+    800028ae:	412787bb          	subw	a5,a5,s2
-+    800028b2:	fcc42703          	lw	a4,-52(s0)
-+    800028b6:	fee7e2e3          	bltu	a5,a4,8000289a <sys_sleep+0x4a>
-   }
-   release(&tickslock);
--    80002974:	00015517          	auipc	a0,0x15
--    80002978:	7dc50513          	addi	a0,a0,2012 # 80018150 <tickslock>
--    8000297c:	b10fe0ef          	jal	80000c8c <release>
-+    800028ba:	00013517          	auipc	a0,0x13
-+    800028be:	fa650513          	add	a0,a0,-90 # 80015860 <tickslock>
-+    800028c2:	b76fe0ef          	jal	80000c38 <release>
-   return 0;
--    80002980:	4501                	li	a0,0
--}
--    80002982:	70e2                	ld	ra,56(sp)
--    80002984:	7442                	ld	s0,48(sp)
--    80002986:	7902                	ld	s2,32(sp)
--    80002988:	6121                	addi	sp,sp,64
--    8000298a:	8082                	ret
-+    800028c6:	4501                	li	a0,0
-+}
-+    800028c8:	70e2                	ld	ra,56(sp)
-+    800028ca:	7442                	ld	s0,48(sp)
-+    800028cc:	74a2                	ld	s1,40(sp)
-+    800028ce:	7902                	ld	s2,32(sp)
-+    800028d0:	69e2                	ld	s3,24(sp)
-+    800028d2:	6121                	add	sp,sp,64
-+    800028d4:	8082                	ret
-     n = 0;
--    8000298c:	fc042623          	sw	zero,-52(s0)
--    80002990:	bf49                	j	80002922 <sys_sleep+0x1c>
-+    800028d6:	fc042623          	sw	zero,-52(s0)
-+    800028da:	bf59                	j	80002870 <sys_sleep+0x20>
-       release(&tickslock);
--    80002992:	00015517          	auipc	a0,0x15
--    80002996:	7be50513          	addi	a0,a0,1982 # 80018150 <tickslock>
--    8000299a:	af2fe0ef          	jal	80000c8c <release>
-+    800028dc:	00013517          	auipc	a0,0x13
-+    800028e0:	f8450513          	add	a0,a0,-124 # 80015860 <tickslock>
-+    800028e4:	b54fe0ef          	jal	80000c38 <release>
-       return -1;
--    8000299e:	557d                	li	a0,-1
--    800029a0:	74a2                	ld	s1,40(sp)
--    800029a2:	69e2                	ld	s3,24(sp)
--    800029a4:	bff9                	j	80002982 <sys_sleep+0x7c>
-+    800028e8:	557d                	li	a0,-1
-+    800028ea:	bff9                	j	800028c8 <sys_sleep+0x78>
- 
--00000000800029a6 <sys_kill>:
-+00000000800028ec <sys_kill>:
- 
- uint64
- sys_kill(void)
- {
--    800029a6:	1101                	addi	sp,sp,-32
--    800029a8:	ec06                	sd	ra,24(sp)
--    800029aa:	e822                	sd	s0,16(sp)
--    800029ac:	1000                	addi	s0,sp,32
-+    800028ec:	1101                	add	sp,sp,-32
-+    800028ee:	ec06                	sd	ra,24(sp)
-+    800028f0:	e822                	sd	s0,16(sp)
-+    800028f2:	1000                	add	s0,sp,32
-   int pid;
- 
-   argint(0, &pid);
--    800029ae:	fec40593          	addi	a1,s0,-20
--    800029b2:	4501                	li	a0,0
--    800029b4:	de1ff0ef          	jal	80002794 <argint>
-+    800028f4:	fec40593          	add	a1,s0,-20
-+    800028f8:	4501                	li	a0,0
-+    800028fa:	de5ff0ef          	jal	800026de <argint>
-   return kill(pid);
--    800029b8:	fec42503          	lw	a0,-20(s0)
--    800029bc:	ea0ff0ef          	jal	8000205c <kill>
-+    800028fe:	fec42503          	lw	a0,-20(s0)
-+    80002902:	ea8ff0ef          	jal	80001faa <kill>
- }
--    800029c0:	60e2                	ld	ra,24(sp)
--    800029c2:	6442                	ld	s0,16(sp)
--    800029c4:	6105                	addi	sp,sp,32
--    800029c6:	8082                	ret
-+    80002906:	60e2                	ld	ra,24(sp)
-+    80002908:	6442                	ld	s0,16(sp)
-+    8000290a:	6105                	add	sp,sp,32
-+    8000290c:	8082                	ret
- 
--00000000800029c8 <sys_uptime>:
-+000000008000290e <sys_uptime>:
- 
- /* return how many clock tick interrupts have occurred */
- /* since start. */
- uint64
- sys_uptime(void)
- {
--    800029c8:	1101                	addi	sp,sp,-32
--    800029ca:	ec06                	sd	ra,24(sp)
--    800029cc:	e822                	sd	s0,16(sp)
--    800029ce:	e426                	sd	s1,8(sp)
--    800029d0:	1000                	addi	s0,sp,32
-+    8000290e:	1101                	add	sp,sp,-32
-+    80002910:	ec06                	sd	ra,24(sp)
-+    80002912:	e822                	sd	s0,16(sp)
-+    80002914:	e426                	sd	s1,8(sp)
-+    80002916:	1000                	add	s0,sp,32
-   uint xticks;
- 
-   acquire(&tickslock);
--    800029d2:	00015517          	auipc	a0,0x15
--    800029d6:	77e50513          	addi	a0,a0,1918 # 80018150 <tickslock>
--    800029da:	a1afe0ef          	jal	80000bf4 <acquire>
-+    80002918:	00013517          	auipc	a0,0x13
-+    8000291c:	f4850513          	add	a0,a0,-184 # 80015860 <tickslock>
-+    80002920:	a80fe0ef          	jal	80000ba0 <acquire>
-   xticks = ticks;
--    800029de:	00008497          	auipc	s1,0x8
--    800029e2:	8124a483          	lw	s1,-2030(s1) # 8000a1f0 <ticks>
-+    80002924:	00005497          	auipc	s1,0x5
-+    80002928:	fdc4a483          	lw	s1,-36(s1) # 80007900 <ticks>
-   release(&tickslock);
--    800029e6:	00015517          	auipc	a0,0x15
--    800029ea:	76a50513          	addi	a0,a0,1898 # 80018150 <tickslock>
--    800029ee:	a9efe0ef          	jal	80000c8c <release>
-+    8000292c:	00013517          	auipc	a0,0x13
-+    80002930:	f3450513          	add	a0,a0,-204 # 80015860 <tickslock>
-+    80002934:	b04fe0ef          	jal	80000c38 <release>
-   return xticks;
- }
--    800029f2:	02049513          	slli	a0,s1,0x20
--    800029f6:	9101                	srli	a0,a0,0x20
--    800029f8:	60e2                	ld	ra,24(sp)
--    800029fa:	6442                	ld	s0,16(sp)
--    800029fc:	64a2                	ld	s1,8(sp)
--    800029fe:	6105                	addi	sp,sp,32
--    80002a00:	8082                	ret
-+    80002938:	02049513          	sll	a0,s1,0x20
-+    8000293c:	9101                	srl	a0,a0,0x20
-+    8000293e:	60e2                	ld	ra,24(sp)
-+    80002940:	6442                	ld	s0,16(sp)
-+    80002942:	64a2                	ld	s1,8(sp)
-+    80002944:	6105                	add	sp,sp,32
-+    80002946:	8082                	ret
- 
--0000000080002a02 <binit>:
-+0000000080002948 <binit>:
-   struct buf head;
- } bcache;
- 
- void
- binit(void)
- {
--    80002a02:	7179                	addi	sp,sp,-48
--    80002a04:	f406                	sd	ra,40(sp)
--    80002a06:	f022                	sd	s0,32(sp)
--    80002a08:	ec26                	sd	s1,24(sp)
--    80002a0a:	e84a                	sd	s2,16(sp)
--    80002a0c:	e44e                	sd	s3,8(sp)
--    80002a0e:	e052                	sd	s4,0(sp)
--    80002a10:	1800                	addi	s0,sp,48
-+    80002948:	7179                	add	sp,sp,-48
-+    8000294a:	f406                	sd	ra,40(sp)
-+    8000294c:	f022                	sd	s0,32(sp)
-+    8000294e:	ec26                	sd	s1,24(sp)
-+    80002950:	e84a                	sd	s2,16(sp)
-+    80002952:	e44e                	sd	s3,8(sp)
-+    80002954:	e052                	sd	s4,0(sp)
-+    80002956:	1800                	add	s0,sp,48
-   struct buf *b;
- 
-   initlock(&bcache.lock, "bcache");
--    80002a12:	00005597          	auipc	a1,0x5
--    80002a16:	a1e58593          	addi	a1,a1,-1506 # 80007430 <etext+0x430>
--    80002a1a:	00015517          	auipc	a0,0x15
--    80002a1e:	74e50513          	addi	a0,a0,1870 # 80018168 <bcache>
--    80002a22:	952fe0ef          	jal	80000b74 <initlock>
-+    80002958:	00005597          	auipc	a1,0x5
-+    8000295c:	be858593          	add	a1,a1,-1048 # 80007540 <syscalls+0xb0>
-+    80002960:	00013517          	auipc	a0,0x13
-+    80002964:	f1850513          	add	a0,a0,-232 # 80015878 <bcache>
-+    80002968:	9b8fe0ef          	jal	80000b20 <initlock>
- 
-   /* Create linked list of buffers */
-   bcache.head.prev = &bcache.head;
--    80002a26:	0001d797          	auipc	a5,0x1d
--    80002a2a:	74278793          	addi	a5,a5,1858 # 80020168 <bcache+0x8000>
--    80002a2e:	0001e717          	auipc	a4,0x1e
--    80002a32:	9a270713          	addi	a4,a4,-1630 # 800203d0 <bcache+0x8268>
--    80002a36:	2ae7b823          	sd	a4,688(a5)
-+    8000296c:	0001b797          	auipc	a5,0x1b
-+    80002970:	f0c78793          	add	a5,a5,-244 # 8001d878 <bcache+0x8000>
-+    80002974:	0001b717          	auipc	a4,0x1b
-+    80002978:	16c70713          	add	a4,a4,364 # 8001dae0 <bcache+0x8268>
-+    8000297c:	2ae7b823          	sd	a4,688(a5)
-   bcache.head.next = &bcache.head;
--    80002a3a:	2ae7bc23          	sd	a4,696(a5)
-+    80002980:	2ae7bc23          	sd	a4,696(a5)
-   for(b = bcache.buf; b < bcache.buf+NBUF; b++){
--    80002a3e:	00015497          	auipc	s1,0x15
--    80002a42:	74248493          	addi	s1,s1,1858 # 80018180 <bcache+0x18>
-+    80002984:	00013497          	auipc	s1,0x13
-+    80002988:	f0c48493          	add	s1,s1,-244 # 80015890 <bcache+0x18>
-     b->next = bcache.head.next;
--    80002a46:	893e                	mv	s2,a5
-+    8000298c:	893e                	mv	s2,a5
-     b->prev = &bcache.head;
--    80002a48:	89ba                	mv	s3,a4
-+    8000298e:	89ba                	mv	s3,a4
-     initsleeplock(&b->lock, "buffer");
--    80002a4a:	00005a17          	auipc	s4,0x5
--    80002a4e:	9eea0a13          	addi	s4,s4,-1554 # 80007438 <etext+0x438>
-+    80002990:	00005a17          	auipc	s4,0x5
-+    80002994:	bb8a0a13          	add	s4,s4,-1096 # 80007548 <syscalls+0xb8>
-     b->next = bcache.head.next;
--    80002a52:	2b893783          	ld	a5,696(s2)
--    80002a56:	e8bc                	sd	a5,80(s1)
-+    80002998:	2b893783          	ld	a5,696(s2)
-+    8000299c:	e8bc                	sd	a5,80(s1)
-     b->prev = &bcache.head;
--    80002a58:	0534b423          	sd	s3,72(s1)
-+    8000299e:	0534b423          	sd	s3,72(s1)
-     initsleeplock(&b->lock, "buffer");
--    80002a5c:	85d2                	mv	a1,s4
--    80002a5e:	01048513          	addi	a0,s1,16
--    80002a62:	248010ef          	jal	80003caa <initsleeplock>
-+    800029a2:	85d2                	mv	a1,s4
-+    800029a4:	01048513          	add	a0,s1,16
-+    800029a8:	1f6010ef          	jal	80003b9e <initsleeplock>
-     bcache.head.next->prev = b;
--    80002a66:	2b893783          	ld	a5,696(s2)
--    80002a6a:	e7a4                	sd	s1,72(a5)
-+    800029ac:	2b893783          	ld	a5,696(s2)
-+    800029b0:	e7a4                	sd	s1,72(a5)
-     bcache.head.next = b;
--    80002a6c:	2a993c23          	sd	s1,696(s2)
-+    800029b2:	2a993c23          	sd	s1,696(s2)
-   for(b = bcache.buf; b < bcache.buf+NBUF; b++){
--    80002a70:	45848493          	addi	s1,s1,1112
--    80002a74:	fd349fe3          	bne	s1,s3,80002a52 <binit+0x50>
-+    800029b6:	45848493          	add	s1,s1,1112
-+    800029ba:	fd349fe3          	bne	s1,s3,80002998 <binit+0x50>
-   }
- }
--    80002a78:	70a2                	ld	ra,40(sp)
--    80002a7a:	7402                	ld	s0,32(sp)
--    80002a7c:	64e2                	ld	s1,24(sp)
--    80002a7e:	6942                	ld	s2,16(sp)
--    80002a80:	69a2                	ld	s3,8(sp)
--    80002a82:	6a02                	ld	s4,0(sp)
--    80002a84:	6145                	addi	sp,sp,48
--    80002a86:	8082                	ret
-+    800029be:	70a2                	ld	ra,40(sp)
-+    800029c0:	7402                	ld	s0,32(sp)
-+    800029c2:	64e2                	ld	s1,24(sp)
-+    800029c4:	6942                	ld	s2,16(sp)
-+    800029c6:	69a2                	ld	s3,8(sp)
-+    800029c8:	6a02                	ld	s4,0(sp)
-+    800029ca:	6145                	add	sp,sp,48
-+    800029cc:	8082                	ret
- 
--0000000080002a88 <bread>:
-+00000000800029ce <bread>:
- }
- 
- /* Return a locked buf with the contents of the indicated block. */
- struct buf*
- bread(uint dev, uint blockno)
- {
--    80002a88:	7179                	addi	sp,sp,-48
--    80002a8a:	f406                	sd	ra,40(sp)
--    80002a8c:	f022                	sd	s0,32(sp)
--    80002a8e:	ec26                	sd	s1,24(sp)
--    80002a90:	e84a                	sd	s2,16(sp)
--    80002a92:	e44e                	sd	s3,8(sp)
--    80002a94:	1800                	addi	s0,sp,48
--    80002a96:	892a                	mv	s2,a0
--    80002a98:	89ae                	mv	s3,a1
-+    800029ce:	7179                	add	sp,sp,-48
-+    800029d0:	f406                	sd	ra,40(sp)
-+    800029d2:	f022                	sd	s0,32(sp)
-+    800029d4:	ec26                	sd	s1,24(sp)
-+    800029d6:	e84a                	sd	s2,16(sp)
-+    800029d8:	e44e                	sd	s3,8(sp)
-+    800029da:	1800                	add	s0,sp,48
-+    800029dc:	892a                	mv	s2,a0
-+    800029de:	89ae                	mv	s3,a1
-   acquire(&bcache.lock);
--    80002a9a:	00015517          	auipc	a0,0x15
--    80002a9e:	6ce50513          	addi	a0,a0,1742 # 80018168 <bcache>
--    80002aa2:	952fe0ef          	jal	80000bf4 <acquire>
-+    800029e0:	00013517          	auipc	a0,0x13
-+    800029e4:	e9850513          	add	a0,a0,-360 # 80015878 <bcache>
-+    800029e8:	9b8fe0ef          	jal	80000ba0 <acquire>
-   for(b = bcache.head.next; b != &bcache.head; b = b->next){
--    80002aa6:	0001e497          	auipc	s1,0x1e
--    80002aaa:	97a4b483          	ld	s1,-1670(s1) # 80020420 <bcache+0x82b8>
--    80002aae:	0001e797          	auipc	a5,0x1e
--    80002ab2:	92278793          	addi	a5,a5,-1758 # 800203d0 <bcache+0x8268>
--    80002ab6:	02f48b63          	beq	s1,a5,80002aec <bread+0x64>
--    80002aba:	873e                	mv	a4,a5
--    80002abc:	a021                	j	80002ac4 <bread+0x3c>
--    80002abe:	68a4                	ld	s1,80(s1)
--    80002ac0:	02e48663          	beq	s1,a4,80002aec <bread+0x64>
-+    800029ec:	0001b497          	auipc	s1,0x1b
-+    800029f0:	1444b483          	ld	s1,324(s1) # 8001db30 <bcache+0x82b8>
-+    800029f4:	0001b797          	auipc	a5,0x1b
-+    800029f8:	0ec78793          	add	a5,a5,236 # 8001dae0 <bcache+0x8268>
-+    800029fc:	02f48b63          	beq	s1,a5,80002a32 <bread+0x64>
-+    80002a00:	873e                	mv	a4,a5
-+    80002a02:	a021                	j	80002a0a <bread+0x3c>
-+    80002a04:	68a4                	ld	s1,80(s1)
-+    80002a06:	02e48663          	beq	s1,a4,80002a32 <bread+0x64>
-     if(b->dev == dev && b->blockno == blockno){
--    80002ac4:	449c                	lw	a5,8(s1)
--    80002ac6:	ff279ce3          	bne	a5,s2,80002abe <bread+0x36>
--    80002aca:	44dc                	lw	a5,12(s1)
--    80002acc:	ff3799e3          	bne	a5,s3,80002abe <bread+0x36>
-+    80002a0a:	449c                	lw	a5,8(s1)
-+    80002a0c:	ff279ce3          	bne	a5,s2,80002a04 <bread+0x36>
-+    80002a10:	44dc                	lw	a5,12(s1)
-+    80002a12:	ff3799e3          	bne	a5,s3,80002a04 <bread+0x36>
-       b->refcnt++;
--    80002ad0:	40bc                	lw	a5,64(s1)
--    80002ad2:	2785                	addiw	a5,a5,1
--    80002ad4:	c0bc                	sw	a5,64(s1)
-+    80002a16:	40bc                	lw	a5,64(s1)
-+    80002a18:	2785                	addw	a5,a5,1
-+    80002a1a:	c0bc                	sw	a5,64(s1)
-       release(&bcache.lock);
--    80002ad6:	00015517          	auipc	a0,0x15
--    80002ada:	69250513          	addi	a0,a0,1682 # 80018168 <bcache>
--    80002ade:	9aefe0ef          	jal	80000c8c <release>
-+    80002a1c:	00013517          	auipc	a0,0x13
-+    80002a20:	e5c50513          	add	a0,a0,-420 # 80015878 <bcache>
-+    80002a24:	a14fe0ef          	jal	80000c38 <release>
-       acquiresleep(&b->lock);
--    80002ae2:	01048513          	addi	a0,s1,16
--    80002ae6:	1fa010ef          	jal	80003ce0 <acquiresleep>
-+    80002a28:	01048513          	add	a0,s1,16
-+    80002a2c:	1a8010ef          	jal	80003bd4 <acquiresleep>
-       return b;
--    80002aea:	a889                	j	80002b3c <bread+0xb4>
-+    80002a30:	a889                	j	80002a82 <bread+0xb4>
-   for(b = bcache.head.prev; b != &bcache.head; b = b->prev){
--    80002aec:	0001e497          	auipc	s1,0x1e
--    80002af0:	92c4b483          	ld	s1,-1748(s1) # 80020418 <bcache+0x82b0>
--    80002af4:	0001e797          	auipc	a5,0x1e
--    80002af8:	8dc78793          	addi	a5,a5,-1828 # 800203d0 <bcache+0x8268>
--    80002afc:	00f48863          	beq	s1,a5,80002b0c <bread+0x84>
--    80002b00:	873e                	mv	a4,a5
-+    80002a32:	0001b497          	auipc	s1,0x1b
-+    80002a36:	0f64b483          	ld	s1,246(s1) # 8001db28 <bcache+0x82b0>
-+    80002a3a:	0001b797          	auipc	a5,0x1b
-+    80002a3e:	0a678793          	add	a5,a5,166 # 8001dae0 <bcache+0x8268>
-+    80002a42:	00f48863          	beq	s1,a5,80002a52 <bread+0x84>
-+    80002a46:	873e                	mv	a4,a5
-     if(b->refcnt == 0) {
--    80002b02:	40bc                	lw	a5,64(s1)
--    80002b04:	cb91                	beqz	a5,80002b18 <bread+0x90>
-+    80002a48:	40bc                	lw	a5,64(s1)
-+    80002a4a:	cb91                	beqz	a5,80002a5e <bread+0x90>
-   for(b = bcache.head.prev; b != &bcache.head; b = b->prev){
--    80002b06:	64a4                	ld	s1,72(s1)
--    80002b08:	fee49de3          	bne	s1,a4,80002b02 <bread+0x7a>
-+    80002a4c:	64a4                	ld	s1,72(s1)
-+    80002a4e:	fee49de3          	bne	s1,a4,80002a48 <bread+0x7a>
-   panic("bget: no buffers");
--    80002b0c:	00005517          	auipc	a0,0x5
--    80002b10:	93450513          	addi	a0,a0,-1740 # 80007440 <etext+0x440>
--    80002b14:	c81fd0ef          	jal	80000794 <panic>
-+    80002a52:	00005517          	auipc	a0,0x5
-+    80002a56:	afe50513          	add	a0,a0,-1282 # 80007550 <syscalls+0xc0>
-+    80002a5a:	d05fd0ef          	jal	8000075e <panic>
-       b->dev = dev;
--    80002b18:	0124a423          	sw	s2,8(s1)
-+    80002a5e:	0124a423          	sw	s2,8(s1)
-       b->blockno = blockno;
--    80002b1c:	0134a623          	sw	s3,12(s1)
-+    80002a62:	0134a623          	sw	s3,12(s1)
-       b->valid = 0;
--    80002b20:	0004a023          	sw	zero,0(s1)
-+    80002a66:	0004a023          	sw	zero,0(s1)
-       b->refcnt = 1;
--    80002b24:	4785                	li	a5,1
--    80002b26:	c0bc                	sw	a5,64(s1)
-+    80002a6a:	4785                	li	a5,1
-+    80002a6c:	c0bc                	sw	a5,64(s1)
-       release(&bcache.lock);
--    80002b28:	00015517          	auipc	a0,0x15
--    80002b2c:	64050513          	addi	a0,a0,1600 # 80018168 <bcache>
--    80002b30:	95cfe0ef          	jal	80000c8c <release>
-+    80002a6e:	00013517          	auipc	a0,0x13
-+    80002a72:	e0a50513          	add	a0,a0,-502 # 80015878 <bcache>
-+    80002a76:	9c2fe0ef          	jal	80000c38 <release>
-       acquiresleep(&b->lock);
--    80002b34:	01048513          	addi	a0,s1,16
--    80002b38:	1a8010ef          	jal	80003ce0 <acquiresleep>
-+    80002a7a:	01048513          	add	a0,s1,16
-+    80002a7e:	156010ef          	jal	80003bd4 <acquiresleep>
-   struct buf *b;
- 
-   b = bget(dev, blockno);
-   if(!b->valid) {
--    80002b3c:	409c                	lw	a5,0(s1)
--    80002b3e:	cb89                	beqz	a5,80002b50 <bread+0xc8>
-+    80002a82:	409c                	lw	a5,0(s1)
-+    80002a84:	cb89                	beqz	a5,80002a96 <bread+0xc8>
-     virtio_disk_rw(b, 0);
-     b->valid = 1;
-   }
-   return b;
- }
--    80002b40:	8526                	mv	a0,s1
--    80002b42:	70a2                	ld	ra,40(sp)
--    80002b44:	7402                	ld	s0,32(sp)
--    80002b46:	64e2                	ld	s1,24(sp)
--    80002b48:	6942                	ld	s2,16(sp)
--    80002b4a:	69a2                	ld	s3,8(sp)
--    80002b4c:	6145                	addi	sp,sp,48
--    80002b4e:	8082                	ret
-+    80002a86:	8526                	mv	a0,s1
-+    80002a88:	70a2                	ld	ra,40(sp)
-+    80002a8a:	7402                	ld	s0,32(sp)
-+    80002a8c:	64e2                	ld	s1,24(sp)
-+    80002a8e:	6942                	ld	s2,16(sp)
-+    80002a90:	69a2                	ld	s3,8(sp)
-+    80002a92:	6145                	add	sp,sp,48
-+    80002a94:	8082                	ret
-     virtio_disk_rw(b, 0);
--    80002b50:	4581                	li	a1,0
--    80002b52:	8526                	mv	a0,s1
--    80002b54:	1ed020ef          	jal	80005540 <virtio_disk_rw>
-+    80002a96:	4581                	li	a1,0
-+    80002a98:	8526                	mv	a0,s1
-+    80002a9a:	071020ef          	jal	8000530a <virtio_disk_rw>
-     b->valid = 1;
--    80002b58:	4785                	li	a5,1
--    80002b5a:	c09c                	sw	a5,0(s1)
-+    80002a9e:	4785                	li	a5,1
-+    80002aa0:	c09c                	sw	a5,0(s1)
-   return b;
--    80002b5c:	b7d5                	j	80002b40 <bread+0xb8>
-+    80002aa2:	b7d5                	j	80002a86 <bread+0xb8>
- 
--0000000080002b5e <bwrite>:
-+0000000080002aa4 <bwrite>:
- 
- /* Write b's contents to disk.  Must be locked. */
- void
- bwrite(struct buf *b)
- {
--    80002b5e:	1101                	addi	sp,sp,-32
--    80002b60:	ec06                	sd	ra,24(sp)
--    80002b62:	e822                	sd	s0,16(sp)
--    80002b64:	e426                	sd	s1,8(sp)
--    80002b66:	1000                	addi	s0,sp,32
--    80002b68:	84aa                	mv	s1,a0
-+    80002aa4:	1101                	add	sp,sp,-32
-+    80002aa6:	ec06                	sd	ra,24(sp)
-+    80002aa8:	e822                	sd	s0,16(sp)
-+    80002aaa:	e426                	sd	s1,8(sp)
-+    80002aac:	1000                	add	s0,sp,32
-+    80002aae:	84aa                	mv	s1,a0
-   if(!holdingsleep(&b->lock))
--    80002b6a:	0541                	addi	a0,a0,16
--    80002b6c:	1f2010ef          	jal	80003d5e <holdingsleep>
--    80002b70:	c911                	beqz	a0,80002b84 <bwrite+0x26>
-+    80002ab0:	0541                	add	a0,a0,16
-+    80002ab2:	1a0010ef          	jal	80003c52 <holdingsleep>
-+    80002ab6:	c911                	beqz	a0,80002aca <bwrite+0x26>
-     panic("bwrite");
-   virtio_disk_rw(b, 1);
--    80002b72:	4585                	li	a1,1
--    80002b74:	8526                	mv	a0,s1
--    80002b76:	1cb020ef          	jal	80005540 <virtio_disk_rw>
--}
--    80002b7a:	60e2                	ld	ra,24(sp)
--    80002b7c:	6442                	ld	s0,16(sp)
--    80002b7e:	64a2                	ld	s1,8(sp)
--    80002b80:	6105                	addi	sp,sp,32
--    80002b82:	8082                	ret
-+    80002ab8:	4585                	li	a1,1
-+    80002aba:	8526                	mv	a0,s1
-+    80002abc:	04f020ef          	jal	8000530a <virtio_disk_rw>
-+}
-+    80002ac0:	60e2                	ld	ra,24(sp)
-+    80002ac2:	6442                	ld	s0,16(sp)
-+    80002ac4:	64a2                	ld	s1,8(sp)
-+    80002ac6:	6105                	add	sp,sp,32
-+    80002ac8:	8082                	ret
-     panic("bwrite");
--    80002b84:	00005517          	auipc	a0,0x5
--    80002b88:	8d450513          	addi	a0,a0,-1836 # 80007458 <etext+0x458>
--    80002b8c:	c09fd0ef          	jal	80000794 <panic>
-+    80002aca:	00005517          	auipc	a0,0x5
-+    80002ace:	a9e50513          	add	a0,a0,-1378 # 80007568 <syscalls+0xd8>
-+    80002ad2:	c8dfd0ef          	jal	8000075e <panic>
- 
--0000000080002b90 <brelse>:
-+0000000080002ad6 <brelse>:
- 
- /* Release a locked buffer. */
- /* Move to the head of the most-recently-used list. */
- void
- brelse(struct buf *b)
- {
--    80002b90:	1101                	addi	sp,sp,-32
--    80002b92:	ec06                	sd	ra,24(sp)
--    80002b94:	e822                	sd	s0,16(sp)
--    80002b96:	e426                	sd	s1,8(sp)
--    80002b98:	e04a                	sd	s2,0(sp)
--    80002b9a:	1000                	addi	s0,sp,32
--    80002b9c:	84aa                	mv	s1,a0
-+    80002ad6:	1101                	add	sp,sp,-32
-+    80002ad8:	ec06                	sd	ra,24(sp)
-+    80002ada:	e822                	sd	s0,16(sp)
-+    80002adc:	e426                	sd	s1,8(sp)
-+    80002ade:	e04a                	sd	s2,0(sp)
-+    80002ae0:	1000                	add	s0,sp,32
-+    80002ae2:	84aa                	mv	s1,a0
-   if(!holdingsleep(&b->lock))
--    80002b9e:	01050913          	addi	s2,a0,16
--    80002ba2:	854a                	mv	a0,s2
--    80002ba4:	1ba010ef          	jal	80003d5e <holdingsleep>
--    80002ba8:	c135                	beqz	a0,80002c0c <brelse+0x7c>
-+    80002ae4:	01050913          	add	s2,a0,16
-+    80002ae8:	854a                	mv	a0,s2
-+    80002aea:	168010ef          	jal	80003c52 <holdingsleep>
-+    80002aee:	c135                	beqz	a0,80002b52 <brelse+0x7c>
-     panic("brelse");
- 
-   releasesleep(&b->lock);
--    80002baa:	854a                	mv	a0,s2
--    80002bac:	17a010ef          	jal	80003d26 <releasesleep>
-+    80002af0:	854a                	mv	a0,s2
-+    80002af2:	128010ef          	jal	80003c1a <releasesleep>
- 
-   acquire(&bcache.lock);
--    80002bb0:	00015517          	auipc	a0,0x15
--    80002bb4:	5b850513          	addi	a0,a0,1464 # 80018168 <bcache>
--    80002bb8:	83cfe0ef          	jal	80000bf4 <acquire>
-+    80002af6:	00013517          	auipc	a0,0x13
-+    80002afa:	d8250513          	add	a0,a0,-638 # 80015878 <bcache>
-+    80002afe:	8a2fe0ef          	jal	80000ba0 <acquire>
-   b->refcnt--;
--    80002bbc:	40bc                	lw	a5,64(s1)
--    80002bbe:	37fd                	addiw	a5,a5,-1
--    80002bc0:	0007871b          	sext.w	a4,a5
--    80002bc4:	c0bc                	sw	a5,64(s1)
-+    80002b02:	40bc                	lw	a5,64(s1)
-+    80002b04:	37fd                	addw	a5,a5,-1
-+    80002b06:	0007871b          	sext.w	a4,a5
-+    80002b0a:	c0bc                	sw	a5,64(s1)
-   if (b->refcnt == 0) {
--    80002bc6:	e71d                	bnez	a4,80002bf4 <brelse+0x64>
-+    80002b0c:	e71d                	bnez	a4,80002b3a <brelse+0x64>
-     /* no one is waiting for it. */
-     b->next->prev = b->prev;
--    80002bc8:	68b8                	ld	a4,80(s1)
--    80002bca:	64bc                	ld	a5,72(s1)
--    80002bcc:	e73c                	sd	a5,72(a4)
-+    80002b0e:	68b8                	ld	a4,80(s1)
-+    80002b10:	64bc                	ld	a5,72(s1)
-+    80002b12:	e73c                	sd	a5,72(a4)
-     b->prev->next = b->next;
--    80002bce:	68b8                	ld	a4,80(s1)
--    80002bd0:	ebb8                	sd	a4,80(a5)
-+    80002b14:	68b8                	ld	a4,80(s1)
-+    80002b16:	ebb8                	sd	a4,80(a5)
-     b->next = bcache.head.next;
--    80002bd2:	0001d797          	auipc	a5,0x1d
--    80002bd6:	59678793          	addi	a5,a5,1430 # 80020168 <bcache+0x8000>
--    80002bda:	2b87b703          	ld	a4,696(a5)
--    80002bde:	e8b8                	sd	a4,80(s1)
-+    80002b18:	0001b797          	auipc	a5,0x1b
-+    80002b1c:	d6078793          	add	a5,a5,-672 # 8001d878 <bcache+0x8000>
-+    80002b20:	2b87b703          	ld	a4,696(a5)
-+    80002b24:	e8b8                	sd	a4,80(s1)
-     b->prev = &bcache.head;
--    80002be0:	0001d717          	auipc	a4,0x1d
--    80002be4:	7f070713          	addi	a4,a4,2032 # 800203d0 <bcache+0x8268>
--    80002be8:	e4b8                	sd	a4,72(s1)
-+    80002b26:	0001b717          	auipc	a4,0x1b
-+    80002b2a:	fba70713          	add	a4,a4,-70 # 8001dae0 <bcache+0x8268>
-+    80002b2e:	e4b8                	sd	a4,72(s1)
-     bcache.head.next->prev = b;
--    80002bea:	2b87b703          	ld	a4,696(a5)
--    80002bee:	e724                	sd	s1,72(a4)
-+    80002b30:	2b87b703          	ld	a4,696(a5)
-+    80002b34:	e724                	sd	s1,72(a4)
-     bcache.head.next = b;
--    80002bf0:	2a97bc23          	sd	s1,696(a5)
-+    80002b36:	2a97bc23          	sd	s1,696(a5)
-   }
-   
-   release(&bcache.lock);
--    80002bf4:	00015517          	auipc	a0,0x15
--    80002bf8:	57450513          	addi	a0,a0,1396 # 80018168 <bcache>
--    80002bfc:	890fe0ef          	jal	80000c8c <release>
--}
--    80002c00:	60e2                	ld	ra,24(sp)
--    80002c02:	6442                	ld	s0,16(sp)
--    80002c04:	64a2                	ld	s1,8(sp)
--    80002c06:	6902                	ld	s2,0(sp)
--    80002c08:	6105                	addi	sp,sp,32
--    80002c0a:	8082                	ret
-+    80002b3a:	00013517          	auipc	a0,0x13
-+    80002b3e:	d3e50513          	add	a0,a0,-706 # 80015878 <bcache>
-+    80002b42:	8f6fe0ef          	jal	80000c38 <release>
-+}
-+    80002b46:	60e2                	ld	ra,24(sp)
-+    80002b48:	6442                	ld	s0,16(sp)
-+    80002b4a:	64a2                	ld	s1,8(sp)
-+    80002b4c:	6902                	ld	s2,0(sp)
-+    80002b4e:	6105                	add	sp,sp,32
-+    80002b50:	8082                	ret
-     panic("brelse");
--    80002c0c:	00005517          	auipc	a0,0x5
--    80002c10:	85450513          	addi	a0,a0,-1964 # 80007460 <etext+0x460>
--    80002c14:	b81fd0ef          	jal	80000794 <panic>
-+    80002b52:	00005517          	auipc	a0,0x5
-+    80002b56:	a1e50513          	add	a0,a0,-1506 # 80007570 <syscalls+0xe0>
-+    80002b5a:	c05fd0ef          	jal	8000075e <panic>
- 
--0000000080002c18 <bpin>:
-+0000000080002b5e <bpin>:
- 
- void
- bpin(struct buf *b) {
--    80002c18:	1101                	addi	sp,sp,-32
--    80002c1a:	ec06                	sd	ra,24(sp)
--    80002c1c:	e822                	sd	s0,16(sp)
--    80002c1e:	e426                	sd	s1,8(sp)
--    80002c20:	1000                	addi	s0,sp,32
--    80002c22:	84aa                	mv	s1,a0
-+    80002b5e:	1101                	add	sp,sp,-32
-+    80002b60:	ec06                	sd	ra,24(sp)
-+    80002b62:	e822                	sd	s0,16(sp)
-+    80002b64:	e426                	sd	s1,8(sp)
-+    80002b66:	1000                	add	s0,sp,32
-+    80002b68:	84aa                	mv	s1,a0
-   acquire(&bcache.lock);
--    80002c24:	00015517          	auipc	a0,0x15
--    80002c28:	54450513          	addi	a0,a0,1348 # 80018168 <bcache>
--    80002c2c:	fc9fd0ef          	jal	80000bf4 <acquire>
-+    80002b6a:	00013517          	auipc	a0,0x13
-+    80002b6e:	d0e50513          	add	a0,a0,-754 # 80015878 <bcache>
-+    80002b72:	82efe0ef          	jal	80000ba0 <acquire>
-   b->refcnt++;
--    80002c30:	40bc                	lw	a5,64(s1)
--    80002c32:	2785                	addiw	a5,a5,1
--    80002c34:	c0bc                	sw	a5,64(s1)
-+    80002b76:	40bc                	lw	a5,64(s1)
-+    80002b78:	2785                	addw	a5,a5,1
-+    80002b7a:	c0bc                	sw	a5,64(s1)
-   release(&bcache.lock);
--    80002c36:	00015517          	auipc	a0,0x15
--    80002c3a:	53250513          	addi	a0,a0,1330 # 80018168 <bcache>
--    80002c3e:	84efe0ef          	jal	80000c8c <release>
-+    80002b7c:	00013517          	auipc	a0,0x13
-+    80002b80:	cfc50513          	add	a0,a0,-772 # 80015878 <bcache>
-+    80002b84:	8b4fe0ef          	jal	80000c38 <release>
- }
--    80002c42:	60e2                	ld	ra,24(sp)
--    80002c44:	6442                	ld	s0,16(sp)
--    80002c46:	64a2                	ld	s1,8(sp)
--    80002c48:	6105                	addi	sp,sp,32
--    80002c4a:	8082                	ret
-+    80002b88:	60e2                	ld	ra,24(sp)
-+    80002b8a:	6442                	ld	s0,16(sp)
-+    80002b8c:	64a2                	ld	s1,8(sp)
-+    80002b8e:	6105                	add	sp,sp,32
-+    80002b90:	8082                	ret
- 
--0000000080002c4c <bunpin>:
-+0000000080002b92 <bunpin>:
- 
- void
- bunpin(struct buf *b) {
--    80002c4c:	1101                	addi	sp,sp,-32
--    80002c4e:	ec06                	sd	ra,24(sp)
--    80002c50:	e822                	sd	s0,16(sp)
--    80002c52:	e426                	sd	s1,8(sp)
--    80002c54:	1000                	addi	s0,sp,32
--    80002c56:	84aa                	mv	s1,a0
-+    80002b92:	1101                	add	sp,sp,-32
-+    80002b94:	ec06                	sd	ra,24(sp)
-+    80002b96:	e822                	sd	s0,16(sp)
-+    80002b98:	e426                	sd	s1,8(sp)
-+    80002b9a:	1000                	add	s0,sp,32
-+    80002b9c:	84aa                	mv	s1,a0
-   acquire(&bcache.lock);
--    80002c58:	00015517          	auipc	a0,0x15
--    80002c5c:	51050513          	addi	a0,a0,1296 # 80018168 <bcache>
--    80002c60:	f95fd0ef          	jal	80000bf4 <acquire>
-+    80002b9e:	00013517          	auipc	a0,0x13
-+    80002ba2:	cda50513          	add	a0,a0,-806 # 80015878 <bcache>
-+    80002ba6:	ffbfd0ef          	jal	80000ba0 <acquire>
-   b->refcnt--;
--    80002c64:	40bc                	lw	a5,64(s1)
--    80002c66:	37fd                	addiw	a5,a5,-1
--    80002c68:	c0bc                	sw	a5,64(s1)
-+    80002baa:	40bc                	lw	a5,64(s1)
-+    80002bac:	37fd                	addw	a5,a5,-1
-+    80002bae:	c0bc                	sw	a5,64(s1)
-   release(&bcache.lock);
--    80002c6a:	00015517          	auipc	a0,0x15
--    80002c6e:	4fe50513          	addi	a0,a0,1278 # 80018168 <bcache>
--    80002c72:	81afe0ef          	jal	80000c8c <release>
-+    80002bb0:	00013517          	auipc	a0,0x13
-+    80002bb4:	cc850513          	add	a0,a0,-824 # 80015878 <bcache>
-+    80002bb8:	880fe0ef          	jal	80000c38 <release>
- }
--    80002c76:	60e2                	ld	ra,24(sp)
--    80002c78:	6442                	ld	s0,16(sp)
--    80002c7a:	64a2                	ld	s1,8(sp)
--    80002c7c:	6105                	addi	sp,sp,32
--    80002c7e:	8082                	ret
-+    80002bbc:	60e2                	ld	ra,24(sp)
-+    80002bbe:	6442                	ld	s0,16(sp)
-+    80002bc0:	64a2                	ld	s1,8(sp)
-+    80002bc2:	6105                	add	sp,sp,32
-+    80002bc4:	8082                	ret
- 
--0000000080002c80 <bfree>:
-+0000000080002bc6 <bfree>:
- }
- 
- /* Free a disk block. */
- static void
- bfree(int dev, uint b)
- {
--    80002c80:	1101                	addi	sp,sp,-32
--    80002c82:	ec06                	sd	ra,24(sp)
--    80002c84:	e822                	sd	s0,16(sp)
--    80002c86:	e426                	sd	s1,8(sp)
--    80002c88:	e04a                	sd	s2,0(sp)
--    80002c8a:	1000                	addi	s0,sp,32
--    80002c8c:	84ae                	mv	s1,a1
-+    80002bc6:	1101                	add	sp,sp,-32
-+    80002bc8:	ec06                	sd	ra,24(sp)
-+    80002bca:	e822                	sd	s0,16(sp)
-+    80002bcc:	e426                	sd	s1,8(sp)
-+    80002bce:	e04a                	sd	s2,0(sp)
-+    80002bd0:	1000                	add	s0,sp,32
-+    80002bd2:	84ae                	mv	s1,a1
-   struct buf *bp;
-   int bi, m;
- 
-   bp = bread(dev, BBLOCK(b, sb));
--    80002c8e:	00d5d59b          	srliw	a1,a1,0xd
--    80002c92:	0001e797          	auipc	a5,0x1e
--    80002c96:	bb27a783          	lw	a5,-1102(a5) # 80020844 <sb+0x1c>
--    80002c9a:	9dbd                	addw	a1,a1,a5
--    80002c9c:	dedff0ef          	jal	80002a88 <bread>
-+    80002bd4:	00d5d59b          	srlw	a1,a1,0xd
-+    80002bd8:	0001b797          	auipc	a5,0x1b
-+    80002bdc:	37c7a783          	lw	a5,892(a5) # 8001df54 <sb+0x1c>
-+    80002be0:	9dbd                	addw	a1,a1,a5
-+    80002be2:	dedff0ef          	jal	800029ce <bread>
-   bi = b % BPB;
-   m = 1 << (bi % 8);
--    80002ca0:	0074f713          	andi	a4,s1,7
--    80002ca4:	4785                	li	a5,1
--    80002ca6:	00e797bb          	sllw	a5,a5,a4
-+    80002be6:	0074f713          	and	a4,s1,7
-+    80002bea:	4785                	li	a5,1
-+    80002bec:	00e797bb          	sllw	a5,a5,a4
-   if((bp->data[bi/8] & m) == 0)
--    80002caa:	14ce                	slli	s1,s1,0x33
--    80002cac:	90d9                	srli	s1,s1,0x36
--    80002cae:	00950733          	add	a4,a0,s1
--    80002cb2:	05874703          	lbu	a4,88(a4)
--    80002cb6:	00e7f6b3          	and	a3,a5,a4
--    80002cba:	c29d                	beqz	a3,80002ce0 <bfree+0x60>
--    80002cbc:	892a                	mv	s2,a0
-+    80002bf0:	14ce                	sll	s1,s1,0x33
-+    80002bf2:	90d9                	srl	s1,s1,0x36
-+    80002bf4:	00950733          	add	a4,a0,s1
-+    80002bf8:	05874703          	lbu	a4,88(a4)
-+    80002bfc:	00e7f6b3          	and	a3,a5,a4
-+    80002c00:	c29d                	beqz	a3,80002c26 <bfree+0x60>
-+    80002c02:	892a                	mv	s2,a0
-     panic("freeing free block");
-   bp->data[bi/8] &= ~m;
--    80002cbe:	94aa                	add	s1,s1,a0
--    80002cc0:	fff7c793          	not	a5,a5
--    80002cc4:	8f7d                	and	a4,a4,a5
--    80002cc6:	04e48c23          	sb	a4,88(s1)
-+    80002c04:	94aa                	add	s1,s1,a0
-+    80002c06:	fff7c793          	not	a5,a5
-+    80002c0a:	8f7d                	and	a4,a4,a5
-+    80002c0c:	04e48c23          	sb	a4,88(s1)
-   log_write(bp);
--    80002cca:	711000ef          	jal	80003bda <log_write>
-+    80002c10:	6bf000ef          	jal	80003ace <log_write>
-   brelse(bp);
--    80002cce:	854a                	mv	a0,s2
--    80002cd0:	ec1ff0ef          	jal	80002b90 <brelse>
--}
--    80002cd4:	60e2                	ld	ra,24(sp)
--    80002cd6:	6442                	ld	s0,16(sp)
--    80002cd8:	64a2                	ld	s1,8(sp)
--    80002cda:	6902                	ld	s2,0(sp)
--    80002cdc:	6105                	addi	sp,sp,32
--    80002cde:	8082                	ret
-+    80002c14:	854a                	mv	a0,s2
-+    80002c16:	ec1ff0ef          	jal	80002ad6 <brelse>
-+}
-+    80002c1a:	60e2                	ld	ra,24(sp)
-+    80002c1c:	6442                	ld	s0,16(sp)
-+    80002c1e:	64a2                	ld	s1,8(sp)
-+    80002c20:	6902                	ld	s2,0(sp)
-+    80002c22:	6105                	add	sp,sp,32
-+    80002c24:	8082                	ret
-     panic("freeing free block");
--    80002ce0:	00004517          	auipc	a0,0x4
--    80002ce4:	78850513          	addi	a0,a0,1928 # 80007468 <etext+0x468>
--    80002ce8:	aadfd0ef          	jal	80000794 <panic>
--
--0000000080002cec <balloc>:
--{
--    80002cec:	711d                	addi	sp,sp,-96
--    80002cee:	ec86                	sd	ra,88(sp)
--    80002cf0:	e8a2                	sd	s0,80(sp)
--    80002cf2:	e4a6                	sd	s1,72(sp)
--    80002cf4:	1080                	addi	s0,sp,96
-+    80002c26:	00005517          	auipc	a0,0x5
-+    80002c2a:	95250513          	add	a0,a0,-1710 # 80007578 <syscalls+0xe8>
-+    80002c2e:	b31fd0ef          	jal	8000075e <panic>
-+
-+0000000080002c32 <balloc>:
-+{
-+    80002c32:	711d                	add	sp,sp,-96
-+    80002c34:	ec86                	sd	ra,88(sp)
-+    80002c36:	e8a2                	sd	s0,80(sp)
-+    80002c38:	e4a6                	sd	s1,72(sp)
-+    80002c3a:	e0ca                	sd	s2,64(sp)
-+    80002c3c:	fc4e                	sd	s3,56(sp)
-+    80002c3e:	f852                	sd	s4,48(sp)
-+    80002c40:	f456                	sd	s5,40(sp)
-+    80002c42:	f05a                	sd	s6,32(sp)
-+    80002c44:	ec5e                	sd	s7,24(sp)
-+    80002c46:	e862                	sd	s8,16(sp)
-+    80002c48:	e466                	sd	s9,8(sp)
-+    80002c4a:	1080                	add	s0,sp,96
-   for(b = 0; b < sb.size; b += BPB){
--    80002cf6:	0001e797          	auipc	a5,0x1e
--    80002cfa:	b367a783          	lw	a5,-1226(a5) # 8002082c <sb+0x4>
--    80002cfe:	0e078f63          	beqz	a5,80002dfc <balloc+0x110>
--    80002d02:	e0ca                	sd	s2,64(sp)
--    80002d04:	fc4e                	sd	s3,56(sp)
--    80002d06:	f852                	sd	s4,48(sp)
--    80002d08:	f456                	sd	s5,40(sp)
--    80002d0a:	f05a                	sd	s6,32(sp)
--    80002d0c:	ec5e                	sd	s7,24(sp)
--    80002d0e:	e862                	sd	s8,16(sp)
--    80002d10:	e466                	sd	s9,8(sp)
--    80002d12:	8baa                	mv	s7,a0
--    80002d14:	4a81                	li	s5,0
-+    80002c4c:	0001b797          	auipc	a5,0x1b
-+    80002c50:	2f07a783          	lw	a5,752(a5) # 8001df3c <sb+0x4>
-+    80002c54:	cff1                	beqz	a5,80002d30 <balloc+0xfe>
-+    80002c56:	8baa                	mv	s7,a0
-+    80002c58:	4a81                	li	s5,0
-     bp = bread(dev, BBLOCK(b, sb));
--    80002d16:	0001eb17          	auipc	s6,0x1e
--    80002d1a:	b12b0b13          	addi	s6,s6,-1262 # 80020828 <sb>
-+    80002c5a:	0001bb17          	auipc	s6,0x1b
-+    80002c5e:	2deb0b13          	add	s6,s6,734 # 8001df38 <sb>
-     for(bi = 0; bi < BPB && b + bi < sb.size; bi++){
--    80002d1e:	4c01                	li	s8,0
-+    80002c62:	4c01                	li	s8,0
-       m = 1 << (bi % 8);
--    80002d20:	4985                	li	s3,1
-+    80002c64:	4985                	li	s3,1
-     for(bi = 0; bi < BPB && b + bi < sb.size; bi++){
--    80002d22:	6a09                	lui	s4,0x2
-+    80002c66:	6a09                	lui	s4,0x2
-   for(b = 0; b < sb.size; b += BPB){
--    80002d24:	6c89                	lui	s9,0x2
--    80002d26:	a0b5                	j	80002d92 <balloc+0xa6>
-+    80002c68:	6c89                	lui	s9,0x2
-+    80002c6a:	a0b5                	j	80002cd6 <balloc+0xa4>
-         bp->data[bi/8] |= m;  /* Mark block in use. */
--    80002d28:	97ca                	add	a5,a5,s2
--    80002d2a:	8e55                	or	a2,a2,a3
--    80002d2c:	04c78c23          	sb	a2,88(a5)
-+    80002c6c:	97ca                	add	a5,a5,s2
-+    80002c6e:	8e55                	or	a2,a2,a3
-+    80002c70:	04c78c23          	sb	a2,88(a5)
-         log_write(bp);
--    80002d30:	854a                	mv	a0,s2
--    80002d32:	6a9000ef          	jal	80003bda <log_write>
-+    80002c74:	854a                	mv	a0,s2
-+    80002c76:	659000ef          	jal	80003ace <log_write>
-         brelse(bp);
--    80002d36:	854a                	mv	a0,s2
--    80002d38:	e59ff0ef          	jal	80002b90 <brelse>
-+    80002c7a:	854a                	mv	a0,s2
-+    80002c7c:	e5bff0ef          	jal	80002ad6 <brelse>
-   bp = bread(dev, bno);
--    80002d3c:	85a6                	mv	a1,s1
--    80002d3e:	855e                	mv	a0,s7
--    80002d40:	d49ff0ef          	jal	80002a88 <bread>
--    80002d44:	892a                	mv	s2,a0
-+    80002c80:	85a6                	mv	a1,s1
-+    80002c82:	855e                	mv	a0,s7
-+    80002c84:	d4bff0ef          	jal	800029ce <bread>
-+    80002c88:	892a                	mv	s2,a0
-   memset(bp->data, 0, BSIZE);
--    80002d46:	40000613          	li	a2,1024
--    80002d4a:	4581                	li	a1,0
--    80002d4c:	05850513          	addi	a0,a0,88
--    80002d50:	f79fd0ef          	jal	80000cc8 <memset>
-+    80002c8a:	40000613          	li	a2,1024
-+    80002c8e:	4581                	li	a1,0
-+    80002c90:	05850513          	add	a0,a0,88
-+    80002c94:	fe1fd0ef          	jal	80000c74 <memset>
-   log_write(bp);
--    80002d54:	854a                	mv	a0,s2
--    80002d56:	685000ef          	jal	80003bda <log_write>
-+    80002c98:	854a                	mv	a0,s2
-+    80002c9a:	635000ef          	jal	80003ace <log_write>
-   brelse(bp);
--    80002d5a:	854a                	mv	a0,s2
--    80002d5c:	e35ff0ef          	jal	80002b90 <brelse>
--}
--    80002d60:	6906                	ld	s2,64(sp)
--    80002d62:	79e2                	ld	s3,56(sp)
--    80002d64:	7a42                	ld	s4,48(sp)
--    80002d66:	7aa2                	ld	s5,40(sp)
--    80002d68:	7b02                	ld	s6,32(sp)
--    80002d6a:	6be2                	ld	s7,24(sp)
--    80002d6c:	6c42                	ld	s8,16(sp)
--    80002d6e:	6ca2                	ld	s9,8(sp)
--}
--    80002d70:	8526                	mv	a0,s1
--    80002d72:	60e6                	ld	ra,88(sp)
--    80002d74:	6446                	ld	s0,80(sp)
--    80002d76:	64a6                	ld	s1,72(sp)
--    80002d78:	6125                	addi	sp,sp,96
--    80002d7a:	8082                	ret
-+    80002c9e:	854a                	mv	a0,s2
-+    80002ca0:	e37ff0ef          	jal	80002ad6 <brelse>
-+}
-+    80002ca4:	8526                	mv	a0,s1
-+    80002ca6:	60e6                	ld	ra,88(sp)
-+    80002ca8:	6446                	ld	s0,80(sp)
-+    80002caa:	64a6                	ld	s1,72(sp)
-+    80002cac:	6906                	ld	s2,64(sp)
-+    80002cae:	79e2                	ld	s3,56(sp)
-+    80002cb0:	7a42                	ld	s4,48(sp)
-+    80002cb2:	7aa2                	ld	s5,40(sp)
-+    80002cb4:	7b02                	ld	s6,32(sp)
-+    80002cb6:	6be2                	ld	s7,24(sp)
-+    80002cb8:	6c42                	ld	s8,16(sp)
-+    80002cba:	6ca2                	ld	s9,8(sp)
-+    80002cbc:	6125                	add	sp,sp,96
-+    80002cbe:	8082                	ret
-     brelse(bp);
--    80002d7c:	854a                	mv	a0,s2
--    80002d7e:	e13ff0ef          	jal	80002b90 <brelse>
-+    80002cc0:	854a                	mv	a0,s2
-+    80002cc2:	e15ff0ef          	jal	80002ad6 <brelse>
-   for(b = 0; b < sb.size; b += BPB){
--    80002d82:	015c87bb          	addw	a5,s9,s5
--    80002d86:	00078a9b          	sext.w	s5,a5
--    80002d8a:	004b2703          	lw	a4,4(s6)
--    80002d8e:	04eaff63          	bgeu	s5,a4,80002dec <balloc+0x100>
-+    80002cc6:	015c87bb          	addw	a5,s9,s5
-+    80002cca:	00078a9b          	sext.w	s5,a5
-+    80002cce:	004b2703          	lw	a4,4(s6)
-+    80002cd2:	04eaff63          	bgeu	s5,a4,80002d30 <balloc+0xfe>
-     bp = bread(dev, BBLOCK(b, sb));
--    80002d92:	41fad79b          	sraiw	a5,s5,0x1f
--    80002d96:	0137d79b          	srliw	a5,a5,0x13
--    80002d9a:	015787bb          	addw	a5,a5,s5
--    80002d9e:	40d7d79b          	sraiw	a5,a5,0xd
--    80002da2:	01cb2583          	lw	a1,28(s6)
--    80002da6:	9dbd                	addw	a1,a1,a5
--    80002da8:	855e                	mv	a0,s7
--    80002daa:	cdfff0ef          	jal	80002a88 <bread>
--    80002dae:	892a                	mv	s2,a0
-+    80002cd6:	41fad79b          	sraw	a5,s5,0x1f
-+    80002cda:	0137d79b          	srlw	a5,a5,0x13
-+    80002cde:	015787bb          	addw	a5,a5,s5
-+    80002ce2:	40d7d79b          	sraw	a5,a5,0xd
-+    80002ce6:	01cb2583          	lw	a1,28(s6)
-+    80002cea:	9dbd                	addw	a1,a1,a5
-+    80002cec:	855e                	mv	a0,s7
-+    80002cee:	ce1ff0ef          	jal	800029ce <bread>
-+    80002cf2:	892a                	mv	s2,a0
-     for(bi = 0; bi < BPB && b + bi < sb.size; bi++){
--    80002db0:	004b2503          	lw	a0,4(s6)
--    80002db4:	000a849b          	sext.w	s1,s5
--    80002db8:	8762                	mv	a4,s8
--    80002dba:	fca4f1e3          	bgeu	s1,a0,80002d7c <balloc+0x90>
-+    80002cf4:	004b2503          	lw	a0,4(s6)
-+    80002cf8:	000a849b          	sext.w	s1,s5
-+    80002cfc:	8762                	mv	a4,s8
-+    80002cfe:	fca4f1e3          	bgeu	s1,a0,80002cc0 <balloc+0x8e>
-       m = 1 << (bi % 8);
--    80002dbe:	00777693          	andi	a3,a4,7
--    80002dc2:	00d996bb          	sllw	a3,s3,a3
-+    80002d02:	00777693          	and	a3,a4,7
-+    80002d06:	00d996bb          	sllw	a3,s3,a3
-       if((bp->data[bi/8] & m) == 0){  /* Is block free? */
--    80002dc6:	41f7579b          	sraiw	a5,a4,0x1f
--    80002dca:	01d7d79b          	srliw	a5,a5,0x1d
--    80002dce:	9fb9                	addw	a5,a5,a4
--    80002dd0:	4037d79b          	sraiw	a5,a5,0x3
--    80002dd4:	00f90633          	add	a2,s2,a5
--    80002dd8:	05864603          	lbu	a2,88(a2)
--    80002ddc:	00c6f5b3          	and	a1,a3,a2
--    80002de0:	d5a1                	beqz	a1,80002d28 <balloc+0x3c>
-+    80002d0a:	41f7579b          	sraw	a5,a4,0x1f
-+    80002d0e:	01d7d79b          	srlw	a5,a5,0x1d
-+    80002d12:	9fb9                	addw	a5,a5,a4
-+    80002d14:	4037d79b          	sraw	a5,a5,0x3
-+    80002d18:	00f90633          	add	a2,s2,a5
-+    80002d1c:	05864603          	lbu	a2,88(a2)
-+    80002d20:	00c6f5b3          	and	a1,a3,a2
-+    80002d24:	d5a1                	beqz	a1,80002c6c <balloc+0x3a>
-     for(bi = 0; bi < BPB && b + bi < sb.size; bi++){
--    80002de2:	2705                	addiw	a4,a4,1
--    80002de4:	2485                	addiw	s1,s1,1
--    80002de6:	fd471ae3          	bne	a4,s4,80002dba <balloc+0xce>
--    80002dea:	bf49                	j	80002d7c <balloc+0x90>
--    80002dec:	6906                	ld	s2,64(sp)
--    80002dee:	79e2                	ld	s3,56(sp)
--    80002df0:	7a42                	ld	s4,48(sp)
--    80002df2:	7aa2                	ld	s5,40(sp)
--    80002df4:	7b02                	ld	s6,32(sp)
--    80002df6:	6be2                	ld	s7,24(sp)
--    80002df8:	6c42                	ld	s8,16(sp)
--    80002dfa:	6ca2                	ld	s9,8(sp)
-+    80002d26:	2705                	addw	a4,a4,1
-+    80002d28:	2485                	addw	s1,s1,1
-+    80002d2a:	fd471ae3          	bne	a4,s4,80002cfe <balloc+0xcc>
-+    80002d2e:	bf49                	j	80002cc0 <balloc+0x8e>
-   printf("balloc: out of blocks\n");
--    80002dfc:	00004517          	auipc	a0,0x4
--    80002e00:	68450513          	addi	a0,a0,1668 # 80007480 <etext+0x480>
--    80002e04:	ebefd0ef          	jal	800004c2 <printf>
-+    80002d30:	00005517          	auipc	a0,0x5
-+    80002d34:	86050513          	add	a0,a0,-1952 # 80007590 <syscalls+0x100>
-+    80002d38:	f66fd0ef          	jal	8000049e <printf>
-   return 0;
--    80002e08:	4481                	li	s1,0
--    80002e0a:	b79d                	j	80002d70 <balloc+0x84>
-+    80002d3c:	4481                	li	s1,0
-+    80002d3e:	b79d                	j	80002ca4 <balloc+0x72>
- 
--0000000080002e0c <bmap>:
-+0000000080002d40 <bmap>:
- /* Return the disk block address of the nth block in inode ip. */
- /* If there is no such block, bmap allocates one. */
- /* returns 0 if out of disk space. */
- static uint
- bmap(struct inode *ip, uint bn)
- {
--    80002e0c:	7179                	addi	sp,sp,-48
--    80002e0e:	f406                	sd	ra,40(sp)
--    80002e10:	f022                	sd	s0,32(sp)
--    80002e12:	ec26                	sd	s1,24(sp)
--    80002e14:	e84a                	sd	s2,16(sp)
--    80002e16:	e44e                	sd	s3,8(sp)
--    80002e18:	1800                	addi	s0,sp,48
--    80002e1a:	89aa                	mv	s3,a0
-+    80002d40:	7179                	add	sp,sp,-48
-+    80002d42:	f406                	sd	ra,40(sp)
-+    80002d44:	f022                	sd	s0,32(sp)
-+    80002d46:	ec26                	sd	s1,24(sp)
-+    80002d48:	e84a                	sd	s2,16(sp)
-+    80002d4a:	e44e                	sd	s3,8(sp)
-+    80002d4c:	e052                	sd	s4,0(sp)
-+    80002d4e:	1800                	add	s0,sp,48
-+    80002d50:	89aa                	mv	s3,a0
-   uint addr, *a;
-   struct buf *bp;
- 
-   if(bn < NDIRECT){
--    80002e1c:	47ad                	li	a5,11
--    80002e1e:	02b7e663          	bltu	a5,a1,80002e4a <bmap+0x3e>
-+    80002d52:	47ad                	li	a5,11
-+    80002d54:	02b7e663          	bltu	a5,a1,80002d80 <bmap+0x40>
-     if((addr = ip->addrs[bn]) == 0){
--    80002e22:	02059793          	slli	a5,a1,0x20
--    80002e26:	01e7d593          	srli	a1,a5,0x1e
--    80002e2a:	00b504b3          	add	s1,a0,a1
--    80002e2e:	0504a903          	lw	s2,80(s1)
--    80002e32:	06091a63          	bnez	s2,80002ea6 <bmap+0x9a>
-+    80002d58:	02059793          	sll	a5,a1,0x20
-+    80002d5c:	01e7d593          	srl	a1,a5,0x1e
-+    80002d60:	00b504b3          	add	s1,a0,a1
-+    80002d64:	0504a903          	lw	s2,80(s1)
-+    80002d68:	06091663          	bnez	s2,80002dd4 <bmap+0x94>
-       addr = balloc(ip->dev);
--    80002e36:	4108                	lw	a0,0(a0)
--    80002e38:	eb5ff0ef          	jal	80002cec <balloc>
--    80002e3c:	0005091b          	sext.w	s2,a0
-+    80002d6c:	4108                	lw	a0,0(a0)
-+    80002d6e:	ec5ff0ef          	jal	80002c32 <balloc>
-+    80002d72:	0005091b          	sext.w	s2,a0
-       if(addr == 0)
--    80002e40:	06090363          	beqz	s2,80002ea6 <bmap+0x9a>
-+    80002d76:	04090f63          	beqz	s2,80002dd4 <bmap+0x94>
-         return 0;
-       ip->addrs[bn] = addr;
--    80002e44:	0524a823          	sw	s2,80(s1)
--    80002e48:	a8b9                	j	80002ea6 <bmap+0x9a>
-+    80002d7a:	0524a823          	sw	s2,80(s1)
-+    80002d7e:	a899                	j	80002dd4 <bmap+0x94>
-     }
-     return addr;
-   }
-   bn -= NDIRECT;
--    80002e4a:	ff45849b          	addiw	s1,a1,-12
--    80002e4e:	0004871b          	sext.w	a4,s1
-+    80002d80:	ff45849b          	addw	s1,a1,-12
-+    80002d84:	0004871b          	sext.w	a4,s1
- 
-   if(bn < NINDIRECT){
--    80002e52:	0ff00793          	li	a5,255
--    80002e56:	06e7ee63          	bltu	a5,a4,80002ed2 <bmap+0xc6>
-+    80002d88:	0ff00793          	li	a5,255
-+    80002d8c:	06e7eb63          	bltu	a5,a4,80002e02 <bmap+0xc2>
-     /* Load indirect block, allocating if necessary. */
-     if((addr = ip->addrs[NDIRECT]) == 0){
--    80002e5a:	08052903          	lw	s2,128(a0)
--    80002e5e:	00091d63          	bnez	s2,80002e78 <bmap+0x6c>
-+    80002d90:	08052903          	lw	s2,128(a0)
-+    80002d94:	00091b63          	bnez	s2,80002daa <bmap+0x6a>
-       addr = balloc(ip->dev);
--    80002e62:	4108                	lw	a0,0(a0)
--    80002e64:	e89ff0ef          	jal	80002cec <balloc>
--    80002e68:	0005091b          	sext.w	s2,a0
-+    80002d98:	4108                	lw	a0,0(a0)
-+    80002d9a:	e99ff0ef          	jal	80002c32 <balloc>
-+    80002d9e:	0005091b          	sext.w	s2,a0
-       if(addr == 0)
--    80002e6c:	02090d63          	beqz	s2,80002ea6 <bmap+0x9a>
--    80002e70:	e052                	sd	s4,0(sp)
-+    80002da2:	02090963          	beqz	s2,80002dd4 <bmap+0x94>
-         return 0;
-       ip->addrs[NDIRECT] = addr;
--    80002e72:	0929a023          	sw	s2,128(s3)
--    80002e76:	a011                	j	80002e7a <bmap+0x6e>
--    80002e78:	e052                	sd	s4,0(sp)
-+    80002da6:	0929a023          	sw	s2,128(s3)
-     }
-     bp = bread(ip->dev, addr);
--    80002e7a:	85ca                	mv	a1,s2
--    80002e7c:	0009a503          	lw	a0,0(s3)
--    80002e80:	c09ff0ef          	jal	80002a88 <bread>
--    80002e84:	8a2a                	mv	s4,a0
-+    80002daa:	85ca                	mv	a1,s2
-+    80002dac:	0009a503          	lw	a0,0(s3)
-+    80002db0:	c1fff0ef          	jal	800029ce <bread>
-+    80002db4:	8a2a                	mv	s4,a0
-     a = (uint*)bp->data;
--    80002e86:	05850793          	addi	a5,a0,88
-+    80002db6:	05850793          	add	a5,a0,88
-     if((addr = a[bn]) == 0){
--    80002e8a:	02049713          	slli	a4,s1,0x20
--    80002e8e:	01e75593          	srli	a1,a4,0x1e
--    80002e92:	00b784b3          	add	s1,a5,a1
--    80002e96:	0004a903          	lw	s2,0(s1)
--    80002e9a:	00090e63          	beqz	s2,80002eb6 <bmap+0xaa>
-+    80002dba:	02049713          	sll	a4,s1,0x20
-+    80002dbe:	01e75593          	srl	a1,a4,0x1e
-+    80002dc2:	00b784b3          	add	s1,a5,a1
-+    80002dc6:	0004a903          	lw	s2,0(s1)
-+    80002dca:	00090e63          	beqz	s2,80002de6 <bmap+0xa6>
-       if(addr){
-         a[bn] = addr;
-         log_write(bp);
-       }
-     }
-     brelse(bp);
--    80002e9e:	8552                	mv	a0,s4
--    80002ea0:	cf1ff0ef          	jal	80002b90 <brelse>
-+    80002dce:	8552                	mv	a0,s4
-+    80002dd0:	d07ff0ef          	jal	80002ad6 <brelse>
-     return addr;
--    80002ea4:	6a02                	ld	s4,0(sp)
-   }
- 
-   panic("bmap: out of range");
- }
--    80002ea6:	854a                	mv	a0,s2
--    80002ea8:	70a2                	ld	ra,40(sp)
--    80002eaa:	7402                	ld	s0,32(sp)
--    80002eac:	64e2                	ld	s1,24(sp)
--    80002eae:	6942                	ld	s2,16(sp)
--    80002eb0:	69a2                	ld	s3,8(sp)
--    80002eb2:	6145                	addi	sp,sp,48
--    80002eb4:	8082                	ret
-+    80002dd4:	854a                	mv	a0,s2
-+    80002dd6:	70a2                	ld	ra,40(sp)
-+    80002dd8:	7402                	ld	s0,32(sp)
-+    80002dda:	64e2                	ld	s1,24(sp)
-+    80002ddc:	6942                	ld	s2,16(sp)
-+    80002dde:	69a2                	ld	s3,8(sp)
-+    80002de0:	6a02                	ld	s4,0(sp)
-+    80002de2:	6145                	add	sp,sp,48
-+    80002de4:	8082                	ret
-       addr = balloc(ip->dev);
--    80002eb6:	0009a503          	lw	a0,0(s3)
--    80002eba:	e33ff0ef          	jal	80002cec <balloc>
--    80002ebe:	0005091b          	sext.w	s2,a0
-+    80002de6:	0009a503          	lw	a0,0(s3)
-+    80002dea:	e49ff0ef          	jal	80002c32 <balloc>
-+    80002dee:	0005091b          	sext.w	s2,a0
-       if(addr){
--    80002ec2:	fc090ee3          	beqz	s2,80002e9e <bmap+0x92>
-+    80002df2:	fc090ee3          	beqz	s2,80002dce <bmap+0x8e>
-         a[bn] = addr;
--    80002ec6:	0124a023          	sw	s2,0(s1)
-+    80002df6:	0124a023          	sw	s2,0(s1)
-         log_write(bp);
--    80002eca:	8552                	mv	a0,s4
--    80002ecc:	50f000ef          	jal	80003bda <log_write>
--    80002ed0:	b7f9                	j	80002e9e <bmap+0x92>
--    80002ed2:	e052                	sd	s4,0(sp)
-+    80002dfa:	8552                	mv	a0,s4
-+    80002dfc:	4d3000ef          	jal	80003ace <log_write>
-+    80002e00:	b7f9                	j	80002dce <bmap+0x8e>
-   panic("bmap: out of range");
--    80002ed4:	00004517          	auipc	a0,0x4
--    80002ed8:	5c450513          	addi	a0,a0,1476 # 80007498 <etext+0x498>
--    80002edc:	8b9fd0ef          	jal	80000794 <panic>
--
--0000000080002ee0 <iget>:
--{
--    80002ee0:	7179                	addi	sp,sp,-48
--    80002ee2:	f406                	sd	ra,40(sp)
--    80002ee4:	f022                	sd	s0,32(sp)
--    80002ee6:	ec26                	sd	s1,24(sp)
--    80002ee8:	e84a                	sd	s2,16(sp)
--    80002eea:	e44e                	sd	s3,8(sp)
--    80002eec:	e052                	sd	s4,0(sp)
--    80002eee:	1800                	addi	s0,sp,48
--    80002ef0:	89aa                	mv	s3,a0
--    80002ef2:	8a2e                	mv	s4,a1
-+    80002e02:	00004517          	auipc	a0,0x4
-+    80002e06:	7a650513          	add	a0,a0,1958 # 800075a8 <syscalls+0x118>
-+    80002e0a:	955fd0ef          	jal	8000075e <panic>
-+
-+0000000080002e0e <iget>:
-+{
-+    80002e0e:	7179                	add	sp,sp,-48
-+    80002e10:	f406                	sd	ra,40(sp)
-+    80002e12:	f022                	sd	s0,32(sp)
-+    80002e14:	ec26                	sd	s1,24(sp)
-+    80002e16:	e84a                	sd	s2,16(sp)
-+    80002e18:	e44e                	sd	s3,8(sp)
-+    80002e1a:	e052                	sd	s4,0(sp)
-+    80002e1c:	1800                	add	s0,sp,48
-+    80002e1e:	89aa                	mv	s3,a0
-+    80002e20:	8a2e                	mv	s4,a1
-   acquire(&itable.lock);
--    80002ef4:	0001e517          	auipc	a0,0x1e
--    80002ef8:	95450513          	addi	a0,a0,-1708 # 80020848 <itable>
--    80002efc:	cf9fd0ef          	jal	80000bf4 <acquire>
-+    80002e22:	0001b517          	auipc	a0,0x1b
-+    80002e26:	13650513          	add	a0,a0,310 # 8001df58 <itable>
-+    80002e2a:	d77fd0ef          	jal	80000ba0 <acquire>
-   empty = 0;
--    80002f00:	4901                	li	s2,0
-+    80002e2e:	4901                	li	s2,0
-   for(ip = &itable.inode[0]; ip < &itable.inode[NINODE]; ip++){
--    80002f02:	0001e497          	auipc	s1,0x1e
--    80002f06:	95e48493          	addi	s1,s1,-1698 # 80020860 <itable+0x18>
--    80002f0a:	0001f697          	auipc	a3,0x1f
--    80002f0e:	3e668693          	addi	a3,a3,998 # 800222f0 <log>
--    80002f12:	a039                	j	80002f20 <iget+0x40>
-+    80002e30:	0001b497          	auipc	s1,0x1b
-+    80002e34:	14048493          	add	s1,s1,320 # 8001df70 <itable+0x18>
-+    80002e38:	0001d697          	auipc	a3,0x1d
-+    80002e3c:	bc868693          	add	a3,a3,-1080 # 8001fa00 <log>
-+    80002e40:	a039                	j	80002e4e <iget+0x40>
-     if(empty == 0 && ip->ref == 0)    /* Remember empty slot. */
--    80002f14:	02090963          	beqz	s2,80002f46 <iget+0x66>
-+    80002e42:	02090963          	beqz	s2,80002e74 <iget+0x66>
-   for(ip = &itable.inode[0]; ip < &itable.inode[NINODE]; ip++){
--    80002f18:	08848493          	addi	s1,s1,136
--    80002f1c:	02d48863          	beq	s1,a3,80002f4c <iget+0x6c>
-+    80002e46:	08848493          	add	s1,s1,136
-+    80002e4a:	02d48863          	beq	s1,a3,80002e7a <iget+0x6c>
-     if(ip->ref > 0 && ip->dev == dev && ip->inum == inum){
--    80002f20:	449c                	lw	a5,8(s1)
--    80002f22:	fef059e3          	blez	a5,80002f14 <iget+0x34>
--    80002f26:	4098                	lw	a4,0(s1)
--    80002f28:	ff3716e3          	bne	a4,s3,80002f14 <iget+0x34>
--    80002f2c:	40d8                	lw	a4,4(s1)
--    80002f2e:	ff4713e3          	bne	a4,s4,80002f14 <iget+0x34>
-+    80002e4e:	449c                	lw	a5,8(s1)
-+    80002e50:	fef059e3          	blez	a5,80002e42 <iget+0x34>
-+    80002e54:	4098                	lw	a4,0(s1)
-+    80002e56:	ff3716e3          	bne	a4,s3,80002e42 <iget+0x34>
-+    80002e5a:	40d8                	lw	a4,4(s1)
-+    80002e5c:	ff4713e3          	bne	a4,s4,80002e42 <iget+0x34>
-       ip->ref++;
--    80002f32:	2785                	addiw	a5,a5,1
--    80002f34:	c49c                	sw	a5,8(s1)
-+    80002e60:	2785                	addw	a5,a5,1
-+    80002e62:	c49c                	sw	a5,8(s1)
-       release(&itable.lock);
--    80002f36:	0001e517          	auipc	a0,0x1e
--    80002f3a:	91250513          	addi	a0,a0,-1774 # 80020848 <itable>
--    80002f3e:	d4ffd0ef          	jal	80000c8c <release>
-+    80002e64:	0001b517          	auipc	a0,0x1b
-+    80002e68:	0f450513          	add	a0,a0,244 # 8001df58 <itable>
-+    80002e6c:	dcdfd0ef          	jal	80000c38 <release>
-       return ip;
--    80002f42:	8926                	mv	s2,s1
--    80002f44:	a02d                	j	80002f6e <iget+0x8e>
-+    80002e70:	8926                	mv	s2,s1
-+    80002e72:	a02d                	j	80002e9c <iget+0x8e>
-     if(empty == 0 && ip->ref == 0)    /* Remember empty slot. */
--    80002f46:	fbe9                	bnez	a5,80002f18 <iget+0x38>
--      empty = ip;
--    80002f48:	8926                	mv	s2,s1
--    80002f4a:	b7f9                	j	80002f18 <iget+0x38>
-+    80002e74:	fbe9                	bnez	a5,80002e46 <iget+0x38>
-+    80002e76:	8926                	mv	s2,s1
-+    80002e78:	b7f9                	j	80002e46 <iget+0x38>
-   if(empty == 0)
--    80002f4c:	02090a63          	beqz	s2,80002f80 <iget+0xa0>
-+    80002e7a:	02090a63          	beqz	s2,80002eae <iget+0xa0>
-   ip->dev = dev;
--    80002f50:	01392023          	sw	s3,0(s2)
-+    80002e7e:	01392023          	sw	s3,0(s2)
-   ip->inum = inum;
--    80002f54:	01492223          	sw	s4,4(s2)
-+    80002e82:	01492223          	sw	s4,4(s2)
-   ip->ref = 1;
--    80002f58:	4785                	li	a5,1
--    80002f5a:	00f92423          	sw	a5,8(s2)
-+    80002e86:	4785                	li	a5,1
-+    80002e88:	00f92423          	sw	a5,8(s2)
-   ip->valid = 0;
--    80002f5e:	04092023          	sw	zero,64(s2)
-+    80002e8c:	04092023          	sw	zero,64(s2)
-   release(&itable.lock);
--    80002f62:	0001e517          	auipc	a0,0x1e
--    80002f66:	8e650513          	addi	a0,a0,-1818 # 80020848 <itable>
--    80002f6a:	d23fd0ef          	jal	80000c8c <release>
--}
--    80002f6e:	854a                	mv	a0,s2
--    80002f70:	70a2                	ld	ra,40(sp)
--    80002f72:	7402                	ld	s0,32(sp)
--    80002f74:	64e2                	ld	s1,24(sp)
--    80002f76:	6942                	ld	s2,16(sp)
--    80002f78:	69a2                	ld	s3,8(sp)
--    80002f7a:	6a02                	ld	s4,0(sp)
--    80002f7c:	6145                	addi	sp,sp,48
--    80002f7e:	8082                	ret
-+    80002e90:	0001b517          	auipc	a0,0x1b
-+    80002e94:	0c850513          	add	a0,a0,200 # 8001df58 <itable>
-+    80002e98:	da1fd0ef          	jal	80000c38 <release>
-+}
-+    80002e9c:	854a                	mv	a0,s2
-+    80002e9e:	70a2                	ld	ra,40(sp)
-+    80002ea0:	7402                	ld	s0,32(sp)
-+    80002ea2:	64e2                	ld	s1,24(sp)
-+    80002ea4:	6942                	ld	s2,16(sp)
-+    80002ea6:	69a2                	ld	s3,8(sp)
-+    80002ea8:	6a02                	ld	s4,0(sp)
-+    80002eaa:	6145                	add	sp,sp,48
-+    80002eac:	8082                	ret
-     panic("iget: no inodes");
--    80002f80:	00004517          	auipc	a0,0x4
--    80002f84:	53050513          	addi	a0,a0,1328 # 800074b0 <etext+0x4b0>
--    80002f88:	80dfd0ef          	jal	80000794 <panic>
-+    80002eae:	00004517          	auipc	a0,0x4
-+    80002eb2:	71250513          	add	a0,a0,1810 # 800075c0 <syscalls+0x130>
-+    80002eb6:	8a9fd0ef          	jal	8000075e <panic>
- 
--0000000080002f8c <fsinit>:
-+0000000080002eba <fsinit>:
- fsinit(int dev) {
--    80002f8c:	7179                	addi	sp,sp,-48
--    80002f8e:	f406                	sd	ra,40(sp)
--    80002f90:	f022                	sd	s0,32(sp)
--    80002f92:	ec26                	sd	s1,24(sp)
--    80002f94:	e84a                	sd	s2,16(sp)
--    80002f96:	e44e                	sd	s3,8(sp)
--    80002f98:	1800                	addi	s0,sp,48
--    80002f9a:	892a                	mv	s2,a0
-+    80002eba:	7179                	add	sp,sp,-48
-+    80002ebc:	f406                	sd	ra,40(sp)
-+    80002ebe:	f022                	sd	s0,32(sp)
-+    80002ec0:	ec26                	sd	s1,24(sp)
-+    80002ec2:	e84a                	sd	s2,16(sp)
-+    80002ec4:	e44e                	sd	s3,8(sp)
-+    80002ec6:	1800                	add	s0,sp,48
-+    80002ec8:	892a                	mv	s2,a0
-   bp = bread(dev, 1);
--    80002f9c:	4585                	li	a1,1
--    80002f9e:	aebff0ef          	jal	80002a88 <bread>
--    80002fa2:	84aa                	mv	s1,a0
-+    80002eca:	4585                	li	a1,1
-+    80002ecc:	b03ff0ef          	jal	800029ce <bread>
-+    80002ed0:	84aa                	mv	s1,a0
-   memmove(sb, bp->data, sizeof(*sb));
--    80002fa4:	0001e997          	auipc	s3,0x1e
--    80002fa8:	88498993          	addi	s3,s3,-1916 # 80020828 <sb>
--    80002fac:	02000613          	li	a2,32
--    80002fb0:	05850593          	addi	a1,a0,88
--    80002fb4:	854e                	mv	a0,s3
--    80002fb6:	d6ffd0ef          	jal	80000d24 <memmove>
-+    80002ed2:	0001b997          	auipc	s3,0x1b
-+    80002ed6:	06698993          	add	s3,s3,102 # 8001df38 <sb>
-+    80002eda:	02000613          	li	a2,32
-+    80002ede:	05850593          	add	a1,a0,88
-+    80002ee2:	854e                	mv	a0,s3
-+    80002ee4:	dedfd0ef          	jal	80000cd0 <memmove>
-   brelse(bp);
--    80002fba:	8526                	mv	a0,s1
--    80002fbc:	bd5ff0ef          	jal	80002b90 <brelse>
-+    80002ee8:	8526                	mv	a0,s1
-+    80002eea:	bedff0ef          	jal	80002ad6 <brelse>
-   if(sb.magic != FSMAGIC)
--    80002fc0:	0009a703          	lw	a4,0(s3)
--    80002fc4:	102037b7          	lui	a5,0x10203
--    80002fc8:	04078793          	addi	a5,a5,64 # 10203040 <_entry-0x6fdfcfc0>
--    80002fcc:	02f71063          	bne	a4,a5,80002fec <fsinit+0x60>
-+    80002eee:	0009a703          	lw	a4,0(s3)
-+    80002ef2:	102037b7          	lui	a5,0x10203
-+    80002ef6:	04078793          	add	a5,a5,64 # 10203040 <_entry-0x6fdfcfc0>
-+    80002efa:	02f71063          	bne	a4,a5,80002f1a <fsinit+0x60>
-   initlog(dev, &sb);
--    80002fd0:	0001e597          	auipc	a1,0x1e
--    80002fd4:	85858593          	addi	a1,a1,-1960 # 80020828 <sb>
--    80002fd8:	854a                	mv	a0,s2
--    80002fda:	1f9000ef          	jal	800039d2 <initlog>
--}
--    80002fde:	70a2                	ld	ra,40(sp)
--    80002fe0:	7402                	ld	s0,32(sp)
--    80002fe2:	64e2                	ld	s1,24(sp)
--    80002fe4:	6942                	ld	s2,16(sp)
--    80002fe6:	69a2                	ld	s3,8(sp)
--    80002fe8:	6145                	addi	sp,sp,48
--    80002fea:	8082                	ret
-+    80002efe:	0001b597          	auipc	a1,0x1b
-+    80002f02:	03a58593          	add	a1,a1,58 # 8001df38 <sb>
-+    80002f06:	854a                	mv	a0,s2
-+    80002f08:	1c5000ef          	jal	800038cc <initlog>
-+}
-+    80002f0c:	70a2                	ld	ra,40(sp)
-+    80002f0e:	7402                	ld	s0,32(sp)
-+    80002f10:	64e2                	ld	s1,24(sp)
-+    80002f12:	6942                	ld	s2,16(sp)
-+    80002f14:	69a2                	ld	s3,8(sp)
-+    80002f16:	6145                	add	sp,sp,48
-+    80002f18:	8082                	ret
-     panic("invalid file system");
--    80002fec:	00004517          	auipc	a0,0x4
--    80002ff0:	4d450513          	addi	a0,a0,1236 # 800074c0 <etext+0x4c0>
--    80002ff4:	fa0fd0ef          	jal	80000794 <panic>
--
--0000000080002ff8 <iinit>:
--{
--    80002ff8:	7179                	addi	sp,sp,-48
--    80002ffa:	f406                	sd	ra,40(sp)
--    80002ffc:	f022                	sd	s0,32(sp)
--    80002ffe:	ec26                	sd	s1,24(sp)
--    80003000:	e84a                	sd	s2,16(sp)
--    80003002:	e44e                	sd	s3,8(sp)
--    80003004:	1800                	addi	s0,sp,48
-+    80002f1a:	00004517          	auipc	a0,0x4
-+    80002f1e:	6b650513          	add	a0,a0,1718 # 800075d0 <syscalls+0x140>
-+    80002f22:	83dfd0ef          	jal	8000075e <panic>
-+
-+0000000080002f26 <iinit>:
-+{
-+    80002f26:	7179                	add	sp,sp,-48
-+    80002f28:	f406                	sd	ra,40(sp)
-+    80002f2a:	f022                	sd	s0,32(sp)
-+    80002f2c:	ec26                	sd	s1,24(sp)
-+    80002f2e:	e84a                	sd	s2,16(sp)
-+    80002f30:	e44e                	sd	s3,8(sp)
-+    80002f32:	1800                	add	s0,sp,48
-   initlock(&itable.lock, "itable");
--    80003006:	00004597          	auipc	a1,0x4
--    8000300a:	4d258593          	addi	a1,a1,1234 # 800074d8 <etext+0x4d8>
--    8000300e:	0001e517          	auipc	a0,0x1e
--    80003012:	83a50513          	addi	a0,a0,-1990 # 80020848 <itable>
--    80003016:	b5ffd0ef          	jal	80000b74 <initlock>
-+    80002f34:	00004597          	auipc	a1,0x4
-+    80002f38:	6b458593          	add	a1,a1,1716 # 800075e8 <syscalls+0x158>
-+    80002f3c:	0001b517          	auipc	a0,0x1b
-+    80002f40:	01c50513          	add	a0,a0,28 # 8001df58 <itable>
-+    80002f44:	bddfd0ef          	jal	80000b20 <initlock>
-   for(i = 0; i < NINODE; i++) {
--    8000301a:	0001e497          	auipc	s1,0x1e
--    8000301e:	85648493          	addi	s1,s1,-1962 # 80020870 <itable+0x28>
--    80003022:	0001f997          	auipc	s3,0x1f
--    80003026:	2de98993          	addi	s3,s3,734 # 80022300 <log+0x10>
-+    80002f48:	0001b497          	auipc	s1,0x1b
-+    80002f4c:	03848493          	add	s1,s1,56 # 8001df80 <itable+0x28>
-+    80002f50:	0001d997          	auipc	s3,0x1d
-+    80002f54:	ac098993          	add	s3,s3,-1344 # 8001fa10 <log+0x10>
-     initsleeplock(&itable.inode[i].lock, "inode");
--    8000302a:	00004917          	auipc	s2,0x4
--    8000302e:	4b690913          	addi	s2,s2,1206 # 800074e0 <etext+0x4e0>
--    80003032:	85ca                	mv	a1,s2
--    80003034:	8526                	mv	a0,s1
--    80003036:	475000ef          	jal	80003caa <initsleeplock>
-+    80002f58:	00004917          	auipc	s2,0x4
-+    80002f5c:	69890913          	add	s2,s2,1688 # 800075f0 <syscalls+0x160>
-+    80002f60:	85ca                	mv	a1,s2
-+    80002f62:	8526                	mv	a0,s1
-+    80002f64:	43b000ef          	jal	80003b9e <initsleeplock>
-   for(i = 0; i < NINODE; i++) {
--    8000303a:	08848493          	addi	s1,s1,136
--    8000303e:	ff349ae3          	bne	s1,s3,80003032 <iinit+0x3a>
--}
--    80003042:	70a2                	ld	ra,40(sp)
--    80003044:	7402                	ld	s0,32(sp)
--    80003046:	64e2                	ld	s1,24(sp)
--    80003048:	6942                	ld	s2,16(sp)
--    8000304a:	69a2                	ld	s3,8(sp)
--    8000304c:	6145                	addi	sp,sp,48
--    8000304e:	8082                	ret
--
--0000000080003050 <ialloc>:
--{
--    80003050:	7139                	addi	sp,sp,-64
--    80003052:	fc06                	sd	ra,56(sp)
--    80003054:	f822                	sd	s0,48(sp)
--    80003056:	0080                	addi	s0,sp,64
-+    80002f68:	08848493          	add	s1,s1,136
-+    80002f6c:	ff349ae3          	bne	s1,s3,80002f60 <iinit+0x3a>
-+}
-+    80002f70:	70a2                	ld	ra,40(sp)
-+    80002f72:	7402                	ld	s0,32(sp)
-+    80002f74:	64e2                	ld	s1,24(sp)
-+    80002f76:	6942                	ld	s2,16(sp)
-+    80002f78:	69a2                	ld	s3,8(sp)
-+    80002f7a:	6145                	add	sp,sp,48
-+    80002f7c:	8082                	ret
-+
-+0000000080002f7e <ialloc>:
-+{
-+    80002f7e:	7139                	add	sp,sp,-64
-+    80002f80:	fc06                	sd	ra,56(sp)
-+    80002f82:	f822                	sd	s0,48(sp)
-+    80002f84:	f426                	sd	s1,40(sp)
-+    80002f86:	f04a                	sd	s2,32(sp)
-+    80002f88:	ec4e                	sd	s3,24(sp)
-+    80002f8a:	e852                	sd	s4,16(sp)
-+    80002f8c:	e456                	sd	s5,8(sp)
-+    80002f8e:	e05a                	sd	s6,0(sp)
-+    80002f90:	0080                	add	s0,sp,64
-   for(inum = 1; inum < sb.ninodes; inum++){
--    80003058:	0001d717          	auipc	a4,0x1d
--    8000305c:	7dc72703          	lw	a4,2012(a4) # 80020834 <sb+0xc>
--    80003060:	4785                	li	a5,1
--    80003062:	06e7f063          	bgeu	a5,a4,800030c2 <ialloc+0x72>
--    80003066:	f426                	sd	s1,40(sp)
--    80003068:	f04a                	sd	s2,32(sp)
--    8000306a:	ec4e                	sd	s3,24(sp)
--    8000306c:	e852                	sd	s4,16(sp)
--    8000306e:	e456                	sd	s5,8(sp)
--    80003070:	e05a                	sd	s6,0(sp)
--    80003072:	8aaa                	mv	s5,a0
--    80003074:	8b2e                	mv	s6,a1
--    80003076:	4905                	li	s2,1
-+    80002f92:	0001b717          	auipc	a4,0x1b
-+    80002f96:	fb272703          	lw	a4,-78(a4) # 8001df44 <sb+0xc>
-+    80002f9a:	4785                	li	a5,1
-+    80002f9c:	04e7f463          	bgeu	a5,a4,80002fe4 <ialloc+0x66>
-+    80002fa0:	8aaa                	mv	s5,a0
-+    80002fa2:	8b2e                	mv	s6,a1
-+    80002fa4:	4905                	li	s2,1
-     bp = bread(dev, IBLOCK(inum, sb));
--    80003078:	0001da17          	auipc	s4,0x1d
--    8000307c:	7b0a0a13          	addi	s4,s4,1968 # 80020828 <sb>
--    80003080:	00495593          	srli	a1,s2,0x4
--    80003084:	018a2783          	lw	a5,24(s4)
--    80003088:	9dbd                	addw	a1,a1,a5
--    8000308a:	8556                	mv	a0,s5
--    8000308c:	9fdff0ef          	jal	80002a88 <bread>
--    80003090:	84aa                	mv	s1,a0
-+    80002fa6:	0001ba17          	auipc	s4,0x1b
-+    80002faa:	f92a0a13          	add	s4,s4,-110 # 8001df38 <sb>
-+    80002fae:	00495593          	srl	a1,s2,0x4
-+    80002fb2:	018a2783          	lw	a5,24(s4)
-+    80002fb6:	9dbd                	addw	a1,a1,a5
-+    80002fb8:	8556                	mv	a0,s5
-+    80002fba:	a15ff0ef          	jal	800029ce <bread>
-+    80002fbe:	84aa                	mv	s1,a0
-     dip = (struct dinode*)bp->data + inum%IPB;
--    80003092:	05850993          	addi	s3,a0,88
--    80003096:	00f97793          	andi	a5,s2,15
--    8000309a:	079a                	slli	a5,a5,0x6
--    8000309c:	99be                	add	s3,s3,a5
-+    80002fc0:	05850993          	add	s3,a0,88
-+    80002fc4:	00f97793          	and	a5,s2,15
-+    80002fc8:	079a                	sll	a5,a5,0x6
-+    80002fca:	99be                	add	s3,s3,a5
-     if(dip->type == 0){  /* a free inode */
--    8000309e:	00099783          	lh	a5,0(s3)
--    800030a2:	cb9d                	beqz	a5,800030d8 <ialloc+0x88>
-+    80002fcc:	00099783          	lh	a5,0(s3)
-+    80002fd0:	cb9d                	beqz	a5,80003006 <ialloc+0x88>
-     brelse(bp);
--    800030a4:	aedff0ef          	jal	80002b90 <brelse>
-+    80002fd2:	b05ff0ef          	jal	80002ad6 <brelse>
-   for(inum = 1; inum < sb.ninodes; inum++){
--    800030a8:	0905                	addi	s2,s2,1
--    800030aa:	00ca2703          	lw	a4,12(s4)
--    800030ae:	0009079b          	sext.w	a5,s2
--    800030b2:	fce7e7e3          	bltu	a5,a4,80003080 <ialloc+0x30>
--    800030b6:	74a2                	ld	s1,40(sp)
--    800030b8:	7902                	ld	s2,32(sp)
--    800030ba:	69e2                	ld	s3,24(sp)
--    800030bc:	6a42                	ld	s4,16(sp)
--    800030be:	6aa2                	ld	s5,8(sp)
--    800030c0:	6b02                	ld	s6,0(sp)
-+    80002fd6:	0905                	add	s2,s2,1
-+    80002fd8:	00ca2703          	lw	a4,12(s4)
-+    80002fdc:	0009079b          	sext.w	a5,s2
-+    80002fe0:	fce7e7e3          	bltu	a5,a4,80002fae <ialloc+0x30>
-   printf("ialloc: no inodes\n");
--    800030c2:	00004517          	auipc	a0,0x4
--    800030c6:	42650513          	addi	a0,a0,1062 # 800074e8 <etext+0x4e8>
--    800030ca:	bf8fd0ef          	jal	800004c2 <printf>
-+    80002fe4:	00004517          	auipc	a0,0x4
-+    80002fe8:	61450513          	add	a0,a0,1556 # 800075f8 <syscalls+0x168>
-+    80002fec:	cb2fd0ef          	jal	8000049e <printf>
-   return 0;
--    800030ce:	4501                	li	a0,0
--}
--    800030d0:	70e2                	ld	ra,56(sp)
--    800030d2:	7442                	ld	s0,48(sp)
--    800030d4:	6121                	addi	sp,sp,64
--    800030d6:	8082                	ret
-+    80002ff0:	4501                	li	a0,0
-+}
-+    80002ff2:	70e2                	ld	ra,56(sp)
-+    80002ff4:	7442                	ld	s0,48(sp)
-+    80002ff6:	74a2                	ld	s1,40(sp)
-+    80002ff8:	7902                	ld	s2,32(sp)
-+    80002ffa:	69e2                	ld	s3,24(sp)
-+    80002ffc:	6a42                	ld	s4,16(sp)
-+    80002ffe:	6aa2                	ld	s5,8(sp)
-+    80003000:	6b02                	ld	s6,0(sp)
-+    80003002:	6121                	add	sp,sp,64
-+    80003004:	8082                	ret
-       memset(dip, 0, sizeof(*dip));
--    800030d8:	04000613          	li	a2,64
--    800030dc:	4581                	li	a1,0
--    800030de:	854e                	mv	a0,s3
--    800030e0:	be9fd0ef          	jal	80000cc8 <memset>
-+    80003006:	04000613          	li	a2,64
-+    8000300a:	4581                	li	a1,0
-+    8000300c:	854e                	mv	a0,s3
-+    8000300e:	c67fd0ef          	jal	80000c74 <memset>
-       dip->type = type;
--    800030e4:	01699023          	sh	s6,0(s3)
-+    80003012:	01699023          	sh	s6,0(s3)
-       log_write(bp);   /* mark it allocated on the disk */
--    800030e8:	8526                	mv	a0,s1
--    800030ea:	2f1000ef          	jal	80003bda <log_write>
-+    80003016:	8526                	mv	a0,s1
-+    80003018:	2b7000ef          	jal	80003ace <log_write>
-       brelse(bp);
--    800030ee:	8526                	mv	a0,s1
--    800030f0:	aa1ff0ef          	jal	80002b90 <brelse>
-+    8000301c:	8526                	mv	a0,s1
-+    8000301e:	ab9ff0ef          	jal	80002ad6 <brelse>
-       return iget(dev, inum);
--    800030f4:	0009059b          	sext.w	a1,s2
--    800030f8:	8556                	mv	a0,s5
--    800030fa:	de7ff0ef          	jal	80002ee0 <iget>
--    800030fe:	74a2                	ld	s1,40(sp)
--    80003100:	7902                	ld	s2,32(sp)
--    80003102:	69e2                	ld	s3,24(sp)
--    80003104:	6a42                	ld	s4,16(sp)
--    80003106:	6aa2                	ld	s5,8(sp)
--    80003108:	6b02                	ld	s6,0(sp)
--    8000310a:	b7d9                	j	800030d0 <ialloc+0x80>
--
--000000008000310c <iupdate>:
--{
--    8000310c:	1101                	addi	sp,sp,-32
--    8000310e:	ec06                	sd	ra,24(sp)
--    80003110:	e822                	sd	s0,16(sp)
--    80003112:	e426                	sd	s1,8(sp)
--    80003114:	e04a                	sd	s2,0(sp)
--    80003116:	1000                	addi	s0,sp,32
--    80003118:	84aa                	mv	s1,a0
-+    80003022:	0009059b          	sext.w	a1,s2
-+    80003026:	8556                	mv	a0,s5
-+    80003028:	de7ff0ef          	jal	80002e0e <iget>
-+    8000302c:	b7d9                	j	80002ff2 <ialloc+0x74>
-+
-+000000008000302e <iupdate>:
-+{
-+    8000302e:	1101                	add	sp,sp,-32
-+    80003030:	ec06                	sd	ra,24(sp)
-+    80003032:	e822                	sd	s0,16(sp)
-+    80003034:	e426                	sd	s1,8(sp)
-+    80003036:	e04a                	sd	s2,0(sp)
-+    80003038:	1000                	add	s0,sp,32
-+    8000303a:	84aa                	mv	s1,a0
-   bp = bread(ip->dev, IBLOCK(ip->inum, sb));
--    8000311a:	415c                	lw	a5,4(a0)
--    8000311c:	0047d79b          	srliw	a5,a5,0x4
--    80003120:	0001d597          	auipc	a1,0x1d
--    80003124:	7205a583          	lw	a1,1824(a1) # 80020840 <sb+0x18>
--    80003128:	9dbd                	addw	a1,a1,a5
--    8000312a:	4108                	lw	a0,0(a0)
--    8000312c:	95dff0ef          	jal	80002a88 <bread>
--    80003130:	892a                	mv	s2,a0
-+    8000303c:	415c                	lw	a5,4(a0)
-+    8000303e:	0047d79b          	srlw	a5,a5,0x4
-+    80003042:	0001b597          	auipc	a1,0x1b
-+    80003046:	f0e5a583          	lw	a1,-242(a1) # 8001df50 <sb+0x18>
-+    8000304a:	9dbd                	addw	a1,a1,a5
-+    8000304c:	4108                	lw	a0,0(a0)
-+    8000304e:	981ff0ef          	jal	800029ce <bread>
-+    80003052:	892a                	mv	s2,a0
-   dip = (struct dinode*)bp->data + ip->inum%IPB;
--    80003132:	05850793          	addi	a5,a0,88
--    80003136:	40d8                	lw	a4,4(s1)
--    80003138:	8b3d                	andi	a4,a4,15
--    8000313a:	071a                	slli	a4,a4,0x6
--    8000313c:	97ba                	add	a5,a5,a4
-+    80003054:	05850793          	add	a5,a0,88
-+    80003058:	40d8                	lw	a4,4(s1)
-+    8000305a:	8b3d                	and	a4,a4,15
-+    8000305c:	071a                	sll	a4,a4,0x6
-+    8000305e:	97ba                	add	a5,a5,a4
-   dip->type = ip->type;
--    8000313e:	04449703          	lh	a4,68(s1)
--    80003142:	00e79023          	sh	a4,0(a5)
-+    80003060:	04449703          	lh	a4,68(s1)
-+    80003064:	00e79023          	sh	a4,0(a5)
-   dip->major = ip->major;
--    80003146:	04649703          	lh	a4,70(s1)
--    8000314a:	00e79123          	sh	a4,2(a5)
-+    80003068:	04649703          	lh	a4,70(s1)
-+    8000306c:	00e79123          	sh	a4,2(a5)
-   dip->minor = ip->minor;
--    8000314e:	04849703          	lh	a4,72(s1)
--    80003152:	00e79223          	sh	a4,4(a5)
-+    80003070:	04849703          	lh	a4,72(s1)
-+    80003074:	00e79223          	sh	a4,4(a5)
-   dip->nlink = ip->nlink;
--    80003156:	04a49703          	lh	a4,74(s1)
--    8000315a:	00e79323          	sh	a4,6(a5)
-+    80003078:	04a49703          	lh	a4,74(s1)
-+    8000307c:	00e79323          	sh	a4,6(a5)
-   dip->size = ip->size;
--    8000315e:	44f8                	lw	a4,76(s1)
--    80003160:	c798                	sw	a4,8(a5)
-+    80003080:	44f8                	lw	a4,76(s1)
-+    80003082:	c798                	sw	a4,8(a5)
-   memmove(dip->addrs, ip->addrs, sizeof(ip->addrs));
--    80003162:	03400613          	li	a2,52
--    80003166:	05048593          	addi	a1,s1,80
--    8000316a:	00c78513          	addi	a0,a5,12
--    8000316e:	bb7fd0ef          	jal	80000d24 <memmove>
-+    80003084:	03400613          	li	a2,52
-+    80003088:	05048593          	add	a1,s1,80
-+    8000308c:	00c78513          	add	a0,a5,12
-+    80003090:	c41fd0ef          	jal	80000cd0 <memmove>
-   log_write(bp);
--    80003172:	854a                	mv	a0,s2
--    80003174:	267000ef          	jal	80003bda <log_write>
-+    80003094:	854a                	mv	a0,s2
-+    80003096:	239000ef          	jal	80003ace <log_write>
-   brelse(bp);
--    80003178:	854a                	mv	a0,s2
--    8000317a:	a17ff0ef          	jal	80002b90 <brelse>
--}
--    8000317e:	60e2                	ld	ra,24(sp)
--    80003180:	6442                	ld	s0,16(sp)
--    80003182:	64a2                	ld	s1,8(sp)
--    80003184:	6902                	ld	s2,0(sp)
--    80003186:	6105                	addi	sp,sp,32
--    80003188:	8082                	ret
--
--000000008000318a <idup>:
--{
--    8000318a:	1101                	addi	sp,sp,-32
--    8000318c:	ec06                	sd	ra,24(sp)
--    8000318e:	e822                	sd	s0,16(sp)
--    80003190:	e426                	sd	s1,8(sp)
--    80003192:	1000                	addi	s0,sp,32
--    80003194:	84aa                	mv	s1,a0
-+    8000309a:	854a                	mv	a0,s2
-+    8000309c:	a3bff0ef          	jal	80002ad6 <brelse>
-+}
-+    800030a0:	60e2                	ld	ra,24(sp)
-+    800030a2:	6442                	ld	s0,16(sp)
-+    800030a4:	64a2                	ld	s1,8(sp)
-+    800030a6:	6902                	ld	s2,0(sp)
-+    800030a8:	6105                	add	sp,sp,32
-+    800030aa:	8082                	ret
-+
-+00000000800030ac <idup>:
-+{
-+    800030ac:	1101                	add	sp,sp,-32
-+    800030ae:	ec06                	sd	ra,24(sp)
-+    800030b0:	e822                	sd	s0,16(sp)
-+    800030b2:	e426                	sd	s1,8(sp)
-+    800030b4:	1000                	add	s0,sp,32
-+    800030b6:	84aa                	mv	s1,a0
-   acquire(&itable.lock);
--    80003196:	0001d517          	auipc	a0,0x1d
--    8000319a:	6b250513          	addi	a0,a0,1714 # 80020848 <itable>
--    8000319e:	a57fd0ef          	jal	80000bf4 <acquire>
-+    800030b8:	0001b517          	auipc	a0,0x1b
-+    800030bc:	ea050513          	add	a0,a0,-352 # 8001df58 <itable>
-+    800030c0:	ae1fd0ef          	jal	80000ba0 <acquire>
-   ip->ref++;
--    800031a2:	449c                	lw	a5,8(s1)
--    800031a4:	2785                	addiw	a5,a5,1
--    800031a6:	c49c                	sw	a5,8(s1)
-+    800030c4:	449c                	lw	a5,8(s1)
-+    800030c6:	2785                	addw	a5,a5,1
-+    800030c8:	c49c                	sw	a5,8(s1)
-   release(&itable.lock);
--    800031a8:	0001d517          	auipc	a0,0x1d
--    800031ac:	6a050513          	addi	a0,a0,1696 # 80020848 <itable>
--    800031b0:	addfd0ef          	jal	80000c8c <release>
--}
--    800031b4:	8526                	mv	a0,s1
--    800031b6:	60e2                	ld	ra,24(sp)
--    800031b8:	6442                	ld	s0,16(sp)
--    800031ba:	64a2                	ld	s1,8(sp)
--    800031bc:	6105                	addi	sp,sp,32
--    800031be:	8082                	ret
--
--00000000800031c0 <ilock>:
--{
--    800031c0:	1101                	addi	sp,sp,-32
--    800031c2:	ec06                	sd	ra,24(sp)
--    800031c4:	e822                	sd	s0,16(sp)
--    800031c6:	e426                	sd	s1,8(sp)
--    800031c8:	1000                	addi	s0,sp,32
-+    800030ca:	0001b517          	auipc	a0,0x1b
-+    800030ce:	e8e50513          	add	a0,a0,-370 # 8001df58 <itable>
-+    800030d2:	b67fd0ef          	jal	80000c38 <release>
-+}
-+    800030d6:	8526                	mv	a0,s1
-+    800030d8:	60e2                	ld	ra,24(sp)
-+    800030da:	6442                	ld	s0,16(sp)
-+    800030dc:	64a2                	ld	s1,8(sp)
-+    800030de:	6105                	add	sp,sp,32
-+    800030e0:	8082                	ret
-+
-+00000000800030e2 <ilock>:
-+{
-+    800030e2:	1101                	add	sp,sp,-32
-+    800030e4:	ec06                	sd	ra,24(sp)
-+    800030e6:	e822                	sd	s0,16(sp)
-+    800030e8:	e426                	sd	s1,8(sp)
-+    800030ea:	e04a                	sd	s2,0(sp)
-+    800030ec:	1000                	add	s0,sp,32
-   if(ip == 0 || ip->ref < 1)
--    800031ca:	cd19                	beqz	a0,800031e8 <ilock+0x28>
--    800031cc:	84aa                	mv	s1,a0
--    800031ce:	451c                	lw	a5,8(a0)
--    800031d0:	00f05c63          	blez	a5,800031e8 <ilock+0x28>
-+    800030ee:	c105                	beqz	a0,8000310e <ilock+0x2c>
-+    800030f0:	84aa                	mv	s1,a0
-+    800030f2:	451c                	lw	a5,8(a0)
-+    800030f4:	00f05d63          	blez	a5,8000310e <ilock+0x2c>
-   acquiresleep(&ip->lock);
--    800031d4:	0541                	addi	a0,a0,16
--    800031d6:	30b000ef          	jal	80003ce0 <acquiresleep>
-+    800030f8:	0541                	add	a0,a0,16
-+    800030fa:	2db000ef          	jal	80003bd4 <acquiresleep>
-   if(ip->valid == 0){
--    800031da:	40bc                	lw	a5,64(s1)
--    800031dc:	cf89                	beqz	a5,800031f6 <ilock+0x36>
--}
--    800031de:	60e2                	ld	ra,24(sp)
--    800031e0:	6442                	ld	s0,16(sp)
--    800031e2:	64a2                	ld	s1,8(sp)
--    800031e4:	6105                	addi	sp,sp,32
--    800031e6:	8082                	ret
--    800031e8:	e04a                	sd	s2,0(sp)
-+    800030fe:	40bc                	lw	a5,64(s1)
-+    80003100:	cf89                	beqz	a5,8000311a <ilock+0x38>
-+}
-+    80003102:	60e2                	ld	ra,24(sp)
-+    80003104:	6442                	ld	s0,16(sp)
-+    80003106:	64a2                	ld	s1,8(sp)
-+    80003108:	6902                	ld	s2,0(sp)
-+    8000310a:	6105                	add	sp,sp,32
-+    8000310c:	8082                	ret
-     panic("ilock");
--    800031ea:	00004517          	auipc	a0,0x4
--    800031ee:	31650513          	addi	a0,a0,790 # 80007500 <etext+0x500>
--    800031f2:	da2fd0ef          	jal	80000794 <panic>
--    800031f6:	e04a                	sd	s2,0(sp)
-+    8000310e:	00004517          	auipc	a0,0x4
-+    80003112:	50250513          	add	a0,a0,1282 # 80007610 <syscalls+0x180>
-+    80003116:	e48fd0ef          	jal	8000075e <panic>
-     bp = bread(ip->dev, IBLOCK(ip->inum, sb));
--    800031f8:	40dc                	lw	a5,4(s1)
--    800031fa:	0047d79b          	srliw	a5,a5,0x4
--    800031fe:	0001d597          	auipc	a1,0x1d
--    80003202:	6425a583          	lw	a1,1602(a1) # 80020840 <sb+0x18>
--    80003206:	9dbd                	addw	a1,a1,a5
--    80003208:	4088                	lw	a0,0(s1)
--    8000320a:	87fff0ef          	jal	80002a88 <bread>
--    8000320e:	892a                	mv	s2,a0
-+    8000311a:	40dc                	lw	a5,4(s1)
-+    8000311c:	0047d79b          	srlw	a5,a5,0x4
-+    80003120:	0001b597          	auipc	a1,0x1b
-+    80003124:	e305a583          	lw	a1,-464(a1) # 8001df50 <sb+0x18>
-+    80003128:	9dbd                	addw	a1,a1,a5
-+    8000312a:	4088                	lw	a0,0(s1)
-+    8000312c:	8a3ff0ef          	jal	800029ce <bread>
-+    80003130:	892a                	mv	s2,a0
-     dip = (struct dinode*)bp->data + ip->inum%IPB;
--    80003210:	05850593          	addi	a1,a0,88
--    80003214:	40dc                	lw	a5,4(s1)
--    80003216:	8bbd                	andi	a5,a5,15
--    80003218:	079a                	slli	a5,a5,0x6
--    8000321a:	95be                	add	a1,a1,a5
-+    80003132:	05850593          	add	a1,a0,88
-+    80003136:	40dc                	lw	a5,4(s1)
-+    80003138:	8bbd                	and	a5,a5,15
-+    8000313a:	079a                	sll	a5,a5,0x6
-+    8000313c:	95be                	add	a1,a1,a5
-     ip->type = dip->type;
--    8000321c:	00059783          	lh	a5,0(a1)
--    80003220:	04f49223          	sh	a5,68(s1)
-+    8000313e:	00059783          	lh	a5,0(a1)
-+    80003142:	04f49223          	sh	a5,68(s1)
-     ip->major = dip->major;
--    80003224:	00259783          	lh	a5,2(a1)
--    80003228:	04f49323          	sh	a5,70(s1)
-+    80003146:	00259783          	lh	a5,2(a1)
-+    8000314a:	04f49323          	sh	a5,70(s1)
-     ip->minor = dip->minor;
--    8000322c:	00459783          	lh	a5,4(a1)
--    80003230:	04f49423          	sh	a5,72(s1)
-+    8000314e:	00459783          	lh	a5,4(a1)
-+    80003152:	04f49423          	sh	a5,72(s1)
-     ip->nlink = dip->nlink;
--    80003234:	00659783          	lh	a5,6(a1)
--    80003238:	04f49523          	sh	a5,74(s1)
-+    80003156:	00659783          	lh	a5,6(a1)
-+    8000315a:	04f49523          	sh	a5,74(s1)
-     ip->size = dip->size;
--    8000323c:	459c                	lw	a5,8(a1)
--    8000323e:	c4fc                	sw	a5,76(s1)
-+    8000315e:	459c                	lw	a5,8(a1)
-+    80003160:	c4fc                	sw	a5,76(s1)
-     memmove(ip->addrs, dip->addrs, sizeof(ip->addrs));
--    80003240:	03400613          	li	a2,52
--    80003244:	05b1                	addi	a1,a1,12
--    80003246:	05048513          	addi	a0,s1,80
--    8000324a:	adbfd0ef          	jal	80000d24 <memmove>
-+    80003162:	03400613          	li	a2,52
-+    80003166:	05b1                	add	a1,a1,12
-+    80003168:	05048513          	add	a0,s1,80
-+    8000316c:	b65fd0ef          	jal	80000cd0 <memmove>
-     brelse(bp);
--    8000324e:	854a                	mv	a0,s2
--    80003250:	941ff0ef          	jal	80002b90 <brelse>
-+    80003170:	854a                	mv	a0,s2
-+    80003172:	965ff0ef          	jal	80002ad6 <brelse>
-     ip->valid = 1;
--    80003254:	4785                	li	a5,1
--    80003256:	c0bc                	sw	a5,64(s1)
-+    80003176:	4785                	li	a5,1
-+    80003178:	c0bc                	sw	a5,64(s1)
-     if(ip->type == 0)
--    80003258:	04449783          	lh	a5,68(s1)
--    8000325c:	c399                	beqz	a5,80003262 <ilock+0xa2>
--    8000325e:	6902                	ld	s2,0(sp)
--    80003260:	bfbd                	j	800031de <ilock+0x1e>
-+    8000317a:	04449783          	lh	a5,68(s1)
-+    8000317e:	f3d1                	bnez	a5,80003102 <ilock+0x20>
-       panic("ilock: no type");
--    80003262:	00004517          	auipc	a0,0x4
--    80003266:	2a650513          	addi	a0,a0,678 # 80007508 <etext+0x508>
--    8000326a:	d2afd0ef          	jal	80000794 <panic>
--
--000000008000326e <iunlock>:
--{
--    8000326e:	1101                	addi	sp,sp,-32
--    80003270:	ec06                	sd	ra,24(sp)
--    80003272:	e822                	sd	s0,16(sp)
--    80003274:	e426                	sd	s1,8(sp)
--    80003276:	e04a                	sd	s2,0(sp)
--    80003278:	1000                	addi	s0,sp,32
-+    80003180:	00004517          	auipc	a0,0x4
-+    80003184:	49850513          	add	a0,a0,1176 # 80007618 <syscalls+0x188>
-+    80003188:	dd6fd0ef          	jal	8000075e <panic>
-+
-+000000008000318c <iunlock>:
-+{
-+    8000318c:	1101                	add	sp,sp,-32
-+    8000318e:	ec06                	sd	ra,24(sp)
-+    80003190:	e822                	sd	s0,16(sp)
-+    80003192:	e426                	sd	s1,8(sp)
-+    80003194:	e04a                	sd	s2,0(sp)
-+    80003196:	1000                	add	s0,sp,32
-   if(ip == 0 || !holdingsleep(&ip->lock) || ip->ref < 1)
--    8000327a:	c505                	beqz	a0,800032a2 <iunlock+0x34>
--    8000327c:	84aa                	mv	s1,a0
--    8000327e:	01050913          	addi	s2,a0,16
--    80003282:	854a                	mv	a0,s2
--    80003284:	2db000ef          	jal	80003d5e <holdingsleep>
--    80003288:	cd09                	beqz	a0,800032a2 <iunlock+0x34>
--    8000328a:	449c                	lw	a5,8(s1)
--    8000328c:	00f05b63          	blez	a5,800032a2 <iunlock+0x34>
-+    80003198:	c505                	beqz	a0,800031c0 <iunlock+0x34>
-+    8000319a:	84aa                	mv	s1,a0
-+    8000319c:	01050913          	add	s2,a0,16
-+    800031a0:	854a                	mv	a0,s2
-+    800031a2:	2b1000ef          	jal	80003c52 <holdingsleep>
-+    800031a6:	cd09                	beqz	a0,800031c0 <iunlock+0x34>
-+    800031a8:	449c                	lw	a5,8(s1)
-+    800031aa:	00f05b63          	blez	a5,800031c0 <iunlock+0x34>
-   releasesleep(&ip->lock);
--    80003290:	854a                	mv	a0,s2
--    80003292:	295000ef          	jal	80003d26 <releasesleep>
--}
--    80003296:	60e2                	ld	ra,24(sp)
--    80003298:	6442                	ld	s0,16(sp)
--    8000329a:	64a2                	ld	s1,8(sp)
--    8000329c:	6902                	ld	s2,0(sp)
--    8000329e:	6105                	addi	sp,sp,32
--    800032a0:	8082                	ret
-+    800031ae:	854a                	mv	a0,s2
-+    800031b0:	26b000ef          	jal	80003c1a <releasesleep>
-+}
-+    800031b4:	60e2                	ld	ra,24(sp)
-+    800031b6:	6442                	ld	s0,16(sp)
-+    800031b8:	64a2                	ld	s1,8(sp)
-+    800031ba:	6902                	ld	s2,0(sp)
-+    800031bc:	6105                	add	sp,sp,32
-+    800031be:	8082                	ret
-     panic("iunlock");
--    800032a2:	00004517          	auipc	a0,0x4
--    800032a6:	27650513          	addi	a0,a0,630 # 80007518 <etext+0x518>
--    800032aa:	ceafd0ef          	jal	80000794 <panic>
-+    800031c0:	00004517          	auipc	a0,0x4
-+    800031c4:	46850513          	add	a0,a0,1128 # 80007628 <syscalls+0x198>
-+    800031c8:	d96fd0ef          	jal	8000075e <panic>
- 
--00000000800032ae <itrunc>:
-+00000000800031cc <itrunc>:
- 
- /* Truncate inode (discard contents). */
- /* Caller must hold ip->lock. */
- void
- itrunc(struct inode *ip)
- {
--    800032ae:	7179                	addi	sp,sp,-48
--    800032b0:	f406                	sd	ra,40(sp)
--    800032b2:	f022                	sd	s0,32(sp)
--    800032b4:	ec26                	sd	s1,24(sp)
--    800032b6:	e84a                	sd	s2,16(sp)
--    800032b8:	e44e                	sd	s3,8(sp)
--    800032ba:	1800                	addi	s0,sp,48
--    800032bc:	89aa                	mv	s3,a0
-+    800031cc:	7179                	add	sp,sp,-48
-+    800031ce:	f406                	sd	ra,40(sp)
-+    800031d0:	f022                	sd	s0,32(sp)
-+    800031d2:	ec26                	sd	s1,24(sp)
-+    800031d4:	e84a                	sd	s2,16(sp)
-+    800031d6:	e44e                	sd	s3,8(sp)
-+    800031d8:	e052                	sd	s4,0(sp)
-+    800031da:	1800                	add	s0,sp,48
-+    800031dc:	89aa                	mv	s3,a0
-   int i, j;
-   struct buf *bp;
-   uint *a;
- 
-   for(i = 0; i < NDIRECT; i++){
--    800032be:	05050493          	addi	s1,a0,80
--    800032c2:	08050913          	addi	s2,a0,128
--    800032c6:	a021                	j	800032ce <itrunc+0x20>
--    800032c8:	0491                	addi	s1,s1,4
--    800032ca:	01248b63          	beq	s1,s2,800032e0 <itrunc+0x32>
-+    800031de:	05050493          	add	s1,a0,80
-+    800031e2:	08050913          	add	s2,a0,128
-+    800031e6:	a021                	j	800031ee <itrunc+0x22>
-+    800031e8:	0491                	add	s1,s1,4
-+    800031ea:	01248b63          	beq	s1,s2,80003200 <itrunc+0x34>
-     if(ip->addrs[i]){
--    800032ce:	408c                	lw	a1,0(s1)
--    800032d0:	dde5                	beqz	a1,800032c8 <itrunc+0x1a>
-+    800031ee:	408c                	lw	a1,0(s1)
-+    800031f0:	dde5                	beqz	a1,800031e8 <itrunc+0x1c>
-       bfree(ip->dev, ip->addrs[i]);
--    800032d2:	0009a503          	lw	a0,0(s3)
--    800032d6:	9abff0ef          	jal	80002c80 <bfree>
-+    800031f2:	0009a503          	lw	a0,0(s3)
-+    800031f6:	9d1ff0ef          	jal	80002bc6 <bfree>
-       ip->addrs[i] = 0;
--    800032da:	0004a023          	sw	zero,0(s1)
--    800032de:	b7ed                	j	800032c8 <itrunc+0x1a>
-+    800031fa:	0004a023          	sw	zero,0(s1)
-+    800031fe:	b7ed                	j	800031e8 <itrunc+0x1c>
-     }
-   }
- 
-   if(ip->addrs[NDIRECT]){
--    800032e0:	0809a583          	lw	a1,128(s3)
--    800032e4:	ed89                	bnez	a1,800032fe <itrunc+0x50>
-+    80003200:	0809a583          	lw	a1,128(s3)
-+    80003204:	ed91                	bnez	a1,80003220 <itrunc+0x54>
-     brelse(bp);
-     bfree(ip->dev, ip->addrs[NDIRECT]);
-     ip->addrs[NDIRECT] = 0;
-   }
- 
-   ip->size = 0;
--    800032e6:	0409a623          	sw	zero,76(s3)
-+    80003206:	0409a623          	sw	zero,76(s3)
-   iupdate(ip);
--    800032ea:	854e                	mv	a0,s3
--    800032ec:	e21ff0ef          	jal	8000310c <iupdate>
--}
--    800032f0:	70a2                	ld	ra,40(sp)
--    800032f2:	7402                	ld	s0,32(sp)
--    800032f4:	64e2                	ld	s1,24(sp)
--    800032f6:	6942                	ld	s2,16(sp)
--    800032f8:	69a2                	ld	s3,8(sp)
--    800032fa:	6145                	addi	sp,sp,48
--    800032fc:	8082                	ret
--    800032fe:	e052                	sd	s4,0(sp)
-+    8000320a:	854e                	mv	a0,s3
-+    8000320c:	e23ff0ef          	jal	8000302e <iupdate>
-+}
-+    80003210:	70a2                	ld	ra,40(sp)
-+    80003212:	7402                	ld	s0,32(sp)
-+    80003214:	64e2                	ld	s1,24(sp)
-+    80003216:	6942                	ld	s2,16(sp)
-+    80003218:	69a2                	ld	s3,8(sp)
-+    8000321a:	6a02                	ld	s4,0(sp)
-+    8000321c:	6145                	add	sp,sp,48
-+    8000321e:	8082                	ret
-     bp = bread(ip->dev, ip->addrs[NDIRECT]);
--    80003300:	0009a503          	lw	a0,0(s3)
--    80003304:	f84ff0ef          	jal	80002a88 <bread>
--    80003308:	8a2a                	mv	s4,a0
-+    80003220:	0009a503          	lw	a0,0(s3)
-+    80003224:	faaff0ef          	jal	800029ce <bread>
-+    80003228:	8a2a                	mv	s4,a0
-     for(j = 0; j < NINDIRECT; j++){
--    8000330a:	05850493          	addi	s1,a0,88
--    8000330e:	45850913          	addi	s2,a0,1112
--    80003312:	a021                	j	8000331a <itrunc+0x6c>
--    80003314:	0491                	addi	s1,s1,4
--    80003316:	01248963          	beq	s1,s2,80003328 <itrunc+0x7a>
-+    8000322a:	05850493          	add	s1,a0,88
-+    8000322e:	45850913          	add	s2,a0,1112
-+    80003232:	a021                	j	8000323a <itrunc+0x6e>
-+    80003234:	0491                	add	s1,s1,4
-+    80003236:	01248963          	beq	s1,s2,80003248 <itrunc+0x7c>
-       if(a[j])
--    8000331a:	408c                	lw	a1,0(s1)
--    8000331c:	dde5                	beqz	a1,80003314 <itrunc+0x66>
-+    8000323a:	408c                	lw	a1,0(s1)
-+    8000323c:	dde5                	beqz	a1,80003234 <itrunc+0x68>
-         bfree(ip->dev, a[j]);
--    8000331e:	0009a503          	lw	a0,0(s3)
--    80003322:	95fff0ef          	jal	80002c80 <bfree>
--    80003326:	b7fd                	j	80003314 <itrunc+0x66>
-+    8000323e:	0009a503          	lw	a0,0(s3)
-+    80003242:	985ff0ef          	jal	80002bc6 <bfree>
-+    80003246:	b7fd                	j	80003234 <itrunc+0x68>
-     brelse(bp);
--    80003328:	8552                	mv	a0,s4
--    8000332a:	867ff0ef          	jal	80002b90 <brelse>
-+    80003248:	8552                	mv	a0,s4
-+    8000324a:	88dff0ef          	jal	80002ad6 <brelse>
-     bfree(ip->dev, ip->addrs[NDIRECT]);
--    8000332e:	0809a583          	lw	a1,128(s3)
--    80003332:	0009a503          	lw	a0,0(s3)
--    80003336:	94bff0ef          	jal	80002c80 <bfree>
-+    8000324e:	0809a583          	lw	a1,128(s3)
-+    80003252:	0009a503          	lw	a0,0(s3)
-+    80003256:	971ff0ef          	jal	80002bc6 <bfree>
-     ip->addrs[NDIRECT] = 0;
--    8000333a:	0809a023          	sw	zero,128(s3)
--    8000333e:	6a02                	ld	s4,0(sp)
--    80003340:	b75d                	j	800032e6 <itrunc+0x38>
--
--0000000080003342 <iput>:
--{
--    80003342:	1101                	addi	sp,sp,-32
--    80003344:	ec06                	sd	ra,24(sp)
--    80003346:	e822                	sd	s0,16(sp)
--    80003348:	e426                	sd	s1,8(sp)
--    8000334a:	1000                	addi	s0,sp,32
--    8000334c:	84aa                	mv	s1,a0
-+    8000325a:	0809a023          	sw	zero,128(s3)
-+    8000325e:	b765                	j	80003206 <itrunc+0x3a>
-+
-+0000000080003260 <iput>:
-+{
-+    80003260:	1101                	add	sp,sp,-32
-+    80003262:	ec06                	sd	ra,24(sp)
-+    80003264:	e822                	sd	s0,16(sp)
-+    80003266:	e426                	sd	s1,8(sp)
-+    80003268:	e04a                	sd	s2,0(sp)
-+    8000326a:	1000                	add	s0,sp,32
-+    8000326c:	84aa                	mv	s1,a0
-   acquire(&itable.lock);
--    8000334e:	0001d517          	auipc	a0,0x1d
--    80003352:	4fa50513          	addi	a0,a0,1274 # 80020848 <itable>
--    80003356:	89ffd0ef          	jal	80000bf4 <acquire>
-+    8000326e:	0001b517          	auipc	a0,0x1b
-+    80003272:	cea50513          	add	a0,a0,-790 # 8001df58 <itable>
-+    80003276:	92bfd0ef          	jal	80000ba0 <acquire>
-   if(ip->ref == 1 && ip->valid && ip->nlink == 0){
--    8000335a:	4498                	lw	a4,8(s1)
--    8000335c:	4785                	li	a5,1
--    8000335e:	02f70063          	beq	a4,a5,8000337e <iput+0x3c>
-+    8000327a:	4498                	lw	a4,8(s1)
-+    8000327c:	4785                	li	a5,1
-+    8000327e:	02f70163          	beq	a4,a5,800032a0 <iput+0x40>
-   ip->ref--;
--    80003362:	449c                	lw	a5,8(s1)
--    80003364:	37fd                	addiw	a5,a5,-1
--    80003366:	c49c                	sw	a5,8(s1)
-+    80003282:	449c                	lw	a5,8(s1)
-+    80003284:	37fd                	addw	a5,a5,-1
-+    80003286:	c49c                	sw	a5,8(s1)
-   release(&itable.lock);
--    80003368:	0001d517          	auipc	a0,0x1d
--    8000336c:	4e050513          	addi	a0,a0,1248 # 80020848 <itable>
--    80003370:	91dfd0ef          	jal	80000c8c <release>
--}
--    80003374:	60e2                	ld	ra,24(sp)
--    80003376:	6442                	ld	s0,16(sp)
--    80003378:	64a2                	ld	s1,8(sp)
--    8000337a:	6105                	addi	sp,sp,32
--    8000337c:	8082                	ret
-+    80003288:	0001b517          	auipc	a0,0x1b
-+    8000328c:	cd050513          	add	a0,a0,-816 # 8001df58 <itable>
-+    80003290:	9a9fd0ef          	jal	80000c38 <release>
-+}
-+    80003294:	60e2                	ld	ra,24(sp)
-+    80003296:	6442                	ld	s0,16(sp)
-+    80003298:	64a2                	ld	s1,8(sp)
-+    8000329a:	6902                	ld	s2,0(sp)
-+    8000329c:	6105                	add	sp,sp,32
-+    8000329e:	8082                	ret
-   if(ip->ref == 1 && ip->valid && ip->nlink == 0){
--    8000337e:	40bc                	lw	a5,64(s1)
--    80003380:	d3ed                	beqz	a5,80003362 <iput+0x20>
--    80003382:	04a49783          	lh	a5,74(s1)
--    80003386:	fff1                	bnez	a5,80003362 <iput+0x20>
--    80003388:	e04a                	sd	s2,0(sp)
-+    800032a0:	40bc                	lw	a5,64(s1)
-+    800032a2:	d3e5                	beqz	a5,80003282 <iput+0x22>
-+    800032a4:	04a49783          	lh	a5,74(s1)
-+    800032a8:	ffe9                	bnez	a5,80003282 <iput+0x22>
-     acquiresleep(&ip->lock);
--    8000338a:	01048913          	addi	s2,s1,16
--    8000338e:	854a                	mv	a0,s2
--    80003390:	151000ef          	jal	80003ce0 <acquiresleep>
-+    800032aa:	01048913          	add	s2,s1,16
-+    800032ae:	854a                	mv	a0,s2
-+    800032b0:	125000ef          	jal	80003bd4 <acquiresleep>
-     release(&itable.lock);
--    80003394:	0001d517          	auipc	a0,0x1d
--    80003398:	4b450513          	addi	a0,a0,1204 # 80020848 <itable>
--    8000339c:	8f1fd0ef          	jal	80000c8c <release>
-+    800032b4:	0001b517          	auipc	a0,0x1b
-+    800032b8:	ca450513          	add	a0,a0,-860 # 8001df58 <itable>
-+    800032bc:	97dfd0ef          	jal	80000c38 <release>
-     itrunc(ip);
--    800033a0:	8526                	mv	a0,s1
--    800033a2:	f0dff0ef          	jal	800032ae <itrunc>
-+    800032c0:	8526                	mv	a0,s1
-+    800032c2:	f0bff0ef          	jal	800031cc <itrunc>
-     ip->type = 0;
--    800033a6:	04049223          	sh	zero,68(s1)
-+    800032c6:	04049223          	sh	zero,68(s1)
-     iupdate(ip);
--    800033aa:	8526                	mv	a0,s1
--    800033ac:	d61ff0ef          	jal	8000310c <iupdate>
-+    800032ca:	8526                	mv	a0,s1
-+    800032cc:	d63ff0ef          	jal	8000302e <iupdate>
-     ip->valid = 0;
--    800033b0:	0404a023          	sw	zero,64(s1)
-+    800032d0:	0404a023          	sw	zero,64(s1)
-     releasesleep(&ip->lock);
--    800033b4:	854a                	mv	a0,s2
--    800033b6:	171000ef          	jal	80003d26 <releasesleep>
-+    800032d4:	854a                	mv	a0,s2
-+    800032d6:	145000ef          	jal	80003c1a <releasesleep>
-     acquire(&itable.lock);
--    800033ba:	0001d517          	auipc	a0,0x1d
--    800033be:	48e50513          	addi	a0,a0,1166 # 80020848 <itable>
--    800033c2:	833fd0ef          	jal	80000bf4 <acquire>
--    800033c6:	6902                	ld	s2,0(sp)
--    800033c8:	bf69                	j	80003362 <iput+0x20>
--
--00000000800033ca <iunlockput>:
--{
--    800033ca:	1101                	addi	sp,sp,-32
--    800033cc:	ec06                	sd	ra,24(sp)
--    800033ce:	e822                	sd	s0,16(sp)
--    800033d0:	e426                	sd	s1,8(sp)
--    800033d2:	1000                	addi	s0,sp,32
--    800033d4:	84aa                	mv	s1,a0
-+    800032da:	0001b517          	auipc	a0,0x1b
-+    800032de:	c7e50513          	add	a0,a0,-898 # 8001df58 <itable>
-+    800032e2:	8bffd0ef          	jal	80000ba0 <acquire>
-+    800032e6:	bf71                	j	80003282 <iput+0x22>
-+
-+00000000800032e8 <iunlockput>:
-+{
-+    800032e8:	1101                	add	sp,sp,-32
-+    800032ea:	ec06                	sd	ra,24(sp)
-+    800032ec:	e822                	sd	s0,16(sp)
-+    800032ee:	e426                	sd	s1,8(sp)
-+    800032f0:	1000                	add	s0,sp,32
-+    800032f2:	84aa                	mv	s1,a0
-   iunlock(ip);
--    800033d6:	e99ff0ef          	jal	8000326e <iunlock>
-+    800032f4:	e99ff0ef          	jal	8000318c <iunlock>
-   iput(ip);
--    800033da:	8526                	mv	a0,s1
--    800033dc:	f67ff0ef          	jal	80003342 <iput>
-+    800032f8:	8526                	mv	a0,s1
-+    800032fa:	f67ff0ef          	jal	80003260 <iput>
- }
--    800033e0:	60e2                	ld	ra,24(sp)
--    800033e2:	6442                	ld	s0,16(sp)
--    800033e4:	64a2                	ld	s1,8(sp)
--    800033e6:	6105                	addi	sp,sp,32
--    800033e8:	8082                	ret
-+    800032fe:	60e2                	ld	ra,24(sp)
-+    80003300:	6442                	ld	s0,16(sp)
-+    80003302:	64a2                	ld	s1,8(sp)
-+    80003304:	6105                	add	sp,sp,32
-+    80003306:	8082                	ret
- 
--00000000800033ea <stati>:
-+0000000080003308 <stati>:
- 
- /* Copy stat information from inode. */
- /* Caller must hold ip->lock. */
- void
- stati(struct inode *ip, struct stat *st)
- {
--    800033ea:	1141                	addi	sp,sp,-16
--    800033ec:	e422                	sd	s0,8(sp)
--    800033ee:	0800                	addi	s0,sp,16
-+    80003308:	1141                	add	sp,sp,-16
-+    8000330a:	e422                	sd	s0,8(sp)
-+    8000330c:	0800                	add	s0,sp,16
-   st->dev = ip->dev;
--    800033f0:	411c                	lw	a5,0(a0)
--    800033f2:	c19c                	sw	a5,0(a1)
-+    8000330e:	411c                	lw	a5,0(a0)
-+    80003310:	c19c                	sw	a5,0(a1)
-   st->ino = ip->inum;
--    800033f4:	415c                	lw	a5,4(a0)
--    800033f6:	c1dc                	sw	a5,4(a1)
-+    80003312:	415c                	lw	a5,4(a0)
-+    80003314:	c1dc                	sw	a5,4(a1)
-   st->type = ip->type;
--    800033f8:	04451783          	lh	a5,68(a0)
--    800033fc:	00f59423          	sh	a5,8(a1)
-+    80003316:	04451783          	lh	a5,68(a0)
-+    8000331a:	00f59423          	sh	a5,8(a1)
-   st->nlink = ip->nlink;
--    80003400:	04a51783          	lh	a5,74(a0)
--    80003404:	00f59523          	sh	a5,10(a1)
-+    8000331e:	04a51783          	lh	a5,74(a0)
-+    80003322:	00f59523          	sh	a5,10(a1)
-   st->size = ip->size;
--    80003408:	04c56783          	lwu	a5,76(a0)
--    8000340c:	e99c                	sd	a5,16(a1)
-+    80003326:	04c56783          	lwu	a5,76(a0)
-+    8000332a:	e99c                	sd	a5,16(a1)
- }
--    8000340e:	6422                	ld	s0,8(sp)
--    80003410:	0141                	addi	sp,sp,16
--    80003412:	8082                	ret
-+    8000332c:	6422                	ld	s0,8(sp)
-+    8000332e:	0141                	add	sp,sp,16
-+    80003330:	8082                	ret
- 
--0000000080003414 <readi>:
-+0000000080003332 <readi>:
- readi(struct inode *ip, int user_dst, uint64 dst, uint off, uint n)
- {
-   uint tot, m;
-   struct buf *bp;
- 
-   if(off > ip->size || off + n < off)
--    80003414:	457c                	lw	a5,76(a0)
--    80003416:	0ed7eb63          	bltu	a5,a3,8000350c <readi+0xf8>
--{
--    8000341a:	7159                	addi	sp,sp,-112
--    8000341c:	f486                	sd	ra,104(sp)
--    8000341e:	f0a2                	sd	s0,96(sp)
--    80003420:	eca6                	sd	s1,88(sp)
--    80003422:	e0d2                	sd	s4,64(sp)
--    80003424:	fc56                	sd	s5,56(sp)
--    80003426:	f85a                	sd	s6,48(sp)
--    80003428:	f45e                	sd	s7,40(sp)
--    8000342a:	1880                	addi	s0,sp,112
--    8000342c:	8b2a                	mv	s6,a0
--    8000342e:	8bae                	mv	s7,a1
--    80003430:	8a32                	mv	s4,a2
--    80003432:	84b6                	mv	s1,a3
--    80003434:	8aba                	mv	s5,a4
-+    80003332:	457c                	lw	a5,76(a0)
-+    80003334:	0cd7ef63          	bltu	a5,a3,80003412 <readi+0xe0>
-+{
-+    80003338:	7159                	add	sp,sp,-112
-+    8000333a:	f486                	sd	ra,104(sp)
-+    8000333c:	f0a2                	sd	s0,96(sp)
-+    8000333e:	eca6                	sd	s1,88(sp)
-+    80003340:	e8ca                	sd	s2,80(sp)
-+    80003342:	e4ce                	sd	s3,72(sp)
-+    80003344:	e0d2                	sd	s4,64(sp)
-+    80003346:	fc56                	sd	s5,56(sp)
-+    80003348:	f85a                	sd	s6,48(sp)
-+    8000334a:	f45e                	sd	s7,40(sp)
-+    8000334c:	f062                	sd	s8,32(sp)
-+    8000334e:	ec66                	sd	s9,24(sp)
-+    80003350:	e86a                	sd	s10,16(sp)
-+    80003352:	e46e                	sd	s11,8(sp)
-+    80003354:	1880                	add	s0,sp,112
-+    80003356:	8b2a                	mv	s6,a0
-+    80003358:	8bae                	mv	s7,a1
-+    8000335a:	8a32                	mv	s4,a2
-+    8000335c:	84b6                	mv	s1,a3
-+    8000335e:	8aba                	mv	s5,a4
-   if(off > ip->size || off + n < off)
--    80003436:	9f35                	addw	a4,a4,a3
-+    80003360:	9f35                	addw	a4,a4,a3
-     return 0;
--    80003438:	4501                	li	a0,0
-+    80003362:	4501                	li	a0,0
-   if(off > ip->size || off + n < off)
--    8000343a:	0cd76063          	bltu	a4,a3,800034fa <readi+0xe6>
--    8000343e:	e4ce                	sd	s3,72(sp)
-+    80003364:	08d76663          	bltu	a4,a3,800033f0 <readi+0xbe>
-   if(off + n > ip->size)
--    80003440:	00e7f463          	bgeu	a5,a4,80003448 <readi+0x34>
-+    80003368:	00e7f463          	bgeu	a5,a4,80003370 <readi+0x3e>
-     n = ip->size - off;
--    80003444:	40d78abb          	subw	s5,a5,a3
-+    8000336c:	40d78abb          	subw	s5,a5,a3
- 
-   for(tot=0; tot<n; tot+=m, off+=m, dst+=m){
--    80003448:	080a8f63          	beqz	s5,800034e6 <readi+0xd2>
--    8000344c:	e8ca                	sd	s2,80(sp)
--    8000344e:	f062                	sd	s8,32(sp)
--    80003450:	ec66                	sd	s9,24(sp)
--    80003452:	e86a                	sd	s10,16(sp)
--    80003454:	e46e                	sd	s11,8(sp)
--    80003456:	4981                	li	s3,0
-+    80003370:	080a8f63          	beqz	s5,8000340e <readi+0xdc>
-+    80003374:	4981                	li	s3,0
-     uint addr = bmap(ip, off/BSIZE);
-     if(addr == 0)
-       break;
-     bp = bread(ip->dev, addr);
-     m = min(n - tot, BSIZE - off%BSIZE);
--    80003458:	40000c93          	li	s9,1024
-+    80003376:	40000c93          	li	s9,1024
-     if(either_copyout(user_dst, dst, bp->data + (off % BSIZE), m) == -1) {
--    8000345c:	5c7d                	li	s8,-1
--    8000345e:	a80d                	j	80003490 <readi+0x7c>
--    80003460:	020d1d93          	slli	s11,s10,0x20
--    80003464:	020ddd93          	srli	s11,s11,0x20
--    80003468:	05890613          	addi	a2,s2,88
--    8000346c:	86ee                	mv	a3,s11
--    8000346e:	963a                	add	a2,a2,a4
--    80003470:	85d2                	mv	a1,s4
--    80003472:	855e                	mv	a0,s7
--    80003474:	d97fe0ef          	jal	8000220a <either_copyout>
--    80003478:	05850763          	beq	a0,s8,800034c6 <readi+0xb2>
-+    8000337a:	5c7d                	li	s8,-1
-+    8000337c:	a80d                	j	800033ae <readi+0x7c>
-+    8000337e:	020d1d93          	sll	s11,s10,0x20
-+    80003382:	020ddd93          	srl	s11,s11,0x20
-+    80003386:	05890613          	add	a2,s2,88
-+    8000338a:	86ee                	mv	a3,s11
-+    8000338c:	963a                	add	a2,a2,a4
-+    8000338e:	85d2                	mv	a1,s4
-+    80003390:	855e                	mv	a0,s7
-+    80003392:	dc7fe0ef          	jal	80002158 <either_copyout>
-+    80003396:	05850763          	beq	a0,s8,800033e4 <readi+0xb2>
-       brelse(bp);
-       tot = -1;
-       break;
-     }
-     brelse(bp);
--    8000347c:	854a                	mv	a0,s2
--    8000347e:	f12ff0ef          	jal	80002b90 <brelse>
-+    8000339a:	854a                	mv	a0,s2
-+    8000339c:	f3aff0ef          	jal	80002ad6 <brelse>
-   for(tot=0; tot<n; tot+=m, off+=m, dst+=m){
--    80003482:	013d09bb          	addw	s3,s10,s3
--    80003486:	009d04bb          	addw	s1,s10,s1
--    8000348a:	9a6e                	add	s4,s4,s11
--    8000348c:	0559f763          	bgeu	s3,s5,800034da <readi+0xc6>
-+    800033a0:	013d09bb          	addw	s3,s10,s3
-+    800033a4:	009d04bb          	addw	s1,s10,s1
-+    800033a8:	9a6e                	add	s4,s4,s11
-+    800033aa:	0559f163          	bgeu	s3,s5,800033ec <readi+0xba>
-     uint addr = bmap(ip, off/BSIZE);
--    80003490:	00a4d59b          	srliw	a1,s1,0xa
--    80003494:	855a                	mv	a0,s6
--    80003496:	977ff0ef          	jal	80002e0c <bmap>
--    8000349a:	0005059b          	sext.w	a1,a0
-+    800033ae:	00a4d59b          	srlw	a1,s1,0xa
-+    800033b2:	855a                	mv	a0,s6
-+    800033b4:	98dff0ef          	jal	80002d40 <bmap>
-+    800033b8:	0005059b          	sext.w	a1,a0
-     if(addr == 0)
--    8000349e:	c5b1                	beqz	a1,800034ea <readi+0xd6>
-+    800033bc:	c985                	beqz	a1,800033ec <readi+0xba>
-     bp = bread(ip->dev, addr);
--    800034a0:	000b2503          	lw	a0,0(s6)
--    800034a4:	de4ff0ef          	jal	80002a88 <bread>
--    800034a8:	892a                	mv	s2,a0
-+    800033be:	000b2503          	lw	a0,0(s6)
-+    800033c2:	e0cff0ef          	jal	800029ce <bread>
-+    800033c6:	892a                	mv	s2,a0
-     m = min(n - tot, BSIZE - off%BSIZE);
--    800034aa:	3ff4f713          	andi	a4,s1,1023
--    800034ae:	40ec87bb          	subw	a5,s9,a4
--    800034b2:	413a86bb          	subw	a3,s5,s3
--    800034b6:	8d3e                	mv	s10,a5
--    800034b8:	2781                	sext.w	a5,a5
--    800034ba:	0006861b          	sext.w	a2,a3
--    800034be:	faf671e3          	bgeu	a2,a5,80003460 <readi+0x4c>
--    800034c2:	8d36                	mv	s10,a3
--    800034c4:	bf71                	j	80003460 <readi+0x4c>
-+    800033c8:	3ff4f713          	and	a4,s1,1023
-+    800033cc:	40ec87bb          	subw	a5,s9,a4
-+    800033d0:	413a86bb          	subw	a3,s5,s3
-+    800033d4:	8d3e                	mv	s10,a5
-+    800033d6:	2781                	sext.w	a5,a5
-+    800033d8:	0006861b          	sext.w	a2,a3
-+    800033dc:	faf671e3          	bgeu	a2,a5,8000337e <readi+0x4c>
-+    800033e0:	8d36                	mv	s10,a3
-+    800033e2:	bf71                	j	8000337e <readi+0x4c>
-       brelse(bp);
--    800034c6:	854a                	mv	a0,s2
--    800034c8:	ec8ff0ef          	jal	80002b90 <brelse>
-+    800033e4:	854a                	mv	a0,s2
-+    800033e6:	ef0ff0ef          	jal	80002ad6 <brelse>
-       tot = -1;
--    800034cc:	59fd                	li	s3,-1
--      break;
--    800034ce:	6946                	ld	s2,80(sp)
--    800034d0:	7c02                	ld	s8,32(sp)
--    800034d2:	6ce2                	ld	s9,24(sp)
--    800034d4:	6d42                	ld	s10,16(sp)
--    800034d6:	6da2                	ld	s11,8(sp)
--    800034d8:	a831                	j	800034f4 <readi+0xe0>
--    800034da:	6946                	ld	s2,80(sp)
--    800034dc:	7c02                	ld	s8,32(sp)
--    800034de:	6ce2                	ld	s9,24(sp)
--    800034e0:	6d42                	ld	s10,16(sp)
--    800034e2:	6da2                	ld	s11,8(sp)
--    800034e4:	a801                	j	800034f4 <readi+0xe0>
--  for(tot=0; tot<n; tot+=m, off+=m, dst+=m){
--    800034e6:	89d6                	mv	s3,s5
--    800034e8:	a031                	j	800034f4 <readi+0xe0>
--    800034ea:	6946                	ld	s2,80(sp)
--    800034ec:	7c02                	ld	s8,32(sp)
--    800034ee:	6ce2                	ld	s9,24(sp)
--    800034f0:	6d42                	ld	s10,16(sp)
--    800034f2:	6da2                	ld	s11,8(sp)
-+    800033ea:	59fd                	li	s3,-1
-   }
-   return tot;
--    800034f4:	0009851b          	sext.w	a0,s3
--    800034f8:	69a6                	ld	s3,72(sp)
--}
--    800034fa:	70a6                	ld	ra,104(sp)
--    800034fc:	7406                	ld	s0,96(sp)
--    800034fe:	64e6                	ld	s1,88(sp)
--    80003500:	6a06                	ld	s4,64(sp)
--    80003502:	7ae2                	ld	s5,56(sp)
--    80003504:	7b42                	ld	s6,48(sp)
--    80003506:	7ba2                	ld	s7,40(sp)
--    80003508:	6165                	addi	sp,sp,112
--    8000350a:	8082                	ret
-+    800033ec:	0009851b          	sext.w	a0,s3
-+}
-+    800033f0:	70a6                	ld	ra,104(sp)
-+    800033f2:	7406                	ld	s0,96(sp)
-+    800033f4:	64e6                	ld	s1,88(sp)
-+    800033f6:	6946                	ld	s2,80(sp)
-+    800033f8:	69a6                	ld	s3,72(sp)
-+    800033fa:	6a06                	ld	s4,64(sp)
-+    800033fc:	7ae2                	ld	s5,56(sp)
-+    800033fe:	7b42                	ld	s6,48(sp)
-+    80003400:	7ba2                	ld	s7,40(sp)
-+    80003402:	7c02                	ld	s8,32(sp)
-+    80003404:	6ce2                	ld	s9,24(sp)
-+    80003406:	6d42                	ld	s10,16(sp)
-+    80003408:	6da2                	ld	s11,8(sp)
-+    8000340a:	6165                	add	sp,sp,112
-+    8000340c:	8082                	ret
-+  for(tot=0; tot<n; tot+=m, off+=m, dst+=m){
-+    8000340e:	89d6                	mv	s3,s5
-+    80003410:	bff1                	j	800033ec <readi+0xba>
-     return 0;
--    8000350c:	4501                	li	a0,0
-+    80003412:	4501                	li	a0,0
- }
--    8000350e:	8082                	ret
-+    80003414:	8082                	ret
- 
--0000000080003510 <writei>:
-+0000000080003416 <writei>:
- writei(struct inode *ip, int user_src, uint64 src, uint off, uint n)
- {
-   uint tot, m;
-   struct buf *bp;
- 
-   if(off > ip->size || off + n < off)
--    80003510:	457c                	lw	a5,76(a0)
--    80003512:	10d7e063          	bltu	a5,a3,80003612 <writei+0x102>
--{
--    80003516:	7159                	addi	sp,sp,-112
--    80003518:	f486                	sd	ra,104(sp)
--    8000351a:	f0a2                	sd	s0,96(sp)
--    8000351c:	e8ca                	sd	s2,80(sp)
--    8000351e:	e0d2                	sd	s4,64(sp)
--    80003520:	fc56                	sd	s5,56(sp)
--    80003522:	f85a                	sd	s6,48(sp)
--    80003524:	f45e                	sd	s7,40(sp)
--    80003526:	1880                	addi	s0,sp,112
--    80003528:	8aaa                	mv	s5,a0
--    8000352a:	8bae                	mv	s7,a1
--    8000352c:	8a32                	mv	s4,a2
--    8000352e:	8936                	mv	s2,a3
--    80003530:	8b3a                	mv	s6,a4
-+    80003416:	457c                	lw	a5,76(a0)
-+    80003418:	0ed7ea63          	bltu	a5,a3,8000350c <writei+0xf6>
-+{
-+    8000341c:	7159                	add	sp,sp,-112
-+    8000341e:	f486                	sd	ra,104(sp)
-+    80003420:	f0a2                	sd	s0,96(sp)
-+    80003422:	eca6                	sd	s1,88(sp)
-+    80003424:	e8ca                	sd	s2,80(sp)
-+    80003426:	e4ce                	sd	s3,72(sp)
-+    80003428:	e0d2                	sd	s4,64(sp)
-+    8000342a:	fc56                	sd	s5,56(sp)
-+    8000342c:	f85a                	sd	s6,48(sp)
-+    8000342e:	f45e                	sd	s7,40(sp)
-+    80003430:	f062                	sd	s8,32(sp)
-+    80003432:	ec66                	sd	s9,24(sp)
-+    80003434:	e86a                	sd	s10,16(sp)
-+    80003436:	e46e                	sd	s11,8(sp)
-+    80003438:	1880                	add	s0,sp,112
-+    8000343a:	8aaa                	mv	s5,a0
-+    8000343c:	8bae                	mv	s7,a1
-+    8000343e:	8a32                	mv	s4,a2
-+    80003440:	8936                	mv	s2,a3
-+    80003442:	8b3a                	mv	s6,a4
-   if(off > ip->size || off + n < off)
--    80003532:	00e687bb          	addw	a5,a3,a4
--    80003536:	0ed7e063          	bltu	a5,a3,80003616 <writei+0x106>
-+    80003444:	00e687bb          	addw	a5,a3,a4
-+    80003448:	0cd7e463          	bltu	a5,a3,80003510 <writei+0xfa>
-     return -1;
-   if(off + n > MAXFILE*BSIZE)
--    8000353a:	00043737          	lui	a4,0x43
--    8000353e:	0cf76e63          	bltu	a4,a5,8000361a <writei+0x10a>
--    80003542:	e4ce                	sd	s3,72(sp)
-+    8000344c:	00043737          	lui	a4,0x43
-+    80003450:	0cf76263          	bltu	a4,a5,80003514 <writei+0xfe>
-     return -1;
- 
-   for(tot=0; tot<n; tot+=m, off+=m, src+=m){
--    80003544:	0a0b0f63          	beqz	s6,80003602 <writei+0xf2>
--    80003548:	eca6                	sd	s1,88(sp)
--    8000354a:	f062                	sd	s8,32(sp)
--    8000354c:	ec66                	sd	s9,24(sp)
--    8000354e:	e86a                	sd	s10,16(sp)
--    80003550:	e46e                	sd	s11,8(sp)
--    80003552:	4981                	li	s3,0
-+    80003454:	0a0b0a63          	beqz	s6,80003508 <writei+0xf2>
-+    80003458:	4981                	li	s3,0
-     uint addr = bmap(ip, off/BSIZE);
-     if(addr == 0)
-       break;
-     bp = bread(ip->dev, addr);
-     m = min(n - tot, BSIZE - off%BSIZE);
--    80003554:	40000c93          	li	s9,1024
-+    8000345a:	40000c93          	li	s9,1024
-     if(either_copyin(bp->data + (off % BSIZE), user_src, src, m) == -1) {
--    80003558:	5c7d                	li	s8,-1
--    8000355a:	a825                	j	80003592 <writei+0x82>
--    8000355c:	020d1d93          	slli	s11,s10,0x20
--    80003560:	020ddd93          	srli	s11,s11,0x20
--    80003564:	05848513          	addi	a0,s1,88
--    80003568:	86ee                	mv	a3,s11
--    8000356a:	8652                	mv	a2,s4
--    8000356c:	85de                	mv	a1,s7
--    8000356e:	953a                	add	a0,a0,a4
--    80003570:	ce5fe0ef          	jal	80002254 <either_copyin>
--    80003574:	05850a63          	beq	a0,s8,800035c8 <writei+0xb8>
-+    8000345e:	5c7d                	li	s8,-1
-+    80003460:	a825                	j	80003498 <writei+0x82>
-+    80003462:	020d1d93          	sll	s11,s10,0x20
-+    80003466:	020ddd93          	srl	s11,s11,0x20
-+    8000346a:	05848513          	add	a0,s1,88
-+    8000346e:	86ee                	mv	a3,s11
-+    80003470:	8652                	mv	a2,s4
-+    80003472:	85de                	mv	a1,s7
-+    80003474:	953a                	add	a0,a0,a4
-+    80003476:	d2dfe0ef          	jal	800021a2 <either_copyin>
-+    8000347a:	05850a63          	beq	a0,s8,800034ce <writei+0xb8>
-       brelse(bp);
-       break;
-     }
-     log_write(bp);
--    80003578:	8526                	mv	a0,s1
--    8000357a:	660000ef          	jal	80003bda <log_write>
-+    8000347e:	8526                	mv	a0,s1
-+    80003480:	64e000ef          	jal	80003ace <log_write>
-     brelse(bp);
--    8000357e:	8526                	mv	a0,s1
--    80003580:	e10ff0ef          	jal	80002b90 <brelse>
-+    80003484:	8526                	mv	a0,s1
-+    80003486:	e50ff0ef          	jal	80002ad6 <brelse>
-   for(tot=0; tot<n; tot+=m, off+=m, src+=m){
--    80003584:	013d09bb          	addw	s3,s10,s3
--    80003588:	012d093b          	addw	s2,s10,s2
--    8000358c:	9a6e                	add	s4,s4,s11
--    8000358e:	0569f063          	bgeu	s3,s6,800035ce <writei+0xbe>
-+    8000348a:	013d09bb          	addw	s3,s10,s3
-+    8000348e:	012d093b          	addw	s2,s10,s2
-+    80003492:	9a6e                	add	s4,s4,s11
-+    80003494:	0569f063          	bgeu	s3,s6,800034d4 <writei+0xbe>
-     uint addr = bmap(ip, off/BSIZE);
--    80003592:	00a9559b          	srliw	a1,s2,0xa
--    80003596:	8556                	mv	a0,s5
--    80003598:	875ff0ef          	jal	80002e0c <bmap>
--    8000359c:	0005059b          	sext.w	a1,a0
-+    80003498:	00a9559b          	srlw	a1,s2,0xa
-+    8000349c:	8556                	mv	a0,s5
-+    8000349e:	8a3ff0ef          	jal	80002d40 <bmap>
-+    800034a2:	0005059b          	sext.w	a1,a0
-     if(addr == 0)
--    800035a0:	c59d                	beqz	a1,800035ce <writei+0xbe>
-+    800034a6:	c59d                	beqz	a1,800034d4 <writei+0xbe>
-     bp = bread(ip->dev, addr);
--    800035a2:	000aa503          	lw	a0,0(s5)
--    800035a6:	ce2ff0ef          	jal	80002a88 <bread>
--    800035aa:	84aa                	mv	s1,a0
-+    800034a8:	000aa503          	lw	a0,0(s5)
-+    800034ac:	d22ff0ef          	jal	800029ce <bread>
-+    800034b0:	84aa                	mv	s1,a0
-     m = min(n - tot, BSIZE - off%BSIZE);
--    800035ac:	3ff97713          	andi	a4,s2,1023
--    800035b0:	40ec87bb          	subw	a5,s9,a4
--    800035b4:	413b06bb          	subw	a3,s6,s3
--    800035b8:	8d3e                	mv	s10,a5
--    800035ba:	2781                	sext.w	a5,a5
--    800035bc:	0006861b          	sext.w	a2,a3
--    800035c0:	f8f67ee3          	bgeu	a2,a5,8000355c <writei+0x4c>
--    800035c4:	8d36                	mv	s10,a3
--    800035c6:	bf59                	j	8000355c <writei+0x4c>
-+    800034b2:	3ff97713          	and	a4,s2,1023
-+    800034b6:	40ec87bb          	subw	a5,s9,a4
-+    800034ba:	413b06bb          	subw	a3,s6,s3
-+    800034be:	8d3e                	mv	s10,a5
-+    800034c0:	2781                	sext.w	a5,a5
-+    800034c2:	0006861b          	sext.w	a2,a3
-+    800034c6:	f8f67ee3          	bgeu	a2,a5,80003462 <writei+0x4c>
-+    800034ca:	8d36                	mv	s10,a3
-+    800034cc:	bf59                	j	80003462 <writei+0x4c>
-       brelse(bp);
--    800035c8:	8526                	mv	a0,s1
--    800035ca:	dc6ff0ef          	jal	80002b90 <brelse>
-+    800034ce:	8526                	mv	a0,s1
-+    800034d0:	e06ff0ef          	jal	80002ad6 <brelse>
-   }
- 
-   if(off > ip->size)
--    800035ce:	04caa783          	lw	a5,76(s5)
--    800035d2:	0327fa63          	bgeu	a5,s2,80003606 <writei+0xf6>
-+    800034d4:	04caa783          	lw	a5,76(s5)
-+    800034d8:	0127f463          	bgeu	a5,s2,800034e0 <writei+0xca>
-     ip->size = off;
--    800035d6:	052aa623          	sw	s2,76(s5)
--    800035da:	64e6                	ld	s1,88(sp)
--    800035dc:	7c02                	ld	s8,32(sp)
--    800035de:	6ce2                	ld	s9,24(sp)
--    800035e0:	6d42                	ld	s10,16(sp)
--    800035e2:	6da2                	ld	s11,8(sp)
-+    800034dc:	052aa623          	sw	s2,76(s5)
- 
-   /* write the i-node back to disk even if the size didn't change */
-   /* because the loop above might have called bmap() and added a new */
-   /* block to ip->addrs[]. */
-   iupdate(ip);
--    800035e4:	8556                	mv	a0,s5
--    800035e6:	b27ff0ef          	jal	8000310c <iupdate>
-+    800034e0:	8556                	mv	a0,s5
-+    800034e2:	b4dff0ef          	jal	8000302e <iupdate>
- 
-   return tot;
--    800035ea:	0009851b          	sext.w	a0,s3
--    800035ee:	69a6                	ld	s3,72(sp)
--}
--    800035f0:	70a6                	ld	ra,104(sp)
--    800035f2:	7406                	ld	s0,96(sp)
--    800035f4:	6946                	ld	s2,80(sp)
--    800035f6:	6a06                	ld	s4,64(sp)
--    800035f8:	7ae2                	ld	s5,56(sp)
--    800035fa:	7b42                	ld	s6,48(sp)
--    800035fc:	7ba2                	ld	s7,40(sp)
--    800035fe:	6165                	addi	sp,sp,112
--    80003600:	8082                	ret
-+    800034e6:	0009851b          	sext.w	a0,s3
-+}
-+    800034ea:	70a6                	ld	ra,104(sp)
-+    800034ec:	7406                	ld	s0,96(sp)
-+    800034ee:	64e6                	ld	s1,88(sp)
-+    800034f0:	6946                	ld	s2,80(sp)
-+    800034f2:	69a6                	ld	s3,72(sp)
-+    800034f4:	6a06                	ld	s4,64(sp)
-+    800034f6:	7ae2                	ld	s5,56(sp)
-+    800034f8:	7b42                	ld	s6,48(sp)
-+    800034fa:	7ba2                	ld	s7,40(sp)
-+    800034fc:	7c02                	ld	s8,32(sp)
-+    800034fe:	6ce2                	ld	s9,24(sp)
-+    80003500:	6d42                	ld	s10,16(sp)
-+    80003502:	6da2                	ld	s11,8(sp)
-+    80003504:	6165                	add	sp,sp,112
-+    80003506:	8082                	ret
-   for(tot=0; tot<n; tot+=m, off+=m, src+=m){
--    80003602:	89da                	mv	s3,s6
--    80003604:	b7c5                	j	800035e4 <writei+0xd4>
--    80003606:	64e6                	ld	s1,88(sp)
--    80003608:	7c02                	ld	s8,32(sp)
--    8000360a:	6ce2                	ld	s9,24(sp)
--    8000360c:	6d42                	ld	s10,16(sp)
--    8000360e:	6da2                	ld	s11,8(sp)
--    80003610:	bfd1                	j	800035e4 <writei+0xd4>
-+    80003508:	89da                	mv	s3,s6
-+    8000350a:	bfd9                	j	800034e0 <writei+0xca>
-     return -1;
--    80003612:	557d                	li	a0,-1
-+    8000350c:	557d                	li	a0,-1
- }
--    80003614:	8082                	ret
-+    8000350e:	8082                	ret
-     return -1;
--    80003616:	557d                	li	a0,-1
--    80003618:	bfe1                	j	800035f0 <writei+0xe0>
-+    80003510:	557d                	li	a0,-1
-+    80003512:	bfe1                	j	800034ea <writei+0xd4>
-     return -1;
--    8000361a:	557d                	li	a0,-1
--    8000361c:	bfd1                	j	800035f0 <writei+0xe0>
-+    80003514:	557d                	li	a0,-1
-+    80003516:	bfd1                	j	800034ea <writei+0xd4>
- 
--000000008000361e <namecmp>:
-+0000000080003518 <namecmp>:
- 
- /* Directories */
- 
- int
- namecmp(const char *s, const char *t)
- {
--    8000361e:	1141                	addi	sp,sp,-16
--    80003620:	e406                	sd	ra,8(sp)
--    80003622:	e022                	sd	s0,0(sp)
--    80003624:	0800                	addi	s0,sp,16
-+    80003518:	1141                	add	sp,sp,-16
-+    8000351a:	e406                	sd	ra,8(sp)
-+    8000351c:	e022                	sd	s0,0(sp)
-+    8000351e:	0800                	add	s0,sp,16
-   return strncmp(s, t, DIRSIZ);
--    80003626:	4639                	li	a2,14
--    80003628:	f6cfd0ef          	jal	80000d94 <strncmp>
-+    80003520:	4639                	li	a2,14
-+    80003522:	81ffd0ef          	jal	80000d40 <strncmp>
- }
--    8000362c:	60a2                	ld	ra,8(sp)
--    8000362e:	6402                	ld	s0,0(sp)
--    80003630:	0141                	addi	sp,sp,16
--    80003632:	8082                	ret
-+    80003526:	60a2                	ld	ra,8(sp)
-+    80003528:	6402                	ld	s0,0(sp)
-+    8000352a:	0141                	add	sp,sp,16
-+    8000352c:	8082                	ret
- 
--0000000080003634 <dirlookup>:
-+000000008000352e <dirlookup>:
- 
- /* Look for a directory entry in a directory. */
- /* If found, set *poff to byte offset of entry. */
- struct inode*
- dirlookup(struct inode *dp, char *name, uint *poff)
- {
--    80003634:	7139                	addi	sp,sp,-64
--    80003636:	fc06                	sd	ra,56(sp)
--    80003638:	f822                	sd	s0,48(sp)
--    8000363a:	f426                	sd	s1,40(sp)
--    8000363c:	f04a                	sd	s2,32(sp)
--    8000363e:	ec4e                	sd	s3,24(sp)
--    80003640:	e852                	sd	s4,16(sp)
--    80003642:	0080                	addi	s0,sp,64
-+    8000352e:	7139                	add	sp,sp,-64
-+    80003530:	fc06                	sd	ra,56(sp)
-+    80003532:	f822                	sd	s0,48(sp)
-+    80003534:	f426                	sd	s1,40(sp)
-+    80003536:	f04a                	sd	s2,32(sp)
-+    80003538:	ec4e                	sd	s3,24(sp)
-+    8000353a:	e852                	sd	s4,16(sp)
-+    8000353c:	0080                	add	s0,sp,64
-   uint off, inum;
-   struct dirent de;
- 
-   if(dp->type != T_DIR)
--    80003644:	04451703          	lh	a4,68(a0)
--    80003648:	4785                	li	a5,1
--    8000364a:	00f71a63          	bne	a4,a5,8000365e <dirlookup+0x2a>
--    8000364e:	892a                	mv	s2,a0
--    80003650:	89ae                	mv	s3,a1
--    80003652:	8a32                	mv	s4,a2
-+    8000353e:	04451703          	lh	a4,68(a0)
-+    80003542:	4785                	li	a5,1
-+    80003544:	00f71a63          	bne	a4,a5,80003558 <dirlookup+0x2a>
-+    80003548:	892a                	mv	s2,a0
-+    8000354a:	89ae                	mv	s3,a1
-+    8000354c:	8a32                	mv	s4,a2
-     panic("dirlookup not DIR");
- 
-   for(off = 0; off < dp->size; off += sizeof(de)){
--    80003654:	457c                	lw	a5,76(a0)
--    80003656:	4481                	li	s1,0
-+    8000354e:	457c                	lw	a5,76(a0)
-+    80003550:	4481                	li	s1,0
-       inum = de.inum;
-       return iget(dp->dev, inum);
-     }
-   }
- 
-   return 0;
--    80003658:	4501                	li	a0,0
-+    80003552:	4501                	li	a0,0
-   for(off = 0; off < dp->size; off += sizeof(de)){
--    8000365a:	e39d                	bnez	a5,80003680 <dirlookup+0x4c>
--    8000365c:	a095                	j	800036c0 <dirlookup+0x8c>
-+    80003554:	e39d                	bnez	a5,8000357a <dirlookup+0x4c>
-+    80003556:	a095                	j	800035ba <dirlookup+0x8c>
-     panic("dirlookup not DIR");
--    8000365e:	00004517          	auipc	a0,0x4
--    80003662:	ec250513          	addi	a0,a0,-318 # 80007520 <etext+0x520>
--    80003666:	92efd0ef          	jal	80000794 <panic>
-+    80003558:	00004517          	auipc	a0,0x4
-+    8000355c:	0d850513          	add	a0,a0,216 # 80007630 <syscalls+0x1a0>
-+    80003560:	9fefd0ef          	jal	8000075e <panic>
-       panic("dirlookup read");
--    8000366a:	00004517          	auipc	a0,0x4
--    8000366e:	ece50513          	addi	a0,a0,-306 # 80007538 <etext+0x538>
--    80003672:	922fd0ef          	jal	80000794 <panic>
-+    80003564:	00004517          	auipc	a0,0x4
-+    80003568:	0e450513          	add	a0,a0,228 # 80007648 <syscalls+0x1b8>
-+    8000356c:	9f2fd0ef          	jal	8000075e <panic>
-   for(off = 0; off < dp->size; off += sizeof(de)){
--    80003676:	24c1                	addiw	s1,s1,16
--    80003678:	04c92783          	lw	a5,76(s2)
--    8000367c:	04f4f163          	bgeu	s1,a5,800036be <dirlookup+0x8a>
-+    80003570:	24c1                	addw	s1,s1,16
-+    80003572:	04c92783          	lw	a5,76(s2)
-+    80003576:	04f4f163          	bgeu	s1,a5,800035b8 <dirlookup+0x8a>
-     if(readi(dp, 0, (uint64)&de, off, sizeof(de)) != sizeof(de))
--    80003680:	4741                	li	a4,16
--    80003682:	86a6                	mv	a3,s1
--    80003684:	fc040613          	addi	a2,s0,-64
--    80003688:	4581                	li	a1,0
--    8000368a:	854a                	mv	a0,s2
--    8000368c:	d89ff0ef          	jal	80003414 <readi>
--    80003690:	47c1                	li	a5,16
--    80003692:	fcf51ce3          	bne	a0,a5,8000366a <dirlookup+0x36>
-+    8000357a:	4741                	li	a4,16
-+    8000357c:	86a6                	mv	a3,s1
-+    8000357e:	fc040613          	add	a2,s0,-64
-+    80003582:	4581                	li	a1,0
-+    80003584:	854a                	mv	a0,s2
-+    80003586:	dadff0ef          	jal	80003332 <readi>
-+    8000358a:	47c1                	li	a5,16
-+    8000358c:	fcf51ce3          	bne	a0,a5,80003564 <dirlookup+0x36>
-     if(de.inum == 0)
--    80003696:	fc045783          	lhu	a5,-64(s0)
--    8000369a:	dff1                	beqz	a5,80003676 <dirlookup+0x42>
-+    80003590:	fc045783          	lhu	a5,-64(s0)
-+    80003594:	dff1                	beqz	a5,80003570 <dirlookup+0x42>
-     if(namecmp(name, de.name) == 0){
--    8000369c:	fc240593          	addi	a1,s0,-62
--    800036a0:	854e                	mv	a0,s3
--    800036a2:	f7dff0ef          	jal	8000361e <namecmp>
--    800036a6:	f961                	bnez	a0,80003676 <dirlookup+0x42>
-+    80003596:	fc240593          	add	a1,s0,-62
-+    8000359a:	854e                	mv	a0,s3
-+    8000359c:	f7dff0ef          	jal	80003518 <namecmp>
-+    800035a0:	f961                	bnez	a0,80003570 <dirlookup+0x42>
-       if(poff)
--    800036a8:	000a0463          	beqz	s4,800036b0 <dirlookup+0x7c>
-+    800035a2:	000a0463          	beqz	s4,800035aa <dirlookup+0x7c>
-         *poff = off;
--    800036ac:	009a2023          	sw	s1,0(s4)
-+    800035a6:	009a2023          	sw	s1,0(s4)
-       return iget(dp->dev, inum);
--    800036b0:	fc045583          	lhu	a1,-64(s0)
--    800036b4:	00092503          	lw	a0,0(s2)
--    800036b8:	829ff0ef          	jal	80002ee0 <iget>
--    800036bc:	a011                	j	800036c0 <dirlookup+0x8c>
-+    800035aa:	fc045583          	lhu	a1,-64(s0)
-+    800035ae:	00092503          	lw	a0,0(s2)
-+    800035b2:	85dff0ef          	jal	80002e0e <iget>
-+    800035b6:	a011                	j	800035ba <dirlookup+0x8c>
-   return 0;
--    800036be:	4501                	li	a0,0
--}
--    800036c0:	70e2                	ld	ra,56(sp)
--    800036c2:	7442                	ld	s0,48(sp)
--    800036c4:	74a2                	ld	s1,40(sp)
--    800036c6:	7902                	ld	s2,32(sp)
--    800036c8:	69e2                	ld	s3,24(sp)
--    800036ca:	6a42                	ld	s4,16(sp)
--    800036cc:	6121                	addi	sp,sp,64
--    800036ce:	8082                	ret
--
--00000000800036d0 <namex>:
-+    800035b8:	4501                	li	a0,0
-+}
-+    800035ba:	70e2                	ld	ra,56(sp)
-+    800035bc:	7442                	ld	s0,48(sp)
-+    800035be:	74a2                	ld	s1,40(sp)
-+    800035c0:	7902                	ld	s2,32(sp)
-+    800035c2:	69e2                	ld	s3,24(sp)
-+    800035c4:	6a42                	ld	s4,16(sp)
-+    800035c6:	6121                	add	sp,sp,64
-+    800035c8:	8082                	ret
-+
-+00000000800035ca <namex>:
- /* If parent != 0, return the inode for the parent and copy the final */
- /* path element into name, which must have room for DIRSIZ bytes. */
- /* Must be called inside a transaction since it calls iput(). */
- static struct inode*
- namex(char *path, int nameiparent, char *name)
- {
--    800036d0:	711d                	addi	sp,sp,-96
--    800036d2:	ec86                	sd	ra,88(sp)
--    800036d4:	e8a2                	sd	s0,80(sp)
--    800036d6:	e4a6                	sd	s1,72(sp)
--    800036d8:	e0ca                	sd	s2,64(sp)
--    800036da:	fc4e                	sd	s3,56(sp)
--    800036dc:	f852                	sd	s4,48(sp)
--    800036de:	f456                	sd	s5,40(sp)
--    800036e0:	f05a                	sd	s6,32(sp)
--    800036e2:	ec5e                	sd	s7,24(sp)
--    800036e4:	e862                	sd	s8,16(sp)
--    800036e6:	e466                	sd	s9,8(sp)
--    800036e8:	1080                	addi	s0,sp,96
--    800036ea:	84aa                	mv	s1,a0
--    800036ec:	8b2e                	mv	s6,a1
--    800036ee:	8ab2                	mv	s5,a2
-+    800035ca:	711d                	add	sp,sp,-96
-+    800035cc:	ec86                	sd	ra,88(sp)
-+    800035ce:	e8a2                	sd	s0,80(sp)
-+    800035d0:	e4a6                	sd	s1,72(sp)
-+    800035d2:	e0ca                	sd	s2,64(sp)
-+    800035d4:	fc4e                	sd	s3,56(sp)
-+    800035d6:	f852                	sd	s4,48(sp)
-+    800035d8:	f456                	sd	s5,40(sp)
-+    800035da:	f05a                	sd	s6,32(sp)
-+    800035dc:	ec5e                	sd	s7,24(sp)
-+    800035de:	e862                	sd	s8,16(sp)
-+    800035e0:	e466                	sd	s9,8(sp)
-+    800035e2:	1080                	add	s0,sp,96
-+    800035e4:	84aa                	mv	s1,a0
-+    800035e6:	8b2e                	mv	s6,a1
-+    800035e8:	8ab2                	mv	s5,a2
-   struct inode *ip, *next;
- 
-   if(*path == '/')
--    800036f0:	00054703          	lbu	a4,0(a0)
--    800036f4:	02f00793          	li	a5,47
--    800036f8:	00f70e63          	beq	a4,a5,80003714 <namex+0x44>
-+    800035ea:	00054703          	lbu	a4,0(a0)
-+    800035ee:	02f00793          	li	a5,47
-+    800035f2:	00f70e63          	beq	a4,a5,8000360e <namex+0x44>
-     ip = iget(ROOTDEV, ROOTINO);
-   else
-     ip = idup(myproc()->cwd);
--    800036fc:	9e4fe0ef          	jal	800018e0 <myproc>
--    80003700:	15053503          	ld	a0,336(a0)
--    80003704:	a87ff0ef          	jal	8000318a <idup>
--    80003708:	8a2a                	mv	s4,a0
-+    800035f6:	a3afe0ef          	jal	80001830 <myproc>
-+    800035fa:	15053503          	ld	a0,336(a0)
-+    800035fe:	aafff0ef          	jal	800030ac <idup>
-+    80003602:	8a2a                	mv	s4,a0
-   while(*path == '/')
--    8000370a:	02f00913          	li	s2,47
-+    80003604:	02f00913          	li	s2,47
-   if(len >= DIRSIZ)
--    8000370e:	4c35                	li	s8,13
-+    80003608:	4c35                	li	s8,13
- 
-   while((path = skipelem(path, name)) != 0){
-     ilock(ip);
-     if(ip->type != T_DIR){
--    80003710:	4b85                	li	s7,1
--    80003712:	a871                	j	800037ae <namex+0xde>
-+    8000360a:	4b85                	li	s7,1
-+    8000360c:	a871                	j	800036a8 <namex+0xde>
-     ip = iget(ROOTDEV, ROOTINO);
--    80003714:	4585                	li	a1,1
--    80003716:	4505                	li	a0,1
--    80003718:	fc8ff0ef          	jal	80002ee0 <iget>
--    8000371c:	8a2a                	mv	s4,a0
--    8000371e:	b7f5                	j	8000370a <namex+0x3a>
-+    8000360e:	4585                	li	a1,1
-+    80003610:	4505                	li	a0,1
-+    80003612:	ffcff0ef          	jal	80002e0e <iget>
-+    80003616:	8a2a                	mv	s4,a0
-+    80003618:	b7f5                	j	80003604 <namex+0x3a>
-       iunlockput(ip);
--    80003720:	8552                	mv	a0,s4
--    80003722:	ca9ff0ef          	jal	800033ca <iunlockput>
-+    8000361a:	8552                	mv	a0,s4
-+    8000361c:	ccdff0ef          	jal	800032e8 <iunlockput>
-       return 0;
--    80003726:	4a01                	li	s4,0
-+    80003620:	4a01                	li	s4,0
-   if(nameiparent){
-     iput(ip);
-     return 0;
-   }
-   return ip;
- }
--    80003728:	8552                	mv	a0,s4
--    8000372a:	60e6                	ld	ra,88(sp)
--    8000372c:	6446                	ld	s0,80(sp)
--    8000372e:	64a6                	ld	s1,72(sp)
--    80003730:	6906                	ld	s2,64(sp)
--    80003732:	79e2                	ld	s3,56(sp)
--    80003734:	7a42                	ld	s4,48(sp)
--    80003736:	7aa2                	ld	s5,40(sp)
--    80003738:	7b02                	ld	s6,32(sp)
--    8000373a:	6be2                	ld	s7,24(sp)
--    8000373c:	6c42                	ld	s8,16(sp)
--    8000373e:	6ca2                	ld	s9,8(sp)
--    80003740:	6125                	addi	sp,sp,96
--    80003742:	8082                	ret
-+    80003622:	8552                	mv	a0,s4
-+    80003624:	60e6                	ld	ra,88(sp)
-+    80003626:	6446                	ld	s0,80(sp)
-+    80003628:	64a6                	ld	s1,72(sp)
-+    8000362a:	6906                	ld	s2,64(sp)
-+    8000362c:	79e2                	ld	s3,56(sp)
-+    8000362e:	7a42                	ld	s4,48(sp)
-+    80003630:	7aa2                	ld	s5,40(sp)
-+    80003632:	7b02                	ld	s6,32(sp)
-+    80003634:	6be2                	ld	s7,24(sp)
-+    80003636:	6c42                	ld	s8,16(sp)
-+    80003638:	6ca2                	ld	s9,8(sp)
-+    8000363a:	6125                	add	sp,sp,96
-+    8000363c:	8082                	ret
-       iunlock(ip);
--    80003744:	8552                	mv	a0,s4
--    80003746:	b29ff0ef          	jal	8000326e <iunlock>
-+    8000363e:	8552                	mv	a0,s4
-+    80003640:	b4dff0ef          	jal	8000318c <iunlock>
-       return ip;
--    8000374a:	bff9                	j	80003728 <namex+0x58>
-+    80003644:	bff9                	j	80003622 <namex+0x58>
-       iunlockput(ip);
--    8000374c:	8552                	mv	a0,s4
--    8000374e:	c7dff0ef          	jal	800033ca <iunlockput>
-+    80003646:	8552                	mv	a0,s4
-+    80003648:	ca1ff0ef          	jal	800032e8 <iunlockput>
-       return 0;
--    80003752:	8a4e                	mv	s4,s3
--    80003754:	bfd1                	j	80003728 <namex+0x58>
-+    8000364c:	8a4e                	mv	s4,s3
-+    8000364e:	bfd1                	j	80003622 <namex+0x58>
-   len = path - s;
--    80003756:	40998633          	sub	a2,s3,s1
--    8000375a:	00060c9b          	sext.w	s9,a2
-+    80003650:	40998633          	sub	a2,s3,s1
-+    80003654:	00060c9b          	sext.w	s9,a2
-   if(len >= DIRSIZ)
--    8000375e:	099c5063          	bge	s8,s9,800037de <namex+0x10e>
-+    80003658:	099c5063          	bge	s8,s9,800036d8 <namex+0x10e>
-     memmove(name, s, DIRSIZ);
--    80003762:	4639                	li	a2,14
--    80003764:	85a6                	mv	a1,s1
--    80003766:	8556                	mv	a0,s5
--    80003768:	dbcfd0ef          	jal	80000d24 <memmove>
--    8000376c:	84ce                	mv	s1,s3
-+    8000365c:	4639                	li	a2,14
-+    8000365e:	85a6                	mv	a1,s1
-+    80003660:	8556                	mv	a0,s5
-+    80003662:	e6efd0ef          	jal	80000cd0 <memmove>
-+    80003666:	84ce                	mv	s1,s3
-   while(*path == '/')
--    8000376e:	0004c783          	lbu	a5,0(s1)
--    80003772:	01279763          	bne	a5,s2,80003780 <namex+0xb0>
-+    80003668:	0004c783          	lbu	a5,0(s1)
-+    8000366c:	01279763          	bne	a5,s2,8000367a <namex+0xb0>
-     path++;
--    80003776:	0485                	addi	s1,s1,1
-+    80003670:	0485                	add	s1,s1,1
-   while(*path == '/')
--    80003778:	0004c783          	lbu	a5,0(s1)
--    8000377c:	ff278de3          	beq	a5,s2,80003776 <namex+0xa6>
-+    80003672:	0004c783          	lbu	a5,0(s1)
-+    80003676:	ff278de3          	beq	a5,s2,80003670 <namex+0xa6>
-     ilock(ip);
--    80003780:	8552                	mv	a0,s4
--    80003782:	a3fff0ef          	jal	800031c0 <ilock>
-+    8000367a:	8552                	mv	a0,s4
-+    8000367c:	a67ff0ef          	jal	800030e2 <ilock>
-     if(ip->type != T_DIR){
--    80003786:	044a1783          	lh	a5,68(s4)
--    8000378a:	f9779be3          	bne	a5,s7,80003720 <namex+0x50>
-+    80003680:	044a1783          	lh	a5,68(s4)
-+    80003684:	f9779be3          	bne	a5,s7,8000361a <namex+0x50>
-     if(nameiparent && *path == '\0'){
--    8000378e:	000b0563          	beqz	s6,80003798 <namex+0xc8>
--    80003792:	0004c783          	lbu	a5,0(s1)
--    80003796:	d7dd                	beqz	a5,80003744 <namex+0x74>
-+    80003688:	000b0563          	beqz	s6,80003692 <namex+0xc8>
-+    8000368c:	0004c783          	lbu	a5,0(s1)
-+    80003690:	d7dd                	beqz	a5,8000363e <namex+0x74>
-     if((next = dirlookup(ip, name, 0)) == 0){
--    80003798:	4601                	li	a2,0
--    8000379a:	85d6                	mv	a1,s5
--    8000379c:	8552                	mv	a0,s4
--    8000379e:	e97ff0ef          	jal	80003634 <dirlookup>
--    800037a2:	89aa                	mv	s3,a0
--    800037a4:	d545                	beqz	a0,8000374c <namex+0x7c>
-+    80003692:	4601                	li	a2,0
-+    80003694:	85d6                	mv	a1,s5
-+    80003696:	8552                	mv	a0,s4
-+    80003698:	e97ff0ef          	jal	8000352e <dirlookup>
-+    8000369c:	89aa                	mv	s3,a0
-+    8000369e:	d545                	beqz	a0,80003646 <namex+0x7c>
-     iunlockput(ip);
--    800037a6:	8552                	mv	a0,s4
--    800037a8:	c23ff0ef          	jal	800033ca <iunlockput>
-+    800036a0:	8552                	mv	a0,s4
-+    800036a2:	c47ff0ef          	jal	800032e8 <iunlockput>
-     ip = next;
--    800037ac:	8a4e                	mv	s4,s3
-+    800036a6:	8a4e                	mv	s4,s3
-   while(*path == '/')
--    800037ae:	0004c783          	lbu	a5,0(s1)
--    800037b2:	01279763          	bne	a5,s2,800037c0 <namex+0xf0>
-+    800036a8:	0004c783          	lbu	a5,0(s1)
-+    800036ac:	01279763          	bne	a5,s2,800036ba <namex+0xf0>
-     path++;
--    800037b6:	0485                	addi	s1,s1,1
-+    800036b0:	0485                	add	s1,s1,1
-   while(*path == '/')
--    800037b8:	0004c783          	lbu	a5,0(s1)
--    800037bc:	ff278de3          	beq	a5,s2,800037b6 <namex+0xe6>
-+    800036b2:	0004c783          	lbu	a5,0(s1)
-+    800036b6:	ff278de3          	beq	a5,s2,800036b0 <namex+0xe6>
-   if(*path == 0)
--    800037c0:	cb8d                	beqz	a5,800037f2 <namex+0x122>
-+    800036ba:	cb8d                	beqz	a5,800036ec <namex+0x122>
-   while(*path != '/' && *path != 0)
--    800037c2:	0004c783          	lbu	a5,0(s1)
--    800037c6:	89a6                	mv	s3,s1
-+    800036bc:	0004c783          	lbu	a5,0(s1)
-+    800036c0:	89a6                	mv	s3,s1
-   len = path - s;
--    800037c8:	4c81                	li	s9,0
--    800037ca:	4601                	li	a2,0
-+    800036c2:	4c81                	li	s9,0
-+    800036c4:	4601                	li	a2,0
-   while(*path != '/' && *path != 0)
--    800037cc:	01278963          	beq	a5,s2,800037de <namex+0x10e>
--    800037d0:	d3d9                	beqz	a5,80003756 <namex+0x86>
-+    800036c6:	01278963          	beq	a5,s2,800036d8 <namex+0x10e>
-+    800036ca:	d3d9                	beqz	a5,80003650 <namex+0x86>
-     path++;
--    800037d2:	0985                	addi	s3,s3,1
-+    800036cc:	0985                	add	s3,s3,1
-   while(*path != '/' && *path != 0)
--    800037d4:	0009c783          	lbu	a5,0(s3)
--    800037d8:	ff279ce3          	bne	a5,s2,800037d0 <namex+0x100>
--    800037dc:	bfad                	j	80003756 <namex+0x86>
-+    800036ce:	0009c783          	lbu	a5,0(s3)
-+    800036d2:	ff279ce3          	bne	a5,s2,800036ca <namex+0x100>
-+    800036d6:	bfad                	j	80003650 <namex+0x86>
-     memmove(name, s, len);
--    800037de:	2601                	sext.w	a2,a2
--    800037e0:	85a6                	mv	a1,s1
--    800037e2:	8556                	mv	a0,s5
--    800037e4:	d40fd0ef          	jal	80000d24 <memmove>
-+    800036d8:	2601                	sext.w	a2,a2
-+    800036da:	85a6                	mv	a1,s1
-+    800036dc:	8556                	mv	a0,s5
-+    800036de:	df2fd0ef          	jal	80000cd0 <memmove>
-     name[len] = 0;
--    800037e8:	9cd6                	add	s9,s9,s5
--    800037ea:	000c8023          	sb	zero,0(s9) # 2000 <_entry-0x7fffe000>
--    800037ee:	84ce                	mv	s1,s3
--    800037f0:	bfbd                	j	8000376e <namex+0x9e>
-+    800036e2:	9cd6                	add	s9,s9,s5
-+    800036e4:	000c8023          	sb	zero,0(s9) # 2000 <_entry-0x7fffe000>
-+    800036e8:	84ce                	mv	s1,s3
-+    800036ea:	bfbd                	j	80003668 <namex+0x9e>
-   if(nameiparent){
--    800037f2:	f20b0be3          	beqz	s6,80003728 <namex+0x58>
-+    800036ec:	f20b0be3          	beqz	s6,80003622 <namex+0x58>
-     iput(ip);
--    800037f6:	8552                	mv	a0,s4
--    800037f8:	b4bff0ef          	jal	80003342 <iput>
-+    800036f0:	8552                	mv	a0,s4
-+    800036f2:	b6fff0ef          	jal	80003260 <iput>
-     return 0;
--    800037fc:	4a01                	li	s4,0
--    800037fe:	b72d                	j	80003728 <namex+0x58>
--
--0000000080003800 <dirlink>:
--{
--    80003800:	7139                	addi	sp,sp,-64
--    80003802:	fc06                	sd	ra,56(sp)
--    80003804:	f822                	sd	s0,48(sp)
--    80003806:	f04a                	sd	s2,32(sp)
--    80003808:	ec4e                	sd	s3,24(sp)
--    8000380a:	e852                	sd	s4,16(sp)
--    8000380c:	0080                	addi	s0,sp,64
--    8000380e:	892a                	mv	s2,a0
--    80003810:	8a2e                	mv	s4,a1
--    80003812:	89b2                	mv	s3,a2
-+    800036f6:	4a01                	li	s4,0
-+    800036f8:	b72d                	j	80003622 <namex+0x58>
-+
-+00000000800036fa <dirlink>:
-+{
-+    800036fa:	7139                	add	sp,sp,-64
-+    800036fc:	fc06                	sd	ra,56(sp)
-+    800036fe:	f822                	sd	s0,48(sp)
-+    80003700:	f426                	sd	s1,40(sp)
-+    80003702:	f04a                	sd	s2,32(sp)
-+    80003704:	ec4e                	sd	s3,24(sp)
-+    80003706:	e852                	sd	s4,16(sp)
-+    80003708:	0080                	add	s0,sp,64
-+    8000370a:	892a                	mv	s2,a0
-+    8000370c:	8a2e                	mv	s4,a1
-+    8000370e:	89b2                	mv	s3,a2
-   if((ip = dirlookup(dp, name, 0)) != 0){
--    80003814:	4601                	li	a2,0
--    80003816:	e1fff0ef          	jal	80003634 <dirlookup>
--    8000381a:	e535                	bnez	a0,80003886 <dirlink+0x86>
--    8000381c:	f426                	sd	s1,40(sp)
-+    80003710:	4601                	li	a2,0
-+    80003712:	e1dff0ef          	jal	8000352e <dirlookup>
-+    80003716:	e52d                	bnez	a0,80003780 <dirlink+0x86>
-   for(off = 0; off < dp->size; off += sizeof(de)){
--    8000381e:	04c92483          	lw	s1,76(s2)
--    80003822:	c48d                	beqz	s1,8000384c <dirlink+0x4c>
--    80003824:	4481                	li	s1,0
-+    80003718:	04c92483          	lw	s1,76(s2)
-+    8000371c:	c48d                	beqz	s1,80003746 <dirlink+0x4c>
-+    8000371e:	4481                	li	s1,0
-     if(readi(dp, 0, (uint64)&de, off, sizeof(de)) != sizeof(de))
--    80003826:	4741                	li	a4,16
--    80003828:	86a6                	mv	a3,s1
--    8000382a:	fc040613          	addi	a2,s0,-64
--    8000382e:	4581                	li	a1,0
--    80003830:	854a                	mv	a0,s2
--    80003832:	be3ff0ef          	jal	80003414 <readi>
--    80003836:	47c1                	li	a5,16
--    80003838:	04f51b63          	bne	a0,a5,8000388e <dirlink+0x8e>
-+    80003720:	4741                	li	a4,16
-+    80003722:	86a6                	mv	a3,s1
-+    80003724:	fc040613          	add	a2,s0,-64
-+    80003728:	4581                	li	a1,0
-+    8000372a:	854a                	mv	a0,s2
-+    8000372c:	c07ff0ef          	jal	80003332 <readi>
-+    80003730:	47c1                	li	a5,16
-+    80003732:	04f51b63          	bne	a0,a5,80003788 <dirlink+0x8e>
-     if(de.inum == 0)
--    8000383c:	fc045783          	lhu	a5,-64(s0)
--    80003840:	c791                	beqz	a5,8000384c <dirlink+0x4c>
-+    80003736:	fc045783          	lhu	a5,-64(s0)
-+    8000373a:	c791                	beqz	a5,80003746 <dirlink+0x4c>
-   for(off = 0; off < dp->size; off += sizeof(de)){
--    80003842:	24c1                	addiw	s1,s1,16
--    80003844:	04c92783          	lw	a5,76(s2)
--    80003848:	fcf4efe3          	bltu	s1,a5,80003826 <dirlink+0x26>
-+    8000373c:	24c1                	addw	s1,s1,16
-+    8000373e:	04c92783          	lw	a5,76(s2)
-+    80003742:	fcf4efe3          	bltu	s1,a5,80003720 <dirlink+0x26>
-   strncpy(de.name, name, DIRSIZ);
--    8000384c:	4639                	li	a2,14
--    8000384e:	85d2                	mv	a1,s4
--    80003850:	fc240513          	addi	a0,s0,-62
--    80003854:	d76fd0ef          	jal	80000dca <strncpy>
-+    80003746:	4639                	li	a2,14
-+    80003748:	85d2                	mv	a1,s4
-+    8000374a:	fc240513          	add	a0,s0,-62
-+    8000374e:	e2efd0ef          	jal	80000d7c <strncpy>
-   de.inum = inum;
--    80003858:	fd341023          	sh	s3,-64(s0)
-+    80003752:	fd341023          	sh	s3,-64(s0)
-   if(writei(dp, 0, (uint64)&de, off, sizeof(de)) != sizeof(de))
--    8000385c:	4741                	li	a4,16
--    8000385e:	86a6                	mv	a3,s1
--    80003860:	fc040613          	addi	a2,s0,-64
--    80003864:	4581                	li	a1,0
--    80003866:	854a                	mv	a0,s2
--    80003868:	ca9ff0ef          	jal	80003510 <writei>
--    8000386c:	1541                	addi	a0,a0,-16
--    8000386e:	00a03533          	snez	a0,a0
--    80003872:	40a00533          	neg	a0,a0
--    80003876:	74a2                	ld	s1,40(sp)
--}
--    80003878:	70e2                	ld	ra,56(sp)
--    8000387a:	7442                	ld	s0,48(sp)
--    8000387c:	7902                	ld	s2,32(sp)
--    8000387e:	69e2                	ld	s3,24(sp)
--    80003880:	6a42                	ld	s4,16(sp)
--    80003882:	6121                	addi	sp,sp,64
--    80003884:	8082                	ret
-+    80003756:	4741                	li	a4,16
-+    80003758:	86a6                	mv	a3,s1
-+    8000375a:	fc040613          	add	a2,s0,-64
-+    8000375e:	4581                	li	a1,0
-+    80003760:	854a                	mv	a0,s2
-+    80003762:	cb5ff0ef          	jal	80003416 <writei>
-+    80003766:	1541                	add	a0,a0,-16
-+    80003768:	00a03533          	snez	a0,a0
-+    8000376c:	40a00533          	neg	a0,a0
-+}
-+    80003770:	70e2                	ld	ra,56(sp)
-+    80003772:	7442                	ld	s0,48(sp)
-+    80003774:	74a2                	ld	s1,40(sp)
-+    80003776:	7902                	ld	s2,32(sp)
-+    80003778:	69e2                	ld	s3,24(sp)
-+    8000377a:	6a42                	ld	s4,16(sp)
-+    8000377c:	6121                	add	sp,sp,64
-+    8000377e:	8082                	ret
-     iput(ip);
--    80003886:	abdff0ef          	jal	80003342 <iput>
-+    80003780:	ae1ff0ef          	jal	80003260 <iput>
-     return -1;
--    8000388a:	557d                	li	a0,-1
--    8000388c:	b7f5                	j	80003878 <dirlink+0x78>
-+    80003784:	557d                	li	a0,-1
-+    80003786:	b7ed                	j	80003770 <dirlink+0x76>
-       panic("dirlink read");
--    8000388e:	00004517          	auipc	a0,0x4
--    80003892:	cba50513          	addi	a0,a0,-838 # 80007548 <etext+0x548>
--    80003896:	efffc0ef          	jal	80000794 <panic>
-+    80003788:	00004517          	auipc	a0,0x4
-+    8000378c:	ed050513          	add	a0,a0,-304 # 80007658 <syscalls+0x1c8>
-+    80003790:	fcffc0ef          	jal	8000075e <panic>
- 
--000000008000389a <namei>:
-+0000000080003794 <namei>:
- 
- struct inode*
- namei(char *path)
- {
--    8000389a:	1101                	addi	sp,sp,-32
--    8000389c:	ec06                	sd	ra,24(sp)
--    8000389e:	e822                	sd	s0,16(sp)
--    800038a0:	1000                	addi	s0,sp,32
-+    80003794:	1101                	add	sp,sp,-32
-+    80003796:	ec06                	sd	ra,24(sp)
-+    80003798:	e822                	sd	s0,16(sp)
-+    8000379a:	1000                	add	s0,sp,32
-   char name[DIRSIZ];
-   return namex(path, 0, name);
--    800038a2:	fe040613          	addi	a2,s0,-32
--    800038a6:	4581                	li	a1,0
--    800038a8:	e29ff0ef          	jal	800036d0 <namex>
-+    8000379c:	fe040613          	add	a2,s0,-32
-+    800037a0:	4581                	li	a1,0
-+    800037a2:	e29ff0ef          	jal	800035ca <namex>
- }
--    800038ac:	60e2                	ld	ra,24(sp)
--    800038ae:	6442                	ld	s0,16(sp)
--    800038b0:	6105                	addi	sp,sp,32
--    800038b2:	8082                	ret
-+    800037a6:	60e2                	ld	ra,24(sp)
-+    800037a8:	6442                	ld	s0,16(sp)
-+    800037aa:	6105                	add	sp,sp,32
-+    800037ac:	8082                	ret
- 
--00000000800038b4 <nameiparent>:
-+00000000800037ae <nameiparent>:
- 
- struct inode*
- nameiparent(char *path, char *name)
- {
--    800038b4:	1141                	addi	sp,sp,-16
--    800038b6:	e406                	sd	ra,8(sp)
--    800038b8:	e022                	sd	s0,0(sp)
--    800038ba:	0800                	addi	s0,sp,16
--    800038bc:	862e                	mv	a2,a1
-+    800037ae:	1141                	add	sp,sp,-16
-+    800037b0:	e406                	sd	ra,8(sp)
-+    800037b2:	e022                	sd	s0,0(sp)
-+    800037b4:	0800                	add	s0,sp,16
-+    800037b6:	862e                	mv	a2,a1
-   return namex(path, 1, name);
--    800038be:	4585                	li	a1,1
--    800038c0:	e11ff0ef          	jal	800036d0 <namex>
-+    800037b8:	4585                	li	a1,1
-+    800037ba:	e11ff0ef          	jal	800035ca <namex>
- }
--    800038c4:	60a2                	ld	ra,8(sp)
--    800038c6:	6402                	ld	s0,0(sp)
--    800038c8:	0141                	addi	sp,sp,16
--    800038ca:	8082                	ret
-+    800037be:	60a2                	ld	ra,8(sp)
-+    800037c0:	6402                	ld	s0,0(sp)
-+    800037c2:	0141                	add	sp,sp,16
-+    800037c4:	8082                	ret
- 
--00000000800038cc <write_head>:
-+00000000800037c6 <write_head>:
- /* Write in-memory log header to disk. */
- /* This is the true point at which the */
- /* current transaction commits. */
- static void
- write_head(void)
- {
--    800038cc:	1101                	addi	sp,sp,-32
--    800038ce:	ec06                	sd	ra,24(sp)
--    800038d0:	e822                	sd	s0,16(sp)
--    800038d2:	e426                	sd	s1,8(sp)
--    800038d4:	e04a                	sd	s2,0(sp)
--    800038d6:	1000                	addi	s0,sp,32
-+    800037c6:	1101                	add	sp,sp,-32
-+    800037c8:	ec06                	sd	ra,24(sp)
-+    800037ca:	e822                	sd	s0,16(sp)
-+    800037cc:	e426                	sd	s1,8(sp)
-+    800037ce:	e04a                	sd	s2,0(sp)
-+    800037d0:	1000                	add	s0,sp,32
-   struct buf *buf = bread(log.dev, log.start);
--    800038d8:	0001f917          	auipc	s2,0x1f
--    800038dc:	a1890913          	addi	s2,s2,-1512 # 800222f0 <log>
--    800038e0:	01892583          	lw	a1,24(s2)
--    800038e4:	02892503          	lw	a0,40(s2)
--    800038e8:	9a0ff0ef          	jal	80002a88 <bread>
--    800038ec:	84aa                	mv	s1,a0
-+    800037d2:	0001c917          	auipc	s2,0x1c
-+    800037d6:	22e90913          	add	s2,s2,558 # 8001fa00 <log>
-+    800037da:	01892583          	lw	a1,24(s2)
-+    800037de:	02892503          	lw	a0,40(s2)
-+    800037e2:	9ecff0ef          	jal	800029ce <bread>
-+    800037e6:	84aa                	mv	s1,a0
-   struct logheader *hb = (struct logheader *) (buf->data);
-   int i;
-   hb->n = log.lh.n;
--    800038ee:	02c92603          	lw	a2,44(s2)
--    800038f2:	cd30                	sw	a2,88(a0)
-+    800037e8:	02c92603          	lw	a2,44(s2)
-+    800037ec:	cd30                	sw	a2,88(a0)
-   for (i = 0; i < log.lh.n; i++) {
--    800038f4:	00c05f63          	blez	a2,80003912 <write_head+0x46>
--    800038f8:	0001f717          	auipc	a4,0x1f
--    800038fc:	a2870713          	addi	a4,a4,-1496 # 80022320 <log+0x30>
--    80003900:	87aa                	mv	a5,a0
--    80003902:	060a                	slli	a2,a2,0x2
--    80003904:	962a                	add	a2,a2,a0
-+    800037ee:	00c05f63          	blez	a2,8000380c <write_head+0x46>
-+    800037f2:	0001c717          	auipc	a4,0x1c
-+    800037f6:	23e70713          	add	a4,a4,574 # 8001fa30 <log+0x30>
-+    800037fa:	87aa                	mv	a5,a0
-+    800037fc:	060a                	sll	a2,a2,0x2
-+    800037fe:	962a                	add	a2,a2,a0
-     hb->block[i] = log.lh.block[i];
--    80003906:	4314                	lw	a3,0(a4)
--    80003908:	cff4                	sw	a3,92(a5)
-+    80003800:	4314                	lw	a3,0(a4)
-+    80003802:	cff4                	sw	a3,92(a5)
-   for (i = 0; i < log.lh.n; i++) {
--    8000390a:	0711                	addi	a4,a4,4
--    8000390c:	0791                	addi	a5,a5,4
--    8000390e:	fec79ce3          	bne	a5,a2,80003906 <write_head+0x3a>
-+    80003804:	0711                	add	a4,a4,4
-+    80003806:	0791                	add	a5,a5,4
-+    80003808:	fec79ce3          	bne	a5,a2,80003800 <write_head+0x3a>
-   }
-   bwrite(buf);
--    80003912:	8526                	mv	a0,s1
--    80003914:	a4aff0ef          	jal	80002b5e <bwrite>
-+    8000380c:	8526                	mv	a0,s1
-+    8000380e:	a96ff0ef          	jal	80002aa4 <bwrite>
-   brelse(buf);
--    80003918:	8526                	mv	a0,s1
--    8000391a:	a76ff0ef          	jal	80002b90 <brelse>
-+    80003812:	8526                	mv	a0,s1
-+    80003814:	ac2ff0ef          	jal	80002ad6 <brelse>
- }
--    8000391e:	60e2                	ld	ra,24(sp)
--    80003920:	6442                	ld	s0,16(sp)
--    80003922:	64a2                	ld	s1,8(sp)
--    80003924:	6902                	ld	s2,0(sp)
--    80003926:	6105                	addi	sp,sp,32
--    80003928:	8082                	ret
-+    80003818:	60e2                	ld	ra,24(sp)
-+    8000381a:	6442                	ld	s0,16(sp)
-+    8000381c:	64a2                	ld	s1,8(sp)
-+    8000381e:	6902                	ld	s2,0(sp)
-+    80003820:	6105                	add	sp,sp,32
-+    80003822:	8082                	ret
- 
--000000008000392a <install_trans>:
-+0000000080003824 <install_trans>:
-   for (tail = 0; tail < log.lh.n; tail++) {
--    8000392a:	0001f797          	auipc	a5,0x1f
--    8000392e:	9f27a783          	lw	a5,-1550(a5) # 8002231c <log+0x2c>
--    80003932:	08f05f63          	blez	a5,800039d0 <install_trans+0xa6>
--{
--    80003936:	7139                	addi	sp,sp,-64
--    80003938:	fc06                	sd	ra,56(sp)
--    8000393a:	f822                	sd	s0,48(sp)
--    8000393c:	f426                	sd	s1,40(sp)
--    8000393e:	f04a                	sd	s2,32(sp)
--    80003940:	ec4e                	sd	s3,24(sp)
--    80003942:	e852                	sd	s4,16(sp)
--    80003944:	e456                	sd	s5,8(sp)
--    80003946:	e05a                	sd	s6,0(sp)
--    80003948:	0080                	addi	s0,sp,64
--    8000394a:	8b2a                	mv	s6,a0
--    8000394c:	0001fa97          	auipc	s5,0x1f
--    80003950:	9d4a8a93          	addi	s5,s5,-1580 # 80022320 <log+0x30>
-+    80003824:	0001c797          	auipc	a5,0x1c
-+    80003828:	2087a783          	lw	a5,520(a5) # 8001fa2c <log+0x2c>
-+    8000382c:	08f05f63          	blez	a5,800038ca <install_trans+0xa6>
-+{
-+    80003830:	7139                	add	sp,sp,-64
-+    80003832:	fc06                	sd	ra,56(sp)
-+    80003834:	f822                	sd	s0,48(sp)
-+    80003836:	f426                	sd	s1,40(sp)
-+    80003838:	f04a                	sd	s2,32(sp)
-+    8000383a:	ec4e                	sd	s3,24(sp)
-+    8000383c:	e852                	sd	s4,16(sp)
-+    8000383e:	e456                	sd	s5,8(sp)
-+    80003840:	e05a                	sd	s6,0(sp)
-+    80003842:	0080                	add	s0,sp,64
-+    80003844:	8b2a                	mv	s6,a0
-+    80003846:	0001ca97          	auipc	s5,0x1c
-+    8000384a:	1eaa8a93          	add	s5,s5,490 # 8001fa30 <log+0x30>
-   for (tail = 0; tail < log.lh.n; tail++) {
--    80003954:	4a01                	li	s4,0
-+    8000384e:	4a01                	li	s4,0
-     struct buf *lbuf = bread(log.dev, log.start+tail+1); /* read log block */
--    80003956:	0001f997          	auipc	s3,0x1f
--    8000395a:	99a98993          	addi	s3,s3,-1638 # 800222f0 <log>
--    8000395e:	a829                	j	80003978 <install_trans+0x4e>
-+    80003850:	0001c997          	auipc	s3,0x1c
-+    80003854:	1b098993          	add	s3,s3,432 # 8001fa00 <log>
-+    80003858:	a829                	j	80003872 <install_trans+0x4e>
-     brelse(lbuf);
--    80003960:	854a                	mv	a0,s2
--    80003962:	a2eff0ef          	jal	80002b90 <brelse>
-+    8000385a:	854a                	mv	a0,s2
-+    8000385c:	a7aff0ef          	jal	80002ad6 <brelse>
-     brelse(dbuf);
--    80003966:	8526                	mv	a0,s1
--    80003968:	a28ff0ef          	jal	80002b90 <brelse>
-+    80003860:	8526                	mv	a0,s1
-+    80003862:	a74ff0ef          	jal	80002ad6 <brelse>
-   for (tail = 0; tail < log.lh.n; tail++) {
--    8000396c:	2a05                	addiw	s4,s4,1
--    8000396e:	0a91                	addi	s5,s5,4
--    80003970:	02c9a783          	lw	a5,44(s3)
--    80003974:	04fa5463          	bge	s4,a5,800039bc <install_trans+0x92>
-+    80003866:	2a05                	addw	s4,s4,1
-+    80003868:	0a91                	add	s5,s5,4
-+    8000386a:	02c9a783          	lw	a5,44(s3)
-+    8000386e:	04fa5463          	bge	s4,a5,800038b6 <install_trans+0x92>
-     struct buf *lbuf = bread(log.dev, log.start+tail+1); /* read log block */
--    80003978:	0189a583          	lw	a1,24(s3)
--    8000397c:	014585bb          	addw	a1,a1,s4
--    80003980:	2585                	addiw	a1,a1,1
--    80003982:	0289a503          	lw	a0,40(s3)
--    80003986:	902ff0ef          	jal	80002a88 <bread>
--    8000398a:	892a                	mv	s2,a0
-+    80003872:	0189a583          	lw	a1,24(s3)
-+    80003876:	014585bb          	addw	a1,a1,s4
-+    8000387a:	2585                	addw	a1,a1,1
-+    8000387c:	0289a503          	lw	a0,40(s3)
-+    80003880:	94eff0ef          	jal	800029ce <bread>
-+    80003884:	892a                	mv	s2,a0
-     struct buf *dbuf = bread(log.dev, log.lh.block[tail]); /* read dst */
--    8000398c:	000aa583          	lw	a1,0(s5)
--    80003990:	0289a503          	lw	a0,40(s3)
--    80003994:	8f4ff0ef          	jal	80002a88 <bread>
--    80003998:	84aa                	mv	s1,a0
-+    80003886:	000aa583          	lw	a1,0(s5)
-+    8000388a:	0289a503          	lw	a0,40(s3)
-+    8000388e:	940ff0ef          	jal	800029ce <bread>
-+    80003892:	84aa                	mv	s1,a0
-     memmove(dbuf->data, lbuf->data, BSIZE);  /* copy block to dst */
--    8000399a:	40000613          	li	a2,1024
--    8000399e:	05890593          	addi	a1,s2,88
--    800039a2:	05850513          	addi	a0,a0,88
--    800039a6:	b7efd0ef          	jal	80000d24 <memmove>
-+    80003894:	40000613          	li	a2,1024
-+    80003898:	05890593          	add	a1,s2,88
-+    8000389c:	05850513          	add	a0,a0,88
-+    800038a0:	c30fd0ef          	jal	80000cd0 <memmove>
-     bwrite(dbuf);  /* write dst to disk */
--    800039aa:	8526                	mv	a0,s1
--    800039ac:	9b2ff0ef          	jal	80002b5e <bwrite>
-+    800038a4:	8526                	mv	a0,s1
-+    800038a6:	9feff0ef          	jal	80002aa4 <bwrite>
-     if(recovering == 0)
--    800039b0:	fa0b18e3          	bnez	s6,80003960 <install_trans+0x36>
-+    800038aa:	fa0b18e3          	bnez	s6,8000385a <install_trans+0x36>
-       bunpin(dbuf);
--    800039b4:	8526                	mv	a0,s1
--    800039b6:	a96ff0ef          	jal	80002c4c <bunpin>
--    800039ba:	b75d                	j	80003960 <install_trans+0x36>
--}
--    800039bc:	70e2                	ld	ra,56(sp)
--    800039be:	7442                	ld	s0,48(sp)
--    800039c0:	74a2                	ld	s1,40(sp)
--    800039c2:	7902                	ld	s2,32(sp)
--    800039c4:	69e2                	ld	s3,24(sp)
--    800039c6:	6a42                	ld	s4,16(sp)
--    800039c8:	6aa2                	ld	s5,8(sp)
--    800039ca:	6b02                	ld	s6,0(sp)
--    800039cc:	6121                	addi	sp,sp,64
--    800039ce:	8082                	ret
--    800039d0:	8082                	ret
--
--00000000800039d2 <initlog>:
--{
--    800039d2:	7179                	addi	sp,sp,-48
--    800039d4:	f406                	sd	ra,40(sp)
--    800039d6:	f022                	sd	s0,32(sp)
--    800039d8:	ec26                	sd	s1,24(sp)
--    800039da:	e84a                	sd	s2,16(sp)
--    800039dc:	e44e                	sd	s3,8(sp)
--    800039de:	1800                	addi	s0,sp,48
--    800039e0:	892a                	mv	s2,a0
--    800039e2:	89ae                	mv	s3,a1
-+    800038ae:	8526                	mv	a0,s1
-+    800038b0:	ae2ff0ef          	jal	80002b92 <bunpin>
-+    800038b4:	b75d                	j	8000385a <install_trans+0x36>
-+}
-+    800038b6:	70e2                	ld	ra,56(sp)
-+    800038b8:	7442                	ld	s0,48(sp)
-+    800038ba:	74a2                	ld	s1,40(sp)
-+    800038bc:	7902                	ld	s2,32(sp)
-+    800038be:	69e2                	ld	s3,24(sp)
-+    800038c0:	6a42                	ld	s4,16(sp)
-+    800038c2:	6aa2                	ld	s5,8(sp)
-+    800038c4:	6b02                	ld	s6,0(sp)
-+    800038c6:	6121                	add	sp,sp,64
-+    800038c8:	8082                	ret
-+    800038ca:	8082                	ret
-+
-+00000000800038cc <initlog>:
-+{
-+    800038cc:	7179                	add	sp,sp,-48
-+    800038ce:	f406                	sd	ra,40(sp)
-+    800038d0:	f022                	sd	s0,32(sp)
-+    800038d2:	ec26                	sd	s1,24(sp)
-+    800038d4:	e84a                	sd	s2,16(sp)
-+    800038d6:	e44e                	sd	s3,8(sp)
-+    800038d8:	1800                	add	s0,sp,48
-+    800038da:	892a                	mv	s2,a0
-+    800038dc:	89ae                	mv	s3,a1
-   initlock(&log.lock, "log");
--    800039e4:	0001f497          	auipc	s1,0x1f
--    800039e8:	90c48493          	addi	s1,s1,-1780 # 800222f0 <log>
--    800039ec:	00004597          	auipc	a1,0x4
--    800039f0:	b6c58593          	addi	a1,a1,-1172 # 80007558 <etext+0x558>
--    800039f4:	8526                	mv	a0,s1
--    800039f6:	97efd0ef          	jal	80000b74 <initlock>
-+    800038de:	0001c497          	auipc	s1,0x1c
-+    800038e2:	12248493          	add	s1,s1,290 # 8001fa00 <log>
-+    800038e6:	00004597          	auipc	a1,0x4
-+    800038ea:	d8258593          	add	a1,a1,-638 # 80007668 <syscalls+0x1d8>
-+    800038ee:	8526                	mv	a0,s1
-+    800038f0:	a30fd0ef          	jal	80000b20 <initlock>
-   log.start = sb->logstart;
--    800039fa:	0149a583          	lw	a1,20(s3)
--    800039fe:	cc8c                	sw	a1,24(s1)
-+    800038f4:	0149a583          	lw	a1,20(s3)
-+    800038f8:	cc8c                	sw	a1,24(s1)
-   log.size = sb->nlog;
--    80003a00:	0109a783          	lw	a5,16(s3)
--    80003a04:	ccdc                	sw	a5,28(s1)
-+    800038fa:	0109a783          	lw	a5,16(s3)
-+    800038fe:	ccdc                	sw	a5,28(s1)
-   log.dev = dev;
--    80003a06:	0324a423          	sw	s2,40(s1)
-+    80003900:	0324a423          	sw	s2,40(s1)
-   struct buf *buf = bread(log.dev, log.start);
--    80003a0a:	854a                	mv	a0,s2
--    80003a0c:	87cff0ef          	jal	80002a88 <bread>
-+    80003904:	854a                	mv	a0,s2
-+    80003906:	8c8ff0ef          	jal	800029ce <bread>
-   log.lh.n = lh->n;
--    80003a10:	4d30                	lw	a2,88(a0)
--    80003a12:	d4d0                	sw	a2,44(s1)
-+    8000390a:	4d30                	lw	a2,88(a0)
-+    8000390c:	d4d0                	sw	a2,44(s1)
-   for (i = 0; i < log.lh.n; i++) {
--    80003a14:	00c05f63          	blez	a2,80003a32 <initlog+0x60>
--    80003a18:	87aa                	mv	a5,a0
--    80003a1a:	0001f717          	auipc	a4,0x1f
--    80003a1e:	90670713          	addi	a4,a4,-1786 # 80022320 <log+0x30>
--    80003a22:	060a                	slli	a2,a2,0x2
--    80003a24:	962a                	add	a2,a2,a0
-+    8000390e:	00c05f63          	blez	a2,8000392c <initlog+0x60>
-+    80003912:	87aa                	mv	a5,a0
-+    80003914:	0001c717          	auipc	a4,0x1c
-+    80003918:	11c70713          	add	a4,a4,284 # 8001fa30 <log+0x30>
-+    8000391c:	060a                	sll	a2,a2,0x2
-+    8000391e:	962a                	add	a2,a2,a0
-     log.lh.block[i] = lh->block[i];
--    80003a26:	4ff4                	lw	a3,92(a5)
--    80003a28:	c314                	sw	a3,0(a4)
-+    80003920:	4ff4                	lw	a3,92(a5)
-+    80003922:	c314                	sw	a3,0(a4)
-   for (i = 0; i < log.lh.n; i++) {
--    80003a2a:	0791                	addi	a5,a5,4
--    80003a2c:	0711                	addi	a4,a4,4
--    80003a2e:	fec79ce3          	bne	a5,a2,80003a26 <initlog+0x54>
-+    80003924:	0791                	add	a5,a5,4
-+    80003926:	0711                	add	a4,a4,4
-+    80003928:	fec79ce3          	bne	a5,a2,80003920 <initlog+0x54>
-   brelse(buf);
--    80003a32:	95eff0ef          	jal	80002b90 <brelse>
-+    8000392c:	9aaff0ef          	jal	80002ad6 <brelse>
- 
- static void
- recover_from_log(void)
- {
-   read_head();
-   install_trans(1); /* if committed, copy from log to disk */
--    80003a36:	4505                	li	a0,1
--    80003a38:	ef3ff0ef          	jal	8000392a <install_trans>
-+    80003930:	4505                	li	a0,1
-+    80003932:	ef3ff0ef          	jal	80003824 <install_trans>
-   log.lh.n = 0;
--    80003a3c:	0001f797          	auipc	a5,0x1f
--    80003a40:	8e07a023          	sw	zero,-1824(a5) # 8002231c <log+0x2c>
-+    80003936:	0001c797          	auipc	a5,0x1c
-+    8000393a:	0e07ab23          	sw	zero,246(a5) # 8001fa2c <log+0x2c>
-   write_head(); /* clear the log */
--    80003a44:	e89ff0ef          	jal	800038cc <write_head>
--}
--    80003a48:	70a2                	ld	ra,40(sp)
--    80003a4a:	7402                	ld	s0,32(sp)
--    80003a4c:	64e2                	ld	s1,24(sp)
--    80003a4e:	6942                	ld	s2,16(sp)
--    80003a50:	69a2                	ld	s3,8(sp)
--    80003a52:	6145                	addi	sp,sp,48
--    80003a54:	8082                	ret
-+    8000393e:	e89ff0ef          	jal	800037c6 <write_head>
-+}
-+    80003942:	70a2                	ld	ra,40(sp)
-+    80003944:	7402                	ld	s0,32(sp)
-+    80003946:	64e2                	ld	s1,24(sp)
-+    80003948:	6942                	ld	s2,16(sp)
-+    8000394a:	69a2                	ld	s3,8(sp)
-+    8000394c:	6145                	add	sp,sp,48
-+    8000394e:	8082                	ret
- 
--0000000080003a56 <begin_op>:
-+0000000080003950 <begin_op>:
- }
- 
- /* called at the start of each FS system call. */
- void
- begin_op(void)
- {
--    80003a56:	1101                	addi	sp,sp,-32
--    80003a58:	ec06                	sd	ra,24(sp)
--    80003a5a:	e822                	sd	s0,16(sp)
--    80003a5c:	e426                	sd	s1,8(sp)
--    80003a5e:	e04a                	sd	s2,0(sp)
--    80003a60:	1000                	addi	s0,sp,32
-+    80003950:	1101                	add	sp,sp,-32
-+    80003952:	ec06                	sd	ra,24(sp)
-+    80003954:	e822                	sd	s0,16(sp)
-+    80003956:	e426                	sd	s1,8(sp)
-+    80003958:	e04a                	sd	s2,0(sp)
-+    8000395a:	1000                	add	s0,sp,32
-   acquire(&log.lock);
--    80003a62:	0001f517          	auipc	a0,0x1f
--    80003a66:	88e50513          	addi	a0,a0,-1906 # 800222f0 <log>
--    80003a6a:	98afd0ef          	jal	80000bf4 <acquire>
-+    8000395c:	0001c517          	auipc	a0,0x1c
-+    80003960:	0a450513          	add	a0,a0,164 # 8001fa00 <log>
-+    80003964:	a3cfd0ef          	jal	80000ba0 <acquire>
-   while(1){
-     if(log.committing){
--    80003a6e:	0001f497          	auipc	s1,0x1f
--    80003a72:	88248493          	addi	s1,s1,-1918 # 800222f0 <log>
-+    80003968:	0001c497          	auipc	s1,0x1c
-+    8000396c:	09848493          	add	s1,s1,152 # 8001fa00 <log>
-       sleep(&log, &log.lock);
-     } else if(log.lh.n + (log.outstanding+1)*MAXOPBLOCKS > LOGSIZE){
--    80003a76:	4979                	li	s2,30
--    80003a78:	a029                	j	80003a82 <begin_op+0x2c>
-+    80003970:	4979                	li	s2,30
-+    80003972:	a029                	j	8000397c <begin_op+0x2c>
-       sleep(&log, &log.lock);
--    80003a7a:	85a6                	mv	a1,s1
--    80003a7c:	8526                	mv	a0,s1
--    80003a7e:	c30fe0ef          	jal	80001eae <sleep>
-+    80003974:	85a6                	mv	a1,s1
-+    80003976:	8526                	mv	a0,s1
-+    80003978:	c84fe0ef          	jal	80001dfc <sleep>
-     if(log.committing){
--    80003a82:	50dc                	lw	a5,36(s1)
--    80003a84:	fbfd                	bnez	a5,80003a7a <begin_op+0x24>
-+    8000397c:	50dc                	lw	a5,36(s1)
-+    8000397e:	fbfd                	bnez	a5,80003974 <begin_op+0x24>
-     } else if(log.lh.n + (log.outstanding+1)*MAXOPBLOCKS > LOGSIZE){
--    80003a86:	5098                	lw	a4,32(s1)
--    80003a88:	2705                	addiw	a4,a4,1
--    80003a8a:	0027179b          	slliw	a5,a4,0x2
--    80003a8e:	9fb9                	addw	a5,a5,a4
--    80003a90:	0017979b          	slliw	a5,a5,0x1
--    80003a94:	54d4                	lw	a3,44(s1)
--    80003a96:	9fb5                	addw	a5,a5,a3
--    80003a98:	00f95763          	bge	s2,a5,80003aa6 <begin_op+0x50>
-+    80003980:	5098                	lw	a4,32(s1)
-+    80003982:	2705                	addw	a4,a4,1
-+    80003984:	0027179b          	sllw	a5,a4,0x2
-+    80003988:	9fb9                	addw	a5,a5,a4
-+    8000398a:	0017979b          	sllw	a5,a5,0x1
-+    8000398e:	54d4                	lw	a3,44(s1)
-+    80003990:	9fb5                	addw	a5,a5,a3
-+    80003992:	00f95763          	bge	s2,a5,800039a0 <begin_op+0x50>
-       /* this op might exhaust log space; wait for commit. */
-       sleep(&log, &log.lock);
--    80003a9c:	85a6                	mv	a1,s1
--    80003a9e:	8526                	mv	a0,s1
--    80003aa0:	c0efe0ef          	jal	80001eae <sleep>
--    80003aa4:	bff9                	j	80003a82 <begin_op+0x2c>
-+    80003996:	85a6                	mv	a1,s1
-+    80003998:	8526                	mv	a0,s1
-+    8000399a:	c62fe0ef          	jal	80001dfc <sleep>
-+    8000399e:	bff9                	j	8000397c <begin_op+0x2c>
-     } else {
-       log.outstanding += 1;
--    80003aa6:	0001f517          	auipc	a0,0x1f
--    80003aaa:	84a50513          	addi	a0,a0,-1974 # 800222f0 <log>
--    80003aae:	d118                	sw	a4,32(a0)
-+    800039a0:	0001c517          	auipc	a0,0x1c
-+    800039a4:	06050513          	add	a0,a0,96 # 8001fa00 <log>
-+    800039a8:	d118                	sw	a4,32(a0)
-       release(&log.lock);
--    80003ab0:	9dcfd0ef          	jal	80000c8c <release>
-+    800039aa:	a8efd0ef          	jal	80000c38 <release>
-       break;
-     }
-   }
- }
--    80003ab4:	60e2                	ld	ra,24(sp)
--    80003ab6:	6442                	ld	s0,16(sp)
--    80003ab8:	64a2                	ld	s1,8(sp)
--    80003aba:	6902                	ld	s2,0(sp)
--    80003abc:	6105                	addi	sp,sp,32
--    80003abe:	8082                	ret
-+    800039ae:	60e2                	ld	ra,24(sp)
-+    800039b0:	6442                	ld	s0,16(sp)
-+    800039b2:	64a2                	ld	s1,8(sp)
-+    800039b4:	6902                	ld	s2,0(sp)
-+    800039b6:	6105                	add	sp,sp,32
-+    800039b8:	8082                	ret
- 
--0000000080003ac0 <end_op>:
-+00000000800039ba <end_op>:
- 
- /* called at the end of each FS system call. */
- /* commits if this was the last outstanding operation. */
- void
- end_op(void)
- {
--    80003ac0:	7139                	addi	sp,sp,-64
--    80003ac2:	fc06                	sd	ra,56(sp)
--    80003ac4:	f822                	sd	s0,48(sp)
--    80003ac6:	f426                	sd	s1,40(sp)
--    80003ac8:	f04a                	sd	s2,32(sp)
--    80003aca:	0080                	addi	s0,sp,64
-+    800039ba:	7139                	add	sp,sp,-64
-+    800039bc:	fc06                	sd	ra,56(sp)
-+    800039be:	f822                	sd	s0,48(sp)
-+    800039c0:	f426                	sd	s1,40(sp)
-+    800039c2:	f04a                	sd	s2,32(sp)
-+    800039c4:	ec4e                	sd	s3,24(sp)
-+    800039c6:	e852                	sd	s4,16(sp)
-+    800039c8:	e456                	sd	s5,8(sp)
-+    800039ca:	0080                	add	s0,sp,64
-   int do_commit = 0;
- 
-   acquire(&log.lock);
--    80003acc:	0001f497          	auipc	s1,0x1f
--    80003ad0:	82448493          	addi	s1,s1,-2012 # 800222f0 <log>
--    80003ad4:	8526                	mv	a0,s1
--    80003ad6:	91efd0ef          	jal	80000bf4 <acquire>
-+    800039cc:	0001c497          	auipc	s1,0x1c
-+    800039d0:	03448493          	add	s1,s1,52 # 8001fa00 <log>
-+    800039d4:	8526                	mv	a0,s1
-+    800039d6:	9cafd0ef          	jal	80000ba0 <acquire>
-   log.outstanding -= 1;
--    80003ada:	509c                	lw	a5,32(s1)
--    80003adc:	37fd                	addiw	a5,a5,-1
--    80003ade:	0007891b          	sext.w	s2,a5
--    80003ae2:	d09c                	sw	a5,32(s1)
-+    800039da:	509c                	lw	a5,32(s1)
-+    800039dc:	37fd                	addw	a5,a5,-1
-+    800039de:	0007891b          	sext.w	s2,a5
-+    800039e2:	d09c                	sw	a5,32(s1)
-   if(log.committing)
--    80003ae4:	50dc                	lw	a5,36(s1)
--    80003ae6:	ef9d                	bnez	a5,80003b24 <end_op+0x64>
-+    800039e4:	50dc                	lw	a5,36(s1)
-+    800039e6:	ef9d                	bnez	a5,80003a24 <end_op+0x6a>
-     panic("log.committing");
-   if(log.outstanding == 0){
--    80003ae8:	04091763          	bnez	s2,80003b36 <end_op+0x76>
-+    800039e8:	04091463          	bnez	s2,80003a30 <end_op+0x76>
-     do_commit = 1;
-     log.committing = 1;
--    80003aec:	0001f497          	auipc	s1,0x1f
--    80003af0:	80448493          	addi	s1,s1,-2044 # 800222f0 <log>
--    80003af4:	4785                	li	a5,1
--    80003af6:	d0dc                	sw	a5,36(s1)
-+    800039ec:	0001c497          	auipc	s1,0x1c
-+    800039f0:	01448493          	add	s1,s1,20 # 8001fa00 <log>
-+    800039f4:	4785                	li	a5,1
-+    800039f6:	d0dc                	sw	a5,36(s1)
-     /* begin_op() may be waiting for log space, */
-     /* and decrementing log.outstanding has decreased */
-     /* the amount of reserved space. */
-     wakeup(&log);
-   }
-   release(&log.lock);
--    80003af8:	8526                	mv	a0,s1
--    80003afa:	992fd0ef          	jal	80000c8c <release>
-+    800039f8:	8526                	mv	a0,s1
-+    800039fa:	a3efd0ef          	jal	80000c38 <release>
- }
- 
- static void
- commit()
- {
-   if (log.lh.n > 0) {
--    80003afe:	54dc                	lw	a5,44(s1)
--    80003b00:	04f04b63          	bgtz	a5,80003b56 <end_op+0x96>
-+    800039fe:	54dc                	lw	a5,44(s1)
-+    80003a00:	04f04b63          	bgtz	a5,80003a56 <end_op+0x9c>
-     acquire(&log.lock);
--    80003b04:	0001e497          	auipc	s1,0x1e
--    80003b08:	7ec48493          	addi	s1,s1,2028 # 800222f0 <log>
--    80003b0c:	8526                	mv	a0,s1
--    80003b0e:	8e6fd0ef          	jal	80000bf4 <acquire>
-+    80003a04:	0001c497          	auipc	s1,0x1c
-+    80003a08:	ffc48493          	add	s1,s1,-4 # 8001fa00 <log>
-+    80003a0c:	8526                	mv	a0,s1
-+    80003a0e:	992fd0ef          	jal	80000ba0 <acquire>
-     log.committing = 0;
--    80003b12:	0204a223          	sw	zero,36(s1)
-+    80003a12:	0204a223          	sw	zero,36(s1)
-     wakeup(&log);
--    80003b16:	8526                	mv	a0,s1
--    80003b18:	be2fe0ef          	jal	80001efa <wakeup>
-+    80003a16:	8526                	mv	a0,s1
-+    80003a18:	c30fe0ef          	jal	80001e48 <wakeup>
-     release(&log.lock);
--    80003b1c:	8526                	mv	a0,s1
--    80003b1e:	96efd0ef          	jal	80000c8c <release>
-+    80003a1c:	8526                	mv	a0,s1
-+    80003a1e:	a1afd0ef          	jal	80000c38 <release>
- }
--    80003b22:	a025                	j	80003b4a <end_op+0x8a>
--    80003b24:	ec4e                	sd	s3,24(sp)
--    80003b26:	e852                	sd	s4,16(sp)
--    80003b28:	e456                	sd	s5,8(sp)
-+    80003a22:	a00d                	j	80003a44 <end_op+0x8a>
-     panic("log.committing");
--    80003b2a:	00004517          	auipc	a0,0x4
--    80003b2e:	a3650513          	addi	a0,a0,-1482 # 80007560 <etext+0x560>
--    80003b32:	c63fc0ef          	jal	80000794 <panic>
-+    80003a24:	00004517          	auipc	a0,0x4
-+    80003a28:	c4c50513          	add	a0,a0,-948 # 80007670 <syscalls+0x1e0>
-+    80003a2c:	d33fc0ef          	jal	8000075e <panic>
-     wakeup(&log);
--    80003b36:	0001e497          	auipc	s1,0x1e
--    80003b3a:	7ba48493          	addi	s1,s1,1978 # 800222f0 <log>
--    80003b3e:	8526                	mv	a0,s1
--    80003b40:	bbafe0ef          	jal	80001efa <wakeup>
-+    80003a30:	0001c497          	auipc	s1,0x1c
-+    80003a34:	fd048493          	add	s1,s1,-48 # 8001fa00 <log>
-+    80003a38:	8526                	mv	a0,s1
-+    80003a3a:	c0efe0ef          	jal	80001e48 <wakeup>
-   release(&log.lock);
--    80003b44:	8526                	mv	a0,s1
--    80003b46:	946fd0ef          	jal	80000c8c <release>
--}
--    80003b4a:	70e2                	ld	ra,56(sp)
--    80003b4c:	7442                	ld	s0,48(sp)
--    80003b4e:	74a2                	ld	s1,40(sp)
--    80003b50:	7902                	ld	s2,32(sp)
--    80003b52:	6121                	addi	sp,sp,64
--    80003b54:	8082                	ret
--    80003b56:	ec4e                	sd	s3,24(sp)
--    80003b58:	e852                	sd	s4,16(sp)
--    80003b5a:	e456                	sd	s5,8(sp)
-+    80003a3e:	8526                	mv	a0,s1
-+    80003a40:	9f8fd0ef          	jal	80000c38 <release>
-+}
-+    80003a44:	70e2                	ld	ra,56(sp)
-+    80003a46:	7442                	ld	s0,48(sp)
-+    80003a48:	74a2                	ld	s1,40(sp)
-+    80003a4a:	7902                	ld	s2,32(sp)
-+    80003a4c:	69e2                	ld	s3,24(sp)
-+    80003a4e:	6a42                	ld	s4,16(sp)
-+    80003a50:	6aa2                	ld	s5,8(sp)
-+    80003a52:	6121                	add	sp,sp,64
-+    80003a54:	8082                	ret
-   for (tail = 0; tail < log.lh.n; tail++) {
--    80003b5c:	0001ea97          	auipc	s5,0x1e
--    80003b60:	7c4a8a93          	addi	s5,s5,1988 # 80022320 <log+0x30>
-+    80003a56:	0001ca97          	auipc	s5,0x1c
-+    80003a5a:	fdaa8a93          	add	s5,s5,-38 # 8001fa30 <log+0x30>
-     struct buf *to = bread(log.dev, log.start+tail+1); /* log block */
--    80003b64:	0001ea17          	auipc	s4,0x1e
--    80003b68:	78ca0a13          	addi	s4,s4,1932 # 800222f0 <log>
--    80003b6c:	018a2583          	lw	a1,24(s4)
--    80003b70:	012585bb          	addw	a1,a1,s2
--    80003b74:	2585                	addiw	a1,a1,1
--    80003b76:	028a2503          	lw	a0,40(s4)
--    80003b7a:	f0ffe0ef          	jal	80002a88 <bread>
--    80003b7e:	84aa                	mv	s1,a0
-+    80003a5e:	0001ca17          	auipc	s4,0x1c
-+    80003a62:	fa2a0a13          	add	s4,s4,-94 # 8001fa00 <log>
-+    80003a66:	018a2583          	lw	a1,24(s4)
-+    80003a6a:	012585bb          	addw	a1,a1,s2
-+    80003a6e:	2585                	addw	a1,a1,1
-+    80003a70:	028a2503          	lw	a0,40(s4)
-+    80003a74:	f5bfe0ef          	jal	800029ce <bread>
-+    80003a78:	84aa                	mv	s1,a0
-     struct buf *from = bread(log.dev, log.lh.block[tail]); /* cache block */
--    80003b80:	000aa583          	lw	a1,0(s5)
--    80003b84:	028a2503          	lw	a0,40(s4)
--    80003b88:	f01fe0ef          	jal	80002a88 <bread>
--    80003b8c:	89aa                	mv	s3,a0
-+    80003a7a:	000aa583          	lw	a1,0(s5)
-+    80003a7e:	028a2503          	lw	a0,40(s4)
-+    80003a82:	f4dfe0ef          	jal	800029ce <bread>
-+    80003a86:	89aa                	mv	s3,a0
-     memmove(to->data, from->data, BSIZE);
--    80003b8e:	40000613          	li	a2,1024
--    80003b92:	05850593          	addi	a1,a0,88
--    80003b96:	05848513          	addi	a0,s1,88
--    80003b9a:	98afd0ef          	jal	80000d24 <memmove>
-+    80003a88:	40000613          	li	a2,1024
-+    80003a8c:	05850593          	add	a1,a0,88
-+    80003a90:	05848513          	add	a0,s1,88
-+    80003a94:	a3cfd0ef          	jal	80000cd0 <memmove>
-     bwrite(to);  /* write the log */
--    80003b9e:	8526                	mv	a0,s1
--    80003ba0:	fbffe0ef          	jal	80002b5e <bwrite>
-+    80003a98:	8526                	mv	a0,s1
-+    80003a9a:	80aff0ef          	jal	80002aa4 <bwrite>
-     brelse(from);
--    80003ba4:	854e                	mv	a0,s3
--    80003ba6:	febfe0ef          	jal	80002b90 <brelse>
-+    80003a9e:	854e                	mv	a0,s3
-+    80003aa0:	836ff0ef          	jal	80002ad6 <brelse>
-     brelse(to);
--    80003baa:	8526                	mv	a0,s1
--    80003bac:	fe5fe0ef          	jal	80002b90 <brelse>
-+    80003aa4:	8526                	mv	a0,s1
-+    80003aa6:	830ff0ef          	jal	80002ad6 <brelse>
-   for (tail = 0; tail < log.lh.n; tail++) {
--    80003bb0:	2905                	addiw	s2,s2,1
--    80003bb2:	0a91                	addi	s5,s5,4
--    80003bb4:	02ca2783          	lw	a5,44(s4)
--    80003bb8:	faf94ae3          	blt	s2,a5,80003b6c <end_op+0xac>
-+    80003aaa:	2905                	addw	s2,s2,1
-+    80003aac:	0a91                	add	s5,s5,4
-+    80003aae:	02ca2783          	lw	a5,44(s4)
-+    80003ab2:	faf94ae3          	blt	s2,a5,80003a66 <end_op+0xac>
-     write_log();     /* Write modified blocks from cache to log */
-     write_head();    /* Write header to disk -- the real commit */
--    80003bbc:	d11ff0ef          	jal	800038cc <write_head>
-+    80003ab6:	d11ff0ef          	jal	800037c6 <write_head>
-     install_trans(0); /* Now install writes to home locations */
--    80003bc0:	4501                	li	a0,0
--    80003bc2:	d69ff0ef          	jal	8000392a <install_trans>
-+    80003aba:	4501                	li	a0,0
-+    80003abc:	d69ff0ef          	jal	80003824 <install_trans>
-     log.lh.n = 0;
--    80003bc6:	0001e797          	auipc	a5,0x1e
--    80003bca:	7407ab23          	sw	zero,1878(a5) # 8002231c <log+0x2c>
-+    80003ac0:	0001c797          	auipc	a5,0x1c
-+    80003ac4:	f607a623          	sw	zero,-148(a5) # 8001fa2c <log+0x2c>
-     write_head();    /* Erase the transaction from the log */
--    80003bce:	cffff0ef          	jal	800038cc <write_head>
--    80003bd2:	69e2                	ld	s3,24(sp)
--    80003bd4:	6a42                	ld	s4,16(sp)
--    80003bd6:	6aa2                	ld	s5,8(sp)
--    80003bd8:	b735                	j	80003b04 <end_op+0x44>
-+    80003ac8:	cffff0ef          	jal	800037c6 <write_head>
-+    80003acc:	bf25                	j	80003a04 <end_op+0x4a>
- 
--0000000080003bda <log_write>:
-+0000000080003ace <log_write>:
- /*   modify bp->data[] */
- /*   log_write(bp) */
- /*   brelse(bp) */
- void
- log_write(struct buf *b)
- {
--    80003bda:	1101                	addi	sp,sp,-32
--    80003bdc:	ec06                	sd	ra,24(sp)
--    80003bde:	e822                	sd	s0,16(sp)
--    80003be0:	e426                	sd	s1,8(sp)
--    80003be2:	e04a                	sd	s2,0(sp)
--    80003be4:	1000                	addi	s0,sp,32
--    80003be6:	84aa                	mv	s1,a0
-+    80003ace:	1101                	add	sp,sp,-32
-+    80003ad0:	ec06                	sd	ra,24(sp)
-+    80003ad2:	e822                	sd	s0,16(sp)
-+    80003ad4:	e426                	sd	s1,8(sp)
-+    80003ad6:	e04a                	sd	s2,0(sp)
-+    80003ad8:	1000                	add	s0,sp,32
-+    80003ada:	84aa                	mv	s1,a0
-   int i;
- 
-   acquire(&log.lock);
--    80003be8:	0001e917          	auipc	s2,0x1e
--    80003bec:	70890913          	addi	s2,s2,1800 # 800222f0 <log>
--    80003bf0:	854a                	mv	a0,s2
--    80003bf2:	802fd0ef          	jal	80000bf4 <acquire>
-+    80003adc:	0001c917          	auipc	s2,0x1c
-+    80003ae0:	f2490913          	add	s2,s2,-220 # 8001fa00 <log>
-+    80003ae4:	854a                	mv	a0,s2
-+    80003ae6:	8bafd0ef          	jal	80000ba0 <acquire>
-   if (log.lh.n >= LOGSIZE || log.lh.n >= log.size - 1)
--    80003bf6:	02c92603          	lw	a2,44(s2)
--    80003bfa:	47f5                	li	a5,29
--    80003bfc:	06c7c363          	blt	a5,a2,80003c62 <log_write+0x88>
--    80003c00:	0001e797          	auipc	a5,0x1e
--    80003c04:	70c7a783          	lw	a5,1804(a5) # 8002230c <log+0x1c>
--    80003c08:	37fd                	addiw	a5,a5,-1
--    80003c0a:	04f65c63          	bge	a2,a5,80003c62 <log_write+0x88>
-+    80003aea:	02c92603          	lw	a2,44(s2)
-+    80003aee:	47f5                	li	a5,29
-+    80003af0:	06c7c363          	blt	a5,a2,80003b56 <log_write+0x88>
-+    80003af4:	0001c797          	auipc	a5,0x1c
-+    80003af8:	f287a783          	lw	a5,-216(a5) # 8001fa1c <log+0x1c>
-+    80003afc:	37fd                	addw	a5,a5,-1
-+    80003afe:	04f65c63          	bge	a2,a5,80003b56 <log_write+0x88>
-     panic("too big a transaction");
-   if (log.outstanding < 1)
--    80003c0e:	0001e797          	auipc	a5,0x1e
--    80003c12:	7027a783          	lw	a5,1794(a5) # 80022310 <log+0x20>
--    80003c16:	04f05c63          	blez	a5,80003c6e <log_write+0x94>
-+    80003b02:	0001c797          	auipc	a5,0x1c
-+    80003b06:	f1e7a783          	lw	a5,-226(a5) # 8001fa20 <log+0x20>
-+    80003b0a:	04f05c63          	blez	a5,80003b62 <log_write+0x94>
-     panic("log_write outside of trans");
- 
-   for (i = 0; i < log.lh.n; i++) {
--    80003c1a:	4781                	li	a5,0
--    80003c1c:	04c05f63          	blez	a2,80003c7a <log_write+0xa0>
-+    80003b0e:	4781                	li	a5,0
-+    80003b10:	04c05f63          	blez	a2,80003b6e <log_write+0xa0>
-     if (log.lh.block[i] == b->blockno)   /* log absorption */
--    80003c20:	44cc                	lw	a1,12(s1)
--    80003c22:	0001e717          	auipc	a4,0x1e
--    80003c26:	6fe70713          	addi	a4,a4,1790 # 80022320 <log+0x30>
-+    80003b14:	44cc                	lw	a1,12(s1)
-+    80003b16:	0001c717          	auipc	a4,0x1c
-+    80003b1a:	f1a70713          	add	a4,a4,-230 # 8001fa30 <log+0x30>
-   for (i = 0; i < log.lh.n; i++) {
--    80003c2a:	4781                	li	a5,0
-+    80003b1e:	4781                	li	a5,0
-     if (log.lh.block[i] == b->blockno)   /* log absorption */
--    80003c2c:	4314                	lw	a3,0(a4)
--    80003c2e:	04b68663          	beq	a3,a1,80003c7a <log_write+0xa0>
-+    80003b20:	4314                	lw	a3,0(a4)
-+    80003b22:	04b68663          	beq	a3,a1,80003b6e <log_write+0xa0>
-   for (i = 0; i < log.lh.n; i++) {
--    80003c32:	2785                	addiw	a5,a5,1
--    80003c34:	0711                	addi	a4,a4,4
--    80003c36:	fef61be3          	bne	a2,a5,80003c2c <log_write+0x52>
-+    80003b26:	2785                	addw	a5,a5,1
-+    80003b28:	0711                	add	a4,a4,4
-+    80003b2a:	fef61be3          	bne	a2,a5,80003b20 <log_write+0x52>
-       break;
-   }
-   log.lh.block[i] = b->blockno;
--    80003c3a:	0621                	addi	a2,a2,8
--    80003c3c:	060a                	slli	a2,a2,0x2
--    80003c3e:	0001e797          	auipc	a5,0x1e
--    80003c42:	6b278793          	addi	a5,a5,1714 # 800222f0 <log>
--    80003c46:	97b2                	add	a5,a5,a2
--    80003c48:	44d8                	lw	a4,12(s1)
--    80003c4a:	cb98                	sw	a4,16(a5)
-+    80003b2e:	0621                	add	a2,a2,8
-+    80003b30:	060a                	sll	a2,a2,0x2
-+    80003b32:	0001c797          	auipc	a5,0x1c
-+    80003b36:	ece78793          	add	a5,a5,-306 # 8001fa00 <log>
-+    80003b3a:	97b2                	add	a5,a5,a2
-+    80003b3c:	44d8                	lw	a4,12(s1)
-+    80003b3e:	cb98                	sw	a4,16(a5)
-   if (i == log.lh.n) {  /* Add new block to log? */
-     bpin(b);
--    80003c4c:	8526                	mv	a0,s1
--    80003c4e:	fcbfe0ef          	jal	80002c18 <bpin>
-+    80003b40:	8526                	mv	a0,s1
-+    80003b42:	81cff0ef          	jal	80002b5e <bpin>
-     log.lh.n++;
--    80003c52:	0001e717          	auipc	a4,0x1e
--    80003c56:	69e70713          	addi	a4,a4,1694 # 800222f0 <log>
--    80003c5a:	575c                	lw	a5,44(a4)
--    80003c5c:	2785                	addiw	a5,a5,1
--    80003c5e:	d75c                	sw	a5,44(a4)
--    80003c60:	a80d                	j	80003c92 <log_write+0xb8>
-+    80003b46:	0001c717          	auipc	a4,0x1c
-+    80003b4a:	eba70713          	add	a4,a4,-326 # 8001fa00 <log>
-+    80003b4e:	575c                	lw	a5,44(a4)
-+    80003b50:	2785                	addw	a5,a5,1
-+    80003b52:	d75c                	sw	a5,44(a4)
-+    80003b54:	a80d                	j	80003b86 <log_write+0xb8>
-     panic("too big a transaction");
--    80003c62:	00004517          	auipc	a0,0x4
--    80003c66:	90e50513          	addi	a0,a0,-1778 # 80007570 <etext+0x570>
--    80003c6a:	b2bfc0ef          	jal	80000794 <panic>
-+    80003b56:	00004517          	auipc	a0,0x4
-+    80003b5a:	b2a50513          	add	a0,a0,-1238 # 80007680 <syscalls+0x1f0>
-+    80003b5e:	c01fc0ef          	jal	8000075e <panic>
-     panic("log_write outside of trans");
--    80003c6e:	00004517          	auipc	a0,0x4
--    80003c72:	91a50513          	addi	a0,a0,-1766 # 80007588 <etext+0x588>
--    80003c76:	b1ffc0ef          	jal	80000794 <panic>
-+    80003b62:	00004517          	auipc	a0,0x4
-+    80003b66:	b3650513          	add	a0,a0,-1226 # 80007698 <syscalls+0x208>
-+    80003b6a:	bf5fc0ef          	jal	8000075e <panic>
-   log.lh.block[i] = b->blockno;
--    80003c7a:	00878693          	addi	a3,a5,8
--    80003c7e:	068a                	slli	a3,a3,0x2
--    80003c80:	0001e717          	auipc	a4,0x1e
--    80003c84:	67070713          	addi	a4,a4,1648 # 800222f0 <log>
--    80003c88:	9736                	add	a4,a4,a3
--    80003c8a:	44d4                	lw	a3,12(s1)
--    80003c8c:	cb14                	sw	a3,16(a4)
-+    80003b6e:	00878693          	add	a3,a5,8
-+    80003b72:	068a                	sll	a3,a3,0x2
-+    80003b74:	0001c717          	auipc	a4,0x1c
-+    80003b78:	e8c70713          	add	a4,a4,-372 # 8001fa00 <log>
-+    80003b7c:	9736                	add	a4,a4,a3
-+    80003b7e:	44d4                	lw	a3,12(s1)
-+    80003b80:	cb14                	sw	a3,16(a4)
-   if (i == log.lh.n) {  /* Add new block to log? */
--    80003c8e:	faf60fe3          	beq	a2,a5,80003c4c <log_write+0x72>
-+    80003b82:	faf60fe3          	beq	a2,a5,80003b40 <log_write+0x72>
-   }
-   release(&log.lock);
--    80003c92:	0001e517          	auipc	a0,0x1e
--    80003c96:	65e50513          	addi	a0,a0,1630 # 800222f0 <log>
--    80003c9a:	ff3fc0ef          	jal	80000c8c <release>
--}
--    80003c9e:	60e2                	ld	ra,24(sp)
--    80003ca0:	6442                	ld	s0,16(sp)
--    80003ca2:	64a2                	ld	s1,8(sp)
--    80003ca4:	6902                	ld	s2,0(sp)
--    80003ca6:	6105                	addi	sp,sp,32
--    80003ca8:	8082                	ret
--
--0000000080003caa <initsleeplock>:
-+    80003b86:	0001c517          	auipc	a0,0x1c
-+    80003b8a:	e7a50513          	add	a0,a0,-390 # 8001fa00 <log>
-+    80003b8e:	8aafd0ef          	jal	80000c38 <release>
-+}
-+    80003b92:	60e2                	ld	ra,24(sp)
-+    80003b94:	6442                	ld	s0,16(sp)
-+    80003b96:	64a2                	ld	s1,8(sp)
-+    80003b98:	6902                	ld	s2,0(sp)
-+    80003b9a:	6105                	add	sp,sp,32
-+    80003b9c:	8082                	ret
-+
-+0000000080003b9e <initsleeplock>:
- #include "proc.h"
- #include "sleeplock.h"
- 
- void
- initsleeplock(struct sleeplock *lk, char *name)
- {
--    80003caa:	1101                	addi	sp,sp,-32
--    80003cac:	ec06                	sd	ra,24(sp)
--    80003cae:	e822                	sd	s0,16(sp)
--    80003cb0:	e426                	sd	s1,8(sp)
--    80003cb2:	e04a                	sd	s2,0(sp)
--    80003cb4:	1000                	addi	s0,sp,32
--    80003cb6:	84aa                	mv	s1,a0
--    80003cb8:	892e                	mv	s2,a1
-+    80003b9e:	1101                	add	sp,sp,-32
-+    80003ba0:	ec06                	sd	ra,24(sp)
-+    80003ba2:	e822                	sd	s0,16(sp)
-+    80003ba4:	e426                	sd	s1,8(sp)
-+    80003ba6:	e04a                	sd	s2,0(sp)
-+    80003ba8:	1000                	add	s0,sp,32
-+    80003baa:	84aa                	mv	s1,a0
-+    80003bac:	892e                	mv	s2,a1
-   initlock(&lk->lk, "sleep lock");
--    80003cba:	00004597          	auipc	a1,0x4
--    80003cbe:	8ee58593          	addi	a1,a1,-1810 # 800075a8 <etext+0x5a8>
--    80003cc2:	0521                	addi	a0,a0,8
--    80003cc4:	eb1fc0ef          	jal	80000b74 <initlock>
-+    80003bae:	00004597          	auipc	a1,0x4
-+    80003bb2:	b0a58593          	add	a1,a1,-1270 # 800076b8 <syscalls+0x228>
-+    80003bb6:	0521                	add	a0,a0,8
-+    80003bb8:	f69fc0ef          	jal	80000b20 <initlock>
-   lk->name = name;
--    80003cc8:	0324b023          	sd	s2,32(s1)
-+    80003bbc:	0324b023          	sd	s2,32(s1)
-   lk->locked = 0;
--    80003ccc:	0004a023          	sw	zero,0(s1)
-+    80003bc0:	0004a023          	sw	zero,0(s1)
-   lk->pid = 0;
--    80003cd0:	0204a423          	sw	zero,40(s1)
-+    80003bc4:	0204a423          	sw	zero,40(s1)
- }
--    80003cd4:	60e2                	ld	ra,24(sp)
--    80003cd6:	6442                	ld	s0,16(sp)
--    80003cd8:	64a2                	ld	s1,8(sp)
--    80003cda:	6902                	ld	s2,0(sp)
--    80003cdc:	6105                	addi	sp,sp,32
--    80003cde:	8082                	ret
-+    80003bc8:	60e2                	ld	ra,24(sp)
-+    80003bca:	6442                	ld	s0,16(sp)
-+    80003bcc:	64a2                	ld	s1,8(sp)
-+    80003bce:	6902                	ld	s2,0(sp)
-+    80003bd0:	6105                	add	sp,sp,32
-+    80003bd2:	8082                	ret
- 
--0000000080003ce0 <acquiresleep>:
-+0000000080003bd4 <acquiresleep>:
- 
- void
- acquiresleep(struct sleeplock *lk)
- {
--    80003ce0:	1101                	addi	sp,sp,-32
--    80003ce2:	ec06                	sd	ra,24(sp)
--    80003ce4:	e822                	sd	s0,16(sp)
--    80003ce6:	e426                	sd	s1,8(sp)
--    80003ce8:	e04a                	sd	s2,0(sp)
--    80003cea:	1000                	addi	s0,sp,32
--    80003cec:	84aa                	mv	s1,a0
-+    80003bd4:	1101                	add	sp,sp,-32
-+    80003bd6:	ec06                	sd	ra,24(sp)
-+    80003bd8:	e822                	sd	s0,16(sp)
-+    80003bda:	e426                	sd	s1,8(sp)
-+    80003bdc:	e04a                	sd	s2,0(sp)
-+    80003bde:	1000                	add	s0,sp,32
-+    80003be0:	84aa                	mv	s1,a0
-   acquire(&lk->lk);
--    80003cee:	00850913          	addi	s2,a0,8
--    80003cf2:	854a                	mv	a0,s2
--    80003cf4:	f01fc0ef          	jal	80000bf4 <acquire>
-+    80003be2:	00850913          	add	s2,a0,8
-+    80003be6:	854a                	mv	a0,s2
-+    80003be8:	fb9fc0ef          	jal	80000ba0 <acquire>
-   while (lk->locked) {
--    80003cf8:	409c                	lw	a5,0(s1)
--    80003cfa:	c799                	beqz	a5,80003d08 <acquiresleep+0x28>
-+    80003bec:	409c                	lw	a5,0(s1)
-+    80003bee:	c799                	beqz	a5,80003bfc <acquiresleep+0x28>
-     sleep(lk, &lk->lk);
--    80003cfc:	85ca                	mv	a1,s2
--    80003cfe:	8526                	mv	a0,s1
--    80003d00:	9aefe0ef          	jal	80001eae <sleep>
-+    80003bf0:	85ca                	mv	a1,s2
-+    80003bf2:	8526                	mv	a0,s1
-+    80003bf4:	a08fe0ef          	jal	80001dfc <sleep>
-   while (lk->locked) {
--    80003d04:	409c                	lw	a5,0(s1)
--    80003d06:	fbfd                	bnez	a5,80003cfc <acquiresleep+0x1c>
-+    80003bf8:	409c                	lw	a5,0(s1)
-+    80003bfa:	fbfd                	bnez	a5,80003bf0 <acquiresleep+0x1c>
-   }
-   lk->locked = 1;
--    80003d08:	4785                	li	a5,1
--    80003d0a:	c09c                	sw	a5,0(s1)
-+    80003bfc:	4785                	li	a5,1
-+    80003bfe:	c09c                	sw	a5,0(s1)
-   lk->pid = myproc()->pid;
--    80003d0c:	bd5fd0ef          	jal	800018e0 <myproc>
--    80003d10:	591c                	lw	a5,48(a0)
--    80003d12:	d49c                	sw	a5,40(s1)
-+    80003c00:	c31fd0ef          	jal	80001830 <myproc>
-+    80003c04:	591c                	lw	a5,48(a0)
-+    80003c06:	d49c                	sw	a5,40(s1)
-   release(&lk->lk);
--    80003d14:	854a                	mv	a0,s2
--    80003d16:	f77fc0ef          	jal	80000c8c <release>
-+    80003c08:	854a                	mv	a0,s2
-+    80003c0a:	82efd0ef          	jal	80000c38 <release>
- }
--    80003d1a:	60e2                	ld	ra,24(sp)
--    80003d1c:	6442                	ld	s0,16(sp)
--    80003d1e:	64a2                	ld	s1,8(sp)
--    80003d20:	6902                	ld	s2,0(sp)
--    80003d22:	6105                	addi	sp,sp,32
--    80003d24:	8082                	ret
-+    80003c0e:	60e2                	ld	ra,24(sp)
-+    80003c10:	6442                	ld	s0,16(sp)
-+    80003c12:	64a2                	ld	s1,8(sp)
-+    80003c14:	6902                	ld	s2,0(sp)
-+    80003c16:	6105                	add	sp,sp,32
-+    80003c18:	8082                	ret
- 
--0000000080003d26 <releasesleep>:
-+0000000080003c1a <releasesleep>:
- 
- void
- releasesleep(struct sleeplock *lk)
- {
--    80003d26:	1101                	addi	sp,sp,-32
--    80003d28:	ec06                	sd	ra,24(sp)
--    80003d2a:	e822                	sd	s0,16(sp)
--    80003d2c:	e426                	sd	s1,8(sp)
--    80003d2e:	e04a                	sd	s2,0(sp)
--    80003d30:	1000                	addi	s0,sp,32
--    80003d32:	84aa                	mv	s1,a0
-+    80003c1a:	1101                	add	sp,sp,-32
-+    80003c1c:	ec06                	sd	ra,24(sp)
-+    80003c1e:	e822                	sd	s0,16(sp)
-+    80003c20:	e426                	sd	s1,8(sp)
-+    80003c22:	e04a                	sd	s2,0(sp)
-+    80003c24:	1000                	add	s0,sp,32
-+    80003c26:	84aa                	mv	s1,a0
-   acquire(&lk->lk);
--    80003d34:	00850913          	addi	s2,a0,8
--    80003d38:	854a                	mv	a0,s2
--    80003d3a:	ebbfc0ef          	jal	80000bf4 <acquire>
-+    80003c28:	00850913          	add	s2,a0,8
-+    80003c2c:	854a                	mv	a0,s2
-+    80003c2e:	f73fc0ef          	jal	80000ba0 <acquire>
-   lk->locked = 0;
--    80003d3e:	0004a023          	sw	zero,0(s1)
-+    80003c32:	0004a023          	sw	zero,0(s1)
-   lk->pid = 0;
--    80003d42:	0204a423          	sw	zero,40(s1)
-+    80003c36:	0204a423          	sw	zero,40(s1)
-   wakeup(lk);
--    80003d46:	8526                	mv	a0,s1
--    80003d48:	9b2fe0ef          	jal	80001efa <wakeup>
-+    80003c3a:	8526                	mv	a0,s1
-+    80003c3c:	a0cfe0ef          	jal	80001e48 <wakeup>
-   release(&lk->lk);
--    80003d4c:	854a                	mv	a0,s2
--    80003d4e:	f3ffc0ef          	jal	80000c8c <release>
-+    80003c40:	854a                	mv	a0,s2
-+    80003c42:	ff7fc0ef          	jal	80000c38 <release>
- }
--    80003d52:	60e2                	ld	ra,24(sp)
--    80003d54:	6442                	ld	s0,16(sp)
--    80003d56:	64a2                	ld	s1,8(sp)
--    80003d58:	6902                	ld	s2,0(sp)
--    80003d5a:	6105                	addi	sp,sp,32
--    80003d5c:	8082                	ret
-+    80003c46:	60e2                	ld	ra,24(sp)
-+    80003c48:	6442                	ld	s0,16(sp)
-+    80003c4a:	64a2                	ld	s1,8(sp)
-+    80003c4c:	6902                	ld	s2,0(sp)
-+    80003c4e:	6105                	add	sp,sp,32
-+    80003c50:	8082                	ret
- 
--0000000080003d5e <holdingsleep>:
-+0000000080003c52 <holdingsleep>:
- 
- int
- holdingsleep(struct sleeplock *lk)
- {
--    80003d5e:	7179                	addi	sp,sp,-48
--    80003d60:	f406                	sd	ra,40(sp)
--    80003d62:	f022                	sd	s0,32(sp)
--    80003d64:	ec26                	sd	s1,24(sp)
--    80003d66:	e84a                	sd	s2,16(sp)
--    80003d68:	1800                	addi	s0,sp,48
--    80003d6a:	84aa                	mv	s1,a0
-+    80003c52:	7179                	add	sp,sp,-48
-+    80003c54:	f406                	sd	ra,40(sp)
-+    80003c56:	f022                	sd	s0,32(sp)
-+    80003c58:	ec26                	sd	s1,24(sp)
-+    80003c5a:	e84a                	sd	s2,16(sp)
-+    80003c5c:	e44e                	sd	s3,8(sp)
-+    80003c5e:	1800                	add	s0,sp,48
-+    80003c60:	84aa                	mv	s1,a0
-   int r;
-   
-   acquire(&lk->lk);
--    80003d6c:	00850913          	addi	s2,a0,8
--    80003d70:	854a                	mv	a0,s2
--    80003d72:	e83fc0ef          	jal	80000bf4 <acquire>
-+    80003c62:	00850913          	add	s2,a0,8
-+    80003c66:	854a                	mv	a0,s2
-+    80003c68:	f39fc0ef          	jal	80000ba0 <acquire>
-   r = lk->locked && (lk->pid == myproc()->pid);
--    80003d76:	409c                	lw	a5,0(s1)
--    80003d78:	ef81                	bnez	a5,80003d90 <holdingsleep+0x32>
--    80003d7a:	4481                	li	s1,0
-+    80003c6c:	409c                	lw	a5,0(s1)
-+    80003c6e:	ef89                	bnez	a5,80003c88 <holdingsleep+0x36>
-+    80003c70:	4481                	li	s1,0
-   release(&lk->lk);
--    80003d7c:	854a                	mv	a0,s2
--    80003d7e:	f0ffc0ef          	jal	80000c8c <release>
-+    80003c72:	854a                	mv	a0,s2
-+    80003c74:	fc5fc0ef          	jal	80000c38 <release>
-   return r;
- }
--    80003d82:	8526                	mv	a0,s1
--    80003d84:	70a2                	ld	ra,40(sp)
--    80003d86:	7402                	ld	s0,32(sp)
--    80003d88:	64e2                	ld	s1,24(sp)
--    80003d8a:	6942                	ld	s2,16(sp)
--    80003d8c:	6145                	addi	sp,sp,48
--    80003d8e:	8082                	ret
--    80003d90:	e44e                	sd	s3,8(sp)
-+    80003c78:	8526                	mv	a0,s1
-+    80003c7a:	70a2                	ld	ra,40(sp)
-+    80003c7c:	7402                	ld	s0,32(sp)
-+    80003c7e:	64e2                	ld	s1,24(sp)
-+    80003c80:	6942                	ld	s2,16(sp)
-+    80003c82:	69a2                	ld	s3,8(sp)
-+    80003c84:	6145                	add	sp,sp,48
-+    80003c86:	8082                	ret
-   r = lk->locked && (lk->pid == myproc()->pid);
--    80003d92:	0284a983          	lw	s3,40(s1)
--    80003d96:	b4bfd0ef          	jal	800018e0 <myproc>
--    80003d9a:	5904                	lw	s1,48(a0)
--    80003d9c:	413484b3          	sub	s1,s1,s3
--    80003da0:	0014b493          	seqz	s1,s1
--    80003da4:	69a2                	ld	s3,8(sp)
--    80003da6:	bfd9                	j	80003d7c <holdingsleep+0x1e>
--
--0000000080003da8 <fileinit>:
-+    80003c88:	0284a983          	lw	s3,40(s1)
-+    80003c8c:	ba5fd0ef          	jal	80001830 <myproc>
-+    80003c90:	5904                	lw	s1,48(a0)
-+    80003c92:	413484b3          	sub	s1,s1,s3
-+    80003c96:	0014b493          	seqz	s1,s1
-+    80003c9a:	bfe1                	j	80003c72 <holdingsleep+0x20>
-+
-+0000000080003c9c <fileinit>:
-   struct file file[NFILE];
- } ftable;
- 
- void
- fileinit(void)
- {
--    80003da8:	1141                	addi	sp,sp,-16
--    80003daa:	e406                	sd	ra,8(sp)
--    80003dac:	e022                	sd	s0,0(sp)
--    80003dae:	0800                	addi	s0,sp,16
-+    80003c9c:	1141                	add	sp,sp,-16
-+    80003c9e:	e406                	sd	ra,8(sp)
-+    80003ca0:	e022                	sd	s0,0(sp)
-+    80003ca2:	0800                	add	s0,sp,16
-   initlock(&ftable.lock, "ftable");
--    80003db0:	00004597          	auipc	a1,0x4
--    80003db4:	80858593          	addi	a1,a1,-2040 # 800075b8 <etext+0x5b8>
--    80003db8:	0001e517          	auipc	a0,0x1e
--    80003dbc:	68050513          	addi	a0,a0,1664 # 80022438 <ftable>
--    80003dc0:	db5fc0ef          	jal	80000b74 <initlock>
-+    80003ca4:	00004597          	auipc	a1,0x4
-+    80003ca8:	a2458593          	add	a1,a1,-1500 # 800076c8 <syscalls+0x238>
-+    80003cac:	0001c517          	auipc	a0,0x1c
-+    80003cb0:	e9c50513          	add	a0,a0,-356 # 8001fb48 <ftable>
-+    80003cb4:	e6dfc0ef          	jal	80000b20 <initlock>
- }
--    80003dc4:	60a2                	ld	ra,8(sp)
--    80003dc6:	6402                	ld	s0,0(sp)
--    80003dc8:	0141                	addi	sp,sp,16
--    80003dca:	8082                	ret
-+    80003cb8:	60a2                	ld	ra,8(sp)
-+    80003cba:	6402                	ld	s0,0(sp)
-+    80003cbc:	0141                	add	sp,sp,16
-+    80003cbe:	8082                	ret
- 
--0000000080003dcc <filealloc>:
-+0000000080003cc0 <filealloc>:
- 
- /* Allocate a file structure. */
- struct file*
- filealloc(void)
- {
--    80003dcc:	1101                	addi	sp,sp,-32
--    80003dce:	ec06                	sd	ra,24(sp)
--    80003dd0:	e822                	sd	s0,16(sp)
--    80003dd2:	e426                	sd	s1,8(sp)
--    80003dd4:	1000                	addi	s0,sp,32
-+    80003cc0:	1101                	add	sp,sp,-32
-+    80003cc2:	ec06                	sd	ra,24(sp)
-+    80003cc4:	e822                	sd	s0,16(sp)
-+    80003cc6:	e426                	sd	s1,8(sp)
-+    80003cc8:	1000                	add	s0,sp,32
-   struct file *f;
- 
-   acquire(&ftable.lock);
--    80003dd6:	0001e517          	auipc	a0,0x1e
--    80003dda:	66250513          	addi	a0,a0,1634 # 80022438 <ftable>
--    80003dde:	e17fc0ef          	jal	80000bf4 <acquire>
-+    80003cca:	0001c517          	auipc	a0,0x1c
-+    80003cce:	e7e50513          	add	a0,a0,-386 # 8001fb48 <ftable>
-+    80003cd2:	ecffc0ef          	jal	80000ba0 <acquire>
-   for(f = ftable.file; f < ftable.file + NFILE; f++){
--    80003de2:	0001e497          	auipc	s1,0x1e
--    80003de6:	66e48493          	addi	s1,s1,1646 # 80022450 <ftable+0x18>
--    80003dea:	0001f717          	auipc	a4,0x1f
--    80003dee:	60670713          	addi	a4,a4,1542 # 800233f0 <disk>
-+    80003cd6:	0001c497          	auipc	s1,0x1c
-+    80003cda:	e8a48493          	add	s1,s1,-374 # 8001fb60 <ftable+0x18>
-+    80003cde:	0001d717          	auipc	a4,0x1d
-+    80003ce2:	e2270713          	add	a4,a4,-478 # 80020b00 <disk>
-     if(f->ref == 0){
--    80003df2:	40dc                	lw	a5,4(s1)
--    80003df4:	cf89                	beqz	a5,80003e0e <filealloc+0x42>
-+    80003ce6:	40dc                	lw	a5,4(s1)
-+    80003ce8:	cf89                	beqz	a5,80003d02 <filealloc+0x42>
-   for(f = ftable.file; f < ftable.file + NFILE; f++){
--    80003df6:	02848493          	addi	s1,s1,40
--    80003dfa:	fee49ce3          	bne	s1,a4,80003df2 <filealloc+0x26>
-+    80003cea:	02848493          	add	s1,s1,40
-+    80003cee:	fee49ce3          	bne	s1,a4,80003ce6 <filealloc+0x26>
-       f->ref = 1;
-       release(&ftable.lock);
-       return f;
-     }
-   }
-   release(&ftable.lock);
--    80003dfe:	0001e517          	auipc	a0,0x1e
--    80003e02:	63a50513          	addi	a0,a0,1594 # 80022438 <ftable>
--    80003e06:	e87fc0ef          	jal	80000c8c <release>
-+    80003cf2:	0001c517          	auipc	a0,0x1c
-+    80003cf6:	e5650513          	add	a0,a0,-426 # 8001fb48 <ftable>
-+    80003cfa:	f3ffc0ef          	jal	80000c38 <release>
-   return 0;
--    80003e0a:	4481                	li	s1,0
--    80003e0c:	a809                	j	80003e1e <filealloc+0x52>
-+    80003cfe:	4481                	li	s1,0
-+    80003d00:	a809                	j	80003d12 <filealloc+0x52>
-       f->ref = 1;
--    80003e0e:	4785                	li	a5,1
--    80003e10:	c0dc                	sw	a5,4(s1)
-+    80003d02:	4785                	li	a5,1
-+    80003d04:	c0dc                	sw	a5,4(s1)
-       release(&ftable.lock);
--    80003e12:	0001e517          	auipc	a0,0x1e
--    80003e16:	62650513          	addi	a0,a0,1574 # 80022438 <ftable>
--    80003e1a:	e73fc0ef          	jal	80000c8c <release>
-+    80003d06:	0001c517          	auipc	a0,0x1c
-+    80003d0a:	e4250513          	add	a0,a0,-446 # 8001fb48 <ftable>
-+    80003d0e:	f2bfc0ef          	jal	80000c38 <release>
- }
--    80003e1e:	8526                	mv	a0,s1
--    80003e20:	60e2                	ld	ra,24(sp)
--    80003e22:	6442                	ld	s0,16(sp)
--    80003e24:	64a2                	ld	s1,8(sp)
--    80003e26:	6105                	addi	sp,sp,32
--    80003e28:	8082                	ret
-+    80003d12:	8526                	mv	a0,s1
-+    80003d14:	60e2                	ld	ra,24(sp)
-+    80003d16:	6442                	ld	s0,16(sp)
-+    80003d18:	64a2                	ld	s1,8(sp)
-+    80003d1a:	6105                	add	sp,sp,32
-+    80003d1c:	8082                	ret
- 
--0000000080003e2a <filedup>:
-+0000000080003d1e <filedup>:
- 
- /* Increment ref count for file f. */
- struct file*
- filedup(struct file *f)
- {
--    80003e2a:	1101                	addi	sp,sp,-32
--    80003e2c:	ec06                	sd	ra,24(sp)
--    80003e2e:	e822                	sd	s0,16(sp)
--    80003e30:	e426                	sd	s1,8(sp)
--    80003e32:	1000                	addi	s0,sp,32
--    80003e34:	84aa                	mv	s1,a0
-+    80003d1e:	1101                	add	sp,sp,-32
-+    80003d20:	ec06                	sd	ra,24(sp)
-+    80003d22:	e822                	sd	s0,16(sp)
-+    80003d24:	e426                	sd	s1,8(sp)
-+    80003d26:	1000                	add	s0,sp,32
-+    80003d28:	84aa                	mv	s1,a0
-   acquire(&ftable.lock);
--    80003e36:	0001e517          	auipc	a0,0x1e
--    80003e3a:	60250513          	addi	a0,a0,1538 # 80022438 <ftable>
--    80003e3e:	db7fc0ef          	jal	80000bf4 <acquire>
-+    80003d2a:	0001c517          	auipc	a0,0x1c
-+    80003d2e:	e1e50513          	add	a0,a0,-482 # 8001fb48 <ftable>
-+    80003d32:	e6ffc0ef          	jal	80000ba0 <acquire>
-   if(f->ref < 1)
--    80003e42:	40dc                	lw	a5,4(s1)
--    80003e44:	02f05063          	blez	a5,80003e64 <filedup+0x3a>
-+    80003d36:	40dc                	lw	a5,4(s1)
-+    80003d38:	02f05063          	blez	a5,80003d58 <filedup+0x3a>
-     panic("filedup");
-   f->ref++;
--    80003e48:	2785                	addiw	a5,a5,1
--    80003e4a:	c0dc                	sw	a5,4(s1)
-+    80003d3c:	2785                	addw	a5,a5,1
-+    80003d3e:	c0dc                	sw	a5,4(s1)
-   release(&ftable.lock);
--    80003e4c:	0001e517          	auipc	a0,0x1e
--    80003e50:	5ec50513          	addi	a0,a0,1516 # 80022438 <ftable>
--    80003e54:	e39fc0ef          	jal	80000c8c <release>
-+    80003d40:	0001c517          	auipc	a0,0x1c
-+    80003d44:	e0850513          	add	a0,a0,-504 # 8001fb48 <ftable>
-+    80003d48:	ef1fc0ef          	jal	80000c38 <release>
-   return f;
- }
--    80003e58:	8526                	mv	a0,s1
--    80003e5a:	60e2                	ld	ra,24(sp)
--    80003e5c:	6442                	ld	s0,16(sp)
--    80003e5e:	64a2                	ld	s1,8(sp)
--    80003e60:	6105                	addi	sp,sp,32
--    80003e62:	8082                	ret
-+    80003d4c:	8526                	mv	a0,s1
-+    80003d4e:	60e2                	ld	ra,24(sp)
-+    80003d50:	6442                	ld	s0,16(sp)
-+    80003d52:	64a2                	ld	s1,8(sp)
-+    80003d54:	6105                	add	sp,sp,32
-+    80003d56:	8082                	ret
-     panic("filedup");
--    80003e64:	00003517          	auipc	a0,0x3
--    80003e68:	75c50513          	addi	a0,a0,1884 # 800075c0 <etext+0x5c0>
--    80003e6c:	929fc0ef          	jal	80000794 <panic>
-+    80003d58:	00004517          	auipc	a0,0x4
-+    80003d5c:	97850513          	add	a0,a0,-1672 # 800076d0 <syscalls+0x240>
-+    80003d60:	9fffc0ef          	jal	8000075e <panic>
- 
--0000000080003e70 <fileclose>:
-+0000000080003d64 <fileclose>:
- 
- /* Close file f.  (Decrement ref count, close when reaches 0.) */
- void
- fileclose(struct file *f)
- {
--    80003e70:	7139                	addi	sp,sp,-64
--    80003e72:	fc06                	sd	ra,56(sp)
--    80003e74:	f822                	sd	s0,48(sp)
--    80003e76:	f426                	sd	s1,40(sp)
--    80003e78:	0080                	addi	s0,sp,64
--    80003e7a:	84aa                	mv	s1,a0
-+    80003d64:	7139                	add	sp,sp,-64
-+    80003d66:	fc06                	sd	ra,56(sp)
-+    80003d68:	f822                	sd	s0,48(sp)
-+    80003d6a:	f426                	sd	s1,40(sp)
-+    80003d6c:	f04a                	sd	s2,32(sp)
-+    80003d6e:	ec4e                	sd	s3,24(sp)
-+    80003d70:	e852                	sd	s4,16(sp)
-+    80003d72:	e456                	sd	s5,8(sp)
-+    80003d74:	0080                	add	s0,sp,64
-+    80003d76:	84aa                	mv	s1,a0
-   struct file ff;
- 
-   acquire(&ftable.lock);
--    80003e7c:	0001e517          	auipc	a0,0x1e
--    80003e80:	5bc50513          	addi	a0,a0,1468 # 80022438 <ftable>
--    80003e84:	d71fc0ef          	jal	80000bf4 <acquire>
-+    80003d78:	0001c517          	auipc	a0,0x1c
-+    80003d7c:	dd050513          	add	a0,a0,-560 # 8001fb48 <ftable>
-+    80003d80:	e21fc0ef          	jal	80000ba0 <acquire>
-   if(f->ref < 1)
--    80003e88:	40dc                	lw	a5,4(s1)
--    80003e8a:	04f05a63          	blez	a5,80003ede <fileclose+0x6e>
-+    80003d84:	40dc                	lw	a5,4(s1)
-+    80003d86:	04f05963          	blez	a5,80003dd8 <fileclose+0x74>
-     panic("fileclose");
-   if(--f->ref > 0){
--    80003e8e:	37fd                	addiw	a5,a5,-1
--    80003e90:	0007871b          	sext.w	a4,a5
--    80003e94:	c0dc                	sw	a5,4(s1)
--    80003e96:	04e04e63          	bgtz	a4,80003ef2 <fileclose+0x82>
--    80003e9a:	f04a                	sd	s2,32(sp)
--    80003e9c:	ec4e                	sd	s3,24(sp)
--    80003e9e:	e852                	sd	s4,16(sp)
--    80003ea0:	e456                	sd	s5,8(sp)
-+    80003d8a:	37fd                	addw	a5,a5,-1
-+    80003d8c:	0007871b          	sext.w	a4,a5
-+    80003d90:	c0dc                	sw	a5,4(s1)
-+    80003d92:	04e04963          	bgtz	a4,80003de4 <fileclose+0x80>
-     release(&ftable.lock);
-     return;
-   }
-   ff = *f;
--    80003ea2:	0004a903          	lw	s2,0(s1)
--    80003ea6:	0094ca83          	lbu	s5,9(s1)
--    80003eaa:	0104ba03          	ld	s4,16(s1)
--    80003eae:	0184b983          	ld	s3,24(s1)
-+    80003d96:	0004a903          	lw	s2,0(s1)
-+    80003d9a:	0094ca83          	lbu	s5,9(s1)
-+    80003d9e:	0104ba03          	ld	s4,16(s1)
-+    80003da2:	0184b983          	ld	s3,24(s1)
-   f->ref = 0;
--    80003eb2:	0004a223          	sw	zero,4(s1)
-+    80003da6:	0004a223          	sw	zero,4(s1)
-   f->type = FD_NONE;
--    80003eb6:	0004a023          	sw	zero,0(s1)
-+    80003daa:	0004a023          	sw	zero,0(s1)
-   release(&ftable.lock);
--    80003eba:	0001e517          	auipc	a0,0x1e
--    80003ebe:	57e50513          	addi	a0,a0,1406 # 80022438 <ftable>
--    80003ec2:	dcbfc0ef          	jal	80000c8c <release>
-+    80003dae:	0001c517          	auipc	a0,0x1c
-+    80003db2:	d9a50513          	add	a0,a0,-614 # 8001fb48 <ftable>
-+    80003db6:	e83fc0ef          	jal	80000c38 <release>
- 
-   if(ff.type == FD_PIPE){
--    80003ec6:	4785                	li	a5,1
--    80003ec8:	04f90063          	beq	s2,a5,80003f08 <fileclose+0x98>
-+    80003dba:	4785                	li	a5,1
-+    80003dbc:	04f90363          	beq	s2,a5,80003e02 <fileclose+0x9e>
-     pipeclose(ff.pipe, ff.writable);
-   } else if(ff.type == FD_INODE || ff.type == FD_DEVICE){
--    80003ecc:	3979                	addiw	s2,s2,-2
--    80003ece:	4785                	li	a5,1
--    80003ed0:	0527f563          	bgeu	a5,s2,80003f1a <fileclose+0xaa>
--    80003ed4:	7902                	ld	s2,32(sp)
--    80003ed6:	69e2                	ld	s3,24(sp)
--    80003ed8:	6a42                	ld	s4,16(sp)
--    80003eda:	6aa2                	ld	s5,8(sp)
--    80003edc:	a00d                	j	80003efe <fileclose+0x8e>
--    80003ede:	f04a                	sd	s2,32(sp)
--    80003ee0:	ec4e                	sd	s3,24(sp)
--    80003ee2:	e852                	sd	s4,16(sp)
--    80003ee4:	e456                	sd	s5,8(sp)
--    panic("fileclose");
--    80003ee6:	00003517          	auipc	a0,0x3
--    80003eea:	6e250513          	addi	a0,a0,1762 # 800075c8 <etext+0x5c8>
--    80003eee:	8a7fc0ef          	jal	80000794 <panic>
--    release(&ftable.lock);
--    80003ef2:	0001e517          	auipc	a0,0x1e
--    80003ef6:	54650513          	addi	a0,a0,1350 # 80022438 <ftable>
--    80003efa:	d93fc0ef          	jal	80000c8c <release>
-+    80003dc0:	3979                	addw	s2,s2,-2
-+    80003dc2:	4785                	li	a5,1
-+    80003dc4:	0327e663          	bltu	a5,s2,80003df0 <fileclose+0x8c>
-     begin_op();
-+    80003dc8:	b89ff0ef          	jal	80003950 <begin_op>
-     iput(ff.ip);
-+    80003dcc:	854e                	mv	a0,s3
-+    80003dce:	c92ff0ef          	jal	80003260 <iput>
-     end_op();
-+    80003dd2:	be9ff0ef          	jal	800039ba <end_op>
-+    80003dd6:	a829                	j	80003df0 <fileclose+0x8c>
-+    panic("fileclose");
-+    80003dd8:	00004517          	auipc	a0,0x4
-+    80003ddc:	90050513          	add	a0,a0,-1792 # 800076d8 <syscalls+0x248>
-+    80003de0:	97ffc0ef          	jal	8000075e <panic>
-+    release(&ftable.lock);
-+    80003de4:	0001c517          	auipc	a0,0x1c
-+    80003de8:	d6450513          	add	a0,a0,-668 # 8001fb48 <ftable>
-+    80003dec:	e4dfc0ef          	jal	80000c38 <release>
-   }
- }
--    80003efe:	70e2                	ld	ra,56(sp)
--    80003f00:	7442                	ld	s0,48(sp)
--    80003f02:	74a2                	ld	s1,40(sp)
--    80003f04:	6121                	addi	sp,sp,64
--    80003f06:	8082                	ret
-+    80003df0:	70e2                	ld	ra,56(sp)
-+    80003df2:	7442                	ld	s0,48(sp)
-+    80003df4:	74a2                	ld	s1,40(sp)
-+    80003df6:	7902                	ld	s2,32(sp)
-+    80003df8:	69e2                	ld	s3,24(sp)
-+    80003dfa:	6a42                	ld	s4,16(sp)
-+    80003dfc:	6aa2                	ld	s5,8(sp)
-+    80003dfe:	6121                	add	sp,sp,64
-+    80003e00:	8082                	ret
-     pipeclose(ff.pipe, ff.writable);
--    80003f08:	85d6                	mv	a1,s5
--    80003f0a:	8552                	mv	a0,s4
--    80003f0c:	336000ef          	jal	80004242 <pipeclose>
--    80003f10:	7902                	ld	s2,32(sp)
--    80003f12:	69e2                	ld	s3,24(sp)
--    80003f14:	6a42                	ld	s4,16(sp)
--    80003f16:	6aa2                	ld	s5,8(sp)
--    80003f18:	b7dd                	j	80003efe <fileclose+0x8e>
--    begin_op();
--    80003f1a:	b3dff0ef          	jal	80003a56 <begin_op>
--    iput(ff.ip);
--    80003f1e:	854e                	mv	a0,s3
--    80003f20:	c22ff0ef          	jal	80003342 <iput>
--    end_op();
--    80003f24:	b9dff0ef          	jal	80003ac0 <end_op>
--    80003f28:	7902                	ld	s2,32(sp)
--    80003f2a:	69e2                	ld	s3,24(sp)
--    80003f2c:	6a42                	ld	s4,16(sp)
--    80003f2e:	6aa2                	ld	s5,8(sp)
--    80003f30:	b7f9                	j	80003efe <fileclose+0x8e>
-+    80003e02:	85d6                	mv	a1,s5
-+    80003e04:	8552                	mv	a0,s4
-+    80003e06:	2e8000ef          	jal	800040ee <pipeclose>
-+    80003e0a:	b7dd                	j	80003df0 <fileclose+0x8c>
- 
--0000000080003f32 <filestat>:
-+0000000080003e0c <filestat>:
- 
- /* Get metadata about file f. */
- /* addr is a user virtual address, pointing to a struct stat. */
- int
- filestat(struct file *f, uint64 addr)
- {
--    80003f32:	715d                	addi	sp,sp,-80
--    80003f34:	e486                	sd	ra,72(sp)
--    80003f36:	e0a2                	sd	s0,64(sp)
--    80003f38:	fc26                	sd	s1,56(sp)
--    80003f3a:	f44e                	sd	s3,40(sp)
--    80003f3c:	0880                	addi	s0,sp,80
--    80003f3e:	84aa                	mv	s1,a0
--    80003f40:	89ae                	mv	s3,a1
-+    80003e0c:	715d                	add	sp,sp,-80
-+    80003e0e:	e486                	sd	ra,72(sp)
-+    80003e10:	e0a2                	sd	s0,64(sp)
-+    80003e12:	fc26                	sd	s1,56(sp)
-+    80003e14:	f84a                	sd	s2,48(sp)
-+    80003e16:	f44e                	sd	s3,40(sp)
-+    80003e18:	0880                	add	s0,sp,80
-+    80003e1a:	84aa                	mv	s1,a0
-+    80003e1c:	89ae                	mv	s3,a1
-   struct proc *p = myproc();
--    80003f42:	99ffd0ef          	jal	800018e0 <myproc>
-+    80003e1e:	a13fd0ef          	jal	80001830 <myproc>
-   struct stat st;
-   
-   if(f->type == FD_INODE || f->type == FD_DEVICE){
--    80003f46:	409c                	lw	a5,0(s1)
--    80003f48:	37f9                	addiw	a5,a5,-2
--    80003f4a:	4705                	li	a4,1
--    80003f4c:	04f76063          	bltu	a4,a5,80003f8c <filestat+0x5a>
--    80003f50:	f84a                	sd	s2,48(sp)
--    80003f52:	892a                	mv	s2,a0
-+    80003e22:	409c                	lw	a5,0(s1)
-+    80003e24:	37f9                	addw	a5,a5,-2
-+    80003e26:	4705                	li	a4,1
-+    80003e28:	02f76f63          	bltu	a4,a5,80003e66 <filestat+0x5a>
-+    80003e2c:	892a                	mv	s2,a0
-     ilock(f->ip);
--    80003f54:	6c88                	ld	a0,24(s1)
--    80003f56:	a6aff0ef          	jal	800031c0 <ilock>
-+    80003e2e:	6c88                	ld	a0,24(s1)
-+    80003e30:	ab2ff0ef          	jal	800030e2 <ilock>
-     stati(f->ip, &st);
--    80003f5a:	fb840593          	addi	a1,s0,-72
--    80003f5e:	6c88                	ld	a0,24(s1)
--    80003f60:	c8aff0ef          	jal	800033ea <stati>
-+    80003e34:	fb840593          	add	a1,s0,-72
-+    80003e38:	6c88                	ld	a0,24(s1)
-+    80003e3a:	cceff0ef          	jal	80003308 <stati>
-     iunlock(f->ip);
--    80003f64:	6c88                	ld	a0,24(s1)
--    80003f66:	b08ff0ef          	jal	8000326e <iunlock>
-+    80003e3e:	6c88                	ld	a0,24(s1)
-+    80003e40:	b4cff0ef          	jal	8000318c <iunlock>
-     if(copyout(p->pagetable, addr, (char *)&st, sizeof(st)) < 0)
--    80003f6a:	46e1                	li	a3,24
--    80003f6c:	fb840613          	addi	a2,s0,-72
--    80003f70:	85ce                	mv	a1,s3
--    80003f72:	05093503          	ld	a0,80(s2)
--    80003f76:	ddcfd0ef          	jal	80001552 <copyout>
--    80003f7a:	41f5551b          	sraiw	a0,a0,0x1f
--    80003f7e:	7942                	ld	s2,48(sp)
-+    80003e44:	46e1                	li	a3,24
-+    80003e46:	fb840613          	add	a2,s0,-72
-+    80003e4a:	85ce                	mv	a1,s3
-+    80003e4c:	05093503          	ld	a0,80(s2)
-+    80003e50:	e98fd0ef          	jal	800014e8 <copyout>
-+    80003e54:	41f5551b          	sraw	a0,a0,0x1f
-       return -1;
-     return 0;
-   }
-   return -1;
- }
--    80003f80:	60a6                	ld	ra,72(sp)
--    80003f82:	6406                	ld	s0,64(sp)
--    80003f84:	74e2                	ld	s1,56(sp)
--    80003f86:	79a2                	ld	s3,40(sp)
--    80003f88:	6161                	addi	sp,sp,80
--    80003f8a:	8082                	ret
-+    80003e58:	60a6                	ld	ra,72(sp)
-+    80003e5a:	6406                	ld	s0,64(sp)
-+    80003e5c:	74e2                	ld	s1,56(sp)
-+    80003e5e:	7942                	ld	s2,48(sp)
-+    80003e60:	79a2                	ld	s3,40(sp)
-+    80003e62:	6161                	add	sp,sp,80
-+    80003e64:	8082                	ret
-   return -1;
--    80003f8c:	557d                	li	a0,-1
--    80003f8e:	bfcd                	j	80003f80 <filestat+0x4e>
-+    80003e66:	557d                	li	a0,-1
-+    80003e68:	bfc5                	j	80003e58 <filestat+0x4c>
- 
--0000000080003f90 <fileread>:
-+0000000080003e6a <fileread>:
- 
- /* Read from file f. */
- /* addr is a user virtual address. */
- int
- fileread(struct file *f, uint64 addr, int n)
- {
--    80003f90:	7179                	addi	sp,sp,-48
--    80003f92:	f406                	sd	ra,40(sp)
--    80003f94:	f022                	sd	s0,32(sp)
--    80003f96:	e84a                	sd	s2,16(sp)
--    80003f98:	1800                	addi	s0,sp,48
-+    80003e6a:	7179                	add	sp,sp,-48
-+    80003e6c:	f406                	sd	ra,40(sp)
-+    80003e6e:	f022                	sd	s0,32(sp)
-+    80003e70:	ec26                	sd	s1,24(sp)
-+    80003e72:	e84a                	sd	s2,16(sp)
-+    80003e74:	e44e                	sd	s3,8(sp)
-+    80003e76:	1800                	add	s0,sp,48
-   int r = 0;
- 
-   if(f->readable == 0)
--    80003f9a:	00854783          	lbu	a5,8(a0)
--    80003f9e:	cfd1                	beqz	a5,8000403a <fileread+0xaa>
--    80003fa0:	ec26                	sd	s1,24(sp)
--    80003fa2:	e44e                	sd	s3,8(sp)
--    80003fa4:	84aa                	mv	s1,a0
--    80003fa6:	89ae                	mv	s3,a1
--    80003fa8:	8932                	mv	s2,a2
-+    80003e78:	00854783          	lbu	a5,8(a0)
-+    80003e7c:	cbc1                	beqz	a5,80003f0c <fileread+0xa2>
-+    80003e7e:	84aa                	mv	s1,a0
-+    80003e80:	89ae                	mv	s3,a1
-+    80003e82:	8932                	mv	s2,a2
-     return -1;
- 
-   if(f->type == FD_PIPE){
--    80003faa:	411c                	lw	a5,0(a0)
--    80003fac:	4705                	li	a4,1
--    80003fae:	04e78363          	beq	a5,a4,80003ff4 <fileread+0x64>
-+    80003e84:	411c                	lw	a5,0(a0)
-+    80003e86:	4705                	li	a4,1
-+    80003e88:	04e78363          	beq	a5,a4,80003ece <fileread+0x64>
-     r = piperead(f->pipe, addr, n);
-   } else if(f->type == FD_DEVICE){
--    80003fb2:	470d                	li	a4,3
--    80003fb4:	04e78763          	beq	a5,a4,80004002 <fileread+0x72>
-+    80003e8c:	470d                	li	a4,3
-+    80003e8e:	04e78563          	beq	a5,a4,80003ed8 <fileread+0x6e>
-     if(f->major < 0 || f->major >= NDEV || !devsw[f->major].read)
-       return -1;
-     r = devsw[f->major].read(1, addr, n);
-   } else if(f->type == FD_INODE){
--    80003fb8:	4709                	li	a4,2
--    80003fba:	06e79a63          	bne	a5,a4,8000402e <fileread+0x9e>
-+    80003e92:	4709                	li	a4,2
-+    80003e94:	06e79663          	bne	a5,a4,80003f00 <fileread+0x96>
-     ilock(f->ip);
--    80003fbe:	6d08                	ld	a0,24(a0)
--    80003fc0:	a00ff0ef          	jal	800031c0 <ilock>
-+    80003e98:	6d08                	ld	a0,24(a0)
-+    80003e9a:	a48ff0ef          	jal	800030e2 <ilock>
-     if((r = readi(f->ip, 1, addr, f->off, n)) > 0)
--    80003fc4:	874a                	mv	a4,s2
--    80003fc6:	5094                	lw	a3,32(s1)
--    80003fc8:	864e                	mv	a2,s3
--    80003fca:	4585                	li	a1,1
--    80003fcc:	6c88                	ld	a0,24(s1)
--    80003fce:	c46ff0ef          	jal	80003414 <readi>
--    80003fd2:	892a                	mv	s2,a0
--    80003fd4:	00a05563          	blez	a0,80003fde <fileread+0x4e>
-+    80003e9e:	874a                	mv	a4,s2
-+    80003ea0:	5094                	lw	a3,32(s1)
-+    80003ea2:	864e                	mv	a2,s3
-+    80003ea4:	4585                	li	a1,1
-+    80003ea6:	6c88                	ld	a0,24(s1)
-+    80003ea8:	c8aff0ef          	jal	80003332 <readi>
-+    80003eac:	892a                	mv	s2,a0
-+    80003eae:	00a05563          	blez	a0,80003eb8 <fileread+0x4e>
-       f->off += r;
--    80003fd8:	509c                	lw	a5,32(s1)
--    80003fda:	9fa9                	addw	a5,a5,a0
--    80003fdc:	d09c                	sw	a5,32(s1)
-+    80003eb2:	509c                	lw	a5,32(s1)
-+    80003eb4:	9fa9                	addw	a5,a5,a0
-+    80003eb6:	d09c                	sw	a5,32(s1)
-     iunlock(f->ip);
--    80003fde:	6c88                	ld	a0,24(s1)
--    80003fe0:	a8eff0ef          	jal	8000326e <iunlock>
--    80003fe4:	64e2                	ld	s1,24(sp)
--    80003fe6:	69a2                	ld	s3,8(sp)
-+    80003eb8:	6c88                	ld	a0,24(s1)
-+    80003eba:	ad2ff0ef          	jal	8000318c <iunlock>
-   } else {
-     panic("fileread");
-   }
- 
-   return r;
- }
--    80003fe8:	854a                	mv	a0,s2
--    80003fea:	70a2                	ld	ra,40(sp)
--    80003fec:	7402                	ld	s0,32(sp)
--    80003fee:	6942                	ld	s2,16(sp)
--    80003ff0:	6145                	addi	sp,sp,48
--    80003ff2:	8082                	ret
-+    80003ebe:	854a                	mv	a0,s2
-+    80003ec0:	70a2                	ld	ra,40(sp)
-+    80003ec2:	7402                	ld	s0,32(sp)
-+    80003ec4:	64e2                	ld	s1,24(sp)
-+    80003ec6:	6942                	ld	s2,16(sp)
-+    80003ec8:	69a2                	ld	s3,8(sp)
-+    80003eca:	6145                	add	sp,sp,48
-+    80003ecc:	8082                	ret
-     r = piperead(f->pipe, addr, n);
--    80003ff4:	6908                	ld	a0,16(a0)
--    80003ff6:	388000ef          	jal	8000437e <piperead>
--    80003ffa:	892a                	mv	s2,a0
--    80003ffc:	64e2                	ld	s1,24(sp)
--    80003ffe:	69a2                	ld	s3,8(sp)
--    80004000:	b7e5                	j	80003fe8 <fileread+0x58>
-+    80003ece:	6908                	ld	a0,16(a0)
-+    80003ed0:	34a000ef          	jal	8000421a <piperead>
-+    80003ed4:	892a                	mv	s2,a0
-+    80003ed6:	b7e5                	j	80003ebe <fileread+0x54>
-     if(f->major < 0 || f->major >= NDEV || !devsw[f->major].read)
--    80004002:	02451783          	lh	a5,36(a0)
--    80004006:	03079693          	slli	a3,a5,0x30
--    8000400a:	92c1                	srli	a3,a3,0x30
--    8000400c:	4725                	li	a4,9
--    8000400e:	02d76863          	bltu	a4,a3,8000403e <fileread+0xae>
--    80004012:	0792                	slli	a5,a5,0x4
--    80004014:	0001e717          	auipc	a4,0x1e
--    80004018:	38470713          	addi	a4,a4,900 # 80022398 <devsw>
--    8000401c:	97ba                	add	a5,a5,a4
--    8000401e:	639c                	ld	a5,0(a5)
--    80004020:	c39d                	beqz	a5,80004046 <fileread+0xb6>
-+    80003ed8:	02451783          	lh	a5,36(a0)
-+    80003edc:	03079693          	sll	a3,a5,0x30
-+    80003ee0:	92c1                	srl	a3,a3,0x30
-+    80003ee2:	4725                	li	a4,9
-+    80003ee4:	02d76663          	bltu	a4,a3,80003f10 <fileread+0xa6>
-+    80003ee8:	0792                	sll	a5,a5,0x4
-+    80003eea:	0001c717          	auipc	a4,0x1c
-+    80003eee:	bbe70713          	add	a4,a4,-1090 # 8001faa8 <devsw>
-+    80003ef2:	97ba                	add	a5,a5,a4
-+    80003ef4:	639c                	ld	a5,0(a5)
-+    80003ef6:	cf99                	beqz	a5,80003f14 <fileread+0xaa>
-     r = devsw[f->major].read(1, addr, n);
--    80004022:	4505                	li	a0,1
--    80004024:	9782                	jalr	a5
--    80004026:	892a                	mv	s2,a0
--    80004028:	64e2                	ld	s1,24(sp)
--    8000402a:	69a2                	ld	s3,8(sp)
--    8000402c:	bf75                	j	80003fe8 <fileread+0x58>
-+    80003ef8:	4505                	li	a0,1
-+    80003efa:	9782                	jalr	a5
-+    80003efc:	892a                	mv	s2,a0
-+    80003efe:	b7c1                	j	80003ebe <fileread+0x54>
-     panic("fileread");
--    8000402e:	00003517          	auipc	a0,0x3
--    80004032:	5aa50513          	addi	a0,a0,1450 # 800075d8 <etext+0x5d8>
--    80004036:	f5efc0ef          	jal	80000794 <panic>
-+    80003f00:	00003517          	auipc	a0,0x3
-+    80003f04:	7e850513          	add	a0,a0,2024 # 800076e8 <syscalls+0x258>
-+    80003f08:	857fc0ef          	jal	8000075e <panic>
-     return -1;
--    8000403a:	597d                	li	s2,-1
--    8000403c:	b775                	j	80003fe8 <fileread+0x58>
-+    80003f0c:	597d                	li	s2,-1
-+    80003f0e:	bf45                	j	80003ebe <fileread+0x54>
-       return -1;
--    8000403e:	597d                	li	s2,-1
--    80004040:	64e2                	ld	s1,24(sp)
--    80004042:	69a2                	ld	s3,8(sp)
--    80004044:	b755                	j	80003fe8 <fileread+0x58>
--    80004046:	597d                	li	s2,-1
--    80004048:	64e2                	ld	s1,24(sp)
--    8000404a:	69a2                	ld	s3,8(sp)
--    8000404c:	bf71                	j	80003fe8 <fileread+0x58>
--
--000000008000404e <filewrite>:
-+    80003f10:	597d                	li	s2,-1
-+    80003f12:	b775                	j	80003ebe <fileread+0x54>
-+    80003f14:	597d                	li	s2,-1
-+    80003f16:	b765                	j	80003ebe <fileread+0x54>
-+
-+0000000080003f18 <filewrite>:
- int
- filewrite(struct file *f, uint64 addr, int n)
- {
-   int r, ret = 0;
- 
-   if(f->writable == 0)
--    8000404e:	00954783          	lbu	a5,9(a0)
--    80004052:	10078b63          	beqz	a5,80004168 <filewrite+0x11a>
--{
--    80004056:	715d                	addi	sp,sp,-80
--    80004058:	e486                	sd	ra,72(sp)
--    8000405a:	e0a2                	sd	s0,64(sp)
--    8000405c:	f84a                	sd	s2,48(sp)
--    8000405e:	f052                	sd	s4,32(sp)
--    80004060:	e85a                	sd	s6,16(sp)
--    80004062:	0880                	addi	s0,sp,80
--    80004064:	892a                	mv	s2,a0
--    80004066:	8b2e                	mv	s6,a1
--    80004068:	8a32                	mv	s4,a2
-+    80003f18:	00954783          	lbu	a5,9(a0)
-+    80003f1c:	10078063          	beqz	a5,8000401c <filewrite+0x104>
-+{
-+    80003f20:	715d                	add	sp,sp,-80
-+    80003f22:	e486                	sd	ra,72(sp)
-+    80003f24:	e0a2                	sd	s0,64(sp)
-+    80003f26:	fc26                	sd	s1,56(sp)
-+    80003f28:	f84a                	sd	s2,48(sp)
-+    80003f2a:	f44e                	sd	s3,40(sp)
-+    80003f2c:	f052                	sd	s4,32(sp)
-+    80003f2e:	ec56                	sd	s5,24(sp)
-+    80003f30:	e85a                	sd	s6,16(sp)
-+    80003f32:	e45e                	sd	s7,8(sp)
-+    80003f34:	e062                	sd	s8,0(sp)
-+    80003f36:	0880                	add	s0,sp,80
-+    80003f38:	892a                	mv	s2,a0
-+    80003f3a:	8b2e                	mv	s6,a1
-+    80003f3c:	8a32                	mv	s4,a2
-     return -1;
- 
-   if(f->type == FD_PIPE){
--    8000406a:	411c                	lw	a5,0(a0)
--    8000406c:	4705                	li	a4,1
--    8000406e:	02e78763          	beq	a5,a4,8000409c <filewrite+0x4e>
-+    80003f3e:	411c                	lw	a5,0(a0)
-+    80003f40:	4705                	li	a4,1
-+    80003f42:	02e78263          	beq	a5,a4,80003f66 <filewrite+0x4e>
-     ret = pipewrite(f->pipe, addr, n);
-   } else if(f->type == FD_DEVICE){
--    80004072:	470d                	li	a4,3
--    80004074:	02e78863          	beq	a5,a4,800040a4 <filewrite+0x56>
-+    80003f46:	470d                	li	a4,3
-+    80003f48:	02e78363          	beq	a5,a4,80003f6e <filewrite+0x56>
-     if(f->major < 0 || f->major >= NDEV || !devsw[f->major].write)
-       return -1;
-     ret = devsw[f->major].write(1, addr, n);
-   } else if(f->type == FD_INODE){
--    80004078:	4709                	li	a4,2
--    8000407a:	0ce79c63          	bne	a5,a4,80004152 <filewrite+0x104>
--    8000407e:	f44e                	sd	s3,40(sp)
-+    80003f4c:	4709                	li	a4,2
-+    80003f4e:	0ce79163          	bne	a5,a4,80004010 <filewrite+0xf8>
-     /* and 2 blocks of slop for non-aligned writes. */
-     /* this really belongs lower down, since writei() */
-     /* might be writing a device like the console. */
-     int max = ((MAXOPBLOCKS-1-1-2) / 2) * BSIZE;
-     int i = 0;
-     while(i < n){
--    80004080:	0ac05863          	blez	a2,80004130 <filewrite+0xe2>
--    80004084:	fc26                	sd	s1,56(sp)
--    80004086:	ec56                	sd	s5,24(sp)
--    80004088:	e45e                	sd	s7,8(sp)
--    8000408a:	e062                	sd	s8,0(sp)
-+    80003f52:	08c05f63          	blez	a2,80003ff0 <filewrite+0xd8>
-     int i = 0;
--    8000408c:	4981                	li	s3,0
-+    80003f56:	4981                	li	s3,0
-       int n1 = n - i;
-       if(n1 > max)
--    8000408e:	6b85                	lui	s7,0x1
--    80004090:	c00b8b93          	addi	s7,s7,-1024 # c00 <_entry-0x7ffff400>
--    80004094:	6c05                	lui	s8,0x1
--    80004096:	c00c0c1b          	addiw	s8,s8,-1024 # c00 <_entry-0x7ffff400>
--    8000409a:	a8b5                	j	80004116 <filewrite+0xc8>
-+    80003f58:	6b85                	lui	s7,0x1
-+    80003f5a:	c00b8b93          	add	s7,s7,-1024 # c00 <_entry-0x7ffff400>
-+    80003f5e:	6c05                	lui	s8,0x1
-+    80003f60:	c00c0c1b          	addw	s8,s8,-1024 # c00 <_entry-0x7ffff400>
-+    80003f64:	a8b5                	j	80003fe0 <filewrite+0xc8>
-     ret = pipewrite(f->pipe, addr, n);
--    8000409c:	6908                	ld	a0,16(a0)
--    8000409e:	1fc000ef          	jal	8000429a <pipewrite>
--    800040a2:	a04d                	j	80004144 <filewrite+0xf6>
-+    80003f66:	6908                	ld	a0,16(a0)
-+    80003f68:	1de000ef          	jal	80004146 <pipewrite>
-+    80003f6c:	a071                	j	80003ff8 <filewrite+0xe0>
-     if(f->major < 0 || f->major >= NDEV || !devsw[f->major].write)
--    800040a4:	02451783          	lh	a5,36(a0)
--    800040a8:	03079693          	slli	a3,a5,0x30
--    800040ac:	92c1                	srli	a3,a3,0x30
--    800040ae:	4725                	li	a4,9
--    800040b0:	0ad76e63          	bltu	a4,a3,8000416c <filewrite+0x11e>
--    800040b4:	0792                	slli	a5,a5,0x4
--    800040b6:	0001e717          	auipc	a4,0x1e
--    800040ba:	2e270713          	addi	a4,a4,738 # 80022398 <devsw>
--    800040be:	97ba                	add	a5,a5,a4
--    800040c0:	679c                	ld	a5,8(a5)
--    800040c2:	c7dd                	beqz	a5,80004170 <filewrite+0x122>
-+    80003f6e:	02451783          	lh	a5,36(a0)
-+    80003f72:	03079693          	sll	a3,a5,0x30
-+    80003f76:	92c1                	srl	a3,a3,0x30
-+    80003f78:	4725                	li	a4,9
-+    80003f7a:	0ad76363          	bltu	a4,a3,80004020 <filewrite+0x108>
-+    80003f7e:	0792                	sll	a5,a5,0x4
-+    80003f80:	0001c717          	auipc	a4,0x1c
-+    80003f84:	b2870713          	add	a4,a4,-1240 # 8001faa8 <devsw>
-+    80003f88:	97ba                	add	a5,a5,a4
-+    80003f8a:	679c                	ld	a5,8(a5)
-+    80003f8c:	cfc1                	beqz	a5,80004024 <filewrite+0x10c>
-     ret = devsw[f->major].write(1, addr, n);
--    800040c4:	4505                	li	a0,1
--    800040c6:	9782                	jalr	a5
--    800040c8:	a8b5                	j	80004144 <filewrite+0xf6>
-+    80003f8e:	4505                	li	a0,1
-+    80003f90:	9782                	jalr	a5
-+    80003f92:	a09d                	j	80003ff8 <filewrite+0xe0>
-       if(n1 > max)
--    800040ca:	00048a9b          	sext.w	s5,s1
-+    80003f94:	00048a9b          	sext.w	s5,s1
-         n1 = max;
- 
-       begin_op();
--    800040ce:	989ff0ef          	jal	80003a56 <begin_op>
-+    80003f98:	9b9ff0ef          	jal	80003950 <begin_op>
-       ilock(f->ip);
--    800040d2:	01893503          	ld	a0,24(s2)
--    800040d6:	8eaff0ef          	jal	800031c0 <ilock>
-+    80003f9c:	01893503          	ld	a0,24(s2)
-+    80003fa0:	942ff0ef          	jal	800030e2 <ilock>
-       if ((r = writei(f->ip, 1, addr + i, f->off, n1)) > 0)
--    800040da:	8756                	mv	a4,s5
--    800040dc:	02092683          	lw	a3,32(s2)
--    800040e0:	01698633          	add	a2,s3,s6
--    800040e4:	4585                	li	a1,1
--    800040e6:	01893503          	ld	a0,24(s2)
--    800040ea:	c26ff0ef          	jal	80003510 <writei>
--    800040ee:	84aa                	mv	s1,a0
--    800040f0:	00a05763          	blez	a0,800040fe <filewrite+0xb0>
-+    80003fa4:	8756                	mv	a4,s5
-+    80003fa6:	02092683          	lw	a3,32(s2)
-+    80003faa:	01698633          	add	a2,s3,s6
-+    80003fae:	4585                	li	a1,1
-+    80003fb0:	01893503          	ld	a0,24(s2)
-+    80003fb4:	c62ff0ef          	jal	80003416 <writei>
-+    80003fb8:	84aa                	mv	s1,a0
-+    80003fba:	00a05763          	blez	a0,80003fc8 <filewrite+0xb0>
-         f->off += r;
--    800040f4:	02092783          	lw	a5,32(s2)
--    800040f8:	9fa9                	addw	a5,a5,a0
--    800040fa:	02f92023          	sw	a5,32(s2)
-+    80003fbe:	02092783          	lw	a5,32(s2)
-+    80003fc2:	9fa9                	addw	a5,a5,a0
-+    80003fc4:	02f92023          	sw	a5,32(s2)
-       iunlock(f->ip);
--    800040fe:	01893503          	ld	a0,24(s2)
--    80004102:	96cff0ef          	jal	8000326e <iunlock>
-+    80003fc8:	01893503          	ld	a0,24(s2)
-+    80003fcc:	9c0ff0ef          	jal	8000318c <iunlock>
-       end_op();
--    80004106:	9bbff0ef          	jal	80003ac0 <end_op>
-+    80003fd0:	9ebff0ef          	jal	800039ba <end_op>
- 
-       if(r != n1){
--    8000410a:	029a9563          	bne	s5,s1,80004134 <filewrite+0xe6>
-+    80003fd4:	009a9f63          	bne	s5,s1,80003ff2 <filewrite+0xda>
-         /* error from writei */
-         break;
-       }
-       i += r;
--    8000410e:	013489bb          	addw	s3,s1,s3
-+    80003fd8:	013489bb          	addw	s3,s1,s3
-     while(i < n){
--    80004112:	0149da63          	bge	s3,s4,80004126 <filewrite+0xd8>
-+    80003fdc:	0149db63          	bge	s3,s4,80003ff2 <filewrite+0xda>
-       int n1 = n - i;
--    80004116:	413a04bb          	subw	s1,s4,s3
-+    80003fe0:	413a04bb          	subw	s1,s4,s3
-       if(n1 > max)
--    8000411a:	0004879b          	sext.w	a5,s1
--    8000411e:	fafbd6e3          	bge	s7,a5,800040ca <filewrite+0x7c>
--    80004122:	84e2                	mv	s1,s8
--    80004124:	b75d                	j	800040ca <filewrite+0x7c>
--    80004126:	74e2                	ld	s1,56(sp)
--    80004128:	6ae2                	ld	s5,24(sp)
--    8000412a:	6ba2                	ld	s7,8(sp)
--    8000412c:	6c02                	ld	s8,0(sp)
--    8000412e:	a039                	j	8000413c <filewrite+0xee>
-+    80003fe4:	0004879b          	sext.w	a5,s1
-+    80003fe8:	fafbd6e3          	bge	s7,a5,80003f94 <filewrite+0x7c>
-+    80003fec:	84e2                	mv	s1,s8
-+    80003fee:	b75d                	j	80003f94 <filewrite+0x7c>
-     int i = 0;
--    80004130:	4981                	li	s3,0
--    80004132:	a029                	j	8000413c <filewrite+0xee>
--    80004134:	74e2                	ld	s1,56(sp)
--    80004136:	6ae2                	ld	s5,24(sp)
--    80004138:	6ba2                	ld	s7,8(sp)
--    8000413a:	6c02                	ld	s8,0(sp)
-+    80003ff0:	4981                	li	s3,0
-     }
-     ret = (i == n ? n : -1);
--    8000413c:	033a1c63          	bne	s4,s3,80004174 <filewrite+0x126>
--    80004140:	8552                	mv	a0,s4
--    80004142:	79a2                	ld	s3,40(sp)
-+    80003ff2:	033a1b63          	bne	s4,s3,80004028 <filewrite+0x110>
-+    80003ff6:	8552                	mv	a0,s4
-   } else {
-     panic("filewrite");
-   }
- 
-   return ret;
- }
--    80004144:	60a6                	ld	ra,72(sp)
--    80004146:	6406                	ld	s0,64(sp)
--    80004148:	7942                	ld	s2,48(sp)
--    8000414a:	7a02                	ld	s4,32(sp)
--    8000414c:	6b42                	ld	s6,16(sp)
--    8000414e:	6161                	addi	sp,sp,80
--    80004150:	8082                	ret
--    80004152:	fc26                	sd	s1,56(sp)
--    80004154:	f44e                	sd	s3,40(sp)
--    80004156:	ec56                	sd	s5,24(sp)
--    80004158:	e45e                	sd	s7,8(sp)
--    8000415a:	e062                	sd	s8,0(sp)
-+    80003ff8:	60a6                	ld	ra,72(sp)
-+    80003ffa:	6406                	ld	s0,64(sp)
-+    80003ffc:	74e2                	ld	s1,56(sp)
-+    80003ffe:	7942                	ld	s2,48(sp)
-+    80004000:	79a2                	ld	s3,40(sp)
-+    80004002:	7a02                	ld	s4,32(sp)
-+    80004004:	6ae2                	ld	s5,24(sp)
-+    80004006:	6b42                	ld	s6,16(sp)
-+    80004008:	6ba2                	ld	s7,8(sp)
-+    8000400a:	6c02                	ld	s8,0(sp)
-+    8000400c:	6161                	add	sp,sp,80
-+    8000400e:	8082                	ret
-     panic("filewrite");
--    8000415c:	00003517          	auipc	a0,0x3
--    80004160:	48c50513          	addi	a0,a0,1164 # 800075e8 <etext+0x5e8>
--    80004164:	e30fc0ef          	jal	80000794 <panic>
-+    80004010:	00003517          	auipc	a0,0x3
-+    80004014:	6e850513          	add	a0,a0,1768 # 800076f8 <syscalls+0x268>
-+    80004018:	f46fc0ef          	jal	8000075e <panic>
-     return -1;
--    80004168:	557d                	li	a0,-1
-+    8000401c:	557d                	li	a0,-1
- }
--    8000416a:	8082                	ret
-+    8000401e:	8082                	ret
-       return -1;
--    8000416c:	557d                	li	a0,-1
--    8000416e:	bfd9                	j	80004144 <filewrite+0xf6>
--    80004170:	557d                	li	a0,-1
--    80004172:	bfc9                	j	80004144 <filewrite+0xf6>
-+    80004020:	557d                	li	a0,-1
-+    80004022:	bfd9                	j	80003ff8 <filewrite+0xe0>
-+    80004024:	557d                	li	a0,-1
-+    80004026:	bfc9                	j	80003ff8 <filewrite+0xe0>
-     ret = (i == n ? n : -1);
--    80004174:	557d                	li	a0,-1
--    80004176:	79a2                	ld	s3,40(sp)
--    80004178:	b7f1                	j	80004144 <filewrite+0xf6>
-+    80004028:	557d                	li	a0,-1
-+    8000402a:	b7f9                	j	80003ff8 <filewrite+0xe0>
- 
--000000008000417a <pipealloc>:
-+000000008000402c <pipealloc>:
-   int writeopen;  /* write fd is still open */
- };
- 
- int
- pipealloc(struct file **f0, struct file **f1)
- {
--    8000417a:	7179                	addi	sp,sp,-48
--    8000417c:	f406                	sd	ra,40(sp)
--    8000417e:	f022                	sd	s0,32(sp)
--    80004180:	ec26                	sd	s1,24(sp)
--    80004182:	e052                	sd	s4,0(sp)
--    80004184:	1800                	addi	s0,sp,48
--    80004186:	84aa                	mv	s1,a0
--    80004188:	8a2e                	mv	s4,a1
-+    8000402c:	7179                	add	sp,sp,-48
-+    8000402e:	f406                	sd	ra,40(sp)
-+    80004030:	f022                	sd	s0,32(sp)
-+    80004032:	ec26                	sd	s1,24(sp)
-+    80004034:	e84a                	sd	s2,16(sp)
-+    80004036:	e44e                	sd	s3,8(sp)
-+    80004038:	e052                	sd	s4,0(sp)
-+    8000403a:	1800                	add	s0,sp,48
-+    8000403c:	84aa                	mv	s1,a0
-+    8000403e:	8a2e                	mv	s4,a1
-   struct pipe *pi;
- 
-   pi = 0;
-   *f0 = *f1 = 0;
--    8000418a:	0005b023          	sd	zero,0(a1)
--    8000418e:	00053023          	sd	zero,0(a0)
-+    80004040:	0005b023          	sd	zero,0(a1)
-+    80004044:	00053023          	sd	zero,0(a0)
-   if((*f0 = filealloc()) == 0 || (*f1 = filealloc()) == 0)
--    80004192:	c3bff0ef          	jal	80003dcc <filealloc>
--    80004196:	e088                	sd	a0,0(s1)
--    80004198:	c549                	beqz	a0,80004222 <pipealloc+0xa8>
--    8000419a:	c33ff0ef          	jal	80003dcc <filealloc>
--    8000419e:	00aa3023          	sd	a0,0(s4)
--    800041a2:	cd25                	beqz	a0,8000421a <pipealloc+0xa0>
--    800041a4:	e84a                	sd	s2,16(sp)
-+    80004048:	c79ff0ef          	jal	80003cc0 <filealloc>
-+    8000404c:	e088                	sd	a0,0(s1)
-+    8000404e:	cd35                	beqz	a0,800040ca <pipealloc+0x9e>
-+    80004050:	c71ff0ef          	jal	80003cc0 <filealloc>
-+    80004054:	00aa3023          	sd	a0,0(s4)
-+    80004058:	c52d                	beqz	a0,800040c2 <pipealloc+0x96>
-     goto bad;
-   if((pi = (struct pipe*)kalloc()) == 0)
--    800041a6:	97ffc0ef          	jal	80000b24 <kalloc>
--    800041aa:	892a                	mv	s2,a0
--    800041ac:	c12d                	beqz	a0,8000420e <pipealloc+0x94>
--    800041ae:	e44e                	sd	s3,8(sp)
-+    8000405a:	a77fc0ef          	jal	80000ad0 <kalloc>
-+    8000405e:	892a                	mv	s2,a0
-+    80004060:	cd31                	beqz	a0,800040bc <pipealloc+0x90>
-     goto bad;
-   pi->readopen = 1;
--    800041b0:	4985                	li	s3,1
--    800041b2:	23352023          	sw	s3,544(a0)
-+    80004062:	4985                	li	s3,1
-+    80004064:	23352023          	sw	s3,544(a0)
-   pi->writeopen = 1;
--    800041b6:	23352223          	sw	s3,548(a0)
-+    80004068:	23352223          	sw	s3,548(a0)
-   pi->nwrite = 0;
--    800041ba:	20052e23          	sw	zero,540(a0)
-+    8000406c:	20052e23          	sw	zero,540(a0)
-   pi->nread = 0;
--    800041be:	20052c23          	sw	zero,536(a0)
-+    80004070:	20052c23          	sw	zero,536(a0)
-   initlock(&pi->lock, "pipe");
--    800041c2:	00003597          	auipc	a1,0x3
--    800041c6:	43658593          	addi	a1,a1,1078 # 800075f8 <etext+0x5f8>
--    800041ca:	9abfc0ef          	jal	80000b74 <initlock>
-+    80004074:	00003597          	auipc	a1,0x3
-+    80004078:	69458593          	add	a1,a1,1684 # 80007708 <syscalls+0x278>
-+    8000407c:	aa5fc0ef          	jal	80000b20 <initlock>
-   (*f0)->type = FD_PIPE;
--    800041ce:	609c                	ld	a5,0(s1)
--    800041d0:	0137a023          	sw	s3,0(a5)
-+    80004080:	609c                	ld	a5,0(s1)
-+    80004082:	0137a023          	sw	s3,0(a5)
-   (*f0)->readable = 1;
--    800041d4:	609c                	ld	a5,0(s1)
--    800041d6:	01378423          	sb	s3,8(a5)
-+    80004086:	609c                	ld	a5,0(s1)
-+    80004088:	01378423          	sb	s3,8(a5)
-   (*f0)->writable = 0;
--    800041da:	609c                	ld	a5,0(s1)
--    800041dc:	000784a3          	sb	zero,9(a5)
-+    8000408c:	609c                	ld	a5,0(s1)
-+    8000408e:	000784a3          	sb	zero,9(a5)
-   (*f0)->pipe = pi;
--    800041e0:	609c                	ld	a5,0(s1)
--    800041e2:	0127b823          	sd	s2,16(a5)
-+    80004092:	609c                	ld	a5,0(s1)
-+    80004094:	0127b823          	sd	s2,16(a5)
-   (*f1)->type = FD_PIPE;
--    800041e6:	000a3783          	ld	a5,0(s4)
--    800041ea:	0137a023          	sw	s3,0(a5)
-+    80004098:	000a3783          	ld	a5,0(s4)
-+    8000409c:	0137a023          	sw	s3,0(a5)
-   (*f1)->readable = 0;
--    800041ee:	000a3783          	ld	a5,0(s4)
--    800041f2:	00078423          	sb	zero,8(a5)
-+    800040a0:	000a3783          	ld	a5,0(s4)
-+    800040a4:	00078423          	sb	zero,8(a5)
-   (*f1)->writable = 1;
--    800041f6:	000a3783          	ld	a5,0(s4)
--    800041fa:	013784a3          	sb	s3,9(a5)
-+    800040a8:	000a3783          	ld	a5,0(s4)
-+    800040ac:	013784a3          	sb	s3,9(a5)
-   (*f1)->pipe = pi;
--    800041fe:	000a3783          	ld	a5,0(s4)
--    80004202:	0127b823          	sd	s2,16(a5)
-+    800040b0:	000a3783          	ld	a5,0(s4)
-+    800040b4:	0127b823          	sd	s2,16(a5)
-   return 0;
--    80004206:	4501                	li	a0,0
--    80004208:	6942                	ld	s2,16(sp)
--    8000420a:	69a2                	ld	s3,8(sp)
--    8000420c:	a01d                	j	80004232 <pipealloc+0xb8>
-+    800040b8:	4501                	li	a0,0
-+    800040ba:	a005                	j	800040da <pipealloc+0xae>
- 
-  bad:
-   if(pi)
-     kfree((char*)pi);
-   if(*f0)
--    8000420e:	6088                	ld	a0,0(s1)
--    80004210:	c119                	beqz	a0,80004216 <pipealloc+0x9c>
--    80004212:	6942                	ld	s2,16(sp)
--    80004214:	a029                	j	8000421e <pipealloc+0xa4>
--    80004216:	6942                	ld	s2,16(sp)
--    80004218:	a029                	j	80004222 <pipealloc+0xa8>
--    8000421a:	6088                	ld	a0,0(s1)
--    8000421c:	c10d                	beqz	a0,8000423e <pipealloc+0xc4>
-+    800040bc:	6088                	ld	a0,0(s1)
-+    800040be:	e501                	bnez	a0,800040c6 <pipealloc+0x9a>
-+    800040c0:	a029                	j	800040ca <pipealloc+0x9e>
-+    800040c2:	6088                	ld	a0,0(s1)
-+    800040c4:	c11d                	beqz	a0,800040ea <pipealloc+0xbe>
-     fileclose(*f0);
--    8000421e:	c53ff0ef          	jal	80003e70 <fileclose>
-+    800040c6:	c9fff0ef          	jal	80003d64 <fileclose>
-   if(*f1)
--    80004222:	000a3783          	ld	a5,0(s4)
-+    800040ca:	000a3783          	ld	a5,0(s4)
-     fileclose(*f1);
-   return -1;
--    80004226:	557d                	li	a0,-1
-+    800040ce:	557d                	li	a0,-1
-   if(*f1)
--    80004228:	c789                	beqz	a5,80004232 <pipealloc+0xb8>
-+    800040d0:	c789                	beqz	a5,800040da <pipealloc+0xae>
-     fileclose(*f1);
--    8000422a:	853e                	mv	a0,a5
--    8000422c:	c45ff0ef          	jal	80003e70 <fileclose>
-+    800040d2:	853e                	mv	a0,a5
-+    800040d4:	c91ff0ef          	jal	80003d64 <fileclose>
-   return -1;
--    80004230:	557d                	li	a0,-1
--}
--    80004232:	70a2                	ld	ra,40(sp)
--    80004234:	7402                	ld	s0,32(sp)
--    80004236:	64e2                	ld	s1,24(sp)
--    80004238:	6a02                	ld	s4,0(sp)
--    8000423a:	6145                	addi	sp,sp,48
--    8000423c:	8082                	ret
-+    800040d8:	557d                	li	a0,-1
-+}
-+    800040da:	70a2                	ld	ra,40(sp)
-+    800040dc:	7402                	ld	s0,32(sp)
-+    800040de:	64e2                	ld	s1,24(sp)
-+    800040e0:	6942                	ld	s2,16(sp)
-+    800040e2:	69a2                	ld	s3,8(sp)
-+    800040e4:	6a02                	ld	s4,0(sp)
-+    800040e6:	6145                	add	sp,sp,48
-+    800040e8:	8082                	ret
-   return -1;
--    8000423e:	557d                	li	a0,-1
--    80004240:	bfcd                	j	80004232 <pipealloc+0xb8>
-+    800040ea:	557d                	li	a0,-1
-+    800040ec:	b7fd                	j	800040da <pipealloc+0xae>
- 
--0000000080004242 <pipeclose>:
-+00000000800040ee <pipeclose>:
- 
- void
- pipeclose(struct pipe *pi, int writable)
- {
--    80004242:	1101                	addi	sp,sp,-32
--    80004244:	ec06                	sd	ra,24(sp)
--    80004246:	e822                	sd	s0,16(sp)
--    80004248:	e426                	sd	s1,8(sp)
--    8000424a:	e04a                	sd	s2,0(sp)
--    8000424c:	1000                	addi	s0,sp,32
--    8000424e:	84aa                	mv	s1,a0
--    80004250:	892e                	mv	s2,a1
-+    800040ee:	1101                	add	sp,sp,-32
-+    800040f0:	ec06                	sd	ra,24(sp)
-+    800040f2:	e822                	sd	s0,16(sp)
-+    800040f4:	e426                	sd	s1,8(sp)
-+    800040f6:	e04a                	sd	s2,0(sp)
-+    800040f8:	1000                	add	s0,sp,32
-+    800040fa:	84aa                	mv	s1,a0
-+    800040fc:	892e                	mv	s2,a1
-   acquire(&pi->lock);
--    80004252:	9a3fc0ef          	jal	80000bf4 <acquire>
-+    800040fe:	aa3fc0ef          	jal	80000ba0 <acquire>
-   if(writable){
--    80004256:	02090763          	beqz	s2,80004284 <pipeclose+0x42>
-+    80004102:	02090763          	beqz	s2,80004130 <pipeclose+0x42>
-     pi->writeopen = 0;
--    8000425a:	2204a223          	sw	zero,548(s1)
-+    80004106:	2204a223          	sw	zero,548(s1)
-     wakeup(&pi->nread);
--    8000425e:	21848513          	addi	a0,s1,536
--    80004262:	c99fd0ef          	jal	80001efa <wakeup>
-+    8000410a:	21848513          	add	a0,s1,536
-+    8000410e:	d3bfd0ef          	jal	80001e48 <wakeup>
-   } else {
-     pi->readopen = 0;
-     wakeup(&pi->nwrite);
-   }
-   if(pi->readopen == 0 && pi->writeopen == 0){
--    80004266:	2204b783          	ld	a5,544(s1)
--    8000426a:	e785                	bnez	a5,80004292 <pipeclose+0x50>
-+    80004112:	2204b783          	ld	a5,544(s1)
-+    80004116:	e785                	bnez	a5,8000413e <pipeclose+0x50>
-     release(&pi->lock);
--    8000426c:	8526                	mv	a0,s1
--    8000426e:	a1ffc0ef          	jal	80000c8c <release>
-+    80004118:	8526                	mv	a0,s1
-+    8000411a:	b1ffc0ef          	jal	80000c38 <release>
-     kfree((char*)pi);
--    80004272:	8526                	mv	a0,s1
--    80004274:	fcefc0ef          	jal	80000a42 <kfree>
-+    8000411e:	8526                	mv	a0,s1
-+    80004120:	8cffc0ef          	jal	800009ee <kfree>
-   } else
-     release(&pi->lock);
- }
--    80004278:	60e2                	ld	ra,24(sp)
--    8000427a:	6442                	ld	s0,16(sp)
--    8000427c:	64a2                	ld	s1,8(sp)
--    8000427e:	6902                	ld	s2,0(sp)
--    80004280:	6105                	addi	sp,sp,32
--    80004282:	8082                	ret
-+    80004124:	60e2                	ld	ra,24(sp)
-+    80004126:	6442                	ld	s0,16(sp)
-+    80004128:	64a2                	ld	s1,8(sp)
-+    8000412a:	6902                	ld	s2,0(sp)
-+    8000412c:	6105                	add	sp,sp,32
-+    8000412e:	8082                	ret
-     pi->readopen = 0;
--    80004284:	2204a023          	sw	zero,544(s1)
-+    80004130:	2204a023          	sw	zero,544(s1)
-     wakeup(&pi->nwrite);
--    80004288:	21c48513          	addi	a0,s1,540
--    8000428c:	c6ffd0ef          	jal	80001efa <wakeup>
--    80004290:	bfd9                	j	80004266 <pipeclose+0x24>
-+    80004134:	21c48513          	add	a0,s1,540
-+    80004138:	d11fd0ef          	jal	80001e48 <wakeup>
-+    8000413c:	bfd9                	j	80004112 <pipeclose+0x24>
-     release(&pi->lock);
--    80004292:	8526                	mv	a0,s1
--    80004294:	9f9fc0ef          	jal	80000c8c <release>
-+    8000413e:	8526                	mv	a0,s1
-+    80004140:	af9fc0ef          	jal	80000c38 <release>
- }
--    80004298:	b7c5                	j	80004278 <pipeclose+0x36>
-+    80004144:	b7c5                	j	80004124 <pipeclose+0x36>
- 
--000000008000429a <pipewrite>:
-+0000000080004146 <pipewrite>:
- 
- int
- pipewrite(struct pipe *pi, uint64 addr, int n)
- {
--    8000429a:	711d                	addi	sp,sp,-96
--    8000429c:	ec86                	sd	ra,88(sp)
--    8000429e:	e8a2                	sd	s0,80(sp)
--    800042a0:	e4a6                	sd	s1,72(sp)
--    800042a2:	e0ca                	sd	s2,64(sp)
--    800042a4:	fc4e                	sd	s3,56(sp)
--    800042a6:	f852                	sd	s4,48(sp)
--    800042a8:	f456                	sd	s5,40(sp)
--    800042aa:	1080                	addi	s0,sp,96
--    800042ac:	84aa                	mv	s1,a0
--    800042ae:	8aae                	mv	s5,a1
--    800042b0:	8a32                	mv	s4,a2
-+    80004146:	711d                	add	sp,sp,-96
-+    80004148:	ec86                	sd	ra,88(sp)
-+    8000414a:	e8a2                	sd	s0,80(sp)
-+    8000414c:	e4a6                	sd	s1,72(sp)
-+    8000414e:	e0ca                	sd	s2,64(sp)
-+    80004150:	fc4e                	sd	s3,56(sp)
-+    80004152:	f852                	sd	s4,48(sp)
-+    80004154:	f456                	sd	s5,40(sp)
-+    80004156:	f05a                	sd	s6,32(sp)
-+    80004158:	ec5e                	sd	s7,24(sp)
-+    8000415a:	e862                	sd	s8,16(sp)
-+    8000415c:	1080                	add	s0,sp,96
-+    8000415e:	84aa                	mv	s1,a0
-+    80004160:	8aae                	mv	s5,a1
-+    80004162:	8a32                	mv	s4,a2
-   int i = 0;
-   struct proc *pr = myproc();
--    800042b2:	e2efd0ef          	jal	800018e0 <myproc>
--    800042b6:	89aa                	mv	s3,a0
-+    80004164:	eccfd0ef          	jal	80001830 <myproc>
-+    80004168:	89aa                	mv	s3,a0
- 
-   acquire(&pi->lock);
--    800042b8:	8526                	mv	a0,s1
--    800042ba:	93bfc0ef          	jal	80000bf4 <acquire>
-+    8000416a:	8526                	mv	a0,s1
-+    8000416c:	a35fc0ef          	jal	80000ba0 <acquire>
-   while(i < n){
--    800042be:	0b405a63          	blez	s4,80004372 <pipewrite+0xd8>
--    800042c2:	f05a                	sd	s6,32(sp)
--    800042c4:	ec5e                	sd	s7,24(sp)
--    800042c6:	e862                	sd	s8,16(sp)
-+    80004170:	09405c63          	blez	s4,80004208 <pipewrite+0xc2>
-   int i = 0;
--    800042c8:	4901                	li	s2,0
-+    80004174:	4901                	li	s2,0
-     if(pi->nwrite == pi->nread + PIPESIZE){ /*DOC: pipewrite-full */
-       wakeup(&pi->nread);
-       sleep(&pi->nwrite, &pi->lock);
-     } else {
-       char ch;
-       if(copyin(pr->pagetable, &ch, addr + i, 1) == -1)
--    800042ca:	5b7d                	li	s6,-1
-+    80004176:	5b7d                	li	s6,-1
-       wakeup(&pi->nread);
--    800042cc:	21848c13          	addi	s8,s1,536
-+    80004178:	21848c13          	add	s8,s1,536
-       sleep(&pi->nwrite, &pi->lock);
--    800042d0:	21c48b93          	addi	s7,s1,540
--    800042d4:	a81d                	j	8000430a <pipewrite+0x70>
-+    8000417c:	21c48b93          	add	s7,s1,540
-+    80004180:	a81d                	j	800041b6 <pipewrite+0x70>
-       release(&pi->lock);
--    800042d6:	8526                	mv	a0,s1
--    800042d8:	9b5fc0ef          	jal	80000c8c <release>
-+    80004182:	8526                	mv	a0,s1
-+    80004184:	ab5fc0ef          	jal	80000c38 <release>
-       return -1;
--    800042dc:	597d                	li	s2,-1
--    800042de:	7b02                	ld	s6,32(sp)
--    800042e0:	6be2                	ld	s7,24(sp)
--    800042e2:	6c42                	ld	s8,16(sp)
-+    80004188:	597d                	li	s2,-1
-   }
-   wakeup(&pi->nread);
-   release(&pi->lock);
- 
-   return i;
- }
--    800042e4:	854a                	mv	a0,s2
--    800042e6:	60e6                	ld	ra,88(sp)
--    800042e8:	6446                	ld	s0,80(sp)
--    800042ea:	64a6                	ld	s1,72(sp)
--    800042ec:	6906                	ld	s2,64(sp)
--    800042ee:	79e2                	ld	s3,56(sp)
--    800042f0:	7a42                	ld	s4,48(sp)
--    800042f2:	7aa2                	ld	s5,40(sp)
--    800042f4:	6125                	addi	sp,sp,96
--    800042f6:	8082                	ret
-+    8000418a:	854a                	mv	a0,s2
-+    8000418c:	60e6                	ld	ra,88(sp)
-+    8000418e:	6446                	ld	s0,80(sp)
-+    80004190:	64a6                	ld	s1,72(sp)
-+    80004192:	6906                	ld	s2,64(sp)
-+    80004194:	79e2                	ld	s3,56(sp)
-+    80004196:	7a42                	ld	s4,48(sp)
-+    80004198:	7aa2                	ld	s5,40(sp)
-+    8000419a:	7b02                	ld	s6,32(sp)
-+    8000419c:	6be2                	ld	s7,24(sp)
-+    8000419e:	6c42                	ld	s8,16(sp)
-+    800041a0:	6125                	add	sp,sp,96
-+    800041a2:	8082                	ret
-       wakeup(&pi->nread);
--    800042f8:	8562                	mv	a0,s8
--    800042fa:	c01fd0ef          	jal	80001efa <wakeup>
-+    800041a4:	8562                	mv	a0,s8
-+    800041a6:	ca3fd0ef          	jal	80001e48 <wakeup>
-       sleep(&pi->nwrite, &pi->lock);
--    800042fe:	85a6                	mv	a1,s1
--    80004300:	855e                	mv	a0,s7
--    80004302:	badfd0ef          	jal	80001eae <sleep>
-+    800041aa:	85a6                	mv	a1,s1
-+    800041ac:	855e                	mv	a0,s7
-+    800041ae:	c4ffd0ef          	jal	80001dfc <sleep>
-   while(i < n){
--    80004306:	05495b63          	bge	s2,s4,8000435c <pipewrite+0xc2>
-+    800041b2:	05495c63          	bge	s2,s4,8000420a <pipewrite+0xc4>
-     if(pi->readopen == 0 || killed(pr)){
--    8000430a:	2204a783          	lw	a5,544(s1)
--    8000430e:	d7e1                	beqz	a5,800042d6 <pipewrite+0x3c>
--    80004310:	854e                	mv	a0,s3
--    80004312:	dd5fd0ef          	jal	800020e6 <killed>
--    80004316:	f161                	bnez	a0,800042d6 <pipewrite+0x3c>
-+    800041b6:	2204a783          	lw	a5,544(s1)
-+    800041ba:	d7e1                	beqz	a5,80004182 <pipewrite+0x3c>
-+    800041bc:	854e                	mv	a0,s3
-+    800041be:	e77fd0ef          	jal	80002034 <killed>
-+    800041c2:	f161                	bnez	a0,80004182 <pipewrite+0x3c>
-     if(pi->nwrite == pi->nread + PIPESIZE){ /*DOC: pipewrite-full */
--    80004318:	2184a783          	lw	a5,536(s1)
--    8000431c:	21c4a703          	lw	a4,540(s1)
--    80004320:	2007879b          	addiw	a5,a5,512
--    80004324:	fcf70ae3          	beq	a4,a5,800042f8 <pipewrite+0x5e>
-+    800041c4:	2184a783          	lw	a5,536(s1)
-+    800041c8:	21c4a703          	lw	a4,540(s1)
-+    800041cc:	2007879b          	addw	a5,a5,512
-+    800041d0:	fcf70ae3          	beq	a4,a5,800041a4 <pipewrite+0x5e>
-       if(copyin(pr->pagetable, &ch, addr + i, 1) == -1)
--    80004328:	4685                	li	a3,1
--    8000432a:	01590633          	add	a2,s2,s5
--    8000432e:	faf40593          	addi	a1,s0,-81
--    80004332:	0509b503          	ld	a0,80(s3)
--    80004336:	af2fd0ef          	jal	80001628 <copyin>
--    8000433a:	03650e63          	beq	a0,s6,80004376 <pipewrite+0xdc>
-+    800041d4:	4685                	li	a3,1
-+    800041d6:	01590633          	add	a2,s2,s5
-+    800041da:	faf40593          	add	a1,s0,-81
-+    800041de:	0509b503          	ld	a0,80(s3)
-+    800041e2:	bbefd0ef          	jal	800015a0 <copyin>
-+    800041e6:	03650263          	beq	a0,s6,8000420a <pipewrite+0xc4>
-       pi->data[pi->nwrite++ % PIPESIZE] = ch;
--    8000433e:	21c4a783          	lw	a5,540(s1)
--    80004342:	0017871b          	addiw	a4,a5,1
--    80004346:	20e4ae23          	sw	a4,540(s1)
--    8000434a:	1ff7f793          	andi	a5,a5,511
--    8000434e:	97a6                	add	a5,a5,s1
--    80004350:	faf44703          	lbu	a4,-81(s0)
--    80004354:	00e78c23          	sb	a4,24(a5)
-+    800041ea:	21c4a783          	lw	a5,540(s1)
-+    800041ee:	0017871b          	addw	a4,a5,1
-+    800041f2:	20e4ae23          	sw	a4,540(s1)
-+    800041f6:	1ff7f793          	and	a5,a5,511
-+    800041fa:	97a6                	add	a5,a5,s1
-+    800041fc:	faf44703          	lbu	a4,-81(s0)
-+    80004200:	00e78c23          	sb	a4,24(a5)
-       i++;
--    80004358:	2905                	addiw	s2,s2,1
--    8000435a:	b775                	j	80004306 <pipewrite+0x6c>
--    8000435c:	7b02                	ld	s6,32(sp)
--    8000435e:	6be2                	ld	s7,24(sp)
--    80004360:	6c42                	ld	s8,16(sp)
-+    80004204:	2905                	addw	s2,s2,1
-+    80004206:	b775                	j	800041b2 <pipewrite+0x6c>
-+  int i = 0;
-+    80004208:	4901                	li	s2,0
-   wakeup(&pi->nread);
--    80004362:	21848513          	addi	a0,s1,536
--    80004366:	b95fd0ef          	jal	80001efa <wakeup>
-+    8000420a:	21848513          	add	a0,s1,536
-+    8000420e:	c3bfd0ef          	jal	80001e48 <wakeup>
-   release(&pi->lock);
--    8000436a:	8526                	mv	a0,s1
--    8000436c:	921fc0ef          	jal	80000c8c <release>
-+    80004212:	8526                	mv	a0,s1
-+    80004214:	a25fc0ef          	jal	80000c38 <release>
-   return i;
--    80004370:	bf95                	j	800042e4 <pipewrite+0x4a>
--  int i = 0;
--    80004372:	4901                	li	s2,0
--    80004374:	b7fd                	j	80004362 <pipewrite+0xc8>
--    80004376:	7b02                	ld	s6,32(sp)
--    80004378:	6be2                	ld	s7,24(sp)
--    8000437a:	6c42                	ld	s8,16(sp)
--    8000437c:	b7dd                	j	80004362 <pipewrite+0xc8>
-+    80004218:	bf8d                	j	8000418a <pipewrite+0x44>
- 
--000000008000437e <piperead>:
-+000000008000421a <piperead>:
- 
- int
- piperead(struct pipe *pi, uint64 addr, int n)
- {
--    8000437e:	715d                	addi	sp,sp,-80
--    80004380:	e486                	sd	ra,72(sp)
--    80004382:	e0a2                	sd	s0,64(sp)
--    80004384:	fc26                	sd	s1,56(sp)
--    80004386:	f84a                	sd	s2,48(sp)
--    80004388:	f44e                	sd	s3,40(sp)
--    8000438a:	f052                	sd	s4,32(sp)
--    8000438c:	ec56                	sd	s5,24(sp)
--    8000438e:	0880                	addi	s0,sp,80
--    80004390:	84aa                	mv	s1,a0
--    80004392:	892e                	mv	s2,a1
--    80004394:	8ab2                	mv	s5,a2
-+    8000421a:	715d                	add	sp,sp,-80
-+    8000421c:	e486                	sd	ra,72(sp)
-+    8000421e:	e0a2                	sd	s0,64(sp)
-+    80004220:	fc26                	sd	s1,56(sp)
-+    80004222:	f84a                	sd	s2,48(sp)
-+    80004224:	f44e                	sd	s3,40(sp)
-+    80004226:	f052                	sd	s4,32(sp)
-+    80004228:	ec56                	sd	s5,24(sp)
-+    8000422a:	e85a                	sd	s6,16(sp)
-+    8000422c:	0880                	add	s0,sp,80
-+    8000422e:	84aa                	mv	s1,a0
-+    80004230:	892e                	mv	s2,a1
-+    80004232:	8ab2                	mv	s5,a2
-   int i;
-   struct proc *pr = myproc();
--    80004396:	d4afd0ef          	jal	800018e0 <myproc>
--    8000439a:	8a2a                	mv	s4,a0
-+    80004234:	dfcfd0ef          	jal	80001830 <myproc>
-+    80004238:	8a2a                	mv	s4,a0
-   char ch;
- 
-   acquire(&pi->lock);
--    8000439c:	8526                	mv	a0,s1
--    8000439e:	857fc0ef          	jal	80000bf4 <acquire>
-+    8000423a:	8526                	mv	a0,s1
-+    8000423c:	965fc0ef          	jal	80000ba0 <acquire>
-   while(pi->nread == pi->nwrite && pi->writeopen){  /*DOC: pipe-empty */
--    800043a2:	2184a703          	lw	a4,536(s1)
--    800043a6:	21c4a783          	lw	a5,540(s1)
-+    80004240:	2184a703          	lw	a4,536(s1)
-+    80004244:	21c4a783          	lw	a5,540(s1)
-     if(killed(pr)){
-       release(&pi->lock);
-       return -1;
-     }
-     sleep(&pi->nread, &pi->lock); /*DOC: piperead-sleep */
--    800043aa:	21848993          	addi	s3,s1,536
-+    80004248:	21848993          	add	s3,s1,536
-   while(pi->nread == pi->nwrite && pi->writeopen){  /*DOC: pipe-empty */
--    800043ae:	02f71563          	bne	a4,a5,800043d8 <piperead+0x5a>
--    800043b2:	2244a783          	lw	a5,548(s1)
--    800043b6:	cb85                	beqz	a5,800043e6 <piperead+0x68>
-+    8000424c:	02f71363          	bne	a4,a5,80004272 <piperead+0x58>
-+    80004250:	2244a783          	lw	a5,548(s1)
-+    80004254:	cf99                	beqz	a5,80004272 <piperead+0x58>
-     if(killed(pr)){
--    800043b8:	8552                	mv	a0,s4
--    800043ba:	d2dfd0ef          	jal	800020e6 <killed>
--    800043be:	ed19                	bnez	a0,800043dc <piperead+0x5e>
-+    80004256:	8552                	mv	a0,s4
-+    80004258:	dddfd0ef          	jal	80002034 <killed>
-+    8000425c:	e149                	bnez	a0,800042de <piperead+0xc4>
-     sleep(&pi->nread, &pi->lock); /*DOC: piperead-sleep */
--    800043c0:	85a6                	mv	a1,s1
--    800043c2:	854e                	mv	a0,s3
--    800043c4:	aebfd0ef          	jal	80001eae <sleep>
-+    8000425e:	85a6                	mv	a1,s1
-+    80004260:	854e                	mv	a0,s3
-+    80004262:	b9bfd0ef          	jal	80001dfc <sleep>
-   while(pi->nread == pi->nwrite && pi->writeopen){  /*DOC: pipe-empty */
--    800043c8:	2184a703          	lw	a4,536(s1)
--    800043cc:	21c4a783          	lw	a5,540(s1)
--    800043d0:	fef701e3          	beq	a4,a5,800043b2 <piperead+0x34>
--    800043d4:	e85a                	sd	s6,16(sp)
--    800043d6:	a809                	j	800043e8 <piperead+0x6a>
--    800043d8:	e85a                	sd	s6,16(sp)
--    800043da:	a039                	j	800043e8 <piperead+0x6a>
--      release(&pi->lock);
--    800043dc:	8526                	mv	a0,s1
--    800043de:	8affc0ef          	jal	80000c8c <release>
--      return -1;
--    800043e2:	59fd                	li	s3,-1
--    800043e4:	a8b1                	j	80004440 <piperead+0xc2>
--    800043e6:	e85a                	sd	s6,16(sp)
-+    80004266:	2184a703          	lw	a4,536(s1)
-+    8000426a:	21c4a783          	lw	a5,540(s1)
-+    8000426e:	fef701e3          	beq	a4,a5,80004250 <piperead+0x36>
-   }
-   for(i = 0; i < n; i++){  /*DOC: piperead-copy */
--    800043e8:	4981                	li	s3,0
-+    80004272:	4981                	li	s3,0
-     if(pi->nread == pi->nwrite)
-       break;
-     ch = pi->data[pi->nread++ % PIPESIZE];
-     if(copyout(pr->pagetable, addr + i, &ch, 1) == -1)
--    800043ea:	5b7d                	li	s6,-1
-+    80004274:	5b7d                	li	s6,-1
-   for(i = 0; i < n; i++){  /*DOC: piperead-copy */
--    800043ec:	05505263          	blez	s5,80004430 <piperead+0xb2>
-+    80004276:	05505263          	blez	s5,800042ba <piperead+0xa0>
-     if(pi->nread == pi->nwrite)
--    800043f0:	2184a783          	lw	a5,536(s1)
--    800043f4:	21c4a703          	lw	a4,540(s1)
--    800043f8:	02f70c63          	beq	a4,a5,80004430 <piperead+0xb2>
-+    8000427a:	2184a783          	lw	a5,536(s1)
-+    8000427e:	21c4a703          	lw	a4,540(s1)
-+    80004282:	02f70c63          	beq	a4,a5,800042ba <piperead+0xa0>
-     ch = pi->data[pi->nread++ % PIPESIZE];
--    800043fc:	0017871b          	addiw	a4,a5,1
--    80004400:	20e4ac23          	sw	a4,536(s1)
--    80004404:	1ff7f793          	andi	a5,a5,511
--    80004408:	97a6                	add	a5,a5,s1
--    8000440a:	0187c783          	lbu	a5,24(a5)
--    8000440e:	faf40fa3          	sb	a5,-65(s0)
-+    80004286:	0017871b          	addw	a4,a5,1
-+    8000428a:	20e4ac23          	sw	a4,536(s1)
-+    8000428e:	1ff7f793          	and	a5,a5,511
-+    80004292:	97a6                	add	a5,a5,s1
-+    80004294:	0187c783          	lbu	a5,24(a5)
-+    80004298:	faf40fa3          	sb	a5,-65(s0)
-     if(copyout(pr->pagetable, addr + i, &ch, 1) == -1)
--    80004412:	4685                	li	a3,1
--    80004414:	fbf40613          	addi	a2,s0,-65
--    80004418:	85ca                	mv	a1,s2
--    8000441a:	050a3503          	ld	a0,80(s4)
--    8000441e:	934fd0ef          	jal	80001552 <copyout>
--    80004422:	01650763          	beq	a0,s6,80004430 <piperead+0xb2>
-+    8000429c:	4685                	li	a3,1
-+    8000429e:	fbf40613          	add	a2,s0,-65
-+    800042a2:	85ca                	mv	a1,s2
-+    800042a4:	050a3503          	ld	a0,80(s4)
-+    800042a8:	a40fd0ef          	jal	800014e8 <copyout>
-+    800042ac:	01650763          	beq	a0,s6,800042ba <piperead+0xa0>
-   for(i = 0; i < n; i++){  /*DOC: piperead-copy */
--    80004426:	2985                	addiw	s3,s3,1
--    80004428:	0905                	addi	s2,s2,1
--    8000442a:	fd3a93e3          	bne	s5,s3,800043f0 <piperead+0x72>
--    8000442e:	89d6                	mv	s3,s5
-+    800042b0:	2985                	addw	s3,s3,1
-+    800042b2:	0905                	add	s2,s2,1
-+    800042b4:	fd3a93e3          	bne	s5,s3,8000427a <piperead+0x60>
-+    800042b8:	89d6                	mv	s3,s5
-       break;
-   }
-   wakeup(&pi->nwrite);  /*DOC: piperead-wakeup */
--    80004430:	21c48513          	addi	a0,s1,540
--    80004434:	ac7fd0ef          	jal	80001efa <wakeup>
-+    800042ba:	21c48513          	add	a0,s1,540
-+    800042be:	b8bfd0ef          	jal	80001e48 <wakeup>
-   release(&pi->lock);
--    80004438:	8526                	mv	a0,s1
--    8000443a:	853fc0ef          	jal	80000c8c <release>
--    8000443e:	6b42                	ld	s6,16(sp)
-+    800042c2:	8526                	mv	a0,s1
-+    800042c4:	975fc0ef          	jal	80000c38 <release>
-   return i;
- }
--    80004440:	854e                	mv	a0,s3
--    80004442:	60a6                	ld	ra,72(sp)
--    80004444:	6406                	ld	s0,64(sp)
--    80004446:	74e2                	ld	s1,56(sp)
--    80004448:	7942                	ld	s2,48(sp)
--    8000444a:	79a2                	ld	s3,40(sp)
--    8000444c:	7a02                	ld	s4,32(sp)
--    8000444e:	6ae2                	ld	s5,24(sp)
--    80004450:	6161                	addi	sp,sp,80
--    80004452:	8082                	ret
--
--0000000080004454 <flags2perm>:
-+    800042c8:	854e                	mv	a0,s3
-+    800042ca:	60a6                	ld	ra,72(sp)
-+    800042cc:	6406                	ld	s0,64(sp)
-+    800042ce:	74e2                	ld	s1,56(sp)
-+    800042d0:	7942                	ld	s2,48(sp)
-+    800042d2:	79a2                	ld	s3,40(sp)
-+    800042d4:	7a02                	ld	s4,32(sp)
-+    800042d6:	6ae2                	ld	s5,24(sp)
-+    800042d8:	6b42                	ld	s6,16(sp)
-+    800042da:	6161                	add	sp,sp,80
-+    800042dc:	8082                	ret
-+      release(&pi->lock);
-+    800042de:	8526                	mv	a0,s1
-+    800042e0:	959fc0ef          	jal	80000c38 <release>
-+      return -1;
-+    800042e4:	59fd                	li	s3,-1
-+    800042e6:	b7cd                	j	800042c8 <piperead+0xae>
-+
-+00000000800042e8 <flags2perm>:
- #include "elf.h"
- 
- static int loadseg(pde_t *, uint64, struct inode *, uint, uint);
- 
- int flags2perm(int flags)
- {
--    80004454:	1141                	addi	sp,sp,-16
--    80004456:	e422                	sd	s0,8(sp)
--    80004458:	0800                	addi	s0,sp,16
--    8000445a:	87aa                	mv	a5,a0
-+    800042e8:	1141                	add	sp,sp,-16
-+    800042ea:	e422                	sd	s0,8(sp)
-+    800042ec:	0800                	add	s0,sp,16
-+    800042ee:	87aa                	mv	a5,a0
-     int perm = 0;
-     if(flags & 0x1)
--    8000445c:	8905                	andi	a0,a0,1
--    8000445e:	050e                	slli	a0,a0,0x3
-+    800042f0:	8905                	and	a0,a0,1
-+    800042f2:	050e                	sll	a0,a0,0x3
-       perm = PTE_X;
-     if(flags & 0x2)
--    80004460:	8b89                	andi	a5,a5,2
--    80004462:	c399                	beqz	a5,80004468 <flags2perm+0x14>
-+    800042f4:	8b89                	and	a5,a5,2
-+    800042f6:	c399                	beqz	a5,800042fc <flags2perm+0x14>
-       perm |= PTE_W;
--    80004464:	00456513          	ori	a0,a0,4
-+    800042f8:	00456513          	or	a0,a0,4
-     return perm;
- }
--    80004468:	6422                	ld	s0,8(sp)
--    8000446a:	0141                	addi	sp,sp,16
--    8000446c:	8082                	ret
-+    800042fc:	6422                	ld	s0,8(sp)
-+    800042fe:	0141                	add	sp,sp,16
-+    80004300:	8082                	ret
- 
--000000008000446e <exec>:
-+0000000080004302 <exec>:
- 
- int
- exec(char *path, char **argv)
- {
--    8000446e:	df010113          	addi	sp,sp,-528
--    80004472:	20113423          	sd	ra,520(sp)
--    80004476:	20813023          	sd	s0,512(sp)
--    8000447a:	ffa6                	sd	s1,504(sp)
--    8000447c:	fbca                	sd	s2,496(sp)
--    8000447e:	0c00                	addi	s0,sp,528
--    80004480:	892a                	mv	s2,a0
--    80004482:	dea43c23          	sd	a0,-520(s0)
--    80004486:	e0b43023          	sd	a1,-512(s0)
-+    80004302:	df010113          	add	sp,sp,-528
-+    80004306:	20113423          	sd	ra,520(sp)
-+    8000430a:	20813023          	sd	s0,512(sp)
-+    8000430e:	ffa6                	sd	s1,504(sp)
-+    80004310:	fbca                	sd	s2,496(sp)
-+    80004312:	f7ce                	sd	s3,488(sp)
-+    80004314:	f3d2                	sd	s4,480(sp)
-+    80004316:	efd6                	sd	s5,472(sp)
-+    80004318:	ebda                	sd	s6,464(sp)
-+    8000431a:	e7de                	sd	s7,456(sp)
-+    8000431c:	e3e2                	sd	s8,448(sp)
-+    8000431e:	ff66                	sd	s9,440(sp)
-+    80004320:	fb6a                	sd	s10,432(sp)
-+    80004322:	f76e                	sd	s11,424(sp)
-+    80004324:	0c00                	add	s0,sp,528
-+    80004326:	892a                	mv	s2,a0
-+    80004328:	dea43c23          	sd	a0,-520(s0)
-+    8000432c:	e0b43023          	sd	a1,-512(s0)
-   uint64 argc, sz = 0, sp, ustack[MAXARG], stackbase;
-   struct elfhdr elf;
-   struct inode *ip;
-   struct proghdr ph;
-   pagetable_t pagetable = 0, oldpagetable;
-   struct proc *p = myproc();
--    8000448a:	c56fd0ef          	jal	800018e0 <myproc>
--    8000448e:	84aa                	mv	s1,a0
-+    80004330:	d00fd0ef          	jal	80001830 <myproc>
-+    80004334:	84aa                	mv	s1,a0
- 
-   begin_op();
--    80004490:	dc6ff0ef          	jal	80003a56 <begin_op>
-+    80004336:	e1aff0ef          	jal	80003950 <begin_op>
- 
-   if((ip = namei(path)) == 0){
--    80004494:	854a                	mv	a0,s2
--    80004496:	c04ff0ef          	jal	8000389a <namei>
--    8000449a:	c931                	beqz	a0,800044ee <exec+0x80>
--    8000449c:	f3d2                	sd	s4,480(sp)
--    8000449e:	8a2a                	mv	s4,a0
-+    8000433a:	854a                	mv	a0,s2
-+    8000433c:	c58ff0ef          	jal	80003794 <namei>
-+    80004340:	c12d                	beqz	a0,800043a2 <exec+0xa0>
-+    80004342:	8a2a                	mv	s4,a0
-     end_op();
-     return -1;
-   }
-   ilock(ip);
--    800044a0:	d21fe0ef          	jal	800031c0 <ilock>
-+    80004344:	d9ffe0ef          	jal	800030e2 <ilock>
- 
-   /* Check ELF header */
-   if(readi(ip, 0, (uint64)&elf, 0, sizeof(elf)) != sizeof(elf))
--    800044a4:	04000713          	li	a4,64
--    800044a8:	4681                	li	a3,0
--    800044aa:	e5040613          	addi	a2,s0,-432
--    800044ae:	4581                	li	a1,0
--    800044b0:	8552                	mv	a0,s4
--    800044b2:	f63fe0ef          	jal	80003414 <readi>
--    800044b6:	04000793          	li	a5,64
--    800044ba:	00f51a63          	bne	a0,a5,800044ce <exec+0x60>
-+    80004348:	04000713          	li	a4,64
-+    8000434c:	4681                	li	a3,0
-+    8000434e:	e5040613          	add	a2,s0,-432
-+    80004352:	4581                	li	a1,0
-+    80004354:	8552                	mv	a0,s4
-+    80004356:	fddfe0ef          	jal	80003332 <readi>
-+    8000435a:	04000793          	li	a5,64
-+    8000435e:	00f51a63          	bne	a0,a5,80004372 <exec+0x70>
-     goto bad;
- 
-   if(elf.magic != ELF_MAGIC)
--    800044be:	e5042703          	lw	a4,-432(s0)
--    800044c2:	464c47b7          	lui	a5,0x464c4
--    800044c6:	57f78793          	addi	a5,a5,1407 # 464c457f <_entry-0x39b3ba81>
--    800044ca:	02f70663          	beq	a4,a5,800044f6 <exec+0x88>
-+    80004362:	e5042703          	lw	a4,-432(s0)
-+    80004366:	464c47b7          	lui	a5,0x464c4
-+    8000436a:	57f78793          	add	a5,a5,1407 # 464c457f <_entry-0x39b3ba81>
-+    8000436e:	02f70e63          	beq	a4,a5,800043aa <exec+0xa8>
- 
-  bad:
-   if(pagetable)
-     proc_freepagetable(pagetable, sz);
-   if(ip){
-     iunlockput(ip);
--    800044ce:	8552                	mv	a0,s4
--    800044d0:	efbfe0ef          	jal	800033ca <iunlockput>
-+    80004372:	8552                	mv	a0,s4
-+    80004374:	f75fe0ef          	jal	800032e8 <iunlockput>
-     end_op();
--    800044d4:	decff0ef          	jal	80003ac0 <end_op>
-+    80004378:	e42ff0ef          	jal	800039ba <end_op>
-   }
-   return -1;
--    800044d8:	557d                	li	a0,-1
--    800044da:	7a1e                	ld	s4,480(sp)
--}
--    800044dc:	20813083          	ld	ra,520(sp)
--    800044e0:	20013403          	ld	s0,512(sp)
--    800044e4:	74fe                	ld	s1,504(sp)
--    800044e6:	795e                	ld	s2,496(sp)
--    800044e8:	21010113          	addi	sp,sp,528
--    800044ec:	8082                	ret
-+    8000437c:	557d                	li	a0,-1
-+}
-+    8000437e:	20813083          	ld	ra,520(sp)
-+    80004382:	20013403          	ld	s0,512(sp)
-+    80004386:	74fe                	ld	s1,504(sp)
-+    80004388:	795e                	ld	s2,496(sp)
-+    8000438a:	79be                	ld	s3,488(sp)
-+    8000438c:	7a1e                	ld	s4,480(sp)
-+    8000438e:	6afe                	ld	s5,472(sp)
-+    80004390:	6b5e                	ld	s6,464(sp)
-+    80004392:	6bbe                	ld	s7,456(sp)
-+    80004394:	6c1e                	ld	s8,448(sp)
-+    80004396:	7cfa                	ld	s9,440(sp)
-+    80004398:	7d5a                	ld	s10,432(sp)
-+    8000439a:	7dba                	ld	s11,424(sp)
-+    8000439c:	21010113          	add	sp,sp,528
-+    800043a0:	8082                	ret
-     end_op();
--    800044ee:	dd2ff0ef          	jal	80003ac0 <end_op>
-+    800043a2:	e18ff0ef          	jal	800039ba <end_op>
-     return -1;
--    800044f2:	557d                	li	a0,-1
--    800044f4:	b7e5                	j	800044dc <exec+0x6e>
--    800044f6:	ebda                	sd	s6,464(sp)
-+    800043a6:	557d                	li	a0,-1
-+    800043a8:	bfd9                	j	8000437e <exec+0x7c>
-   if((pagetable = proc_pagetable(p)) == 0)
--    800044f8:	8526                	mv	a0,s1
--    800044fa:	c8efd0ef          	jal	80001988 <proc_pagetable>
--    800044fe:	8b2a                	mv	s6,a0
--    80004500:	2c050b63          	beqz	a0,800047d6 <exec+0x368>
--    80004504:	f7ce                	sd	s3,488(sp)
--    80004506:	efd6                	sd	s5,472(sp)
--    80004508:	e7de                	sd	s7,456(sp)
--    8000450a:	e3e2                	sd	s8,448(sp)
--    8000450c:	ff66                	sd	s9,440(sp)
--    8000450e:	fb6a                	sd	s10,432(sp)
-+    800043aa:	8526                	mv	a0,s1
-+    800043ac:	d2cfd0ef          	jal	800018d8 <proc_pagetable>
-+    800043b0:	8b2a                	mv	s6,a0
-+    800043b2:	d161                	beqz	a0,80004372 <exec+0x70>
-   for(i=0, off=elf.phoff; i<elf.phnum; i++, off+=sizeof(ph)){
--    80004510:	e7042d03          	lw	s10,-400(s0)
--    80004514:	e8845783          	lhu	a5,-376(s0)
--    80004518:	12078963          	beqz	a5,8000464a <exec+0x1dc>
--    8000451c:	f76e                	sd	s11,424(sp)
-+    800043b4:	e7042d03          	lw	s10,-400(s0)
-+    800043b8:	e8845783          	lhu	a5,-376(s0)
-+    800043bc:	0e078863          	beqz	a5,800044ac <exec+0x1aa>
-   uint64 argc, sz = 0, sp, ustack[MAXARG], stackbase;
--    8000451e:	4901                	li	s2,0
-+    800043c0:	4901                	li	s2,0
-   for(i=0, off=elf.phoff; i<elf.phnum; i++, off+=sizeof(ph)){
--    80004520:	4d81                	li	s11,0
-+    800043c2:	4d81                	li	s11,0
-     if(ph.vaddr % PGSIZE != 0)
--    80004522:	6c85                	lui	s9,0x1
--    80004524:	fffc8793          	addi	a5,s9,-1 # fff <_entry-0x7ffff001>
--    80004528:	def43823          	sd	a5,-528(s0)
-+    800043c4:	6c85                	lui	s9,0x1
-+    800043c6:	fffc8793          	add	a5,s9,-1 # fff <_entry-0x7ffff001>
-+    800043ca:	def43823          	sd	a5,-528(s0)
- 
-   for(i = 0; i < sz; i += PGSIZE){
-     pa = walkaddr(pagetable, va + i);
-     if(pa == 0)
-       panic("loadseg: address should exist");
-     if(sz - i < PGSIZE)
--    8000452c:	6a85                	lui	s5,0x1
--    8000452e:	a085                	j	8000458e <exec+0x120>
-+    800043ce:	6a85                	lui	s5,0x1
-+    800043d0:	a085                	j	80004430 <exec+0x12e>
-       panic("loadseg: address should exist");
--    80004530:	00003517          	auipc	a0,0x3
--    80004534:	0d050513          	addi	a0,a0,208 # 80007600 <etext+0x600>
--    80004538:	a5cfc0ef          	jal	80000794 <panic>
-+    800043d2:	00003517          	auipc	a0,0x3
-+    800043d6:	33e50513          	add	a0,a0,830 # 80007710 <syscalls+0x280>
-+    800043da:	b84fc0ef          	jal	8000075e <panic>
-     if(sz - i < PGSIZE)
--    8000453c:	2481                	sext.w	s1,s1
-+    800043de:	2481                	sext.w	s1,s1
-       n = sz - i;
-     else
-       n = PGSIZE;
-     if(readi(ip, 0, (uint64)pa, offset+i, n) != n)
--    8000453e:	8726                	mv	a4,s1
--    80004540:	012c06bb          	addw	a3,s8,s2
--    80004544:	4581                	li	a1,0
--    80004546:	8552                	mv	a0,s4
--    80004548:	ecdfe0ef          	jal	80003414 <readi>
--    8000454c:	2501                	sext.w	a0,a0
--    8000454e:	24a49a63          	bne	s1,a0,800047a2 <exec+0x334>
-+    800043e0:	8726                	mv	a4,s1
-+    800043e2:	012c06bb          	addw	a3,s8,s2
-+    800043e6:	4581                	li	a1,0
-+    800043e8:	8552                	mv	a0,s4
-+    800043ea:	f49fe0ef          	jal	80003332 <readi>
-+    800043ee:	2501                	sext.w	a0,a0
-+    800043f0:	20a49a63          	bne	s1,a0,80004604 <exec+0x302>
-   for(i = 0; i < sz; i += PGSIZE){
--    80004552:	012a893b          	addw	s2,s5,s2
--    80004556:	03397363          	bgeu	s2,s3,8000457c <exec+0x10e>
-+    800043f4:	012a893b          	addw	s2,s5,s2
-+    800043f8:	03397363          	bgeu	s2,s3,8000441e <exec+0x11c>
-     pa = walkaddr(pagetable, va + i);
--    8000455a:	02091593          	slli	a1,s2,0x20
--    8000455e:	9181                	srli	a1,a1,0x20
--    80004560:	95de                	add	a1,a1,s7
--    80004562:	855a                	mv	a0,s6
--    80004564:	a73fc0ef          	jal	80000fd6 <walkaddr>
--    80004568:	862a                	mv	a2,a0
-+    800043fc:	02091593          	sll	a1,s2,0x20
-+    80004400:	9181                	srl	a1,a1,0x20
-+    80004402:	95de                	add	a1,a1,s7
-+    80004404:	855a                	mv	a0,s6
-+    80004406:	b83fc0ef          	jal	80000f88 <walkaddr>
-+    8000440a:	862a                	mv	a2,a0
-     if(pa == 0)
--    8000456a:	d179                	beqz	a0,80004530 <exec+0xc2>
-+    8000440c:	d179                	beqz	a0,800043d2 <exec+0xd0>
-     if(sz - i < PGSIZE)
--    8000456c:	412984bb          	subw	s1,s3,s2
--    80004570:	0004879b          	sext.w	a5,s1
--    80004574:	fcfcf4e3          	bgeu	s9,a5,8000453c <exec+0xce>
--    80004578:	84d6                	mv	s1,s5
--    8000457a:	b7c9                	j	8000453c <exec+0xce>
--    sz = sz1;
--    8000457c:	e0843903          	ld	s2,-504(s0)
-+    8000440e:	412984bb          	subw	s1,s3,s2
-+    80004412:	0004879b          	sext.w	a5,s1
-+    80004416:	fcfcf4e3          	bgeu	s9,a5,800043de <exec+0xdc>
-+    8000441a:	84d6                	mv	s1,s5
-+    8000441c:	b7c9                	j	800043de <exec+0xdc>
-+    if((sz1 = uvmalloc(pagetable, sz, ph.vaddr + ph.memsz, flags2perm(ph.flags))) == 0)
-+    8000441e:	e0843903          	ld	s2,-504(s0)
-   for(i=0, off=elf.phoff; i<elf.phnum; i++, off+=sizeof(ph)){
--    80004580:	2d85                	addiw	s11,s11,1
--    80004582:	038d0d1b          	addiw	s10,s10,56 # 1038 <_entry-0x7fffefc8>
--    80004586:	e8845783          	lhu	a5,-376(s0)
--    8000458a:	08fdd063          	bge	s11,a5,8000460a <exec+0x19c>
-+    80004422:	2d85                	addw	s11,s11,1
-+    80004424:	038d0d1b          	addw	s10,s10,56 # 1038 <_entry-0x7fffefc8>
-+    80004428:	e8845783          	lhu	a5,-376(s0)
-+    8000442c:	08fdd163          	bge	s11,a5,800044ae <exec+0x1ac>
-     if(readi(ip, 0, (uint64)&ph, off, sizeof(ph)) != sizeof(ph))
--    8000458e:	2d01                	sext.w	s10,s10
--    80004590:	03800713          	li	a4,56
--    80004594:	86ea                	mv	a3,s10
--    80004596:	e1840613          	addi	a2,s0,-488
--    8000459a:	4581                	li	a1,0
--    8000459c:	8552                	mv	a0,s4
--    8000459e:	e77fe0ef          	jal	80003414 <readi>
--    800045a2:	03800793          	li	a5,56
--    800045a6:	1cf51663          	bne	a0,a5,80004772 <exec+0x304>
-+    80004430:	2d01                	sext.w	s10,s10
-+    80004432:	03800713          	li	a4,56
-+    80004436:	86ea                	mv	a3,s10
-+    80004438:	e1840613          	add	a2,s0,-488
-+    8000443c:	4581                	li	a1,0
-+    8000443e:	8552                	mv	a0,s4
-+    80004440:	ef3fe0ef          	jal	80003332 <readi>
-+    80004444:	03800793          	li	a5,56
-+    80004448:	1af51c63          	bne	a0,a5,80004600 <exec+0x2fe>
-     if(ph.type != ELF_PROG_LOAD)
--    800045aa:	e1842783          	lw	a5,-488(s0)
--    800045ae:	4705                	li	a4,1
--    800045b0:	fce798e3          	bne	a5,a4,80004580 <exec+0x112>
-+    8000444c:	e1842783          	lw	a5,-488(s0)
-+    80004450:	4705                	li	a4,1
-+    80004452:	fce798e3          	bne	a5,a4,80004422 <exec+0x120>
-     if(ph.memsz < ph.filesz)
--    800045b4:	e4043483          	ld	s1,-448(s0)
--    800045b8:	e3843783          	ld	a5,-456(s0)
--    800045bc:	1af4ef63          	bltu	s1,a5,8000477a <exec+0x30c>
-+    80004456:	e4043483          	ld	s1,-448(s0)
-+    8000445a:	e3843783          	ld	a5,-456(s0)
-+    8000445e:	1af4ec63          	bltu	s1,a5,80004616 <exec+0x314>
-     if(ph.vaddr + ph.memsz < ph.vaddr)
--    800045c0:	e2843783          	ld	a5,-472(s0)
--    800045c4:	94be                	add	s1,s1,a5
--    800045c6:	1af4ee63          	bltu	s1,a5,80004782 <exec+0x314>
-+    80004462:	e2843783          	ld	a5,-472(s0)
-+    80004466:	94be                	add	s1,s1,a5
-+    80004468:	1af4ea63          	bltu	s1,a5,8000461c <exec+0x31a>
-     if(ph.vaddr % PGSIZE != 0)
--    800045ca:	df043703          	ld	a4,-528(s0)
--    800045ce:	8ff9                	and	a5,a5,a4
--    800045d0:	1a079d63          	bnez	a5,8000478a <exec+0x31c>
-+    8000446c:	df043703          	ld	a4,-528(s0)
-+    80004470:	8ff9                	and	a5,a5,a4
-+    80004472:	1a079863          	bnez	a5,80004622 <exec+0x320>
-     if((sz1 = uvmalloc(pagetable, sz, ph.vaddr + ph.memsz, flags2perm(ph.flags))) == 0)
--    800045d4:	e1c42503          	lw	a0,-484(s0)
--    800045d8:	e7dff0ef          	jal	80004454 <flags2perm>
--    800045dc:	86aa                	mv	a3,a0
--    800045de:	8626                	mv	a2,s1
--    800045e0:	85ca                	mv	a1,s2
--    800045e2:	855a                	mv	a0,s6
--    800045e4:	d5bfc0ef          	jal	8000133e <uvmalloc>
--    800045e8:	e0a43423          	sd	a0,-504(s0)
--    800045ec:	1a050363          	beqz	a0,80004792 <exec+0x324>
-+    80004476:	e1c42503          	lw	a0,-484(s0)
-+    8000447a:	e6fff0ef          	jal	800042e8 <flags2perm>
-+    8000447e:	86aa                	mv	a3,a0
-+    80004480:	8626                	mv	a2,s1
-+    80004482:	85ca                	mv	a1,s2
-+    80004484:	855a                	mv	a0,s6
-+    80004486:	e5bfc0ef          	jal	800012e0 <uvmalloc>
-+    8000448a:	e0a43423          	sd	a0,-504(s0)
-+    8000448e:	18050d63          	beqz	a0,80004628 <exec+0x326>
-     if(loadseg(pagetable, ph.vaddr, ip, ph.off, ph.filesz) < 0)
--    800045f0:	e2843b83          	ld	s7,-472(s0)
--    800045f4:	e2042c03          	lw	s8,-480(s0)
--    800045f8:	e3842983          	lw	s3,-456(s0)
-+    80004492:	e2843b83          	ld	s7,-472(s0)
-+    80004496:	e2042c03          	lw	s8,-480(s0)
-+    8000449a:	e3842983          	lw	s3,-456(s0)
-   for(i = 0; i < sz; i += PGSIZE){
--    800045fc:	00098463          	beqz	s3,80004604 <exec+0x196>
--    80004600:	4901                	li	s2,0
--    80004602:	bfa1                	j	8000455a <exec+0xec>
--    sz = sz1;
--    80004604:	e0843903          	ld	s2,-504(s0)
--    80004608:	bfa5                	j	80004580 <exec+0x112>
--    8000460a:	7dba                	ld	s11,424(sp)
-+    8000449e:	00098463          	beqz	s3,800044a6 <exec+0x1a4>
-+    800044a2:	4901                	li	s2,0
-+    800044a4:	bfa1                	j	800043fc <exec+0xfa>
-+    if((sz1 = uvmalloc(pagetable, sz, ph.vaddr + ph.memsz, flags2perm(ph.flags))) == 0)
-+    800044a6:	e0843903          	ld	s2,-504(s0)
-+    800044aa:	bfa5                	j	80004422 <exec+0x120>
-+  uint64 argc, sz = 0, sp, ustack[MAXARG], stackbase;
-+    800044ac:	4901                	li	s2,0
-   iunlockput(ip);
--    8000460c:	8552                	mv	a0,s4
--    8000460e:	dbdfe0ef          	jal	800033ca <iunlockput>
-+    800044ae:	8552                	mv	a0,s4
-+    800044b0:	e39fe0ef          	jal	800032e8 <iunlockput>
-   end_op();
--    80004612:	caeff0ef          	jal	80003ac0 <end_op>
-+    800044b4:	d06ff0ef          	jal	800039ba <end_op>
-   p = myproc();
--    80004616:	acafd0ef          	jal	800018e0 <myproc>
--    8000461a:	8aaa                	mv	s5,a0
-+    800044b8:	b78fd0ef          	jal	80001830 <myproc>
-+    800044bc:	8aaa                	mv	s5,a0
-   uint64 oldsz = p->sz;
--    8000461c:	04853c83          	ld	s9,72(a0)
-+    800044be:	04853c83          	ld	s9,72(a0)
-   sz = PGROUNDUP(sz);
--    80004620:	6985                	lui	s3,0x1
--    80004622:	19fd                	addi	s3,s3,-1 # fff <_entry-0x7ffff001>
--    80004624:	99ca                	add	s3,s3,s2
--    80004626:	77fd                	lui	a5,0xfffff
--    80004628:	00f9f9b3          	and	s3,s3,a5
-+    800044c2:	6985                	lui	s3,0x1
-+    800044c4:	19fd                	add	s3,s3,-1 # fff <_entry-0x7ffff001>
-+    800044c6:	99ca                	add	s3,s3,s2
-+    800044c8:	77fd                	lui	a5,0xfffff
-+    800044ca:	00f9f9b3          	and	s3,s3,a5
-   if((sz1 = uvmalloc(pagetable, sz, sz + (USERSTACK+1)*PGSIZE, PTE_W)) == 0)
--    8000462c:	4691                	li	a3,4
--    8000462e:	6609                	lui	a2,0x2
--    80004630:	964e                	add	a2,a2,s3
--    80004632:	85ce                	mv	a1,s3
--    80004634:	855a                	mv	a0,s6
--    80004636:	d09fc0ef          	jal	8000133e <uvmalloc>
--    8000463a:	892a                	mv	s2,a0
--    8000463c:	e0a43423          	sd	a0,-504(s0)
--    80004640:	e519                	bnez	a0,8000464e <exec+0x1e0>
-+    800044ce:	4691                	li	a3,4
-+    800044d0:	6609                	lui	a2,0x2
-+    800044d2:	964e                	add	a2,a2,s3
-+    800044d4:	85ce                	mv	a1,s3
-+    800044d6:	855a                	mv	a0,s6
-+    800044d8:	e09fc0ef          	jal	800012e0 <uvmalloc>
-+    800044dc:	892a                	mv	s2,a0
-+    800044de:	e0a43423          	sd	a0,-504(s0)
-+    800044e2:	e509                	bnez	a0,800044ec <exec+0x1ea>
-   if(pagetable)
--    80004642:	e1343423          	sd	s3,-504(s0)
--    80004646:	4a01                	li	s4,0
--    80004648:	aab1                	j	800047a4 <exec+0x336>
--  uint64 argc, sz = 0, sp, ustack[MAXARG], stackbase;
--    8000464a:	4901                	li	s2,0
--    8000464c:	b7c1                	j	8000460c <exec+0x19e>
-+    800044e4:	e1343423          	sd	s3,-504(s0)
-+    800044e8:	4a01                	li	s4,0
-+    800044ea:	aa29                	j	80004604 <exec+0x302>
-   uvmclear(pagetable, sz-(USERSTACK+1)*PGSIZE);
--    8000464e:	75f9                	lui	a1,0xffffe
--    80004650:	95aa                	add	a1,a1,a0
--    80004652:	855a                	mv	a0,s6
--    80004654:	ed5fc0ef          	jal	80001528 <uvmclear>
-+    800044ec:	75f9                	lui	a1,0xffffe
-+    800044ee:	95aa                	add	a1,a1,a0
-+    800044f0:	855a                	mv	a0,s6
-+    800044f2:	fcdfc0ef          	jal	800014be <uvmclear>
-   stackbase = sp - USERSTACK*PGSIZE;
--    80004658:	7bfd                	lui	s7,0xfffff
--    8000465a:	9bca                	add	s7,s7,s2
-+    800044f6:	7bfd                	lui	s7,0xfffff
-+    800044f8:	9bca                	add	s7,s7,s2
-   for(argc = 0; argv[argc]; argc++) {
--    8000465c:	e0043783          	ld	a5,-512(s0)
--    80004660:	6388                	ld	a0,0(a5)
--    80004662:	cd39                	beqz	a0,800046c0 <exec+0x252>
--    80004664:	e9040993          	addi	s3,s0,-368
--    80004668:	f9040c13          	addi	s8,s0,-112
--    8000466c:	4481                	li	s1,0
-+    800044fa:	e0043783          	ld	a5,-512(s0)
-+    800044fe:	6388                	ld	a0,0(a5)
-+    80004500:	cd39                	beqz	a0,8000455e <exec+0x25c>
-+    80004502:	e9040993          	add	s3,s0,-368
-+    80004506:	f9040c13          	add	s8,s0,-112
-+    8000450a:	4481                	li	s1,0
-     sp -= strlen(argv[argc]) + 1;
--    8000466e:	fcafc0ef          	jal	80000e38 <strlen>
--    80004672:	0015079b          	addiw	a5,a0,1
--    80004676:	40f907b3          	sub	a5,s2,a5
-+    8000450c:	8dffc0ef          	jal	80000dea <strlen>
-+    80004510:	0015079b          	addw	a5,a0,1
-+    80004514:	40f907b3          	sub	a5,s2,a5
-     sp -= sp % 16; /* riscv sp must be 16-byte aligned */
--    8000467a:	ff07f913          	andi	s2,a5,-16
-+    80004518:	ff07f913          	and	s2,a5,-16
-     if(sp < stackbase)
--    8000467e:	11796e63          	bltu	s2,s7,8000479a <exec+0x32c>
-+    8000451c:	11796963          	bltu	s2,s7,8000462e <exec+0x32c>
-     if(copyout(pagetable, sp, argv[argc], strlen(argv[argc]) + 1) < 0)
--    80004682:	e0043d03          	ld	s10,-512(s0)
--    80004686:	000d3a03          	ld	s4,0(s10)
--    8000468a:	8552                	mv	a0,s4
--    8000468c:	facfc0ef          	jal	80000e38 <strlen>
--    80004690:	0015069b          	addiw	a3,a0,1
--    80004694:	8652                	mv	a2,s4
--    80004696:	85ca                	mv	a1,s2
--    80004698:	855a                	mv	a0,s6
--    8000469a:	eb9fc0ef          	jal	80001552 <copyout>
--    8000469e:	10054063          	bltz	a0,8000479e <exec+0x330>
-+    80004520:	e0043d03          	ld	s10,-512(s0)
-+    80004524:	000d3a03          	ld	s4,0(s10)
-+    80004528:	8552                	mv	a0,s4
-+    8000452a:	8c1fc0ef          	jal	80000dea <strlen>
-+    8000452e:	0015069b          	addw	a3,a0,1
-+    80004532:	8652                	mv	a2,s4
-+    80004534:	85ca                	mv	a1,s2
-+    80004536:	855a                	mv	a0,s6
-+    80004538:	fb1fc0ef          	jal	800014e8 <copyout>
-+    8000453c:	0e054b63          	bltz	a0,80004632 <exec+0x330>
-     ustack[argc] = sp;
--    800046a2:	0129b023          	sd	s2,0(s3)
-+    80004540:	0129b023          	sd	s2,0(s3)
-   for(argc = 0; argv[argc]; argc++) {
--    800046a6:	0485                	addi	s1,s1,1
--    800046a8:	008d0793          	addi	a5,s10,8
--    800046ac:	e0f43023          	sd	a5,-512(s0)
--    800046b0:	008d3503          	ld	a0,8(s10)
--    800046b4:	c909                	beqz	a0,800046c6 <exec+0x258>
-+    80004544:	0485                	add	s1,s1,1
-+    80004546:	008d0793          	add	a5,s10,8
-+    8000454a:	e0f43023          	sd	a5,-512(s0)
-+    8000454e:	008d3503          	ld	a0,8(s10)
-+    80004552:	c909                	beqz	a0,80004564 <exec+0x262>
-     if(argc >= MAXARG)
--    800046b6:	09a1                	addi	s3,s3,8
--    800046b8:	fb899be3          	bne	s3,s8,8000466e <exec+0x200>
-+    80004554:	09a1                	add	s3,s3,8
-+    80004556:	fb899be3          	bne	s3,s8,8000450c <exec+0x20a>
-   ip = 0;
--    800046bc:	4a01                	li	s4,0
--    800046be:	a0dd                	j	800047a4 <exec+0x336>
-+    8000455a:	4a01                	li	s4,0
-+    8000455c:	a065                	j	80004604 <exec+0x302>
-   sp = sz;
--    800046c0:	e0843903          	ld	s2,-504(s0)
-+    8000455e:	e0843903          	ld	s2,-504(s0)
-   for(argc = 0; argv[argc]; argc++) {
--    800046c4:	4481                	li	s1,0
-+    80004562:	4481                	li	s1,0
-   ustack[argc] = 0;
--    800046c6:	00349793          	slli	a5,s1,0x3
--    800046ca:	f9078793          	addi	a5,a5,-112 # ffffffffffffef90 <end+0xffffffff7ffdba60>
--    800046ce:	97a2                	add	a5,a5,s0
--    800046d0:	f007b023          	sd	zero,-256(a5)
-+    80004564:	00349793          	sll	a5,s1,0x3
-+    80004568:	f9078793          	add	a5,a5,-112 # ffffffffffffef90 <end+0xffffffff7ffde350>
-+    8000456c:	97a2                	add	a5,a5,s0
-+    8000456e:	f007b023          	sd	zero,-256(a5)
-   sp -= (argc+1) * sizeof(uint64);
--    800046d4:	00148693          	addi	a3,s1,1
--    800046d8:	068e                	slli	a3,a3,0x3
--    800046da:	40d90933          	sub	s2,s2,a3
-+    80004572:	00148693          	add	a3,s1,1
-+    80004576:	068e                	sll	a3,a3,0x3
-+    80004578:	40d90933          	sub	s2,s2,a3
-   sp -= sp % 16;
--    800046de:	ff097913          	andi	s2,s2,-16
-+    8000457c:	ff097913          	and	s2,s2,-16
-   sz = sz1;
--    800046e2:	e0843983          	ld	s3,-504(s0)
-+    80004580:	e0843983          	ld	s3,-504(s0)
-   if(sp < stackbase)
--    800046e6:	f5796ee3          	bltu	s2,s7,80004642 <exec+0x1d4>
-+    80004584:	f77960e3          	bltu	s2,s7,800044e4 <exec+0x1e2>
-   if(copyout(pagetable, sp, (char *)ustack, (argc+1)*sizeof(uint64)) < 0)
--    800046ea:	e9040613          	addi	a2,s0,-368
--    800046ee:	85ca                	mv	a1,s2
--    800046f0:	855a                	mv	a0,s6
--    800046f2:	e61fc0ef          	jal	80001552 <copyout>
--    800046f6:	0e054263          	bltz	a0,800047da <exec+0x36c>
-+    80004588:	e9040613          	add	a2,s0,-368
-+    8000458c:	85ca                	mv	a1,s2
-+    8000458e:	855a                	mv	a0,s6
-+    80004590:	f59fc0ef          	jal	800014e8 <copyout>
-+    80004594:	0a054163          	bltz	a0,80004636 <exec+0x334>
-   p->trapframe->a1 = sp;
--    800046fa:	058ab783          	ld	a5,88(s5) # 1058 <_entry-0x7fffefa8>
--    800046fe:	0727bc23          	sd	s2,120(a5)
-+    80004598:	058ab783          	ld	a5,88(s5) # 1058 <_entry-0x7fffefa8>
-+    8000459c:	0727bc23          	sd	s2,120(a5)
-   for(last=s=path; *s; s++)
--    80004702:	df843783          	ld	a5,-520(s0)
--    80004706:	0007c703          	lbu	a4,0(a5)
--    8000470a:	cf11                	beqz	a4,80004726 <exec+0x2b8>
--    8000470c:	0785                	addi	a5,a5,1
-+    800045a0:	df843783          	ld	a5,-520(s0)
-+    800045a4:	0007c703          	lbu	a4,0(a5)
-+    800045a8:	cf11                	beqz	a4,800045c4 <exec+0x2c2>
-+    800045aa:	0785                	add	a5,a5,1
-     if(*s == '/')
--    8000470e:	02f00693          	li	a3,47
--    80004712:	a039                	j	80004720 <exec+0x2b2>
-+    800045ac:	02f00693          	li	a3,47
-+    800045b0:	a039                	j	800045be <exec+0x2bc>
-       last = s+1;
--    80004714:	def43c23          	sd	a5,-520(s0)
-+    800045b2:	def43c23          	sd	a5,-520(s0)
-   for(last=s=path; *s; s++)
--    80004718:	0785                	addi	a5,a5,1
--    8000471a:	fff7c703          	lbu	a4,-1(a5)
--    8000471e:	c701                	beqz	a4,80004726 <exec+0x2b8>
-+    800045b6:	0785                	add	a5,a5,1
-+    800045b8:	fff7c703          	lbu	a4,-1(a5)
-+    800045bc:	c701                	beqz	a4,800045c4 <exec+0x2c2>
-     if(*s == '/')
--    80004720:	fed71ce3          	bne	a4,a3,80004718 <exec+0x2aa>
--    80004724:	bfc5                	j	80004714 <exec+0x2a6>
-+    800045be:	fed71ce3          	bne	a4,a3,800045b6 <exec+0x2b4>
-+    800045c2:	bfc5                	j	800045b2 <exec+0x2b0>
-   safestrcpy(p->name, last, sizeof(p->name));
--    80004726:	4641                	li	a2,16
--    80004728:	df843583          	ld	a1,-520(s0)
--    8000472c:	158a8513          	addi	a0,s5,344
--    80004730:	ed6fc0ef          	jal	80000e06 <safestrcpy>
-+    800045c4:	4641                	li	a2,16
-+    800045c6:	df843583          	ld	a1,-520(s0)
-+    800045ca:	158a8513          	add	a0,s5,344
-+    800045ce:	feafc0ef          	jal	80000db8 <safestrcpy>
-   oldpagetable = p->pagetable;
--    80004734:	050ab503          	ld	a0,80(s5)
-+    800045d2:	050ab503          	ld	a0,80(s5)
-   p->pagetable = pagetable;
--    80004738:	056ab823          	sd	s6,80(s5)
-+    800045d6:	056ab823          	sd	s6,80(s5)
-   p->sz = sz;
--    8000473c:	e0843783          	ld	a5,-504(s0)
--    80004740:	04fab423          	sd	a5,72(s5)
-+    800045da:	e0843783          	ld	a5,-504(s0)
-+    800045de:	04fab423          	sd	a5,72(s5)
-   p->trapframe->epc = elf.entry;  /* initial program counter = main */
--    80004744:	058ab783          	ld	a5,88(s5)
--    80004748:	e6843703          	ld	a4,-408(s0)
--    8000474c:	ef98                	sd	a4,24(a5)
-+    800045e2:	058ab783          	ld	a5,88(s5)
-+    800045e6:	e6843703          	ld	a4,-408(s0)
-+    800045ea:	ef98                	sd	a4,24(a5)
-   p->trapframe->sp = sp; /* initial stack pointer */
--    8000474e:	058ab783          	ld	a5,88(s5)
--    80004752:	0327b823          	sd	s2,48(a5)
-+    800045ec:	058ab783          	ld	a5,88(s5)
-+    800045f0:	0327b823          	sd	s2,48(a5)
-   proc_freepagetable(oldpagetable, oldsz);
--    80004756:	85e6                	mv	a1,s9
--    80004758:	ab4fd0ef          	jal	80001a0c <proc_freepagetable>
-+    800045f4:	85e6                	mv	a1,s9
-+    800045f6:	b66fd0ef          	jal	8000195c <proc_freepagetable>
-   return argc; /* this ends up in a0, the first argument to main(argc, argv) */
--    8000475c:	0004851b          	sext.w	a0,s1
--    80004760:	79be                	ld	s3,488(sp)
--    80004762:	7a1e                	ld	s4,480(sp)
--    80004764:	6afe                	ld	s5,472(sp)
--    80004766:	6b5e                	ld	s6,464(sp)
--    80004768:	6bbe                	ld	s7,456(sp)
--    8000476a:	6c1e                	ld	s8,448(sp)
--    8000476c:	7cfa                	ld	s9,440(sp)
--    8000476e:	7d5a                	ld	s10,432(sp)
--    80004770:	b3b5                	j	800044dc <exec+0x6e>
--    80004772:	e1243423          	sd	s2,-504(s0)
--    80004776:	7dba                	ld	s11,424(sp)
--    80004778:	a035                	j	800047a4 <exec+0x336>
--    8000477a:	e1243423          	sd	s2,-504(s0)
--    8000477e:	7dba                	ld	s11,424(sp)
--    80004780:	a015                	j	800047a4 <exec+0x336>
--    80004782:	e1243423          	sd	s2,-504(s0)
--    80004786:	7dba                	ld	s11,424(sp)
--    80004788:	a831                	j	800047a4 <exec+0x336>
--    8000478a:	e1243423          	sd	s2,-504(s0)
--    8000478e:	7dba                	ld	s11,424(sp)
--    80004790:	a811                	j	800047a4 <exec+0x336>
--    80004792:	e1243423          	sd	s2,-504(s0)
--    80004796:	7dba                	ld	s11,424(sp)
--    80004798:	a031                	j	800047a4 <exec+0x336>
--  ip = 0;
--    8000479a:	4a01                	li	s4,0
--    8000479c:	a021                	j	800047a4 <exec+0x336>
--    8000479e:	4a01                	li	s4,0
--  if(pagetable)
--    800047a0:	a011                	j	800047a4 <exec+0x336>
--    800047a2:	7dba                	ld	s11,424(sp)
-+    800045fa:	0004851b          	sext.w	a0,s1
-+    800045fe:	b341                	j	8000437e <exec+0x7c>
-+    80004600:	e1243423          	sd	s2,-504(s0)
-     proc_freepagetable(pagetable, sz);
--    800047a4:	e0843583          	ld	a1,-504(s0)
--    800047a8:	855a                	mv	a0,s6
--    800047aa:	a62fd0ef          	jal	80001a0c <proc_freepagetable>
-+    80004604:	e0843583          	ld	a1,-504(s0)
-+    80004608:	855a                	mv	a0,s6
-+    8000460a:	b52fd0ef          	jal	8000195c <proc_freepagetable>
-   return -1;
--    800047ae:	557d                	li	a0,-1
-+    8000460e:	557d                	li	a0,-1
-   if(ip){
--    800047b0:	000a1b63          	bnez	s4,800047c6 <exec+0x358>
--    800047b4:	79be                	ld	s3,488(sp)
--    800047b6:	7a1e                	ld	s4,480(sp)
--    800047b8:	6afe                	ld	s5,472(sp)
--    800047ba:	6b5e                	ld	s6,464(sp)
--    800047bc:	6bbe                	ld	s7,456(sp)
--    800047be:	6c1e                	ld	s8,448(sp)
--    800047c0:	7cfa                	ld	s9,440(sp)
--    800047c2:	7d5a                	ld	s10,432(sp)
--    800047c4:	bb21                	j	800044dc <exec+0x6e>
--    800047c6:	79be                	ld	s3,488(sp)
--    800047c8:	6afe                	ld	s5,472(sp)
--    800047ca:	6b5e                	ld	s6,464(sp)
--    800047cc:	6bbe                	ld	s7,456(sp)
--    800047ce:	6c1e                	ld	s8,448(sp)
--    800047d0:	7cfa                	ld	s9,440(sp)
--    800047d2:	7d5a                	ld	s10,432(sp)
--    800047d4:	b9ed                	j	800044ce <exec+0x60>
--    800047d6:	6b5e                	ld	s6,464(sp)
--    800047d8:	b9dd                	j	800044ce <exec+0x60>
-+    80004610:	d60a07e3          	beqz	s4,8000437e <exec+0x7c>
-+    80004614:	bbb9                	j	80004372 <exec+0x70>
-+    80004616:	e1243423          	sd	s2,-504(s0)
-+    8000461a:	b7ed                	j	80004604 <exec+0x302>
-+    8000461c:	e1243423          	sd	s2,-504(s0)
-+    80004620:	b7d5                	j	80004604 <exec+0x302>
-+    80004622:	e1243423          	sd	s2,-504(s0)
-+    80004626:	bff9                	j	80004604 <exec+0x302>
-+    80004628:	e1243423          	sd	s2,-504(s0)
-+    8000462c:	bfe1                	j	80004604 <exec+0x302>
-+  ip = 0;
-+    8000462e:	4a01                	li	s4,0
-+    80004630:	bfd1                	j	80004604 <exec+0x302>
-+    80004632:	4a01                	li	s4,0
-+  if(pagetable)
-+    80004634:	bfc1                	j	80004604 <exec+0x302>
-   sz = sz1;
--    800047da:	e0843983          	ld	s3,-504(s0)
--    800047de:	b595                	j	80004642 <exec+0x1d4>
-+    80004636:	e0843983          	ld	s3,-504(s0)
-+    8000463a:	b56d                	j	800044e4 <exec+0x1e2>
- 
--00000000800047e0 <argfd>:
-+000000008000463c <argfd>:
- 
- /* Fetch the nth word-sized system call argument as a file descriptor */
- /* and return both the descriptor and the corresponding struct file. */
- static int
- argfd(int n, int *pfd, struct file **pf)
- {
--    800047e0:	7179                	addi	sp,sp,-48
--    800047e2:	f406                	sd	ra,40(sp)
--    800047e4:	f022                	sd	s0,32(sp)
--    800047e6:	ec26                	sd	s1,24(sp)
--    800047e8:	e84a                	sd	s2,16(sp)
--    800047ea:	1800                	addi	s0,sp,48
--    800047ec:	892e                	mv	s2,a1
--    800047ee:	84b2                	mv	s1,a2
-+    8000463c:	7179                	add	sp,sp,-48
-+    8000463e:	f406                	sd	ra,40(sp)
-+    80004640:	f022                	sd	s0,32(sp)
-+    80004642:	ec26                	sd	s1,24(sp)
-+    80004644:	e84a                	sd	s2,16(sp)
-+    80004646:	1800                	add	s0,sp,48
-+    80004648:	892e                	mv	s2,a1
-+    8000464a:	84b2                	mv	s1,a2
-   int fd;
-   struct file *f;
- 
-   argint(n, &fd);
--    800047f0:	fdc40593          	addi	a1,s0,-36
--    800047f4:	fa1fd0ef          	jal	80002794 <argint>
-+    8000464c:	fdc40593          	add	a1,s0,-36
-+    80004650:	88efe0ef          	jal	800026de <argint>
-   if(fd < 0 || fd >= NOFILE || (f=myproc()->ofile[fd]) == 0)
--    800047f8:	fdc42703          	lw	a4,-36(s0)
--    800047fc:	47bd                	li	a5,15
--    800047fe:	02e7e963          	bltu	a5,a4,80004830 <argfd+0x50>
--    80004802:	8defd0ef          	jal	800018e0 <myproc>
--    80004806:	fdc42703          	lw	a4,-36(s0)
--    8000480a:	01a70793          	addi	a5,a4,26
--    8000480e:	078e                	slli	a5,a5,0x3
--    80004810:	953e                	add	a0,a0,a5
--    80004812:	611c                	ld	a5,0(a0)
--    80004814:	c385                	beqz	a5,80004834 <argfd+0x54>
-+    80004654:	fdc42703          	lw	a4,-36(s0)
-+    80004658:	47bd                	li	a5,15
-+    8000465a:	02e7e963          	bltu	a5,a4,8000468c <argfd+0x50>
-+    8000465e:	9d2fd0ef          	jal	80001830 <myproc>
-+    80004662:	fdc42703          	lw	a4,-36(s0)
-+    80004666:	01a70793          	add	a5,a4,26
-+    8000466a:	078e                	sll	a5,a5,0x3
-+    8000466c:	953e                	add	a0,a0,a5
-+    8000466e:	611c                	ld	a5,0(a0)
-+    80004670:	c385                	beqz	a5,80004690 <argfd+0x54>
-     return -1;
-   if(pfd)
--    80004816:	00090463          	beqz	s2,8000481e <argfd+0x3e>
-+    80004672:	00090463          	beqz	s2,8000467a <argfd+0x3e>
-     *pfd = fd;
--    8000481a:	00e92023          	sw	a4,0(s2)
-+    80004676:	00e92023          	sw	a4,0(s2)
-   if(pf)
-     *pf = f;
-   return 0;
--    8000481e:	4501                	li	a0,0
-+    8000467a:	4501                	li	a0,0
-   if(pf)
--    80004820:	c091                	beqz	s1,80004824 <argfd+0x44>
-+    8000467c:	c091                	beqz	s1,80004680 <argfd+0x44>
-     *pf = f;
--    80004822:	e09c                	sd	a5,0(s1)
--}
--    80004824:	70a2                	ld	ra,40(sp)
--    80004826:	7402                	ld	s0,32(sp)
--    80004828:	64e2                	ld	s1,24(sp)
--    8000482a:	6942                	ld	s2,16(sp)
--    8000482c:	6145                	addi	sp,sp,48
--    8000482e:	8082                	ret
-+    8000467e:	e09c                	sd	a5,0(s1)
-+}
-+    80004680:	70a2                	ld	ra,40(sp)
-+    80004682:	7402                	ld	s0,32(sp)
-+    80004684:	64e2                	ld	s1,24(sp)
-+    80004686:	6942                	ld	s2,16(sp)
-+    80004688:	6145                	add	sp,sp,48
-+    8000468a:	8082                	ret
-     return -1;
--    80004830:	557d                	li	a0,-1
--    80004832:	bfcd                	j	80004824 <argfd+0x44>
--    80004834:	557d                	li	a0,-1
--    80004836:	b7fd                	j	80004824 <argfd+0x44>
-+    8000468c:	557d                	li	a0,-1
-+    8000468e:	bfcd                	j	80004680 <argfd+0x44>
-+    80004690:	557d                	li	a0,-1
-+    80004692:	b7fd                	j	80004680 <argfd+0x44>
- 
--0000000080004838 <fdalloc>:
-+0000000080004694 <fdalloc>:
- 
- /* Allocate a file descriptor for the given file. */
- /* Takes over file reference from caller on success. */
- static int
- fdalloc(struct file *f)
- {
--    80004838:	1101                	addi	sp,sp,-32
--    8000483a:	ec06                	sd	ra,24(sp)
--    8000483c:	e822                	sd	s0,16(sp)
--    8000483e:	e426                	sd	s1,8(sp)
--    80004840:	1000                	addi	s0,sp,32
--    80004842:	84aa                	mv	s1,a0
-+    80004694:	1101                	add	sp,sp,-32
-+    80004696:	ec06                	sd	ra,24(sp)
-+    80004698:	e822                	sd	s0,16(sp)
-+    8000469a:	e426                	sd	s1,8(sp)
-+    8000469c:	1000                	add	s0,sp,32
-+    8000469e:	84aa                	mv	s1,a0
-   int fd;
-   struct proc *p = myproc();
--    80004844:	89cfd0ef          	jal	800018e0 <myproc>
--    80004848:	862a                	mv	a2,a0
-+    800046a0:	990fd0ef          	jal	80001830 <myproc>
-+    800046a4:	862a                	mv	a2,a0
- 
-   for(fd = 0; fd < NOFILE; fd++){
--    8000484a:	0d050793          	addi	a5,a0,208
--    8000484e:	4501                	li	a0,0
--    80004850:	46c1                	li	a3,16
-+    800046a6:	0d050793          	add	a5,a0,208
-+    800046aa:	4501                	li	a0,0
-+    800046ac:	46c1                	li	a3,16
-     if(p->ofile[fd] == 0){
--    80004852:	6398                	ld	a4,0(a5)
--    80004854:	cb19                	beqz	a4,8000486a <fdalloc+0x32>
-+    800046ae:	6398                	ld	a4,0(a5)
-+    800046b0:	cb19                	beqz	a4,800046c6 <fdalloc+0x32>
-   for(fd = 0; fd < NOFILE; fd++){
--    80004856:	2505                	addiw	a0,a0,1
--    80004858:	07a1                	addi	a5,a5,8
--    8000485a:	fed51ce3          	bne	a0,a3,80004852 <fdalloc+0x1a>
-+    800046b2:	2505                	addw	a0,a0,1
-+    800046b4:	07a1                	add	a5,a5,8
-+    800046b6:	fed51ce3          	bne	a0,a3,800046ae <fdalloc+0x1a>
-       p->ofile[fd] = f;
-       return fd;
-     }
-   }
-   return -1;
--    8000485e:	557d                	li	a0,-1
-+    800046ba:	557d                	li	a0,-1
- }
--    80004860:	60e2                	ld	ra,24(sp)
--    80004862:	6442                	ld	s0,16(sp)
--    80004864:	64a2                	ld	s1,8(sp)
--    80004866:	6105                	addi	sp,sp,32
--    80004868:	8082                	ret
-+    800046bc:	60e2                	ld	ra,24(sp)
-+    800046be:	6442                	ld	s0,16(sp)
-+    800046c0:	64a2                	ld	s1,8(sp)
-+    800046c2:	6105                	add	sp,sp,32
-+    800046c4:	8082                	ret
-       p->ofile[fd] = f;
--    8000486a:	01a50793          	addi	a5,a0,26
--    8000486e:	078e                	slli	a5,a5,0x3
--    80004870:	963e                	add	a2,a2,a5
--    80004872:	e204                	sd	s1,0(a2)
-+    800046c6:	01a50793          	add	a5,a0,26
-+    800046ca:	078e                	sll	a5,a5,0x3
-+    800046cc:	963e                	add	a2,a2,a5
-+    800046ce:	e204                	sd	s1,0(a2)
-       return fd;
--    80004874:	b7f5                	j	80004860 <fdalloc+0x28>
-+    800046d0:	b7f5                	j	800046bc <fdalloc+0x28>
- 
--0000000080004876 <create>:
-+00000000800046d2 <create>:
-   return -1;
- }
- 
- static struct inode*
- create(char *path, short type, short major, short minor)
- {
--    80004876:	715d                	addi	sp,sp,-80
--    80004878:	e486                	sd	ra,72(sp)
--    8000487a:	e0a2                	sd	s0,64(sp)
--    8000487c:	fc26                	sd	s1,56(sp)
--    8000487e:	f84a                	sd	s2,48(sp)
--    80004880:	f44e                	sd	s3,40(sp)
--    80004882:	ec56                	sd	s5,24(sp)
--    80004884:	e85a                	sd	s6,16(sp)
--    80004886:	0880                	addi	s0,sp,80
--    80004888:	8b2e                	mv	s6,a1
--    8000488a:	89b2                	mv	s3,a2
--    8000488c:	8936                	mv	s2,a3
-+    800046d2:	715d                	add	sp,sp,-80
-+    800046d4:	e486                	sd	ra,72(sp)
-+    800046d6:	e0a2                	sd	s0,64(sp)
-+    800046d8:	fc26                	sd	s1,56(sp)
-+    800046da:	f84a                	sd	s2,48(sp)
-+    800046dc:	f44e                	sd	s3,40(sp)
-+    800046de:	f052                	sd	s4,32(sp)
-+    800046e0:	ec56                	sd	s5,24(sp)
-+    800046e2:	e85a                	sd	s6,16(sp)
-+    800046e4:	0880                	add	s0,sp,80
-+    800046e6:	8b2e                	mv	s6,a1
-+    800046e8:	89b2                	mv	s3,a2
-+    800046ea:	8936                	mv	s2,a3
-   struct inode *ip, *dp;
-   char name[DIRSIZ];
- 
-   if((dp = nameiparent(path, name)) == 0)
--    8000488e:	fb040593          	addi	a1,s0,-80
--    80004892:	822ff0ef          	jal	800038b4 <nameiparent>
--    80004896:	84aa                	mv	s1,a0
--    80004898:	10050a63          	beqz	a0,800049ac <create+0x136>
-+    800046ec:	fb040593          	add	a1,s0,-80
-+    800046f0:	8beff0ef          	jal	800037ae <nameiparent>
-+    800046f4:	84aa                	mv	s1,a0
-+    800046f6:	10050763          	beqz	a0,80004804 <create+0x132>
-     return 0;
- 
-   ilock(dp);
--    8000489c:	925fe0ef          	jal	800031c0 <ilock>
-+    800046fa:	9e9fe0ef          	jal	800030e2 <ilock>
- 
-   if((ip = dirlookup(dp, name, 0)) != 0){
--    800048a0:	4601                	li	a2,0
--    800048a2:	fb040593          	addi	a1,s0,-80
--    800048a6:	8526                	mv	a0,s1
--    800048a8:	d8dfe0ef          	jal	80003634 <dirlookup>
--    800048ac:	8aaa                	mv	s5,a0
--    800048ae:	c129                	beqz	a0,800048f0 <create+0x7a>
-+    800046fe:	4601                	li	a2,0
-+    80004700:	fb040593          	add	a1,s0,-80
-+    80004704:	8526                	mv	a0,s1
-+    80004706:	e29fe0ef          	jal	8000352e <dirlookup>
-+    8000470a:	8aaa                	mv	s5,a0
-+    8000470c:	c131                	beqz	a0,80004750 <create+0x7e>
-     iunlockput(dp);
--    800048b0:	8526                	mv	a0,s1
--    800048b2:	b19fe0ef          	jal	800033ca <iunlockput>
-+    8000470e:	8526                	mv	a0,s1
-+    80004710:	bd9fe0ef          	jal	800032e8 <iunlockput>
-     ilock(ip);
--    800048b6:	8556                	mv	a0,s5
--    800048b8:	909fe0ef          	jal	800031c0 <ilock>
-+    80004714:	8556                	mv	a0,s5
-+    80004716:	9cdfe0ef          	jal	800030e2 <ilock>
-     if(type == T_FILE && (ip->type == T_FILE || ip->type == T_DEVICE))
--    800048bc:	4789                	li	a5,2
--    800048be:	02fb1463          	bne	s6,a5,800048e6 <create+0x70>
--    800048c2:	044ad783          	lhu	a5,68(s5)
--    800048c6:	37f9                	addiw	a5,a5,-2
--    800048c8:	17c2                	slli	a5,a5,0x30
--    800048ca:	93c1                	srli	a5,a5,0x30
--    800048cc:	4705                	li	a4,1
--    800048ce:	00f76c63          	bltu	a4,a5,800048e6 <create+0x70>
-+    8000471a:	4789                	li	a5,2
-+    8000471c:	02fb1563          	bne	s6,a5,80004746 <create+0x74>
-+    80004720:	044ad783          	lhu	a5,68(s5)
-+    80004724:	37f9                	addw	a5,a5,-2
-+    80004726:	17c2                	sll	a5,a5,0x30
-+    80004728:	93c1                	srl	a5,a5,0x30
-+    8000472a:	4705                	li	a4,1
-+    8000472c:	00f76d63          	bltu	a4,a5,80004746 <create+0x74>
-   ip->nlink = 0;
-   iupdate(ip);
-   iunlockput(ip);
-   iunlockput(dp);
-   return 0;
- }
--    800048d2:	8556                	mv	a0,s5
--    800048d4:	60a6                	ld	ra,72(sp)
--    800048d6:	6406                	ld	s0,64(sp)
--    800048d8:	74e2                	ld	s1,56(sp)
--    800048da:	7942                	ld	s2,48(sp)
--    800048dc:	79a2                	ld	s3,40(sp)
--    800048de:	6ae2                	ld	s5,24(sp)
--    800048e0:	6b42                	ld	s6,16(sp)
--    800048e2:	6161                	addi	sp,sp,80
--    800048e4:	8082                	ret
-+    80004730:	8556                	mv	a0,s5
-+    80004732:	60a6                	ld	ra,72(sp)
-+    80004734:	6406                	ld	s0,64(sp)
-+    80004736:	74e2                	ld	s1,56(sp)
-+    80004738:	7942                	ld	s2,48(sp)
-+    8000473a:	79a2                	ld	s3,40(sp)
-+    8000473c:	7a02                	ld	s4,32(sp)
-+    8000473e:	6ae2                	ld	s5,24(sp)
-+    80004740:	6b42                	ld	s6,16(sp)
-+    80004742:	6161                	add	sp,sp,80
-+    80004744:	8082                	ret
-     iunlockput(ip);
--    800048e6:	8556                	mv	a0,s5
--    800048e8:	ae3fe0ef          	jal	800033ca <iunlockput>
-+    80004746:	8556                	mv	a0,s5
-+    80004748:	ba1fe0ef          	jal	800032e8 <iunlockput>
-     return 0;
--    800048ec:	4a81                	li	s5,0
--    800048ee:	b7d5                	j	800048d2 <create+0x5c>
--    800048f0:	f052                	sd	s4,32(sp)
-+    8000474c:	4a81                	li	s5,0
-+    8000474e:	b7cd                	j	80004730 <create+0x5e>
-   if((ip = ialloc(dp->dev, type)) == 0){
--    800048f2:	85da                	mv	a1,s6
--    800048f4:	4088                	lw	a0,0(s1)
--    800048f6:	f5afe0ef          	jal	80003050 <ialloc>
--    800048fa:	8a2a                	mv	s4,a0
--    800048fc:	cd15                	beqz	a0,80004938 <create+0xc2>
-+    80004750:	85da                	mv	a1,s6
-+    80004752:	4088                	lw	a0,0(s1)
-+    80004754:	82bfe0ef          	jal	80002f7e <ialloc>
-+    80004758:	8a2a                	mv	s4,a0
-+    8000475a:	cd0d                	beqz	a0,80004794 <create+0xc2>
-   ilock(ip);
--    800048fe:	8c3fe0ef          	jal	800031c0 <ilock>
-+    8000475c:	987fe0ef          	jal	800030e2 <ilock>
-   ip->major = major;
--    80004902:	053a1323          	sh	s3,70(s4)
-+    80004760:	053a1323          	sh	s3,70(s4)
-   ip->minor = minor;
--    80004906:	052a1423          	sh	s2,72(s4)
-+    80004764:	052a1423          	sh	s2,72(s4)
-   ip->nlink = 1;
--    8000490a:	4905                	li	s2,1
--    8000490c:	052a1523          	sh	s2,74(s4)
-+    80004768:	4905                	li	s2,1
-+    8000476a:	052a1523          	sh	s2,74(s4)
-   iupdate(ip);
--    80004910:	8552                	mv	a0,s4
--    80004912:	ffafe0ef          	jal	8000310c <iupdate>
-+    8000476e:	8552                	mv	a0,s4
-+    80004770:	8bffe0ef          	jal	8000302e <iupdate>
-   if(type == T_DIR){  /* Create . and .. entries. */
--    80004916:	032b0763          	beq	s6,s2,80004944 <create+0xce>
-+    80004774:	032b0563          	beq	s6,s2,8000479e <create+0xcc>
-   if(dirlink(dp, name, ip->inum) < 0)
--    8000491a:	004a2603          	lw	a2,4(s4)
--    8000491e:	fb040593          	addi	a1,s0,-80
--    80004922:	8526                	mv	a0,s1
--    80004924:	eddfe0ef          	jal	80003800 <dirlink>
--    80004928:	06054563          	bltz	a0,80004992 <create+0x11c>
-+    80004778:	004a2603          	lw	a2,4(s4)
-+    8000477c:	fb040593          	add	a1,s0,-80
-+    80004780:	8526                	mv	a0,s1
-+    80004782:	f79fe0ef          	jal	800036fa <dirlink>
-+    80004786:	06054363          	bltz	a0,800047ec <create+0x11a>
-   iunlockput(dp);
--    8000492c:	8526                	mv	a0,s1
--    8000492e:	a9dfe0ef          	jal	800033ca <iunlockput>
-+    8000478a:	8526                	mv	a0,s1
-+    8000478c:	b5dfe0ef          	jal	800032e8 <iunlockput>
-   return ip;
--    80004932:	8ad2                	mv	s5,s4
--    80004934:	7a02                	ld	s4,32(sp)
--    80004936:	bf71                	j	800048d2 <create+0x5c>
-+    80004790:	8ad2                	mv	s5,s4
-+    80004792:	bf79                	j	80004730 <create+0x5e>
-     iunlockput(dp);
--    80004938:	8526                	mv	a0,s1
--    8000493a:	a91fe0ef          	jal	800033ca <iunlockput>
-+    80004794:	8526                	mv	a0,s1
-+    80004796:	b53fe0ef          	jal	800032e8 <iunlockput>
-     return 0;
--    8000493e:	8ad2                	mv	s5,s4
--    80004940:	7a02                	ld	s4,32(sp)
--    80004942:	bf41                	j	800048d2 <create+0x5c>
-+    8000479a:	8ad2                	mv	s5,s4
-+    8000479c:	bf51                	j	80004730 <create+0x5e>
-     if(dirlink(ip, ".", ip->inum) < 0 || dirlink(ip, "..", dp->inum) < 0)
--    80004944:	004a2603          	lw	a2,4(s4)
--    80004948:	00003597          	auipc	a1,0x3
--    8000494c:	cd858593          	addi	a1,a1,-808 # 80007620 <etext+0x620>
--    80004950:	8552                	mv	a0,s4
--    80004952:	eaffe0ef          	jal	80003800 <dirlink>
--    80004956:	02054e63          	bltz	a0,80004992 <create+0x11c>
--    8000495a:	40d0                	lw	a2,4(s1)
--    8000495c:	00003597          	auipc	a1,0x3
--    80004960:	ccc58593          	addi	a1,a1,-820 # 80007628 <etext+0x628>
--    80004964:	8552                	mv	a0,s4
--    80004966:	e9bfe0ef          	jal	80003800 <dirlink>
--    8000496a:	02054463          	bltz	a0,80004992 <create+0x11c>
-+    8000479e:	004a2603          	lw	a2,4(s4)
-+    800047a2:	00003597          	auipc	a1,0x3
-+    800047a6:	f8e58593          	add	a1,a1,-114 # 80007730 <syscalls+0x2a0>
-+    800047aa:	8552                	mv	a0,s4
-+    800047ac:	f4ffe0ef          	jal	800036fa <dirlink>
-+    800047b0:	02054e63          	bltz	a0,800047ec <create+0x11a>
-+    800047b4:	40d0                	lw	a2,4(s1)
-+    800047b6:	00003597          	auipc	a1,0x3
-+    800047ba:	f8258593          	add	a1,a1,-126 # 80007738 <syscalls+0x2a8>
-+    800047be:	8552                	mv	a0,s4
-+    800047c0:	f3bfe0ef          	jal	800036fa <dirlink>
-+    800047c4:	02054463          	bltz	a0,800047ec <create+0x11a>
-   if(dirlink(dp, name, ip->inum) < 0)
--    8000496e:	004a2603          	lw	a2,4(s4)
--    80004972:	fb040593          	addi	a1,s0,-80
--    80004976:	8526                	mv	a0,s1
--    80004978:	e89fe0ef          	jal	80003800 <dirlink>
--    8000497c:	00054b63          	bltz	a0,80004992 <create+0x11c>
-+    800047c8:	004a2603          	lw	a2,4(s4)
-+    800047cc:	fb040593          	add	a1,s0,-80
-+    800047d0:	8526                	mv	a0,s1
-+    800047d2:	f29fe0ef          	jal	800036fa <dirlink>
-+    800047d6:	00054b63          	bltz	a0,800047ec <create+0x11a>
-     dp->nlink++;  /* for ".." */
--    80004980:	04a4d783          	lhu	a5,74(s1)
--    80004984:	2785                	addiw	a5,a5,1
--    80004986:	04f49523          	sh	a5,74(s1)
-+    800047da:	04a4d783          	lhu	a5,74(s1)
-+    800047de:	2785                	addw	a5,a5,1
-+    800047e0:	04f49523          	sh	a5,74(s1)
-     iupdate(dp);
--    8000498a:	8526                	mv	a0,s1
--    8000498c:	f80fe0ef          	jal	8000310c <iupdate>
--    80004990:	bf71                	j	8000492c <create+0xb6>
-+    800047e4:	8526                	mv	a0,s1
-+    800047e6:	849fe0ef          	jal	8000302e <iupdate>
-+    800047ea:	b745                	j	8000478a <create+0xb8>
-   ip->nlink = 0;
--    80004992:	040a1523          	sh	zero,74(s4)
-+    800047ec:	040a1523          	sh	zero,74(s4)
-   iupdate(ip);
--    80004996:	8552                	mv	a0,s4
--    80004998:	f74fe0ef          	jal	8000310c <iupdate>
-+    800047f0:	8552                	mv	a0,s4
-+    800047f2:	83dfe0ef          	jal	8000302e <iupdate>
-   iunlockput(ip);
--    8000499c:	8552                	mv	a0,s4
--    8000499e:	a2dfe0ef          	jal	800033ca <iunlockput>
-+    800047f6:	8552                	mv	a0,s4
-+    800047f8:	af1fe0ef          	jal	800032e8 <iunlockput>
-   iunlockput(dp);
--    800049a2:	8526                	mv	a0,s1
--    800049a4:	a27fe0ef          	jal	800033ca <iunlockput>
-+    800047fc:	8526                	mv	a0,s1
-+    800047fe:	aebfe0ef          	jal	800032e8 <iunlockput>
-   return 0;
--    800049a8:	7a02                	ld	s4,32(sp)
--    800049aa:	b725                	j	800048d2 <create+0x5c>
-+    80004802:	b73d                	j	80004730 <create+0x5e>
-     return 0;
--    800049ac:	8aaa                	mv	s5,a0
--    800049ae:	b715                	j	800048d2 <create+0x5c>
-+    80004804:	8aaa                	mv	s5,a0
-+    80004806:	b72d                	j	80004730 <create+0x5e>
- 
--00000000800049b0 <sys_dup>:
-+0000000080004808 <sys_dup>:
- {
--    800049b0:	7179                	addi	sp,sp,-48
--    800049b2:	f406                	sd	ra,40(sp)
--    800049b4:	f022                	sd	s0,32(sp)
--    800049b6:	1800                	addi	s0,sp,48
-+    80004808:	7179                	add	sp,sp,-48
-+    8000480a:	f406                	sd	ra,40(sp)
-+    8000480c:	f022                	sd	s0,32(sp)
-+    8000480e:	ec26                	sd	s1,24(sp)
-+    80004810:	e84a                	sd	s2,16(sp)
-+    80004812:	1800                	add	s0,sp,48
-   if(argfd(0, 0, &f) < 0)
--    800049b8:	fd840613          	addi	a2,s0,-40
--    800049bc:	4581                	li	a1,0
--    800049be:	4501                	li	a0,0
--    800049c0:	e21ff0ef          	jal	800047e0 <argfd>
-+    80004814:	fd840613          	add	a2,s0,-40
-+    80004818:	4581                	li	a1,0
-+    8000481a:	4501                	li	a0,0
-+    8000481c:	e21ff0ef          	jal	8000463c <argfd>
-     return -1;
--    800049c4:	57fd                	li	a5,-1
-+    80004820:	57fd                	li	a5,-1
-   if(argfd(0, 0, &f) < 0)
--    800049c6:	02054363          	bltz	a0,800049ec <sys_dup+0x3c>
--    800049ca:	ec26                	sd	s1,24(sp)
--    800049cc:	e84a                	sd	s2,16(sp)
-+    80004822:	00054f63          	bltz	a0,80004840 <sys_dup+0x38>
-   if((fd=fdalloc(f)) < 0)
--    800049ce:	fd843903          	ld	s2,-40(s0)
--    800049d2:	854a                	mv	a0,s2
--    800049d4:	e65ff0ef          	jal	80004838 <fdalloc>
--    800049d8:	84aa                	mv	s1,a0
-+    80004826:	fd843903          	ld	s2,-40(s0)
-+    8000482a:	854a                	mv	a0,s2
-+    8000482c:	e69ff0ef          	jal	80004694 <fdalloc>
-+    80004830:	84aa                	mv	s1,a0
-     return -1;
--    800049da:	57fd                	li	a5,-1
-+    80004832:	57fd                	li	a5,-1
-   if((fd=fdalloc(f)) < 0)
--    800049dc:	00054d63          	bltz	a0,800049f6 <sys_dup+0x46>
-+    80004834:	00054663          	bltz	a0,80004840 <sys_dup+0x38>
-   filedup(f);
--    800049e0:	854a                	mv	a0,s2
--    800049e2:	c48ff0ef          	jal	80003e2a <filedup>
-+    80004838:	854a                	mv	a0,s2
-+    8000483a:	ce4ff0ef          	jal	80003d1e <filedup>
-   return fd;
--    800049e6:	87a6                	mv	a5,s1
--    800049e8:	64e2                	ld	s1,24(sp)
--    800049ea:	6942                	ld	s2,16(sp)
--}
--    800049ec:	853e                	mv	a0,a5
--    800049ee:	70a2                	ld	ra,40(sp)
--    800049f0:	7402                	ld	s0,32(sp)
--    800049f2:	6145                	addi	sp,sp,48
--    800049f4:	8082                	ret
--    800049f6:	64e2                	ld	s1,24(sp)
--    800049f8:	6942                	ld	s2,16(sp)
--    800049fa:	bfcd                	j	800049ec <sys_dup+0x3c>
--
--00000000800049fc <sys_read>:
--{
--    800049fc:	7179                	addi	sp,sp,-48
--    800049fe:	f406                	sd	ra,40(sp)
--    80004a00:	f022                	sd	s0,32(sp)
--    80004a02:	1800                	addi	s0,sp,48
-+    8000483e:	87a6                	mv	a5,s1
-+}
-+    80004840:	853e                	mv	a0,a5
-+    80004842:	70a2                	ld	ra,40(sp)
-+    80004844:	7402                	ld	s0,32(sp)
-+    80004846:	64e2                	ld	s1,24(sp)
-+    80004848:	6942                	ld	s2,16(sp)
-+    8000484a:	6145                	add	sp,sp,48
-+    8000484c:	8082                	ret
-+
-+000000008000484e <sys_read>:
-+{
-+    8000484e:	7179                	add	sp,sp,-48
-+    80004850:	f406                	sd	ra,40(sp)
-+    80004852:	f022                	sd	s0,32(sp)
-+    80004854:	1800                	add	s0,sp,48
-   argaddr(1, &p);
--    80004a04:	fd840593          	addi	a1,s0,-40
--    80004a08:	4505                	li	a0,1
--    80004a0a:	da7fd0ef          	jal	800027b0 <argaddr>
-+    80004856:	fd840593          	add	a1,s0,-40
-+    8000485a:	4505                	li	a0,1
-+    8000485c:	e9ffd0ef          	jal	800026fa <argaddr>
-   argint(2, &n);
--    80004a0e:	fe440593          	addi	a1,s0,-28
--    80004a12:	4509                	li	a0,2
--    80004a14:	d81fd0ef          	jal	80002794 <argint>
-+    80004860:	fe440593          	add	a1,s0,-28
-+    80004864:	4509                	li	a0,2
-+    80004866:	e79fd0ef          	jal	800026de <argint>
-   if(argfd(0, 0, &f) < 0)
--    80004a18:	fe840613          	addi	a2,s0,-24
--    80004a1c:	4581                	li	a1,0
--    80004a1e:	4501                	li	a0,0
--    80004a20:	dc1ff0ef          	jal	800047e0 <argfd>
--    80004a24:	87aa                	mv	a5,a0
-+    8000486a:	fe840613          	add	a2,s0,-24
-+    8000486e:	4581                	li	a1,0
-+    80004870:	4501                	li	a0,0
-+    80004872:	dcbff0ef          	jal	8000463c <argfd>
-+    80004876:	87aa                	mv	a5,a0
-     return -1;
--    80004a26:	557d                	li	a0,-1
-+    80004878:	557d                	li	a0,-1
-   if(argfd(0, 0, &f) < 0)
--    80004a28:	0007ca63          	bltz	a5,80004a3c <sys_read+0x40>
-+    8000487a:	0007ca63          	bltz	a5,8000488e <sys_read+0x40>
-   return fileread(f, p, n);
--    80004a2c:	fe442603          	lw	a2,-28(s0)
--    80004a30:	fd843583          	ld	a1,-40(s0)
--    80004a34:	fe843503          	ld	a0,-24(s0)
--    80004a38:	d58ff0ef          	jal	80003f90 <fileread>
--}
--    80004a3c:	70a2                	ld	ra,40(sp)
--    80004a3e:	7402                	ld	s0,32(sp)
--    80004a40:	6145                	addi	sp,sp,48
--    80004a42:	8082                	ret
--
--0000000080004a44 <sys_write>:
--{
--    80004a44:	7179                	addi	sp,sp,-48
--    80004a46:	f406                	sd	ra,40(sp)
--    80004a48:	f022                	sd	s0,32(sp)
--    80004a4a:	1800                	addi	s0,sp,48
-+    8000487e:	fe442603          	lw	a2,-28(s0)
-+    80004882:	fd843583          	ld	a1,-40(s0)
-+    80004886:	fe843503          	ld	a0,-24(s0)
-+    8000488a:	de0ff0ef          	jal	80003e6a <fileread>
-+}
-+    8000488e:	70a2                	ld	ra,40(sp)
-+    80004890:	7402                	ld	s0,32(sp)
-+    80004892:	6145                	add	sp,sp,48
-+    80004894:	8082                	ret
-+
-+0000000080004896 <sys_write>:
-+{
-+    80004896:	7179                	add	sp,sp,-48
-+    80004898:	f406                	sd	ra,40(sp)
-+    8000489a:	f022                	sd	s0,32(sp)
-+    8000489c:	1800                	add	s0,sp,48
-   argaddr(1, &p);
--    80004a4c:	fd840593          	addi	a1,s0,-40
--    80004a50:	4505                	li	a0,1
--    80004a52:	d5ffd0ef          	jal	800027b0 <argaddr>
-+    8000489e:	fd840593          	add	a1,s0,-40
-+    800048a2:	4505                	li	a0,1
-+    800048a4:	e57fd0ef          	jal	800026fa <argaddr>
-   argint(2, &n);
--    80004a56:	fe440593          	addi	a1,s0,-28
--    80004a5a:	4509                	li	a0,2
--    80004a5c:	d39fd0ef          	jal	80002794 <argint>
-+    800048a8:	fe440593          	add	a1,s0,-28
-+    800048ac:	4509                	li	a0,2
-+    800048ae:	e31fd0ef          	jal	800026de <argint>
-   if(argfd(0, 0, &f) < 0)
--    80004a60:	fe840613          	addi	a2,s0,-24
--    80004a64:	4581                	li	a1,0
--    80004a66:	4501                	li	a0,0
--    80004a68:	d79ff0ef          	jal	800047e0 <argfd>
--    80004a6c:	87aa                	mv	a5,a0
-+    800048b2:	fe840613          	add	a2,s0,-24
-+    800048b6:	4581                	li	a1,0
-+    800048b8:	4501                	li	a0,0
-+    800048ba:	d83ff0ef          	jal	8000463c <argfd>
-+    800048be:	87aa                	mv	a5,a0
-     return -1;
--    80004a6e:	557d                	li	a0,-1
-+    800048c0:	557d                	li	a0,-1
-   if(argfd(0, 0, &f) < 0)
--    80004a70:	0007ca63          	bltz	a5,80004a84 <sys_write+0x40>
-+    800048c2:	0007ca63          	bltz	a5,800048d6 <sys_write+0x40>
-   return filewrite(f, p, n);
--    80004a74:	fe442603          	lw	a2,-28(s0)
--    80004a78:	fd843583          	ld	a1,-40(s0)
--    80004a7c:	fe843503          	ld	a0,-24(s0)
--    80004a80:	dceff0ef          	jal	8000404e <filewrite>
--}
--    80004a84:	70a2                	ld	ra,40(sp)
--    80004a86:	7402                	ld	s0,32(sp)
--    80004a88:	6145                	addi	sp,sp,48
--    80004a8a:	8082                	ret
--
--0000000080004a8c <sys_close>:
--{
--    80004a8c:	1101                	addi	sp,sp,-32
--    80004a8e:	ec06                	sd	ra,24(sp)
--    80004a90:	e822                	sd	s0,16(sp)
--    80004a92:	1000                	addi	s0,sp,32
-+    800048c6:	fe442603          	lw	a2,-28(s0)
-+    800048ca:	fd843583          	ld	a1,-40(s0)
-+    800048ce:	fe843503          	ld	a0,-24(s0)
-+    800048d2:	e46ff0ef          	jal	80003f18 <filewrite>
-+}
-+    800048d6:	70a2                	ld	ra,40(sp)
-+    800048d8:	7402                	ld	s0,32(sp)
-+    800048da:	6145                	add	sp,sp,48
-+    800048dc:	8082                	ret
-+
-+00000000800048de <sys_close>:
-+{
-+    800048de:	1101                	add	sp,sp,-32
-+    800048e0:	ec06                	sd	ra,24(sp)
-+    800048e2:	e822                	sd	s0,16(sp)
-+    800048e4:	1000                	add	s0,sp,32
-   if(argfd(0, &fd, &f) < 0)
--    80004a94:	fe040613          	addi	a2,s0,-32
--    80004a98:	fec40593          	addi	a1,s0,-20
--    80004a9c:	4501                	li	a0,0
--    80004a9e:	d43ff0ef          	jal	800047e0 <argfd>
-+    800048e6:	fe040613          	add	a2,s0,-32
-+    800048ea:	fec40593          	add	a1,s0,-20
-+    800048ee:	4501                	li	a0,0
-+    800048f0:	d4dff0ef          	jal	8000463c <argfd>
-     return -1;
--    80004aa2:	57fd                	li	a5,-1
-+    800048f4:	57fd                	li	a5,-1
-   if(argfd(0, &fd, &f) < 0)
--    80004aa4:	02054063          	bltz	a0,80004ac4 <sys_close+0x38>
-+    800048f6:	02054063          	bltz	a0,80004916 <sys_close+0x38>
-   myproc()->ofile[fd] = 0;
--    80004aa8:	e39fc0ef          	jal	800018e0 <myproc>
--    80004aac:	fec42783          	lw	a5,-20(s0)
--    80004ab0:	07e9                	addi	a5,a5,26
--    80004ab2:	078e                	slli	a5,a5,0x3
--    80004ab4:	953e                	add	a0,a0,a5
--    80004ab6:	00053023          	sd	zero,0(a0)
-+    800048fa:	f37fc0ef          	jal	80001830 <myproc>
-+    800048fe:	fec42783          	lw	a5,-20(s0)
-+    80004902:	07e9                	add	a5,a5,26
-+    80004904:	078e                	sll	a5,a5,0x3
-+    80004906:	953e                	add	a0,a0,a5
-+    80004908:	00053023          	sd	zero,0(a0)
-   fileclose(f);
--    80004aba:	fe043503          	ld	a0,-32(s0)
--    80004abe:	bb2ff0ef          	jal	80003e70 <fileclose>
-+    8000490c:	fe043503          	ld	a0,-32(s0)
-+    80004910:	c54ff0ef          	jal	80003d64 <fileclose>
-   return 0;
--    80004ac2:	4781                	li	a5,0
-+    80004914:	4781                	li	a5,0
- }
--    80004ac4:	853e                	mv	a0,a5
--    80004ac6:	60e2                	ld	ra,24(sp)
--    80004ac8:	6442                	ld	s0,16(sp)
--    80004aca:	6105                	addi	sp,sp,32
--    80004acc:	8082                	ret
-+    80004916:	853e                	mv	a0,a5
-+    80004918:	60e2                	ld	ra,24(sp)
-+    8000491a:	6442                	ld	s0,16(sp)
-+    8000491c:	6105                	add	sp,sp,32
-+    8000491e:	8082                	ret
- 
--0000000080004ace <sys_fstat>:
-+0000000080004920 <sys_fstat>:
- {
--    80004ace:	1101                	addi	sp,sp,-32
--    80004ad0:	ec06                	sd	ra,24(sp)
--    80004ad2:	e822                	sd	s0,16(sp)
--    80004ad4:	1000                	addi	s0,sp,32
-+    80004920:	1101                	add	sp,sp,-32
-+    80004922:	ec06                	sd	ra,24(sp)
-+    80004924:	e822                	sd	s0,16(sp)
-+    80004926:	1000                	add	s0,sp,32
-   argaddr(1, &st);
--    80004ad6:	fe040593          	addi	a1,s0,-32
--    80004ada:	4505                	li	a0,1
--    80004adc:	cd5fd0ef          	jal	800027b0 <argaddr>
-+    80004928:	fe040593          	add	a1,s0,-32
-+    8000492c:	4505                	li	a0,1
-+    8000492e:	dcdfd0ef          	jal	800026fa <argaddr>
-   if(argfd(0, 0, &f) < 0)
--    80004ae0:	fe840613          	addi	a2,s0,-24
--    80004ae4:	4581                	li	a1,0
--    80004ae6:	4501                	li	a0,0
--    80004ae8:	cf9ff0ef          	jal	800047e0 <argfd>
--    80004aec:	87aa                	mv	a5,a0
-+    80004932:	fe840613          	add	a2,s0,-24
-+    80004936:	4581                	li	a1,0
-+    80004938:	4501                	li	a0,0
-+    8000493a:	d03ff0ef          	jal	8000463c <argfd>
-+    8000493e:	87aa                	mv	a5,a0
-     return -1;
--    80004aee:	557d                	li	a0,-1
-+    80004940:	557d                	li	a0,-1
-   if(argfd(0, 0, &f) < 0)
--    80004af0:	0007c863          	bltz	a5,80004b00 <sys_fstat+0x32>
-+    80004942:	0007c863          	bltz	a5,80004952 <sys_fstat+0x32>
-   return filestat(f, st);
--    80004af4:	fe043583          	ld	a1,-32(s0)
--    80004af8:	fe843503          	ld	a0,-24(s0)
--    80004afc:	c36ff0ef          	jal	80003f32 <filestat>
--}
--    80004b00:	60e2                	ld	ra,24(sp)
--    80004b02:	6442                	ld	s0,16(sp)
--    80004b04:	6105                	addi	sp,sp,32
--    80004b06:	8082                	ret
--
--0000000080004b08 <sys_link>:
--{
--    80004b08:	7169                	addi	sp,sp,-304
--    80004b0a:	f606                	sd	ra,296(sp)
--    80004b0c:	f222                	sd	s0,288(sp)
--    80004b0e:	1a00                	addi	s0,sp,304
-+    80004946:	fe043583          	ld	a1,-32(s0)
-+    8000494a:	fe843503          	ld	a0,-24(s0)
-+    8000494e:	cbeff0ef          	jal	80003e0c <filestat>
-+}
-+    80004952:	60e2                	ld	ra,24(sp)
-+    80004954:	6442                	ld	s0,16(sp)
-+    80004956:	6105                	add	sp,sp,32
-+    80004958:	8082                	ret
-+
-+000000008000495a <sys_link>:
-+{
-+    8000495a:	7169                	add	sp,sp,-304
-+    8000495c:	f606                	sd	ra,296(sp)
-+    8000495e:	f222                	sd	s0,288(sp)
-+    80004960:	ee26                	sd	s1,280(sp)
-+    80004962:	ea4a                	sd	s2,272(sp)
-+    80004964:	1a00                	add	s0,sp,304
-   if(argstr(0, old, MAXPATH) < 0 || argstr(1, new, MAXPATH) < 0)
--    80004b10:	08000613          	li	a2,128
--    80004b14:	ed040593          	addi	a1,s0,-304
--    80004b18:	4501                	li	a0,0
--    80004b1a:	cb3fd0ef          	jal	800027cc <argstr>
-+    80004966:	08000613          	li	a2,128
-+    8000496a:	ed040593          	add	a1,s0,-304
-+    8000496e:	4501                	li	a0,0
-+    80004970:	da7fd0ef          	jal	80002716 <argstr>
-     return -1;
--    80004b1e:	57fd                	li	a5,-1
-+    80004974:	57fd                	li	a5,-1
-   if(argstr(0, old, MAXPATH) < 0 || argstr(1, new, MAXPATH) < 0)
--    80004b20:	0c054e63          	bltz	a0,80004bfc <sys_link+0xf4>
--    80004b24:	08000613          	li	a2,128
--    80004b28:	f5040593          	addi	a1,s0,-176
--    80004b2c:	4505                	li	a0,1
--    80004b2e:	c9ffd0ef          	jal	800027cc <argstr>
-+    80004976:	0c054663          	bltz	a0,80004a42 <sys_link+0xe8>
-+    8000497a:	08000613          	li	a2,128
-+    8000497e:	f5040593          	add	a1,s0,-176
-+    80004982:	4505                	li	a0,1
-+    80004984:	d93fd0ef          	jal	80002716 <argstr>
-     return -1;
--    80004b32:	57fd                	li	a5,-1
-+    80004988:	57fd                	li	a5,-1
-   if(argstr(0, old, MAXPATH) < 0 || argstr(1, new, MAXPATH) < 0)
--    80004b34:	0c054463          	bltz	a0,80004bfc <sys_link+0xf4>
--    80004b38:	ee26                	sd	s1,280(sp)
-+    8000498a:	0a054c63          	bltz	a0,80004a42 <sys_link+0xe8>
-   begin_op();
--    80004b3a:	f1dfe0ef          	jal	80003a56 <begin_op>
-+    8000498e:	fc3fe0ef          	jal	80003950 <begin_op>
-   if((ip = namei(old)) == 0){
--    80004b3e:	ed040513          	addi	a0,s0,-304
--    80004b42:	d59fe0ef          	jal	8000389a <namei>
--    80004b46:	84aa                	mv	s1,a0
--    80004b48:	c53d                	beqz	a0,80004bb6 <sys_link+0xae>
-+    80004992:	ed040513          	add	a0,s0,-304
-+    80004996:	dfffe0ef          	jal	80003794 <namei>
-+    8000499a:	84aa                	mv	s1,a0
-+    8000499c:	c525                	beqz	a0,80004a04 <sys_link+0xaa>
-   ilock(ip);
--    80004b4a:	e76fe0ef          	jal	800031c0 <ilock>
-+    8000499e:	f44fe0ef          	jal	800030e2 <ilock>
-   if(ip->type == T_DIR){
--    80004b4e:	04449703          	lh	a4,68(s1)
--    80004b52:	4785                	li	a5,1
--    80004b54:	06f70663          	beq	a4,a5,80004bc0 <sys_link+0xb8>
--    80004b58:	ea4a                	sd	s2,272(sp)
-+    800049a2:	04449703          	lh	a4,68(s1)
-+    800049a6:	4785                	li	a5,1
-+    800049a8:	06f70263          	beq	a4,a5,80004a0c <sys_link+0xb2>
-   ip->nlink++;
--    80004b5a:	04a4d783          	lhu	a5,74(s1)
--    80004b5e:	2785                	addiw	a5,a5,1
--    80004b60:	04f49523          	sh	a5,74(s1)
-+    800049ac:	04a4d783          	lhu	a5,74(s1)
-+    800049b0:	2785                	addw	a5,a5,1
-+    800049b2:	04f49523          	sh	a5,74(s1)
-   iupdate(ip);
--    80004b64:	8526                	mv	a0,s1
--    80004b66:	da6fe0ef          	jal	8000310c <iupdate>
-+    800049b6:	8526                	mv	a0,s1
-+    800049b8:	e76fe0ef          	jal	8000302e <iupdate>
-   iunlock(ip);
--    80004b6a:	8526                	mv	a0,s1
--    80004b6c:	f02fe0ef          	jal	8000326e <iunlock>
-+    800049bc:	8526                	mv	a0,s1
-+    800049be:	fcefe0ef          	jal	8000318c <iunlock>
-   if((dp = nameiparent(new, name)) == 0)
--    80004b70:	fd040593          	addi	a1,s0,-48
--    80004b74:	f5040513          	addi	a0,s0,-176
--    80004b78:	d3dfe0ef          	jal	800038b4 <nameiparent>
--    80004b7c:	892a                	mv	s2,a0
--    80004b7e:	cd21                	beqz	a0,80004bd6 <sys_link+0xce>
-+    800049c2:	fd040593          	add	a1,s0,-48
-+    800049c6:	f5040513          	add	a0,s0,-176
-+    800049ca:	de5fe0ef          	jal	800037ae <nameiparent>
-+    800049ce:	892a                	mv	s2,a0
-+    800049d0:	c921                	beqz	a0,80004a20 <sys_link+0xc6>
-   ilock(dp);
--    80004b80:	e40fe0ef          	jal	800031c0 <ilock>
-+    800049d2:	f10fe0ef          	jal	800030e2 <ilock>
-   if(dp->dev != ip->dev || dirlink(dp, name, ip->inum) < 0){
--    80004b84:	00092703          	lw	a4,0(s2)
--    80004b88:	409c                	lw	a5,0(s1)
--    80004b8a:	04f71363          	bne	a4,a5,80004bd0 <sys_link+0xc8>
--    80004b8e:	40d0                	lw	a2,4(s1)
--    80004b90:	fd040593          	addi	a1,s0,-48
--    80004b94:	854a                	mv	a0,s2
--    80004b96:	c6bfe0ef          	jal	80003800 <dirlink>
--    80004b9a:	02054b63          	bltz	a0,80004bd0 <sys_link+0xc8>
-+    800049d6:	00092703          	lw	a4,0(s2)
-+    800049da:	409c                	lw	a5,0(s1)
-+    800049dc:	02f71f63          	bne	a4,a5,80004a1a <sys_link+0xc0>
-+    800049e0:	40d0                	lw	a2,4(s1)
-+    800049e2:	fd040593          	add	a1,s0,-48
-+    800049e6:	854a                	mv	a0,s2
-+    800049e8:	d13fe0ef          	jal	800036fa <dirlink>
-+    800049ec:	02054763          	bltz	a0,80004a1a <sys_link+0xc0>
-   iunlockput(dp);
--    80004b9e:	854a                	mv	a0,s2
--    80004ba0:	82bfe0ef          	jal	800033ca <iunlockput>
-+    800049f0:	854a                	mv	a0,s2
-+    800049f2:	8f7fe0ef          	jal	800032e8 <iunlockput>
-   iput(ip);
--    80004ba4:	8526                	mv	a0,s1
--    80004ba6:	f9cfe0ef          	jal	80003342 <iput>
-+    800049f6:	8526                	mv	a0,s1
-+    800049f8:	869fe0ef          	jal	80003260 <iput>
-   end_op();
--    80004baa:	f17fe0ef          	jal	80003ac0 <end_op>
-+    800049fc:	fbffe0ef          	jal	800039ba <end_op>
-   return 0;
--    80004bae:	4781                	li	a5,0
--    80004bb0:	64f2                	ld	s1,280(sp)
--    80004bb2:	6952                	ld	s2,272(sp)
--    80004bb4:	a0a1                	j	80004bfc <sys_link+0xf4>
-+    80004a00:	4781                	li	a5,0
-+    80004a02:	a081                	j	80004a42 <sys_link+0xe8>
-     end_op();
--    80004bb6:	f0bfe0ef          	jal	80003ac0 <end_op>
-+    80004a04:	fb7fe0ef          	jal	800039ba <end_op>
-     return -1;
--    80004bba:	57fd                	li	a5,-1
--    80004bbc:	64f2                	ld	s1,280(sp)
--    80004bbe:	a83d                	j	80004bfc <sys_link+0xf4>
-+    80004a08:	57fd                	li	a5,-1
-+    80004a0a:	a825                	j	80004a42 <sys_link+0xe8>
-     iunlockput(ip);
--    80004bc0:	8526                	mv	a0,s1
--    80004bc2:	809fe0ef          	jal	800033ca <iunlockput>
-+    80004a0c:	8526                	mv	a0,s1
-+    80004a0e:	8dbfe0ef          	jal	800032e8 <iunlockput>
-     end_op();
--    80004bc6:	efbfe0ef          	jal	80003ac0 <end_op>
-+    80004a12:	fa9fe0ef          	jal	800039ba <end_op>
-     return -1;
--    80004bca:	57fd                	li	a5,-1
--    80004bcc:	64f2                	ld	s1,280(sp)
--    80004bce:	a03d                	j	80004bfc <sys_link+0xf4>
-+    80004a16:	57fd                	li	a5,-1
-+    80004a18:	a02d                	j	80004a42 <sys_link+0xe8>
-     iunlockput(dp);
--    80004bd0:	854a                	mv	a0,s2
--    80004bd2:	ff8fe0ef          	jal	800033ca <iunlockput>
-+    80004a1a:	854a                	mv	a0,s2
-+    80004a1c:	8cdfe0ef          	jal	800032e8 <iunlockput>
-   ilock(ip);
--    80004bd6:	8526                	mv	a0,s1
--    80004bd8:	de8fe0ef          	jal	800031c0 <ilock>
-+    80004a20:	8526                	mv	a0,s1
-+    80004a22:	ec0fe0ef          	jal	800030e2 <ilock>
-   ip->nlink--;
--    80004bdc:	04a4d783          	lhu	a5,74(s1)
--    80004be0:	37fd                	addiw	a5,a5,-1
--    80004be2:	04f49523          	sh	a5,74(s1)
-+    80004a26:	04a4d783          	lhu	a5,74(s1)
-+    80004a2a:	37fd                	addw	a5,a5,-1
-+    80004a2c:	04f49523          	sh	a5,74(s1)
-   iupdate(ip);
--    80004be6:	8526                	mv	a0,s1
--    80004be8:	d24fe0ef          	jal	8000310c <iupdate>
-+    80004a30:	8526                	mv	a0,s1
-+    80004a32:	dfcfe0ef          	jal	8000302e <iupdate>
-   iunlockput(ip);
--    80004bec:	8526                	mv	a0,s1
--    80004bee:	fdcfe0ef          	jal	800033ca <iunlockput>
-+    80004a36:	8526                	mv	a0,s1
-+    80004a38:	8b1fe0ef          	jal	800032e8 <iunlockput>
-   end_op();
--    80004bf2:	ecffe0ef          	jal	80003ac0 <end_op>
-+    80004a3c:	f7ffe0ef          	jal	800039ba <end_op>
-   return -1;
--    80004bf6:	57fd                	li	a5,-1
--    80004bf8:	64f2                	ld	s1,280(sp)
--    80004bfa:	6952                	ld	s2,272(sp)
--}
--    80004bfc:	853e                	mv	a0,a5
--    80004bfe:	70b2                	ld	ra,296(sp)
--    80004c00:	7412                	ld	s0,288(sp)
--    80004c02:	6155                	addi	sp,sp,304
--    80004c04:	8082                	ret
--
--0000000080004c06 <sys_unlink>:
--{
--    80004c06:	7151                	addi	sp,sp,-240
--    80004c08:	f586                	sd	ra,232(sp)
--    80004c0a:	f1a2                	sd	s0,224(sp)
--    80004c0c:	1980                	addi	s0,sp,240
-+    80004a40:	57fd                	li	a5,-1
-+}
-+    80004a42:	853e                	mv	a0,a5
-+    80004a44:	70b2                	ld	ra,296(sp)
-+    80004a46:	7412                	ld	s0,288(sp)
-+    80004a48:	64f2                	ld	s1,280(sp)
-+    80004a4a:	6952                	ld	s2,272(sp)
-+    80004a4c:	6155                	add	sp,sp,304
-+    80004a4e:	8082                	ret
-+
-+0000000080004a50 <sys_unlink>:
-+{
-+    80004a50:	7151                	add	sp,sp,-240
-+    80004a52:	f586                	sd	ra,232(sp)
-+    80004a54:	f1a2                	sd	s0,224(sp)
-+    80004a56:	eda6                	sd	s1,216(sp)
-+    80004a58:	e9ca                	sd	s2,208(sp)
-+    80004a5a:	e5ce                	sd	s3,200(sp)
-+    80004a5c:	1980                	add	s0,sp,240
-   if(argstr(0, path, MAXPATH) < 0)
--    80004c0e:	08000613          	li	a2,128
--    80004c12:	f3040593          	addi	a1,s0,-208
--    80004c16:	4501                	li	a0,0
--    80004c18:	bb5fd0ef          	jal	800027cc <argstr>
--    80004c1c:	16054063          	bltz	a0,80004d7c <sys_unlink+0x176>
--    80004c20:	eda6                	sd	s1,216(sp)
-+    80004a5e:	08000613          	li	a2,128
-+    80004a62:	f3040593          	add	a1,s0,-208
-+    80004a66:	4501                	li	a0,0
-+    80004a68:	caffd0ef          	jal	80002716 <argstr>
-+    80004a6c:	12054b63          	bltz	a0,80004ba2 <sys_unlink+0x152>
-   begin_op();
--    80004c22:	e35fe0ef          	jal	80003a56 <begin_op>
-+    80004a70:	ee1fe0ef          	jal	80003950 <begin_op>
-   if((dp = nameiparent(path, name)) == 0){
--    80004c26:	fb040593          	addi	a1,s0,-80
--    80004c2a:	f3040513          	addi	a0,s0,-208
--    80004c2e:	c87fe0ef          	jal	800038b4 <nameiparent>
--    80004c32:	84aa                	mv	s1,a0
--    80004c34:	c945                	beqz	a0,80004ce4 <sys_unlink+0xde>
-+    80004a74:	fb040593          	add	a1,s0,-80
-+    80004a78:	f3040513          	add	a0,s0,-208
-+    80004a7c:	d33fe0ef          	jal	800037ae <nameiparent>
-+    80004a80:	84aa                	mv	s1,a0
-+    80004a82:	c54d                	beqz	a0,80004b2c <sys_unlink+0xdc>
-   ilock(dp);
--    80004c36:	d8afe0ef          	jal	800031c0 <ilock>
-+    80004a84:	e5efe0ef          	jal	800030e2 <ilock>
-   if(namecmp(name, ".") == 0 || namecmp(name, "..") == 0)
--    80004c3a:	00003597          	auipc	a1,0x3
--    80004c3e:	9e658593          	addi	a1,a1,-1562 # 80007620 <etext+0x620>
--    80004c42:	fb040513          	addi	a0,s0,-80
--    80004c46:	9d9fe0ef          	jal	8000361e <namecmp>
--    80004c4a:	10050e63          	beqz	a0,80004d66 <sys_unlink+0x160>
--    80004c4e:	00003597          	auipc	a1,0x3
--    80004c52:	9da58593          	addi	a1,a1,-1574 # 80007628 <etext+0x628>
--    80004c56:	fb040513          	addi	a0,s0,-80
--    80004c5a:	9c5fe0ef          	jal	8000361e <namecmp>
--    80004c5e:	10050463          	beqz	a0,80004d66 <sys_unlink+0x160>
--    80004c62:	e9ca                	sd	s2,208(sp)
-+    80004a88:	00003597          	auipc	a1,0x3
-+    80004a8c:	ca858593          	add	a1,a1,-856 # 80007730 <syscalls+0x2a0>
-+    80004a90:	fb040513          	add	a0,s0,-80
-+    80004a94:	a85fe0ef          	jal	80003518 <namecmp>
-+    80004a98:	10050a63          	beqz	a0,80004bac <sys_unlink+0x15c>
-+    80004a9c:	00003597          	auipc	a1,0x3
-+    80004aa0:	c9c58593          	add	a1,a1,-868 # 80007738 <syscalls+0x2a8>
-+    80004aa4:	fb040513          	add	a0,s0,-80
-+    80004aa8:	a71fe0ef          	jal	80003518 <namecmp>
-+    80004aac:	10050063          	beqz	a0,80004bac <sys_unlink+0x15c>
-   if((ip = dirlookup(dp, name, &off)) == 0)
--    80004c64:	f2c40613          	addi	a2,s0,-212
--    80004c68:	fb040593          	addi	a1,s0,-80
--    80004c6c:	8526                	mv	a0,s1
--    80004c6e:	9c7fe0ef          	jal	80003634 <dirlookup>
--    80004c72:	892a                	mv	s2,a0
--    80004c74:	0e050863          	beqz	a0,80004d64 <sys_unlink+0x15e>
-+    80004ab0:	f2c40613          	add	a2,s0,-212
-+    80004ab4:	fb040593          	add	a1,s0,-80
-+    80004ab8:	8526                	mv	a0,s1
-+    80004aba:	a75fe0ef          	jal	8000352e <dirlookup>
-+    80004abe:	892a                	mv	s2,a0
-+    80004ac0:	0e050663          	beqz	a0,80004bac <sys_unlink+0x15c>
-   ilock(ip);
--    80004c78:	d48fe0ef          	jal	800031c0 <ilock>
-+    80004ac4:	e1efe0ef          	jal	800030e2 <ilock>
-   if(ip->nlink < 1)
--    80004c7c:	04a91783          	lh	a5,74(s2)
--    80004c80:	06f05763          	blez	a5,80004cee <sys_unlink+0xe8>
-+    80004ac8:	04a91783          	lh	a5,74(s2)
-+    80004acc:	06f05463          	blez	a5,80004b34 <sys_unlink+0xe4>
-   if(ip->type == T_DIR && !isdirempty(ip)){
--    80004c84:	04491703          	lh	a4,68(s2)
--    80004c88:	4785                	li	a5,1
--    80004c8a:	06f70963          	beq	a4,a5,80004cfc <sys_unlink+0xf6>
-+    80004ad0:	04491703          	lh	a4,68(s2)
-+    80004ad4:	4785                	li	a5,1
-+    80004ad6:	06f70563          	beq	a4,a5,80004b40 <sys_unlink+0xf0>
-   memset(&de, 0, sizeof(de));
--    80004c8e:	4641                	li	a2,16
--    80004c90:	4581                	li	a1,0
--    80004c92:	fc040513          	addi	a0,s0,-64
--    80004c96:	832fc0ef          	jal	80000cc8 <memset>
-+    80004ada:	4641                	li	a2,16
-+    80004adc:	4581                	li	a1,0
-+    80004ade:	fc040513          	add	a0,s0,-64
-+    80004ae2:	992fc0ef          	jal	80000c74 <memset>
-   if(writei(dp, 0, (uint64)&de, off, sizeof(de)) != sizeof(de))
--    80004c9a:	4741                	li	a4,16
--    80004c9c:	f2c42683          	lw	a3,-212(s0)
--    80004ca0:	fc040613          	addi	a2,s0,-64
--    80004ca4:	4581                	li	a1,0
--    80004ca6:	8526                	mv	a0,s1
--    80004ca8:	869fe0ef          	jal	80003510 <writei>
--    80004cac:	47c1                	li	a5,16
--    80004cae:	08f51b63          	bne	a0,a5,80004d44 <sys_unlink+0x13e>
-+    80004ae6:	4741                	li	a4,16
-+    80004ae8:	f2c42683          	lw	a3,-212(s0)
-+    80004aec:	fc040613          	add	a2,s0,-64
-+    80004af0:	4581                	li	a1,0
-+    80004af2:	8526                	mv	a0,s1
-+    80004af4:	923fe0ef          	jal	80003416 <writei>
-+    80004af8:	47c1                	li	a5,16
-+    80004afa:	08f51563          	bne	a0,a5,80004b84 <sys_unlink+0x134>
-   if(ip->type == T_DIR){
--    80004cb2:	04491703          	lh	a4,68(s2)
--    80004cb6:	4785                	li	a5,1
--    80004cb8:	08f70d63          	beq	a4,a5,80004d52 <sys_unlink+0x14c>
-+    80004afe:	04491703          	lh	a4,68(s2)
-+    80004b02:	4785                	li	a5,1
-+    80004b04:	08f70663          	beq	a4,a5,80004b90 <sys_unlink+0x140>
-   iunlockput(dp);
--    80004cbc:	8526                	mv	a0,s1
--    80004cbe:	f0cfe0ef          	jal	800033ca <iunlockput>
-+    80004b08:	8526                	mv	a0,s1
-+    80004b0a:	fdefe0ef          	jal	800032e8 <iunlockput>
-   ip->nlink--;
--    80004cc2:	04a95783          	lhu	a5,74(s2)
--    80004cc6:	37fd                	addiw	a5,a5,-1
--    80004cc8:	04f91523          	sh	a5,74(s2)
-+    80004b0e:	04a95783          	lhu	a5,74(s2)
-+    80004b12:	37fd                	addw	a5,a5,-1
-+    80004b14:	04f91523          	sh	a5,74(s2)
-   iupdate(ip);
--    80004ccc:	854a                	mv	a0,s2
--    80004cce:	c3efe0ef          	jal	8000310c <iupdate>
-+    80004b18:	854a                	mv	a0,s2
-+    80004b1a:	d14fe0ef          	jal	8000302e <iupdate>
-   iunlockput(ip);
--    80004cd2:	854a                	mv	a0,s2
--    80004cd4:	ef6fe0ef          	jal	800033ca <iunlockput>
-+    80004b1e:	854a                	mv	a0,s2
-+    80004b20:	fc8fe0ef          	jal	800032e8 <iunlockput>
-   end_op();
--    80004cd8:	de9fe0ef          	jal	80003ac0 <end_op>
-+    80004b24:	e97fe0ef          	jal	800039ba <end_op>
-   return 0;
--    80004cdc:	4501                	li	a0,0
--    80004cde:	64ee                	ld	s1,216(sp)
--    80004ce0:	694e                	ld	s2,208(sp)
--    80004ce2:	a849                	j	80004d74 <sys_unlink+0x16e>
-+    80004b28:	4501                	li	a0,0
-+    80004b2a:	a079                	j	80004bb8 <sys_unlink+0x168>
-     end_op();
--    80004ce4:	dddfe0ef          	jal	80003ac0 <end_op>
-+    80004b2c:	e8ffe0ef          	jal	800039ba <end_op>
-     return -1;
--    80004ce8:	557d                	li	a0,-1
--    80004cea:	64ee                	ld	s1,216(sp)
--    80004cec:	a061                	j	80004d74 <sys_unlink+0x16e>
--    80004cee:	e5ce                	sd	s3,200(sp)
-+    80004b30:	557d                	li	a0,-1
-+    80004b32:	a059                	j	80004bb8 <sys_unlink+0x168>
-     panic("unlink: nlink < 1");
--    80004cf0:	00003517          	auipc	a0,0x3
--    80004cf4:	94050513          	addi	a0,a0,-1728 # 80007630 <etext+0x630>
--    80004cf8:	a9dfb0ef          	jal	80000794 <panic>
-+    80004b34:	00003517          	auipc	a0,0x3
-+    80004b38:	c0c50513          	add	a0,a0,-1012 # 80007740 <syscalls+0x2b0>
-+    80004b3c:	c23fb0ef          	jal	8000075e <panic>
-   for(off=2*sizeof(de); off<dp->size; off+=sizeof(de)){
--    80004cfc:	04c92703          	lw	a4,76(s2)
--    80004d00:	02000793          	li	a5,32
--    80004d04:	f8e7f5e3          	bgeu	a5,a4,80004c8e <sys_unlink+0x88>
--    80004d08:	e5ce                	sd	s3,200(sp)
--    80004d0a:	02000993          	li	s3,32
-+    80004b40:	04c92703          	lw	a4,76(s2)
-+    80004b44:	02000793          	li	a5,32
-+    80004b48:	f8e7f9e3          	bgeu	a5,a4,80004ada <sys_unlink+0x8a>
-+    80004b4c:	02000993          	li	s3,32
-     if(readi(dp, 0, (uint64)&de, off, sizeof(de)) != sizeof(de))
--    80004d0e:	4741                	li	a4,16
--    80004d10:	86ce                	mv	a3,s3
--    80004d12:	f1840613          	addi	a2,s0,-232
--    80004d16:	4581                	li	a1,0
--    80004d18:	854a                	mv	a0,s2
--    80004d1a:	efafe0ef          	jal	80003414 <readi>
--    80004d1e:	47c1                	li	a5,16
--    80004d20:	00f51c63          	bne	a0,a5,80004d38 <sys_unlink+0x132>
-+    80004b50:	4741                	li	a4,16
-+    80004b52:	86ce                	mv	a3,s3
-+    80004b54:	f1840613          	add	a2,s0,-232
-+    80004b58:	4581                	li	a1,0
-+    80004b5a:	854a                	mv	a0,s2
-+    80004b5c:	fd6fe0ef          	jal	80003332 <readi>
-+    80004b60:	47c1                	li	a5,16
-+    80004b62:	00f51b63          	bne	a0,a5,80004b78 <sys_unlink+0x128>
-     if(de.inum != 0)
--    80004d24:	f1845783          	lhu	a5,-232(s0)
--    80004d28:	efa1                	bnez	a5,80004d80 <sys_unlink+0x17a>
-+    80004b66:	f1845783          	lhu	a5,-232(s0)
-+    80004b6a:	ef95                	bnez	a5,80004ba6 <sys_unlink+0x156>
-   for(off=2*sizeof(de); off<dp->size; off+=sizeof(de)){
--    80004d2a:	29c1                	addiw	s3,s3,16
--    80004d2c:	04c92783          	lw	a5,76(s2)
--    80004d30:	fcf9efe3          	bltu	s3,a5,80004d0e <sys_unlink+0x108>
--    80004d34:	69ae                	ld	s3,200(sp)
--    80004d36:	bfa1                	j	80004c8e <sys_unlink+0x88>
-+    80004b6c:	29c1                	addw	s3,s3,16
-+    80004b6e:	04c92783          	lw	a5,76(s2)
-+    80004b72:	fcf9efe3          	bltu	s3,a5,80004b50 <sys_unlink+0x100>
-+    80004b76:	b795                	j	80004ada <sys_unlink+0x8a>
-       panic("isdirempty: readi");
--    80004d38:	00003517          	auipc	a0,0x3
--    80004d3c:	91050513          	addi	a0,a0,-1776 # 80007648 <etext+0x648>
--    80004d40:	a55fb0ef          	jal	80000794 <panic>
--    80004d44:	e5ce                	sd	s3,200(sp)
-+    80004b78:	00003517          	auipc	a0,0x3
-+    80004b7c:	be050513          	add	a0,a0,-1056 # 80007758 <syscalls+0x2c8>
-+    80004b80:	bdffb0ef          	jal	8000075e <panic>
-     panic("unlink: writei");
--    80004d46:	00003517          	auipc	a0,0x3
--    80004d4a:	91a50513          	addi	a0,a0,-1766 # 80007660 <etext+0x660>
--    80004d4e:	a47fb0ef          	jal	80000794 <panic>
-+    80004b84:	00003517          	auipc	a0,0x3
-+    80004b88:	bec50513          	add	a0,a0,-1044 # 80007770 <syscalls+0x2e0>
-+    80004b8c:	bd3fb0ef          	jal	8000075e <panic>
-     dp->nlink--;
--    80004d52:	04a4d783          	lhu	a5,74(s1)
--    80004d56:	37fd                	addiw	a5,a5,-1
--    80004d58:	04f49523          	sh	a5,74(s1)
-+    80004b90:	04a4d783          	lhu	a5,74(s1)
-+    80004b94:	37fd                	addw	a5,a5,-1
-+    80004b96:	04f49523          	sh	a5,74(s1)
-     iupdate(dp);
--    80004d5c:	8526                	mv	a0,s1
--    80004d5e:	baefe0ef          	jal	8000310c <iupdate>
--    80004d62:	bfa9                	j	80004cbc <sys_unlink+0xb6>
--    80004d64:	694e                	ld	s2,208(sp)
-+    80004b9a:	8526                	mv	a0,s1
-+    80004b9c:	c92fe0ef          	jal	8000302e <iupdate>
-+    80004ba0:	b7a5                	j	80004b08 <sys_unlink+0xb8>
-+    return -1;
-+    80004ba2:	557d                	li	a0,-1
-+    80004ba4:	a811                	j	80004bb8 <sys_unlink+0x168>
-+    iunlockput(ip);
-+    80004ba6:	854a                	mv	a0,s2
-+    80004ba8:	f40fe0ef          	jal	800032e8 <iunlockput>
-   iunlockput(dp);
--    80004d66:	8526                	mv	a0,s1
--    80004d68:	e62fe0ef          	jal	800033ca <iunlockput>
-+    80004bac:	8526                	mv	a0,s1
-+    80004bae:	f3afe0ef          	jal	800032e8 <iunlockput>
-   end_op();
--    80004d6c:	d55fe0ef          	jal	80003ac0 <end_op>
-+    80004bb2:	e09fe0ef          	jal	800039ba <end_op>
-   return -1;
--    80004d70:	557d                	li	a0,-1
--    80004d72:	64ee                	ld	s1,216(sp)
-+    80004bb6:	557d                	li	a0,-1
- }
--    80004d74:	70ae                	ld	ra,232(sp)
--    80004d76:	740e                	ld	s0,224(sp)
--    80004d78:	616d                	addi	sp,sp,240
--    80004d7a:	8082                	ret
--    return -1;
--    80004d7c:	557d                	li	a0,-1
--    80004d7e:	bfdd                	j	80004d74 <sys_unlink+0x16e>
--    iunlockput(ip);
--    80004d80:	854a                	mv	a0,s2
--    80004d82:	e48fe0ef          	jal	800033ca <iunlockput>
--    goto bad;
--    80004d86:	694e                	ld	s2,208(sp)
--    80004d88:	69ae                	ld	s3,200(sp)
--    80004d8a:	bff1                	j	80004d66 <sys_unlink+0x160>
-+    80004bb8:	70ae                	ld	ra,232(sp)
-+    80004bba:	740e                	ld	s0,224(sp)
-+    80004bbc:	64ee                	ld	s1,216(sp)
-+    80004bbe:	694e                	ld	s2,208(sp)
-+    80004bc0:	69ae                	ld	s3,200(sp)
-+    80004bc2:	616d                	add	sp,sp,240
-+    80004bc4:	8082                	ret
- 
--0000000080004d8c <sys_open>:
-+0000000080004bc6 <sys_open>:
- 
- uint64
- sys_open(void)
- {
--    80004d8c:	7131                	addi	sp,sp,-192
--    80004d8e:	fd06                	sd	ra,184(sp)
--    80004d90:	f922                	sd	s0,176(sp)
--    80004d92:	0180                	addi	s0,sp,192
-+    80004bc6:	7131                	add	sp,sp,-192
-+    80004bc8:	fd06                	sd	ra,184(sp)
-+    80004bca:	f922                	sd	s0,176(sp)
-+    80004bcc:	f526                	sd	s1,168(sp)
-+    80004bce:	f14a                	sd	s2,160(sp)
-+    80004bd0:	ed4e                	sd	s3,152(sp)
-+    80004bd2:	0180                	add	s0,sp,192
-   int fd, omode;
-   struct file *f;
-   struct inode *ip;
-   int n;
- 
-   argint(1, &omode);
--    80004d94:	f4c40593          	addi	a1,s0,-180
--    80004d98:	4505                	li	a0,1
--    80004d9a:	9fbfd0ef          	jal	80002794 <argint>
-+    80004bd4:	f4c40593          	add	a1,s0,-180
-+    80004bd8:	4505                	li	a0,1
-+    80004bda:	b05fd0ef          	jal	800026de <argint>
-   if((n = argstr(0, path, MAXPATH)) < 0)
--    80004d9e:	08000613          	li	a2,128
--    80004da2:	f5040593          	addi	a1,s0,-176
--    80004da6:	4501                	li	a0,0
--    80004da8:	a25fd0ef          	jal	800027cc <argstr>
--    80004dac:	87aa                	mv	a5,a0
-+    80004bde:	08000613          	li	a2,128
-+    80004be2:	f5040593          	add	a1,s0,-176
-+    80004be6:	4501                	li	a0,0
-+    80004be8:	b2ffd0ef          	jal	80002716 <argstr>
-+    80004bec:	87aa                	mv	a5,a0
-     return -1;
--    80004dae:	557d                	li	a0,-1
-+    80004bee:	557d                	li	a0,-1
-   if((n = argstr(0, path, MAXPATH)) < 0)
--    80004db0:	0a07c263          	bltz	a5,80004e54 <sys_open+0xc8>
--    80004db4:	f526                	sd	s1,168(sp)
-+    80004bf0:	0807cc63          	bltz	a5,80004c88 <sys_open+0xc2>
- 
-   begin_op();
--    80004db6:	ca1fe0ef          	jal	80003a56 <begin_op>
-+    80004bf4:	d5dfe0ef          	jal	80003950 <begin_op>
- 
-   if(omode & O_CREATE){
--    80004dba:	f4c42783          	lw	a5,-180(s0)
--    80004dbe:	2007f793          	andi	a5,a5,512
--    80004dc2:	c3d5                	beqz	a5,80004e66 <sys_open+0xda>
-+    80004bf8:	f4c42783          	lw	a5,-180(s0)
-+    80004bfc:	2007f793          	and	a5,a5,512
-+    80004c00:	cfd9                	beqz	a5,80004c9e <sys_open+0xd8>
-     ip = create(path, T_FILE, 0, 0);
--    80004dc4:	4681                	li	a3,0
--    80004dc6:	4601                	li	a2,0
--    80004dc8:	4589                	li	a1,2
--    80004dca:	f5040513          	addi	a0,s0,-176
--    80004dce:	aa9ff0ef          	jal	80004876 <create>
--    80004dd2:	84aa                	mv	s1,a0
-+    80004c02:	4681                	li	a3,0
-+    80004c04:	4601                	li	a2,0
-+    80004c06:	4589                	li	a1,2
-+    80004c08:	f5040513          	add	a0,s0,-176
-+    80004c0c:	ac7ff0ef          	jal	800046d2 <create>
-+    80004c10:	84aa                	mv	s1,a0
-     if(ip == 0){
--    80004dd4:	c541                	beqz	a0,80004e5c <sys_open+0xd0>
-+    80004c12:	c151                	beqz	a0,80004c96 <sys_open+0xd0>
-       end_op();
-       return -1;
-     }
-   }
- 
-   if(ip->type == T_DEVICE && (ip->major < 0 || ip->major >= NDEV)){
--    80004dd6:	04449703          	lh	a4,68(s1)
--    80004dda:	478d                	li	a5,3
--    80004ddc:	00f71763          	bne	a4,a5,80004dea <sys_open+0x5e>
--    80004de0:	0464d703          	lhu	a4,70(s1)
--    80004de4:	47a5                	li	a5,9
--    80004de6:	0ae7ed63          	bltu	a5,a4,80004ea0 <sys_open+0x114>
--    80004dea:	f14a                	sd	s2,160(sp)
-+    80004c14:	04449703          	lh	a4,68(s1)
-+    80004c18:	478d                	li	a5,3
-+    80004c1a:	00f71763          	bne	a4,a5,80004c28 <sys_open+0x62>
-+    80004c1e:	0464d703          	lhu	a4,70(s1)
-+    80004c22:	47a5                	li	a5,9
-+    80004c24:	0ae7e863          	bltu	a5,a4,80004cd4 <sys_open+0x10e>
-     iunlockput(ip);
-     end_op();
-     return -1;
-   }
- 
-   if((f = filealloc()) == 0 || (fd = fdalloc(f)) < 0){
--    80004dec:	fe1fe0ef          	jal	80003dcc <filealloc>
--    80004df0:	892a                	mv	s2,a0
--    80004df2:	c179                	beqz	a0,80004eb8 <sys_open+0x12c>
--    80004df4:	ed4e                	sd	s3,152(sp)
--    80004df6:	a43ff0ef          	jal	80004838 <fdalloc>
--    80004dfa:	89aa                	mv	s3,a0
--    80004dfc:	0a054a63          	bltz	a0,80004eb0 <sys_open+0x124>
-+    80004c28:	898ff0ef          	jal	80003cc0 <filealloc>
-+    80004c2c:	892a                	mv	s2,a0
-+    80004c2e:	cd4d                	beqz	a0,80004ce8 <sys_open+0x122>
-+    80004c30:	a65ff0ef          	jal	80004694 <fdalloc>
-+    80004c34:	89aa                	mv	s3,a0
-+    80004c36:	0a054663          	bltz	a0,80004ce2 <sys_open+0x11c>
-     iunlockput(ip);
-     end_op();
-     return -1;
-   }
- 
-   if(ip->type == T_DEVICE){
--    80004e00:	04449703          	lh	a4,68(s1)
--    80004e04:	478d                	li	a5,3
--    80004e06:	0cf70263          	beq	a4,a5,80004eca <sys_open+0x13e>
-+    80004c3a:	04449703          	lh	a4,68(s1)
-+    80004c3e:	478d                	li	a5,3
-+    80004c40:	0af70b63          	beq	a4,a5,80004cf6 <sys_open+0x130>
-     f->type = FD_DEVICE;
-     f->major = ip->major;
-   } else {
-     f->type = FD_INODE;
--    80004e0a:	4789                	li	a5,2
--    80004e0c:	00f92023          	sw	a5,0(s2)
-+    80004c44:	4789                	li	a5,2
-+    80004c46:	00f92023          	sw	a5,0(s2)
-     f->off = 0;
--    80004e10:	02092023          	sw	zero,32(s2)
-+    80004c4a:	02092023          	sw	zero,32(s2)
-   }
-   f->ip = ip;
--    80004e14:	00993c23          	sd	s1,24(s2)
-+    80004c4e:	00993c23          	sd	s1,24(s2)
-   f->readable = !(omode & O_WRONLY);
--    80004e18:	f4c42783          	lw	a5,-180(s0)
--    80004e1c:	0017c713          	xori	a4,a5,1
--    80004e20:	8b05                	andi	a4,a4,1
--    80004e22:	00e90423          	sb	a4,8(s2)
-+    80004c52:	f4c42783          	lw	a5,-180(s0)
-+    80004c56:	0017c713          	xor	a4,a5,1
-+    80004c5a:	8b05                	and	a4,a4,1
-+    80004c5c:	00e90423          	sb	a4,8(s2)
-   f->writable = (omode & O_WRONLY) || (omode & O_RDWR);
--    80004e26:	0037f713          	andi	a4,a5,3
--    80004e2a:	00e03733          	snez	a4,a4
--    80004e2e:	00e904a3          	sb	a4,9(s2)
-+    80004c60:	0037f713          	and	a4,a5,3
-+    80004c64:	00e03733          	snez	a4,a4
-+    80004c68:	00e904a3          	sb	a4,9(s2)
- 
-   if((omode & O_TRUNC) && ip->type == T_FILE){
--    80004e32:	4007f793          	andi	a5,a5,1024
--    80004e36:	c791                	beqz	a5,80004e42 <sys_open+0xb6>
--    80004e38:	04449703          	lh	a4,68(s1)
--    80004e3c:	4789                	li	a5,2
--    80004e3e:	08f70d63          	beq	a4,a5,80004ed8 <sys_open+0x14c>
-+    80004c6c:	4007f793          	and	a5,a5,1024
-+    80004c70:	c791                	beqz	a5,80004c7c <sys_open+0xb6>
-+    80004c72:	04449703          	lh	a4,68(s1)
-+    80004c76:	4789                	li	a5,2
-+    80004c78:	08f70663          	beq	a4,a5,80004d04 <sys_open+0x13e>
-     itrunc(ip);
-   }
- 
-   iunlock(ip);
--    80004e42:	8526                	mv	a0,s1
--    80004e44:	c2afe0ef          	jal	8000326e <iunlock>
-+    80004c7c:	8526                	mv	a0,s1
-+    80004c7e:	d0efe0ef          	jal	8000318c <iunlock>
-   end_op();
--    80004e48:	c79fe0ef          	jal	80003ac0 <end_op>
-+    80004c82:	d39fe0ef          	jal	800039ba <end_op>
- 
-   return fd;
--    80004e4c:	854e                	mv	a0,s3
--    80004e4e:	74aa                	ld	s1,168(sp)
--    80004e50:	790a                	ld	s2,160(sp)
--    80004e52:	69ea                	ld	s3,152(sp)
--}
--    80004e54:	70ea                	ld	ra,184(sp)
--    80004e56:	744a                	ld	s0,176(sp)
--    80004e58:	6129                	addi	sp,sp,192
--    80004e5a:	8082                	ret
-+    80004c86:	854e                	mv	a0,s3
-+}
-+    80004c88:	70ea                	ld	ra,184(sp)
-+    80004c8a:	744a                	ld	s0,176(sp)
-+    80004c8c:	74aa                	ld	s1,168(sp)
-+    80004c8e:	790a                	ld	s2,160(sp)
-+    80004c90:	69ea                	ld	s3,152(sp)
-+    80004c92:	6129                	add	sp,sp,192
-+    80004c94:	8082                	ret
-       end_op();
--    80004e5c:	c65fe0ef          	jal	80003ac0 <end_op>
-+    80004c96:	d25fe0ef          	jal	800039ba <end_op>
-       return -1;
--    80004e60:	557d                	li	a0,-1
--    80004e62:	74aa                	ld	s1,168(sp)
--    80004e64:	bfc5                	j	80004e54 <sys_open+0xc8>
-+    80004c9a:	557d                	li	a0,-1
-+    80004c9c:	b7f5                	j	80004c88 <sys_open+0xc2>
-     if((ip = namei(path)) == 0){
--    80004e66:	f5040513          	addi	a0,s0,-176
--    80004e6a:	a31fe0ef          	jal	8000389a <namei>
--    80004e6e:	84aa                	mv	s1,a0
--    80004e70:	c11d                	beqz	a0,80004e96 <sys_open+0x10a>
-+    80004c9e:	f5040513          	add	a0,s0,-176
-+    80004ca2:	af3fe0ef          	jal	80003794 <namei>
-+    80004ca6:	84aa                	mv	s1,a0
-+    80004ca8:	c115                	beqz	a0,80004ccc <sys_open+0x106>
-     ilock(ip);
--    80004e72:	b4efe0ef          	jal	800031c0 <ilock>
-+    80004caa:	c38fe0ef          	jal	800030e2 <ilock>
-     if(ip->type == T_DIR && omode != O_RDONLY){
--    80004e76:	04449703          	lh	a4,68(s1)
--    80004e7a:	4785                	li	a5,1
--    80004e7c:	f4f71de3          	bne	a4,a5,80004dd6 <sys_open+0x4a>
--    80004e80:	f4c42783          	lw	a5,-180(s0)
--    80004e84:	d3bd                	beqz	a5,80004dea <sys_open+0x5e>
-+    80004cae:	04449703          	lh	a4,68(s1)
-+    80004cb2:	4785                	li	a5,1
-+    80004cb4:	f6f710e3          	bne	a4,a5,80004c14 <sys_open+0x4e>
-+    80004cb8:	f4c42783          	lw	a5,-180(s0)
-+    80004cbc:	d7b5                	beqz	a5,80004c28 <sys_open+0x62>
-       iunlockput(ip);
--    80004e86:	8526                	mv	a0,s1
--    80004e88:	d42fe0ef          	jal	800033ca <iunlockput>
-+    80004cbe:	8526                	mv	a0,s1
-+    80004cc0:	e28fe0ef          	jal	800032e8 <iunlockput>
-       end_op();
--    80004e8c:	c35fe0ef          	jal	80003ac0 <end_op>
-+    80004cc4:	cf7fe0ef          	jal	800039ba <end_op>
-       return -1;
--    80004e90:	557d                	li	a0,-1
--    80004e92:	74aa                	ld	s1,168(sp)
--    80004e94:	b7c1                	j	80004e54 <sys_open+0xc8>
-+    80004cc8:	557d                	li	a0,-1
-+    80004cca:	bf7d                	j	80004c88 <sys_open+0xc2>
-       end_op();
--    80004e96:	c2bfe0ef          	jal	80003ac0 <end_op>
-+    80004ccc:	ceffe0ef          	jal	800039ba <end_op>
-       return -1;
--    80004e9a:	557d                	li	a0,-1
--    80004e9c:	74aa                	ld	s1,168(sp)
--    80004e9e:	bf5d                	j	80004e54 <sys_open+0xc8>
-+    80004cd0:	557d                	li	a0,-1
-+    80004cd2:	bf5d                	j	80004c88 <sys_open+0xc2>
-     iunlockput(ip);
--    80004ea0:	8526                	mv	a0,s1
--    80004ea2:	d28fe0ef          	jal	800033ca <iunlockput>
-+    80004cd4:	8526                	mv	a0,s1
-+    80004cd6:	e12fe0ef          	jal	800032e8 <iunlockput>
-     end_op();
--    80004ea6:	c1bfe0ef          	jal	80003ac0 <end_op>
-+    80004cda:	ce1fe0ef          	jal	800039ba <end_op>
-     return -1;
--    80004eaa:	557d                	li	a0,-1
--    80004eac:	74aa                	ld	s1,168(sp)
--    80004eae:	b75d                	j	80004e54 <sys_open+0xc8>
-+    80004cde:	557d                	li	a0,-1
-+    80004ce0:	b765                	j	80004c88 <sys_open+0xc2>
-       fileclose(f);
--    80004eb0:	854a                	mv	a0,s2
--    80004eb2:	fbffe0ef          	jal	80003e70 <fileclose>
--    80004eb6:	69ea                	ld	s3,152(sp)
-+    80004ce2:	854a                	mv	a0,s2
-+    80004ce4:	880ff0ef          	jal	80003d64 <fileclose>
-     iunlockput(ip);
--    80004eb8:	8526                	mv	a0,s1
--    80004eba:	d10fe0ef          	jal	800033ca <iunlockput>
-+    80004ce8:	8526                	mv	a0,s1
-+    80004cea:	dfefe0ef          	jal	800032e8 <iunlockput>
-     end_op();
--    80004ebe:	c03fe0ef          	jal	80003ac0 <end_op>
-+    80004cee:	ccdfe0ef          	jal	800039ba <end_op>
-     return -1;
--    80004ec2:	557d                	li	a0,-1
--    80004ec4:	74aa                	ld	s1,168(sp)
--    80004ec6:	790a                	ld	s2,160(sp)
--    80004ec8:	b771                	j	80004e54 <sys_open+0xc8>
-+    80004cf2:	557d                	li	a0,-1
-+    80004cf4:	bf51                	j	80004c88 <sys_open+0xc2>
-     f->type = FD_DEVICE;
--    80004eca:	00f92023          	sw	a5,0(s2)
-+    80004cf6:	00f92023          	sw	a5,0(s2)
-     f->major = ip->major;
--    80004ece:	04649783          	lh	a5,70(s1)
--    80004ed2:	02f91223          	sh	a5,36(s2)
--    80004ed6:	bf3d                	j	80004e14 <sys_open+0x88>
-+    80004cfa:	04649783          	lh	a5,70(s1)
-+    80004cfe:	02f91223          	sh	a5,36(s2)
-+    80004d02:	b7b1                	j	80004c4e <sys_open+0x88>
-     itrunc(ip);
--    80004ed8:	8526                	mv	a0,s1
--    80004eda:	bd4fe0ef          	jal	800032ae <itrunc>
--    80004ede:	b795                	j	80004e42 <sys_open+0xb6>
-+    80004d04:	8526                	mv	a0,s1
-+    80004d06:	cc6fe0ef          	jal	800031cc <itrunc>
-+    80004d0a:	bf8d                	j	80004c7c <sys_open+0xb6>
- 
--0000000080004ee0 <sys_mkdir>:
-+0000000080004d0c <sys_mkdir>:
- 
- uint64
- sys_mkdir(void)
- {
--    80004ee0:	7175                	addi	sp,sp,-144
--    80004ee2:	e506                	sd	ra,136(sp)
--    80004ee4:	e122                	sd	s0,128(sp)
--    80004ee6:	0900                	addi	s0,sp,144
-+    80004d0c:	7175                	add	sp,sp,-144
-+    80004d0e:	e506                	sd	ra,136(sp)
-+    80004d10:	e122                	sd	s0,128(sp)
-+    80004d12:	0900                	add	s0,sp,144
-   char path[MAXPATH];
-   struct inode *ip;
- 
-   begin_op();
--    80004ee8:	b6ffe0ef          	jal	80003a56 <begin_op>
-+    80004d14:	c3dfe0ef          	jal	80003950 <begin_op>
-   if(argstr(0, path, MAXPATH) < 0 || (ip = create(path, T_DIR, 0, 0)) == 0){
--    80004eec:	08000613          	li	a2,128
--    80004ef0:	f7040593          	addi	a1,s0,-144
--    80004ef4:	4501                	li	a0,0
--    80004ef6:	8d7fd0ef          	jal	800027cc <argstr>
--    80004efa:	02054363          	bltz	a0,80004f20 <sys_mkdir+0x40>
--    80004efe:	4681                	li	a3,0
--    80004f00:	4601                	li	a2,0
--    80004f02:	4585                	li	a1,1
--    80004f04:	f7040513          	addi	a0,s0,-144
--    80004f08:	96fff0ef          	jal	80004876 <create>
--    80004f0c:	c911                	beqz	a0,80004f20 <sys_mkdir+0x40>
-+    80004d18:	08000613          	li	a2,128
-+    80004d1c:	f7040593          	add	a1,s0,-144
-+    80004d20:	4501                	li	a0,0
-+    80004d22:	9f5fd0ef          	jal	80002716 <argstr>
-+    80004d26:	02054363          	bltz	a0,80004d4c <sys_mkdir+0x40>
-+    80004d2a:	4681                	li	a3,0
-+    80004d2c:	4601                	li	a2,0
-+    80004d2e:	4585                	li	a1,1
-+    80004d30:	f7040513          	add	a0,s0,-144
-+    80004d34:	99fff0ef          	jal	800046d2 <create>
-+    80004d38:	c911                	beqz	a0,80004d4c <sys_mkdir+0x40>
-     end_op();
-     return -1;
-   }
-   iunlockput(ip);
--    80004f0e:	cbcfe0ef          	jal	800033ca <iunlockput>
-+    80004d3a:	daefe0ef          	jal	800032e8 <iunlockput>
-   end_op();
--    80004f12:	baffe0ef          	jal	80003ac0 <end_op>
-+    80004d3e:	c7dfe0ef          	jal	800039ba <end_op>
-   return 0;
--    80004f16:	4501                	li	a0,0
-+    80004d42:	4501                	li	a0,0
- }
--    80004f18:	60aa                	ld	ra,136(sp)
--    80004f1a:	640a                	ld	s0,128(sp)
--    80004f1c:	6149                	addi	sp,sp,144
--    80004f1e:	8082                	ret
-+    80004d44:	60aa                	ld	ra,136(sp)
-+    80004d46:	640a                	ld	s0,128(sp)
-+    80004d48:	6149                	add	sp,sp,144
-+    80004d4a:	8082                	ret
-     end_op();
--    80004f20:	ba1fe0ef          	jal	80003ac0 <end_op>
-+    80004d4c:	c6ffe0ef          	jal	800039ba <end_op>
-     return -1;
--    80004f24:	557d                	li	a0,-1
--    80004f26:	bfcd                	j	80004f18 <sys_mkdir+0x38>
-+    80004d50:	557d                	li	a0,-1
-+    80004d52:	bfcd                	j	80004d44 <sys_mkdir+0x38>
- 
--0000000080004f28 <sys_mknod>:
-+0000000080004d54 <sys_mknod>:
- 
- uint64
- sys_mknod(void)
- {
--    80004f28:	7135                	addi	sp,sp,-160
--    80004f2a:	ed06                	sd	ra,152(sp)
--    80004f2c:	e922                	sd	s0,144(sp)
--    80004f2e:	1100                	addi	s0,sp,160
-+    80004d54:	7135                	add	sp,sp,-160
-+    80004d56:	ed06                	sd	ra,152(sp)
-+    80004d58:	e922                	sd	s0,144(sp)
-+    80004d5a:	1100                	add	s0,sp,160
-   struct inode *ip;
-   char path[MAXPATH];
-   int major, minor;
- 
-   begin_op();
--    80004f30:	b27fe0ef          	jal	80003a56 <begin_op>
-+    80004d5c:	bf5fe0ef          	jal	80003950 <begin_op>
-   argint(1, &major);
--    80004f34:	f6c40593          	addi	a1,s0,-148
--    80004f38:	4505                	li	a0,1
--    80004f3a:	85bfd0ef          	jal	80002794 <argint>
-+    80004d60:	f6c40593          	add	a1,s0,-148
-+    80004d64:	4505                	li	a0,1
-+    80004d66:	979fd0ef          	jal	800026de <argint>
-   argint(2, &minor);
--    80004f3e:	f6840593          	addi	a1,s0,-152
--    80004f42:	4509                	li	a0,2
--    80004f44:	851fd0ef          	jal	80002794 <argint>
-+    80004d6a:	f6840593          	add	a1,s0,-152
-+    80004d6e:	4509                	li	a0,2
-+    80004d70:	96ffd0ef          	jal	800026de <argint>
-   if((argstr(0, path, MAXPATH)) < 0 ||
--    80004f48:	08000613          	li	a2,128
--    80004f4c:	f7040593          	addi	a1,s0,-144
--    80004f50:	4501                	li	a0,0
--    80004f52:	87bfd0ef          	jal	800027cc <argstr>
--    80004f56:	02054563          	bltz	a0,80004f80 <sys_mknod+0x58>
-+    80004d74:	08000613          	li	a2,128
-+    80004d78:	f7040593          	add	a1,s0,-144
-+    80004d7c:	4501                	li	a0,0
-+    80004d7e:	999fd0ef          	jal	80002716 <argstr>
-+    80004d82:	02054563          	bltz	a0,80004dac <sys_mknod+0x58>
-      (ip = create(path, T_DEVICE, major, minor)) == 0){
--    80004f5a:	f6841683          	lh	a3,-152(s0)
--    80004f5e:	f6c41603          	lh	a2,-148(s0)
--    80004f62:	458d                	li	a1,3
--    80004f64:	f7040513          	addi	a0,s0,-144
--    80004f68:	90fff0ef          	jal	80004876 <create>
-+    80004d86:	f6841683          	lh	a3,-152(s0)
-+    80004d8a:	f6c41603          	lh	a2,-148(s0)
-+    80004d8e:	458d                	li	a1,3
-+    80004d90:	f7040513          	add	a0,s0,-144
-+    80004d94:	93fff0ef          	jal	800046d2 <create>
-   if((argstr(0, path, MAXPATH)) < 0 ||
--    80004f6c:	c911                	beqz	a0,80004f80 <sys_mknod+0x58>
-+    80004d98:	c911                	beqz	a0,80004dac <sys_mknod+0x58>
-     end_op();
-     return -1;
-   }
-   iunlockput(ip);
--    80004f6e:	c5cfe0ef          	jal	800033ca <iunlockput>
-+    80004d9a:	d4efe0ef          	jal	800032e8 <iunlockput>
-   end_op();
--    80004f72:	b4ffe0ef          	jal	80003ac0 <end_op>
-+    80004d9e:	c1dfe0ef          	jal	800039ba <end_op>
-   return 0;
--    80004f76:	4501                	li	a0,0
-+    80004da2:	4501                	li	a0,0
- }
--    80004f78:	60ea                	ld	ra,152(sp)
--    80004f7a:	644a                	ld	s0,144(sp)
--    80004f7c:	610d                	addi	sp,sp,160
--    80004f7e:	8082                	ret
-+    80004da4:	60ea                	ld	ra,152(sp)
-+    80004da6:	644a                	ld	s0,144(sp)
-+    80004da8:	610d                	add	sp,sp,160
-+    80004daa:	8082                	ret
-     end_op();
--    80004f80:	b41fe0ef          	jal	80003ac0 <end_op>
-+    80004dac:	c0ffe0ef          	jal	800039ba <end_op>
-     return -1;
--    80004f84:	557d                	li	a0,-1
--    80004f86:	bfcd                	j	80004f78 <sys_mknod+0x50>
-+    80004db0:	557d                	li	a0,-1
-+    80004db2:	bfcd                	j	80004da4 <sys_mknod+0x50>
- 
--0000000080004f88 <sys_chdir>:
-+0000000080004db4 <sys_chdir>:
- 
- uint64
- sys_chdir(void)
- {
--    80004f88:	7135                	addi	sp,sp,-160
--    80004f8a:	ed06                	sd	ra,152(sp)
--    80004f8c:	e922                	sd	s0,144(sp)
--    80004f8e:	e14a                	sd	s2,128(sp)
--    80004f90:	1100                	addi	s0,sp,160
-+    80004db4:	7135                	add	sp,sp,-160
-+    80004db6:	ed06                	sd	ra,152(sp)
-+    80004db8:	e922                	sd	s0,144(sp)
-+    80004dba:	e526                	sd	s1,136(sp)
-+    80004dbc:	e14a                	sd	s2,128(sp)
-+    80004dbe:	1100                	add	s0,sp,160
-   char path[MAXPATH];
-   struct inode *ip;
-   struct proc *p = myproc();
--    80004f92:	94ffc0ef          	jal	800018e0 <myproc>
--    80004f96:	892a                	mv	s2,a0
-+    80004dc0:	a71fc0ef          	jal	80001830 <myproc>
-+    80004dc4:	892a                	mv	s2,a0
-   
-   begin_op();
--    80004f98:	abffe0ef          	jal	80003a56 <begin_op>
-+    80004dc6:	b8bfe0ef          	jal	80003950 <begin_op>
-   if(argstr(0, path, MAXPATH) < 0 || (ip = namei(path)) == 0){
--    80004f9c:	08000613          	li	a2,128
--    80004fa0:	f6040593          	addi	a1,s0,-160
--    80004fa4:	4501                	li	a0,0
--    80004fa6:	827fd0ef          	jal	800027cc <argstr>
--    80004faa:	04054363          	bltz	a0,80004ff0 <sys_chdir+0x68>
--    80004fae:	e526                	sd	s1,136(sp)
--    80004fb0:	f6040513          	addi	a0,s0,-160
--    80004fb4:	8e7fe0ef          	jal	8000389a <namei>
--    80004fb8:	84aa                	mv	s1,a0
--    80004fba:	c915                	beqz	a0,80004fee <sys_chdir+0x66>
-+    80004dca:	08000613          	li	a2,128
-+    80004dce:	f6040593          	add	a1,s0,-160
-+    80004dd2:	4501                	li	a0,0
-+    80004dd4:	943fd0ef          	jal	80002716 <argstr>
-+    80004dd8:	04054163          	bltz	a0,80004e1a <sys_chdir+0x66>
-+    80004ddc:	f6040513          	add	a0,s0,-160
-+    80004de0:	9b5fe0ef          	jal	80003794 <namei>
-+    80004de4:	84aa                	mv	s1,a0
-+    80004de6:	c915                	beqz	a0,80004e1a <sys_chdir+0x66>
-     end_op();
-     return -1;
-   }
-   ilock(ip);
--    80004fbc:	a04fe0ef          	jal	800031c0 <ilock>
-+    80004de8:	afafe0ef          	jal	800030e2 <ilock>
-   if(ip->type != T_DIR){
--    80004fc0:	04449703          	lh	a4,68(s1)
--    80004fc4:	4785                	li	a5,1
--    80004fc6:	02f71963          	bne	a4,a5,80004ff8 <sys_chdir+0x70>
-+    80004dec:	04449703          	lh	a4,68(s1)
-+    80004df0:	4785                	li	a5,1
-+    80004df2:	02f71863          	bne	a4,a5,80004e22 <sys_chdir+0x6e>
-     iunlockput(ip);
-     end_op();
-     return -1;
-   }
-   iunlock(ip);
--    80004fca:	8526                	mv	a0,s1
--    80004fcc:	aa2fe0ef          	jal	8000326e <iunlock>
-+    80004df6:	8526                	mv	a0,s1
-+    80004df8:	b94fe0ef          	jal	8000318c <iunlock>
-   iput(p->cwd);
--    80004fd0:	15093503          	ld	a0,336(s2)
--    80004fd4:	b6efe0ef          	jal	80003342 <iput>
-+    80004dfc:	15093503          	ld	a0,336(s2)
-+    80004e00:	c60fe0ef          	jal	80003260 <iput>
-   end_op();
--    80004fd8:	ae9fe0ef          	jal	80003ac0 <end_op>
-+    80004e04:	bb7fe0ef          	jal	800039ba <end_op>
-   p->cwd = ip;
--    80004fdc:	14993823          	sd	s1,336(s2)
-+    80004e08:	14993823          	sd	s1,336(s2)
-   return 0;
--    80004fe0:	4501                	li	a0,0
--    80004fe2:	64aa                	ld	s1,136(sp)
--}
--    80004fe4:	60ea                	ld	ra,152(sp)
--    80004fe6:	644a                	ld	s0,144(sp)
--    80004fe8:	690a                	ld	s2,128(sp)
--    80004fea:	610d                	addi	sp,sp,160
--    80004fec:	8082                	ret
--    80004fee:	64aa                	ld	s1,136(sp)
-+    80004e0c:	4501                	li	a0,0
-+}
-+    80004e0e:	60ea                	ld	ra,152(sp)
-+    80004e10:	644a                	ld	s0,144(sp)
-+    80004e12:	64aa                	ld	s1,136(sp)
-+    80004e14:	690a                	ld	s2,128(sp)
-+    80004e16:	610d                	add	sp,sp,160
-+    80004e18:	8082                	ret
-     end_op();
--    80004ff0:	ad1fe0ef          	jal	80003ac0 <end_op>
-+    80004e1a:	ba1fe0ef          	jal	800039ba <end_op>
-     return -1;
--    80004ff4:	557d                	li	a0,-1
--    80004ff6:	b7fd                	j	80004fe4 <sys_chdir+0x5c>
-+    80004e1e:	557d                	li	a0,-1
-+    80004e20:	b7fd                	j	80004e0e <sys_chdir+0x5a>
-     iunlockput(ip);
--    80004ff8:	8526                	mv	a0,s1
--    80004ffa:	bd0fe0ef          	jal	800033ca <iunlockput>
-+    80004e22:	8526                	mv	a0,s1
-+    80004e24:	cc4fe0ef          	jal	800032e8 <iunlockput>
-     end_op();
--    80004ffe:	ac3fe0ef          	jal	80003ac0 <end_op>
-+    80004e28:	b93fe0ef          	jal	800039ba <end_op>
-     return -1;
--    80005002:	557d                	li	a0,-1
--    80005004:	64aa                	ld	s1,136(sp)
--    80005006:	bff9                	j	80004fe4 <sys_chdir+0x5c>
-+    80004e2c:	557d                	li	a0,-1
-+    80004e2e:	b7c5                	j	80004e0e <sys_chdir+0x5a>
- 
--0000000080005008 <sys_exec>:
-+0000000080004e30 <sys_exec>:
- 
- uint64
- sys_exec(void)
- {
--    80005008:	7121                	addi	sp,sp,-448
--    8000500a:	ff06                	sd	ra,440(sp)
--    8000500c:	fb22                	sd	s0,432(sp)
--    8000500e:	0380                	addi	s0,sp,448
-+    80004e30:	7121                	add	sp,sp,-448
-+    80004e32:	ff06                	sd	ra,440(sp)
-+    80004e34:	fb22                	sd	s0,432(sp)
-+    80004e36:	f726                	sd	s1,424(sp)
-+    80004e38:	f34a                	sd	s2,416(sp)
-+    80004e3a:	ef4e                	sd	s3,408(sp)
-+    80004e3c:	eb52                	sd	s4,400(sp)
-+    80004e3e:	0380                	add	s0,sp,448
-   char path[MAXPATH], *argv[MAXARG];
-   int i;
-   uint64 uargv, uarg;
- 
-   argaddr(1, &uargv);
--    80005010:	e4840593          	addi	a1,s0,-440
--    80005014:	4505                	li	a0,1
--    80005016:	f9afd0ef          	jal	800027b0 <argaddr>
-+    80004e40:	e4840593          	add	a1,s0,-440
-+    80004e44:	4505                	li	a0,1
-+    80004e46:	8b5fd0ef          	jal	800026fa <argaddr>
-   if(argstr(0, path, MAXPATH) < 0) {
--    8000501a:	08000613          	li	a2,128
--    8000501e:	f5040593          	addi	a1,s0,-176
--    80005022:	4501                	li	a0,0
--    80005024:	fa8fd0ef          	jal	800027cc <argstr>
--    80005028:	87aa                	mv	a5,a0
-+    80004e4a:	08000613          	li	a2,128
-+    80004e4e:	f5040593          	add	a1,s0,-176
-+    80004e52:	4501                	li	a0,0
-+    80004e54:	8c3fd0ef          	jal	80002716 <argstr>
-+    80004e58:	87aa                	mv	a5,a0
-     return -1;
--    8000502a:	557d                	li	a0,-1
-+    80004e5a:	557d                	li	a0,-1
-   if(argstr(0, path, MAXPATH) < 0) {
--    8000502c:	0c07c463          	bltz	a5,800050f4 <sys_exec+0xec>
--    80005030:	f726                	sd	s1,424(sp)
--    80005032:	f34a                	sd	s2,416(sp)
--    80005034:	ef4e                	sd	s3,408(sp)
--    80005036:	eb52                	sd	s4,400(sp)
-+    80004e5c:	0a07c463          	bltz	a5,80004f04 <sys_exec+0xd4>
-   }
-   memset(argv, 0, sizeof(argv));
--    80005038:	10000613          	li	a2,256
--    8000503c:	4581                	li	a1,0
--    8000503e:	e5040513          	addi	a0,s0,-432
--    80005042:	c87fb0ef          	jal	80000cc8 <memset>
-+    80004e60:	10000613          	li	a2,256
-+    80004e64:	4581                	li	a1,0
-+    80004e66:	e5040513          	add	a0,s0,-432
-+    80004e6a:	e0bfb0ef          	jal	80000c74 <memset>
-   for(i=0;; i++){
-     if(i >= NELEM(argv)){
--    80005046:	e5040493          	addi	s1,s0,-432
-+    80004e6e:	e5040493          	add	s1,s0,-432
-   memset(argv, 0, sizeof(argv));
--    8000504a:	89a6                	mv	s3,s1
--    8000504c:	4901                	li	s2,0
-+    80004e72:	89a6                	mv	s3,s1
-+    80004e74:	4901                	li	s2,0
-     if(i >= NELEM(argv)){
--    8000504e:	02000a13          	li	s4,32
-+    80004e76:	02000a13          	li	s4,32
-       goto bad;
-     }
-     if(fetchaddr(uargv+sizeof(uint64)*i, (uint64*)&uarg) < 0){
--    80005052:	00391513          	slli	a0,s2,0x3
--    80005056:	e4040593          	addi	a1,s0,-448
--    8000505a:	e4843783          	ld	a5,-440(s0)
--    8000505e:	953e                	add	a0,a0,a5
--    80005060:	eaafd0ef          	jal	8000270a <fetchaddr>
--    80005064:	02054663          	bltz	a0,80005090 <sys_exec+0x88>
-+    80004e7a:	00391513          	sll	a0,s2,0x3
-+    80004e7e:	e4040593          	add	a1,s0,-448
-+    80004e82:	e4843783          	ld	a5,-440(s0)
-+    80004e86:	953e                	add	a0,a0,a5
-+    80004e88:	fccfd0ef          	jal	80002654 <fetchaddr>
-+    80004e8c:	02054663          	bltz	a0,80004eb8 <sys_exec+0x88>
-       goto bad;
-     }
-     if(uarg == 0){
--    80005068:	e4043783          	ld	a5,-448(s0)
--    8000506c:	c3a9                	beqz	a5,800050ae <sys_exec+0xa6>
-+    80004e90:	e4043783          	ld	a5,-448(s0)
-+    80004e94:	cf8d                	beqz	a5,80004ece <sys_exec+0x9e>
-       argv[i] = 0;
-       break;
-     }
-     argv[i] = kalloc();
--    8000506e:	ab7fb0ef          	jal	80000b24 <kalloc>
--    80005072:	85aa                	mv	a1,a0
--    80005074:	00a9b023          	sd	a0,0(s3)
-+    80004e96:	c3bfb0ef          	jal	80000ad0 <kalloc>
-+    80004e9a:	85aa                	mv	a1,a0
-+    80004e9c:	00a9b023          	sd	a0,0(s3)
-     if(argv[i] == 0)
--    80005078:	cd01                	beqz	a0,80005090 <sys_exec+0x88>
-+    80004ea0:	cd01                	beqz	a0,80004eb8 <sys_exec+0x88>
-       goto bad;
-     if(fetchstr(uarg, argv[i], PGSIZE) < 0)
--    8000507a:	6605                	lui	a2,0x1
--    8000507c:	e4043503          	ld	a0,-448(s0)
--    80005080:	ed4fd0ef          	jal	80002754 <fetchstr>
--    80005084:	00054663          	bltz	a0,80005090 <sys_exec+0x88>
-+    80004ea2:	6605                	lui	a2,0x1
-+    80004ea4:	e4043503          	ld	a0,-448(s0)
-+    80004ea8:	ff6fd0ef          	jal	8000269e <fetchstr>
-+    80004eac:	00054663          	bltz	a0,80004eb8 <sys_exec+0x88>
-     if(i >= NELEM(argv)){
--    80005088:	0905                	addi	s2,s2,1
--    8000508a:	09a1                	addi	s3,s3,8
--    8000508c:	fd4913e3          	bne	s2,s4,80005052 <sys_exec+0x4a>
-+    80004eb0:	0905                	add	s2,s2,1
-+    80004eb2:	09a1                	add	s3,s3,8
-+    80004eb4:	fd4913e3          	bne	s2,s4,80004e7a <sys_exec+0x4a>
-     kfree(argv[i]);
- 
-   return ret;
- 
-  bad:
-   for(i = 0; i < NELEM(argv) && argv[i] != 0; i++)
--    80005090:	f5040913          	addi	s2,s0,-176
--    80005094:	6088                	ld	a0,0(s1)
--    80005096:	c931                	beqz	a0,800050ea <sys_exec+0xe2>
-+    80004eb8:	f5040913          	add	s2,s0,-176
-+    80004ebc:	6088                	ld	a0,0(s1)
-+    80004ebe:	c131                	beqz	a0,80004f02 <sys_exec+0xd2>
-     kfree(argv[i]);
--    80005098:	9abfb0ef          	jal	80000a42 <kfree>
-+    80004ec0:	b2ffb0ef          	jal	800009ee <kfree>
-   for(i = 0; i < NELEM(argv) && argv[i] != 0; i++)
--    8000509c:	04a1                	addi	s1,s1,8
--    8000509e:	ff249be3          	bne	s1,s2,80005094 <sys_exec+0x8c>
-+    80004ec4:	04a1                	add	s1,s1,8
-+    80004ec6:	ff249be3          	bne	s1,s2,80004ebc <sys_exec+0x8c>
-   return -1;
--    800050a2:	557d                	li	a0,-1
--    800050a4:	74ba                	ld	s1,424(sp)
--    800050a6:	791a                	ld	s2,416(sp)
--    800050a8:	69fa                	ld	s3,408(sp)
--    800050aa:	6a5a                	ld	s4,400(sp)
--    800050ac:	a0a1                	j	800050f4 <sys_exec+0xec>
-+    80004eca:	557d                	li	a0,-1
-+    80004ecc:	a825                	j	80004f04 <sys_exec+0xd4>
-       argv[i] = 0;
--    800050ae:	0009079b          	sext.w	a5,s2
--    800050b2:	078e                	slli	a5,a5,0x3
--    800050b4:	fd078793          	addi	a5,a5,-48
--    800050b8:	97a2                	add	a5,a5,s0
--    800050ba:	e807b023          	sd	zero,-384(a5)
-+    80004ece:	0009079b          	sext.w	a5,s2
-+    80004ed2:	078e                	sll	a5,a5,0x3
-+    80004ed4:	fd078793          	add	a5,a5,-48
-+    80004ed8:	97a2                	add	a5,a5,s0
-+    80004eda:	e807b023          	sd	zero,-384(a5)
-   int ret = exec(path, argv);
--    800050be:	e5040593          	addi	a1,s0,-432
--    800050c2:	f5040513          	addi	a0,s0,-176
--    800050c6:	ba8ff0ef          	jal	8000446e <exec>
--    800050ca:	892a                	mv	s2,a0
-+    80004ede:	e5040593          	add	a1,s0,-432
-+    80004ee2:	f5040513          	add	a0,s0,-176
-+    80004ee6:	c1cff0ef          	jal	80004302 <exec>
-+    80004eea:	892a                	mv	s2,a0
-   for(i = 0; i < NELEM(argv) && argv[i] != 0; i++)
--    800050cc:	f5040993          	addi	s3,s0,-176
--    800050d0:	6088                	ld	a0,0(s1)
--    800050d2:	c511                	beqz	a0,800050de <sys_exec+0xd6>
-+    80004eec:	f5040993          	add	s3,s0,-176
-+    80004ef0:	6088                	ld	a0,0(s1)
-+    80004ef2:	c511                	beqz	a0,80004efe <sys_exec+0xce>
-     kfree(argv[i]);
--    800050d4:	96ffb0ef          	jal	80000a42 <kfree>
-+    80004ef4:	afbfb0ef          	jal	800009ee <kfree>
-   for(i = 0; i < NELEM(argv) && argv[i] != 0; i++)
--    800050d8:	04a1                	addi	s1,s1,8
--    800050da:	ff349be3          	bne	s1,s3,800050d0 <sys_exec+0xc8>
-+    80004ef8:	04a1                	add	s1,s1,8
-+    80004efa:	ff349be3          	bne	s1,s3,80004ef0 <sys_exec+0xc0>
-   return ret;
--    800050de:	854a                	mv	a0,s2
--    800050e0:	74ba                	ld	s1,424(sp)
--    800050e2:	791a                	ld	s2,416(sp)
--    800050e4:	69fa                	ld	s3,408(sp)
--    800050e6:	6a5a                	ld	s4,400(sp)
--    800050e8:	a031                	j	800050f4 <sys_exec+0xec>
-+    80004efe:	854a                	mv	a0,s2
-+    80004f00:	a011                	j	80004f04 <sys_exec+0xd4>
-   return -1;
--    800050ea:	557d                	li	a0,-1
--    800050ec:	74ba                	ld	s1,424(sp)
--    800050ee:	791a                	ld	s2,416(sp)
--    800050f0:	69fa                	ld	s3,408(sp)
--    800050f2:	6a5a                	ld	s4,400(sp)
-+    80004f02:	557d                	li	a0,-1
- }
--    800050f4:	70fa                	ld	ra,440(sp)
--    800050f6:	745a                	ld	s0,432(sp)
--    800050f8:	6139                	addi	sp,sp,448
--    800050fa:	8082                	ret
-+    80004f04:	70fa                	ld	ra,440(sp)
-+    80004f06:	745a                	ld	s0,432(sp)
-+    80004f08:	74ba                	ld	s1,424(sp)
-+    80004f0a:	791a                	ld	s2,416(sp)
-+    80004f0c:	69fa                	ld	s3,408(sp)
-+    80004f0e:	6a5a                	ld	s4,400(sp)
-+    80004f10:	6139                	add	sp,sp,448
-+    80004f12:	8082                	ret
- 
--00000000800050fc <sys_pipe>:
-+0000000080004f14 <sys_pipe>:
- 
- uint64
- sys_pipe(void)
- {
--    800050fc:	7139                	addi	sp,sp,-64
--    800050fe:	fc06                	sd	ra,56(sp)
--    80005100:	f822                	sd	s0,48(sp)
--    80005102:	f426                	sd	s1,40(sp)
--    80005104:	0080                	addi	s0,sp,64
-+    80004f14:	7139                	add	sp,sp,-64
-+    80004f16:	fc06                	sd	ra,56(sp)
-+    80004f18:	f822                	sd	s0,48(sp)
-+    80004f1a:	f426                	sd	s1,40(sp)
-+    80004f1c:	0080                	add	s0,sp,64
-   uint64 fdarray; /* user pointer to array of two integers */
-   struct file *rf, *wf;
-   int fd0, fd1;
-   struct proc *p = myproc();
--    80005106:	fdafc0ef          	jal	800018e0 <myproc>
--    8000510a:	84aa                	mv	s1,a0
-+    80004f1e:	913fc0ef          	jal	80001830 <myproc>
-+    80004f22:	84aa                	mv	s1,a0
- 
-   argaddr(0, &fdarray);
--    8000510c:	fd840593          	addi	a1,s0,-40
--    80005110:	4501                	li	a0,0
--    80005112:	e9efd0ef          	jal	800027b0 <argaddr>
-+    80004f24:	fd840593          	add	a1,s0,-40
-+    80004f28:	4501                	li	a0,0
-+    80004f2a:	fd0fd0ef          	jal	800026fa <argaddr>
-   if(pipealloc(&rf, &wf) < 0)
--    80005116:	fc840593          	addi	a1,s0,-56
--    8000511a:	fd040513          	addi	a0,s0,-48
--    8000511e:	85cff0ef          	jal	8000417a <pipealloc>
-+    80004f2e:	fc840593          	add	a1,s0,-56
-+    80004f32:	fd040513          	add	a0,s0,-48
-+    80004f36:	8f6ff0ef          	jal	8000402c <pipealloc>
-     return -1;
--    80005122:	57fd                	li	a5,-1
-+    80004f3a:	57fd                	li	a5,-1
-   if(pipealloc(&rf, &wf) < 0)
--    80005124:	0a054463          	bltz	a0,800051cc <sys_pipe+0xd0>
-+    80004f3c:	0a054463          	bltz	a0,80004fe4 <sys_pipe+0xd0>
-   fd0 = -1;
--    80005128:	fcf42223          	sw	a5,-60(s0)
-+    80004f40:	fcf42223          	sw	a5,-60(s0)
-   if((fd0 = fdalloc(rf)) < 0 || (fd1 = fdalloc(wf)) < 0){
--    8000512c:	fd043503          	ld	a0,-48(s0)
--    80005130:	f08ff0ef          	jal	80004838 <fdalloc>
--    80005134:	fca42223          	sw	a0,-60(s0)
--    80005138:	08054163          	bltz	a0,800051ba <sys_pipe+0xbe>
--    8000513c:	fc843503          	ld	a0,-56(s0)
--    80005140:	ef8ff0ef          	jal	80004838 <fdalloc>
--    80005144:	fca42023          	sw	a0,-64(s0)
--    80005148:	06054063          	bltz	a0,800051a8 <sys_pipe+0xac>
-+    80004f44:	fd043503          	ld	a0,-48(s0)
-+    80004f48:	f4cff0ef          	jal	80004694 <fdalloc>
-+    80004f4c:	fca42223          	sw	a0,-60(s0)
-+    80004f50:	08054163          	bltz	a0,80004fd2 <sys_pipe+0xbe>
-+    80004f54:	fc843503          	ld	a0,-56(s0)
-+    80004f58:	f3cff0ef          	jal	80004694 <fdalloc>
-+    80004f5c:	fca42023          	sw	a0,-64(s0)
-+    80004f60:	06054063          	bltz	a0,80004fc0 <sys_pipe+0xac>
-       p->ofile[fd0] = 0;
-     fileclose(rf);
-     fileclose(wf);
-     return -1;
-   }
-   if(copyout(p->pagetable, fdarray, (char*)&fd0, sizeof(fd0)) < 0 ||
--    8000514c:	4691                	li	a3,4
--    8000514e:	fc440613          	addi	a2,s0,-60
--    80005152:	fd843583          	ld	a1,-40(s0)
--    80005156:	68a8                	ld	a0,80(s1)
--    80005158:	bfafc0ef          	jal	80001552 <copyout>
--    8000515c:	00054e63          	bltz	a0,80005178 <sys_pipe+0x7c>
-+    80004f64:	4691                	li	a3,4
-+    80004f66:	fc440613          	add	a2,s0,-60
-+    80004f6a:	fd843583          	ld	a1,-40(s0)
-+    80004f6e:	68a8                	ld	a0,80(s1)
-+    80004f70:	d78fc0ef          	jal	800014e8 <copyout>
-+    80004f74:	00054e63          	bltz	a0,80004f90 <sys_pipe+0x7c>
-      copyout(p->pagetable, fdarray+sizeof(fd0), (char *)&fd1, sizeof(fd1)) < 0){
--    80005160:	4691                	li	a3,4
--    80005162:	fc040613          	addi	a2,s0,-64
--    80005166:	fd843583          	ld	a1,-40(s0)
--    8000516a:	0591                	addi	a1,a1,4
--    8000516c:	68a8                	ld	a0,80(s1)
--    8000516e:	be4fc0ef          	jal	80001552 <copyout>
-+    80004f78:	4691                	li	a3,4
-+    80004f7a:	fc040613          	add	a2,s0,-64
-+    80004f7e:	fd843583          	ld	a1,-40(s0)
-+    80004f82:	0591                	add	a1,a1,4
-+    80004f84:	68a8                	ld	a0,80(s1)
-+    80004f86:	d62fc0ef          	jal	800014e8 <copyout>
-     p->ofile[fd1] = 0;
-     fileclose(rf);
-     fileclose(wf);
-     return -1;
-   }
-   return 0;
--    80005172:	4781                	li	a5,0
-+    80004f8a:	4781                	li	a5,0
-   if(copyout(p->pagetable, fdarray, (char*)&fd0, sizeof(fd0)) < 0 ||
--    80005174:	04055c63          	bgez	a0,800051cc <sys_pipe+0xd0>
-+    80004f8c:	04055c63          	bgez	a0,80004fe4 <sys_pipe+0xd0>
-     p->ofile[fd0] = 0;
--    80005178:	fc442783          	lw	a5,-60(s0)
--    8000517c:	07e9                	addi	a5,a5,26
--    8000517e:	078e                	slli	a5,a5,0x3
--    80005180:	97a6                	add	a5,a5,s1
--    80005182:	0007b023          	sd	zero,0(a5)
-+    80004f90:	fc442783          	lw	a5,-60(s0)
-+    80004f94:	07e9                	add	a5,a5,26
-+    80004f96:	078e                	sll	a5,a5,0x3
-+    80004f98:	97a6                	add	a5,a5,s1
-+    80004f9a:	0007b023          	sd	zero,0(a5)
-     p->ofile[fd1] = 0;
--    80005186:	fc042783          	lw	a5,-64(s0)
--    8000518a:	07e9                	addi	a5,a5,26
--    8000518c:	078e                	slli	a5,a5,0x3
--    8000518e:	94be                	add	s1,s1,a5
--    80005190:	0004b023          	sd	zero,0(s1)
-+    80004f9e:	fc042783          	lw	a5,-64(s0)
-+    80004fa2:	07e9                	add	a5,a5,26
-+    80004fa4:	078e                	sll	a5,a5,0x3
-+    80004fa6:	94be                	add	s1,s1,a5
-+    80004fa8:	0004b023          	sd	zero,0(s1)
-     fileclose(rf);
--    80005194:	fd043503          	ld	a0,-48(s0)
--    80005198:	cd9fe0ef          	jal	80003e70 <fileclose>
-+    80004fac:	fd043503          	ld	a0,-48(s0)
-+    80004fb0:	db5fe0ef          	jal	80003d64 <fileclose>
-     fileclose(wf);
--    8000519c:	fc843503          	ld	a0,-56(s0)
--    800051a0:	cd1fe0ef          	jal	80003e70 <fileclose>
-+    80004fb4:	fc843503          	ld	a0,-56(s0)
-+    80004fb8:	dadfe0ef          	jal	80003d64 <fileclose>
-     return -1;
--    800051a4:	57fd                	li	a5,-1
--    800051a6:	a01d                	j	800051cc <sys_pipe+0xd0>
-+    80004fbc:	57fd                	li	a5,-1
-+    80004fbe:	a01d                	j	80004fe4 <sys_pipe+0xd0>
-     if(fd0 >= 0)
--    800051a8:	fc442783          	lw	a5,-60(s0)
--    800051ac:	0007c763          	bltz	a5,800051ba <sys_pipe+0xbe>
-+    80004fc0:	fc442783          	lw	a5,-60(s0)
-+    80004fc4:	0007c763          	bltz	a5,80004fd2 <sys_pipe+0xbe>
-       p->ofile[fd0] = 0;
--    800051b0:	07e9                	addi	a5,a5,26
--    800051b2:	078e                	slli	a5,a5,0x3
--    800051b4:	97a6                	add	a5,a5,s1
--    800051b6:	0007b023          	sd	zero,0(a5)
-+    80004fc8:	07e9                	add	a5,a5,26
-+    80004fca:	078e                	sll	a5,a5,0x3
-+    80004fcc:	97a6                	add	a5,a5,s1
-+    80004fce:	0007b023          	sd	zero,0(a5)
-     fileclose(rf);
--    800051ba:	fd043503          	ld	a0,-48(s0)
--    800051be:	cb3fe0ef          	jal	80003e70 <fileclose>
-+    80004fd2:	fd043503          	ld	a0,-48(s0)
-+    80004fd6:	d8ffe0ef          	jal	80003d64 <fileclose>
-     fileclose(wf);
--    800051c2:	fc843503          	ld	a0,-56(s0)
--    800051c6:	cabfe0ef          	jal	80003e70 <fileclose>
-+    80004fda:	fc843503          	ld	a0,-56(s0)
-+    80004fde:	d87fe0ef          	jal	80003d64 <fileclose>
-     return -1;
--    800051ca:	57fd                	li	a5,-1
--}
--    800051cc:	853e                	mv	a0,a5
--    800051ce:	70e2                	ld	ra,56(sp)
--    800051d0:	7442                	ld	s0,48(sp)
--    800051d2:	74a2                	ld	s1,40(sp)
--    800051d4:	6121                	addi	sp,sp,64
--    800051d6:	8082                	ret
--	...
--
--00000000800051e0 <kernelvec>:
--    800051e0:	7111                	addi	sp,sp,-256
--    800051e2:	e006                	sd	ra,0(sp)
--    800051e4:	e40a                	sd	sp,8(sp)
--    800051e6:	e80e                	sd	gp,16(sp)
--    800051e8:	ec12                	sd	tp,24(sp)
--    800051ea:	f016                	sd	t0,32(sp)
--    800051ec:	f41a                	sd	t1,40(sp)
--    800051ee:	f81e                	sd	t2,48(sp)
--    800051f0:	e4aa                	sd	a0,72(sp)
--    800051f2:	e8ae                	sd	a1,80(sp)
--    800051f4:	ecb2                	sd	a2,88(sp)
--    800051f6:	f0b6                	sd	a3,96(sp)
--    800051f8:	f4ba                	sd	a4,104(sp)
--    800051fa:	f8be                	sd	a5,112(sp)
--    800051fc:	fcc2                	sd	a6,120(sp)
--    800051fe:	e146                	sd	a7,128(sp)
--    80005200:	edf2                	sd	t3,216(sp)
--    80005202:	f1f6                	sd	t4,224(sp)
--    80005204:	f5fa                	sd	t5,232(sp)
--    80005206:	f9fe                	sd	t6,240(sp)
--    80005208:	c12fd0ef          	jal	8000261a <kerneltrap>
--    8000520c:	6082                	ld	ra,0(sp)
--    8000520e:	6122                	ld	sp,8(sp)
--    80005210:	61c2                	ld	gp,16(sp)
--    80005212:	7282                	ld	t0,32(sp)
--    80005214:	7322                	ld	t1,40(sp)
--    80005216:	73c2                	ld	t2,48(sp)
--    80005218:	6526                	ld	a0,72(sp)
--    8000521a:	65c6                	ld	a1,80(sp)
--    8000521c:	6666                	ld	a2,88(sp)
--    8000521e:	7686                	ld	a3,96(sp)
--    80005220:	7726                	ld	a4,104(sp)
--    80005222:	77c6                	ld	a5,112(sp)
--    80005224:	7866                	ld	a6,120(sp)
--    80005226:	688a                	ld	a7,128(sp)
--    80005228:	6e6e                	ld	t3,216(sp)
--    8000522a:	7e8e                	ld	t4,224(sp)
--    8000522c:	7f2e                	ld	t5,232(sp)
--    8000522e:	7fce                	ld	t6,240(sp)
--    80005230:	6111                	addi	sp,sp,256
--    80005232:	10200073          	sret
-+    80004fe2:	57fd                	li	a5,-1
-+}
-+    80004fe4:	853e                	mv	a0,a5
-+    80004fe6:	70e2                	ld	ra,56(sp)
-+    80004fe8:	7442                	ld	s0,48(sp)
-+    80004fea:	74a2                	ld	s1,40(sp)
-+    80004fec:	6121                	add	sp,sp,64
-+    80004fee:	8082                	ret
-+
-+0000000080004ff0 <kernelvec>:
-+    80004ff0:	7111                	add	sp,sp,-256
-+    80004ff2:	e006                	sd	ra,0(sp)
-+    80004ff4:	e40a                	sd	sp,8(sp)
-+    80004ff6:	e80e                	sd	gp,16(sp)
-+    80004ff8:	ec12                	sd	tp,24(sp)
-+    80004ffa:	f016                	sd	t0,32(sp)
-+    80004ffc:	f41a                	sd	t1,40(sp)
-+    80004ffe:	f81e                	sd	t2,48(sp)
-+    80005000:	e4aa                	sd	a0,72(sp)
-+    80005002:	e8ae                	sd	a1,80(sp)
-+    80005004:	ecb2                	sd	a2,88(sp)
-+    80005006:	f0b6                	sd	a3,96(sp)
-+    80005008:	f4ba                	sd	a4,104(sp)
-+    8000500a:	f8be                	sd	a5,112(sp)
-+    8000500c:	fcc2                	sd	a6,120(sp)
-+    8000500e:	e146                	sd	a7,128(sp)
-+    80005010:	edf2                	sd	t3,216(sp)
-+    80005012:	f1f6                	sd	t4,224(sp)
-+    80005014:	f5fa                	sd	t5,232(sp)
-+    80005016:	f9fe                	sd	t6,240(sp)
-+    80005018:	d4cfd0ef          	jal	80002564 <kerneltrap>
-+    8000501c:	6082                	ld	ra,0(sp)
-+    8000501e:	6122                	ld	sp,8(sp)
-+    80005020:	61c2                	ld	gp,16(sp)
-+    80005022:	7282                	ld	t0,32(sp)
-+    80005024:	7322                	ld	t1,40(sp)
-+    80005026:	73c2                	ld	t2,48(sp)
-+    80005028:	6526                	ld	a0,72(sp)
-+    8000502a:	65c6                	ld	a1,80(sp)
-+    8000502c:	6666                	ld	a2,88(sp)
-+    8000502e:	7686                	ld	a3,96(sp)
-+    80005030:	7726                	ld	a4,104(sp)
-+    80005032:	77c6                	ld	a5,112(sp)
-+    80005034:	7866                	ld	a6,120(sp)
-+    80005036:	688a                	ld	a7,128(sp)
-+    80005038:	6e6e                	ld	t3,216(sp)
-+    8000503a:	7e8e                	ld	t4,224(sp)
-+    8000503c:	7f2e                	ld	t5,232(sp)
-+    8000503e:	7fce                	ld	t6,240(sp)
-+    80005040:	6111                	add	sp,sp,256
-+    80005042:	10200073          	sret
- 	...
- 
--000000008000523e <plicinit>:
-+000000008000504e <plicinit>:
- /* the riscv Platform Level Interrupt Controller (PLIC). */
- /* */
- 
- void
- plicinit(void)
- {
--    8000523e:	1141                	addi	sp,sp,-16
--    80005240:	e422                	sd	s0,8(sp)
--    80005242:	0800                	addi	s0,sp,16
-+    8000504e:	1141                	add	sp,sp,-16
-+    80005050:	e422                	sd	s0,8(sp)
-+    80005052:	0800                	add	s0,sp,16
-   /* set desired IRQ priorities non-zero (otherwise disabled). */
-   *(uint32*)(PLIC + UART0_IRQ*4) = 1;
--    80005244:	0c0007b7          	lui	a5,0xc000
--    80005248:	4705                	li	a4,1
--    8000524a:	d798                	sw	a4,40(a5)
-+    80005054:	0c0007b7          	lui	a5,0xc000
-+    80005058:	4705                	li	a4,1
-+    8000505a:	d798                	sw	a4,40(a5)
-   *(uint32*)(PLIC + VIRTIO0_IRQ*4) = 1;
--    8000524c:	0c0007b7          	lui	a5,0xc000
--    80005250:	c3d8                	sw	a4,4(a5)
-+    8000505c:	c3d8                	sw	a4,4(a5)
- }
--    80005252:	6422                	ld	s0,8(sp)
--    80005254:	0141                	addi	sp,sp,16
--    80005256:	8082                	ret
-+    8000505e:	6422                	ld	s0,8(sp)
-+    80005060:	0141                	add	sp,sp,16
-+    80005062:	8082                	ret
- 
--0000000080005258 <plicinithart>:
-+0000000080005064 <plicinithart>:
- 
- void
- plicinithart(void)
- {
--    80005258:	1141                	addi	sp,sp,-16
--    8000525a:	e406                	sd	ra,8(sp)
--    8000525c:	e022                	sd	s0,0(sp)
--    8000525e:	0800                	addi	s0,sp,16
-+    80005064:	1141                	add	sp,sp,-16
-+    80005066:	e406                	sd	ra,8(sp)
-+    80005068:	e022                	sd	s0,0(sp)
-+    8000506a:	0800                	add	s0,sp,16
-   int hart = cpuid();
--    80005260:	e54fc0ef          	jal	800018b4 <cpuid>
-+    8000506c:	f98fc0ef          	jal	80001804 <cpuid>
-   
-   /* set enable bits for this hart's S-mode */
-   /* for the uart and virtio disk. */
-   *(uint32*)PLIC_SENABLE(hart) = (1 << UART0_IRQ) | (1 << VIRTIO0_IRQ);
--    80005264:	0085171b          	slliw	a4,a0,0x8
--    80005268:	0c0027b7          	lui	a5,0xc002
--    8000526c:	97ba                	add	a5,a5,a4
--    8000526e:	40200713          	li	a4,1026
--    80005272:	08e7a023          	sw	a4,128(a5) # c002080 <_entry-0x73ffdf80>
-+    80005070:	0085171b          	sllw	a4,a0,0x8
-+    80005074:	0c0027b7          	lui	a5,0xc002
-+    80005078:	97ba                	add	a5,a5,a4
-+    8000507a:	40200713          	li	a4,1026
-+    8000507e:	08e7a023          	sw	a4,128(a5) # c002080 <_entry-0x73ffdf80>
- 
-   /* set this hart's S-mode priority threshold to 0. */
-   *(uint32*)PLIC_SPRIORITY(hart) = 0;
--    80005276:	00d5151b          	slliw	a0,a0,0xd
--    8000527a:	0c2017b7          	lui	a5,0xc201
--    8000527e:	97aa                	add	a5,a5,a0
--    80005280:	0007a023          	sw	zero,0(a5) # c201000 <_entry-0x73dff000>
-+    80005082:	00d5151b          	sllw	a0,a0,0xd
-+    80005086:	0c2017b7          	lui	a5,0xc201
-+    8000508a:	97aa                	add	a5,a5,a0
-+    8000508c:	0007a023          	sw	zero,0(a5) # c201000 <_entry-0x73dff000>
- }
--    80005284:	60a2                	ld	ra,8(sp)
--    80005286:	6402                	ld	s0,0(sp)
--    80005288:	0141                	addi	sp,sp,16
--    8000528a:	8082                	ret
-+    80005090:	60a2                	ld	ra,8(sp)
-+    80005092:	6402                	ld	s0,0(sp)
-+    80005094:	0141                	add	sp,sp,16
-+    80005096:	8082                	ret
- 
--000000008000528c <plic_claim>:
-+0000000080005098 <plic_claim>:
- 
- /* ask the PLIC what interrupt we should serve. */
- int
- plic_claim(void)
- {
--    8000528c:	1141                	addi	sp,sp,-16
--    8000528e:	e406                	sd	ra,8(sp)
--    80005290:	e022                	sd	s0,0(sp)
--    80005292:	0800                	addi	s0,sp,16
-+    80005098:	1141                	add	sp,sp,-16
-+    8000509a:	e406                	sd	ra,8(sp)
-+    8000509c:	e022                	sd	s0,0(sp)
-+    8000509e:	0800                	add	s0,sp,16
-   int hart = cpuid();
--    80005294:	e20fc0ef          	jal	800018b4 <cpuid>
-+    800050a0:	f64fc0ef          	jal	80001804 <cpuid>
-   int irq = *(uint32*)PLIC_SCLAIM(hart);
--    80005298:	00d5151b          	slliw	a0,a0,0xd
--    8000529c:	0c2017b7          	lui	a5,0xc201
--    800052a0:	97aa                	add	a5,a5,a0
-+    800050a4:	00d5151b          	sllw	a0,a0,0xd
-+    800050a8:	0c2017b7          	lui	a5,0xc201
-+    800050ac:	97aa                	add	a5,a5,a0
-   return irq;
- }
--    800052a2:	43c8                	lw	a0,4(a5)
--    800052a4:	60a2                	ld	ra,8(sp)
--    800052a6:	6402                	ld	s0,0(sp)
--    800052a8:	0141                	addi	sp,sp,16
--    800052aa:	8082                	ret
-+    800050ae:	43c8                	lw	a0,4(a5)
-+    800050b0:	60a2                	ld	ra,8(sp)
-+    800050b2:	6402                	ld	s0,0(sp)
-+    800050b4:	0141                	add	sp,sp,16
-+    800050b6:	8082                	ret
- 
--00000000800052ac <plic_complete>:
-+00000000800050b8 <plic_complete>:
- 
- /* tell the PLIC we've served this IRQ. */
- void
- plic_complete(int irq)
- {
--    800052ac:	1101                	addi	sp,sp,-32
--    800052ae:	ec06                	sd	ra,24(sp)
--    800052b0:	e822                	sd	s0,16(sp)
--    800052b2:	e426                	sd	s1,8(sp)
--    800052b4:	1000                	addi	s0,sp,32
--    800052b6:	84aa                	mv	s1,a0
-+    800050b8:	1101                	add	sp,sp,-32
-+    800050ba:	ec06                	sd	ra,24(sp)
-+    800050bc:	e822                	sd	s0,16(sp)
-+    800050be:	e426                	sd	s1,8(sp)
-+    800050c0:	1000                	add	s0,sp,32
-+    800050c2:	84aa                	mv	s1,a0
-   int hart = cpuid();
--    800052b8:	dfcfc0ef          	jal	800018b4 <cpuid>
-+    800050c4:	f40fc0ef          	jal	80001804 <cpuid>
-   *(uint32*)PLIC_SCLAIM(hart) = irq;
--    800052bc:	00d5151b          	slliw	a0,a0,0xd
--    800052c0:	0c2017b7          	lui	a5,0xc201
--    800052c4:	97aa                	add	a5,a5,a0
--    800052c6:	c3c4                	sw	s1,4(a5)
-+    800050c8:	00d5151b          	sllw	a0,a0,0xd
-+    800050cc:	0c2017b7          	lui	a5,0xc201
-+    800050d0:	97aa                	add	a5,a5,a0
-+    800050d2:	c3c4                	sw	s1,4(a5)
- }
--    800052c8:	60e2                	ld	ra,24(sp)
--    800052ca:	6442                	ld	s0,16(sp)
--    800052cc:	64a2                	ld	s1,8(sp)
--    800052ce:	6105                	addi	sp,sp,32
--    800052d0:	8082                	ret
-+    800050d4:	60e2                	ld	ra,24(sp)
-+    800050d6:	6442                	ld	s0,16(sp)
-+    800050d8:	64a2                	ld	s1,8(sp)
-+    800050da:	6105                	add	sp,sp,32
-+    800050dc:	8082                	ret
- 
--00000000800052d2 <free_desc>:
-+00000000800050de <free_desc>:
- }
- 
- /* mark a descriptor as free. */
- static void
- free_desc(int i)
- {
--    800052d2:	1141                	addi	sp,sp,-16
--    800052d4:	e406                	sd	ra,8(sp)
--    800052d6:	e022                	sd	s0,0(sp)
--    800052d8:	0800                	addi	s0,sp,16
-+    800050de:	1141                	add	sp,sp,-16
-+    800050e0:	e406                	sd	ra,8(sp)
-+    800050e2:	e022                	sd	s0,0(sp)
-+    800050e4:	0800                	add	s0,sp,16
-   if(i >= NUM)
--    800052da:	479d                	li	a5,7
--    800052dc:	04a7ca63          	blt	a5,a0,80005330 <free_desc+0x5e>
-+    800050e6:	479d                	li	a5,7
-+    800050e8:	04a7ca63          	blt	a5,a0,8000513c <free_desc+0x5e>
-     panic("free_desc 1");
-   if(disk.free[i])
--    800052e0:	0001e797          	auipc	a5,0x1e
--    800052e4:	11078793          	addi	a5,a5,272 # 800233f0 <disk>
--    800052e8:	97aa                	add	a5,a5,a0
--    800052ea:	0187c783          	lbu	a5,24(a5)
--    800052ee:	e7b9                	bnez	a5,8000533c <free_desc+0x6a>
-+    800050ec:	0001c797          	auipc	a5,0x1c
-+    800050f0:	a1478793          	add	a5,a5,-1516 # 80020b00 <disk>
-+    800050f4:	97aa                	add	a5,a5,a0
-+    800050f6:	0187c783          	lbu	a5,24(a5)
-+    800050fa:	e7b9                	bnez	a5,80005148 <free_desc+0x6a>
-     panic("free_desc 2");
-   disk.desc[i].addr = 0;
--    800052f0:	00451693          	slli	a3,a0,0x4
--    800052f4:	0001e797          	auipc	a5,0x1e
--    800052f8:	0fc78793          	addi	a5,a5,252 # 800233f0 <disk>
--    800052fc:	6398                	ld	a4,0(a5)
--    800052fe:	9736                	add	a4,a4,a3
--    80005300:	00073023          	sd	zero,0(a4)
-+    800050fc:	00451693          	sll	a3,a0,0x4
-+    80005100:	0001c797          	auipc	a5,0x1c
-+    80005104:	a0078793          	add	a5,a5,-1536 # 80020b00 <disk>
-+    80005108:	6398                	ld	a4,0(a5)
-+    8000510a:	9736                	add	a4,a4,a3
-+    8000510c:	00073023          	sd	zero,0(a4)
-   disk.desc[i].len = 0;
--    80005304:	6398                	ld	a4,0(a5)
--    80005306:	9736                	add	a4,a4,a3
--    80005308:	00072423          	sw	zero,8(a4)
-+    80005110:	6398                	ld	a4,0(a5)
-+    80005112:	9736                	add	a4,a4,a3
-+    80005114:	00072423          	sw	zero,8(a4)
-   disk.desc[i].flags = 0;
--    8000530c:	00071623          	sh	zero,12(a4)
-+    80005118:	00071623          	sh	zero,12(a4)
-   disk.desc[i].next = 0;
--    80005310:	00071723          	sh	zero,14(a4)
-+    8000511c:	00071723          	sh	zero,14(a4)
-   disk.free[i] = 1;
--    80005314:	97aa                	add	a5,a5,a0
--    80005316:	4705                	li	a4,1
--    80005318:	00e78c23          	sb	a4,24(a5)
-+    80005120:	97aa                	add	a5,a5,a0
-+    80005122:	4705                	li	a4,1
-+    80005124:	00e78c23          	sb	a4,24(a5)
-   wakeup(&disk.free[0]);
--    8000531c:	0001e517          	auipc	a0,0x1e
--    80005320:	0ec50513          	addi	a0,a0,236 # 80023408 <disk+0x18>
--    80005324:	bd7fc0ef          	jal	80001efa <wakeup>
--}
--    80005328:	60a2                	ld	ra,8(sp)
--    8000532a:	6402                	ld	s0,0(sp)
--    8000532c:	0141                	addi	sp,sp,16
--    8000532e:	8082                	ret
-+    80005128:	0001c517          	auipc	a0,0x1c
-+    8000512c:	9f050513          	add	a0,a0,-1552 # 80020b18 <disk+0x18>
-+    80005130:	d19fc0ef          	jal	80001e48 <wakeup>
-+}
-+    80005134:	60a2                	ld	ra,8(sp)
-+    80005136:	6402                	ld	s0,0(sp)
-+    80005138:	0141                	add	sp,sp,16
-+    8000513a:	8082                	ret
-     panic("free_desc 1");
--    80005330:	00002517          	auipc	a0,0x2
--    80005334:	34050513          	addi	a0,a0,832 # 80007670 <etext+0x670>
--    80005338:	c5cfb0ef          	jal	80000794 <panic>
-+    8000513c:	00002517          	auipc	a0,0x2
-+    80005140:	64450513          	add	a0,a0,1604 # 80007780 <syscalls+0x2f0>
-+    80005144:	e1afb0ef          	jal	8000075e <panic>
-     panic("free_desc 2");
--    8000533c:	00002517          	auipc	a0,0x2
--    80005340:	34450513          	addi	a0,a0,836 # 80007680 <etext+0x680>
--    80005344:	c50fb0ef          	jal	80000794 <panic>
--
--0000000080005348 <virtio_disk_init>:
--{
--    80005348:	1101                	addi	sp,sp,-32
--    8000534a:	ec06                	sd	ra,24(sp)
--    8000534c:	e822                	sd	s0,16(sp)
--    8000534e:	e426                	sd	s1,8(sp)
--    80005350:	e04a                	sd	s2,0(sp)
--    80005352:	1000                	addi	s0,sp,32
-+    80005148:	00002517          	auipc	a0,0x2
-+    8000514c:	64850513          	add	a0,a0,1608 # 80007790 <syscalls+0x300>
-+    80005150:	e0efb0ef          	jal	8000075e <panic>
-+
-+0000000080005154 <virtio_disk_init>:
-+{
-+    80005154:	1101                	add	sp,sp,-32
-+    80005156:	ec06                	sd	ra,24(sp)
-+    80005158:	e822                	sd	s0,16(sp)
-+    8000515a:	e426                	sd	s1,8(sp)
-+    8000515c:	e04a                	sd	s2,0(sp)
-+    8000515e:	1000                	add	s0,sp,32
-   initlock(&disk.vdisk_lock, "virtio_disk");
--    80005354:	00002597          	auipc	a1,0x2
--    80005358:	33c58593          	addi	a1,a1,828 # 80007690 <etext+0x690>
--    8000535c:	0001e517          	auipc	a0,0x1e
--    80005360:	1bc50513          	addi	a0,a0,444 # 80023518 <disk+0x128>
--    80005364:	811fb0ef          	jal	80000b74 <initlock>
-+    80005160:	00002597          	auipc	a1,0x2
-+    80005164:	64058593          	add	a1,a1,1600 # 800077a0 <syscalls+0x310>
-+    80005168:	0001c517          	auipc	a0,0x1c
-+    8000516c:	ac050513          	add	a0,a0,-1344 # 80020c28 <disk+0x128>
-+    80005170:	9b1fb0ef          	jal	80000b20 <initlock>
-   if(*R(VIRTIO_MMIO_MAGIC_VALUE) != 0x74726976 ||
--    80005368:	100017b7          	lui	a5,0x10001
--    8000536c:	4398                	lw	a4,0(a5)
--    8000536e:	2701                	sext.w	a4,a4
--    80005370:	747277b7          	lui	a5,0x74727
--    80005374:	97678793          	addi	a5,a5,-1674 # 74726976 <_entry-0xb8d968a>
--    80005378:	18f71063          	bne	a4,a5,800054f8 <virtio_disk_init+0x1b0>
-+    80005174:	100017b7          	lui	a5,0x10001
-+    80005178:	4398                	lw	a4,0(a5)
-+    8000517a:	2701                	sext.w	a4,a4
-+    8000517c:	747277b7          	lui	a5,0x74727
-+    80005180:	97678793          	add	a5,a5,-1674 # 74726976 <_entry-0xb8d968a>
-+    80005184:	12f71f63          	bne	a4,a5,800052c2 <virtio_disk_init+0x16e>
-      *R(VIRTIO_MMIO_VERSION) != 2 ||
--    8000537c:	100017b7          	lui	a5,0x10001
--    80005380:	0791                	addi	a5,a5,4 # 10001004 <_entry-0x6fffeffc>
--    80005382:	439c                	lw	a5,0(a5)
--    80005384:	2781                	sext.w	a5,a5
-+    80005188:	100017b7          	lui	a5,0x10001
-+    8000518c:	43dc                	lw	a5,4(a5)
-+    8000518e:	2781                	sext.w	a5,a5
-   if(*R(VIRTIO_MMIO_MAGIC_VALUE) != 0x74726976 ||
--    80005386:	4709                	li	a4,2
--    80005388:	16e79863          	bne	a5,a4,800054f8 <virtio_disk_init+0x1b0>
-+    80005190:	4709                	li	a4,2
-+    80005192:	12e79863          	bne	a5,a4,800052c2 <virtio_disk_init+0x16e>
-      *R(VIRTIO_MMIO_DEVICE_ID) != 2 ||
--    8000538c:	100017b7          	lui	a5,0x10001
--    80005390:	07a1                	addi	a5,a5,8 # 10001008 <_entry-0x6fffeff8>
--    80005392:	439c                	lw	a5,0(a5)
--    80005394:	2781                	sext.w	a5,a5
-+    80005196:	100017b7          	lui	a5,0x10001
-+    8000519a:	479c                	lw	a5,8(a5)
-+    8000519c:	2781                	sext.w	a5,a5
-      *R(VIRTIO_MMIO_VERSION) != 2 ||
--    80005396:	16e79163          	bne	a5,a4,800054f8 <virtio_disk_init+0x1b0>
-+    8000519e:	12e79263          	bne	a5,a4,800052c2 <virtio_disk_init+0x16e>
-      *R(VIRTIO_MMIO_VENDOR_ID) != 0x554d4551){
--    8000539a:	100017b7          	lui	a5,0x10001
--    8000539e:	47d8                	lw	a4,12(a5)
--    800053a0:	2701                	sext.w	a4,a4
-+    800051a2:	100017b7          	lui	a5,0x10001
-+    800051a6:	47d8                	lw	a4,12(a5)
-+    800051a8:	2701                	sext.w	a4,a4
-      *R(VIRTIO_MMIO_DEVICE_ID) != 2 ||
--    800053a2:	554d47b7          	lui	a5,0x554d4
--    800053a6:	55178793          	addi	a5,a5,1361 # 554d4551 <_entry-0x2ab2baaf>
--    800053aa:	14f71763          	bne	a4,a5,800054f8 <virtio_disk_init+0x1b0>
-+    800051aa:	554d47b7          	lui	a5,0x554d4
-+    800051ae:	55178793          	add	a5,a5,1361 # 554d4551 <_entry-0x2ab2baaf>
-+    800051b2:	10f71863          	bne	a4,a5,800052c2 <virtio_disk_init+0x16e>
-   *R(VIRTIO_MMIO_STATUS) = status;
--    800053ae:	100017b7          	lui	a5,0x10001
--    800053b2:	0607a823          	sw	zero,112(a5) # 10001070 <_entry-0x6fffef90>
-+    800051b6:	100017b7          	lui	a5,0x10001
-+    800051ba:	0607a823          	sw	zero,112(a5) # 10001070 <_entry-0x6fffef90>
-   *R(VIRTIO_MMIO_STATUS) = status;
--    800053b6:	4705                	li	a4,1
--    800053b8:	dbb8                	sw	a4,112(a5)
-+    800051be:	4705                	li	a4,1
-+    800051c0:	dbb8                	sw	a4,112(a5)
-   *R(VIRTIO_MMIO_STATUS) = status;
--    800053ba:	470d                	li	a4,3
--    800053bc:	dbb8                	sw	a4,112(a5)
-+    800051c2:	470d                	li	a4,3
-+    800051c4:	dbb8                	sw	a4,112(a5)
-   uint64 features = *R(VIRTIO_MMIO_DEVICE_FEATURES);
--    800053be:	10001737          	lui	a4,0x10001
--    800053c2:	4b14                	lw	a3,16(a4)
--  features &= ~(1 << VIRTIO_RING_F_INDIRECT_DESC);
--    800053c4:	c7ffe737          	lui	a4,0xc7ffe
--    800053c8:	75f70713          	addi	a4,a4,1887 # ffffffffc7ffe75f <end+0xffffffff47fdb22f>
-+    800051c6:	4b98                	lw	a4,16(a5)
-   *R(VIRTIO_MMIO_DRIVER_FEATURES) = features;
--    800053cc:	8ef9                	and	a3,a3,a4
--    800053ce:	10001737          	lui	a4,0x10001
--    800053d2:	d314                	sw	a3,32(a4)
--  *R(VIRTIO_MMIO_STATUS) = status;
--    800053d4:	472d                	li	a4,11
--    800053d6:	dbb8                	sw	a4,112(a5)
-+    800051c8:	c7ffe6b7          	lui	a3,0xc7ffe
-+    800051cc:	75f68693          	add	a3,a3,1887 # ffffffffc7ffe75f <end+0xffffffff47fddb1f>
-+    800051d0:	8f75                	and	a4,a4,a3
-+    800051d2:	d398                	sw	a4,32(a5)
-   *R(VIRTIO_MMIO_STATUS) = status;
--    800053d8:	07078793          	addi	a5,a5,112
-+    800051d4:	472d                	li	a4,11
-+    800051d6:	dbb8                	sw	a4,112(a5)
-   status = *R(VIRTIO_MMIO_STATUS);
--    800053dc:	439c                	lw	a5,0(a5)
--    800053de:	0007891b          	sext.w	s2,a5
-+    800051d8:	5bbc                	lw	a5,112(a5)
-+    800051da:	0007891b          	sext.w	s2,a5
-   if(!(status & VIRTIO_CONFIG_S_FEATURES_OK))
--    800053e2:	8ba1                	andi	a5,a5,8
--    800053e4:	12078063          	beqz	a5,80005504 <virtio_disk_init+0x1bc>
-+    800051de:	8ba1                	and	a5,a5,8
-+    800051e0:	0e078763          	beqz	a5,800052ce <virtio_disk_init+0x17a>
-   *R(VIRTIO_MMIO_QUEUE_SEL) = 0;
--    800053e8:	100017b7          	lui	a5,0x10001
--    800053ec:	0207a823          	sw	zero,48(a5) # 10001030 <_entry-0x6fffefd0>
-+    800051e4:	100017b7          	lui	a5,0x10001
-+    800051e8:	0207a823          	sw	zero,48(a5) # 10001030 <_entry-0x6fffefd0>
-   if(*R(VIRTIO_MMIO_QUEUE_READY))
--    800053f0:	100017b7          	lui	a5,0x10001
--    800053f4:	04478793          	addi	a5,a5,68 # 10001044 <_entry-0x6fffefbc>
--    800053f8:	439c                	lw	a5,0(a5)
--    800053fa:	2781                	sext.w	a5,a5
--    800053fc:	10079a63          	bnez	a5,80005510 <virtio_disk_init+0x1c8>
-+    800051ec:	43fc                	lw	a5,68(a5)
-+    800051ee:	2781                	sext.w	a5,a5
-+    800051f0:	0e079563          	bnez	a5,800052da <virtio_disk_init+0x186>
-   uint32 max = *R(VIRTIO_MMIO_QUEUE_NUM_MAX);
--    80005400:	100017b7          	lui	a5,0x10001
--    80005404:	03478793          	addi	a5,a5,52 # 10001034 <_entry-0x6fffefcc>
--    80005408:	439c                	lw	a5,0(a5)
--    8000540a:	2781                	sext.w	a5,a5
-+    800051f4:	100017b7          	lui	a5,0x10001
-+    800051f8:	5bdc                	lw	a5,52(a5)
-+    800051fa:	2781                	sext.w	a5,a5
-   if(max == 0)
--    8000540c:	10078863          	beqz	a5,8000551c <virtio_disk_init+0x1d4>
-+    800051fc:	0e078563          	beqz	a5,800052e6 <virtio_disk_init+0x192>
-   if(max < NUM)
--    80005410:	471d                	li	a4,7
--    80005412:	10f77b63          	bgeu	a4,a5,80005528 <virtio_disk_init+0x1e0>
-+    80005200:	471d                	li	a4,7
-+    80005202:	0ef77863          	bgeu	a4,a5,800052f2 <virtio_disk_init+0x19e>
-   disk.desc = kalloc();
--    80005416:	f0efb0ef          	jal	80000b24 <kalloc>
--    8000541a:	0001e497          	auipc	s1,0x1e
--    8000541e:	fd648493          	addi	s1,s1,-42 # 800233f0 <disk>
--    80005422:	e088                	sd	a0,0(s1)
-+    80005206:	8cbfb0ef          	jal	80000ad0 <kalloc>
-+    8000520a:	0001c497          	auipc	s1,0x1c
-+    8000520e:	8f648493          	add	s1,s1,-1802 # 80020b00 <disk>
-+    80005212:	e088                	sd	a0,0(s1)
-   disk.avail = kalloc();
--    80005424:	f00fb0ef          	jal	80000b24 <kalloc>
--    80005428:	e488                	sd	a0,8(s1)
-+    80005214:	8bdfb0ef          	jal	80000ad0 <kalloc>
-+    80005218:	e488                	sd	a0,8(s1)
-   disk.used = kalloc();
--    8000542a:	efafb0ef          	jal	80000b24 <kalloc>
--    8000542e:	87aa                	mv	a5,a0
--    80005430:	e888                	sd	a0,16(s1)
-+    8000521a:	8b7fb0ef          	jal	80000ad0 <kalloc>
-+    8000521e:	87aa                	mv	a5,a0
-+    80005220:	e888                	sd	a0,16(s1)
-   if(!disk.desc || !disk.avail || !disk.used)
--    80005432:	6088                	ld	a0,0(s1)
--    80005434:	10050063          	beqz	a0,80005534 <virtio_disk_init+0x1ec>
--    80005438:	0001e717          	auipc	a4,0x1e
--    8000543c:	fc073703          	ld	a4,-64(a4) # 800233f8 <disk+0x8>
--    80005440:	0e070a63          	beqz	a4,80005534 <virtio_disk_init+0x1ec>
--    80005444:	0e078863          	beqz	a5,80005534 <virtio_disk_init+0x1ec>
-+    80005222:	6088                	ld	a0,0(s1)
-+    80005224:	cd69                	beqz	a0,800052fe <virtio_disk_init+0x1aa>
-+    80005226:	0001c717          	auipc	a4,0x1c
-+    8000522a:	8e273703          	ld	a4,-1822(a4) # 80020b08 <disk+0x8>
-+    8000522e:	cb61                	beqz	a4,800052fe <virtio_disk_init+0x1aa>
-+    80005230:	c7f9                	beqz	a5,800052fe <virtio_disk_init+0x1aa>
-   memset(disk.desc, 0, PGSIZE);
--    80005448:	6605                	lui	a2,0x1
--    8000544a:	4581                	li	a1,0
--    8000544c:	87dfb0ef          	jal	80000cc8 <memset>
-+    80005232:	6605                	lui	a2,0x1
-+    80005234:	4581                	li	a1,0
-+    80005236:	a3ffb0ef          	jal	80000c74 <memset>
-   memset(disk.avail, 0, PGSIZE);
--    80005450:	0001e497          	auipc	s1,0x1e
--    80005454:	fa048493          	addi	s1,s1,-96 # 800233f0 <disk>
--    80005458:	6605                	lui	a2,0x1
--    8000545a:	4581                	li	a1,0
--    8000545c:	6488                	ld	a0,8(s1)
--    8000545e:	86bfb0ef          	jal	80000cc8 <memset>
-+    8000523a:	0001c497          	auipc	s1,0x1c
-+    8000523e:	8c648493          	add	s1,s1,-1850 # 80020b00 <disk>
-+    80005242:	6605                	lui	a2,0x1
-+    80005244:	4581                	li	a1,0
-+    80005246:	6488                	ld	a0,8(s1)
-+    80005248:	a2dfb0ef          	jal	80000c74 <memset>
-   memset(disk.used, 0, PGSIZE);
--    80005462:	6605                	lui	a2,0x1
--    80005464:	4581                	li	a1,0
--    80005466:	6888                	ld	a0,16(s1)
--    80005468:	861fb0ef          	jal	80000cc8 <memset>
-+    8000524c:	6605                	lui	a2,0x1
-+    8000524e:	4581                	li	a1,0
-+    80005250:	6888                	ld	a0,16(s1)
-+    80005252:	a23fb0ef          	jal	80000c74 <memset>
-   *R(VIRTIO_MMIO_QUEUE_NUM) = NUM;
--    8000546c:	100017b7          	lui	a5,0x10001
--    80005470:	4721                	li	a4,8
--    80005472:	df98                	sw	a4,56(a5)
-+    80005256:	100017b7          	lui	a5,0x10001
-+    8000525a:	4721                	li	a4,8
-+    8000525c:	df98                	sw	a4,56(a5)
-   *R(VIRTIO_MMIO_QUEUE_DESC_LOW) = (uint64)disk.desc;
--    80005474:	4098                	lw	a4,0(s1)
--    80005476:	100017b7          	lui	a5,0x10001
--    8000547a:	08e7a023          	sw	a4,128(a5) # 10001080 <_entry-0x6fffef80>
-+    8000525e:	4098                	lw	a4,0(s1)
-+    80005260:	08e7a023          	sw	a4,128(a5) # 10001080 <_entry-0x6fffef80>
-   *R(VIRTIO_MMIO_QUEUE_DESC_HIGH) = (uint64)disk.desc >> 32;
--    8000547e:	40d8                	lw	a4,4(s1)
--    80005480:	100017b7          	lui	a5,0x10001
--    80005484:	08e7a223          	sw	a4,132(a5) # 10001084 <_entry-0x6fffef7c>
-+    80005264:	40d8                	lw	a4,4(s1)
-+    80005266:	08e7a223          	sw	a4,132(a5)
-   *R(VIRTIO_MMIO_DRIVER_DESC_LOW) = (uint64)disk.avail;
--    80005488:	649c                	ld	a5,8(s1)
--    8000548a:	0007869b          	sext.w	a3,a5
--    8000548e:	10001737          	lui	a4,0x10001
--    80005492:	08d72823          	sw	a3,144(a4) # 10001090 <_entry-0x6fffef70>
-+    8000526a:	6498                	ld	a4,8(s1)
-+    8000526c:	0007069b          	sext.w	a3,a4
-+    80005270:	08d7a823          	sw	a3,144(a5)
-   *R(VIRTIO_MMIO_DRIVER_DESC_HIGH) = (uint64)disk.avail >> 32;
--    80005496:	9781                	srai	a5,a5,0x20
--    80005498:	10001737          	lui	a4,0x10001
--    8000549c:	08f72a23          	sw	a5,148(a4) # 10001094 <_entry-0x6fffef6c>
-+    80005274:	9701                	sra	a4,a4,0x20
-+    80005276:	08e7aa23          	sw	a4,148(a5)
-   *R(VIRTIO_MMIO_DEVICE_DESC_LOW) = (uint64)disk.used;
--    800054a0:	689c                	ld	a5,16(s1)
--    800054a2:	0007869b          	sext.w	a3,a5
--    800054a6:	10001737          	lui	a4,0x10001
--    800054aa:	0ad72023          	sw	a3,160(a4) # 100010a0 <_entry-0x6fffef60>
-+    8000527a:	6898                	ld	a4,16(s1)
-+    8000527c:	0007069b          	sext.w	a3,a4
-+    80005280:	0ad7a023          	sw	a3,160(a5)
-   *R(VIRTIO_MMIO_DEVICE_DESC_HIGH) = (uint64)disk.used >> 32;
--    800054ae:	9781                	srai	a5,a5,0x20
--    800054b0:	10001737          	lui	a4,0x10001
--    800054b4:	0af72223          	sw	a5,164(a4) # 100010a4 <_entry-0x6fffef5c>
-+    80005284:	9701                	sra	a4,a4,0x20
-+    80005286:	0ae7a223          	sw	a4,164(a5)
-   *R(VIRTIO_MMIO_QUEUE_READY) = 0x1;
--    800054b8:	10001737          	lui	a4,0x10001
--    800054bc:	4785                	li	a5,1
--    800054be:	c37c                	sw	a5,68(a4)
-+    8000528a:	4705                	li	a4,1
-+    8000528c:	c3f8                	sw	a4,68(a5)
-     disk.free[i] = 1;
--    800054c0:	00f48c23          	sb	a5,24(s1)
--    800054c4:	00f48ca3          	sb	a5,25(s1)
--    800054c8:	00f48d23          	sb	a5,26(s1)
--    800054cc:	00f48da3          	sb	a5,27(s1)
--    800054d0:	00f48e23          	sb	a5,28(s1)
--    800054d4:	00f48ea3          	sb	a5,29(s1)
--    800054d8:	00f48f23          	sb	a5,30(s1)
--    800054dc:	00f48fa3          	sb	a5,31(s1)
-+    8000528e:	00e48c23          	sb	a4,24(s1)
-+    80005292:	00e48ca3          	sb	a4,25(s1)
-+    80005296:	00e48d23          	sb	a4,26(s1)
-+    8000529a:	00e48da3          	sb	a4,27(s1)
-+    8000529e:	00e48e23          	sb	a4,28(s1)
-+    800052a2:	00e48ea3          	sb	a4,29(s1)
-+    800052a6:	00e48f23          	sb	a4,30(s1)
-+    800052aa:	00e48fa3          	sb	a4,31(s1)
-   status |= VIRTIO_CONFIG_S_DRIVER_OK;
--    800054e0:	00496913          	ori	s2,s2,4
-+    800052ae:	00496913          	or	s2,s2,4
-   *R(VIRTIO_MMIO_STATUS) = status;
--    800054e4:	100017b7          	lui	a5,0x10001
--    800054e8:	0727a823          	sw	s2,112(a5) # 10001070 <_entry-0x6fffef90>
--}
--    800054ec:	60e2                	ld	ra,24(sp)
--    800054ee:	6442                	ld	s0,16(sp)
--    800054f0:	64a2                	ld	s1,8(sp)
--    800054f2:	6902                	ld	s2,0(sp)
--    800054f4:	6105                	addi	sp,sp,32
--    800054f6:	8082                	ret
-+    800052b2:	0727a823          	sw	s2,112(a5)
-+}
-+    800052b6:	60e2                	ld	ra,24(sp)
-+    800052b8:	6442                	ld	s0,16(sp)
-+    800052ba:	64a2                	ld	s1,8(sp)
-+    800052bc:	6902                	ld	s2,0(sp)
-+    800052be:	6105                	add	sp,sp,32
-+    800052c0:	8082                	ret
-     panic("could not find virtio disk");
--    800054f8:	00002517          	auipc	a0,0x2
--    800054fc:	1a850513          	addi	a0,a0,424 # 800076a0 <etext+0x6a0>
--    80005500:	a94fb0ef          	jal	80000794 <panic>
-+    800052c2:	00002517          	auipc	a0,0x2
-+    800052c6:	4ee50513          	add	a0,a0,1262 # 800077b0 <syscalls+0x320>
-+    800052ca:	c94fb0ef          	jal	8000075e <panic>
-     panic("virtio disk FEATURES_OK unset");
--    80005504:	00002517          	auipc	a0,0x2
--    80005508:	1bc50513          	addi	a0,a0,444 # 800076c0 <etext+0x6c0>
--    8000550c:	a88fb0ef          	jal	80000794 <panic>
-+    800052ce:	00002517          	auipc	a0,0x2
-+    800052d2:	50250513          	add	a0,a0,1282 # 800077d0 <syscalls+0x340>
-+    800052d6:	c88fb0ef          	jal	8000075e <panic>
-     panic("virtio disk should not be ready");
--    80005510:	00002517          	auipc	a0,0x2
--    80005514:	1d050513          	addi	a0,a0,464 # 800076e0 <etext+0x6e0>
--    80005518:	a7cfb0ef          	jal	80000794 <panic>
-+    800052da:	00002517          	auipc	a0,0x2
-+    800052de:	51650513          	add	a0,a0,1302 # 800077f0 <syscalls+0x360>
-+    800052e2:	c7cfb0ef          	jal	8000075e <panic>
-     panic("virtio disk has no queue 0");
--    8000551c:	00002517          	auipc	a0,0x2
--    80005520:	1e450513          	addi	a0,a0,484 # 80007700 <etext+0x700>
--    80005524:	a70fb0ef          	jal	80000794 <panic>
-+    800052e6:	00002517          	auipc	a0,0x2
-+    800052ea:	52a50513          	add	a0,a0,1322 # 80007810 <syscalls+0x380>
-+    800052ee:	c70fb0ef          	jal	8000075e <panic>
-     panic("virtio disk max queue too short");
--    80005528:	00002517          	auipc	a0,0x2
--    8000552c:	1f850513          	addi	a0,a0,504 # 80007720 <etext+0x720>
--    80005530:	a64fb0ef          	jal	80000794 <panic>
-+    800052f2:	00002517          	auipc	a0,0x2
-+    800052f6:	53e50513          	add	a0,a0,1342 # 80007830 <syscalls+0x3a0>
-+    800052fa:	c64fb0ef          	jal	8000075e <panic>
-     panic("virtio disk kalloc");
--    80005534:	00002517          	auipc	a0,0x2
--    80005538:	20c50513          	addi	a0,a0,524 # 80007740 <etext+0x740>
--    8000553c:	a58fb0ef          	jal	80000794 <panic>
-+    800052fe:	00002517          	auipc	a0,0x2
-+    80005302:	55250513          	add	a0,a0,1362 # 80007850 <syscalls+0x3c0>
-+    80005306:	c58fb0ef          	jal	8000075e <panic>
- 
--0000000080005540 <virtio_disk_rw>:
-+000000008000530a <virtio_disk_rw>:
-   return 0;
- }
- 
- void
- virtio_disk_rw(struct buf *b, int write)
- {
--    80005540:	7159                	addi	sp,sp,-112
--    80005542:	f486                	sd	ra,104(sp)
--    80005544:	f0a2                	sd	s0,96(sp)
--    80005546:	eca6                	sd	s1,88(sp)
--    80005548:	e8ca                	sd	s2,80(sp)
--    8000554a:	e4ce                	sd	s3,72(sp)
--    8000554c:	e0d2                	sd	s4,64(sp)
--    8000554e:	fc56                	sd	s5,56(sp)
--    80005550:	f85a                	sd	s6,48(sp)
--    80005552:	f45e                	sd	s7,40(sp)
--    80005554:	f062                	sd	s8,32(sp)
--    80005556:	ec66                	sd	s9,24(sp)
--    80005558:	1880                	addi	s0,sp,112
--    8000555a:	8a2a                	mv	s4,a0
--    8000555c:	8bae                	mv	s7,a1
-+    8000530a:	7159                	add	sp,sp,-112
-+    8000530c:	f486                	sd	ra,104(sp)
-+    8000530e:	f0a2                	sd	s0,96(sp)
-+    80005310:	eca6                	sd	s1,88(sp)
-+    80005312:	e8ca                	sd	s2,80(sp)
-+    80005314:	e4ce                	sd	s3,72(sp)
-+    80005316:	e0d2                	sd	s4,64(sp)
-+    80005318:	fc56                	sd	s5,56(sp)
-+    8000531a:	f85a                	sd	s6,48(sp)
-+    8000531c:	f45e                	sd	s7,40(sp)
-+    8000531e:	f062                	sd	s8,32(sp)
-+    80005320:	ec66                	sd	s9,24(sp)
-+    80005322:	e86a                	sd	s10,16(sp)
-+    80005324:	1880                	add	s0,sp,112
-+    80005326:	8a2a                	mv	s4,a0
-+    80005328:	8bae                	mv	s7,a1
-   uint64 sector = b->blockno * (BSIZE / 512);
--    8000555e:	00c52c83          	lw	s9,12(a0)
--    80005562:	001c9c9b          	slliw	s9,s9,0x1
--    80005566:	1c82                	slli	s9,s9,0x20
--    80005568:	020cdc93          	srli	s9,s9,0x20
-+    8000532a:	00c52c83          	lw	s9,12(a0)
-+    8000532e:	001c9c9b          	sllw	s9,s9,0x1
-+    80005332:	1c82                	sll	s9,s9,0x20
-+    80005334:	020cdc93          	srl	s9,s9,0x20
- 
-   acquire(&disk.vdisk_lock);
--    8000556c:	0001e517          	auipc	a0,0x1e
--    80005570:	fac50513          	addi	a0,a0,-84 # 80023518 <disk+0x128>
--    80005574:	e80fb0ef          	jal	80000bf4 <acquire>
-+    80005338:	0001c517          	auipc	a0,0x1c
-+    8000533c:	8f050513          	add	a0,a0,-1808 # 80020c28 <disk+0x128>
-+    80005340:	861fb0ef          	jal	80000ba0 <acquire>
-   for(int i = 0; i < 3; i++){
--    80005578:	4981                	li	s3,0
-+    80005344:	4901                	li	s2,0
-   for(int i = 0; i < NUM; i++){
--    8000557a:	44a1                	li	s1,8
-+    80005346:	44a1                	li	s1,8
-       disk.free[i] = 0;
--    8000557c:	0001eb17          	auipc	s6,0x1e
--    80005580:	e74b0b13          	addi	s6,s6,-396 # 800233f0 <disk>
-+    80005348:	0001bb17          	auipc	s6,0x1b
-+    8000534c:	7b8b0b13          	add	s6,s6,1976 # 80020b00 <disk>
-   for(int i = 0; i < 3; i++){
--    80005584:	4a8d                	li	s5,3
-+    80005350:	4a8d                	li	s5,3
-   int idx[3];
-   while(1){
-     if(alloc3_desc(idx) == 0) {
-       break;
-     }
-     sleep(&disk.free[0], &disk.vdisk_lock);
--    80005586:	0001ec17          	auipc	s8,0x1e
--    8000558a:	f92c0c13          	addi	s8,s8,-110 # 80023518 <disk+0x128>
--    8000558e:	a8b9                	j	800055ec <virtio_disk_rw+0xac>
-+    80005352:	0001cc17          	auipc	s8,0x1c
-+    80005356:	8d6c0c13          	add	s8,s8,-1834 # 80020c28 <disk+0x128>
-+    8000535a:	a8b1                	j	800053b6 <virtio_disk_rw+0xac>
-       disk.free[i] = 0;
--    80005590:	00fb0733          	add	a4,s6,a5
--    80005594:	00070c23          	sb	zero,24(a4) # 10001018 <_entry-0x6fffefe8>
-+    8000535c:	00fb0733          	add	a4,s6,a5
-+    80005360:	00070c23          	sb	zero,24(a4)
-     idx[i] = alloc_desc();
--    80005598:	c19c                	sw	a5,0(a1)
-+    80005364:	c11c                	sw	a5,0(a0)
-     if(idx[i] < 0){
--    8000559a:	0207c563          	bltz	a5,800055c4 <virtio_disk_rw+0x84>
-+    80005366:	0207c563          	bltz	a5,80005390 <virtio_disk_rw+0x86>
-   for(int i = 0; i < 3; i++){
--    8000559e:	2905                	addiw	s2,s2,1
--    800055a0:	0611                	addi	a2,a2,4 # 1004 <_entry-0x7fffeffc>
--    800055a2:	05590963          	beq	s2,s5,800055f4 <virtio_disk_rw+0xb4>
-+    8000536a:	2605                	addw	a2,a2,1 # 1001 <_entry-0x7fffefff>
-+    8000536c:	0591                	add	a1,a1,4
-+    8000536e:	05560963          	beq	a2,s5,800053c0 <virtio_disk_rw+0xb6>
-     idx[i] = alloc_desc();
--    800055a6:	85b2                	mv	a1,a2
-+    80005372:	852e                	mv	a0,a1
-   for(int i = 0; i < NUM; i++){
--    800055a8:	0001e717          	auipc	a4,0x1e
--    800055ac:	e4870713          	addi	a4,a4,-440 # 800233f0 <disk>
--    800055b0:	87ce                	mv	a5,s3
-+    80005374:	0001b717          	auipc	a4,0x1b
-+    80005378:	78c70713          	add	a4,a4,1932 # 80020b00 <disk>
-+    8000537c:	87ca                	mv	a5,s2
-     if(disk.free[i]){
--    800055b2:	01874683          	lbu	a3,24(a4)
--    800055b6:	fee9                	bnez	a3,80005590 <virtio_disk_rw+0x50>
-+    8000537e:	01874683          	lbu	a3,24(a4)
-+    80005382:	fee9                	bnez	a3,8000535c <virtio_disk_rw+0x52>
-   for(int i = 0; i < NUM; i++){
--    800055b8:	2785                	addiw	a5,a5,1
--    800055ba:	0705                	addi	a4,a4,1
--    800055bc:	fe979be3          	bne	a5,s1,800055b2 <virtio_disk_rw+0x72>
-+    80005384:	2785                	addw	a5,a5,1
-+    80005386:	0705                	add	a4,a4,1
-+    80005388:	fe979be3          	bne	a5,s1,8000537e <virtio_disk_rw+0x74>
-     idx[i] = alloc_desc();
--    800055c0:	57fd                	li	a5,-1
--    800055c2:	c19c                	sw	a5,0(a1)
-+    8000538c:	57fd                	li	a5,-1
-+    8000538e:	c11c                	sw	a5,0(a0)
-       for(int j = 0; j < i; j++)
--    800055c4:	01205d63          	blez	s2,800055de <virtio_disk_rw+0x9e>
-+    80005390:	00c05c63          	blez	a2,800053a8 <virtio_disk_rw+0x9e>
-+    80005394:	060a                	sll	a2,a2,0x2
-+    80005396:	01360d33          	add	s10,a2,s3
-         free_desc(idx[j]);
--    800055c8:	f9042503          	lw	a0,-112(s0)
--    800055cc:	d07ff0ef          	jal	800052d2 <free_desc>
-+    8000539a:	0009a503          	lw	a0,0(s3)
-+    8000539e:	d41ff0ef          	jal	800050de <free_desc>
-       for(int j = 0; j < i; j++)
--    800055d0:	4785                	li	a5,1
--    800055d2:	0127d663          	bge	a5,s2,800055de <virtio_disk_rw+0x9e>
--        free_desc(idx[j]);
--    800055d6:	f9442503          	lw	a0,-108(s0)
--    800055da:	cf9ff0ef          	jal	800052d2 <free_desc>
-+    800053a2:	0991                	add	s3,s3,4
-+    800053a4:	ffa99be3          	bne	s3,s10,8000539a <virtio_disk_rw+0x90>
-     sleep(&disk.free[0], &disk.vdisk_lock);
--    800055de:	85e2                	mv	a1,s8
--    800055e0:	0001e517          	auipc	a0,0x1e
--    800055e4:	e2850513          	addi	a0,a0,-472 # 80023408 <disk+0x18>
--    800055e8:	8c7fc0ef          	jal	80001eae <sleep>
-+    800053a8:	85e2                	mv	a1,s8
-+    800053aa:	0001b517          	auipc	a0,0x1b
-+    800053ae:	76e50513          	add	a0,a0,1902 # 80020b18 <disk+0x18>
-+    800053b2:	a4bfc0ef          	jal	80001dfc <sleep>
-+  for(int i = 0; i < 3; i++){
-+    800053b6:	f9040993          	add	s3,s0,-112
-+{
-+    800053ba:	85ce                	mv	a1,s3
-   for(int i = 0; i < 3; i++){
--    800055ec:	f9040613          	addi	a2,s0,-112
--    800055f0:	894e                	mv	s2,s3
--    800055f2:	bf55                	j	800055a6 <virtio_disk_rw+0x66>
-+    800053bc:	864a                	mv	a2,s2
-+    800053be:	bf55                	j	80005372 <virtio_disk_rw+0x68>
-   }
- 
-   /* format the three descriptors. */
-   /* qemu's virtio-blk.c reads them. */
- 
-   struct virtio_blk_req *buf0 = &disk.ops[idx[0]];
--    800055f4:	f9042503          	lw	a0,-112(s0)
--    800055f8:	00451693          	slli	a3,a0,0x4
-+    800053c0:	f9042503          	lw	a0,-112(s0)
-+    800053c4:	00a50713          	add	a4,a0,10
-+    800053c8:	0712                	sll	a4,a4,0x4
- 
-   if(write)
--    800055fc:	0001e797          	auipc	a5,0x1e
--    80005600:	df478793          	addi	a5,a5,-524 # 800233f0 <disk>
--    80005604:	00a50713          	addi	a4,a0,10
--    80005608:	0712                	slli	a4,a4,0x4
--    8000560a:	973e                	add	a4,a4,a5
--    8000560c:	01703633          	snez	a2,s7
--    80005610:	c710                	sw	a2,8(a4)
-+    800053ca:	0001b797          	auipc	a5,0x1b
-+    800053ce:	73678793          	add	a5,a5,1846 # 80020b00 <disk>
-+    800053d2:	00e786b3          	add	a3,a5,a4
-+    800053d6:	01703633          	snez	a2,s7
-+    800053da:	c690                	sw	a2,8(a3)
-     buf0->type = VIRTIO_BLK_T_OUT; /* write the disk */
-   else
-     buf0->type = VIRTIO_BLK_T_IN; /* read the disk */
-   buf0->reserved = 0;
--    80005612:	00072623          	sw	zero,12(a4)
-+    800053dc:	0006a623          	sw	zero,12(a3)
-   buf0->sector = sector;
--    80005616:	01973823          	sd	s9,16(a4)
-+    800053e0:	0196b823          	sd	s9,16(a3)
- 
-   disk.desc[idx[0]].addr = (uint64) buf0;
--    8000561a:	6398                	ld	a4,0(a5)
--    8000561c:	9736                	add	a4,a4,a3
-+    800053e4:	f6070613          	add	a2,a4,-160
-+    800053e8:	6394                	ld	a3,0(a5)
-+    800053ea:	96b2                	add	a3,a3,a2
-   struct virtio_blk_req *buf0 = &disk.ops[idx[0]];
--    8000561e:	0a868613          	addi	a2,a3,168
--    80005622:	963e                	add	a2,a2,a5
-+    800053ec:	00870593          	add	a1,a4,8
-+    800053f0:	95be                	add	a1,a1,a5
-   disk.desc[idx[0]].addr = (uint64) buf0;
--    80005624:	e310                	sd	a2,0(a4)
-+    800053f2:	e28c                	sd	a1,0(a3)
-   disk.desc[idx[0]].len = sizeof(struct virtio_blk_req);
--    80005626:	6390                	ld	a2,0(a5)
--    80005628:	00d605b3          	add	a1,a2,a3
--    8000562c:	4741                	li	a4,16
--    8000562e:	c598                	sw	a4,8(a1)
-+    800053f4:	0007b803          	ld	a6,0(a5)
-+    800053f8:	9642                	add	a2,a2,a6
-+    800053fa:	46c1                	li	a3,16
-+    800053fc:	c614                	sw	a3,8(a2)
-   disk.desc[idx[0]].flags = VRING_DESC_F_NEXT;
--    80005630:	4805                	li	a6,1
--    80005632:	01059623          	sh	a6,12(a1)
-+    800053fe:	4585                	li	a1,1
-+    80005400:	00b61623          	sh	a1,12(a2)
-   disk.desc[idx[0]].next = idx[1];
--    80005636:	f9442703          	lw	a4,-108(s0)
--    8000563a:	00e59723          	sh	a4,14(a1)
-+    80005404:	f9442683          	lw	a3,-108(s0)
-+    80005408:	00d61723          	sh	a3,14(a2)
- 
-   disk.desc[idx[1]].addr = (uint64) b->data;
--    8000563e:	0712                	slli	a4,a4,0x4
--    80005640:	963a                	add	a2,a2,a4
--    80005642:	058a0593          	addi	a1,s4,88
--    80005646:	e20c                	sd	a1,0(a2)
-+    8000540c:	0692                	sll	a3,a3,0x4
-+    8000540e:	9836                	add	a6,a6,a3
-+    80005410:	058a0613          	add	a2,s4,88
-+    80005414:	00c83023          	sd	a2,0(a6)
-   disk.desc[idx[1]].len = BSIZE;
--    80005648:	0007b883          	ld	a7,0(a5)
--    8000564c:	9746                	add	a4,a4,a7
--    8000564e:	40000613          	li	a2,1024
--    80005652:	c710                	sw	a2,8(a4)
-+    80005418:	0007b803          	ld	a6,0(a5)
-+    8000541c:	96c2                	add	a3,a3,a6
-+    8000541e:	40000613          	li	a2,1024
-+    80005422:	c690                	sw	a2,8(a3)
-   if(write)
--    80005654:	001bb613          	seqz	a2,s7
--    80005658:	0016161b          	slliw	a2,a2,0x1
-+    80005424:	001bb613          	seqz	a2,s7
-+    80005428:	0016161b          	sllw	a2,a2,0x1
-     disk.desc[idx[1]].flags = 0; /* device reads b->data */
-   else
-     disk.desc[idx[1]].flags = VRING_DESC_F_WRITE; /* device writes b->data */
-   disk.desc[idx[1]].flags |= VRING_DESC_F_NEXT;
--    8000565c:	00166613          	ori	a2,a2,1
--    80005660:	00c71623          	sh	a2,12(a4)
-+    8000542c:	00166613          	or	a2,a2,1
-+    80005430:	00c69623          	sh	a2,12(a3)
-   disk.desc[idx[1]].next = idx[2];
--    80005664:	f9842583          	lw	a1,-104(s0)
--    80005668:	00b71723          	sh	a1,14(a4)
-+    80005434:	f9842603          	lw	a2,-104(s0)
-+    80005438:	00c69723          	sh	a2,14(a3)
- 
-   disk.info[idx[0]].status = 0xff; /* device writes 0 on success */
--    8000566c:	00250613          	addi	a2,a0,2
--    80005670:	0612                	slli	a2,a2,0x4
--    80005672:	963e                	add	a2,a2,a5
--    80005674:	577d                	li	a4,-1
--    80005676:	00e60823          	sb	a4,16(a2)
-+    8000543c:	00250693          	add	a3,a0,2
-+    80005440:	0692                	sll	a3,a3,0x4
-+    80005442:	96be                	add	a3,a3,a5
-+    80005444:	58fd                	li	a7,-1
-+    80005446:	01168823          	sb	a7,16(a3)
-   disk.desc[idx[2]].addr = (uint64) &disk.info[idx[0]].status;
--    8000567a:	0592                	slli	a1,a1,0x4
--    8000567c:	98ae                	add	a7,a7,a1
--    8000567e:	03068713          	addi	a4,a3,48
--    80005682:	973e                	add	a4,a4,a5
--    80005684:	00e8b023          	sd	a4,0(a7)
-+    8000544a:	0612                	sll	a2,a2,0x4
-+    8000544c:	9832                	add	a6,a6,a2
-+    8000544e:	f9070713          	add	a4,a4,-112
-+    80005452:	973e                	add	a4,a4,a5
-+    80005454:	00e83023          	sd	a4,0(a6)
-   disk.desc[idx[2]].len = 1;
--    80005688:	6398                	ld	a4,0(a5)
--    8000568a:	972e                	add	a4,a4,a1
--    8000568c:	01072423          	sw	a6,8(a4)
-+    80005458:	6398                	ld	a4,0(a5)
-+    8000545a:	9732                	add	a4,a4,a2
-+    8000545c:	c70c                	sw	a1,8(a4)
-   disk.desc[idx[2]].flags = VRING_DESC_F_WRITE; /* device writes the status */
--    80005690:	4689                	li	a3,2
--    80005692:	00d71623          	sh	a3,12(a4)
-+    8000545e:	4609                	li	a2,2
-+    80005460:	00c71623          	sh	a2,12(a4)
-   disk.desc[idx[2]].next = 0;
--    80005696:	00071723          	sh	zero,14(a4)
-+    80005464:	00071723          	sh	zero,14(a4)
- 
-   /* record struct buf for virtio_disk_intr(). */
-   b->disk = 1;
--    8000569a:	010a2223          	sw	a6,4(s4)
-+    80005468:	00ba2223          	sw	a1,4(s4)
-   disk.info[idx[0]].b = b;
--    8000569e:	01463423          	sd	s4,8(a2)
-+    8000546c:	0146b423          	sd	s4,8(a3)
- 
-   /* tell the device the first index in our chain of descriptors. */
-   disk.avail->ring[disk.avail->idx % NUM] = idx[0];
--    800056a2:	6794                	ld	a3,8(a5)
--    800056a4:	0026d703          	lhu	a4,2(a3)
--    800056a8:	8b1d                	andi	a4,a4,7
--    800056aa:	0706                	slli	a4,a4,0x1
--    800056ac:	96ba                	add	a3,a3,a4
--    800056ae:	00a69223          	sh	a0,4(a3)
-+    80005470:	6794                	ld	a3,8(a5)
-+    80005472:	0026d703          	lhu	a4,2(a3)
-+    80005476:	8b1d                	and	a4,a4,7
-+    80005478:	0706                	sll	a4,a4,0x1
-+    8000547a:	96ba                	add	a3,a3,a4
-+    8000547c:	00a69223          	sh	a0,4(a3)
- 
-   __sync_synchronize();
--    800056b2:	0ff0000f          	fence
-+    80005480:	0ff0000f          	fence
- 
-   /* tell the device another avail ring entry is available. */
-   disk.avail->idx += 1; /* not % NUM ... */
--    800056b6:	6798                	ld	a4,8(a5)
--    800056b8:	00275783          	lhu	a5,2(a4)
--    800056bc:	2785                	addiw	a5,a5,1
--    800056be:	00f71123          	sh	a5,2(a4)
-+    80005484:	6798                	ld	a4,8(a5)
-+    80005486:	00275783          	lhu	a5,2(a4)
-+    8000548a:	2785                	addw	a5,a5,1
-+    8000548c:	00f71123          	sh	a5,2(a4)
- 
-   __sync_synchronize();
--    800056c2:	0ff0000f          	fence
-+    80005490:	0ff0000f          	fence
- 
-   *R(VIRTIO_MMIO_QUEUE_NOTIFY) = 0; /* value is queue number */
--    800056c6:	100017b7          	lui	a5,0x10001
--    800056ca:	0407a823          	sw	zero,80(a5) # 10001050 <_entry-0x6fffefb0>
-+    80005494:	100017b7          	lui	a5,0x10001
-+    80005498:	0407a823          	sw	zero,80(a5) # 10001050 <_entry-0x6fffefb0>
- 
-   /* Wait for virtio_disk_intr() to say request has finished. */
-   while(b->disk == 1) {
--    800056ce:	004a2783          	lw	a5,4(s4)
-+    8000549c:	004a2783          	lw	a5,4(s4)
-     sleep(b, &disk.vdisk_lock);
--    800056d2:	0001e917          	auipc	s2,0x1e
--    800056d6:	e4690913          	addi	s2,s2,-442 # 80023518 <disk+0x128>
-+    800054a0:	0001b917          	auipc	s2,0x1b
-+    800054a4:	78890913          	add	s2,s2,1928 # 80020c28 <disk+0x128>
-   while(b->disk == 1) {
--    800056da:	4485                	li	s1,1
--    800056dc:	01079a63          	bne	a5,a6,800056f0 <virtio_disk_rw+0x1b0>
-+    800054a8:	4485                	li	s1,1
-+    800054aa:	00b79a63          	bne	a5,a1,800054be <virtio_disk_rw+0x1b4>
-     sleep(b, &disk.vdisk_lock);
--    800056e0:	85ca                	mv	a1,s2
--    800056e2:	8552                	mv	a0,s4
--    800056e4:	fcafc0ef          	jal	80001eae <sleep>
-+    800054ae:	85ca                	mv	a1,s2
-+    800054b0:	8552                	mv	a0,s4
-+    800054b2:	94bfc0ef          	jal	80001dfc <sleep>
-   while(b->disk == 1) {
--    800056e8:	004a2783          	lw	a5,4(s4)
--    800056ec:	fe978ae3          	beq	a5,s1,800056e0 <virtio_disk_rw+0x1a0>
-+    800054b6:	004a2783          	lw	a5,4(s4)
-+    800054ba:	fe978ae3          	beq	a5,s1,800054ae <virtio_disk_rw+0x1a4>
-   }
- 
-   disk.info[idx[0]].b = 0;
--    800056f0:	f9042903          	lw	s2,-112(s0)
--    800056f4:	00290713          	addi	a4,s2,2
--    800056f8:	0712                	slli	a4,a4,0x4
--    800056fa:	0001e797          	auipc	a5,0x1e
--    800056fe:	cf678793          	addi	a5,a5,-778 # 800233f0 <disk>
--    80005702:	97ba                	add	a5,a5,a4
--    80005704:	0007b423          	sd	zero,8(a5)
-+    800054be:	f9042903          	lw	s2,-112(s0)
-+    800054c2:	00290713          	add	a4,s2,2
-+    800054c6:	0712                	sll	a4,a4,0x4
-+    800054c8:	0001b797          	auipc	a5,0x1b
-+    800054cc:	63878793          	add	a5,a5,1592 # 80020b00 <disk>
-+    800054d0:	97ba                	add	a5,a5,a4
-+    800054d2:	0007b423          	sd	zero,8(a5)
-     int flag = disk.desc[i].flags;
--    80005708:	0001e997          	auipc	s3,0x1e
--    8000570c:	ce898993          	addi	s3,s3,-792 # 800233f0 <disk>
--    80005710:	00491713          	slli	a4,s2,0x4
--    80005714:	0009b783          	ld	a5,0(s3)
--    80005718:	97ba                	add	a5,a5,a4
--    8000571a:	00c7d483          	lhu	s1,12(a5)
-+    800054d6:	0001b997          	auipc	s3,0x1b
-+    800054da:	62a98993          	add	s3,s3,1578 # 80020b00 <disk>
-+    800054de:	00491713          	sll	a4,s2,0x4
-+    800054e2:	0009b783          	ld	a5,0(s3)
-+    800054e6:	97ba                	add	a5,a5,a4
-+    800054e8:	00c7d483          	lhu	s1,12(a5)
-     int nxt = disk.desc[i].next;
--    8000571e:	854a                	mv	a0,s2
--    80005720:	00e7d903          	lhu	s2,14(a5)
-+    800054ec:	854a                	mv	a0,s2
-+    800054ee:	00e7d903          	lhu	s2,14(a5)
-     free_desc(i);
--    80005724:	bafff0ef          	jal	800052d2 <free_desc>
-+    800054f2:	bedff0ef          	jal	800050de <free_desc>
-     if(flag & VRING_DESC_F_NEXT)
--    80005728:	8885                	andi	s1,s1,1
--    8000572a:	f0fd                	bnez	s1,80005710 <virtio_disk_rw+0x1d0>
-+    800054f6:	8885                	and	s1,s1,1
-+    800054f8:	f0fd                	bnez	s1,800054de <virtio_disk_rw+0x1d4>
-   free_chain(idx[0]);
- 
-   release(&disk.vdisk_lock);
--    8000572c:	0001e517          	auipc	a0,0x1e
--    80005730:	dec50513          	addi	a0,a0,-532 # 80023518 <disk+0x128>
--    80005734:	d58fb0ef          	jal	80000c8c <release>
--}
--    80005738:	70a6                	ld	ra,104(sp)
--    8000573a:	7406                	ld	s0,96(sp)
--    8000573c:	64e6                	ld	s1,88(sp)
--    8000573e:	6946                	ld	s2,80(sp)
--    80005740:	69a6                	ld	s3,72(sp)
--    80005742:	6a06                	ld	s4,64(sp)
--    80005744:	7ae2                	ld	s5,56(sp)
--    80005746:	7b42                	ld	s6,48(sp)
--    80005748:	7ba2                	ld	s7,40(sp)
--    8000574a:	7c02                	ld	s8,32(sp)
--    8000574c:	6ce2                	ld	s9,24(sp)
--    8000574e:	6165                	addi	sp,sp,112
--    80005750:	8082                	ret
--
--0000000080005752 <virtio_disk_intr>:
-+    800054fa:	0001b517          	auipc	a0,0x1b
-+    800054fe:	72e50513          	add	a0,a0,1838 # 80020c28 <disk+0x128>
-+    80005502:	f36fb0ef          	jal	80000c38 <release>
-+}
-+    80005506:	70a6                	ld	ra,104(sp)
-+    80005508:	7406                	ld	s0,96(sp)
-+    8000550a:	64e6                	ld	s1,88(sp)
-+    8000550c:	6946                	ld	s2,80(sp)
-+    8000550e:	69a6                	ld	s3,72(sp)
-+    80005510:	6a06                	ld	s4,64(sp)
-+    80005512:	7ae2                	ld	s5,56(sp)
-+    80005514:	7b42                	ld	s6,48(sp)
-+    80005516:	7ba2                	ld	s7,40(sp)
-+    80005518:	7c02                	ld	s8,32(sp)
-+    8000551a:	6ce2                	ld	s9,24(sp)
-+    8000551c:	6d42                	ld	s10,16(sp)
-+    8000551e:	6165                	add	sp,sp,112
-+    80005520:	8082                	ret
-+
-+0000000080005522 <virtio_disk_intr>:
- 
- void
- virtio_disk_intr()
- {
--    80005752:	1101                	addi	sp,sp,-32
--    80005754:	ec06                	sd	ra,24(sp)
--    80005756:	e822                	sd	s0,16(sp)
--    80005758:	e426                	sd	s1,8(sp)
--    8000575a:	1000                	addi	s0,sp,32
-+    80005522:	1101                	add	sp,sp,-32
-+    80005524:	ec06                	sd	ra,24(sp)
-+    80005526:	e822                	sd	s0,16(sp)
-+    80005528:	e426                	sd	s1,8(sp)
-+    8000552a:	1000                	add	s0,sp,32
-   acquire(&disk.vdisk_lock);
--    8000575c:	0001e497          	auipc	s1,0x1e
--    80005760:	c9448493          	addi	s1,s1,-876 # 800233f0 <disk>
--    80005764:	0001e517          	auipc	a0,0x1e
--    80005768:	db450513          	addi	a0,a0,-588 # 80023518 <disk+0x128>
--    8000576c:	c88fb0ef          	jal	80000bf4 <acquire>
-+    8000552c:	0001b497          	auipc	s1,0x1b
-+    80005530:	5d448493          	add	s1,s1,1492 # 80020b00 <disk>
-+    80005534:	0001b517          	auipc	a0,0x1b
-+    80005538:	6f450513          	add	a0,a0,1780 # 80020c28 <disk+0x128>
-+    8000553c:	e64fb0ef          	jal	80000ba0 <acquire>
-   /* we've seen this interrupt, which the following line does. */
-   /* this may race with the device writing new entries to */
-   /* the "used" ring, in which case we may process the new */
-   /* completion entries in this interrupt, and have nothing to do */
-   /* in the next interrupt, which is harmless. */
-   *R(VIRTIO_MMIO_INTERRUPT_ACK) = *R(VIRTIO_MMIO_INTERRUPT_STATUS) & 0x3;
--    80005770:	100017b7          	lui	a5,0x10001
--    80005774:	53b8                	lw	a4,96(a5)
--    80005776:	8b0d                	andi	a4,a4,3
--    80005778:	100017b7          	lui	a5,0x10001
--    8000577c:	d3f8                	sw	a4,100(a5)
-+    80005540:	10001737          	lui	a4,0x10001
-+    80005544:	533c                	lw	a5,96(a4)
-+    80005546:	8b8d                	and	a5,a5,3
-+    80005548:	d37c                	sw	a5,100(a4)
- 
-   __sync_synchronize();
--    8000577e:	0ff0000f          	fence
-+    8000554a:	0ff0000f          	fence
- 
-   /* the device increments disk.used->idx when it */
-   /* adds an entry to the used ring. */
- 
-   while(disk.used_idx != disk.used->idx){
--    80005782:	689c                	ld	a5,16(s1)
--    80005784:	0204d703          	lhu	a4,32(s1)
--    80005788:	0027d783          	lhu	a5,2(a5) # 10001002 <_entry-0x6fffeffe>
--    8000578c:	04f70663          	beq	a4,a5,800057d8 <virtio_disk_intr+0x86>
-+    8000554e:	689c                	ld	a5,16(s1)
-+    80005550:	0204d703          	lhu	a4,32(s1)
-+    80005554:	0027d783          	lhu	a5,2(a5)
-+    80005558:	04f70663          	beq	a4,a5,800055a4 <virtio_disk_intr+0x82>
-     __sync_synchronize();
--    80005790:	0ff0000f          	fence
-+    8000555c:	0ff0000f          	fence
-     int id = disk.used->ring[disk.used_idx % NUM].id;
--    80005794:	6898                	ld	a4,16(s1)
--    80005796:	0204d783          	lhu	a5,32(s1)
--    8000579a:	8b9d                	andi	a5,a5,7
--    8000579c:	078e                	slli	a5,a5,0x3
--    8000579e:	97ba                	add	a5,a5,a4
--    800057a0:	43dc                	lw	a5,4(a5)
-+    80005560:	6898                	ld	a4,16(s1)
-+    80005562:	0204d783          	lhu	a5,32(s1)
-+    80005566:	8b9d                	and	a5,a5,7
-+    80005568:	078e                	sll	a5,a5,0x3
-+    8000556a:	97ba                	add	a5,a5,a4
-+    8000556c:	43dc                	lw	a5,4(a5)
- 
-     if(disk.info[id].status != 0)
--    800057a2:	00278713          	addi	a4,a5,2
--    800057a6:	0712                	slli	a4,a4,0x4
--    800057a8:	9726                	add	a4,a4,s1
--    800057aa:	01074703          	lbu	a4,16(a4)
--    800057ae:	e321                	bnez	a4,800057ee <virtio_disk_intr+0x9c>
-+    8000556e:	00278713          	add	a4,a5,2
-+    80005572:	0712                	sll	a4,a4,0x4
-+    80005574:	9726                	add	a4,a4,s1
-+    80005576:	01074703          	lbu	a4,16(a4) # 10001010 <_entry-0x6fffeff0>
-+    8000557a:	e321                	bnez	a4,800055ba <virtio_disk_intr+0x98>
-       panic("virtio_disk_intr status");
- 
-     struct buf *b = disk.info[id].b;
--    800057b0:	0789                	addi	a5,a5,2
--    800057b2:	0792                	slli	a5,a5,0x4
--    800057b4:	97a6                	add	a5,a5,s1
--    800057b6:	6788                	ld	a0,8(a5)
-+    8000557c:	0789                	add	a5,a5,2
-+    8000557e:	0792                	sll	a5,a5,0x4
-+    80005580:	97a6                	add	a5,a5,s1
-+    80005582:	6788                	ld	a0,8(a5)
-     b->disk = 0;   /* disk is done with buf */
--    800057b8:	00052223          	sw	zero,4(a0)
-+    80005584:	00052223          	sw	zero,4(a0)
-     wakeup(b);
--    800057bc:	f3efc0ef          	jal	80001efa <wakeup>
-+    80005588:	8c1fc0ef          	jal	80001e48 <wakeup>
- 
-     disk.used_idx += 1;
--    800057c0:	0204d783          	lhu	a5,32(s1)
--    800057c4:	2785                	addiw	a5,a5,1
--    800057c6:	17c2                	slli	a5,a5,0x30
--    800057c8:	93c1                	srli	a5,a5,0x30
--    800057ca:	02f49023          	sh	a5,32(s1)
-+    8000558c:	0204d783          	lhu	a5,32(s1)
-+    80005590:	2785                	addw	a5,a5,1
-+    80005592:	17c2                	sll	a5,a5,0x30
-+    80005594:	93c1                	srl	a5,a5,0x30
-+    80005596:	02f49023          	sh	a5,32(s1)
-   while(disk.used_idx != disk.used->idx){
--    800057ce:	6898                	ld	a4,16(s1)
--    800057d0:	00275703          	lhu	a4,2(a4)
--    800057d4:	faf71ee3          	bne	a4,a5,80005790 <virtio_disk_intr+0x3e>
-+    8000559a:	6898                	ld	a4,16(s1)
-+    8000559c:	00275703          	lhu	a4,2(a4)
-+    800055a0:	faf71ee3          	bne	a4,a5,8000555c <virtio_disk_intr+0x3a>
-   }
- 
-   release(&disk.vdisk_lock);
--    800057d8:	0001e517          	auipc	a0,0x1e
--    800057dc:	d4050513          	addi	a0,a0,-704 # 80023518 <disk+0x128>
--    800057e0:	cacfb0ef          	jal	80000c8c <release>
--}
--    800057e4:	60e2                	ld	ra,24(sp)
--    800057e6:	6442                	ld	s0,16(sp)
--    800057e8:	64a2                	ld	s1,8(sp)
--    800057ea:	6105                	addi	sp,sp,32
--    800057ec:	8082                	ret
-+    800055a4:	0001b517          	auipc	a0,0x1b
-+    800055a8:	68450513          	add	a0,a0,1668 # 80020c28 <disk+0x128>
-+    800055ac:	e8cfb0ef          	jal	80000c38 <release>
-+}
-+    800055b0:	60e2                	ld	ra,24(sp)
-+    800055b2:	6442                	ld	s0,16(sp)
-+    800055b4:	64a2                	ld	s1,8(sp)
-+    800055b6:	6105                	add	sp,sp,32
-+    800055b8:	8082                	ret
-       panic("virtio_disk_intr status");
--    800057ee:	00002517          	auipc	a0,0x2
--    800057f2:	f6a50513          	addi	a0,a0,-150 # 80007758 <etext+0x758>
--    800057f6:	f9ffa0ef          	jal	80000794 <panic>
-+    800055ba:	00002517          	auipc	a0,0x2
-+    800055be:	2ae50513          	add	a0,a0,686 # 80007868 <syscalls+0x3d8>
-+    800055c2:	99cfb0ef          	jal	8000075e <panic>
- 	...
- 
- 0000000080006000 <_trampoline>:
-     80006000:	14051073          	csrw	sscratch,a0
-     80006004:	02000537          	lui	a0,0x2000
--    80006008:	357d                	addiw	a0,a0,-1 # 1ffffff <_entry-0x7e000001>
--    8000600a:	0536                	slli	a0,a0,0xd
-+    80006008:	357d                	addw	a0,a0,-1 # 1ffffff <_entry-0x7e000001>
-+    8000600a:	0536                	sll	a0,a0,0xd
-     8000600c:	02153423          	sd	ra,40(a0)
-     80006010:	02253823          	sd	sp,48(a0)
-     80006014:	02353c23          	sd	gp,56(a0)
-@@ -12539,8 +12271,8 @@ virtio_disk_intr()
-     800060a0:	18051073          	csrw	satp,a0
-     800060a4:	12000073          	sfence.vma
-     800060a8:	02000537          	lui	a0,0x2000
--    800060ac:	357d                	addiw	a0,a0,-1 # 1ffffff <_entry-0x7e000001>
--    800060ae:	0536                	slli	a0,a0,0xd
-+    800060ac:	357d                	addw	a0,a0,-1 # 1ffffff <_entry-0x7e000001>
-+    800060ae:	0536                	sll	a0,a0,0xd
-     800060b0:	02853083          	ld	ra,40(a0)
-     800060b4:	03053103          	ld	sp,48(a0)
-     800060b8:	03853183          	ld	gp,56(a0)
-diff --git a/Assignments/Assignment-6/xv6/kernel/kernel.sym b/Assignments/Assignment-6/xv6/kernel/kernel.sym
-index 73644f6..a61d5c6 100644
---- a/Assignments/Assignment-6/xv6/kernel/kernel.sym
-+++ b/Assignments/Assignment-6/xv6/kernel/kernel.sym
-@@ -1,8 +1,7 @@
- 0000000080000000 .text
- 0000000080007000 .rodata
--0000000080007880 .eh_frame
--000000008000a170 .data
--000000008000a1c0 .bss
-+0000000080007880 .data
-+00000000800078d0 .bss
- 0000000000000000 .riscv.attributes
- 0000000000000000 .comment
- 0000000000000000 .debug_info
-@@ -12,251 +11,252 @@
- 0000000000000000 .debug_ranges
- 0000000000000000 .debug_line
- 0000000000000000 .debug_str
-+0000000000000000 .debug_frame
- 0000000000000000 entry.o
- 000000008000001a spin
- 0000000000000000 start.c
- 0000000000000000 console.c
- 0000000000000000 printf.c
--0000000080000430 printint
--0000000080007770 digits
--00000000800122a8 pr
-+000000008000040c printint
-+0000000080007038 digits
-+000000008000f9b8 pr
- 0000000000000000 uart.c
- 0000000000000000 kalloc.c
- 0000000000000000 spinlock.c
- 0000000000000000 string.c
- 0000000000000000 main.c
--000000008000a1d8 started
-+00000000800078e8 started
- 0000000000000000 vm.c
- 0000000000000000 proc.c
--000000008000a170 first.1
--0000000080001a52 freeproc
--0000000080001aa2 allocproc
--0000000080007788 states.0
-+0000000080007880 first.1
-+00000000800019a2 freeproc
-+00000000800019f2 allocproc
-+0000000080007300 states.0
- 0000000000000000 swtch.o
- 0000000000000000 trap.c
- 0000000000000000 syscall.c
--00000000800026aa argraw
--00000000800077d0 syscalls
-+00000000800025f4 argraw
-+0000000080007490 syscalls
- 0000000000000000 sysproc.c
- 0000000000000000 bio.c
- 0000000000000000 fs.c
--0000000080002c80 bfree
--0000000080002cec balloc
--0000000080002e0c bmap
--0000000080002ee0 iget
--00000000800036d0 namex
-+0000000080002bc6 bfree
-+0000000080002c32 balloc
-+0000000080002d40 bmap
-+0000000080002e0e iget
-+00000000800035ca namex
- 0000000000000000 log.c
--00000000800038cc write_head
--000000008000392a install_trans
-+00000000800037c6 write_head
-+0000000080003824 install_trans
- 0000000000000000 sleeplock.c
- 0000000000000000 file.c
- 0000000000000000 pipe.c
- 0000000000000000 exec.c
- 0000000000000000 sysfile.c
--00000000800047e0 argfd
--0000000080004838 fdalloc
--0000000080004876 create
-+000000008000463c argfd
-+0000000080004694 fdalloc
-+00000000800046d2 create
- 0000000000000000 kernelvec.o
- 0000000000000000 plic.c
- 0000000000000000 virtio_disk.c
--00000000800052d2 free_desc
--00000000800233f0 disk
--0000000080001014 mappages
--00000000800016ae copyinstr
--0000000080000136 consoleread
--0000000080000e06 safestrcpy
--0000000080004a8c sys_close
--0000000080001e82 yield
--00000000800222f0 log
--0000000080012300 kmem
--00000000800007fc uartinit
--000000008000220a either_copyout
-+00000000800050de free_desc
-+0000000080020b00 disk
-+0000000080000fc6 mappages
-+0000000080001626 copyinstr
-+000000008000012c consoleread
-+0000000080000db8 safestrcpy
-+00000000800048de sys_close
-+0000000080001dd0 yield
-+000000008001fa00 log
-+000000008000fa10 kmem
-+00000000800007c6 uartinit
-+0000000080002158 either_copyout
- 000000008000001c timerinit
--0000000080012750 proc
--0000000080003f90 fileread
--00000000800004c2 printf
--00000000800028d0 sys_sbrk
-+000000008000fe60 proc
-+0000000080003e6a fileread
-+000000008000049e printf
-+000000008000281a sys_sbrk
- 0000000080006000 trampoline
--000000008000a1c0 panicked
--000000008000528c plic_claim
--00000000800122e0 uart_tx_buf
--000000008000523e plicinit
--00000000800052ac plic_complete
--0000000080001dc8 sched
--0000000080000d24 memmove
--00000000800027fc syscall
--00000000800018b4 cpuid
--0000000080003510 writei
--000000008000289a sys_fork
--0000000080018168 bcache
--0000000080004ee0 sys_mkdir
--00000000800011ba uvmunmap
--000000008000361e namecmp
--0000000080005258 plicinithart
--0000000080001f64 reparent
--00000000800027cc argstr
--00000000800012fa uvmdealloc
--0000000080003e2a filedup
--000000008000389a namei
--0000000080002a02 binit
--0000000080001528 uvmclear
--00000000800049fc sys_read
--0000000080002f8c fsinit
--0000000080000d80 memcpy
--00000000800010c4 kvmmap
--000000008000089a uartstart
--0000000080000a42 kfree
--00000000800018c4 mycpu
--0000000080003342 iput
--00000000800010ec kvmmake
--00000000800024ce devintr
--000000008000a174 nextpid
--0000000080003da8 fileinit
-+00000000800078d0 panicked
-+0000000080005098 plic_claim
-+000000008000f9f0 uart_tx_buf
-+000000008000504e plicinit
-+00000000800050b8 plic_complete
-+0000000080001d16 sched
-+0000000080000cd0 memmove
-+0000000080002746 syscall
-+0000000080001804 cpuid
-+0000000080003416 writei
-+00000000800027e4 sys_fork
-+0000000080015878 bcache
-+0000000080004d0c sys_mkdir
-+000000008000116c uvmunmap
-+0000000080003518 namecmp
-+0000000080005064 plicinithart
-+0000000080001eb2 reparent
-+0000000080002716 argstr
-+000000008000129c uvmdealloc
-+0000000080003d1e filedup
-+0000000080003794 namei
-+0000000080002948 binit
-+00000000800014be uvmclear
-+000000008000484e sys_read
-+0000000080002eba fsinit
-+0000000080000d2c memcpy
-+0000000080001076 kvmmap
-+0000000080000856 uartstart
-+00000000800009ee kfree
-+0000000080001814 mycpu
-+0000000080003260 iput
-+000000008000109e kvmmake
-+000000008000241c devintr
-+0000000080007884 nextpid
-+0000000080003c9c fileinit
- 000000008000609c userret
--0000000080000b74 initlock
--0000000080001552 copyout
--0000000080001eae sleep
--00000000800051e0 kernelvec
--000000008000129c uvmfirst
--00000000800033ea stati
--0000000080012338 wait_lock
--00000000800029a6 sys_kill
--0000000080004242 pipeclose
--0000000080004ace sys_fstat
-+0000000080000b20 initlock
-+00000000800014e8 copyout
-+0000000080001dfc sleep
-+0000000080004ff0 kernelvec
-+000000008000123e uvmfirst
-+0000000080003308 stati
-+000000008000fa48 wait_lock
-+00000000800028ec sys_kill
-+00000000800040ee pipeclose
-+0000000080004920 sys_fstat
- 00000000800000d0 consolewrite
--0000000080003ac0 end_op
--0000000080000aa8 freerange
--0000000080000f14 kvminithart
--000000008000133e uvmalloc
--0000000080001476 uvmcopy
--000000008000a1e8 initproc
--0000000080001a0c proc_freepagetable
--000000008000326e iunlock
--0000000080001988 proc_pagetable
--000000008000a200 stack0
--0000000080002906 sys_sleep
--0000000080004b08 sys_link
--0000000080003dcc filealloc
--0000000080001efa wakeup
--0000000080005348 virtio_disk_init
--00000000800018e0 myproc
--000000008000318a idup
--000000008000a1c8 uart_tx_r
--0000000080000f3c walk
--0000000080004d8c sys_open
--000000008000a1d0 uart_tx_w
--0000000080003414 readi
--0000000080000272 consoleintr
--0000000080000240 consputc
--000000008000205c kill
--000000008000194a allocpid
--0000000080003050 ialloc
--0000000080000a06 uartintr
--0000000080001628 copyin
--00000000800023ac trapinit
--0000000080001444 uvmfree
--0000000080023530 end
--00000000800032ae itrunc
--000000008000404e filewrite
--0000000080002794 argint
--000000008000446e exec
-+00000000800039ba end_op
-+0000000080000a54 freerange
-+0000000080000ec6 kvminithart
-+00000000800012e0 uvmalloc
-+000000008000140c uvmcopy
-+00000000800078f8 initproc
-+000000008000195c proc_freepagetable
-+000000008000318c iunlock
-+00000000800018d8 proc_pagetable
-+0000000080007910 stack0
-+0000000080002850 sys_sleep
-+000000008000495a sys_link
-+0000000080003cc0 filealloc
-+0000000080001e48 wakeup
-+0000000080005154 virtio_disk_init
-+0000000080001830 myproc
-+00000000800030ac idup
-+00000000800078d8 uart_tx_r
-+0000000080000eee walk
-+0000000080004bc6 sys_open
-+00000000800078e0 uart_tx_w
-+0000000080003332 readi
-+0000000080000256 consoleintr
-+0000000080000224 consputc
-+0000000080001faa kill
-+000000008000189a allocpid
-+0000000080002f7e ialloc
-+00000000800009b2 uartintr
-+00000000800015a0 copyin
-+00000000800022fa trapinit
-+00000000800013da uvmfree
-+0000000080020c40 end
-+00000000800031cc itrunc
-+0000000080003f18 filewrite
-+00000000800026de argint
-+0000000080004302 exec
- 0000000080007000 etext
--0000000080004a44 sys_write
--0000000080000c8c release
--0000000080002754 fetchstr
--0000000080002110 wait
--00000000800023e8 usertrapret
--0000000080001d14 scheduler
-+0000000080004896 sys_write
-+0000000080000c38 release
-+000000008000269e fetchstr
-+000000008000205e wait
-+0000000080002336 usertrapret
-+0000000080001c62 scheduler
- 0000000080006000 _trampoline
--0000000080003634 dirlookup
--0000000080003a56 begin_op
--0000000080003e70 fileclose
--0000000080002542 usertrap
--0000000080000d94 strncmp
--0000000080018150 tickslock
--000000008000429a pipewrite
--0000000080000dca strncpy
--0000000080022438 ftable
--0000000080005752 virtio_disk_intr
--00000000800049b0 sys_dup
--0000000080000794 panic
--0000000080001910 forkret
--0000000080000af0 kinit
--0000000080000cea memcmp
--0000000080002254 either_copyin
--0000000080001c06 fork
--000000008000247a clockintr
--0000000080012350 cpus
--0000000080003d26 releasesleep
-+000000008000352e dirlookup
-+0000000080003950 begin_op
-+0000000080003d64 fileclose
-+000000008000248c usertrap
-+0000000080000d40 strncmp
-+0000000080015860 tickslock
-+0000000080004146 pipewrite
-+0000000080000d7c strncpy
-+000000008001fb48 ftable
-+0000000080005522 virtio_disk_intr
-+0000000080004808 sys_dup
-+000000008000075e panic
-+0000000080001860 forkret
-+0000000080000a9c kinit
-+0000000080000c96 memcmp
-+00000000800021a2 either_copyin
-+0000000080001b56 fork
-+00000000800023c8 clockintr
-+000000008000fa60 cpus
-+0000000080003c1a releasesleep
- 0000000080000000 _entry
--0000000080000b8a holding
--0000000080020828 sb
--0000000080000bf4 acquire
--00000000800038b4 nameiparent
--000000008000a180 initcode
--00000000800023d0 trapinithart
--000000008000310c iupdate
--0000000080000cc8 memset
--0000000080000e62 main
--00000000800020c2 setkilled
--0000000080003bda log_write
--0000000080003ce0 acquiresleep
--0000000080004c06 sys_unlink
-+0000000080000b36 holding
-+000000008001df38 sb
-+0000000080000ba0 acquire
-+00000000800037ae nameiparent
-+0000000080007890 initcode
-+000000008000231e trapinithart
-+000000008000302e iupdate
-+0000000080000c74 memset
-+0000000080000e14 main
-+0000000080002010 setkilled
-+0000000080003ace log_write
-+0000000080003bd4 acquiresleep
-+0000000080004a50 sys_unlink
- 0000000080006000 uservec
--000000008000119e kvminit
--0000000080002c4c bunpin
--00000000800027b0 argaddr
--00000000800029c8 sys_uptime
--00000000800009e0 uartgetc
--00000000800007ce printfinit
--00000000800122c8 uart_tx_lock
--0000000080001276 uvmcreate
--0000000080001bb6 growproc
--0000000080003d5e holdingsleep
--00000000800020e6 killed
--0000000080001b48 userinit
--0000000080002a88 bread
--000000008000437e piperead
--000000008000a1f0 ticks
--00000000800003ec consoleinit
--0000000080000fd6 walkaddr
--000000008000229e procdump
--000000008000093a uartputc
--0000000080002b90 brelse
--00000000800031c0 ilock
--0000000080005008 sys_exec
--0000000080002342 swtch
--00000000800033ca iunlockput
--0000000080000bb4 push_off
--0000000080004454 flags2perm
--0000000080000c38 pop_off
--0000000080002b5e bwrite
--0000000080000854 uartputc_sync
--0000000080001fba exit
--00000000800013e4 freewalk
--00000000800028ae sys_wait
--0000000080002860 sys_exit
--0000000080003800 dirlink
--0000000080003caa initsleeplock
-+0000000080001150 kvminit
-+0000000080002b92 bunpin
-+00000000800026fa argaddr
-+000000008000290e sys_uptime
-+000000008000098e uartgetc
-+0000000080000798 printfinit
-+000000008000f9d8 uart_tx_lock
-+0000000080001218 uvmcreate
-+0000000080001b06 growproc
-+0000000080003c52 holdingsleep
-+0000000080002034 killed
-+0000000080001a98 userinit
-+00000000800029ce bread
-+000000008000421a piperead
-+0000000080007900 ticks
-+00000000800003c8 consoleinit
-+0000000080000f88 walkaddr
-+00000000800021ec procdump
-+00000000800008e8 uartputc
-+0000000080002ad6 brelse
-+00000000800030e2 ilock
-+0000000080004e30 sys_exec
-+0000000080002290 swtch
-+00000000800032e8 iunlockput
-+0000000080000b60 push_off
-+00000000800042e8 flags2perm
-+0000000080000be4 pop_off
-+0000000080002aa4 bwrite
-+0000000080000812 uartputc_sync
-+0000000080001f08 exit
-+000000008000137a freewalk
-+00000000800027f8 sys_wait
-+00000000800027aa sys_exit
-+00000000800036fa dirlink
-+0000000080003b9e initsleeplock
- 0000000080000060 start
--000000008000a1e0 kernel_pagetable
--0000000080005540 virtio_disk_rw
--0000000080000e38 strlen
--00000000800050fc sys_pipe
--0000000080002ff8 iinit
--00000000800039d2 initlog
--0000000080012200 cons
--0000000080000b24 kalloc
--000000008000270a fetchaddr
--0000000080022398 devsw
--0000000080002884 sys_getpid
--000000008000417a pipealloc
--0000000080004f88 sys_chdir
--0000000080001766 proc_mapstacks
--000000008000261a kerneltrap
--0000000080002c18 bpin
--00000000800017fe procinit
--0000000080020848 itable
--0000000080004f28 sys_mknod
--0000000080003f32 filestat
--0000000080012320 pid_lock
-+00000000800078f0 kernel_pagetable
-+000000008000530a virtio_disk_rw
-+0000000080000dea strlen
-+0000000080004f14 sys_pipe
-+0000000080002f26 iinit
-+00000000800038cc initlog
-+000000008000f910 cons
-+0000000080000ad0 kalloc
-+0000000080002654 fetchaddr
-+000000008001faa8 devsw
-+00000000800027ce sys_getpid
-+000000008000402c pipealloc
-+0000000080004db4 sys_chdir
-+00000000800016d2 proc_mapstacks
-+0000000080002564 kerneltrap
-+0000000080002b5e bpin
-+000000008000175c procinit
-+000000008001df58 itable
-+0000000080004d54 sys_mknod
-+0000000080003e0c filestat
-+000000008000fa30 pid_lock
-diff --git a/Assignments/Assignment-6/xv6/kernel/kernelvec.o b/Assignments/Assignment-6/xv6/kernel/kernelvec.o
-index 0450d2e..bac4d09 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/kernelvec.o and b/Assignments/Assignment-6/xv6/kernel/kernelvec.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/log.d b/Assignments/Assignment-6/xv6/kernel/log.d
-index 5179ebc..38eddde 100644
---- a/Assignments/Assignment-6/xv6/kernel/log.d
-+++ b/Assignments/Assignment-6/xv6/kernel/log.d
-@@ -1,4 +1,3 @@
--kernel/log.o: kernel/log.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/riscv.h kernel/defs.h kernel/param.h \
-- kernel/spinlock.h kernel/sleeplock.h kernel/fs.h kernel/buf.h
-+kernel/log.o: kernel/log.c kernel/types.h kernel/riscv.h kernel/defs.h \
-+ kernel/param.h kernel/spinlock.h kernel/sleeplock.h kernel/fs.h \
-+ kernel/buf.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/log.o b/Assignments/Assignment-6/xv6/kernel/log.o
-index f358cde..af2373f 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/log.o and b/Assignments/Assignment-6/xv6/kernel/log.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/main.d b/Assignments/Assignment-6/xv6/kernel/main.d
-index fa58bb7..07e22ff 100644
---- a/Assignments/Assignment-6/xv6/kernel/main.d
-+++ b/Assignments/Assignment-6/xv6/kernel/main.d
-@@ -1,4 +1,2 @@
--kernel/main.o: kernel/main.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/param.h kernel/memlayout.h kernel/riscv.h \
-- kernel/defs.h
-+kernel/main.o: kernel/main.c kernel/types.h kernel/param.h \
-+ kernel/memlayout.h kernel/riscv.h kernel/defs.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/main.o b/Assignments/Assignment-6/xv6/kernel/main.o
-index aeb6fd9..a67c51e 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/main.o and b/Assignments/Assignment-6/xv6/kernel/main.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/pipe.d b/Assignments/Assignment-6/xv6/kernel/pipe.d
-index 72dbd9e..80adcde 100644
---- a/Assignments/Assignment-6/xv6/kernel/pipe.d
-+++ b/Assignments/Assignment-6/xv6/kernel/pipe.d
-@@ -1,5 +1,3 @@
--kernel/pipe.o: kernel/pipe.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/riscv.h kernel/defs.h kernel/param.h \
-- kernel/spinlock.h kernel/proc.h kernel/fs.h kernel/sleeplock.h \
-- kernel/file.h
-+kernel/pipe.o: kernel/pipe.c kernel/types.h kernel/riscv.h kernel/defs.h \
-+ kernel/param.h kernel/spinlock.h kernel/proc.h kernel/fs.h \
-+ kernel/sleeplock.h kernel/file.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/pipe.o b/Assignments/Assignment-6/xv6/kernel/pipe.o
-index eb86a18..b1f17fa 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/pipe.o and b/Assignments/Assignment-6/xv6/kernel/pipe.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/plic.d b/Assignments/Assignment-6/xv6/kernel/plic.d
-index 6a8aa9b..6063823 100644
---- a/Assignments/Assignment-6/xv6/kernel/plic.d
-+++ b/Assignments/Assignment-6/xv6/kernel/plic.d
-@@ -1,4 +1,2 @@
--kernel/plic.o: kernel/plic.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/param.h kernel/memlayout.h kernel/riscv.h \
-- kernel/defs.h
-+kernel/plic.o: kernel/plic.c kernel/types.h kernel/param.h \
-+ kernel/memlayout.h kernel/riscv.h kernel/defs.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/plic.o b/Assignments/Assignment-6/xv6/kernel/plic.o
-index f14c434..a0c2883 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/plic.o and b/Assignments/Assignment-6/xv6/kernel/plic.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/printf.d b/Assignments/Assignment-6/xv6/kernel/printf.d
-index 89a703c..8e2a19c 100644
---- a/Assignments/Assignment-6/xv6/kernel/printf.d
-+++ b/Assignments/Assignment-6/xv6/kernel/printf.d
-@@ -1,6 +1,5 @@
- kernel/printf.o: kernel/printf.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- /student/cmpt332/xv6-2024/riscv/lib/gcc/riscv64-unknown-linux-gnu/13.2.0/include/stdarg.h \
-+ /usr/local/riscv/lib/gcc/riscv64-unknown-elf/12.2.0/include/stdarg.h \
-  kernel/types.h kernel/param.h kernel/spinlock.h kernel/sleeplock.h \
-  kernel/fs.h kernel/file.h kernel/memlayout.h kernel/riscv.h \
-  kernel/defs.h kernel/proc.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/printf.o b/Assignments/Assignment-6/xv6/kernel/printf.o
-index 9a34466..da86f9c 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/printf.o and b/Assignments/Assignment-6/xv6/kernel/printf.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/proc.d b/Assignments/Assignment-6/xv6/kernel/proc.d
-index d479792..ee2200e 100644
---- a/Assignments/Assignment-6/xv6/kernel/proc.d
-+++ b/Assignments/Assignment-6/xv6/kernel/proc.d
-@@ -1,4 +1,3 @@
--kernel/proc.o: kernel/proc.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/param.h kernel/memlayout.h kernel/riscv.h \
-- kernel/spinlock.h kernel/proc.h kernel/defs.h
-+kernel/proc.o: kernel/proc.c kernel/types.h kernel/param.h \
-+ kernel/memlayout.h kernel/riscv.h kernel/spinlock.h kernel/proc.h \
-+ kernel/defs.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/proc.o b/Assignments/Assignment-6/xv6/kernel/proc.o
-index 368556d..770e7f8 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/proc.o and b/Assignments/Assignment-6/xv6/kernel/proc.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/sleeplock.d b/Assignments/Assignment-6/xv6/kernel/sleeplock.d
-index 387049e..437cb5d 100644
---- a/Assignments/Assignment-6/xv6/kernel/sleeplock.d
-+++ b/Assignments/Assignment-6/xv6/kernel/sleeplock.d
-@@ -1,4 +1,3 @@
--kernel/sleeplock.o: kernel/sleeplock.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/riscv.h kernel/defs.h kernel/param.h \
-- kernel/memlayout.h kernel/spinlock.h kernel/proc.h kernel/sleeplock.h
-+kernel/sleeplock.o: kernel/sleeplock.c kernel/types.h kernel/riscv.h \
-+ kernel/defs.h kernel/param.h kernel/memlayout.h kernel/spinlock.h \
-+ kernel/proc.h kernel/sleeplock.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/sleeplock.o b/Assignments/Assignment-6/xv6/kernel/sleeplock.o
-index a87caec..f6a9ff5 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/sleeplock.o and b/Assignments/Assignment-6/xv6/kernel/sleeplock.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/spinlock.d b/Assignments/Assignment-6/xv6/kernel/spinlock.d
-index 7100466..65193d6 100644
---- a/Assignments/Assignment-6/xv6/kernel/spinlock.d
-+++ b/Assignments/Assignment-6/xv6/kernel/spinlock.d
-@@ -1,4 +1,3 @@
--kernel/spinlock.o: kernel/spinlock.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/param.h kernel/memlayout.h kernel/spinlock.h \
-- kernel/riscv.h kernel/proc.h kernel/defs.h
-+kernel/spinlock.o: kernel/spinlock.c kernel/types.h kernel/param.h \
-+ kernel/memlayout.h kernel/spinlock.h kernel/riscv.h kernel/proc.h \
-+ kernel/defs.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/spinlock.o b/Assignments/Assignment-6/xv6/kernel/spinlock.o
-index 9d65863..a2b75f6 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/spinlock.o and b/Assignments/Assignment-6/xv6/kernel/spinlock.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/start.d b/Assignments/Assignment-6/xv6/kernel/start.d
-index edd17ac..203c529 100644
---- a/Assignments/Assignment-6/xv6/kernel/start.d
-+++ b/Assignments/Assignment-6/xv6/kernel/start.d
-@@ -1,4 +1,2 @@
--kernel/start.o: kernel/start.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/param.h kernel/memlayout.h kernel/riscv.h \
-- kernel/defs.h
-+kernel/start.o: kernel/start.c kernel/types.h kernel/param.h \
-+ kernel/memlayout.h kernel/riscv.h kernel/defs.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/start.o b/Assignments/Assignment-6/xv6/kernel/start.o
-index 46bbef1..4051b8f 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/start.o and b/Assignments/Assignment-6/xv6/kernel/start.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/string.d b/Assignments/Assignment-6/xv6/kernel/string.d
-index e8cc0a0..f119f61 100644
---- a/Assignments/Assignment-6/xv6/kernel/string.d
-+++ b/Assignments/Assignment-6/xv6/kernel/string.d
-@@ -1,3 +1 @@
--kernel/string.o: kernel/string.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h
-+kernel/string.o: kernel/string.c kernel/types.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/string.o b/Assignments/Assignment-6/xv6/kernel/string.o
-index 5116b5c..2df8a60 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/string.o and b/Assignments/Assignment-6/xv6/kernel/string.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/swtch.o b/Assignments/Assignment-6/xv6/kernel/swtch.o
-index ad0fb0b..a982359 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/swtch.o and b/Assignments/Assignment-6/xv6/kernel/swtch.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/syscall.d b/Assignments/Assignment-6/xv6/kernel/syscall.d
-index e7073ae..9c76275 100644
---- a/Assignments/Assignment-6/xv6/kernel/syscall.d
-+++ b/Assignments/Assignment-6/xv6/kernel/syscall.d
-@@ -1,4 +1,3 @@
--kernel/syscall.o: kernel/syscall.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/param.h kernel/memlayout.h kernel/riscv.h \
-- kernel/spinlock.h kernel/proc.h kernel/syscall.h kernel/defs.h
-+kernel/syscall.o: kernel/syscall.c kernel/types.h kernel/param.h \
-+ kernel/memlayout.h kernel/riscv.h kernel/spinlock.h kernel/proc.h \
-+ kernel/syscall.h kernel/defs.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/syscall.o b/Assignments/Assignment-6/xv6/kernel/syscall.o
-index c0443c1..25a7bf3 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/syscall.o and b/Assignments/Assignment-6/xv6/kernel/syscall.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/sysfile.d b/Assignments/Assignment-6/xv6/kernel/sysfile.d
-index 2f63c62..382ec06 100644
---- a/Assignments/Assignment-6/xv6/kernel/sysfile.d
-+++ b/Assignments/Assignment-6/xv6/kernel/sysfile.d
-@@ -1,5 +1,4 @@
--kernel/sysfile.o: kernel/sysfile.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/riscv.h kernel/defs.h kernel/param.h kernel/stat.h \
-- kernel/spinlock.h kernel/proc.h kernel/fs.h kernel/sleeplock.h \
-- kernel/file.h kernel/fcntl.h
-+kernel/sysfile.o: kernel/sysfile.c kernel/types.h kernel/riscv.h \
-+ kernel/defs.h kernel/param.h kernel/stat.h kernel/spinlock.h \
-+ kernel/proc.h kernel/fs.h kernel/sleeplock.h kernel/file.h \
-+ kernel/fcntl.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/sysfile.o b/Assignments/Assignment-6/xv6/kernel/sysfile.o
-index ef3670e..7f6a52f 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/sysfile.o and b/Assignments/Assignment-6/xv6/kernel/sysfile.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/sysproc.d b/Assignments/Assignment-6/xv6/kernel/sysproc.d
-index ab37f35..1676fd6 100644
---- a/Assignments/Assignment-6/xv6/kernel/sysproc.d
-+++ b/Assignments/Assignment-6/xv6/kernel/sysproc.d
-@@ -1,4 +1,3 @@
--kernel/sysproc.o: kernel/sysproc.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/riscv.h kernel/defs.h kernel/param.h \
-- kernel/memlayout.h kernel/spinlock.h kernel/proc.h
-+kernel/sysproc.o: kernel/sysproc.c kernel/types.h kernel/riscv.h \
-+ kernel/defs.h kernel/param.h kernel/memlayout.h kernel/spinlock.h \
-+ kernel/proc.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/sysproc.o b/Assignments/Assignment-6/xv6/kernel/sysproc.o
-index 9f40ea1..4cba2dc 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/sysproc.o and b/Assignments/Assignment-6/xv6/kernel/sysproc.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/trampoline.o b/Assignments/Assignment-6/xv6/kernel/trampoline.o
-index 4ecf296..89ed5c3 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/trampoline.o and b/Assignments/Assignment-6/xv6/kernel/trampoline.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/trap.d b/Assignments/Assignment-6/xv6/kernel/trap.d
-index 76105d5..068f358 100644
---- a/Assignments/Assignment-6/xv6/kernel/trap.d
-+++ b/Assignments/Assignment-6/xv6/kernel/trap.d
-@@ -1,4 +1,3 @@
--kernel/trap.o: kernel/trap.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/param.h kernel/memlayout.h kernel/riscv.h \
-- kernel/spinlock.h kernel/proc.h kernel/defs.h
-+kernel/trap.o: kernel/trap.c kernel/types.h kernel/param.h \
-+ kernel/memlayout.h kernel/riscv.h kernel/spinlock.h kernel/proc.h \
-+ kernel/defs.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/trap.o b/Assignments/Assignment-6/xv6/kernel/trap.o
-index f0de200..ca0587c 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/trap.o and b/Assignments/Assignment-6/xv6/kernel/trap.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/uart.d b/Assignments/Assignment-6/xv6/kernel/uart.d
-index 76192e8..da94ef2 100644
---- a/Assignments/Assignment-6/xv6/kernel/uart.d
-+++ b/Assignments/Assignment-6/xv6/kernel/uart.d
-@@ -1,4 +1,3 @@
--kernel/uart.o: kernel/uart.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/param.h kernel/memlayout.h kernel/riscv.h \
-- kernel/spinlock.h kernel/proc.h kernel/defs.h
-+kernel/uart.o: kernel/uart.c kernel/types.h kernel/param.h \
-+ kernel/memlayout.h kernel/riscv.h kernel/spinlock.h kernel/proc.h \
-+ kernel/defs.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/uart.o b/Assignments/Assignment-6/xv6/kernel/uart.o
-index d488d93..dc98c73 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/uart.o and b/Assignments/Assignment-6/xv6/kernel/uart.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/virtio_disk.d b/Assignments/Assignment-6/xv6/kernel/virtio_disk.d
-index 52303b0..1ed6176 100644
---- a/Assignments/Assignment-6/xv6/kernel/virtio_disk.d
-+++ b/Assignments/Assignment-6/xv6/kernel/virtio_disk.d
-@@ -1,5 +1,3 @@
--kernel/virtio_disk.o: kernel/virtio_disk.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/riscv.h kernel/defs.h kernel/param.h \
-- kernel/memlayout.h kernel/spinlock.h kernel/sleeplock.h kernel/fs.h \
-- kernel/buf.h kernel/virtio.h
-+kernel/virtio_disk.o: kernel/virtio_disk.c kernel/types.h kernel/riscv.h \
-+ kernel/defs.h kernel/param.h kernel/memlayout.h kernel/spinlock.h \
-+ kernel/sleeplock.h kernel/fs.h kernel/buf.h kernel/virtio.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/virtio_disk.o b/Assignments/Assignment-6/xv6/kernel/virtio_disk.o
-index 014473e..bdf2bcd 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/virtio_disk.o and b/Assignments/Assignment-6/xv6/kernel/virtio_disk.o differ
-diff --git a/Assignments/Assignment-6/xv6/kernel/vm.d b/Assignments/Assignment-6/xv6/kernel/vm.d
-index c9c6768..ca55ce8 100644
---- a/Assignments/Assignment-6/xv6/kernel/vm.d
-+++ b/Assignments/Assignment-6/xv6/kernel/vm.d
-@@ -1,4 +1,2 @@
--kernel/vm.o: kernel/vm.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/param.h kernel/types.h kernel/memlayout.h kernel/elf.h \
-- kernel/riscv.h kernel/defs.h kernel/fs.h
-+kernel/vm.o: kernel/vm.c kernel/param.h kernel/types.h kernel/memlayout.h \
-+ kernel/elf.h kernel/riscv.h kernel/defs.h kernel/fs.h
-diff --git a/Assignments/Assignment-6/xv6/kernel/vm.o b/Assignments/Assignment-6/xv6/kernel/vm.o
-index a6f272f..742b607 100644
-Binary files a/Assignments/Assignment-6/xv6/kernel/vm.o and b/Assignments/Assignment-6/xv6/kernel/vm.o differ
-diff --git a/Assignments/Assignment-6/xv6/mkfs/mkfs b/Assignments/Assignment-6/xv6/mkfs/mkfs
-index e814dd0..6689440 100755
-Binary files a/Assignments/Assignment-6/xv6/mkfs/mkfs and b/Assignments/Assignment-6/xv6/mkfs/mkfs differ
-diff --git a/Assignments/Assignment-6/xv6/user/_cat b/Assignments/Assignment-6/xv6/user/_cat
-index 64877bd..fccafa0 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_cat and b/Assignments/Assignment-6/xv6/user/_cat differ
-diff --git a/Assignments/Assignment-6/xv6/user/_echo b/Assignments/Assignment-6/xv6/user/_echo
-index 799e9f8..a8b5454 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_echo and b/Assignments/Assignment-6/xv6/user/_echo differ
-diff --git a/Assignments/Assignment-6/xv6/user/_forktest b/Assignments/Assignment-6/xv6/user/_forktest
-index e208776..17b2bef 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_forktest and b/Assignments/Assignment-6/xv6/user/_forktest differ
-diff --git a/Assignments/Assignment-6/xv6/user/_grep b/Assignments/Assignment-6/xv6/user/_grep
-index fc5c406..d47dcaa 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_grep and b/Assignments/Assignment-6/xv6/user/_grep differ
-diff --git a/Assignments/Assignment-6/xv6/user/_grind b/Assignments/Assignment-6/xv6/user/_grind
-index 9a88d71..bcf3699 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_grind and b/Assignments/Assignment-6/xv6/user/_grind differ
-diff --git a/Assignments/Assignment-6/xv6/user/_init b/Assignments/Assignment-6/xv6/user/_init
-index 708cca8..f141a29 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_init and b/Assignments/Assignment-6/xv6/user/_init differ
-diff --git a/Assignments/Assignment-6/xv6/user/_kill b/Assignments/Assignment-6/xv6/user/_kill
-index 21ad8b1..63e8962 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_kill and b/Assignments/Assignment-6/xv6/user/_kill differ
-diff --git a/Assignments/Assignment-6/xv6/user/_ln b/Assignments/Assignment-6/xv6/user/_ln
-index 0208d62..4666c75 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_ln and b/Assignments/Assignment-6/xv6/user/_ln differ
-diff --git a/Assignments/Assignment-6/xv6/user/_ls b/Assignments/Assignment-6/xv6/user/_ls
-index a5ce85f..ac6327e 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_ls and b/Assignments/Assignment-6/xv6/user/_ls differ
-diff --git a/Assignments/Assignment-6/xv6/user/_mkdir b/Assignments/Assignment-6/xv6/user/_mkdir
-index b9b870b..02f3b32 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_mkdir and b/Assignments/Assignment-6/xv6/user/_mkdir differ
-diff --git a/Assignments/Assignment-6/xv6/user/_rm b/Assignments/Assignment-6/xv6/user/_rm
-index 799391d..5ee939a 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_rm and b/Assignments/Assignment-6/xv6/user/_rm differ
-diff --git a/Assignments/Assignment-6/xv6/user/_sh b/Assignments/Assignment-6/xv6/user/_sh
-index 3e40ce6..c2fa775 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_sh and b/Assignments/Assignment-6/xv6/user/_sh differ
-diff --git a/Assignments/Assignment-6/xv6/user/_stressfs b/Assignments/Assignment-6/xv6/user/_stressfs
-index a364e84..a625d13 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_stressfs and b/Assignments/Assignment-6/xv6/user/_stressfs differ
-diff --git a/Assignments/Assignment-6/xv6/user/_usertests b/Assignments/Assignment-6/xv6/user/_usertests
-index 646b734..140d920 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_usertests and b/Assignments/Assignment-6/xv6/user/_usertests differ
-diff --git a/Assignments/Assignment-6/xv6/user/_wc b/Assignments/Assignment-6/xv6/user/_wc
-index 782af34..86f9573 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_wc and b/Assignments/Assignment-6/xv6/user/_wc differ
-diff --git a/Assignments/Assignment-6/xv6/user/_zombie b/Assignments/Assignment-6/xv6/user/_zombie
-index 5e68b16..dae19cb 100755
-Binary files a/Assignments/Assignment-6/xv6/user/_zombie and b/Assignments/Assignment-6/xv6/user/_zombie differ
-diff --git a/Assignments/Assignment-6/xv6/user/cat.asm b/Assignments/Assignment-6/xv6/user/cat.asm
-index 9ded583..83b90e0 100644
---- a/Assignments/Assignment-6/xv6/user/cat.asm
-+++ b/Assignments/Assignment-6/xv6/user/cat.asm
-@@ -11,13 +11,13 @@ char buf[512];
- void
- cat(int fd)
- {
--   0:	7179                	addi	sp,sp,-48
-+   0:	7179                	add	sp,sp,-48
-    2:	f406                	sd	ra,40(sp)
-    4:	f022                	sd	s0,32(sp)
-    6:	ec26                	sd	s1,24(sp)
-    8:	e84a                	sd	s2,16(sp)
-    a:	e44e                	sd	s3,8(sp)
--   c:	1800                	addi	s0,sp,48
-+   c:	1800                	add	s0,sp,48
-    e:	89aa                	mv	s3,a0
-   int n;
- 
-@@ -27,23 +27,23 @@ cat(int fd)
-   18:	20000613          	li	a2,512
-   1c:	85ca                	mv	a1,s2
-   1e:	854e                	mv	a0,s3
--  20:	34c000ef          	jal	36c <read>
-+  20:	346000ef          	jal	366 <read>
-   24:	84aa                	mv	s1,a0
-   26:	02a05363          	blez	a0,4c <cat+0x4c>
-     if (write(1, buf, n) != n) {
-   2a:	8626                	mv	a2,s1
-   2c:	85ca                	mv	a1,s2
-   2e:	4505                	li	a0,1
--  30:	344000ef          	jal	374 <write>
-+  30:	33e000ef          	jal	36e <write>
-   34:	fe9502e3          	beq	a0,s1,18 <cat+0x18>
-       fprintf(2, "cat: write error\n");
-   38:	00001597          	auipc	a1,0x1
--  3c:	8e858593          	addi	a1,a1,-1816 # 920 <malloc+0x100>
-+  3c:	8c858593          	add	a1,a1,-1848 # 900 <malloc+0xe4>
-   40:	4509                	li	a0,2
--  42:	700000ef          	jal	742 <fprintf>
-+  42:	6fc000ef          	jal	73e <fprintf>
-       exit(1);
-   46:	4505                	li	a0,1
--  48:	30c000ef          	jal	354 <exit>
-+  48:	306000ef          	jal	34e <exit>
-     }
-   }
-   if(n < 0){
-@@ -57,39 +57,39 @@ cat(int fd)
-   54:	64e2                	ld	s1,24(sp)
-   56:	6942                	ld	s2,16(sp)
-   58:	69a2                	ld	s3,8(sp)
--  5a:	6145                	addi	sp,sp,48
-+  5a:	6145                	add	sp,sp,48
-   5c:	8082                	ret
-     fprintf(2, "cat: read error\n");
-   5e:	00001597          	auipc	a1,0x1
--  62:	8da58593          	addi	a1,a1,-1830 # 938 <malloc+0x118>
-+  62:	8ba58593          	add	a1,a1,-1862 # 918 <malloc+0xfc>
-   66:	4509                	li	a0,2
--  68:	6da000ef          	jal	742 <fprintf>
-+  68:	6d6000ef          	jal	73e <fprintf>
-     exit(1);
-   6c:	4505                	li	a0,1
--  6e:	2e6000ef          	jal	354 <exit>
-+  6e:	2e0000ef          	jal	34e <exit>
- 
- 0000000000000072 <main>:
- 
- int
- main(int argc, char *argv[])
- {
--  72:	7179                	addi	sp,sp,-48
-+  72:	7179                	add	sp,sp,-48
-   74:	f406                	sd	ra,40(sp)
-   76:	f022                	sd	s0,32(sp)
--  78:	1800                	addi	s0,sp,48
-+  78:	ec26                	sd	s1,24(sp)
-+  7a:	e84a                	sd	s2,16(sp)
-+  7c:	e44e                	sd	s3,8(sp)
-+  7e:	1800                	add	s0,sp,48
-   int fd, i;
- 
-   if(argc <= 1){
--  7a:	4785                	li	a5,1
--  7c:	04a7d263          	bge	a5,a0,c0 <main+0x4e>
--  80:	ec26                	sd	s1,24(sp)
--  82:	e84a                	sd	s2,16(sp)
--  84:	e44e                	sd	s3,8(sp)
--  86:	00858913          	addi	s2,a1,8
--  8a:	ffe5099b          	addiw	s3,a0,-2
--  8e:	02099793          	slli	a5,s3,0x20
--  92:	01d7d993          	srli	s3,a5,0x1d
--  96:	05c1                	addi	a1,a1,16
-+  80:	4785                	li	a5,1
-+  82:	02a7df63          	bge	a5,a0,c0 <main+0x4e>
-+  86:	00858913          	add	s2,a1,8
-+  8a:	ffe5099b          	addw	s3,a0,-2
-+  8e:	02099793          	sll	a5,s3,0x20
-+  92:	01d7d993          	srl	s3,a5,0x1d
-+  96:	05c1                	add	a1,a1,16
-   98:	99ae                	add	s3,s3,a1
-     cat(0);
-     exit(0);
-@@ -99,9 +99,9 @@ main(int argc, char *argv[])
-     if((fd = open(argv[i], O_RDONLY)) < 0){
-   9a:	4581                	li	a1,0
-   9c:	00093503          	ld	a0,0(s2) # 1010 <buf>
--  a0:	2f4000ef          	jal	394 <open>
-+  a0:	2ee000ef          	jal	38e <open>
-   a4:	84aa                	mv	s1,a0
--  a6:	02054663          	bltz	a0,d2 <main+0x60>
-+  a6:	02054363          	bltz	a0,cc <main+0x5a>
-       fprintf(2, "cat: cannot open %s\n", argv[i]);
-       exit(1);
-     }
-@@ -109,1140 +109,1143 @@ main(int argc, char *argv[])
-   aa:	f57ff0ef          	jal	0 <cat>
-     close(fd);
-   ae:	8526                	mv	a0,s1
--  b0:	2cc000ef          	jal	37c <close>
-+  b0:	2c6000ef          	jal	376 <close>
-   for(i = 1; i < argc; i++){
--  b4:	0921                	addi	s2,s2,8
-+  b4:	0921                	add	s2,s2,8
-   b6:	ff3912e3          	bne	s2,s3,9a <main+0x28>
-   }
-   exit(0);
-   ba:	4501                	li	a0,0
--  bc:	298000ef          	jal	354 <exit>
--  c0:	ec26                	sd	s1,24(sp)
--  c2:	e84a                	sd	s2,16(sp)
--  c4:	e44e                	sd	s3,8(sp)
-+  bc:	292000ef          	jal	34e <exit>
-     cat(0);
--  c6:	4501                	li	a0,0
--  c8:	f39ff0ef          	jal	0 <cat>
-+  c0:	4501                	li	a0,0
-+  c2:	f3fff0ef          	jal	0 <cat>
-     exit(0);
--  cc:	4501                	li	a0,0
--  ce:	286000ef          	jal	354 <exit>
-+  c6:	4501                	li	a0,0
-+  c8:	286000ef          	jal	34e <exit>
-       fprintf(2, "cat: cannot open %s\n", argv[i]);
--  d2:	00093603          	ld	a2,0(s2)
--  d6:	00001597          	auipc	a1,0x1
--  da:	87a58593          	addi	a1,a1,-1926 # 950 <malloc+0x130>
--  de:	4509                	li	a0,2
--  e0:	662000ef          	jal	742 <fprintf>
-+  cc:	00093603          	ld	a2,0(s2)
-+  d0:	00001597          	auipc	a1,0x1
-+  d4:	86058593          	add	a1,a1,-1952 # 930 <malloc+0x114>
-+  d8:	4509                	li	a0,2
-+  da:	664000ef          	jal	73e <fprintf>
-       exit(1);
--  e4:	4505                	li	a0,1
--  e6:	26e000ef          	jal	354 <exit>
-+  de:	4505                	li	a0,1
-+  e0:	26e000ef          	jal	34e <exit>
- 
--00000000000000ea <start>:
-+00000000000000e4 <start>:
- /* */
- /* wrapper so that it's OK if main() does not call exit(). */
- /* */
- void
- start()
- {
--  ea:	1141                	addi	sp,sp,-16
--  ec:	e406                	sd	ra,8(sp)
--  ee:	e022                	sd	s0,0(sp)
--  f0:	0800                	addi	s0,sp,16
-+  e4:	1141                	add	sp,sp,-16
-+  e6:	e406                	sd	ra,8(sp)
-+  e8:	e022                	sd	s0,0(sp)
-+  ea:	0800                	add	s0,sp,16
-   extern int main();
-   main();
--  f2:	f81ff0ef          	jal	72 <main>
-+  ec:	f87ff0ef          	jal	72 <main>
-   exit(0);
--  f6:	4501                	li	a0,0
--  f8:	25c000ef          	jal	354 <exit>
-+  f0:	4501                	li	a0,0
-+  f2:	25c000ef          	jal	34e <exit>
- 
--00000000000000fc <strcpy>:
-+00000000000000f6 <strcpy>:
- }
- 
- char*
- strcpy(char *s, const char *t)
- {
--  fc:	1141                	addi	sp,sp,-16
--  fe:	e422                	sd	s0,8(sp)
-- 100:	0800                	addi	s0,sp,16
-+  f6:	1141                	add	sp,sp,-16
-+  f8:	e422                	sd	s0,8(sp)
-+  fa:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
-- 102:	87aa                	mv	a5,a0
-- 104:	0585                	addi	a1,a1,1
-- 106:	0785                	addi	a5,a5,1
-- 108:	fff5c703          	lbu	a4,-1(a1)
-- 10c:	fee78fa3          	sb	a4,-1(a5)
-- 110:	fb75                	bnez	a4,104 <strcpy+0x8>
-+  fc:	87aa                	mv	a5,a0
-+  fe:	0585                	add	a1,a1,1
-+ 100:	0785                	add	a5,a5,1
-+ 102:	fff5c703          	lbu	a4,-1(a1)
-+ 106:	fee78fa3          	sb	a4,-1(a5)
-+ 10a:	fb75                	bnez	a4,fe <strcpy+0x8>
-     ;
-   return os;
- }
-- 112:	6422                	ld	s0,8(sp)
-- 114:	0141                	addi	sp,sp,16
-- 116:	8082                	ret
-+ 10c:	6422                	ld	s0,8(sp)
-+ 10e:	0141                	add	sp,sp,16
-+ 110:	8082                	ret
- 
--0000000000000118 <strcmp>:
-+0000000000000112 <strcmp>:
- 
- int
- strcmp(const char *p, const char *q)
- {
-- 118:	1141                	addi	sp,sp,-16
-- 11a:	e422                	sd	s0,8(sp)
-- 11c:	0800                	addi	s0,sp,16
-+ 112:	1141                	add	sp,sp,-16
-+ 114:	e422                	sd	s0,8(sp)
-+ 116:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
-- 11e:	00054783          	lbu	a5,0(a0)
-- 122:	cb91                	beqz	a5,136 <strcmp+0x1e>
-- 124:	0005c703          	lbu	a4,0(a1)
-- 128:	00f71763          	bne	a4,a5,136 <strcmp+0x1e>
-+ 118:	00054783          	lbu	a5,0(a0)
-+ 11c:	cb91                	beqz	a5,130 <strcmp+0x1e>
-+ 11e:	0005c703          	lbu	a4,0(a1)
-+ 122:	00f71763          	bne	a4,a5,130 <strcmp+0x1e>
-     p++, q++;
-- 12c:	0505                	addi	a0,a0,1
-- 12e:	0585                	addi	a1,a1,1
-+ 126:	0505                	add	a0,a0,1
-+ 128:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
-- 130:	00054783          	lbu	a5,0(a0)
-- 134:	fbe5                	bnez	a5,124 <strcmp+0xc>
-+ 12a:	00054783          	lbu	a5,0(a0)
-+ 12e:	fbe5                	bnez	a5,11e <strcmp+0xc>
-   return (uchar)*p - (uchar)*q;
-- 136:	0005c503          	lbu	a0,0(a1)
-+ 130:	0005c503          	lbu	a0,0(a1)
- }
-- 13a:	40a7853b          	subw	a0,a5,a0
-- 13e:	6422                	ld	s0,8(sp)
-- 140:	0141                	addi	sp,sp,16
-- 142:	8082                	ret
-+ 134:	40a7853b          	subw	a0,a5,a0
-+ 138:	6422                	ld	s0,8(sp)
-+ 13a:	0141                	add	sp,sp,16
-+ 13c:	8082                	ret
- 
--0000000000000144 <strlen>:
-+000000000000013e <strlen>:
- 
- uint
- strlen(const char *s)
- {
-- 144:	1141                	addi	sp,sp,-16
-- 146:	e422                	sd	s0,8(sp)
-- 148:	0800                	addi	s0,sp,16
-+ 13e:	1141                	add	sp,sp,-16
-+ 140:	e422                	sd	s0,8(sp)
-+ 142:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
-- 14a:	00054783          	lbu	a5,0(a0)
-- 14e:	cf91                	beqz	a5,16a <strlen+0x26>
-- 150:	0505                	addi	a0,a0,1
-- 152:	87aa                	mv	a5,a0
-- 154:	86be                	mv	a3,a5
-- 156:	0785                	addi	a5,a5,1
-- 158:	fff7c703          	lbu	a4,-1(a5)
-- 15c:	ff65                	bnez	a4,154 <strlen+0x10>
-- 15e:	40a6853b          	subw	a0,a3,a0
-- 162:	2505                	addiw	a0,a0,1
-+ 144:	00054783          	lbu	a5,0(a0)
-+ 148:	cf91                	beqz	a5,164 <strlen+0x26>
-+ 14a:	0505                	add	a0,a0,1
-+ 14c:	87aa                	mv	a5,a0
-+ 14e:	86be                	mv	a3,a5
-+ 150:	0785                	add	a5,a5,1
-+ 152:	fff7c703          	lbu	a4,-1(a5)
-+ 156:	ff65                	bnez	a4,14e <strlen+0x10>
-+ 158:	40a6853b          	subw	a0,a3,a0
-+ 15c:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
-- 164:	6422                	ld	s0,8(sp)
-- 166:	0141                	addi	sp,sp,16
-- 168:	8082                	ret
-+ 15e:	6422                	ld	s0,8(sp)
-+ 160:	0141                	add	sp,sp,16
-+ 162:	8082                	ret
-   for(n = 0; s[n]; n++)
-- 16a:	4501                	li	a0,0
-- 16c:	bfe5                	j	164 <strlen+0x20>
-+ 164:	4501                	li	a0,0
-+ 166:	bfe5                	j	15e <strlen+0x20>
- 
--000000000000016e <memset>:
-+0000000000000168 <memset>:
- 
- void*
- memset(void *dst, int c, uint n)
- {
-- 16e:	1141                	addi	sp,sp,-16
-- 170:	e422                	sd	s0,8(sp)
-- 172:	0800                	addi	s0,sp,16
-+ 168:	1141                	add	sp,sp,-16
-+ 16a:	e422                	sd	s0,8(sp)
-+ 16c:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
-- 174:	ca19                	beqz	a2,18a <memset+0x1c>
-- 176:	87aa                	mv	a5,a0
-- 178:	1602                	slli	a2,a2,0x20
-- 17a:	9201                	srli	a2,a2,0x20
-- 17c:	00a60733          	add	a4,a2,a0
-+ 16e:	ca19                	beqz	a2,184 <memset+0x1c>
-+ 170:	87aa                	mv	a5,a0
-+ 172:	1602                	sll	a2,a2,0x20
-+ 174:	9201                	srl	a2,a2,0x20
-+ 176:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
-- 180:	00b78023          	sb	a1,0(a5)
-+ 17a:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
-- 184:	0785                	addi	a5,a5,1
-- 186:	fee79de3          	bne	a5,a4,180 <memset+0x12>
-+ 17e:	0785                	add	a5,a5,1
-+ 180:	fee79de3          	bne	a5,a4,17a <memset+0x12>
-   }
-   return dst;
- }
-- 18a:	6422                	ld	s0,8(sp)
-- 18c:	0141                	addi	sp,sp,16
-- 18e:	8082                	ret
-+ 184:	6422                	ld	s0,8(sp)
-+ 186:	0141                	add	sp,sp,16
-+ 188:	8082                	ret
- 
--0000000000000190 <strchr>:
-+000000000000018a <strchr>:
- 
- char*
- strchr(const char *s, char c)
- {
-- 190:	1141                	addi	sp,sp,-16
-- 192:	e422                	sd	s0,8(sp)
-- 194:	0800                	addi	s0,sp,16
-+ 18a:	1141                	add	sp,sp,-16
-+ 18c:	e422                	sd	s0,8(sp)
-+ 18e:	0800                	add	s0,sp,16
-   for(; *s; s++)
-- 196:	00054783          	lbu	a5,0(a0)
-- 19a:	cb99                	beqz	a5,1b0 <strchr+0x20>
-+ 190:	00054783          	lbu	a5,0(a0)
-+ 194:	cb99                	beqz	a5,1aa <strchr+0x20>
-     if(*s == c)
-- 19c:	00f58763          	beq	a1,a5,1aa <strchr+0x1a>
-+ 196:	00f58763          	beq	a1,a5,1a4 <strchr+0x1a>
-   for(; *s; s++)
-- 1a0:	0505                	addi	a0,a0,1
-- 1a2:	00054783          	lbu	a5,0(a0)
-- 1a6:	fbfd                	bnez	a5,19c <strchr+0xc>
-+ 19a:	0505                	add	a0,a0,1
-+ 19c:	00054783          	lbu	a5,0(a0)
-+ 1a0:	fbfd                	bnez	a5,196 <strchr+0xc>
-       return (char*)s;
-   return 0;
-- 1a8:	4501                	li	a0,0
-+ 1a2:	4501                	li	a0,0
- }
-- 1aa:	6422                	ld	s0,8(sp)
-- 1ac:	0141                	addi	sp,sp,16
-- 1ae:	8082                	ret
-+ 1a4:	6422                	ld	s0,8(sp)
-+ 1a6:	0141                	add	sp,sp,16
-+ 1a8:	8082                	ret
-   return 0;
-- 1b0:	4501                	li	a0,0
-- 1b2:	bfe5                	j	1aa <strchr+0x1a>
-+ 1aa:	4501                	li	a0,0
-+ 1ac:	bfe5                	j	1a4 <strchr+0x1a>
- 
--00000000000001b4 <gets>:
-+00000000000001ae <gets>:
- 
- char*
- gets(char *buf, int max)
- {
-- 1b4:	711d                	addi	sp,sp,-96
-- 1b6:	ec86                	sd	ra,88(sp)
-- 1b8:	e8a2                	sd	s0,80(sp)
-- 1ba:	e4a6                	sd	s1,72(sp)
-- 1bc:	e0ca                	sd	s2,64(sp)
-- 1be:	fc4e                	sd	s3,56(sp)
-- 1c0:	f852                	sd	s4,48(sp)
-- 1c2:	f456                	sd	s5,40(sp)
-- 1c4:	f05a                	sd	s6,32(sp)
-- 1c6:	ec5e                	sd	s7,24(sp)
-- 1c8:	1080                	addi	s0,sp,96
-- 1ca:	8baa                	mv	s7,a0
-- 1cc:	8a2e                	mv	s4,a1
-+ 1ae:	711d                	add	sp,sp,-96
-+ 1b0:	ec86                	sd	ra,88(sp)
-+ 1b2:	e8a2                	sd	s0,80(sp)
-+ 1b4:	e4a6                	sd	s1,72(sp)
-+ 1b6:	e0ca                	sd	s2,64(sp)
-+ 1b8:	fc4e                	sd	s3,56(sp)
-+ 1ba:	f852                	sd	s4,48(sp)
-+ 1bc:	f456                	sd	s5,40(sp)
-+ 1be:	f05a                	sd	s6,32(sp)
-+ 1c0:	ec5e                	sd	s7,24(sp)
-+ 1c2:	1080                	add	s0,sp,96
-+ 1c4:	8baa                	mv	s7,a0
-+ 1c6:	8a2e                	mv	s4,a1
-   int i, cc;
-   char c;
- 
-   for(i=0; i+1 < max; ){
-- 1ce:	892a                	mv	s2,a0
-- 1d0:	4481                	li	s1,0
-+ 1c8:	892a                	mv	s2,a0
-+ 1ca:	4481                	li	s1,0
-     cc = read(0, &c, 1);
-     if(cc < 1)
-       break;
-     buf[i++] = c;
-     if(c == '\n' || c == '\r')
-- 1d2:	4aa9                	li	s5,10
-- 1d4:	4b35                	li	s6,13
-+ 1cc:	4aa9                	li	s5,10
-+ 1ce:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
-- 1d6:	89a6                	mv	s3,s1
-- 1d8:	2485                	addiw	s1,s1,1
-- 1da:	0344d663          	bge	s1,s4,206 <gets+0x52>
-+ 1d0:	89a6                	mv	s3,s1
-+ 1d2:	2485                	addw	s1,s1,1
-+ 1d4:	0344d663          	bge	s1,s4,200 <gets+0x52>
-     cc = read(0, &c, 1);
-- 1de:	4605                	li	a2,1
-- 1e0:	faf40593          	addi	a1,s0,-81
-- 1e4:	4501                	li	a0,0
-- 1e6:	186000ef          	jal	36c <read>
-+ 1d8:	4605                	li	a2,1
-+ 1da:	faf40593          	add	a1,s0,-81
-+ 1de:	4501                	li	a0,0
-+ 1e0:	186000ef          	jal	366 <read>
-     if(cc < 1)
-- 1ea:	00a05e63          	blez	a0,206 <gets+0x52>
-+ 1e4:	00a05e63          	blez	a0,200 <gets+0x52>
-     buf[i++] = c;
-- 1ee:	faf44783          	lbu	a5,-81(s0)
-- 1f2:	00f90023          	sb	a5,0(s2)
-+ 1e8:	faf44783          	lbu	a5,-81(s0)
-+ 1ec:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
-- 1f6:	01578763          	beq	a5,s5,204 <gets+0x50>
-- 1fa:	0905                	addi	s2,s2,1
-- 1fc:	fd679de3          	bne	a5,s6,1d6 <gets+0x22>
--    buf[i++] = c;
-- 200:	89a6                	mv	s3,s1
-- 202:	a011                	j	206 <gets+0x52>
-- 204:	89a6                	mv	s3,s1
-+ 1f0:	01578763          	beq	a5,s5,1fe <gets+0x50>
-+ 1f4:	0905                	add	s2,s2,1
-+ 1f6:	fd679de3          	bne	a5,s6,1d0 <gets+0x22>
-+  for(i=0; i+1 < max; ){
-+ 1fa:	89a6                	mv	s3,s1
-+ 1fc:	a011                	j	200 <gets+0x52>
-+ 1fe:	89a6                	mv	s3,s1
-       break;
-   }
-   buf[i] = '\0';
-- 206:	99de                	add	s3,s3,s7
-- 208:	00098023          	sb	zero,0(s3)
-+ 200:	99de                	add	s3,s3,s7
-+ 202:	00098023          	sb	zero,0(s3)
-   return buf;
- }
-- 20c:	855e                	mv	a0,s7
-- 20e:	60e6                	ld	ra,88(sp)
-- 210:	6446                	ld	s0,80(sp)
-- 212:	64a6                	ld	s1,72(sp)
-- 214:	6906                	ld	s2,64(sp)
-- 216:	79e2                	ld	s3,56(sp)
-- 218:	7a42                	ld	s4,48(sp)
-- 21a:	7aa2                	ld	s5,40(sp)
-- 21c:	7b02                	ld	s6,32(sp)
-- 21e:	6be2                	ld	s7,24(sp)
-- 220:	6125                	addi	sp,sp,96
-- 222:	8082                	ret
--
--0000000000000224 <stat>:
-+ 206:	855e                	mv	a0,s7
-+ 208:	60e6                	ld	ra,88(sp)
-+ 20a:	6446                	ld	s0,80(sp)
-+ 20c:	64a6                	ld	s1,72(sp)
-+ 20e:	6906                	ld	s2,64(sp)
-+ 210:	79e2                	ld	s3,56(sp)
-+ 212:	7a42                	ld	s4,48(sp)
-+ 214:	7aa2                	ld	s5,40(sp)
-+ 216:	7b02                	ld	s6,32(sp)
-+ 218:	6be2                	ld	s7,24(sp)
-+ 21a:	6125                	add	sp,sp,96
-+ 21c:	8082                	ret
-+
-+000000000000021e <stat>:
- 
- int
- stat(const char *n, struct stat *st)
- {
-- 224:	1101                	addi	sp,sp,-32
-- 226:	ec06                	sd	ra,24(sp)
-- 228:	e822                	sd	s0,16(sp)
-- 22a:	e04a                	sd	s2,0(sp)
-- 22c:	1000                	addi	s0,sp,32
-- 22e:	892e                	mv	s2,a1
-+ 21e:	1101                	add	sp,sp,-32
-+ 220:	ec06                	sd	ra,24(sp)
-+ 222:	e822                	sd	s0,16(sp)
-+ 224:	e426                	sd	s1,8(sp)
-+ 226:	e04a                	sd	s2,0(sp)
-+ 228:	1000                	add	s0,sp,32
-+ 22a:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
-- 230:	4581                	li	a1,0
-- 232:	162000ef          	jal	394 <open>
-+ 22c:	4581                	li	a1,0
-+ 22e:	160000ef          	jal	38e <open>
-   if(fd < 0)
-- 236:	02054263          	bltz	a0,25a <stat+0x36>
-- 23a:	e426                	sd	s1,8(sp)
-- 23c:	84aa                	mv	s1,a0
-+ 232:	02054163          	bltz	a0,254 <stat+0x36>
-+ 236:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
-- 23e:	85ca                	mv	a1,s2
-- 240:	16c000ef          	jal	3ac <fstat>
-- 244:	892a                	mv	s2,a0
-+ 238:	85ca                	mv	a1,s2
-+ 23a:	16c000ef          	jal	3a6 <fstat>
-+ 23e:	892a                	mv	s2,a0
-   close(fd);
-- 246:	8526                	mv	a0,s1
-- 248:	134000ef          	jal	37c <close>
-+ 240:	8526                	mv	a0,s1
-+ 242:	134000ef          	jal	376 <close>
-   return r;
-- 24c:	64a2                	ld	s1,8(sp)
- }
-- 24e:	854a                	mv	a0,s2
-- 250:	60e2                	ld	ra,24(sp)
-- 252:	6442                	ld	s0,16(sp)
-- 254:	6902                	ld	s2,0(sp)
-- 256:	6105                	addi	sp,sp,32
-- 258:	8082                	ret
-+ 246:	854a                	mv	a0,s2
-+ 248:	60e2                	ld	ra,24(sp)
-+ 24a:	6442                	ld	s0,16(sp)
-+ 24c:	64a2                	ld	s1,8(sp)
-+ 24e:	6902                	ld	s2,0(sp)
-+ 250:	6105                	add	sp,sp,32
-+ 252:	8082                	ret
-     return -1;
-- 25a:	597d                	li	s2,-1
-- 25c:	bfcd                	j	24e <stat+0x2a>
-+ 254:	597d                	li	s2,-1
-+ 256:	bfc5                	j	246 <stat+0x28>
- 
--000000000000025e <atoi>:
-+0000000000000258 <atoi>:
- 
- int
- atoi(const char *s)
- {
-- 25e:	1141                	addi	sp,sp,-16
-- 260:	e422                	sd	s0,8(sp)
-- 262:	0800                	addi	s0,sp,16
-+ 258:	1141                	add	sp,sp,-16
-+ 25a:	e422                	sd	s0,8(sp)
-+ 25c:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
-- 264:	00054683          	lbu	a3,0(a0)
-- 268:	fd06879b          	addiw	a5,a3,-48
-- 26c:	0ff7f793          	zext.b	a5,a5
-- 270:	4625                	li	a2,9
-- 272:	02f66863          	bltu	a2,a5,2a2 <atoi+0x44>
-- 276:	872a                	mv	a4,a0
-+ 25e:	00054683          	lbu	a3,0(a0)
-+ 262:	fd06879b          	addw	a5,a3,-48
-+ 266:	0ff7f793          	zext.b	a5,a5
-+ 26a:	4625                	li	a2,9
-+ 26c:	02f66863          	bltu	a2,a5,29c <atoi+0x44>
-+ 270:	872a                	mv	a4,a0
-   n = 0;
-- 278:	4501                	li	a0,0
-+ 272:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
-- 27a:	0705                	addi	a4,a4,1
-- 27c:	0025179b          	slliw	a5,a0,0x2
-- 280:	9fa9                	addw	a5,a5,a0
-- 282:	0017979b          	slliw	a5,a5,0x1
-- 286:	9fb5                	addw	a5,a5,a3
-- 288:	fd07851b          	addiw	a0,a5,-48
-+ 274:	0705                	add	a4,a4,1
-+ 276:	0025179b          	sllw	a5,a0,0x2
-+ 27a:	9fa9                	addw	a5,a5,a0
-+ 27c:	0017979b          	sllw	a5,a5,0x1
-+ 280:	9fb5                	addw	a5,a5,a3
-+ 282:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
-- 28c:	00074683          	lbu	a3,0(a4)
-- 290:	fd06879b          	addiw	a5,a3,-48
-- 294:	0ff7f793          	zext.b	a5,a5
-- 298:	fef671e3          	bgeu	a2,a5,27a <atoi+0x1c>
-+ 286:	00074683          	lbu	a3,0(a4)
-+ 28a:	fd06879b          	addw	a5,a3,-48
-+ 28e:	0ff7f793          	zext.b	a5,a5
-+ 292:	fef671e3          	bgeu	a2,a5,274 <atoi+0x1c>
-   return n;
- }
-- 29c:	6422                	ld	s0,8(sp)
-- 29e:	0141                	addi	sp,sp,16
-- 2a0:	8082                	ret
-+ 296:	6422                	ld	s0,8(sp)
-+ 298:	0141                	add	sp,sp,16
-+ 29a:	8082                	ret
-   n = 0;
-- 2a2:	4501                	li	a0,0
-- 2a4:	bfe5                	j	29c <atoi+0x3e>
-+ 29c:	4501                	li	a0,0
-+ 29e:	bfe5                	j	296 <atoi+0x3e>
- 
--00000000000002a6 <memmove>:
-+00000000000002a0 <memmove>:
- 
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
-- 2a6:	1141                	addi	sp,sp,-16
-- 2a8:	e422                	sd	s0,8(sp)
-- 2aa:	0800                	addi	s0,sp,16
-+ 2a0:	1141                	add	sp,sp,-16
-+ 2a2:	e422                	sd	s0,8(sp)
-+ 2a4:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-   dst = vdst;
-   src = vsrc;
-   if (src > dst) {
-- 2ac:	02b57463          	bgeu	a0,a1,2d4 <memmove+0x2e>
-+ 2a6:	02b57463          	bgeu	a0,a1,2ce <memmove+0x2e>
-     while(n-- > 0)
-- 2b0:	00c05f63          	blez	a2,2ce <memmove+0x28>
-- 2b4:	1602                	slli	a2,a2,0x20
-- 2b6:	9201                	srli	a2,a2,0x20
-- 2b8:	00c507b3          	add	a5,a0,a2
-+ 2aa:	00c05f63          	blez	a2,2c8 <memmove+0x28>
-+ 2ae:	1602                	sll	a2,a2,0x20
-+ 2b0:	9201                	srl	a2,a2,0x20
-+ 2b2:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
-- 2bc:	872a                	mv	a4,a0
-+ 2b6:	872a                	mv	a4,a0
-       *dst++ = *src++;
-- 2be:	0585                	addi	a1,a1,1
-- 2c0:	0705                	addi	a4,a4,1
-- 2c2:	fff5c683          	lbu	a3,-1(a1)
-- 2c6:	fed70fa3          	sb	a3,-1(a4)
-+ 2b8:	0585                	add	a1,a1,1
-+ 2ba:	0705                	add	a4,a4,1
-+ 2bc:	fff5c683          	lbu	a3,-1(a1)
-+ 2c0:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
-- 2ca:	fef71ae3          	bne	a4,a5,2be <memmove+0x18>
-+ 2c4:	fee79ae3          	bne	a5,a4,2b8 <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-   }
-   return vdst;
- }
-- 2ce:	6422                	ld	s0,8(sp)
-- 2d0:	0141                	addi	sp,sp,16
-- 2d2:	8082                	ret
-+ 2c8:	6422                	ld	s0,8(sp)
-+ 2ca:	0141                	add	sp,sp,16
-+ 2cc:	8082                	ret
-     dst += n;
-- 2d4:	00c50733          	add	a4,a0,a2
-+ 2ce:	00c50733          	add	a4,a0,a2
-     src += n;
-- 2d8:	95b2                	add	a1,a1,a2
-+ 2d2:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
-- 2da:	fec05ae3          	blez	a2,2ce <memmove+0x28>
-- 2de:	fff6079b          	addiw	a5,a2,-1
-- 2e2:	1782                	slli	a5,a5,0x20
-- 2e4:	9381                	srli	a5,a5,0x20
-- 2e6:	fff7c793          	not	a5,a5
-- 2ea:	97ba                	add	a5,a5,a4
-+ 2d4:	fec05ae3          	blez	a2,2c8 <memmove+0x28>
-+ 2d8:	fff6079b          	addw	a5,a2,-1
-+ 2dc:	1782                	sll	a5,a5,0x20
-+ 2de:	9381                	srl	a5,a5,0x20
-+ 2e0:	fff7c793          	not	a5,a5
-+ 2e4:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
-- 2ec:	15fd                	addi	a1,a1,-1
-- 2ee:	177d                	addi	a4,a4,-1
-- 2f0:	0005c683          	lbu	a3,0(a1)
-- 2f4:	00d70023          	sb	a3,0(a4)
-+ 2e6:	15fd                	add	a1,a1,-1
-+ 2e8:	177d                	add	a4,a4,-1
-+ 2ea:	0005c683          	lbu	a3,0(a1)
-+ 2ee:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
-- 2f8:	fee79ae3          	bne	a5,a4,2ec <memmove+0x46>
-- 2fc:	bfc9                	j	2ce <memmove+0x28>
-+ 2f2:	fee79ae3          	bne	a5,a4,2e6 <memmove+0x46>
-+ 2f6:	bfc9                	j	2c8 <memmove+0x28>
- 
--00000000000002fe <memcmp>:
-+00000000000002f8 <memcmp>:
- 
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
-- 2fe:	1141                	addi	sp,sp,-16
-- 300:	e422                	sd	s0,8(sp)
-- 302:	0800                	addi	s0,sp,16
-+ 2f8:	1141                	add	sp,sp,-16
-+ 2fa:	e422                	sd	s0,8(sp)
-+ 2fc:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
-- 304:	ca05                	beqz	a2,334 <memcmp+0x36>
-- 306:	fff6069b          	addiw	a3,a2,-1
-- 30a:	1682                	slli	a3,a3,0x20
-- 30c:	9281                	srli	a3,a3,0x20
-- 30e:	0685                	addi	a3,a3,1
-- 310:	96aa                	add	a3,a3,a0
-+ 2fe:	ca05                	beqz	a2,32e <memcmp+0x36>
-+ 300:	fff6069b          	addw	a3,a2,-1
-+ 304:	1682                	sll	a3,a3,0x20
-+ 306:	9281                	srl	a3,a3,0x20
-+ 308:	0685                	add	a3,a3,1
-+ 30a:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
-- 312:	00054783          	lbu	a5,0(a0)
-- 316:	0005c703          	lbu	a4,0(a1)
-- 31a:	00e79863          	bne	a5,a4,32a <memcmp+0x2c>
-+ 30c:	00054783          	lbu	a5,0(a0)
-+ 310:	0005c703          	lbu	a4,0(a1)
-+ 314:	00e79863          	bne	a5,a4,324 <memcmp+0x2c>
-       return *p1 - *p2;
-     }
-     p1++;
-- 31e:	0505                	addi	a0,a0,1
-+ 318:	0505                	add	a0,a0,1
-     p2++;
-- 320:	0585                	addi	a1,a1,1
-+ 31a:	0585                	add	a1,a1,1
-   while (n-- > 0) {
-- 322:	fed518e3          	bne	a0,a3,312 <memcmp+0x14>
-+ 31c:	fed518e3          	bne	a0,a3,30c <memcmp+0x14>
-   }
-   return 0;
-- 326:	4501                	li	a0,0
-- 328:	a019                	j	32e <memcmp+0x30>
-+ 320:	4501                	li	a0,0
-+ 322:	a019                	j	328 <memcmp+0x30>
-       return *p1 - *p2;
-- 32a:	40e7853b          	subw	a0,a5,a4
-+ 324:	40e7853b          	subw	a0,a5,a4
- }
-- 32e:	6422                	ld	s0,8(sp)
-- 330:	0141                	addi	sp,sp,16
-- 332:	8082                	ret
-+ 328:	6422                	ld	s0,8(sp)
-+ 32a:	0141                	add	sp,sp,16
-+ 32c:	8082                	ret
-   return 0;
-- 334:	4501                	li	a0,0
-- 336:	bfe5                	j	32e <memcmp+0x30>
-+ 32e:	4501                	li	a0,0
-+ 330:	bfe5                	j	328 <memcmp+0x30>
- 
--0000000000000338 <memcpy>:
-+0000000000000332 <memcpy>:
- 
- void *
- memcpy(void *dst, const void *src, uint n)
- {
-- 338:	1141                	addi	sp,sp,-16
-- 33a:	e406                	sd	ra,8(sp)
-- 33c:	e022                	sd	s0,0(sp)
-- 33e:	0800                	addi	s0,sp,16
-+ 332:	1141                	add	sp,sp,-16
-+ 334:	e406                	sd	ra,8(sp)
-+ 336:	e022                	sd	s0,0(sp)
-+ 338:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
-- 340:	f67ff0ef          	jal	2a6 <memmove>
-+ 33a:	f67ff0ef          	jal	2a0 <memmove>
- }
-- 344:	60a2                	ld	ra,8(sp)
-- 346:	6402                	ld	s0,0(sp)
-- 348:	0141                	addi	sp,sp,16
-- 34a:	8082                	ret
-+ 33e:	60a2                	ld	ra,8(sp)
-+ 340:	6402                	ld	s0,0(sp)
-+ 342:	0141                	add	sp,sp,16
-+ 344:	8082                	ret
- 
--000000000000034c <fork>:
-+0000000000000346 <fork>:
- # generated by usys.pl - do not edit
- #include "kernel/syscall.h"
- .global fork
- fork:
-  li a7, SYS_fork
-- 34c:	4885                	li	a7,1
-+ 346:	4885                	li	a7,1
-  ecall
-- 34e:	00000073          	ecall
-+ 348:	00000073          	ecall
-  ret
-- 352:	8082                	ret
-+ 34c:	8082                	ret
- 
--0000000000000354 <exit>:
-+000000000000034e <exit>:
- .global exit
- exit:
-  li a7, SYS_exit
-- 354:	4889                	li	a7,2
-+ 34e:	4889                	li	a7,2
-  ecall
-- 356:	00000073          	ecall
-+ 350:	00000073          	ecall
-  ret
-- 35a:	8082                	ret
-+ 354:	8082                	ret
- 
--000000000000035c <wait>:
-+0000000000000356 <wait>:
- .global wait
- wait:
-  li a7, SYS_wait
-- 35c:	488d                	li	a7,3
-+ 356:	488d                	li	a7,3
-  ecall
-- 35e:	00000073          	ecall
-+ 358:	00000073          	ecall
-  ret
-- 362:	8082                	ret
-+ 35c:	8082                	ret
- 
--0000000000000364 <pipe>:
-+000000000000035e <pipe>:
- .global pipe
- pipe:
-  li a7, SYS_pipe
-- 364:	4891                	li	a7,4
-+ 35e:	4891                	li	a7,4
-  ecall
-- 366:	00000073          	ecall
-+ 360:	00000073          	ecall
-  ret
-- 36a:	8082                	ret
-+ 364:	8082                	ret
- 
--000000000000036c <read>:
-+0000000000000366 <read>:
- .global read
- read:
-  li a7, SYS_read
-- 36c:	4895                	li	a7,5
-+ 366:	4895                	li	a7,5
-  ecall
-- 36e:	00000073          	ecall
-+ 368:	00000073          	ecall
-  ret
-- 372:	8082                	ret
-+ 36c:	8082                	ret
- 
--0000000000000374 <write>:
-+000000000000036e <write>:
- .global write
- write:
-  li a7, SYS_write
-- 374:	48c1                	li	a7,16
-+ 36e:	48c1                	li	a7,16
-  ecall
-- 376:	00000073          	ecall
-+ 370:	00000073          	ecall
-  ret
-- 37a:	8082                	ret
-+ 374:	8082                	ret
- 
--000000000000037c <close>:
-+0000000000000376 <close>:
- .global close
- close:
-  li a7, SYS_close
-- 37c:	48d5                	li	a7,21
-+ 376:	48d5                	li	a7,21
-  ecall
-- 37e:	00000073          	ecall
-+ 378:	00000073          	ecall
-  ret
-- 382:	8082                	ret
-+ 37c:	8082                	ret
- 
--0000000000000384 <kill>:
-+000000000000037e <kill>:
- .global kill
- kill:
-  li a7, SYS_kill
-- 384:	4899                	li	a7,6
-+ 37e:	4899                	li	a7,6
-  ecall
-- 386:	00000073          	ecall
-+ 380:	00000073          	ecall
-  ret
-- 38a:	8082                	ret
-+ 384:	8082                	ret
- 
--000000000000038c <exec>:
-+0000000000000386 <exec>:
- .global exec
- exec:
-  li a7, SYS_exec
-- 38c:	489d                	li	a7,7
-+ 386:	489d                	li	a7,7
-  ecall
-- 38e:	00000073          	ecall
-+ 388:	00000073          	ecall
-  ret
-- 392:	8082                	ret
-+ 38c:	8082                	ret
- 
--0000000000000394 <open>:
-+000000000000038e <open>:
- .global open
- open:
-  li a7, SYS_open
-- 394:	48bd                	li	a7,15
-+ 38e:	48bd                	li	a7,15
-  ecall
-- 396:	00000073          	ecall
-+ 390:	00000073          	ecall
-  ret
-- 39a:	8082                	ret
-+ 394:	8082                	ret
- 
--000000000000039c <mknod>:
-+0000000000000396 <mknod>:
- .global mknod
- mknod:
-  li a7, SYS_mknod
-- 39c:	48c5                	li	a7,17
-+ 396:	48c5                	li	a7,17
-  ecall
-- 39e:	00000073          	ecall
-+ 398:	00000073          	ecall
-  ret
-- 3a2:	8082                	ret
-+ 39c:	8082                	ret
- 
--00000000000003a4 <unlink>:
-+000000000000039e <unlink>:
- .global unlink
- unlink:
-  li a7, SYS_unlink
-- 3a4:	48c9                	li	a7,18
-+ 39e:	48c9                	li	a7,18
-  ecall
-- 3a6:	00000073          	ecall
-+ 3a0:	00000073          	ecall
-  ret
-- 3aa:	8082                	ret
-+ 3a4:	8082                	ret
- 
--00000000000003ac <fstat>:
-+00000000000003a6 <fstat>:
- .global fstat
- fstat:
-  li a7, SYS_fstat
-- 3ac:	48a1                	li	a7,8
-+ 3a6:	48a1                	li	a7,8
-  ecall
-- 3ae:	00000073          	ecall
-+ 3a8:	00000073          	ecall
-  ret
-- 3b2:	8082                	ret
-+ 3ac:	8082                	ret
- 
--00000000000003b4 <link>:
-+00000000000003ae <link>:
- .global link
- link:
-  li a7, SYS_link
-- 3b4:	48cd                	li	a7,19
-+ 3ae:	48cd                	li	a7,19
-  ecall
-- 3b6:	00000073          	ecall
-+ 3b0:	00000073          	ecall
-  ret
-- 3ba:	8082                	ret
-+ 3b4:	8082                	ret
- 
--00000000000003bc <mkdir>:
-+00000000000003b6 <mkdir>:
- .global mkdir
- mkdir:
-  li a7, SYS_mkdir
-- 3bc:	48d1                	li	a7,20
-+ 3b6:	48d1                	li	a7,20
-  ecall
-- 3be:	00000073          	ecall
-+ 3b8:	00000073          	ecall
-  ret
-- 3c2:	8082                	ret
-+ 3bc:	8082                	ret
- 
--00000000000003c4 <chdir>:
-+00000000000003be <chdir>:
- .global chdir
- chdir:
-  li a7, SYS_chdir
-- 3c4:	48a5                	li	a7,9
-+ 3be:	48a5                	li	a7,9
-  ecall
-- 3c6:	00000073          	ecall
-+ 3c0:	00000073          	ecall
-  ret
-- 3ca:	8082                	ret
-+ 3c4:	8082                	ret
- 
--00000000000003cc <dup>:
-+00000000000003c6 <dup>:
- .global dup
- dup:
-  li a7, SYS_dup
-- 3cc:	48a9                	li	a7,10
-+ 3c6:	48a9                	li	a7,10
-  ecall
-- 3ce:	00000073          	ecall
-+ 3c8:	00000073          	ecall
-  ret
-- 3d2:	8082                	ret
-+ 3cc:	8082                	ret
- 
--00000000000003d4 <getpid>:
-+00000000000003ce <getpid>:
- .global getpid
- getpid:
-  li a7, SYS_getpid
-- 3d4:	48ad                	li	a7,11
-+ 3ce:	48ad                	li	a7,11
-  ecall
-- 3d6:	00000073          	ecall
-+ 3d0:	00000073          	ecall
-  ret
-- 3da:	8082                	ret
-+ 3d4:	8082                	ret
- 
--00000000000003dc <sbrk>:
-+00000000000003d6 <sbrk>:
- .global sbrk
- sbrk:
-  li a7, SYS_sbrk
-- 3dc:	48b1                	li	a7,12
-+ 3d6:	48b1                	li	a7,12
-  ecall
-- 3de:	00000073          	ecall
-+ 3d8:	00000073          	ecall
-  ret
-- 3e2:	8082                	ret
-+ 3dc:	8082                	ret
- 
--00000000000003e4 <sleep>:
-+00000000000003de <sleep>:
- .global sleep
- sleep:
-  li a7, SYS_sleep
-- 3e4:	48b5                	li	a7,13
-+ 3de:	48b5                	li	a7,13
-  ecall
-- 3e6:	00000073          	ecall
-+ 3e0:	00000073          	ecall
-  ret
-- 3ea:	8082                	ret
-+ 3e4:	8082                	ret
- 
--00000000000003ec <uptime>:
-+00000000000003e6 <uptime>:
- .global uptime
- uptime:
-  li a7, SYS_uptime
-- 3ec:	48b9                	li	a7,14
-+ 3e6:	48b9                	li	a7,14
-  ecall
-- 3ee:	00000073          	ecall
-+ 3e8:	00000073          	ecall
-  ret
-- 3f2:	8082                	ret
-+ 3ec:	8082                	ret
- 
--00000000000003f4 <putc>:
-+00000000000003ee <putc>:
- 
- static char digits[] = "0123456789ABCDEF";
- 
- static void
- putc(int fd, char c)
- {
-- 3f4:	1101                	addi	sp,sp,-32
-- 3f6:	ec06                	sd	ra,24(sp)
-- 3f8:	e822                	sd	s0,16(sp)
-- 3fa:	1000                	addi	s0,sp,32
-- 3fc:	feb407a3          	sb	a1,-17(s0)
-+ 3ee:	1101                	add	sp,sp,-32
-+ 3f0:	ec06                	sd	ra,24(sp)
-+ 3f2:	e822                	sd	s0,16(sp)
-+ 3f4:	1000                	add	s0,sp,32
-+ 3f6:	feb407a3          	sb	a1,-17(s0)
-   write(fd, &c, 1);
-- 400:	4605                	li	a2,1
-- 402:	fef40593          	addi	a1,s0,-17
-- 406:	f6fff0ef          	jal	374 <write>
-+ 3fa:	4605                	li	a2,1
-+ 3fc:	fef40593          	add	a1,s0,-17
-+ 400:	f6fff0ef          	jal	36e <write>
- }
-- 40a:	60e2                	ld	ra,24(sp)
-- 40c:	6442                	ld	s0,16(sp)
-- 40e:	6105                	addi	sp,sp,32
-- 410:	8082                	ret
-+ 404:	60e2                	ld	ra,24(sp)
-+ 406:	6442                	ld	s0,16(sp)
-+ 408:	6105                	add	sp,sp,32
-+ 40a:	8082                	ret
- 
--0000000000000412 <printint>:
-+000000000000040c <printint>:
- 
- static void
- printint(int fd, int xx, int base, int sgn)
- {
-- 412:	7139                	addi	sp,sp,-64
-- 414:	fc06                	sd	ra,56(sp)
-- 416:	f822                	sd	s0,48(sp)
-- 418:	f426                	sd	s1,40(sp)
-- 41a:	0080                	addi	s0,sp,64
-- 41c:	84aa                	mv	s1,a0
-+ 40c:	7139                	add	sp,sp,-64
-+ 40e:	fc06                	sd	ra,56(sp)
-+ 410:	f822                	sd	s0,48(sp)
-+ 412:	f426                	sd	s1,40(sp)
-+ 414:	f04a                	sd	s2,32(sp)
-+ 416:	ec4e                	sd	s3,24(sp)
-+ 418:	0080                	add	s0,sp,64
-+ 41a:	84aa                	mv	s1,a0
-   char buf[16];
-   int i, neg;
-   uint x;
- 
-   neg = 0;
-   if(sgn && xx < 0){
-- 41e:	c299                	beqz	a3,424 <printint+0x12>
-- 420:	0805c963          	bltz	a1,4b2 <printint+0xa0>
-+ 41c:	c299                	beqz	a3,422 <printint+0x16>
-+ 41e:	0805c763          	bltz	a1,4ac <printint+0xa0>
-     neg = 1;
-     x = -xx;
-   } else {
-     x = xx;
-- 424:	2581                	sext.w	a1,a1
-+ 422:	2581                	sext.w	a1,a1
-   neg = 0;
-- 426:	4881                	li	a7,0
-- 428:	fc040693          	addi	a3,s0,-64
-+ 424:	4881                	li	a7,0
-+ 426:	fc040693          	add	a3,s0,-64
-   }
- 
-   i = 0;
-- 42c:	4701                	li	a4,0
-+ 42a:	4701                	li	a4,0
-   do{
-     buf[i++] = digits[x % base];
-- 42e:	2601                	sext.w	a2,a2
-- 430:	00000517          	auipc	a0,0x0
-- 434:	54050513          	addi	a0,a0,1344 # 970 <digits>
-- 438:	883a                	mv	a6,a4
-- 43a:	2705                	addiw	a4,a4,1
-- 43c:	02c5f7bb          	remuw	a5,a1,a2
-- 440:	1782                	slli	a5,a5,0x20
-- 442:	9381                	srli	a5,a5,0x20
-- 444:	97aa                	add	a5,a5,a0
-- 446:	0007c783          	lbu	a5,0(a5)
-- 44a:	00f68023          	sb	a5,0(a3)
-+ 42c:	2601                	sext.w	a2,a2
-+ 42e:	00000517          	auipc	a0,0x0
-+ 432:	52250513          	add	a0,a0,1314 # 950 <digits>
-+ 436:	883a                	mv	a6,a4
-+ 438:	2705                	addw	a4,a4,1
-+ 43a:	02c5f7bb          	remuw	a5,a1,a2
-+ 43e:	1782                	sll	a5,a5,0x20
-+ 440:	9381                	srl	a5,a5,0x20
-+ 442:	97aa                	add	a5,a5,a0
-+ 444:	0007c783          	lbu	a5,0(a5)
-+ 448:	00f68023          	sb	a5,0(a3)
-   }while((x /= base) != 0);
-- 44e:	0005879b          	sext.w	a5,a1
-- 452:	02c5d5bb          	divuw	a1,a1,a2
-- 456:	0685                	addi	a3,a3,1
-- 458:	fec7f0e3          	bgeu	a5,a2,438 <printint+0x26>
-+ 44c:	0005879b          	sext.w	a5,a1
-+ 450:	02c5d5bb          	divuw	a1,a1,a2
-+ 454:	0685                	add	a3,a3,1
-+ 456:	fec7f0e3          	bgeu	a5,a2,436 <printint+0x2a>
-   if(neg)
-- 45c:	00088c63          	beqz	a7,474 <printint+0x62>
-+ 45a:	00088c63          	beqz	a7,472 <printint+0x66>
-     buf[i++] = '-';
-- 460:	fd070793          	addi	a5,a4,-48
-- 464:	00878733          	add	a4,a5,s0
-- 468:	02d00793          	li	a5,45
-- 46c:	fef70823          	sb	a5,-16(a4)
-- 470:	0028071b          	addiw	a4,a6,2
-+ 45e:	fd070793          	add	a5,a4,-48
-+ 462:	00878733          	add	a4,a5,s0
-+ 466:	02d00793          	li	a5,45
-+ 46a:	fef70823          	sb	a5,-16(a4)
-+ 46e:	0028071b          	addw	a4,a6,2
- 
-   while(--i >= 0)
-- 474:	02e05a63          	blez	a4,4a8 <printint+0x96>
-- 478:	f04a                	sd	s2,32(sp)
-- 47a:	ec4e                	sd	s3,24(sp)
-- 47c:	fc040793          	addi	a5,s0,-64
-- 480:	00e78933          	add	s2,a5,a4
-- 484:	fff78993          	addi	s3,a5,-1
-- 488:	99ba                	add	s3,s3,a4
-- 48a:	377d                	addiw	a4,a4,-1
-- 48c:	1702                	slli	a4,a4,0x20
-- 48e:	9301                	srli	a4,a4,0x20
-- 490:	40e989b3          	sub	s3,s3,a4
-+ 472:	02e05663          	blez	a4,49e <printint+0x92>
-+ 476:	fc040793          	add	a5,s0,-64
-+ 47a:	00e78933          	add	s2,a5,a4
-+ 47e:	fff78993          	add	s3,a5,-1
-+ 482:	99ba                	add	s3,s3,a4
-+ 484:	377d                	addw	a4,a4,-1
-+ 486:	1702                	sll	a4,a4,0x20
-+ 488:	9301                	srl	a4,a4,0x20
-+ 48a:	40e989b3          	sub	s3,s3,a4
-     putc(fd, buf[i]);
-- 494:	fff94583          	lbu	a1,-1(s2)
-- 498:	8526                	mv	a0,s1
-- 49a:	f5bff0ef          	jal	3f4 <putc>
-+ 48e:	fff94583          	lbu	a1,-1(s2)
-+ 492:	8526                	mv	a0,s1
-+ 494:	f5bff0ef          	jal	3ee <putc>
-   while(--i >= 0)
-- 49e:	197d                	addi	s2,s2,-1
-- 4a0:	ff391ae3          	bne	s2,s3,494 <printint+0x82>
-+ 498:	197d                	add	s2,s2,-1
-+ 49a:	ff391ae3          	bne	s2,s3,48e <printint+0x82>
-+}
-+ 49e:	70e2                	ld	ra,56(sp)
-+ 4a0:	7442                	ld	s0,48(sp)
-+ 4a2:	74a2                	ld	s1,40(sp)
-  4a4:	7902                	ld	s2,32(sp)
-  4a6:	69e2                	ld	s3,24(sp)
--}
-- 4a8:	70e2                	ld	ra,56(sp)
-- 4aa:	7442                	ld	s0,48(sp)
-- 4ac:	74a2                	ld	s1,40(sp)
-- 4ae:	6121                	addi	sp,sp,64
-- 4b0:	8082                	ret
-+ 4a8:	6121                	add	sp,sp,64
-+ 4aa:	8082                	ret
-     x = -xx;
-- 4b2:	40b005bb          	negw	a1,a1
-+ 4ac:	40b005bb          	negw	a1,a1
-     neg = 1;
-- 4b6:	4885                	li	a7,1
-+ 4b0:	4885                	li	a7,1
-     x = -xx;
-- 4b8:	bf85                	j	428 <printint+0x16>
-+ 4b2:	bf95                	j	426 <printint+0x1a>
- 
--00000000000004ba <vprintf>:
-+00000000000004b4 <vprintf>:
- }
- 
- /* Print to the given fd. Only understands %d, %x, %p, %s. */
- void
- vprintf(int fd, const char *fmt, va_list ap)
- {
-- 4ba:	711d                	addi	sp,sp,-96
-- 4bc:	ec86                	sd	ra,88(sp)
-- 4be:	e8a2                	sd	s0,80(sp)
-- 4c0:	e0ca                	sd	s2,64(sp)
-- 4c2:	1080                	addi	s0,sp,96
-+ 4b4:	711d                	add	sp,sp,-96
-+ 4b6:	ec86                	sd	ra,88(sp)
-+ 4b8:	e8a2                	sd	s0,80(sp)
-+ 4ba:	e4a6                	sd	s1,72(sp)
-+ 4bc:	e0ca                	sd	s2,64(sp)
-+ 4be:	fc4e                	sd	s3,56(sp)
-+ 4c0:	f852                	sd	s4,48(sp)
-+ 4c2:	f456                	sd	s5,40(sp)
-+ 4c4:	f05a                	sd	s6,32(sp)
-+ 4c6:	ec5e                	sd	s7,24(sp)
-+ 4c8:	e862                	sd	s8,16(sp)
-+ 4ca:	e466                	sd	s9,8(sp)
-+ 4cc:	e06a                	sd	s10,0(sp)
-+ 4ce:	1080                	add	s0,sp,96
-   char *s;
-   int c0, c1, c2, i, state;
- 
-   state = 0;
-   for(i = 0; fmt[i]; i++){
-- 4c4:	0005c903          	lbu	s2,0(a1)
-- 4c8:	26090863          	beqz	s2,738 <vprintf+0x27e>
-- 4cc:	e4a6                	sd	s1,72(sp)
-- 4ce:	fc4e                	sd	s3,56(sp)
-- 4d0:	f852                	sd	s4,48(sp)
-- 4d2:	f456                	sd	s5,40(sp)
-- 4d4:	f05a                	sd	s6,32(sp)
-- 4d6:	ec5e                	sd	s7,24(sp)
-- 4d8:	e862                	sd	s8,16(sp)
-- 4da:	e466                	sd	s9,8(sp)
-- 4dc:	8b2a                	mv	s6,a0
-- 4de:	8a2e                	mv	s4,a1
-- 4e0:	8bb2                	mv	s7,a2
-+ 4d0:	0005c903          	lbu	s2,0(a1)
-+ 4d4:	24090763          	beqz	s2,722 <vprintf+0x26e>
-+ 4d8:	8b2a                	mv	s6,a0
-+ 4da:	8a2e                	mv	s4,a1
-+ 4dc:	8bb2                	mv	s7,a2
-   state = 0;
-- 4e2:	4981                	li	s3,0
-+ 4de:	4981                	li	s3,0
-   for(i = 0; fmt[i]; i++){
-- 4e4:	4481                	li	s1,0
-- 4e6:	4701                	li	a4,0
-+ 4e0:	4481                	li	s1,0
-+ 4e2:	4701                	li	a4,0
-       if(c0 == '%'){
-         state = '%';
-       } else {
-         putc(fd, c0);
-       }
-     } else if(state == '%'){
-- 4e8:	02500a93          	li	s5,37
-+ 4e4:	02500a93          	li	s5,37
-       c1 = c2 = 0;
-       if(c0) c1 = fmt[i+1] & 0xff;
-       if(c1) c2 = fmt[i+2] & 0xff;
-       if(c0 == 'd'){
-- 4ec:	06400c13          	li	s8,100
-+ 4e8:	06400c13          	li	s8,100
-         printint(fd, va_arg(ap, int), 10, 1);
-       } else if(c0 == 'l' && c1 == 'd'){
-- 4f0:	06c00c93          	li	s9,108
-- 4f4:	a005                	j	514 <vprintf+0x5a>
-+ 4ec:	06c00c93          	li	s9,108
-+ 4f0:	a005                	j	510 <vprintf+0x5c>
-         putc(fd, c0);
-- 4f6:	85ca                	mv	a1,s2
-- 4f8:	855a                	mv	a0,s6
-- 4fa:	efbff0ef          	jal	3f4 <putc>
-- 4fe:	a019                	j	504 <vprintf+0x4a>
-+ 4f2:	85ca                	mv	a1,s2
-+ 4f4:	855a                	mv	a0,s6
-+ 4f6:	ef9ff0ef          	jal	3ee <putc>
-+ 4fa:	a019                	j	500 <vprintf+0x4c>
-     } else if(state == '%'){
-- 500:	03598263          	beq	s3,s5,524 <vprintf+0x6a>
-+ 4fc:	03598263          	beq	s3,s5,520 <vprintf+0x6c>
-   for(i = 0; fmt[i]; i++){
-- 504:	2485                	addiw	s1,s1,1
-- 506:	8726                	mv	a4,s1
-- 508:	009a07b3          	add	a5,s4,s1
-- 50c:	0007c903          	lbu	s2,0(a5)
-- 510:	20090c63          	beqz	s2,728 <vprintf+0x26e>
-+ 500:	2485                	addw	s1,s1,1
-+ 502:	8726                	mv	a4,s1
-+ 504:	009a07b3          	add	a5,s4,s1
-+ 508:	0007c903          	lbu	s2,0(a5)
-+ 50c:	20090b63          	beqz	s2,722 <vprintf+0x26e>
-     c0 = fmt[i] & 0xff;
-- 514:	0009079b          	sext.w	a5,s2
-+ 510:	0009079b          	sext.w	a5,s2
-     if(state == 0){
-- 518:	fe0994e3          	bnez	s3,500 <vprintf+0x46>
-+ 514:	fe0994e3          	bnez	s3,4fc <vprintf+0x48>
-       if(c0 == '%'){
-- 51c:	fd579de3          	bne	a5,s5,4f6 <vprintf+0x3c>
-+ 518:	fd579de3          	bne	a5,s5,4f2 <vprintf+0x3e>
-         state = '%';
-- 520:	89be                	mv	s3,a5
-- 522:	b7cd                	j	504 <vprintf+0x4a>
-+ 51c:	89be                	mv	s3,a5
-+ 51e:	b7cd                	j	500 <vprintf+0x4c>
-       if(c0) c1 = fmt[i+1] & 0xff;
-- 524:	00ea06b3          	add	a3,s4,a4
-- 528:	0016c683          	lbu	a3,1(a3)
-+ 520:	c7c9                	beqz	a5,5aa <vprintf+0xf6>
-+ 522:	00ea06b3          	add	a3,s4,a4
-+ 526:	0016c683          	lbu	a3,1(a3)
-       c1 = c2 = 0;
-- 52c:	8636                	mv	a2,a3
-+ 52a:	8636                	mv	a2,a3
-       if(c1) c2 = fmt[i+2] & 0xff;
-- 52e:	c681                	beqz	a3,536 <vprintf+0x7c>
-- 530:	9752                	add	a4,a4,s4
-- 532:	00274603          	lbu	a2,2(a4)
-+ 52c:	c681                	beqz	a3,534 <vprintf+0x80>
-+ 52e:	9752                	add	a4,a4,s4
-+ 530:	00274603          	lbu	a2,2(a4)
-       if(c0 == 'd'){
-- 536:	03878f63          	beq	a5,s8,574 <vprintf+0xba>
-+ 534:	03878f63          	beq	a5,s8,572 <vprintf+0xbe>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 53a:	05978963          	beq	a5,s9,58c <vprintf+0xd2>
-+ 538:	05978963          	beq	a5,s9,58a <vprintf+0xd6>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 2;
-       } else if(c0 == 'u'){
-- 53e:	07500713          	li	a4,117
-- 542:	0ee78363          	beq	a5,a4,628 <vprintf+0x16e>
-+ 53c:	07500713          	li	a4,117
-+ 540:	0ee78363          	beq	a5,a4,626 <vprintf+0x172>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 2;
-       } else if(c0 == 'x'){
-- 546:	07800713          	li	a4,120
-- 54a:	12e78563          	beq	a5,a4,674 <vprintf+0x1ba>
-+ 544:	07800713          	li	a4,120
-+ 548:	12e78563          	beq	a5,a4,672 <vprintf+0x1be>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 2;
-       } else if(c0 == 'p'){
-- 54e:	07000713          	li	a4,112
-- 552:	14e78a63          	beq	a5,a4,6a6 <vprintf+0x1ec>
-+ 54c:	07000713          	li	a4,112
-+ 550:	14e78a63          	beq	a5,a4,6a4 <vprintf+0x1f0>
-         printptr(fd, va_arg(ap, uint64));
-       } else if(c0 == 's'){
-- 556:	07300713          	li	a4,115
-- 55a:	18e78a63          	beq	a5,a4,6ee <vprintf+0x234>
-+ 554:	07300713          	li	a4,115
-+ 558:	18e78863          	beq	a5,a4,6e8 <vprintf+0x234>
-         if((s = va_arg(ap, char*)) == 0)
-           s = "(null)";
-         for(; *s; s++)
-           putc(fd, *s);
-       } else if(c0 == '%'){
-- 55e:	02500713          	li	a4,37
-- 562:	04e79563          	bne	a5,a4,5ac <vprintf+0xf2>
-+ 55c:	02500713          	li	a4,37
-+ 560:	04e79563          	bne	a5,a4,5aa <vprintf+0xf6>
-         putc(fd, '%');
-- 566:	02500593          	li	a1,37
-- 56a:	855a                	mv	a0,s6
-- 56c:	e89ff0ef          	jal	3f4 <putc>
-+ 564:	02500593          	li	a1,37
-+ 568:	855a                	mv	a0,s6
-+ 56a:	e85ff0ef          	jal	3ee <putc>
-         /* Unknown % sequence.  Print it to draw attention. */
-         putc(fd, '%');
-         putc(fd, c);
-       }
- #endif
-       state = 0;
-- 570:	4981                	li	s3,0
-- 572:	bf49                	j	504 <vprintf+0x4a>
-+ 56e:	4981                	li	s3,0
-+ 570:	bf41                	j	500 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 1);
-- 574:	008b8913          	addi	s2,s7,8
-- 578:	4685                	li	a3,1
-- 57a:	4629                	li	a2,10
-- 57c:	000ba583          	lw	a1,0(s7)
-- 580:	855a                	mv	a0,s6
-- 582:	e91ff0ef          	jal	412 <printint>
-- 586:	8bca                	mv	s7,s2
-+ 572:	008b8913          	add	s2,s7,8
-+ 576:	4685                	li	a3,1
-+ 578:	4629                	li	a2,10
-+ 57a:	000ba583          	lw	a1,0(s7)
-+ 57e:	855a                	mv	a0,s6
-+ 580:	e8dff0ef          	jal	40c <printint>
-+ 584:	8bca                	mv	s7,s2
-       state = 0;
-- 588:	4981                	li	s3,0
-- 58a:	bfad                	j	504 <vprintf+0x4a>
-+ 586:	4981                	li	s3,0
-+ 588:	bfa5                	j	500 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 58c:	06400793          	li	a5,100
-- 590:	02f68963          	beq	a3,a5,5c2 <vprintf+0x108>
-+ 58a:	06400793          	li	a5,100
-+ 58e:	02f68963          	beq	a3,a5,5c0 <vprintf+0x10c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 594:	06c00793          	li	a5,108
-- 598:	04f68263          	beq	a3,a5,5dc <vprintf+0x122>
-+ 592:	06c00793          	li	a5,108
-+ 596:	04f68263          	beq	a3,a5,5da <vprintf+0x126>
-       } else if(c0 == 'l' && c1 == 'u'){
-- 59c:	07500793          	li	a5,117
-- 5a0:	0af68063          	beq	a3,a5,640 <vprintf+0x186>
-+ 59a:	07500793          	li	a5,117
-+ 59e:	0af68063          	beq	a3,a5,63e <vprintf+0x18a>
-       } else if(c0 == 'l' && c1 == 'x'){
-- 5a4:	07800793          	li	a5,120
-- 5a8:	0ef68263          	beq	a3,a5,68c <vprintf+0x1d2>
-+ 5a2:	07800793          	li	a5,120
-+ 5a6:	0ef68263          	beq	a3,a5,68a <vprintf+0x1d6>
-         putc(fd, '%');
-- 5ac:	02500593          	li	a1,37
-- 5b0:	855a                	mv	a0,s6
-- 5b2:	e43ff0ef          	jal	3f4 <putc>
-+ 5aa:	02500593          	li	a1,37
-+ 5ae:	855a                	mv	a0,s6
-+ 5b0:	e3fff0ef          	jal	3ee <putc>
-         putc(fd, c0);
-- 5b6:	85ca                	mv	a1,s2
-- 5b8:	855a                	mv	a0,s6
-- 5ba:	e3bff0ef          	jal	3f4 <putc>
-+ 5b4:	85ca                	mv	a1,s2
-+ 5b6:	855a                	mv	a0,s6
-+ 5b8:	e37ff0ef          	jal	3ee <putc>
-       state = 0;
-- 5be:	4981                	li	s3,0
-- 5c0:	b791                	j	504 <vprintf+0x4a>
-+ 5bc:	4981                	li	s3,0
-+ 5be:	b789                	j	500 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 5c2:	008b8913          	addi	s2,s7,8
-- 5c6:	4685                	li	a3,1
-- 5c8:	4629                	li	a2,10
-- 5ca:	000ba583          	lw	a1,0(s7)
-- 5ce:	855a                	mv	a0,s6
-- 5d0:	e43ff0ef          	jal	412 <printint>
-+ 5c0:	008b8913          	add	s2,s7,8
-+ 5c4:	4685                	li	a3,1
-+ 5c6:	4629                	li	a2,10
-+ 5c8:	000ba583          	lw	a1,0(s7)
-+ 5cc:	855a                	mv	a0,s6
-+ 5ce:	e3fff0ef          	jal	40c <printint>
-         i += 1;
-- 5d4:	2485                	addiw	s1,s1,1
-+ 5d2:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 5d6:	8bca                	mv	s7,s2
-+ 5d4:	8bca                	mv	s7,s2
-       state = 0;
-- 5d8:	4981                	li	s3,0
-+ 5d6:	4981                	li	s3,0
-         i += 1;
-- 5da:	b72d                	j	504 <vprintf+0x4a>
-+ 5d8:	b725                	j	500 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 5dc:	06400793          	li	a5,100
-- 5e0:	02f60763          	beq	a2,a5,60e <vprintf+0x154>
-+ 5da:	06400793          	li	a5,100
-+ 5de:	02f60763          	beq	a2,a5,60c <vprintf+0x158>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-- 5e4:	07500793          	li	a5,117
-- 5e8:	06f60963          	beq	a2,a5,65a <vprintf+0x1a0>
-+ 5e2:	07500793          	li	a5,117
-+ 5e6:	06f60963          	beq	a2,a5,658 <vprintf+0x1a4>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-- 5ec:	07800793          	li	a5,120
-- 5f0:	faf61ee3          	bne	a2,a5,5ac <vprintf+0xf2>
-+ 5ea:	07800793          	li	a5,120
-+ 5ee:	faf61ee3          	bne	a2,a5,5aa <vprintf+0xf6>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 5f4:	008b8913          	addi	s2,s7,8
-- 5f8:	4681                	li	a3,0
-- 5fa:	4641                	li	a2,16
-- 5fc:	000ba583          	lw	a1,0(s7)
-- 600:	855a                	mv	a0,s6
-- 602:	e11ff0ef          	jal	412 <printint>
-+ 5f2:	008b8913          	add	s2,s7,8
-+ 5f6:	4681                	li	a3,0
-+ 5f8:	4641                	li	a2,16
-+ 5fa:	000ba583          	lw	a1,0(s7)
-+ 5fe:	855a                	mv	a0,s6
-+ 600:	e0dff0ef          	jal	40c <printint>
-         i += 2;
-- 606:	2489                	addiw	s1,s1,2
-+ 604:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 608:	8bca                	mv	s7,s2
-+ 606:	8bca                	mv	s7,s2
-       state = 0;
-- 60a:	4981                	li	s3,0
-+ 608:	4981                	li	s3,0
-         i += 2;
-- 60c:	bde5                	j	504 <vprintf+0x4a>
-+ 60a:	bddd                	j	500 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 60e:	008b8913          	addi	s2,s7,8
-- 612:	4685                	li	a3,1
-- 614:	4629                	li	a2,10
-- 616:	000ba583          	lw	a1,0(s7)
-- 61a:	855a                	mv	a0,s6
-- 61c:	df7ff0ef          	jal	412 <printint>
-+ 60c:	008b8913          	add	s2,s7,8
-+ 610:	4685                	li	a3,1
-+ 612:	4629                	li	a2,10
-+ 614:	000ba583          	lw	a1,0(s7)
-+ 618:	855a                	mv	a0,s6
-+ 61a:	df3ff0ef          	jal	40c <printint>
-         i += 2;
-- 620:	2489                	addiw	s1,s1,2
-+ 61e:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 622:	8bca                	mv	s7,s2
-+ 620:	8bca                	mv	s7,s2
-       state = 0;
-- 624:	4981                	li	s3,0
-+ 622:	4981                	li	s3,0
-         i += 2;
-- 626:	bdf9                	j	504 <vprintf+0x4a>
-+ 624:	bdf1                	j	500 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 0);
-- 628:	008b8913          	addi	s2,s7,8
-- 62c:	4681                	li	a3,0
-- 62e:	4629                	li	a2,10
-- 630:	000ba583          	lw	a1,0(s7)
-- 634:	855a                	mv	a0,s6
-- 636:	dddff0ef          	jal	412 <printint>
-- 63a:	8bca                	mv	s7,s2
-+ 626:	008b8913          	add	s2,s7,8
-+ 62a:	4681                	li	a3,0
-+ 62c:	4629                	li	a2,10
-+ 62e:	000ba583          	lw	a1,0(s7)
-+ 632:	855a                	mv	a0,s6
-+ 634:	dd9ff0ef          	jal	40c <printint>
-+ 638:	8bca                	mv	s7,s2
-       state = 0;
-- 63c:	4981                	li	s3,0
-- 63e:	b5d9                	j	504 <vprintf+0x4a>
-+ 63a:	4981                	li	s3,0
-+ 63c:	b5d1                	j	500 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 640:	008b8913          	addi	s2,s7,8
-- 644:	4681                	li	a3,0
-- 646:	4629                	li	a2,10
-- 648:	000ba583          	lw	a1,0(s7)
-- 64c:	855a                	mv	a0,s6
-- 64e:	dc5ff0ef          	jal	412 <printint>
-+ 63e:	008b8913          	add	s2,s7,8
-+ 642:	4681                	li	a3,0
-+ 644:	4629                	li	a2,10
-+ 646:	000ba583          	lw	a1,0(s7)
-+ 64a:	855a                	mv	a0,s6
-+ 64c:	dc1ff0ef          	jal	40c <printint>
-         i += 1;
-- 652:	2485                	addiw	s1,s1,1
-+ 650:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 654:	8bca                	mv	s7,s2
-+ 652:	8bca                	mv	s7,s2
-       state = 0;
-- 656:	4981                	li	s3,0
-+ 654:	4981                	li	s3,0
-         i += 1;
-- 658:	b575                	j	504 <vprintf+0x4a>
-+ 656:	b56d                	j	500 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 65a:	008b8913          	addi	s2,s7,8
-- 65e:	4681                	li	a3,0
-- 660:	4629                	li	a2,10
-- 662:	000ba583          	lw	a1,0(s7)
-- 666:	855a                	mv	a0,s6
-- 668:	dabff0ef          	jal	412 <printint>
-+ 658:	008b8913          	add	s2,s7,8
-+ 65c:	4681                	li	a3,0
-+ 65e:	4629                	li	a2,10
-+ 660:	000ba583          	lw	a1,0(s7)
-+ 664:	855a                	mv	a0,s6
-+ 666:	da7ff0ef          	jal	40c <printint>
-         i += 2;
-- 66c:	2489                	addiw	s1,s1,2
-+ 66a:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 66e:	8bca                	mv	s7,s2
-+ 66c:	8bca                	mv	s7,s2
-       state = 0;
-- 670:	4981                	li	s3,0
-+ 66e:	4981                	li	s3,0
-         i += 2;
-- 672:	bd49                	j	504 <vprintf+0x4a>
-+ 670:	bd41                	j	500 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 16, 0);
-- 674:	008b8913          	addi	s2,s7,8
-- 678:	4681                	li	a3,0
-- 67a:	4641                	li	a2,16
-- 67c:	000ba583          	lw	a1,0(s7)
-- 680:	855a                	mv	a0,s6
-- 682:	d91ff0ef          	jal	412 <printint>
-- 686:	8bca                	mv	s7,s2
-+ 672:	008b8913          	add	s2,s7,8
-+ 676:	4681                	li	a3,0
-+ 678:	4641                	li	a2,16
-+ 67a:	000ba583          	lw	a1,0(s7)
-+ 67e:	855a                	mv	a0,s6
-+ 680:	d8dff0ef          	jal	40c <printint>
-+ 684:	8bca                	mv	s7,s2
-       state = 0;
-- 688:	4981                	li	s3,0
-- 68a:	bdad                	j	504 <vprintf+0x4a>
-+ 686:	4981                	li	s3,0
-+ 688:	bda5                	j	500 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 68c:	008b8913          	addi	s2,s7,8
-- 690:	4681                	li	a3,0
-- 692:	4641                	li	a2,16
-- 694:	000ba583          	lw	a1,0(s7)
-- 698:	855a                	mv	a0,s6
-- 69a:	d79ff0ef          	jal	412 <printint>
-+ 68a:	008b8913          	add	s2,s7,8
-+ 68e:	4681                	li	a3,0
-+ 690:	4641                	li	a2,16
-+ 692:	000ba583          	lw	a1,0(s7)
-+ 696:	855a                	mv	a0,s6
-+ 698:	d75ff0ef          	jal	40c <printint>
-         i += 1;
-- 69e:	2485                	addiw	s1,s1,1
-+ 69c:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 6a0:	8bca                	mv	s7,s2
-+ 69e:	8bca                	mv	s7,s2
-       state = 0;
-- 6a2:	4981                	li	s3,0
-+ 6a0:	4981                	li	s3,0
-         i += 1;
-- 6a4:	b585                	j	504 <vprintf+0x4a>
-- 6a6:	e06a                	sd	s10,0(sp)
-+ 6a2:	bdb9                	j	500 <vprintf+0x4c>
-         printptr(fd, va_arg(ap, uint64));
-- 6a8:	008b8d13          	addi	s10,s7,8
-- 6ac:	000bb983          	ld	s3,0(s7)
-+ 6a4:	008b8d13          	add	s10,s7,8
-+ 6a8:	000bb983          	ld	s3,0(s7)
-   putc(fd, '0');
-- 6b0:	03000593          	li	a1,48
-- 6b4:	855a                	mv	a0,s6
-- 6b6:	d3fff0ef          	jal	3f4 <putc>
-+ 6ac:	03000593          	li	a1,48
-+ 6b0:	855a                	mv	a0,s6
-+ 6b2:	d3dff0ef          	jal	3ee <putc>
-   putc(fd, 'x');
-- 6ba:	07800593          	li	a1,120
-- 6be:	855a                	mv	a0,s6
-- 6c0:	d35ff0ef          	jal	3f4 <putc>
-- 6c4:	4941                	li	s2,16
-+ 6b6:	07800593          	li	a1,120
-+ 6ba:	855a                	mv	a0,s6
-+ 6bc:	d33ff0ef          	jal	3ee <putc>
-+ 6c0:	4941                	li	s2,16
-     putc(fd, digits[x >> (sizeof(uint64) * 8 - 4)]);
-- 6c6:	00000b97          	auipc	s7,0x0
-- 6ca:	2aab8b93          	addi	s7,s7,682 # 970 <digits>
-- 6ce:	03c9d793          	srli	a5,s3,0x3c
-- 6d2:	97de                	add	a5,a5,s7
-- 6d4:	0007c583          	lbu	a1,0(a5)
-- 6d8:	855a                	mv	a0,s6
-- 6da:	d1bff0ef          	jal	3f4 <putc>
-+ 6c2:	00000b97          	auipc	s7,0x0
-+ 6c6:	28eb8b93          	add	s7,s7,654 # 950 <digits>
-+ 6ca:	03c9d793          	srl	a5,s3,0x3c
-+ 6ce:	97de                	add	a5,a5,s7
-+ 6d0:	0007c583          	lbu	a1,0(a5)
-+ 6d4:	855a                	mv	a0,s6
-+ 6d6:	d19ff0ef          	jal	3ee <putc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
-- 6de:	0992                	slli	s3,s3,0x4
-- 6e0:	397d                	addiw	s2,s2,-1
-- 6e2:	fe0916e3          	bnez	s2,6ce <vprintf+0x214>
-+ 6da:	0992                	sll	s3,s3,0x4
-+ 6dc:	397d                	addw	s2,s2,-1
-+ 6de:	fe0916e3          	bnez	s2,6ca <vprintf+0x216>
-         printptr(fd, va_arg(ap, uint64));
-- 6e6:	8bea                	mv	s7,s10
-+ 6e2:	8bea                	mv	s7,s10
-       state = 0;
-- 6e8:	4981                	li	s3,0
-- 6ea:	6d02                	ld	s10,0(sp)
-- 6ec:	bd21                	j	504 <vprintf+0x4a>
-+ 6e4:	4981                	li	s3,0
-+ 6e6:	bd29                	j	500 <vprintf+0x4c>
-         if((s = va_arg(ap, char*)) == 0)
-- 6ee:	008b8993          	addi	s3,s7,8
-- 6f2:	000bb903          	ld	s2,0(s7)
-- 6f6:	00090f63          	beqz	s2,714 <vprintf+0x25a>
-+ 6e8:	008b8993          	add	s3,s7,8
-+ 6ec:	000bb903          	ld	s2,0(s7)
-+ 6f0:	00090f63          	beqz	s2,70e <vprintf+0x25a>
-         for(; *s; s++)
-- 6fa:	00094583          	lbu	a1,0(s2)
-- 6fe:	c195                	beqz	a1,722 <vprintf+0x268>
-+ 6f4:	00094583          	lbu	a1,0(s2)
-+ 6f8:	c195                	beqz	a1,71c <vprintf+0x268>
-           putc(fd, *s);
-- 700:	855a                	mv	a0,s6
-- 702:	cf3ff0ef          	jal	3f4 <putc>
-+ 6fa:	855a                	mv	a0,s6
-+ 6fc:	cf3ff0ef          	jal	3ee <putc>
-         for(; *s; s++)
-- 706:	0905                	addi	s2,s2,1
-- 708:	00094583          	lbu	a1,0(s2)
-- 70c:	f9f5                	bnez	a1,700 <vprintf+0x246>
-+ 700:	0905                	add	s2,s2,1
-+ 702:	00094583          	lbu	a1,0(s2)
-+ 706:	f9f5                	bnez	a1,6fa <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-- 70e:	8bce                	mv	s7,s3
-+ 708:	8bce                	mv	s7,s3
-       state = 0;
-- 710:	4981                	li	s3,0
-- 712:	bbcd                	j	504 <vprintf+0x4a>
-+ 70a:	4981                	li	s3,0
-+ 70c:	bbd5                	j	500 <vprintf+0x4c>
-           s = "(null)";
-- 714:	00000917          	auipc	s2,0x0
-- 718:	25490913          	addi	s2,s2,596 # 968 <malloc+0x148>
-+ 70e:	00000917          	auipc	s2,0x0
-+ 712:	23a90913          	add	s2,s2,570 # 948 <malloc+0x12c>
-         for(; *s; s++)
-- 71c:	02800593          	li	a1,40
-- 720:	b7c5                	j	700 <vprintf+0x246>
-+ 716:	02800593          	li	a1,40
-+ 71a:	b7c5                	j	6fa <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-- 722:	8bce                	mv	s7,s3
-+ 71c:	8bce                	mv	s7,s3
-       state = 0;
-- 724:	4981                	li	s3,0
-- 726:	bbf9                	j	504 <vprintf+0x4a>
-- 728:	64a6                	ld	s1,72(sp)
-+ 71e:	4981                	li	s3,0
-+ 720:	b3c5                	j	500 <vprintf+0x4c>
-+    }
-+  }
-+}
-+ 722:	60e6                	ld	ra,88(sp)
-+ 724:	6446                	ld	s0,80(sp)
-+ 726:	64a6                	ld	s1,72(sp)
-+ 728:	6906                	ld	s2,64(sp)
-  72a:	79e2                	ld	s3,56(sp)
-  72c:	7a42                	ld	s4,48(sp)
-  72e:	7aa2                	ld	s5,40(sp)
-@@ -1250,289 +1253,273 @@ vprintf(int fd, const char *fmt, va_list ap)
-  732:	6be2                	ld	s7,24(sp)
-  734:	6c42                	ld	s8,16(sp)
-  736:	6ca2                	ld	s9,8(sp)
--    }
--  }
--}
-- 738:	60e6                	ld	ra,88(sp)
-- 73a:	6446                	ld	s0,80(sp)
-- 73c:	6906                	ld	s2,64(sp)
-- 73e:	6125                	addi	sp,sp,96
-- 740:	8082                	ret
-+ 738:	6d02                	ld	s10,0(sp)
-+ 73a:	6125                	add	sp,sp,96
-+ 73c:	8082                	ret
- 
--0000000000000742 <fprintf>:
-+000000000000073e <fprintf>:
- 
- void
- fprintf(int fd, const char *fmt, ...)
- {
-- 742:	715d                	addi	sp,sp,-80
-- 744:	ec06                	sd	ra,24(sp)
-- 746:	e822                	sd	s0,16(sp)
-- 748:	1000                	addi	s0,sp,32
-- 74a:	e010                	sd	a2,0(s0)
-- 74c:	e414                	sd	a3,8(s0)
-- 74e:	e818                	sd	a4,16(s0)
-- 750:	ec1c                	sd	a5,24(s0)
-- 752:	03043023          	sd	a6,32(s0)
-- 756:	03143423          	sd	a7,40(s0)
-+ 73e:	715d                	add	sp,sp,-80
-+ 740:	ec06                	sd	ra,24(sp)
-+ 742:	e822                	sd	s0,16(sp)
-+ 744:	1000                	add	s0,sp,32
-+ 746:	e010                	sd	a2,0(s0)
-+ 748:	e414                	sd	a3,8(s0)
-+ 74a:	e818                	sd	a4,16(s0)
-+ 74c:	ec1c                	sd	a5,24(s0)
-+ 74e:	03043023          	sd	a6,32(s0)
-+ 752:	03143423          	sd	a7,40(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 75a:	fe843423          	sd	s0,-24(s0)
-+ 756:	fe843423          	sd	s0,-24(s0)
-   vprintf(fd, fmt, ap);
-- 75e:	8622                	mv	a2,s0
-- 760:	d5bff0ef          	jal	4ba <vprintf>
-+ 75a:	8622                	mv	a2,s0
-+ 75c:	d59ff0ef          	jal	4b4 <vprintf>
- }
-- 764:	60e2                	ld	ra,24(sp)
-- 766:	6442                	ld	s0,16(sp)
-- 768:	6161                	addi	sp,sp,80
-- 76a:	8082                	ret
-+ 760:	60e2                	ld	ra,24(sp)
-+ 762:	6442                	ld	s0,16(sp)
-+ 764:	6161                	add	sp,sp,80
-+ 766:	8082                	ret
- 
--000000000000076c <printf>:
-+0000000000000768 <printf>:
- 
- void
- printf(const char *fmt, ...)
- {
-- 76c:	711d                	addi	sp,sp,-96
-- 76e:	ec06                	sd	ra,24(sp)
-- 770:	e822                	sd	s0,16(sp)
-- 772:	1000                	addi	s0,sp,32
-- 774:	e40c                	sd	a1,8(s0)
-- 776:	e810                	sd	a2,16(s0)
-- 778:	ec14                	sd	a3,24(s0)
-- 77a:	f018                	sd	a4,32(s0)
-- 77c:	f41c                	sd	a5,40(s0)
-- 77e:	03043823          	sd	a6,48(s0)
-- 782:	03143c23          	sd	a7,56(s0)
-+ 768:	711d                	add	sp,sp,-96
-+ 76a:	ec06                	sd	ra,24(sp)
-+ 76c:	e822                	sd	s0,16(sp)
-+ 76e:	1000                	add	s0,sp,32
-+ 770:	e40c                	sd	a1,8(s0)
-+ 772:	e810                	sd	a2,16(s0)
-+ 774:	ec14                	sd	a3,24(s0)
-+ 776:	f018                	sd	a4,32(s0)
-+ 778:	f41c                	sd	a5,40(s0)
-+ 77a:	03043823          	sd	a6,48(s0)
-+ 77e:	03143c23          	sd	a7,56(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 786:	00840613          	addi	a2,s0,8
-- 78a:	fec43423          	sd	a2,-24(s0)
-+ 782:	00840613          	add	a2,s0,8
-+ 786:	fec43423          	sd	a2,-24(s0)
-   vprintf(1, fmt, ap);
-- 78e:	85aa                	mv	a1,a0
-- 790:	4505                	li	a0,1
-- 792:	d29ff0ef          	jal	4ba <vprintf>
-+ 78a:	85aa                	mv	a1,a0
-+ 78c:	4505                	li	a0,1
-+ 78e:	d27ff0ef          	jal	4b4 <vprintf>
- }
-- 796:	60e2                	ld	ra,24(sp)
-- 798:	6442                	ld	s0,16(sp)
-- 79a:	6125                	addi	sp,sp,96
-- 79c:	8082                	ret
-+ 792:	60e2                	ld	ra,24(sp)
-+ 794:	6442                	ld	s0,16(sp)
-+ 796:	6125                	add	sp,sp,96
-+ 798:	8082                	ret
- 
--000000000000079e <free>:
-+000000000000079a <free>:
- static Header base;
- static Header *freep;
- 
- void
- free(void *ap)
- {
-- 79e:	1141                	addi	sp,sp,-16
-- 7a0:	e422                	sd	s0,8(sp)
-- 7a2:	0800                	addi	s0,sp,16
-+ 79a:	1141                	add	sp,sp,-16
-+ 79c:	e422                	sd	s0,8(sp)
-+ 79e:	0800                	add	s0,sp,16
-   Header *bp, *p;
- 
-   bp = (Header*)ap - 1;
-- 7a4:	ff050693          	addi	a3,a0,-16
-+ 7a0:	ff050693          	add	a3,a0,-16
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 7a8:	00001797          	auipc	a5,0x1
-- 7ac:	8587b783          	ld	a5,-1960(a5) # 1000 <freep>
-- 7b0:	a02d                	j	7da <free+0x3c>
-+ 7a4:	00001797          	auipc	a5,0x1
-+ 7a8:	85c7b783          	ld	a5,-1956(a5) # 1000 <freep>
-+ 7ac:	a02d                	j	7d6 <free+0x3c>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-       break;
-   if(bp + bp->s.size == p->s.ptr){
-     bp->s.size += p->s.ptr->s.size;
-- 7b2:	4618                	lw	a4,8(a2)
-- 7b4:	9f2d                	addw	a4,a4,a1
-- 7b6:	fee52c23          	sw	a4,-8(a0)
-+ 7ae:	4618                	lw	a4,8(a2)
-+ 7b0:	9f2d                	addw	a4,a4,a1
-+ 7b2:	fee52c23          	sw	a4,-8(a0)
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 7ba:	6398                	ld	a4,0(a5)
-- 7bc:	6310                	ld	a2,0(a4)
-- 7be:	a83d                	j	7fc <free+0x5e>
-+ 7b6:	6398                	ld	a4,0(a5)
-+ 7b8:	6310                	ld	a2,0(a4)
-+ 7ba:	a83d                	j	7f8 <free+0x5e>
-   } else
-     bp->s.ptr = p->s.ptr;
-   if(p + p->s.size == bp){
-     p->s.size += bp->s.size;
-- 7c0:	ff852703          	lw	a4,-8(a0)
-- 7c4:	9f31                	addw	a4,a4,a2
-- 7c6:	c798                	sw	a4,8(a5)
-+ 7bc:	ff852703          	lw	a4,-8(a0)
-+ 7c0:	9f31                	addw	a4,a4,a2
-+ 7c2:	c798                	sw	a4,8(a5)
-     p->s.ptr = bp->s.ptr;
-- 7c8:	ff053683          	ld	a3,-16(a0)
-- 7cc:	a091                	j	810 <free+0x72>
-+ 7c4:	ff053683          	ld	a3,-16(a0)
-+ 7c8:	a091                	j	80c <free+0x72>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 7ce:	6398                	ld	a4,0(a5)
-- 7d0:	00e7e463          	bltu	a5,a4,7d8 <free+0x3a>
-- 7d4:	00e6ea63          	bltu	a3,a4,7e8 <free+0x4a>
-+ 7ca:	6398                	ld	a4,0(a5)
-+ 7cc:	00e7e463          	bltu	a5,a4,7d4 <free+0x3a>
-+ 7d0:	00e6ea63          	bltu	a3,a4,7e4 <free+0x4a>
- {
-- 7d8:	87ba                	mv	a5,a4
-+ 7d4:	87ba                	mv	a5,a4
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 7da:	fed7fae3          	bgeu	a5,a3,7ce <free+0x30>
-- 7de:	6398                	ld	a4,0(a5)
-- 7e0:	00e6e463          	bltu	a3,a4,7e8 <free+0x4a>
-+ 7d6:	fed7fae3          	bgeu	a5,a3,7ca <free+0x30>
-+ 7da:	6398                	ld	a4,0(a5)
-+ 7dc:	00e6e463          	bltu	a3,a4,7e4 <free+0x4a>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 7e4:	fee7eae3          	bltu	a5,a4,7d8 <free+0x3a>
-+ 7e0:	fee7eae3          	bltu	a5,a4,7d4 <free+0x3a>
-   if(bp + bp->s.size == p->s.ptr){
-- 7e8:	ff852583          	lw	a1,-8(a0)
-- 7ec:	6390                	ld	a2,0(a5)
-- 7ee:	02059813          	slli	a6,a1,0x20
-- 7f2:	01c85713          	srli	a4,a6,0x1c
-- 7f6:	9736                	add	a4,a4,a3
-- 7f8:	fae60de3          	beq	a2,a4,7b2 <free+0x14>
-+ 7e4:	ff852583          	lw	a1,-8(a0)
-+ 7e8:	6390                	ld	a2,0(a5)
-+ 7ea:	02059813          	sll	a6,a1,0x20
-+ 7ee:	01c85713          	srl	a4,a6,0x1c
-+ 7f2:	9736                	add	a4,a4,a3
-+ 7f4:	fae60de3          	beq	a2,a4,7ae <free+0x14>
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 7fc:	fec53823          	sd	a2,-16(a0)
-+ 7f8:	fec53823          	sd	a2,-16(a0)
-   if(p + p->s.size == bp){
-- 800:	4790                	lw	a2,8(a5)
-- 802:	02061593          	slli	a1,a2,0x20
-- 806:	01c5d713          	srli	a4,a1,0x1c
-- 80a:	973e                	add	a4,a4,a5
-- 80c:	fae68ae3          	beq	a3,a4,7c0 <free+0x22>
-+ 7fc:	4790                	lw	a2,8(a5)
-+ 7fe:	02061593          	sll	a1,a2,0x20
-+ 802:	01c5d713          	srl	a4,a1,0x1c
-+ 806:	973e                	add	a4,a4,a5
-+ 808:	fae68ae3          	beq	a3,a4,7bc <free+0x22>
-     p->s.ptr = bp->s.ptr;
-- 810:	e394                	sd	a3,0(a5)
-+ 80c:	e394                	sd	a3,0(a5)
-   } else
-     p->s.ptr = bp;
-   freep = p;
-- 812:	00000717          	auipc	a4,0x0
-- 816:	7ef73723          	sd	a5,2030(a4) # 1000 <freep>
-+ 80e:	00000717          	auipc	a4,0x0
-+ 812:	7ef73923          	sd	a5,2034(a4) # 1000 <freep>
- }
-- 81a:	6422                	ld	s0,8(sp)
-- 81c:	0141                	addi	sp,sp,16
-- 81e:	8082                	ret
-+ 816:	6422                	ld	s0,8(sp)
-+ 818:	0141                	add	sp,sp,16
-+ 81a:	8082                	ret
- 
--0000000000000820 <malloc>:
-+000000000000081c <malloc>:
-   return freep;
- }
- 
- void*
- malloc(uint nbytes)
- {
-- 820:	7139                	addi	sp,sp,-64
-- 822:	fc06                	sd	ra,56(sp)
-- 824:	f822                	sd	s0,48(sp)
-- 826:	f426                	sd	s1,40(sp)
-- 828:	ec4e                	sd	s3,24(sp)
-- 82a:	0080                	addi	s0,sp,64
-+ 81c:	7139                	add	sp,sp,-64
-+ 81e:	fc06                	sd	ra,56(sp)
-+ 820:	f822                	sd	s0,48(sp)
-+ 822:	f426                	sd	s1,40(sp)
-+ 824:	f04a                	sd	s2,32(sp)
-+ 826:	ec4e                	sd	s3,24(sp)
-+ 828:	e852                	sd	s4,16(sp)
-+ 82a:	e456                	sd	s5,8(sp)
-+ 82c:	e05a                	sd	s6,0(sp)
-+ 82e:	0080                	add	s0,sp,64
-   Header *p, *prevp;
-   uint nunits;
- 
-   nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;
-- 82c:	02051493          	slli	s1,a0,0x20
-- 830:	9081                	srli	s1,s1,0x20
-- 832:	04bd                	addi	s1,s1,15
-- 834:	8091                	srli	s1,s1,0x4
-- 836:	0014899b          	addiw	s3,s1,1
-- 83a:	0485                	addi	s1,s1,1
-+ 830:	02051493          	sll	s1,a0,0x20
-+ 834:	9081                	srl	s1,s1,0x20
-+ 836:	04bd                	add	s1,s1,15
-+ 838:	8091                	srl	s1,s1,0x4
-+ 83a:	0014899b          	addw	s3,s1,1
-+ 83e:	0485                	add	s1,s1,1
-   if((prevp = freep) == 0){
-- 83c:	00000517          	auipc	a0,0x0
-- 840:	7c453503          	ld	a0,1988(a0) # 1000 <freep>
-- 844:	c915                	beqz	a0,878 <malloc+0x58>
-+ 840:	00000517          	auipc	a0,0x0
-+ 844:	7c053503          	ld	a0,1984(a0) # 1000 <freep>
-+ 848:	c515                	beqz	a0,874 <malloc+0x58>
-     base.s.ptr = freep = prevp = &base;
-     base.s.size = 0;
-   }
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 846:	611c                	ld	a5,0(a0)
-+ 84a:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 848:	4798                	lw	a4,8(a5)
-- 84a:	08977a63          	bgeu	a4,s1,8de <malloc+0xbe>
-- 84e:	f04a                	sd	s2,32(sp)
-- 850:	e852                	sd	s4,16(sp)
-- 852:	e456                	sd	s5,8(sp)
-- 854:	e05a                	sd	s6,0(sp)
-+ 84c:	4798                	lw	a4,8(a5)
-+ 84e:	02977f63          	bgeu	a4,s1,88c <malloc+0x70>
-   if(nu < 4096)
-- 856:	8a4e                	mv	s4,s3
-- 858:	0009871b          	sext.w	a4,s3
-- 85c:	6685                	lui	a3,0x1
-- 85e:	00d77363          	bgeu	a4,a3,864 <malloc+0x44>
-- 862:	6a05                	lui	s4,0x1
-- 864:	000a0b1b          	sext.w	s6,s4
-+ 852:	8a4e                	mv	s4,s3
-+ 854:	0009871b          	sext.w	a4,s3
-+ 858:	6685                	lui	a3,0x1
-+ 85a:	00d77363          	bgeu	a4,a3,860 <malloc+0x44>
-+ 85e:	6a05                	lui	s4,0x1
-+ 860:	000a0b1b          	sext.w	s6,s4
-   p = sbrk(nu * sizeof(Header));
-- 868:	004a1a1b          	slliw	s4,s4,0x4
-+ 864:	004a1a1b          	sllw	s4,s4,0x4
-         p->s.size = nunits;
-       }
-       freep = prevp;
-       return (void*)(p + 1);
-     }
-     if(p == freep)
-- 86c:	00000917          	auipc	s2,0x0
-- 870:	79490913          	addi	s2,s2,1940 # 1000 <freep>
-+ 868:	00000917          	auipc	s2,0x0
-+ 86c:	79890913          	add	s2,s2,1944 # 1000 <freep>
-   if(p == (char*)-1)
-- 874:	5afd                	li	s5,-1
-- 876:	a081                	j	8b6 <malloc+0x96>
-- 878:	f04a                	sd	s2,32(sp)
-- 87a:	e852                	sd	s4,16(sp)
-- 87c:	e456                	sd	s5,8(sp)
-- 87e:	e05a                	sd	s6,0(sp)
-+ 870:	5afd                	li	s5,-1
-+ 872:	a885                	j	8e2 <malloc+0xc6>
-     base.s.ptr = freep = prevp = &base;
-- 880:	00001797          	auipc	a5,0x1
-- 884:	99078793          	addi	a5,a5,-1648 # 1210 <base>
-- 888:	00000717          	auipc	a4,0x0
-- 88c:	76f73c23          	sd	a5,1912(a4) # 1000 <freep>
-- 890:	e39c                	sd	a5,0(a5)
-+ 874:	00001797          	auipc	a5,0x1
-+ 878:	99c78793          	add	a5,a5,-1636 # 1210 <base>
-+ 87c:	00000717          	auipc	a4,0x0
-+ 880:	78f73223          	sd	a5,1924(a4) # 1000 <freep>
-+ 884:	e39c                	sd	a5,0(a5)
-     base.s.size = 0;
-- 892:	0007a423          	sw	zero,8(a5)
-+ 886:	0007a423          	sw	zero,8(a5)
-     if(p->s.size >= nunits){
-- 896:	b7c1                	j	856 <malloc+0x36>
-+ 88a:	b7e1                	j	852 <malloc+0x36>
-+      if(p->s.size == nunits)
-+ 88c:	02e48c63          	beq	s1,a4,8c4 <malloc+0xa8>
-+        p->s.size -= nunits;
-+ 890:	4137073b          	subw	a4,a4,s3
-+ 894:	c798                	sw	a4,8(a5)
-+        p += p->s.size;
-+ 896:	02071693          	sll	a3,a4,0x20
-+ 89a:	01c6d713          	srl	a4,a3,0x1c
-+ 89e:	97ba                	add	a5,a5,a4
-+        p->s.size = nunits;
-+ 8a0:	0137a423          	sw	s3,8(a5)
-+      freep = prevp;
-+ 8a4:	00000717          	auipc	a4,0x0
-+ 8a8:	74a73e23          	sd	a0,1884(a4) # 1000 <freep>
-+      return (void*)(p + 1);
-+ 8ac:	01078513          	add	a0,a5,16
-+      if((p = morecore(nunits)) == 0)
-+        return 0;
-+  }
-+}
-+ 8b0:	70e2                	ld	ra,56(sp)
-+ 8b2:	7442                	ld	s0,48(sp)
-+ 8b4:	74a2                	ld	s1,40(sp)
-+ 8b6:	7902                	ld	s2,32(sp)
-+ 8b8:	69e2                	ld	s3,24(sp)
-+ 8ba:	6a42                	ld	s4,16(sp)
-+ 8bc:	6aa2                	ld	s5,8(sp)
-+ 8be:	6b02                	ld	s6,0(sp)
-+ 8c0:	6121                	add	sp,sp,64
-+ 8c2:	8082                	ret
-         prevp->s.ptr = p->s.ptr;
-- 898:	6398                	ld	a4,0(a5)
-- 89a:	e118                	sd	a4,0(a0)
-- 89c:	a8a9                	j	8f6 <malloc+0xd6>
-+ 8c4:	6398                	ld	a4,0(a5)
-+ 8c6:	e118                	sd	a4,0(a0)
-+ 8c8:	bff1                	j	8a4 <malloc+0x88>
-   hp->s.size = nu;
-- 89e:	01652423          	sw	s6,8(a0)
-+ 8ca:	01652423          	sw	s6,8(a0)
-   free((void*)(hp + 1));
-- 8a2:	0541                	addi	a0,a0,16
-- 8a4:	efbff0ef          	jal	79e <free>
-+ 8ce:	0541                	add	a0,a0,16
-+ 8d0:	ecbff0ef          	jal	79a <free>
-   return freep;
-- 8a8:	00093503          	ld	a0,0(s2)
-+ 8d4:	00093503          	ld	a0,0(s2)
-       if((p = morecore(nunits)) == 0)
-- 8ac:	c12d                	beqz	a0,90e <malloc+0xee>
-+ 8d8:	dd61                	beqz	a0,8b0 <malloc+0x94>
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 8ae:	611c                	ld	a5,0(a0)
-+ 8da:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 8b0:	4798                	lw	a4,8(a5)
-- 8b2:	02977263          	bgeu	a4,s1,8d6 <malloc+0xb6>
-+ 8dc:	4798                	lw	a4,8(a5)
-+ 8de:	fa9777e3          	bgeu	a4,s1,88c <malloc+0x70>
-     if(p == freep)
-- 8b6:	00093703          	ld	a4,0(s2)
-- 8ba:	853e                	mv	a0,a5
-- 8bc:	fef719e3          	bne	a4,a5,8ae <malloc+0x8e>
-+ 8e2:	00093703          	ld	a4,0(s2)
-+ 8e6:	853e                	mv	a0,a5
-+ 8e8:	fef719e3          	bne	a4,a5,8da <malloc+0xbe>
-   p = sbrk(nu * sizeof(Header));
-- 8c0:	8552                	mv	a0,s4
-- 8c2:	b1bff0ef          	jal	3dc <sbrk>
-+ 8ec:	8552                	mv	a0,s4
-+ 8ee:	ae9ff0ef          	jal	3d6 <sbrk>
-   if(p == (char*)-1)
-- 8c6:	fd551ce3          	bne	a0,s5,89e <malloc+0x7e>
-+ 8f2:	fd551ce3          	bne	a0,s5,8ca <malloc+0xae>
-         return 0;
-- 8ca:	4501                	li	a0,0
-- 8cc:	7902                	ld	s2,32(sp)
-- 8ce:	6a42                	ld	s4,16(sp)
-- 8d0:	6aa2                	ld	s5,8(sp)
-- 8d2:	6b02                	ld	s6,0(sp)
-- 8d4:	a03d                	j	902 <malloc+0xe2>
-- 8d6:	7902                	ld	s2,32(sp)
-- 8d8:	6a42                	ld	s4,16(sp)
-- 8da:	6aa2                	ld	s5,8(sp)
-- 8dc:	6b02                	ld	s6,0(sp)
--      if(p->s.size == nunits)
-- 8de:	fae48de3          	beq	s1,a4,898 <malloc+0x78>
--        p->s.size -= nunits;
-- 8e2:	4137073b          	subw	a4,a4,s3
-- 8e6:	c798                	sw	a4,8(a5)
--        p += p->s.size;
-- 8e8:	02071693          	slli	a3,a4,0x20
-- 8ec:	01c6d713          	srli	a4,a3,0x1c
-- 8f0:	97ba                	add	a5,a5,a4
--        p->s.size = nunits;
-- 8f2:	0137a423          	sw	s3,8(a5)
--      freep = prevp;
-- 8f6:	00000717          	auipc	a4,0x0
-- 8fa:	70a73523          	sd	a0,1802(a4) # 1000 <freep>
--      return (void*)(p + 1);
-- 8fe:	01078513          	addi	a0,a5,16
--  }
--}
-- 902:	70e2                	ld	ra,56(sp)
-- 904:	7442                	ld	s0,48(sp)
-- 906:	74a2                	ld	s1,40(sp)
-- 908:	69e2                	ld	s3,24(sp)
-- 90a:	6121                	addi	sp,sp,64
-- 90c:	8082                	ret
-- 90e:	7902                	ld	s2,32(sp)
-- 910:	6a42                	ld	s4,16(sp)
-- 912:	6aa2                	ld	s5,8(sp)
-- 914:	6b02                	ld	s6,0(sp)
-- 916:	b7f5                	j	902 <malloc+0xe2>
-+ 8f6:	4501                	li	a0,0
-+ 8f8:	bf65                	j	8b0 <malloc+0x94>
-diff --git a/Assignments/Assignment-6/xv6/user/cat.d b/Assignments/Assignment-6/xv6/user/cat.d
-index 69a945e..ae5d22a 100644
---- a/Assignments/Assignment-6/xv6/user/cat.d
-+++ b/Assignments/Assignment-6/xv6/user/cat.d
-@@ -1,3 +1 @@
--user/cat.o: user/cat.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/fcntl.h user/user.h
-+user/cat.o: user/cat.c kernel/types.h kernel/fcntl.h user/user.h
-diff --git a/Assignments/Assignment-6/xv6/user/cat.o b/Assignments/Assignment-6/xv6/user/cat.o
-index 0415aae..dc96b6c 100644
-Binary files a/Assignments/Assignment-6/xv6/user/cat.o and b/Assignments/Assignment-6/xv6/user/cat.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/cat.sym b/Assignments/Assignment-6/xv6/user/cat.sym
-index 47173aa..41b248a 100644
---- a/Assignments/Assignment-6/xv6/user/cat.sym
-+++ b/Assignments/Assignment-6/xv6/user/cat.sym
-@@ -1,6 +1,5 @@
- 0000000000000000 .text
--0000000000000918 .rodata
--0000000000000988 .eh_frame
-+0000000000000900 .rodata
- 0000000000001000 .data
- 0000000000001000 .bss
- 0000000000000000 .debug_info
-@@ -11,55 +10,56 @@
- 0000000000000000 .debug_str
- 0000000000000000 .comment
- 0000000000000000 .riscv.attributes
-+0000000000000000 .debug_frame
- 0000000000000000 .debug_ranges
- 0000000000000000 cat.c
- 0000000000000000 ulib.c
- 0000000000000000 usys.o
- 0000000000000000 printf.c
--00000000000003f4 putc
--0000000000000412 printint
--0000000000000970 digits
-+00000000000003ee putc
-+000000000000040c printint
-+0000000000000950 digits
- 0000000000000000 umalloc.c
- 0000000000001000 freep
- 0000000000001210 base
--00000000000000fc strcpy
--000000000000076c printf
--00000000000002a6 memmove
--000000000000039c mknod
--00000000000001b4 gets
--00000000000003d4 getpid
--0000000000000338 memcpy
-+00000000000000f6 strcpy
-+0000000000000768 printf
-+00000000000002a0 memmove
-+0000000000000396 mknod
-+00000000000001ae gets
-+00000000000003ce getpid
-+0000000000000332 memcpy
- 0000000000000000 cat
--0000000000000820 malloc
--00000000000003e4 sleep
--0000000000000364 pipe
--0000000000000374 write
--00000000000003ac fstat
--0000000000000742 fprintf
--0000000000000384 kill
--00000000000004ba vprintf
--00000000000003c4 chdir
--000000000000038c exec
--000000000000035c wait
--000000000000036c read
--00000000000003a4 unlink
--00000000000002fe memcmp
--000000000000034c fork
--00000000000003dc sbrk
--00000000000003ec uptime
--000000000000016e memset
-+000000000000081c malloc
-+00000000000003de sleep
-+000000000000035e pipe
-+000000000000036e write
-+00000000000003a6 fstat
-+000000000000073e fprintf
-+000000000000037e kill
-+00000000000004b4 vprintf
-+00000000000003be chdir
-+0000000000000386 exec
-+0000000000000356 wait
-+0000000000000366 read
-+000000000000039e unlink
-+00000000000002f8 memcmp
-+0000000000000346 fork
-+00000000000003d6 sbrk
-+00000000000003e6 uptime
-+0000000000000168 memset
- 0000000000000072 main
--0000000000000118 strcmp
--00000000000003cc dup
-+0000000000000112 strcmp
-+00000000000003c6 dup
- 0000000000001010 buf
--0000000000000224 stat
--00000000000003b4 link
--0000000000000354 exit
--00000000000000ea start
--000000000000025e atoi
--0000000000000144 strlen
--0000000000000394 open
--0000000000000190 strchr
--00000000000003bc mkdir
--000000000000037c close
--000000000000079e free
-+000000000000021e stat
-+00000000000003ae link
-+000000000000034e exit
-+00000000000000e4 start
-+0000000000000258 atoi
-+000000000000013e strlen
-+000000000000038e open
-+000000000000018a strchr
-+00000000000003b6 mkdir
-+0000000000000376 close
-+000000000000079a free
-diff --git a/Assignments/Assignment-6/xv6/user/echo.asm b/Assignments/Assignment-6/xv6/user/echo.asm
-index 333f627..1ba8b3f 100644
---- a/Assignments/Assignment-6/xv6/user/echo.asm
-+++ b/Assignments/Assignment-6/xv6/user/echo.asm
-@@ -11,7 +11,7 @@ Disassembly of section .text:
- int
- main(int argc, char *argv[])
- {
--   0:	7139                	addi	sp,sp,-64
-+   0:	7139                	add	sp,sp,-64
-    2:	fc06                	sd	ra,56(sp)
-    4:	f822                	sd	s0,48(sp)
-    6:	f426                	sd	s1,40(sp)
-@@ -19,31 +19,31 @@ main(int argc, char *argv[])
-    a:	ec4e                	sd	s3,24(sp)
-    c:	e852                	sd	s4,16(sp)
-    e:	e456                	sd	s5,8(sp)
--  10:	0080                	addi	s0,sp,64
-+  10:	0080                	add	s0,sp,64
-   int i;
- 
-   for(i = 1; i < argc; i++){
-   12:	4785                	li	a5,1
-   14:	06a7d063          	bge	a5,a0,74 <main+0x74>
--  18:	00858493          	addi	s1,a1,8
--  1c:	3579                	addiw	a0,a0,-2
--  1e:	02051793          	slli	a5,a0,0x20
--  22:	01d7d513          	srli	a0,a5,0x1d
-+  18:	00858493          	add	s1,a1,8
-+  1c:	3579                	addw	a0,a0,-2
-+  1e:	02051793          	sll	a5,a0,0x20
-+  22:	01d7d513          	srl	a0,a5,0x1d
-   26:	00a48a33          	add	s4,s1,a0
--  2a:	05c1                	addi	a1,a1,16
-+  2a:	05c1                	add	a1,a1,16
-   2c:	00a589b3          	add	s3,a1,a0
-     write(1, argv[i], strlen(argv[i]));
-     if(i + 1 < argc){
-       write(1, " ", 1);
-   30:	00001a97          	auipc	s5,0x1
--  34:	880a8a93          	addi	s5,s5,-1920 # 8b0 <malloc+0x100>
-+  34:	860a8a93          	add	s5,s5,-1952 # 890 <malloc+0xde>
-   38:	a809                	j	4a <main+0x4a>
-   3a:	4605                	li	a2,1
-   3c:	85d6                	mv	a1,s5
-   3e:	4505                	li	a0,1
-   40:	2c4000ef          	jal	304 <write>
-   for(i = 1; i < argc; i++){
--  44:	04a1                	addi	s1,s1,8
-+  44:	04a1                	add	s1,s1,8
-   46:	03348763          	beq	s1,s3,74 <main+0x74>
-     write(1, argv[i], strlen(argv[i]));
-   4a:	0004b903          	ld	s2,0(s1)
-@@ -59,7 +59,7 @@ main(int argc, char *argv[])
-       write(1, "\n", 1);
-   64:	4605                	li	a2,1
-   66:	00001597          	auipc	a1,0x1
--  6a:	85258593          	addi	a1,a1,-1966 # 8b8 <malloc+0x108>
-+  6a:	83258593          	add	a1,a1,-1998 # 898 <malloc+0xe6>
-   6e:	4505                	li	a0,1
-   70:	294000ef          	jal	304 <write>
-     }
-@@ -75,10 +75,10 @@ main(int argc, char *argv[])
- void
- start()
- {
--  7a:	1141                	addi	sp,sp,-16
-+  7a:	1141                	add	sp,sp,-16
-   7c:	e406                	sd	ra,8(sp)
-   7e:	e022                	sd	s0,0(sp)
--  80:	0800                	addi	s0,sp,16
-+  80:	0800                	add	s0,sp,16
-   extern int main();
-   main();
-   82:	f7fff0ef          	jal	0 <main>
-@@ -92,16 +92,16 @@ start()
- char*
- strcpy(char *s, const char *t)
- {
--  8c:	1141                	addi	sp,sp,-16
-+  8c:	1141                	add	sp,sp,-16
-   8e:	e422                	sd	s0,8(sp)
--  90:	0800                	addi	s0,sp,16
-+  90:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
-   92:	87aa                	mv	a5,a0
--  94:	0585                	addi	a1,a1,1
--  96:	0785                	addi	a5,a5,1
-+  94:	0585                	add	a1,a1,1
-+  96:	0785                	add	a5,a5,1
-   98:	fff5c703          	lbu	a4,-1(a1)
-   9c:	fee78fa3          	sb	a4,-1(a5)
-   a0:	fb75                	bnez	a4,94 <strcpy+0x8>
-@@ -109,7 +109,7 @@ strcpy(char *s, const char *t)
-   return os;
- }
-   a2:	6422                	ld	s0,8(sp)
--  a4:	0141                	addi	sp,sp,16
-+  a4:	0141                	add	sp,sp,16
-   a6:	8082                	ret
- 
- 00000000000000a8 <strcmp>:
-@@ -117,17 +117,17 @@ strcpy(char *s, const char *t)
- int
- strcmp(const char *p, const char *q)
- {
--  a8:	1141                	addi	sp,sp,-16
-+  a8:	1141                	add	sp,sp,-16
-   aa:	e422                	sd	s0,8(sp)
--  ac:	0800                	addi	s0,sp,16
-+  ac:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
-   ae:	00054783          	lbu	a5,0(a0)
-   b2:	cb91                	beqz	a5,c6 <strcmp+0x1e>
-   b4:	0005c703          	lbu	a4,0(a1)
-   b8:	00f71763          	bne	a4,a5,c6 <strcmp+0x1e>
-     p++, q++;
--  bc:	0505                	addi	a0,a0,1
--  be:	0585                	addi	a1,a1,1
-+  bc:	0505                	add	a0,a0,1
-+  be:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
-   c0:	00054783          	lbu	a5,0(a0)
-   c4:	fbe5                	bnez	a5,b4 <strcmp+0xc>
-@@ -136,7 +136,7 @@ strcmp(const char *p, const char *q)
- }
-   ca:	40a7853b          	subw	a0,a5,a0
-   ce:	6422                	ld	s0,8(sp)
--  d0:	0141                	addi	sp,sp,16
-+  d0:	0141                	add	sp,sp,16
-   d2:	8082                	ret
- 
- 00000000000000d4 <strlen>:
-@@ -144,27 +144,27 @@ strcmp(const char *p, const char *q)
- uint
- strlen(const char *s)
- {
--  d4:	1141                	addi	sp,sp,-16
-+  d4:	1141                	add	sp,sp,-16
-   d6:	e422                	sd	s0,8(sp)
--  d8:	0800                	addi	s0,sp,16
-+  d8:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
-   da:	00054783          	lbu	a5,0(a0)
-   de:	cf91                	beqz	a5,fa <strlen+0x26>
--  e0:	0505                	addi	a0,a0,1
-+  e0:	0505                	add	a0,a0,1
-   e2:	87aa                	mv	a5,a0
-   e4:	86be                	mv	a3,a5
--  e6:	0785                	addi	a5,a5,1
-+  e6:	0785                	add	a5,a5,1
-   e8:	fff7c703          	lbu	a4,-1(a5)
-   ec:	ff65                	bnez	a4,e4 <strlen+0x10>
-   ee:	40a6853b          	subw	a0,a3,a0
--  f2:	2505                	addiw	a0,a0,1
-+  f2:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
-   f4:	6422                	ld	s0,8(sp)
--  f6:	0141                	addi	sp,sp,16
-+  f6:	0141                	add	sp,sp,16
-   f8:	8082                	ret
-   for(n = 0; s[n]; n++)
-   fa:	4501                	li	a0,0
-@@ -175,27 +175,27 @@ strlen(const char *s)
- void*
- memset(void *dst, int c, uint n)
- {
--  fe:	1141                	addi	sp,sp,-16
-+  fe:	1141                	add	sp,sp,-16
-  100:	e422                	sd	s0,8(sp)
-- 102:	0800                	addi	s0,sp,16
-+ 102:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
-  104:	ca19                	beqz	a2,11a <memset+0x1c>
-  106:	87aa                	mv	a5,a0
-- 108:	1602                	slli	a2,a2,0x20
-- 10a:	9201                	srli	a2,a2,0x20
-+ 108:	1602                	sll	a2,a2,0x20
-+ 10a:	9201                	srl	a2,a2,0x20
-  10c:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
-  110:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
-- 114:	0785                	addi	a5,a5,1
-+ 114:	0785                	add	a5,a5,1
-  116:	fee79de3          	bne	a5,a4,110 <memset+0x12>
-   }
-   return dst;
- }
-  11a:	6422                	ld	s0,8(sp)
-- 11c:	0141                	addi	sp,sp,16
-+ 11c:	0141                	add	sp,sp,16
-  11e:	8082                	ret
- 
- 0000000000000120 <strchr>:
-@@ -203,16 +203,16 @@ memset(void *dst, int c, uint n)
- char*
- strchr(const char *s, char c)
- {
-- 120:	1141                	addi	sp,sp,-16
-+ 120:	1141                	add	sp,sp,-16
-  122:	e422                	sd	s0,8(sp)
-- 124:	0800                	addi	s0,sp,16
-+ 124:	0800                	add	s0,sp,16
-   for(; *s; s++)
-  126:	00054783          	lbu	a5,0(a0)
-  12a:	cb99                	beqz	a5,140 <strchr+0x20>
-     if(*s == c)
-  12c:	00f58763          	beq	a1,a5,13a <strchr+0x1a>
-   for(; *s; s++)
-- 130:	0505                	addi	a0,a0,1
-+ 130:	0505                	add	a0,a0,1
-  132:	00054783          	lbu	a5,0(a0)
-  136:	fbfd                	bnez	a5,12c <strchr+0xc>
-       return (char*)s;
-@@ -220,7 +220,7 @@ strchr(const char *s, char c)
-  138:	4501                	li	a0,0
- }
-  13a:	6422                	ld	s0,8(sp)
-- 13c:	0141                	addi	sp,sp,16
-+ 13c:	0141                	add	sp,sp,16
-  13e:	8082                	ret
-   return 0;
-  140:	4501                	li	a0,0
-@@ -231,7 +231,7 @@ strchr(const char *s, char c)
- char*
- gets(char *buf, int max)
- {
-- 144:	711d                	addi	sp,sp,-96
-+ 144:	711d                	add	sp,sp,-96
-  146:	ec86                	sd	ra,88(sp)
-  148:	e8a2                	sd	s0,80(sp)
-  14a:	e4a6                	sd	s1,72(sp)
-@@ -241,7 +241,7 @@ gets(char *buf, int max)
-  152:	f456                	sd	s5,40(sp)
-  154:	f05a                	sd	s6,32(sp)
-  156:	ec5e                	sd	s7,24(sp)
-- 158:	1080                	addi	s0,sp,96
-+ 158:	1080                	add	s0,sp,96
-  15a:	8baa                	mv	s7,a0
-  15c:	8a2e                	mv	s4,a1
-   int i, cc;
-@@ -259,11 +259,11 @@ gets(char *buf, int max)
-  164:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
-  166:	89a6                	mv	s3,s1
-- 168:	2485                	addiw	s1,s1,1
-+ 168:	2485                	addw	s1,s1,1
-  16a:	0344d663          	bge	s1,s4,196 <gets+0x52>
-     cc = read(0, &c, 1);
-  16e:	4605                	li	a2,1
-- 170:	faf40593          	addi	a1,s0,-81
-+ 170:	faf40593          	add	a1,s0,-81
-  174:	4501                	li	a0,0
-  176:	186000ef          	jal	2fc <read>
-     if(cc < 1)
-@@ -273,9 +273,9 @@ gets(char *buf, int max)
-  182:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
-  186:	01578763          	beq	a5,s5,194 <gets+0x50>
-- 18a:	0905                	addi	s2,s2,1
-+ 18a:	0905                	add	s2,s2,1
-  18c:	fd679de3          	bne	a5,s6,166 <gets+0x22>
--    buf[i++] = c;
-+  for(i=0; i+1 < max; ){
-  190:	89a6                	mv	s3,s1
-  192:	a011                	j	196 <gets+0x52>
-  194:	89a6                	mv	s3,s1
-@@ -296,7 +296,7 @@ gets(char *buf, int max)
-  1aa:	7aa2                	ld	s5,40(sp)
-  1ac:	7b02                	ld	s6,32(sp)
-  1ae:	6be2                	ld	s7,24(sp)
-- 1b0:	6125                	addi	sp,sp,96
-+ 1b0:	6125                	add	sp,sp,96
-  1b2:	8082                	ret
- 
- 00000000000001b4 <stat>:
-@@ -304,21 +304,21 @@ gets(char *buf, int max)
- int
- stat(const char *n, struct stat *st)
- {
-- 1b4:	1101                	addi	sp,sp,-32
-+ 1b4:	1101                	add	sp,sp,-32
-  1b6:	ec06                	sd	ra,24(sp)
-  1b8:	e822                	sd	s0,16(sp)
-- 1ba:	e04a                	sd	s2,0(sp)
-- 1bc:	1000                	addi	s0,sp,32
-- 1be:	892e                	mv	s2,a1
-+ 1ba:	e426                	sd	s1,8(sp)
-+ 1bc:	e04a                	sd	s2,0(sp)
-+ 1be:	1000                	add	s0,sp,32
-+ 1c0:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
-- 1c0:	4581                	li	a1,0
-- 1c2:	162000ef          	jal	324 <open>
-+ 1c2:	4581                	li	a1,0
-+ 1c4:	160000ef          	jal	324 <open>
-   if(fd < 0)
-- 1c6:	02054263          	bltz	a0,1ea <stat+0x36>
-- 1ca:	e426                	sd	s1,8(sp)
-+ 1c8:	02054163          	bltz	a0,1ea <stat+0x36>
-  1cc:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
-@@ -329,32 +329,32 @@ stat(const char *n, struct stat *st)
-  1d6:	8526                	mv	a0,s1
-  1d8:	134000ef          	jal	30c <close>
-   return r;
-- 1dc:	64a2                	ld	s1,8(sp)
- }
-- 1de:	854a                	mv	a0,s2
-- 1e0:	60e2                	ld	ra,24(sp)
-- 1e2:	6442                	ld	s0,16(sp)
-+ 1dc:	854a                	mv	a0,s2
-+ 1de:	60e2                	ld	ra,24(sp)
-+ 1e0:	6442                	ld	s0,16(sp)
-+ 1e2:	64a2                	ld	s1,8(sp)
-  1e4:	6902                	ld	s2,0(sp)
-- 1e6:	6105                	addi	sp,sp,32
-+ 1e6:	6105                	add	sp,sp,32
-  1e8:	8082                	ret
-     return -1;
-  1ea:	597d                	li	s2,-1
-- 1ec:	bfcd                	j	1de <stat+0x2a>
-+ 1ec:	bfc5                	j	1dc <stat+0x28>
- 
- 00000000000001ee <atoi>:
- 
- int
- atoi(const char *s)
- {
-- 1ee:	1141                	addi	sp,sp,-16
-+ 1ee:	1141                	add	sp,sp,-16
-  1f0:	e422                	sd	s0,8(sp)
-- 1f2:	0800                	addi	s0,sp,16
-+ 1f2:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
-  1f4:	00054683          	lbu	a3,0(a0)
-- 1f8:	fd06879b          	addiw	a5,a3,-48
-+ 1f8:	fd06879b          	addw	a5,a3,-48
-  1fc:	0ff7f793          	zext.b	a5,a5
-  200:	4625                	li	a2,9
-  202:	02f66863          	bltu	a2,a5,232 <atoi+0x44>
-@@ -362,21 +362,21 @@ atoi(const char *s)
-   n = 0;
-  208:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
-- 20a:	0705                	addi	a4,a4,1
-- 20c:	0025179b          	slliw	a5,a0,0x2
-+ 20a:	0705                	add	a4,a4,1
-+ 20c:	0025179b          	sllw	a5,a0,0x2
-  210:	9fa9                	addw	a5,a5,a0
-- 212:	0017979b          	slliw	a5,a5,0x1
-+ 212:	0017979b          	sllw	a5,a5,0x1
-  216:	9fb5                	addw	a5,a5,a3
-- 218:	fd07851b          	addiw	a0,a5,-48
-+ 218:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
-  21c:	00074683          	lbu	a3,0(a4)
-- 220:	fd06879b          	addiw	a5,a3,-48
-+ 220:	fd06879b          	addw	a5,a3,-48
-  224:	0ff7f793          	zext.b	a5,a5
-  228:	fef671e3          	bgeu	a2,a5,20a <atoi+0x1c>
-   return n;
- }
-  22c:	6422                	ld	s0,8(sp)
-- 22e:	0141                	addi	sp,sp,16
-+ 22e:	0141                	add	sp,sp,16
-  230:	8082                	ret
-   n = 0;
-  232:	4501                	li	a0,0
-@@ -387,9 +387,9 @@ atoi(const char *s)
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
-- 236:	1141                	addi	sp,sp,-16
-+ 236:	1141                	add	sp,sp,-16
-  238:	e422                	sd	s0,8(sp)
-- 23a:	0800                	addi	s0,sp,16
-+ 23a:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-@@ -399,18 +399,18 @@ memmove(void *vdst, const void *vsrc, int n)
-  23c:	02b57463          	bgeu	a0,a1,264 <memmove+0x2e>
-     while(n-- > 0)
-  240:	00c05f63          	blez	a2,25e <memmove+0x28>
-- 244:	1602                	slli	a2,a2,0x20
-- 246:	9201                	srli	a2,a2,0x20
-+ 244:	1602                	sll	a2,a2,0x20
-+ 246:	9201                	srl	a2,a2,0x20
-  248:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
-  24c:	872a                	mv	a4,a0
-       *dst++ = *src++;
-- 24e:	0585                	addi	a1,a1,1
-- 250:	0705                	addi	a4,a4,1
-+ 24e:	0585                	add	a1,a1,1
-+ 250:	0705                	add	a4,a4,1
-  252:	fff5c683          	lbu	a3,-1(a1)
-  256:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
-- 25a:	fef71ae3          	bne	a4,a5,24e <memmove+0x18>
-+ 25a:	fee79ae3          	bne	a5,a4,24e <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-@@ -418,7 +418,7 @@ memmove(void *vdst, const void *vsrc, int n)
-   return vdst;
- }
-  25e:	6422                	ld	s0,8(sp)
-- 260:	0141                	addi	sp,sp,16
-+ 260:	0141                	add	sp,sp,16
-  262:	8082                	ret
-     dst += n;
-  264:	00c50733          	add	a4,a0,a2
-@@ -426,14 +426,14 @@ memmove(void *vdst, const void *vsrc, int n)
-  268:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
-  26a:	fec05ae3          	blez	a2,25e <memmove+0x28>
-- 26e:	fff6079b          	addiw	a5,a2,-1
-- 272:	1782                	slli	a5,a5,0x20
-- 274:	9381                	srli	a5,a5,0x20
-+ 26e:	fff6079b          	addw	a5,a2,-1
-+ 272:	1782                	sll	a5,a5,0x20
-+ 274:	9381                	srl	a5,a5,0x20
-  276:	fff7c793          	not	a5,a5
-  27a:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
-- 27c:	15fd                	addi	a1,a1,-1
-- 27e:	177d                	addi	a4,a4,-1
-+ 27c:	15fd                	add	a1,a1,-1
-+ 27e:	177d                	add	a4,a4,-1
-  280:	0005c683          	lbu	a3,0(a1)
-  284:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
-@@ -445,16 +445,16 @@ memmove(void *vdst, const void *vsrc, int n)
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
-- 28e:	1141                	addi	sp,sp,-16
-+ 28e:	1141                	add	sp,sp,-16
-  290:	e422                	sd	s0,8(sp)
-- 292:	0800                	addi	s0,sp,16
-+ 292:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
-  294:	ca05                	beqz	a2,2c4 <memcmp+0x36>
-- 296:	fff6069b          	addiw	a3,a2,-1
-- 29a:	1682                	slli	a3,a3,0x20
-- 29c:	9281                	srli	a3,a3,0x20
-- 29e:	0685                	addi	a3,a3,1
-+ 296:	fff6069b          	addw	a3,a2,-1
-+ 29a:	1682                	sll	a3,a3,0x20
-+ 29c:	9281                	srl	a3,a3,0x20
-+ 29e:	0685                	add	a3,a3,1
-  2a0:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
-  2a2:	00054783          	lbu	a5,0(a0)
-@@ -463,9 +463,9 @@ memcmp(const void *s1, const void *s2, uint n)
-       return *p1 - *p2;
-     }
-     p1++;
-- 2ae:	0505                	addi	a0,a0,1
-+ 2ae:	0505                	add	a0,a0,1
-     p2++;
-- 2b0:	0585                	addi	a1,a1,1
-+ 2b0:	0585                	add	a1,a1,1
-   while (n-- > 0) {
-  2b2:	fed518e3          	bne	a0,a3,2a2 <memcmp+0x14>
-   }
-@@ -476,7 +476,7 @@ memcmp(const void *s1, const void *s2, uint n)
-  2ba:	40e7853b          	subw	a0,a5,a4
- }
-  2be:	6422                	ld	s0,8(sp)
-- 2c0:	0141                	addi	sp,sp,16
-+ 2c0:	0141                	add	sp,sp,16
-  2c2:	8082                	ret
-   return 0;
-  2c4:	4501                	li	a0,0
-@@ -487,16 +487,16 @@ memcmp(const void *s1, const void *s2, uint n)
- void *
- memcpy(void *dst, const void *src, uint n)
- {
-- 2c8:	1141                	addi	sp,sp,-16
-+ 2c8:	1141                	add	sp,sp,-16
-  2ca:	e406                	sd	ra,8(sp)
-  2cc:	e022                	sd	s0,0(sp)
-- 2ce:	0800                	addi	s0,sp,16
-+ 2ce:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
-  2d0:	f67ff0ef          	jal	236 <memmove>
- }
-  2d4:	60a2                	ld	ra,8(sp)
-  2d6:	6402                	ld	s0,0(sp)
-- 2d8:	0141                	addi	sp,sp,16
-+ 2d8:	0141                	add	sp,sp,16
-  2da:	8082                	ret
- 
- 00000000000002dc <fork>:
-@@ -718,19 +718,19 @@ static char digits[] = "0123456789ABCDEF";
- static void
- putc(int fd, char c)
- {
-- 384:	1101                	addi	sp,sp,-32
-+ 384:	1101                	add	sp,sp,-32
-  386:	ec06                	sd	ra,24(sp)
-  388:	e822                	sd	s0,16(sp)
-- 38a:	1000                	addi	s0,sp,32
-+ 38a:	1000                	add	s0,sp,32
-  38c:	feb407a3          	sb	a1,-17(s0)
-   write(fd, &c, 1);
-  390:	4605                	li	a2,1
-- 392:	fef40593          	addi	a1,s0,-17
-+ 392:	fef40593          	add	a1,s0,-17
-  396:	f6fff0ef          	jal	304 <write>
- }
-  39a:	60e2                	ld	ra,24(sp)
-  39c:	6442                	ld	s0,16(sp)
-- 39e:	6105                	addi	sp,sp,32
-+ 39e:	6105                	add	sp,sp,32
-  3a0:	8082                	ret
- 
- 00000000000003a2 <printint>:
-@@ -738,92 +738,92 @@ putc(int fd, char c)
- static void
- printint(int fd, int xx, int base, int sgn)
- {
-- 3a2:	7139                	addi	sp,sp,-64
-+ 3a2:	7139                	add	sp,sp,-64
-  3a4:	fc06                	sd	ra,56(sp)
-  3a6:	f822                	sd	s0,48(sp)
-  3a8:	f426                	sd	s1,40(sp)
-- 3aa:	0080                	addi	s0,sp,64
-- 3ac:	84aa                	mv	s1,a0
-+ 3aa:	f04a                	sd	s2,32(sp)
-+ 3ac:	ec4e                	sd	s3,24(sp)
-+ 3ae:	0080                	add	s0,sp,64
-+ 3b0:	84aa                	mv	s1,a0
-   char buf[16];
-   int i, neg;
-   uint x;
- 
-   neg = 0;
-   if(sgn && xx < 0){
-- 3ae:	c299                	beqz	a3,3b4 <printint+0x12>
-- 3b0:	0805c963          	bltz	a1,442 <printint+0xa0>
-+ 3b2:	c299                	beqz	a3,3b8 <printint+0x16>
-+ 3b4:	0805c763          	bltz	a1,442 <printint+0xa0>
-     neg = 1;
-     x = -xx;
-   } else {
-     x = xx;
-- 3b4:	2581                	sext.w	a1,a1
-+ 3b8:	2581                	sext.w	a1,a1
-   neg = 0;
-- 3b6:	4881                	li	a7,0
-- 3b8:	fc040693          	addi	a3,s0,-64
-+ 3ba:	4881                	li	a7,0
-+ 3bc:	fc040693          	add	a3,s0,-64
-   }
- 
-   i = 0;
-- 3bc:	4701                	li	a4,0
-+ 3c0:	4701                	li	a4,0
-   do{
-     buf[i++] = digits[x % base];
-- 3be:	2601                	sext.w	a2,a2
-- 3c0:	00000517          	auipc	a0,0x0
-- 3c4:	50850513          	addi	a0,a0,1288 # 8c8 <digits>
-- 3c8:	883a                	mv	a6,a4
-- 3ca:	2705                	addiw	a4,a4,1
-- 3cc:	02c5f7bb          	remuw	a5,a1,a2
-- 3d0:	1782                	slli	a5,a5,0x20
-- 3d2:	9381                	srli	a5,a5,0x20
-- 3d4:	97aa                	add	a5,a5,a0
-- 3d6:	0007c783          	lbu	a5,0(a5)
-- 3da:	00f68023          	sb	a5,0(a3)
-+ 3c2:	2601                	sext.w	a2,a2
-+ 3c4:	00000517          	auipc	a0,0x0
-+ 3c8:	4e450513          	add	a0,a0,1252 # 8a8 <digits>
-+ 3cc:	883a                	mv	a6,a4
-+ 3ce:	2705                	addw	a4,a4,1
-+ 3d0:	02c5f7bb          	remuw	a5,a1,a2
-+ 3d4:	1782                	sll	a5,a5,0x20
-+ 3d6:	9381                	srl	a5,a5,0x20
-+ 3d8:	97aa                	add	a5,a5,a0
-+ 3da:	0007c783          	lbu	a5,0(a5)
-+ 3de:	00f68023          	sb	a5,0(a3)
-   }while((x /= base) != 0);
-- 3de:	0005879b          	sext.w	a5,a1
-- 3e2:	02c5d5bb          	divuw	a1,a1,a2
-- 3e6:	0685                	addi	a3,a3,1
-- 3e8:	fec7f0e3          	bgeu	a5,a2,3c8 <printint+0x26>
-+ 3e2:	0005879b          	sext.w	a5,a1
-+ 3e6:	02c5d5bb          	divuw	a1,a1,a2
-+ 3ea:	0685                	add	a3,a3,1
-+ 3ec:	fec7f0e3          	bgeu	a5,a2,3cc <printint+0x2a>
-   if(neg)
-- 3ec:	00088c63          	beqz	a7,404 <printint+0x62>
-+ 3f0:	00088c63          	beqz	a7,408 <printint+0x66>
-     buf[i++] = '-';
-- 3f0:	fd070793          	addi	a5,a4,-48
-- 3f4:	00878733          	add	a4,a5,s0
-- 3f8:	02d00793          	li	a5,45
-- 3fc:	fef70823          	sb	a5,-16(a4)
-- 400:	0028071b          	addiw	a4,a6,2
-+ 3f4:	fd070793          	add	a5,a4,-48
-+ 3f8:	00878733          	add	a4,a5,s0
-+ 3fc:	02d00793          	li	a5,45
-+ 400:	fef70823          	sb	a5,-16(a4)
-+ 404:	0028071b          	addw	a4,a6,2
- 
-   while(--i >= 0)
-- 404:	02e05a63          	blez	a4,438 <printint+0x96>
-- 408:	f04a                	sd	s2,32(sp)
-- 40a:	ec4e                	sd	s3,24(sp)
-- 40c:	fc040793          	addi	a5,s0,-64
-+ 408:	02e05663          	blez	a4,434 <printint+0x92>
-+ 40c:	fc040793          	add	a5,s0,-64
-  410:	00e78933          	add	s2,a5,a4
-- 414:	fff78993          	addi	s3,a5,-1
-+ 414:	fff78993          	add	s3,a5,-1
-  418:	99ba                	add	s3,s3,a4
-- 41a:	377d                	addiw	a4,a4,-1
-- 41c:	1702                	slli	a4,a4,0x20
-- 41e:	9301                	srli	a4,a4,0x20
-+ 41a:	377d                	addw	a4,a4,-1
-+ 41c:	1702                	sll	a4,a4,0x20
-+ 41e:	9301                	srl	a4,a4,0x20
-  420:	40e989b3          	sub	s3,s3,a4
-     putc(fd, buf[i]);
-  424:	fff94583          	lbu	a1,-1(s2)
-  428:	8526                	mv	a0,s1
-  42a:	f5bff0ef          	jal	384 <putc>
-   while(--i >= 0)
-- 42e:	197d                	addi	s2,s2,-1
-+ 42e:	197d                	add	s2,s2,-1
-  430:	ff391ae3          	bne	s2,s3,424 <printint+0x82>
-- 434:	7902                	ld	s2,32(sp)
-- 436:	69e2                	ld	s3,24(sp)
- }
-- 438:	70e2                	ld	ra,56(sp)
-- 43a:	7442                	ld	s0,48(sp)
-- 43c:	74a2                	ld	s1,40(sp)
-- 43e:	6121                	addi	sp,sp,64
-+ 434:	70e2                	ld	ra,56(sp)
-+ 436:	7442                	ld	s0,48(sp)
-+ 438:	74a2                	ld	s1,40(sp)
-+ 43a:	7902                	ld	s2,32(sp)
-+ 43c:	69e2                	ld	s3,24(sp)
-+ 43e:	6121                	add	sp,sp,64
-  440:	8082                	ret
-     x = -xx;
-  442:	40b005bb          	negw	a1,a1
-     neg = 1;
-  446:	4885                	li	a7,1
-     x = -xx;
-- 448:	bf85                	j	3b8 <printint+0x16>
-+ 448:	bf95                	j	3bc <printint+0x1a>
- 
- 000000000000044a <vprintf>:
- }
-@@ -832,320 +832,320 @@ printint(int fd, int xx, int base, int sgn)
- void
- vprintf(int fd, const char *fmt, va_list ap)
- {
-- 44a:	711d                	addi	sp,sp,-96
-+ 44a:	711d                	add	sp,sp,-96
-  44c:	ec86                	sd	ra,88(sp)
-  44e:	e8a2                	sd	s0,80(sp)
-- 450:	e0ca                	sd	s2,64(sp)
-- 452:	1080                	addi	s0,sp,96
-+ 450:	e4a6                	sd	s1,72(sp)
-+ 452:	e0ca                	sd	s2,64(sp)
-+ 454:	fc4e                	sd	s3,56(sp)
-+ 456:	f852                	sd	s4,48(sp)
-+ 458:	f456                	sd	s5,40(sp)
-+ 45a:	f05a                	sd	s6,32(sp)
-+ 45c:	ec5e                	sd	s7,24(sp)
-+ 45e:	e862                	sd	s8,16(sp)
-+ 460:	e466                	sd	s9,8(sp)
-+ 462:	e06a                	sd	s10,0(sp)
-+ 464:	1080                	add	s0,sp,96
-   char *s;
-   int c0, c1, c2, i, state;
- 
-   state = 0;
-   for(i = 0; fmt[i]; i++){
-- 454:	0005c903          	lbu	s2,0(a1)
-- 458:	26090863          	beqz	s2,6c8 <vprintf+0x27e>
-- 45c:	e4a6                	sd	s1,72(sp)
-- 45e:	fc4e                	sd	s3,56(sp)
-- 460:	f852                	sd	s4,48(sp)
-- 462:	f456                	sd	s5,40(sp)
-- 464:	f05a                	sd	s6,32(sp)
-- 466:	ec5e                	sd	s7,24(sp)
-- 468:	e862                	sd	s8,16(sp)
-- 46a:	e466                	sd	s9,8(sp)
-- 46c:	8b2a                	mv	s6,a0
-- 46e:	8a2e                	mv	s4,a1
-- 470:	8bb2                	mv	s7,a2
-+ 466:	0005c903          	lbu	s2,0(a1)
-+ 46a:	24090763          	beqz	s2,6b8 <vprintf+0x26e>
-+ 46e:	8b2a                	mv	s6,a0
-+ 470:	8a2e                	mv	s4,a1
-+ 472:	8bb2                	mv	s7,a2
-   state = 0;
-- 472:	4981                	li	s3,0
-+ 474:	4981                	li	s3,0
-   for(i = 0; fmt[i]; i++){
-- 474:	4481                	li	s1,0
-- 476:	4701                	li	a4,0
-+ 476:	4481                	li	s1,0
-+ 478:	4701                	li	a4,0
-       if(c0 == '%'){
-         state = '%';
-       } else {
-         putc(fd, c0);
-       }
-     } else if(state == '%'){
-- 478:	02500a93          	li	s5,37
-+ 47a:	02500a93          	li	s5,37
-       c1 = c2 = 0;
-       if(c0) c1 = fmt[i+1] & 0xff;
-       if(c1) c2 = fmt[i+2] & 0xff;
-       if(c0 == 'd'){
-- 47c:	06400c13          	li	s8,100
-+ 47e:	06400c13          	li	s8,100
-         printint(fd, va_arg(ap, int), 10, 1);
-       } else if(c0 == 'l' && c1 == 'd'){
-- 480:	06c00c93          	li	s9,108
-- 484:	a005                	j	4a4 <vprintf+0x5a>
-+ 482:	06c00c93          	li	s9,108
-+ 486:	a005                	j	4a6 <vprintf+0x5c>
-         putc(fd, c0);
-- 486:	85ca                	mv	a1,s2
-- 488:	855a                	mv	a0,s6
-- 48a:	efbff0ef          	jal	384 <putc>
-- 48e:	a019                	j	494 <vprintf+0x4a>
-+ 488:	85ca                	mv	a1,s2
-+ 48a:	855a                	mv	a0,s6
-+ 48c:	ef9ff0ef          	jal	384 <putc>
-+ 490:	a019                	j	496 <vprintf+0x4c>
-     } else if(state == '%'){
-- 490:	03598263          	beq	s3,s5,4b4 <vprintf+0x6a>
-+ 492:	03598263          	beq	s3,s5,4b6 <vprintf+0x6c>
-   for(i = 0; fmt[i]; i++){
-- 494:	2485                	addiw	s1,s1,1
-- 496:	8726                	mv	a4,s1
-- 498:	009a07b3          	add	a5,s4,s1
-- 49c:	0007c903          	lbu	s2,0(a5)
-- 4a0:	20090c63          	beqz	s2,6b8 <vprintf+0x26e>
-+ 496:	2485                	addw	s1,s1,1
-+ 498:	8726                	mv	a4,s1
-+ 49a:	009a07b3          	add	a5,s4,s1
-+ 49e:	0007c903          	lbu	s2,0(a5)
-+ 4a2:	20090b63          	beqz	s2,6b8 <vprintf+0x26e>
-     c0 = fmt[i] & 0xff;
-- 4a4:	0009079b          	sext.w	a5,s2
-+ 4a6:	0009079b          	sext.w	a5,s2
-     if(state == 0){
-- 4a8:	fe0994e3          	bnez	s3,490 <vprintf+0x46>
-+ 4aa:	fe0994e3          	bnez	s3,492 <vprintf+0x48>
-       if(c0 == '%'){
-- 4ac:	fd579de3          	bne	a5,s5,486 <vprintf+0x3c>
-+ 4ae:	fd579de3          	bne	a5,s5,488 <vprintf+0x3e>
-         state = '%';
-- 4b0:	89be                	mv	s3,a5
-- 4b2:	b7cd                	j	494 <vprintf+0x4a>
-+ 4b2:	89be                	mv	s3,a5
-+ 4b4:	b7cd                	j	496 <vprintf+0x4c>
-       if(c0) c1 = fmt[i+1] & 0xff;
-- 4b4:	00ea06b3          	add	a3,s4,a4
-- 4b8:	0016c683          	lbu	a3,1(a3)
-+ 4b6:	c7c9                	beqz	a5,540 <vprintf+0xf6>
-+ 4b8:	00ea06b3          	add	a3,s4,a4
-+ 4bc:	0016c683          	lbu	a3,1(a3)
-       c1 = c2 = 0;
-- 4bc:	8636                	mv	a2,a3
-+ 4c0:	8636                	mv	a2,a3
-       if(c1) c2 = fmt[i+2] & 0xff;
-- 4be:	c681                	beqz	a3,4c6 <vprintf+0x7c>
-- 4c0:	9752                	add	a4,a4,s4
-- 4c2:	00274603          	lbu	a2,2(a4)
-+ 4c2:	c681                	beqz	a3,4ca <vprintf+0x80>
-+ 4c4:	9752                	add	a4,a4,s4
-+ 4c6:	00274603          	lbu	a2,2(a4)
-       if(c0 == 'd'){
-- 4c6:	03878f63          	beq	a5,s8,504 <vprintf+0xba>
-+ 4ca:	03878f63          	beq	a5,s8,508 <vprintf+0xbe>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 4ca:	05978963          	beq	a5,s9,51c <vprintf+0xd2>
-+ 4ce:	05978963          	beq	a5,s9,520 <vprintf+0xd6>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 2;
-       } else if(c0 == 'u'){
-- 4ce:	07500713          	li	a4,117
-- 4d2:	0ee78363          	beq	a5,a4,5b8 <vprintf+0x16e>
-+ 4d2:	07500713          	li	a4,117
-+ 4d6:	0ee78363          	beq	a5,a4,5bc <vprintf+0x172>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 2;
-       } else if(c0 == 'x'){
-- 4d6:	07800713          	li	a4,120
-- 4da:	12e78563          	beq	a5,a4,604 <vprintf+0x1ba>
-+ 4da:	07800713          	li	a4,120
-+ 4de:	12e78563          	beq	a5,a4,608 <vprintf+0x1be>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 2;
-       } else if(c0 == 'p'){
-- 4de:	07000713          	li	a4,112
-- 4e2:	14e78a63          	beq	a5,a4,636 <vprintf+0x1ec>
-+ 4e2:	07000713          	li	a4,112
-+ 4e6:	14e78a63          	beq	a5,a4,63a <vprintf+0x1f0>
-         printptr(fd, va_arg(ap, uint64));
-       } else if(c0 == 's'){
-- 4e6:	07300713          	li	a4,115
-- 4ea:	18e78a63          	beq	a5,a4,67e <vprintf+0x234>
-+ 4ea:	07300713          	li	a4,115
-+ 4ee:	18e78863          	beq	a5,a4,67e <vprintf+0x234>
-         if((s = va_arg(ap, char*)) == 0)
-           s = "(null)";
-         for(; *s; s++)
-           putc(fd, *s);
-       } else if(c0 == '%'){
-- 4ee:	02500713          	li	a4,37
-- 4f2:	04e79563          	bne	a5,a4,53c <vprintf+0xf2>
-+ 4f2:	02500713          	li	a4,37
-+ 4f6:	04e79563          	bne	a5,a4,540 <vprintf+0xf6>
-         putc(fd, '%');
-- 4f6:	02500593          	li	a1,37
-- 4fa:	855a                	mv	a0,s6
-- 4fc:	e89ff0ef          	jal	384 <putc>
-+ 4fa:	02500593          	li	a1,37
-+ 4fe:	855a                	mv	a0,s6
-+ 500:	e85ff0ef          	jal	384 <putc>
-         /* Unknown % sequence.  Print it to draw attention. */
-         putc(fd, '%');
-         putc(fd, c);
-       }
- #endif
-       state = 0;
-- 500:	4981                	li	s3,0
-- 502:	bf49                	j	494 <vprintf+0x4a>
-+ 504:	4981                	li	s3,0
-+ 506:	bf41                	j	496 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 1);
-- 504:	008b8913          	addi	s2,s7,8
-- 508:	4685                	li	a3,1
-- 50a:	4629                	li	a2,10
-- 50c:	000ba583          	lw	a1,0(s7)
-- 510:	855a                	mv	a0,s6
-- 512:	e91ff0ef          	jal	3a2 <printint>
-- 516:	8bca                	mv	s7,s2
-+ 508:	008b8913          	add	s2,s7,8
-+ 50c:	4685                	li	a3,1
-+ 50e:	4629                	li	a2,10
-+ 510:	000ba583          	lw	a1,0(s7)
-+ 514:	855a                	mv	a0,s6
-+ 516:	e8dff0ef          	jal	3a2 <printint>
-+ 51a:	8bca                	mv	s7,s2
-       state = 0;
-- 518:	4981                	li	s3,0
-- 51a:	bfad                	j	494 <vprintf+0x4a>
-+ 51c:	4981                	li	s3,0
-+ 51e:	bfa5                	j	496 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 51c:	06400793          	li	a5,100
-- 520:	02f68963          	beq	a3,a5,552 <vprintf+0x108>
-+ 520:	06400793          	li	a5,100
-+ 524:	02f68963          	beq	a3,a5,556 <vprintf+0x10c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 524:	06c00793          	li	a5,108
-- 528:	04f68263          	beq	a3,a5,56c <vprintf+0x122>
-+ 528:	06c00793          	li	a5,108
-+ 52c:	04f68263          	beq	a3,a5,570 <vprintf+0x126>
-       } else if(c0 == 'l' && c1 == 'u'){
-- 52c:	07500793          	li	a5,117
-- 530:	0af68063          	beq	a3,a5,5d0 <vprintf+0x186>
-+ 530:	07500793          	li	a5,117
-+ 534:	0af68063          	beq	a3,a5,5d4 <vprintf+0x18a>
-       } else if(c0 == 'l' && c1 == 'x'){
-- 534:	07800793          	li	a5,120
-- 538:	0ef68263          	beq	a3,a5,61c <vprintf+0x1d2>
-+ 538:	07800793          	li	a5,120
-+ 53c:	0ef68263          	beq	a3,a5,620 <vprintf+0x1d6>
-         putc(fd, '%');
-- 53c:	02500593          	li	a1,37
-- 540:	855a                	mv	a0,s6
-- 542:	e43ff0ef          	jal	384 <putc>
-+ 540:	02500593          	li	a1,37
-+ 544:	855a                	mv	a0,s6
-+ 546:	e3fff0ef          	jal	384 <putc>
-         putc(fd, c0);
-- 546:	85ca                	mv	a1,s2
-- 548:	855a                	mv	a0,s6
-- 54a:	e3bff0ef          	jal	384 <putc>
-+ 54a:	85ca                	mv	a1,s2
-+ 54c:	855a                	mv	a0,s6
-+ 54e:	e37ff0ef          	jal	384 <putc>
-       state = 0;
-- 54e:	4981                	li	s3,0
-- 550:	b791                	j	494 <vprintf+0x4a>
-+ 552:	4981                	li	s3,0
-+ 554:	b789                	j	496 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 552:	008b8913          	addi	s2,s7,8
-- 556:	4685                	li	a3,1
-- 558:	4629                	li	a2,10
-- 55a:	000ba583          	lw	a1,0(s7)
-- 55e:	855a                	mv	a0,s6
-- 560:	e43ff0ef          	jal	3a2 <printint>
-+ 556:	008b8913          	add	s2,s7,8
-+ 55a:	4685                	li	a3,1
-+ 55c:	4629                	li	a2,10
-+ 55e:	000ba583          	lw	a1,0(s7)
-+ 562:	855a                	mv	a0,s6
-+ 564:	e3fff0ef          	jal	3a2 <printint>
-         i += 1;
-- 564:	2485                	addiw	s1,s1,1
-+ 568:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 566:	8bca                	mv	s7,s2
-+ 56a:	8bca                	mv	s7,s2
-       state = 0;
-- 568:	4981                	li	s3,0
-+ 56c:	4981                	li	s3,0
-         i += 1;
-- 56a:	b72d                	j	494 <vprintf+0x4a>
-+ 56e:	b725                	j	496 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 56c:	06400793          	li	a5,100
-- 570:	02f60763          	beq	a2,a5,59e <vprintf+0x154>
-+ 570:	06400793          	li	a5,100
-+ 574:	02f60763          	beq	a2,a5,5a2 <vprintf+0x158>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-- 574:	07500793          	li	a5,117
-- 578:	06f60963          	beq	a2,a5,5ea <vprintf+0x1a0>
-+ 578:	07500793          	li	a5,117
-+ 57c:	06f60963          	beq	a2,a5,5ee <vprintf+0x1a4>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-- 57c:	07800793          	li	a5,120
-- 580:	faf61ee3          	bne	a2,a5,53c <vprintf+0xf2>
-+ 580:	07800793          	li	a5,120
-+ 584:	faf61ee3          	bne	a2,a5,540 <vprintf+0xf6>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 584:	008b8913          	addi	s2,s7,8
-- 588:	4681                	li	a3,0
-- 58a:	4641                	li	a2,16
-- 58c:	000ba583          	lw	a1,0(s7)
-- 590:	855a                	mv	a0,s6
-- 592:	e11ff0ef          	jal	3a2 <printint>
-+ 588:	008b8913          	add	s2,s7,8
-+ 58c:	4681                	li	a3,0
-+ 58e:	4641                	li	a2,16
-+ 590:	000ba583          	lw	a1,0(s7)
-+ 594:	855a                	mv	a0,s6
-+ 596:	e0dff0ef          	jal	3a2 <printint>
-         i += 2;
-- 596:	2489                	addiw	s1,s1,2
-+ 59a:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 598:	8bca                	mv	s7,s2
-+ 59c:	8bca                	mv	s7,s2
-       state = 0;
-- 59a:	4981                	li	s3,0
-+ 59e:	4981                	li	s3,0
-         i += 2;
-- 59c:	bde5                	j	494 <vprintf+0x4a>
-+ 5a0:	bddd                	j	496 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 59e:	008b8913          	addi	s2,s7,8
-- 5a2:	4685                	li	a3,1
-- 5a4:	4629                	li	a2,10
-- 5a6:	000ba583          	lw	a1,0(s7)
-- 5aa:	855a                	mv	a0,s6
-- 5ac:	df7ff0ef          	jal	3a2 <printint>
-+ 5a2:	008b8913          	add	s2,s7,8
-+ 5a6:	4685                	li	a3,1
-+ 5a8:	4629                	li	a2,10
-+ 5aa:	000ba583          	lw	a1,0(s7)
-+ 5ae:	855a                	mv	a0,s6
-+ 5b0:	df3ff0ef          	jal	3a2 <printint>
-         i += 2;
-- 5b0:	2489                	addiw	s1,s1,2
-+ 5b4:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 5b2:	8bca                	mv	s7,s2
-+ 5b6:	8bca                	mv	s7,s2
-       state = 0;
-- 5b4:	4981                	li	s3,0
-+ 5b8:	4981                	li	s3,0
-         i += 2;
-- 5b6:	bdf9                	j	494 <vprintf+0x4a>
-+ 5ba:	bdf1                	j	496 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 0);
-- 5b8:	008b8913          	addi	s2,s7,8
-- 5bc:	4681                	li	a3,0
-- 5be:	4629                	li	a2,10
-- 5c0:	000ba583          	lw	a1,0(s7)
-- 5c4:	855a                	mv	a0,s6
-- 5c6:	dddff0ef          	jal	3a2 <printint>
-- 5ca:	8bca                	mv	s7,s2
-+ 5bc:	008b8913          	add	s2,s7,8
-+ 5c0:	4681                	li	a3,0
-+ 5c2:	4629                	li	a2,10
-+ 5c4:	000ba583          	lw	a1,0(s7)
-+ 5c8:	855a                	mv	a0,s6
-+ 5ca:	dd9ff0ef          	jal	3a2 <printint>
-+ 5ce:	8bca                	mv	s7,s2
-       state = 0;
-- 5cc:	4981                	li	s3,0
-- 5ce:	b5d9                	j	494 <vprintf+0x4a>
-+ 5d0:	4981                	li	s3,0
-+ 5d2:	b5d1                	j	496 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 5d0:	008b8913          	addi	s2,s7,8
-- 5d4:	4681                	li	a3,0
-- 5d6:	4629                	li	a2,10
-- 5d8:	000ba583          	lw	a1,0(s7)
-- 5dc:	855a                	mv	a0,s6
-- 5de:	dc5ff0ef          	jal	3a2 <printint>
-+ 5d4:	008b8913          	add	s2,s7,8
-+ 5d8:	4681                	li	a3,0
-+ 5da:	4629                	li	a2,10
-+ 5dc:	000ba583          	lw	a1,0(s7)
-+ 5e0:	855a                	mv	a0,s6
-+ 5e2:	dc1ff0ef          	jal	3a2 <printint>
-         i += 1;
-- 5e2:	2485                	addiw	s1,s1,1
-+ 5e6:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 5e4:	8bca                	mv	s7,s2
-+ 5e8:	8bca                	mv	s7,s2
-       state = 0;
-- 5e6:	4981                	li	s3,0
-+ 5ea:	4981                	li	s3,0
-         i += 1;
-- 5e8:	b575                	j	494 <vprintf+0x4a>
-+ 5ec:	b56d                	j	496 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 5ea:	008b8913          	addi	s2,s7,8
-- 5ee:	4681                	li	a3,0
-- 5f0:	4629                	li	a2,10
-- 5f2:	000ba583          	lw	a1,0(s7)
-- 5f6:	855a                	mv	a0,s6
-- 5f8:	dabff0ef          	jal	3a2 <printint>
-+ 5ee:	008b8913          	add	s2,s7,8
-+ 5f2:	4681                	li	a3,0
-+ 5f4:	4629                	li	a2,10
-+ 5f6:	000ba583          	lw	a1,0(s7)
-+ 5fa:	855a                	mv	a0,s6
-+ 5fc:	da7ff0ef          	jal	3a2 <printint>
-         i += 2;
-- 5fc:	2489                	addiw	s1,s1,2
-+ 600:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 5fe:	8bca                	mv	s7,s2
-+ 602:	8bca                	mv	s7,s2
-       state = 0;
-- 600:	4981                	li	s3,0
-+ 604:	4981                	li	s3,0
-         i += 2;
-- 602:	bd49                	j	494 <vprintf+0x4a>
-+ 606:	bd41                	j	496 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 16, 0);
-- 604:	008b8913          	addi	s2,s7,8
-- 608:	4681                	li	a3,0
-- 60a:	4641                	li	a2,16
-- 60c:	000ba583          	lw	a1,0(s7)
-- 610:	855a                	mv	a0,s6
-- 612:	d91ff0ef          	jal	3a2 <printint>
-- 616:	8bca                	mv	s7,s2
-+ 608:	008b8913          	add	s2,s7,8
-+ 60c:	4681                	li	a3,0
-+ 60e:	4641                	li	a2,16
-+ 610:	000ba583          	lw	a1,0(s7)
-+ 614:	855a                	mv	a0,s6
-+ 616:	d8dff0ef          	jal	3a2 <printint>
-+ 61a:	8bca                	mv	s7,s2
-       state = 0;
-- 618:	4981                	li	s3,0
-- 61a:	bdad                	j	494 <vprintf+0x4a>
-+ 61c:	4981                	li	s3,0
-+ 61e:	bda5                	j	496 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 61c:	008b8913          	addi	s2,s7,8
-- 620:	4681                	li	a3,0
-- 622:	4641                	li	a2,16
-- 624:	000ba583          	lw	a1,0(s7)
-- 628:	855a                	mv	a0,s6
-- 62a:	d79ff0ef          	jal	3a2 <printint>
-+ 620:	008b8913          	add	s2,s7,8
-+ 624:	4681                	li	a3,0
-+ 626:	4641                	li	a2,16
-+ 628:	000ba583          	lw	a1,0(s7)
-+ 62c:	855a                	mv	a0,s6
-+ 62e:	d75ff0ef          	jal	3a2 <printint>
-         i += 1;
-- 62e:	2485                	addiw	s1,s1,1
-+ 632:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 630:	8bca                	mv	s7,s2
-+ 634:	8bca                	mv	s7,s2
-       state = 0;
-- 632:	4981                	li	s3,0
-+ 636:	4981                	li	s3,0
-         i += 1;
-- 634:	b585                	j	494 <vprintf+0x4a>
-- 636:	e06a                	sd	s10,0(sp)
-+ 638:	bdb9                	j	496 <vprintf+0x4c>
-         printptr(fd, va_arg(ap, uint64));
-- 638:	008b8d13          	addi	s10,s7,8
-- 63c:	000bb983          	ld	s3,0(s7)
-+ 63a:	008b8d13          	add	s10,s7,8
-+ 63e:	000bb983          	ld	s3,0(s7)
-   putc(fd, '0');
-- 640:	03000593          	li	a1,48
-- 644:	855a                	mv	a0,s6
-- 646:	d3fff0ef          	jal	384 <putc>
-+ 642:	03000593          	li	a1,48
-+ 646:	855a                	mv	a0,s6
-+ 648:	d3dff0ef          	jal	384 <putc>
-   putc(fd, 'x');
-- 64a:	07800593          	li	a1,120
-- 64e:	855a                	mv	a0,s6
-- 650:	d35ff0ef          	jal	384 <putc>
-- 654:	4941                	li	s2,16
-+ 64c:	07800593          	li	a1,120
-+ 650:	855a                	mv	a0,s6
-+ 652:	d33ff0ef          	jal	384 <putc>
-+ 656:	4941                	li	s2,16
-     putc(fd, digits[x >> (sizeof(uint64) * 8 - 4)]);
-- 656:	00000b97          	auipc	s7,0x0
-- 65a:	272b8b93          	addi	s7,s7,626 # 8c8 <digits>
-- 65e:	03c9d793          	srli	a5,s3,0x3c
-- 662:	97de                	add	a5,a5,s7
-- 664:	0007c583          	lbu	a1,0(a5)
-- 668:	855a                	mv	a0,s6
-- 66a:	d1bff0ef          	jal	384 <putc>
-+ 658:	00000b97          	auipc	s7,0x0
-+ 65c:	250b8b93          	add	s7,s7,592 # 8a8 <digits>
-+ 660:	03c9d793          	srl	a5,s3,0x3c
-+ 664:	97de                	add	a5,a5,s7
-+ 666:	0007c583          	lbu	a1,0(a5)
-+ 66a:	855a                	mv	a0,s6
-+ 66c:	d19ff0ef          	jal	384 <putc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
-- 66e:	0992                	slli	s3,s3,0x4
-- 670:	397d                	addiw	s2,s2,-1
-- 672:	fe0916e3          	bnez	s2,65e <vprintf+0x214>
-+ 670:	0992                	sll	s3,s3,0x4
-+ 672:	397d                	addw	s2,s2,-1
-+ 674:	fe0916e3          	bnez	s2,660 <vprintf+0x216>
-         printptr(fd, va_arg(ap, uint64));
-- 676:	8bea                	mv	s7,s10
-+ 678:	8bea                	mv	s7,s10
-       state = 0;
-- 678:	4981                	li	s3,0
-- 67a:	6d02                	ld	s10,0(sp)
-- 67c:	bd21                	j	494 <vprintf+0x4a>
-+ 67a:	4981                	li	s3,0
-+ 67c:	bd29                	j	496 <vprintf+0x4c>
-         if((s = va_arg(ap, char*)) == 0)
-- 67e:	008b8993          	addi	s3,s7,8
-+ 67e:	008b8993          	add	s3,s7,8
-  682:	000bb903          	ld	s2,0(s7)
-  686:	00090f63          	beqz	s2,6a4 <vprintf+0x25a>
-         for(; *s; s++)
-@@ -1155,17 +1155,17 @@ vprintf(int fd, const char *fmt, va_list ap)
-  690:	855a                	mv	a0,s6
-  692:	cf3ff0ef          	jal	384 <putc>
-         for(; *s; s++)
-- 696:	0905                	addi	s2,s2,1
-+ 696:	0905                	add	s2,s2,1
-  698:	00094583          	lbu	a1,0(s2)
-  69c:	f9f5                	bnez	a1,690 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-  69e:	8bce                	mv	s7,s3
-       state = 0;
-  6a0:	4981                	li	s3,0
-- 6a2:	bbcd                	j	494 <vprintf+0x4a>
-+ 6a2:	bbd5                	j	496 <vprintf+0x4c>
-           s = "(null)";
-  6a4:	00000917          	auipc	s2,0x0
-- 6a8:	21c90913          	addi	s2,s2,540 # 8c0 <malloc+0x110>
-+ 6a8:	1fc90913          	add	s2,s2,508 # 8a0 <malloc+0xee>
-         for(; *s; s++)
-  6ac:	02800593          	li	a1,40
-  6b0:	b7c5                	j	690 <vprintf+0x246>
-@@ -1173,298 +1173,288 @@ vprintf(int fd, const char *fmt, va_list ap)
-  6b2:	8bce                	mv	s7,s3
-       state = 0;
-  6b4:	4981                	li	s3,0
-- 6b6:	bbf9                	j	494 <vprintf+0x4a>
-- 6b8:	64a6                	ld	s1,72(sp)
-- 6ba:	79e2                	ld	s3,56(sp)
-- 6bc:	7a42                	ld	s4,48(sp)
-- 6be:	7aa2                	ld	s5,40(sp)
-- 6c0:	7b02                	ld	s6,32(sp)
-- 6c2:	6be2                	ld	s7,24(sp)
-- 6c4:	6c42                	ld	s8,16(sp)
-- 6c6:	6ca2                	ld	s9,8(sp)
-+ 6b6:	b3c5                	j	496 <vprintf+0x4c>
-     }
-   }
- }
-- 6c8:	60e6                	ld	ra,88(sp)
-- 6ca:	6446                	ld	s0,80(sp)
-- 6cc:	6906                	ld	s2,64(sp)
-- 6ce:	6125                	addi	sp,sp,96
-- 6d0:	8082                	ret
--
--00000000000006d2 <fprintf>:
-+ 6b8:	60e6                	ld	ra,88(sp)
-+ 6ba:	6446                	ld	s0,80(sp)
-+ 6bc:	64a6                	ld	s1,72(sp)
-+ 6be:	6906                	ld	s2,64(sp)
-+ 6c0:	79e2                	ld	s3,56(sp)
-+ 6c2:	7a42                	ld	s4,48(sp)
-+ 6c4:	7aa2                	ld	s5,40(sp)
-+ 6c6:	7b02                	ld	s6,32(sp)
-+ 6c8:	6be2                	ld	s7,24(sp)
-+ 6ca:	6c42                	ld	s8,16(sp)
-+ 6cc:	6ca2                	ld	s9,8(sp)
-+ 6ce:	6d02                	ld	s10,0(sp)
-+ 6d0:	6125                	add	sp,sp,96
-+ 6d2:	8082                	ret
-+
-+00000000000006d4 <fprintf>:
- 
- void
- fprintf(int fd, const char *fmt, ...)
- {
-- 6d2:	715d                	addi	sp,sp,-80
-- 6d4:	ec06                	sd	ra,24(sp)
-- 6d6:	e822                	sd	s0,16(sp)
-- 6d8:	1000                	addi	s0,sp,32
-- 6da:	e010                	sd	a2,0(s0)
-- 6dc:	e414                	sd	a3,8(s0)
-- 6de:	e818                	sd	a4,16(s0)
-- 6e0:	ec1c                	sd	a5,24(s0)
-- 6e2:	03043023          	sd	a6,32(s0)
-- 6e6:	03143423          	sd	a7,40(s0)
-+ 6d4:	715d                	add	sp,sp,-80
-+ 6d6:	ec06                	sd	ra,24(sp)
-+ 6d8:	e822                	sd	s0,16(sp)
-+ 6da:	1000                	add	s0,sp,32
-+ 6dc:	e010                	sd	a2,0(s0)
-+ 6de:	e414                	sd	a3,8(s0)
-+ 6e0:	e818                	sd	a4,16(s0)
-+ 6e2:	ec1c                	sd	a5,24(s0)
-+ 6e4:	03043023          	sd	a6,32(s0)
-+ 6e8:	03143423          	sd	a7,40(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 6ea:	fe843423          	sd	s0,-24(s0)
-+ 6ec:	fe843423          	sd	s0,-24(s0)
-   vprintf(fd, fmt, ap);
-- 6ee:	8622                	mv	a2,s0
-- 6f0:	d5bff0ef          	jal	44a <vprintf>
-+ 6f0:	8622                	mv	a2,s0
-+ 6f2:	d59ff0ef          	jal	44a <vprintf>
- }
-- 6f4:	60e2                	ld	ra,24(sp)
-- 6f6:	6442                	ld	s0,16(sp)
-- 6f8:	6161                	addi	sp,sp,80
-- 6fa:	8082                	ret
-+ 6f6:	60e2                	ld	ra,24(sp)
-+ 6f8:	6442                	ld	s0,16(sp)
-+ 6fa:	6161                	add	sp,sp,80
-+ 6fc:	8082                	ret
- 
--00000000000006fc <printf>:
-+00000000000006fe <printf>:
- 
- void
- printf(const char *fmt, ...)
- {
-- 6fc:	711d                	addi	sp,sp,-96
-- 6fe:	ec06                	sd	ra,24(sp)
-- 700:	e822                	sd	s0,16(sp)
-- 702:	1000                	addi	s0,sp,32
-- 704:	e40c                	sd	a1,8(s0)
-- 706:	e810                	sd	a2,16(s0)
-- 708:	ec14                	sd	a3,24(s0)
-- 70a:	f018                	sd	a4,32(s0)
-- 70c:	f41c                	sd	a5,40(s0)
-- 70e:	03043823          	sd	a6,48(s0)
-- 712:	03143c23          	sd	a7,56(s0)
-+ 6fe:	711d                	add	sp,sp,-96
-+ 700:	ec06                	sd	ra,24(sp)
-+ 702:	e822                	sd	s0,16(sp)
-+ 704:	1000                	add	s0,sp,32
-+ 706:	e40c                	sd	a1,8(s0)
-+ 708:	e810                	sd	a2,16(s0)
-+ 70a:	ec14                	sd	a3,24(s0)
-+ 70c:	f018                	sd	a4,32(s0)
-+ 70e:	f41c                	sd	a5,40(s0)
-+ 710:	03043823          	sd	a6,48(s0)
-+ 714:	03143c23          	sd	a7,56(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 716:	00840613          	addi	a2,s0,8
-- 71a:	fec43423          	sd	a2,-24(s0)
-+ 718:	00840613          	add	a2,s0,8
-+ 71c:	fec43423          	sd	a2,-24(s0)
-   vprintf(1, fmt, ap);
-- 71e:	85aa                	mv	a1,a0
-- 720:	4505                	li	a0,1
-- 722:	d29ff0ef          	jal	44a <vprintf>
-+ 720:	85aa                	mv	a1,a0
-+ 722:	4505                	li	a0,1
-+ 724:	d27ff0ef          	jal	44a <vprintf>
- }
-- 726:	60e2                	ld	ra,24(sp)
-- 728:	6442                	ld	s0,16(sp)
-- 72a:	6125                	addi	sp,sp,96
-- 72c:	8082                	ret
-+ 728:	60e2                	ld	ra,24(sp)
-+ 72a:	6442                	ld	s0,16(sp)
-+ 72c:	6125                	add	sp,sp,96
-+ 72e:	8082                	ret
- 
--000000000000072e <free>:
-+0000000000000730 <free>:
- static Header base;
- static Header *freep;
- 
- void
- free(void *ap)
- {
-- 72e:	1141                	addi	sp,sp,-16
-- 730:	e422                	sd	s0,8(sp)
-- 732:	0800                	addi	s0,sp,16
-+ 730:	1141                	add	sp,sp,-16
-+ 732:	e422                	sd	s0,8(sp)
-+ 734:	0800                	add	s0,sp,16
-   Header *bp, *p;
- 
-   bp = (Header*)ap - 1;
-- 734:	ff050693          	addi	a3,a0,-16
-+ 736:	ff050693          	add	a3,a0,-16
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 738:	00001797          	auipc	a5,0x1
-- 73c:	8c87b783          	ld	a5,-1848(a5) # 1000 <freep>
-- 740:	a02d                	j	76a <free+0x3c>
-+ 73a:	00001797          	auipc	a5,0x1
-+ 73e:	8c67b783          	ld	a5,-1850(a5) # 1000 <freep>
-+ 742:	a02d                	j	76c <free+0x3c>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-       break;
-   if(bp + bp->s.size == p->s.ptr){
-     bp->s.size += p->s.ptr->s.size;
-- 742:	4618                	lw	a4,8(a2)
-- 744:	9f2d                	addw	a4,a4,a1
-- 746:	fee52c23          	sw	a4,-8(a0)
-+ 744:	4618                	lw	a4,8(a2)
-+ 746:	9f2d                	addw	a4,a4,a1
-+ 748:	fee52c23          	sw	a4,-8(a0)
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 74a:	6398                	ld	a4,0(a5)
-- 74c:	6310                	ld	a2,0(a4)
-- 74e:	a83d                	j	78c <free+0x5e>
-+ 74c:	6398                	ld	a4,0(a5)
-+ 74e:	6310                	ld	a2,0(a4)
-+ 750:	a83d                	j	78e <free+0x5e>
-   } else
-     bp->s.ptr = p->s.ptr;
-   if(p + p->s.size == bp){
-     p->s.size += bp->s.size;
-- 750:	ff852703          	lw	a4,-8(a0)
-- 754:	9f31                	addw	a4,a4,a2
-- 756:	c798                	sw	a4,8(a5)
-+ 752:	ff852703          	lw	a4,-8(a0)
-+ 756:	9f31                	addw	a4,a4,a2
-+ 758:	c798                	sw	a4,8(a5)
-     p->s.ptr = bp->s.ptr;
-- 758:	ff053683          	ld	a3,-16(a0)
-- 75c:	a091                	j	7a0 <free+0x72>
-+ 75a:	ff053683          	ld	a3,-16(a0)
-+ 75e:	a091                	j	7a2 <free+0x72>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 75e:	6398                	ld	a4,0(a5)
-- 760:	00e7e463          	bltu	a5,a4,768 <free+0x3a>
-- 764:	00e6ea63          	bltu	a3,a4,778 <free+0x4a>
-+ 760:	6398                	ld	a4,0(a5)
-+ 762:	00e7e463          	bltu	a5,a4,76a <free+0x3a>
-+ 766:	00e6ea63          	bltu	a3,a4,77a <free+0x4a>
- {
-- 768:	87ba                	mv	a5,a4
-+ 76a:	87ba                	mv	a5,a4
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 76a:	fed7fae3          	bgeu	a5,a3,75e <free+0x30>
-- 76e:	6398                	ld	a4,0(a5)
-- 770:	00e6e463          	bltu	a3,a4,778 <free+0x4a>
-+ 76c:	fed7fae3          	bgeu	a5,a3,760 <free+0x30>
-+ 770:	6398                	ld	a4,0(a5)
-+ 772:	00e6e463          	bltu	a3,a4,77a <free+0x4a>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 774:	fee7eae3          	bltu	a5,a4,768 <free+0x3a>
-+ 776:	fee7eae3          	bltu	a5,a4,76a <free+0x3a>
-   if(bp + bp->s.size == p->s.ptr){
-- 778:	ff852583          	lw	a1,-8(a0)
-- 77c:	6390                	ld	a2,0(a5)
-- 77e:	02059813          	slli	a6,a1,0x20
-- 782:	01c85713          	srli	a4,a6,0x1c
-- 786:	9736                	add	a4,a4,a3
-- 788:	fae60de3          	beq	a2,a4,742 <free+0x14>
-+ 77a:	ff852583          	lw	a1,-8(a0)
-+ 77e:	6390                	ld	a2,0(a5)
-+ 780:	02059813          	sll	a6,a1,0x20
-+ 784:	01c85713          	srl	a4,a6,0x1c
-+ 788:	9736                	add	a4,a4,a3
-+ 78a:	fae60de3          	beq	a2,a4,744 <free+0x14>
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 78c:	fec53823          	sd	a2,-16(a0)
-+ 78e:	fec53823          	sd	a2,-16(a0)
-   if(p + p->s.size == bp){
-- 790:	4790                	lw	a2,8(a5)
-- 792:	02061593          	slli	a1,a2,0x20
-- 796:	01c5d713          	srli	a4,a1,0x1c
-- 79a:	973e                	add	a4,a4,a5
-- 79c:	fae68ae3          	beq	a3,a4,750 <free+0x22>
-+ 792:	4790                	lw	a2,8(a5)
-+ 794:	02061593          	sll	a1,a2,0x20
-+ 798:	01c5d713          	srl	a4,a1,0x1c
-+ 79c:	973e                	add	a4,a4,a5
-+ 79e:	fae68ae3          	beq	a3,a4,752 <free+0x22>
-     p->s.ptr = bp->s.ptr;
-- 7a0:	e394                	sd	a3,0(a5)
-+ 7a2:	e394                	sd	a3,0(a5)
-   } else
-     p->s.ptr = bp;
-   freep = p;
-- 7a2:	00001717          	auipc	a4,0x1
-- 7a6:	84f73f23          	sd	a5,-1954(a4) # 1000 <freep>
-+ 7a4:	00001717          	auipc	a4,0x1
-+ 7a8:	84f73e23          	sd	a5,-1956(a4) # 1000 <freep>
- }
-- 7aa:	6422                	ld	s0,8(sp)
-- 7ac:	0141                	addi	sp,sp,16
-- 7ae:	8082                	ret
-+ 7ac:	6422                	ld	s0,8(sp)
-+ 7ae:	0141                	add	sp,sp,16
-+ 7b0:	8082                	ret
- 
--00000000000007b0 <malloc>:
-+00000000000007b2 <malloc>:
-   return freep;
- }
- 
- void*
- malloc(uint nbytes)
- {
-- 7b0:	7139                	addi	sp,sp,-64
-- 7b2:	fc06                	sd	ra,56(sp)
-- 7b4:	f822                	sd	s0,48(sp)
-- 7b6:	f426                	sd	s1,40(sp)
-- 7b8:	ec4e                	sd	s3,24(sp)
-- 7ba:	0080                	addi	s0,sp,64
-+ 7b2:	7139                	add	sp,sp,-64
-+ 7b4:	fc06                	sd	ra,56(sp)
-+ 7b6:	f822                	sd	s0,48(sp)
-+ 7b8:	f426                	sd	s1,40(sp)
-+ 7ba:	f04a                	sd	s2,32(sp)
-+ 7bc:	ec4e                	sd	s3,24(sp)
-+ 7be:	e852                	sd	s4,16(sp)
-+ 7c0:	e456                	sd	s5,8(sp)
-+ 7c2:	e05a                	sd	s6,0(sp)
-+ 7c4:	0080                	add	s0,sp,64
-   Header *p, *prevp;
-   uint nunits;
- 
-   nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;
-- 7bc:	02051493          	slli	s1,a0,0x20
-- 7c0:	9081                	srli	s1,s1,0x20
-- 7c2:	04bd                	addi	s1,s1,15
-- 7c4:	8091                	srli	s1,s1,0x4
-- 7c6:	0014899b          	addiw	s3,s1,1
-- 7ca:	0485                	addi	s1,s1,1
-+ 7c6:	02051493          	sll	s1,a0,0x20
-+ 7ca:	9081                	srl	s1,s1,0x20
-+ 7cc:	04bd                	add	s1,s1,15
-+ 7ce:	8091                	srl	s1,s1,0x4
-+ 7d0:	0014899b          	addw	s3,s1,1
-+ 7d4:	0485                	add	s1,s1,1
-   if((prevp = freep) == 0){
-- 7cc:	00001517          	auipc	a0,0x1
-- 7d0:	83453503          	ld	a0,-1996(a0) # 1000 <freep>
-- 7d4:	c915                	beqz	a0,808 <malloc+0x58>
-+ 7d6:	00001517          	auipc	a0,0x1
-+ 7da:	82a53503          	ld	a0,-2006(a0) # 1000 <freep>
-+ 7de:	c515                	beqz	a0,80a <malloc+0x58>
-     base.s.ptr = freep = prevp = &base;
-     base.s.size = 0;
-   }
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 7d6:	611c                	ld	a5,0(a0)
-+ 7e0:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 7d8:	4798                	lw	a4,8(a5)
-- 7da:	08977a63          	bgeu	a4,s1,86e <malloc+0xbe>
-- 7de:	f04a                	sd	s2,32(sp)
-- 7e0:	e852                	sd	s4,16(sp)
-- 7e2:	e456                	sd	s5,8(sp)
-- 7e4:	e05a                	sd	s6,0(sp)
-+ 7e2:	4798                	lw	a4,8(a5)
-+ 7e4:	02977f63          	bgeu	a4,s1,822 <malloc+0x70>
-   if(nu < 4096)
-- 7e6:	8a4e                	mv	s4,s3
-- 7e8:	0009871b          	sext.w	a4,s3
-- 7ec:	6685                	lui	a3,0x1
-- 7ee:	00d77363          	bgeu	a4,a3,7f4 <malloc+0x44>
-- 7f2:	6a05                	lui	s4,0x1
-- 7f4:	000a0b1b          	sext.w	s6,s4
-+ 7e8:	8a4e                	mv	s4,s3
-+ 7ea:	0009871b          	sext.w	a4,s3
-+ 7ee:	6685                	lui	a3,0x1
-+ 7f0:	00d77363          	bgeu	a4,a3,7f6 <malloc+0x44>
-+ 7f4:	6a05                	lui	s4,0x1
-+ 7f6:	000a0b1b          	sext.w	s6,s4
-   p = sbrk(nu * sizeof(Header));
-- 7f8:	004a1a1b          	slliw	s4,s4,0x4
-+ 7fa:	004a1a1b          	sllw	s4,s4,0x4
-         p->s.size = nunits;
-       }
-       freep = prevp;
-       return (void*)(p + 1);
-     }
-     if(p == freep)
-- 7fc:	00001917          	auipc	s2,0x1
-- 800:	80490913          	addi	s2,s2,-2044 # 1000 <freep>
-+ 7fe:	00001917          	auipc	s2,0x1
-+ 802:	80290913          	add	s2,s2,-2046 # 1000 <freep>
-   if(p == (char*)-1)
-- 804:	5afd                	li	s5,-1
-- 806:	a081                	j	846 <malloc+0x96>
-- 808:	f04a                	sd	s2,32(sp)
-- 80a:	e852                	sd	s4,16(sp)
-- 80c:	e456                	sd	s5,8(sp)
-- 80e:	e05a                	sd	s6,0(sp)
-+ 806:	5afd                	li	s5,-1
-+ 808:	a885                	j	878 <malloc+0xc6>
-     base.s.ptr = freep = prevp = &base;
-- 810:	00001797          	auipc	a5,0x1
-- 814:	80078793          	addi	a5,a5,-2048 # 1010 <base>
-- 818:	00000717          	auipc	a4,0x0
-- 81c:	7ef73423          	sd	a5,2024(a4) # 1000 <freep>
-- 820:	e39c                	sd	a5,0(a5)
-+ 80a:	00001797          	auipc	a5,0x1
-+ 80e:	80678793          	add	a5,a5,-2042 # 1010 <base>
-+ 812:	00000717          	auipc	a4,0x0
-+ 816:	7ef73723          	sd	a5,2030(a4) # 1000 <freep>
-+ 81a:	e39c                	sd	a5,0(a5)
-     base.s.size = 0;
-- 822:	0007a423          	sw	zero,8(a5)
-+ 81c:	0007a423          	sw	zero,8(a5)
-     if(p->s.size >= nunits){
-- 826:	b7c1                	j	7e6 <malloc+0x36>
-+ 820:	b7e1                	j	7e8 <malloc+0x36>
-+      if(p->s.size == nunits)
-+ 822:	02e48c63          	beq	s1,a4,85a <malloc+0xa8>
-+        p->s.size -= nunits;
-+ 826:	4137073b          	subw	a4,a4,s3
-+ 82a:	c798                	sw	a4,8(a5)
-+        p += p->s.size;
-+ 82c:	02071693          	sll	a3,a4,0x20
-+ 830:	01c6d713          	srl	a4,a3,0x1c
-+ 834:	97ba                	add	a5,a5,a4
-+        p->s.size = nunits;
-+ 836:	0137a423          	sw	s3,8(a5)
-+      freep = prevp;
-+ 83a:	00000717          	auipc	a4,0x0
-+ 83e:	7ca73323          	sd	a0,1990(a4) # 1000 <freep>
-+      return (void*)(p + 1);
-+ 842:	01078513          	add	a0,a5,16
-+      if((p = morecore(nunits)) == 0)
-+        return 0;
-+  }
-+}
-+ 846:	70e2                	ld	ra,56(sp)
-+ 848:	7442                	ld	s0,48(sp)
-+ 84a:	74a2                	ld	s1,40(sp)
-+ 84c:	7902                	ld	s2,32(sp)
-+ 84e:	69e2                	ld	s3,24(sp)
-+ 850:	6a42                	ld	s4,16(sp)
-+ 852:	6aa2                	ld	s5,8(sp)
-+ 854:	6b02                	ld	s6,0(sp)
-+ 856:	6121                	add	sp,sp,64
-+ 858:	8082                	ret
-         prevp->s.ptr = p->s.ptr;
-- 828:	6398                	ld	a4,0(a5)
-- 82a:	e118                	sd	a4,0(a0)
-- 82c:	a8a9                	j	886 <malloc+0xd6>
-+ 85a:	6398                	ld	a4,0(a5)
-+ 85c:	e118                	sd	a4,0(a0)
-+ 85e:	bff1                	j	83a <malloc+0x88>
-   hp->s.size = nu;
-- 82e:	01652423          	sw	s6,8(a0)
-+ 860:	01652423          	sw	s6,8(a0)
-   free((void*)(hp + 1));
-- 832:	0541                	addi	a0,a0,16
-- 834:	efbff0ef          	jal	72e <free>
-+ 864:	0541                	add	a0,a0,16
-+ 866:	ecbff0ef          	jal	730 <free>
-   return freep;
-- 838:	00093503          	ld	a0,0(s2)
-+ 86a:	00093503          	ld	a0,0(s2)
-       if((p = morecore(nunits)) == 0)
-- 83c:	c12d                	beqz	a0,89e <malloc+0xee>
-+ 86e:	dd61                	beqz	a0,846 <malloc+0x94>
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 83e:	611c                	ld	a5,0(a0)
-+ 870:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 840:	4798                	lw	a4,8(a5)
-- 842:	02977263          	bgeu	a4,s1,866 <malloc+0xb6>
-+ 872:	4798                	lw	a4,8(a5)
-+ 874:	fa9777e3          	bgeu	a4,s1,822 <malloc+0x70>
-     if(p == freep)
-- 846:	00093703          	ld	a4,0(s2)
-- 84a:	853e                	mv	a0,a5
-- 84c:	fef719e3          	bne	a4,a5,83e <malloc+0x8e>
-+ 878:	00093703          	ld	a4,0(s2)
-+ 87c:	853e                	mv	a0,a5
-+ 87e:	fef719e3          	bne	a4,a5,870 <malloc+0xbe>
-   p = sbrk(nu * sizeof(Header));
-- 850:	8552                	mv	a0,s4
-- 852:	b1bff0ef          	jal	36c <sbrk>
-+ 882:	8552                	mv	a0,s4
-+ 884:	ae9ff0ef          	jal	36c <sbrk>
-   if(p == (char*)-1)
-- 856:	fd551ce3          	bne	a0,s5,82e <malloc+0x7e>
-+ 888:	fd551ce3          	bne	a0,s5,860 <malloc+0xae>
-         return 0;
-- 85a:	4501                	li	a0,0
-- 85c:	7902                	ld	s2,32(sp)
-- 85e:	6a42                	ld	s4,16(sp)
-- 860:	6aa2                	ld	s5,8(sp)
-- 862:	6b02                	ld	s6,0(sp)
-- 864:	a03d                	j	892 <malloc+0xe2>
-- 866:	7902                	ld	s2,32(sp)
-- 868:	6a42                	ld	s4,16(sp)
-- 86a:	6aa2                	ld	s5,8(sp)
-- 86c:	6b02                	ld	s6,0(sp)
--      if(p->s.size == nunits)
-- 86e:	fae48de3          	beq	s1,a4,828 <malloc+0x78>
--        p->s.size -= nunits;
-- 872:	4137073b          	subw	a4,a4,s3
-- 876:	c798                	sw	a4,8(a5)
--        p += p->s.size;
-- 878:	02071693          	slli	a3,a4,0x20
-- 87c:	01c6d713          	srli	a4,a3,0x1c
-- 880:	97ba                	add	a5,a5,a4
--        p->s.size = nunits;
-- 882:	0137a423          	sw	s3,8(a5)
--      freep = prevp;
-- 886:	00000717          	auipc	a4,0x0
-- 88a:	76a73d23          	sd	a0,1914(a4) # 1000 <freep>
--      return (void*)(p + 1);
-- 88e:	01078513          	addi	a0,a5,16
--  }
--}
-- 892:	70e2                	ld	ra,56(sp)
-- 894:	7442                	ld	s0,48(sp)
-- 896:	74a2                	ld	s1,40(sp)
-- 898:	69e2                	ld	s3,24(sp)
-- 89a:	6121                	addi	sp,sp,64
-- 89c:	8082                	ret
-- 89e:	7902                	ld	s2,32(sp)
-- 8a0:	6a42                	ld	s4,16(sp)
-- 8a2:	6aa2                	ld	s5,8(sp)
-- 8a4:	6b02                	ld	s6,0(sp)
-- 8a6:	b7f5                	j	892 <malloc+0xe2>
-+ 88c:	4501                	li	a0,0
-+ 88e:	bf65                	j	846 <malloc+0x94>
-diff --git a/Assignments/Assignment-6/xv6/user/echo.d b/Assignments/Assignment-6/xv6/user/echo.d
-index 5ec57bc..ccfe984 100644
---- a/Assignments/Assignment-6/xv6/user/echo.d
-+++ b/Assignments/Assignment-6/xv6/user/echo.d
-@@ -1,3 +1 @@
--user/echo.o: user/echo.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/stat.h user/user.h
-+user/echo.o: user/echo.c kernel/types.h kernel/stat.h user/user.h
-diff --git a/Assignments/Assignment-6/xv6/user/echo.o b/Assignments/Assignment-6/xv6/user/echo.o
-index f1b99e5..9c29f9b 100644
-Binary files a/Assignments/Assignment-6/xv6/user/echo.o and b/Assignments/Assignment-6/xv6/user/echo.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/echo.sym b/Assignments/Assignment-6/xv6/user/echo.sym
-index aa95bfa..f5e7025 100644
---- a/Assignments/Assignment-6/xv6/user/echo.sym
-+++ b/Assignments/Assignment-6/xv6/user/echo.sym
-@@ -1,6 +1,5 @@
- 0000000000000000 .text
--00000000000008a8 .rodata
--00000000000008e0 .eh_frame
-+0000000000000890 .rodata
- 0000000000001000 .data
- 0000000000001000 .bss
- 0000000000000000 .debug_info
-@@ -11,6 +10,7 @@
- 0000000000000000 .debug_str
- 0000000000000000 .comment
- 0000000000000000 .riscv.attributes
-+0000000000000000 .debug_frame
- 0000000000000000 .debug_ranges
- 0000000000000000 echo.c
- 0000000000000000 ulib.c
-@@ -18,23 +18,23 @@
- 0000000000000000 printf.c
- 0000000000000384 putc
- 00000000000003a2 printint
--00000000000008c8 digits
-+00000000000008a8 digits
- 0000000000000000 umalloc.c
- 0000000000001000 freep
- 0000000000001010 base
- 000000000000008c strcpy
--00000000000006fc printf
-+00000000000006fe printf
- 0000000000000236 memmove
- 000000000000032c mknod
- 0000000000000144 gets
- 0000000000000364 getpid
- 00000000000002c8 memcpy
--00000000000007b0 malloc
-+00000000000007b2 malloc
- 0000000000000374 sleep
- 00000000000002f4 pipe
- 0000000000000304 write
- 000000000000033c fstat
--00000000000006d2 fprintf
-+00000000000006d4 fprintf
- 0000000000000314 kill
- 000000000000044a vprintf
- 0000000000000354 chdir
-@@ -60,4 +60,4 @@
- 0000000000000120 strchr
- 000000000000034c mkdir
- 000000000000030c close
--000000000000072e free
-+0000000000000730 free
-diff --git a/Assignments/Assignment-6/xv6/user/forktest.asm b/Assignments/Assignment-6/xv6/user/forktest.asm
-index a4e30a0..32ac891 100644
---- a/Assignments/Assignment-6/xv6/user/forktest.asm
-+++ b/Assignments/Assignment-6/xv6/user/forktest.asm
-@@ -11,23 +11,23 @@ Disassembly of section .text:
- void
- print(const char *s)
- {
--   0:	1101                	addi	sp,sp,-32
-+   0:	1101                	add	sp,sp,-32
-    2:	ec06                	sd	ra,24(sp)
-    4:	e822                	sd	s0,16(sp)
-    6:	e426                	sd	s1,8(sp)
--   8:	1000                	addi	s0,sp,32
-+   8:	1000                	add	s0,sp,32
-    a:	84aa                	mv	s1,a0
-   write(1, s, strlen(s));
--   c:	124000ef          	jal	130 <strlen>
-+   c:	12c000ef          	jal	138 <strlen>
-   10:	0005061b          	sext.w	a2,a0
-   14:	85a6                	mv	a1,s1
-   16:	4505                	li	a0,1
--  18:	348000ef          	jal	360 <write>
-+  18:	350000ef          	jal	368 <write>
- }
-   1c:	60e2                	ld	ra,24(sp)
-   1e:	6442                	ld	s0,16(sp)
-   20:	64a2                	ld	s1,8(sp)
--  22:	6105                	addi	sp,sp,32
-+  22:	6105                	add	sp,sp,32
-   24:	8082                	ret
- 
- 0000000000000026 <forktest>:
-@@ -35,31 +35,31 @@ print(const char *s)
- void
- forktest(void)
- {
--  26:	1101                	addi	sp,sp,-32
-+  26:	1101                	add	sp,sp,-32
-   28:	ec06                	sd	ra,24(sp)
-   2a:	e822                	sd	s0,16(sp)
-   2c:	e426                	sd	s1,8(sp)
-   2e:	e04a                	sd	s2,0(sp)
--  30:	1000                	addi	s0,sp,32
-+  30:	1000                	add	s0,sp,32
-   int n, pid;
- 
-   print("fork test\n");
-   32:	00000517          	auipc	a0,0x0
--  36:	3ae50513          	addi	a0,a0,942 # 3e0 <uptime+0x8>
-+  36:	3b650513          	add	a0,a0,950 # 3e8 <uptime+0x8>
-   3a:	fc7ff0ef          	jal	0 <print>
- 
-   for(n=0; n<N; n++){
-   3e:	4481                	li	s1,0
-   40:	3e800913          	li	s2,1000
-     pid = fork();
--  44:	2f4000ef          	jal	338 <fork>
-+  44:	2fc000ef          	jal	340 <fork>
-     if(pid < 0)
--  48:	04054363          	bltz	a0,8e <forktest+0x68>
-+  48:	02054163          	bltz	a0,6a <forktest+0x44>
-       break;
-     if(pid == 0)
-   4c:	cd09                	beqz	a0,66 <forktest+0x40>
-   for(n=0; n<N; n++){
--  4e:	2485                	addiw	s1,s1,1
-+  4e:	2485                	addw	s1,s1,1
-   50:	ff249ae3          	bne	s1,s2,44 <forktest+0x1e>
-       exit(0);
-   }
-@@ -67,717 +67,721 @@ forktest(void)
-   if(n == N){
-     print("fork claimed to work N times!\n");
-   54:	00000517          	auipc	a0,0x0
--  58:	3dc50513          	addi	a0,a0,988 # 430 <uptime+0x58>
-+  58:	3a450513          	add	a0,a0,932 # 3f8 <uptime+0x18>
-   5c:	fa5ff0ef          	jal	0 <print>
-     exit(1);
-   60:	4505                	li	a0,1
--  62:	2de000ef          	jal	340 <exit>
-+  62:	2e6000ef          	jal	348 <exit>
-       exit(0);
--  66:	2da000ef          	jal	340 <exit>
-+  66:	2e2000ef          	jal	348 <exit>
-+  if(n == N){
-+  6a:	3e800793          	li	a5,1000
-+  6e:	fef483e3          	beq	s1,a5,54 <forktest+0x2e>
-   }
- 
-   for(; n > 0; n--){
-+  72:	00905963          	blez	s1,84 <forktest+0x5e>
-     if(wait(0) < 0){
-+  76:	4501                	li	a0,0
-+  78:	2d8000ef          	jal	350 <wait>
-+  7c:	02054663          	bltz	a0,a8 <forktest+0x82>
-+  for(; n > 0; n--){
-+  80:	34fd                	addw	s1,s1,-1
-+  82:	f8f5                	bnez	s1,76 <forktest+0x50>
-       print("wait stopped early\n");
--  6a:	00000517          	auipc	a0,0x0
--  6e:	38650513          	addi	a0,a0,902 # 3f0 <uptime+0x18>
--  72:	f8fff0ef          	jal	0 <print>
-       exit(1);
--  76:	4505                	li	a0,1
--  78:	2c8000ef          	jal	340 <exit>
-     }
-   }
- 
-   if(wait(0) != -1){
-+  84:	4501                	li	a0,0
-+  86:	2ca000ef          	jal	350 <wait>
-+  8a:	57fd                	li	a5,-1
-+  8c:	02f51763          	bne	a0,a5,ba <forktest+0x94>
-     print("wait got too many\n");
--  7c:	00000517          	auipc	a0,0x0
--  80:	38c50513          	addi	a0,a0,908 # 408 <uptime+0x30>
--  84:	f7dff0ef          	jal	0 <print>
-     exit(1);
--  88:	4505                	li	a0,1
--  8a:	2b6000ef          	jal	340 <exit>
--  for(; n > 0; n--){
--  8e:	00905963          	blez	s1,a0 <forktest+0x7a>
--    if(wait(0) < 0){
--  92:	4501                	li	a0,0
--  94:	2b4000ef          	jal	348 <wait>
--  98:	fc0549e3          	bltz	a0,6a <forktest+0x44>
--  for(; n > 0; n--){
--  9c:	34fd                	addiw	s1,s1,-1
--  9e:	f8f5                	bnez	s1,92 <forktest+0x6c>
--  if(wait(0) != -1){
--  a0:	4501                	li	a0,0
--  a2:	2a6000ef          	jal	348 <wait>
--  a6:	57fd                	li	a5,-1
--  a8:	fcf51ae3          	bne	a0,a5,7c <forktest+0x56>
-   }
- 
-   print("fork test OK\n");
--  ac:	00000517          	auipc	a0,0x0
--  b0:	37450513          	addi	a0,a0,884 # 420 <uptime+0x48>
--  b4:	f4dff0ef          	jal	0 <print>
-+  90:	00000517          	auipc	a0,0x0
-+  94:	3b850513          	add	a0,a0,952 # 448 <uptime+0x68>
-+  98:	f69ff0ef          	jal	0 <print>
- }
--  b8:	60e2                	ld	ra,24(sp)
--  ba:	6442                	ld	s0,16(sp)
--  bc:	64a2                	ld	s1,8(sp)
--  be:	6902                	ld	s2,0(sp)
--  c0:	6105                	addi	sp,sp,32
--  c2:	8082                	ret
-+  9c:	60e2                	ld	ra,24(sp)
-+  9e:	6442                	ld	s0,16(sp)
-+  a0:	64a2                	ld	s1,8(sp)
-+  a2:	6902                	ld	s2,0(sp)
-+  a4:	6105                	add	sp,sp,32
-+  a6:	8082                	ret
-+      print("wait stopped early\n");
-+  a8:	00000517          	auipc	a0,0x0
-+  ac:	37050513          	add	a0,a0,880 # 418 <uptime+0x38>
-+  b0:	f51ff0ef          	jal	0 <print>
-+      exit(1);
-+  b4:	4505                	li	a0,1
-+  b6:	292000ef          	jal	348 <exit>
-+    print("wait got too many\n");
-+  ba:	00000517          	auipc	a0,0x0
-+  be:	37650513          	add	a0,a0,886 # 430 <uptime+0x50>
-+  c2:	f3fff0ef          	jal	0 <print>
-+    exit(1);
-+  c6:	4505                	li	a0,1
-+  c8:	280000ef          	jal	348 <exit>
- 
--00000000000000c4 <main>:
-+00000000000000cc <main>:
- 
- int
- main(void)
- {
--  c4:	1141                	addi	sp,sp,-16
--  c6:	e406                	sd	ra,8(sp)
--  c8:	e022                	sd	s0,0(sp)
--  ca:	0800                	addi	s0,sp,16
-+  cc:	1141                	add	sp,sp,-16
-+  ce:	e406                	sd	ra,8(sp)
-+  d0:	e022                	sd	s0,0(sp)
-+  d2:	0800                	add	s0,sp,16
-   forktest();
--  cc:	f5bff0ef          	jal	26 <forktest>
-+  d4:	f53ff0ef          	jal	26 <forktest>
-   exit(0);
--  d0:	4501                	li	a0,0
--  d2:	26e000ef          	jal	340 <exit>
-+  d8:	4501                	li	a0,0
-+  da:	26e000ef          	jal	348 <exit>
- 
--00000000000000d6 <start>:
-+00000000000000de <start>:
- /* */
- /* wrapper so that it's OK if main() does not call exit(). */
- /* */
- void
- start()
- {
--  d6:	1141                	addi	sp,sp,-16
--  d8:	e406                	sd	ra,8(sp)
--  da:	e022                	sd	s0,0(sp)
--  dc:	0800                	addi	s0,sp,16
-+  de:	1141                	add	sp,sp,-16
-+  e0:	e406                	sd	ra,8(sp)
-+  e2:	e022                	sd	s0,0(sp)
-+  e4:	0800                	add	s0,sp,16
-   extern int main();
-   main();
--  de:	fe7ff0ef          	jal	c4 <main>
-+  e6:	fe7ff0ef          	jal	cc <main>
-   exit(0);
--  e2:	4501                	li	a0,0
--  e4:	25c000ef          	jal	340 <exit>
-+  ea:	4501                	li	a0,0
-+  ec:	25c000ef          	jal	348 <exit>
- 
--00000000000000e8 <strcpy>:
-+00000000000000f0 <strcpy>:
- }
- 
- char*
- strcpy(char *s, const char *t)
- {
--  e8:	1141                	addi	sp,sp,-16
--  ea:	e422                	sd	s0,8(sp)
--  ec:	0800                	addi	s0,sp,16
-+  f0:	1141                	add	sp,sp,-16
-+  f2:	e422                	sd	s0,8(sp)
-+  f4:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
--  ee:	87aa                	mv	a5,a0
--  f0:	0585                	addi	a1,a1,1
--  f2:	0785                	addi	a5,a5,1
--  f4:	fff5c703          	lbu	a4,-1(a1)
--  f8:	fee78fa3          	sb	a4,-1(a5)
--  fc:	fb75                	bnez	a4,f0 <strcpy+0x8>
-+  f6:	87aa                	mv	a5,a0
-+  f8:	0585                	add	a1,a1,1
-+  fa:	0785                	add	a5,a5,1
-+  fc:	fff5c703          	lbu	a4,-1(a1)
-+ 100:	fee78fa3          	sb	a4,-1(a5)
-+ 104:	fb75                	bnez	a4,f8 <strcpy+0x8>
-     ;
-   return os;
- }
--  fe:	6422                	ld	s0,8(sp)
-- 100:	0141                	addi	sp,sp,16
-- 102:	8082                	ret
-+ 106:	6422                	ld	s0,8(sp)
-+ 108:	0141                	add	sp,sp,16
-+ 10a:	8082                	ret
- 
--0000000000000104 <strcmp>:
-+000000000000010c <strcmp>:
- 
- int
- strcmp(const char *p, const char *q)
- {
-- 104:	1141                	addi	sp,sp,-16
-- 106:	e422                	sd	s0,8(sp)
-- 108:	0800                	addi	s0,sp,16
-+ 10c:	1141                	add	sp,sp,-16
-+ 10e:	e422                	sd	s0,8(sp)
-+ 110:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
-- 10a:	00054783          	lbu	a5,0(a0)
-- 10e:	cb91                	beqz	a5,122 <strcmp+0x1e>
-- 110:	0005c703          	lbu	a4,0(a1)
-- 114:	00f71763          	bne	a4,a5,122 <strcmp+0x1e>
-+ 112:	00054783          	lbu	a5,0(a0)
-+ 116:	cb91                	beqz	a5,12a <strcmp+0x1e>
-+ 118:	0005c703          	lbu	a4,0(a1)
-+ 11c:	00f71763          	bne	a4,a5,12a <strcmp+0x1e>
-     p++, q++;
-- 118:	0505                	addi	a0,a0,1
-- 11a:	0585                	addi	a1,a1,1
-+ 120:	0505                	add	a0,a0,1
-+ 122:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
-- 11c:	00054783          	lbu	a5,0(a0)
-- 120:	fbe5                	bnez	a5,110 <strcmp+0xc>
-+ 124:	00054783          	lbu	a5,0(a0)
-+ 128:	fbe5                	bnez	a5,118 <strcmp+0xc>
-   return (uchar)*p - (uchar)*q;
-- 122:	0005c503          	lbu	a0,0(a1)
-+ 12a:	0005c503          	lbu	a0,0(a1)
- }
-- 126:	40a7853b          	subw	a0,a5,a0
-- 12a:	6422                	ld	s0,8(sp)
-- 12c:	0141                	addi	sp,sp,16
-- 12e:	8082                	ret
-+ 12e:	40a7853b          	subw	a0,a5,a0
-+ 132:	6422                	ld	s0,8(sp)
-+ 134:	0141                	add	sp,sp,16
-+ 136:	8082                	ret
- 
--0000000000000130 <strlen>:
-+0000000000000138 <strlen>:
- 
- uint
- strlen(const char *s)
- {
-- 130:	1141                	addi	sp,sp,-16
-- 132:	e422                	sd	s0,8(sp)
-- 134:	0800                	addi	s0,sp,16
-+ 138:	1141                	add	sp,sp,-16
-+ 13a:	e422                	sd	s0,8(sp)
-+ 13c:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
-- 136:	00054783          	lbu	a5,0(a0)
-- 13a:	cf91                	beqz	a5,156 <strlen+0x26>
-- 13c:	0505                	addi	a0,a0,1
-- 13e:	87aa                	mv	a5,a0
-- 140:	86be                	mv	a3,a5
-- 142:	0785                	addi	a5,a5,1
-- 144:	fff7c703          	lbu	a4,-1(a5)
-- 148:	ff65                	bnez	a4,140 <strlen+0x10>
-- 14a:	40a6853b          	subw	a0,a3,a0
-- 14e:	2505                	addiw	a0,a0,1
-+ 13e:	00054783          	lbu	a5,0(a0)
-+ 142:	cf91                	beqz	a5,15e <strlen+0x26>
-+ 144:	0505                	add	a0,a0,1
-+ 146:	87aa                	mv	a5,a0
-+ 148:	86be                	mv	a3,a5
-+ 14a:	0785                	add	a5,a5,1
-+ 14c:	fff7c703          	lbu	a4,-1(a5)
-+ 150:	ff65                	bnez	a4,148 <strlen+0x10>
-+ 152:	40a6853b          	subw	a0,a3,a0
-+ 156:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
-- 150:	6422                	ld	s0,8(sp)
-- 152:	0141                	addi	sp,sp,16
-- 154:	8082                	ret
-+ 158:	6422                	ld	s0,8(sp)
-+ 15a:	0141                	add	sp,sp,16
-+ 15c:	8082                	ret
-   for(n = 0; s[n]; n++)
-- 156:	4501                	li	a0,0
-- 158:	bfe5                	j	150 <strlen+0x20>
-+ 15e:	4501                	li	a0,0
-+ 160:	bfe5                	j	158 <strlen+0x20>
- 
--000000000000015a <memset>:
-+0000000000000162 <memset>:
- 
- void*
- memset(void *dst, int c, uint n)
- {
-- 15a:	1141                	addi	sp,sp,-16
-- 15c:	e422                	sd	s0,8(sp)
-- 15e:	0800                	addi	s0,sp,16
-+ 162:	1141                	add	sp,sp,-16
-+ 164:	e422                	sd	s0,8(sp)
-+ 166:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
-- 160:	ca19                	beqz	a2,176 <memset+0x1c>
-- 162:	87aa                	mv	a5,a0
-- 164:	1602                	slli	a2,a2,0x20
-- 166:	9201                	srli	a2,a2,0x20
-- 168:	00a60733          	add	a4,a2,a0
-+ 168:	ca19                	beqz	a2,17e <memset+0x1c>
-+ 16a:	87aa                	mv	a5,a0
-+ 16c:	1602                	sll	a2,a2,0x20
-+ 16e:	9201                	srl	a2,a2,0x20
-+ 170:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
-- 16c:	00b78023          	sb	a1,0(a5)
-+ 174:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
-- 170:	0785                	addi	a5,a5,1
-- 172:	fee79de3          	bne	a5,a4,16c <memset+0x12>
-+ 178:	0785                	add	a5,a5,1
-+ 17a:	fee79de3          	bne	a5,a4,174 <memset+0x12>
-   }
-   return dst;
- }
-- 176:	6422                	ld	s0,8(sp)
-- 178:	0141                	addi	sp,sp,16
-- 17a:	8082                	ret
-+ 17e:	6422                	ld	s0,8(sp)
-+ 180:	0141                	add	sp,sp,16
-+ 182:	8082                	ret
- 
--000000000000017c <strchr>:
-+0000000000000184 <strchr>:
- 
- char*
- strchr(const char *s, char c)
- {
-- 17c:	1141                	addi	sp,sp,-16
-- 17e:	e422                	sd	s0,8(sp)
-- 180:	0800                	addi	s0,sp,16
-+ 184:	1141                	add	sp,sp,-16
-+ 186:	e422                	sd	s0,8(sp)
-+ 188:	0800                	add	s0,sp,16
-   for(; *s; s++)
-- 182:	00054783          	lbu	a5,0(a0)
-- 186:	cb99                	beqz	a5,19c <strchr+0x20>
-+ 18a:	00054783          	lbu	a5,0(a0)
-+ 18e:	cb99                	beqz	a5,1a4 <strchr+0x20>
-     if(*s == c)
-- 188:	00f58763          	beq	a1,a5,196 <strchr+0x1a>
-+ 190:	00f58763          	beq	a1,a5,19e <strchr+0x1a>
-   for(; *s; s++)
-- 18c:	0505                	addi	a0,a0,1
-- 18e:	00054783          	lbu	a5,0(a0)
-- 192:	fbfd                	bnez	a5,188 <strchr+0xc>
-+ 194:	0505                	add	a0,a0,1
-+ 196:	00054783          	lbu	a5,0(a0)
-+ 19a:	fbfd                	bnez	a5,190 <strchr+0xc>
-       return (char*)s;
-   return 0;
-- 194:	4501                	li	a0,0
-+ 19c:	4501                	li	a0,0
- }
-- 196:	6422                	ld	s0,8(sp)
-- 198:	0141                	addi	sp,sp,16
-- 19a:	8082                	ret
-+ 19e:	6422                	ld	s0,8(sp)
-+ 1a0:	0141                	add	sp,sp,16
-+ 1a2:	8082                	ret
-   return 0;
-- 19c:	4501                	li	a0,0
-- 19e:	bfe5                	j	196 <strchr+0x1a>
-+ 1a4:	4501                	li	a0,0
-+ 1a6:	bfe5                	j	19e <strchr+0x1a>
- 
--00000000000001a0 <gets>:
-+00000000000001a8 <gets>:
- 
- char*
- gets(char *buf, int max)
- {
-- 1a0:	711d                	addi	sp,sp,-96
-- 1a2:	ec86                	sd	ra,88(sp)
-- 1a4:	e8a2                	sd	s0,80(sp)
-- 1a6:	e4a6                	sd	s1,72(sp)
-- 1a8:	e0ca                	sd	s2,64(sp)
-- 1aa:	fc4e                	sd	s3,56(sp)
-- 1ac:	f852                	sd	s4,48(sp)
-- 1ae:	f456                	sd	s5,40(sp)
-- 1b0:	f05a                	sd	s6,32(sp)
-- 1b2:	ec5e                	sd	s7,24(sp)
-- 1b4:	1080                	addi	s0,sp,96
-- 1b6:	8baa                	mv	s7,a0
-- 1b8:	8a2e                	mv	s4,a1
-+ 1a8:	711d                	add	sp,sp,-96
-+ 1aa:	ec86                	sd	ra,88(sp)
-+ 1ac:	e8a2                	sd	s0,80(sp)
-+ 1ae:	e4a6                	sd	s1,72(sp)
-+ 1b0:	e0ca                	sd	s2,64(sp)
-+ 1b2:	fc4e                	sd	s3,56(sp)
-+ 1b4:	f852                	sd	s4,48(sp)
-+ 1b6:	f456                	sd	s5,40(sp)
-+ 1b8:	f05a                	sd	s6,32(sp)
-+ 1ba:	ec5e                	sd	s7,24(sp)
-+ 1bc:	1080                	add	s0,sp,96
-+ 1be:	8baa                	mv	s7,a0
-+ 1c0:	8a2e                	mv	s4,a1
-   int i, cc;
-   char c;
- 
-   for(i=0; i+1 < max; ){
-- 1ba:	892a                	mv	s2,a0
-- 1bc:	4481                	li	s1,0
-+ 1c2:	892a                	mv	s2,a0
-+ 1c4:	4481                	li	s1,0
-     cc = read(0, &c, 1);
-     if(cc < 1)
-       break;
-     buf[i++] = c;
-     if(c == '\n' || c == '\r')
-- 1be:	4aa9                	li	s5,10
-- 1c0:	4b35                	li	s6,13
-+ 1c6:	4aa9                	li	s5,10
-+ 1c8:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
-- 1c2:	89a6                	mv	s3,s1
-- 1c4:	2485                	addiw	s1,s1,1
-- 1c6:	0344d663          	bge	s1,s4,1f2 <gets+0x52>
-+ 1ca:	89a6                	mv	s3,s1
-+ 1cc:	2485                	addw	s1,s1,1
-+ 1ce:	0344d663          	bge	s1,s4,1fa <gets+0x52>
-     cc = read(0, &c, 1);
-- 1ca:	4605                	li	a2,1
-- 1cc:	faf40593          	addi	a1,s0,-81
-- 1d0:	4501                	li	a0,0
-- 1d2:	186000ef          	jal	358 <read>
-+ 1d2:	4605                	li	a2,1
-+ 1d4:	faf40593          	add	a1,s0,-81
-+ 1d8:	4501                	li	a0,0
-+ 1da:	186000ef          	jal	360 <read>
-     if(cc < 1)
-- 1d6:	00a05e63          	blez	a0,1f2 <gets+0x52>
-+ 1de:	00a05e63          	blez	a0,1fa <gets+0x52>
-     buf[i++] = c;
-- 1da:	faf44783          	lbu	a5,-81(s0)
-- 1de:	00f90023          	sb	a5,0(s2)
-+ 1e2:	faf44783          	lbu	a5,-81(s0)
-+ 1e6:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
-- 1e2:	01578763          	beq	a5,s5,1f0 <gets+0x50>
-- 1e6:	0905                	addi	s2,s2,1
-- 1e8:	fd679de3          	bne	a5,s6,1c2 <gets+0x22>
--    buf[i++] = c;
-- 1ec:	89a6                	mv	s3,s1
-- 1ee:	a011                	j	1f2 <gets+0x52>
-- 1f0:	89a6                	mv	s3,s1
-+ 1ea:	01578763          	beq	a5,s5,1f8 <gets+0x50>
-+ 1ee:	0905                	add	s2,s2,1
-+ 1f0:	fd679de3          	bne	a5,s6,1ca <gets+0x22>
-+  for(i=0; i+1 < max; ){
-+ 1f4:	89a6                	mv	s3,s1
-+ 1f6:	a011                	j	1fa <gets+0x52>
-+ 1f8:	89a6                	mv	s3,s1
-       break;
-   }
-   buf[i] = '\0';
-- 1f2:	99de                	add	s3,s3,s7
-- 1f4:	00098023          	sb	zero,0(s3)
-+ 1fa:	99de                	add	s3,s3,s7
-+ 1fc:	00098023          	sb	zero,0(s3)
-   return buf;
- }
-- 1f8:	855e                	mv	a0,s7
-- 1fa:	60e6                	ld	ra,88(sp)
-- 1fc:	6446                	ld	s0,80(sp)
-- 1fe:	64a6                	ld	s1,72(sp)
-- 200:	6906                	ld	s2,64(sp)
-- 202:	79e2                	ld	s3,56(sp)
-- 204:	7a42                	ld	s4,48(sp)
-- 206:	7aa2                	ld	s5,40(sp)
-- 208:	7b02                	ld	s6,32(sp)
-- 20a:	6be2                	ld	s7,24(sp)
-- 20c:	6125                	addi	sp,sp,96
-- 20e:	8082                	ret
--
--0000000000000210 <stat>:
-+ 200:	855e                	mv	a0,s7
-+ 202:	60e6                	ld	ra,88(sp)
-+ 204:	6446                	ld	s0,80(sp)
-+ 206:	64a6                	ld	s1,72(sp)
-+ 208:	6906                	ld	s2,64(sp)
-+ 20a:	79e2                	ld	s3,56(sp)
-+ 20c:	7a42                	ld	s4,48(sp)
-+ 20e:	7aa2                	ld	s5,40(sp)
-+ 210:	7b02                	ld	s6,32(sp)
-+ 212:	6be2                	ld	s7,24(sp)
-+ 214:	6125                	add	sp,sp,96
-+ 216:	8082                	ret
-+
-+0000000000000218 <stat>:
- 
- int
- stat(const char *n, struct stat *st)
- {
-- 210:	1101                	addi	sp,sp,-32
-- 212:	ec06                	sd	ra,24(sp)
-- 214:	e822                	sd	s0,16(sp)
-- 216:	e04a                	sd	s2,0(sp)
-- 218:	1000                	addi	s0,sp,32
-- 21a:	892e                	mv	s2,a1
-+ 218:	1101                	add	sp,sp,-32
-+ 21a:	ec06                	sd	ra,24(sp)
-+ 21c:	e822                	sd	s0,16(sp)
-+ 21e:	e426                	sd	s1,8(sp)
-+ 220:	e04a                	sd	s2,0(sp)
-+ 222:	1000                	add	s0,sp,32
-+ 224:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
-- 21c:	4581                	li	a1,0
-- 21e:	162000ef          	jal	380 <open>
-+ 226:	4581                	li	a1,0
-+ 228:	160000ef          	jal	388 <open>
-   if(fd < 0)
-- 222:	02054263          	bltz	a0,246 <stat+0x36>
-- 226:	e426                	sd	s1,8(sp)
-- 228:	84aa                	mv	s1,a0
-+ 22c:	02054163          	bltz	a0,24e <stat+0x36>
-+ 230:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
-- 22a:	85ca                	mv	a1,s2
-- 22c:	16c000ef          	jal	398 <fstat>
-- 230:	892a                	mv	s2,a0
-+ 232:	85ca                	mv	a1,s2
-+ 234:	16c000ef          	jal	3a0 <fstat>
-+ 238:	892a                	mv	s2,a0
-   close(fd);
-- 232:	8526                	mv	a0,s1
-- 234:	134000ef          	jal	368 <close>
-+ 23a:	8526                	mv	a0,s1
-+ 23c:	134000ef          	jal	370 <close>
-   return r;
-- 238:	64a2                	ld	s1,8(sp)
- }
-- 23a:	854a                	mv	a0,s2
-- 23c:	60e2                	ld	ra,24(sp)
-- 23e:	6442                	ld	s0,16(sp)
-- 240:	6902                	ld	s2,0(sp)
-- 242:	6105                	addi	sp,sp,32
-- 244:	8082                	ret
-+ 240:	854a                	mv	a0,s2
-+ 242:	60e2                	ld	ra,24(sp)
-+ 244:	6442                	ld	s0,16(sp)
-+ 246:	64a2                	ld	s1,8(sp)
-+ 248:	6902                	ld	s2,0(sp)
-+ 24a:	6105                	add	sp,sp,32
-+ 24c:	8082                	ret
-     return -1;
-- 246:	597d                	li	s2,-1
-- 248:	bfcd                	j	23a <stat+0x2a>
-+ 24e:	597d                	li	s2,-1
-+ 250:	bfc5                	j	240 <stat+0x28>
- 
--000000000000024a <atoi>:
-+0000000000000252 <atoi>:
- 
- int
- atoi(const char *s)
- {
-- 24a:	1141                	addi	sp,sp,-16
-- 24c:	e422                	sd	s0,8(sp)
-- 24e:	0800                	addi	s0,sp,16
-+ 252:	1141                	add	sp,sp,-16
-+ 254:	e422                	sd	s0,8(sp)
-+ 256:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
-- 250:	00054683          	lbu	a3,0(a0)
-- 254:	fd06879b          	addiw	a5,a3,-48
-- 258:	0ff7f793          	zext.b	a5,a5
-- 25c:	4625                	li	a2,9
-- 25e:	02f66863          	bltu	a2,a5,28e <atoi+0x44>
-- 262:	872a                	mv	a4,a0
-+ 258:	00054683          	lbu	a3,0(a0)
-+ 25c:	fd06879b          	addw	a5,a3,-48
-+ 260:	0ff7f793          	zext.b	a5,a5
-+ 264:	4625                	li	a2,9
-+ 266:	02f66863          	bltu	a2,a5,296 <atoi+0x44>
-+ 26a:	872a                	mv	a4,a0
-   n = 0;
-- 264:	4501                	li	a0,0
-+ 26c:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
-- 266:	0705                	addi	a4,a4,1
-- 268:	0025179b          	slliw	a5,a0,0x2
-- 26c:	9fa9                	addw	a5,a5,a0
-- 26e:	0017979b          	slliw	a5,a5,0x1
-- 272:	9fb5                	addw	a5,a5,a3
-- 274:	fd07851b          	addiw	a0,a5,-48
-+ 26e:	0705                	add	a4,a4,1
-+ 270:	0025179b          	sllw	a5,a0,0x2
-+ 274:	9fa9                	addw	a5,a5,a0
-+ 276:	0017979b          	sllw	a5,a5,0x1
-+ 27a:	9fb5                	addw	a5,a5,a3
-+ 27c:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
-- 278:	00074683          	lbu	a3,0(a4)
-- 27c:	fd06879b          	addiw	a5,a3,-48
-- 280:	0ff7f793          	zext.b	a5,a5
-- 284:	fef671e3          	bgeu	a2,a5,266 <atoi+0x1c>
-+ 280:	00074683          	lbu	a3,0(a4)
-+ 284:	fd06879b          	addw	a5,a3,-48
-+ 288:	0ff7f793          	zext.b	a5,a5
-+ 28c:	fef671e3          	bgeu	a2,a5,26e <atoi+0x1c>
-   return n;
- }
-- 288:	6422                	ld	s0,8(sp)
-- 28a:	0141                	addi	sp,sp,16
-- 28c:	8082                	ret
-+ 290:	6422                	ld	s0,8(sp)
-+ 292:	0141                	add	sp,sp,16
-+ 294:	8082                	ret
-   n = 0;
-- 28e:	4501                	li	a0,0
-- 290:	bfe5                	j	288 <atoi+0x3e>
-+ 296:	4501                	li	a0,0
-+ 298:	bfe5                	j	290 <atoi+0x3e>
- 
--0000000000000292 <memmove>:
-+000000000000029a <memmove>:
- 
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
-- 292:	1141                	addi	sp,sp,-16
-- 294:	e422                	sd	s0,8(sp)
-- 296:	0800                	addi	s0,sp,16
-+ 29a:	1141                	add	sp,sp,-16
-+ 29c:	e422                	sd	s0,8(sp)
-+ 29e:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-   dst = vdst;
-   src = vsrc;
-   if (src > dst) {
-- 298:	02b57463          	bgeu	a0,a1,2c0 <memmove+0x2e>
-+ 2a0:	02b57463          	bgeu	a0,a1,2c8 <memmove+0x2e>
-     while(n-- > 0)
-- 29c:	00c05f63          	blez	a2,2ba <memmove+0x28>
-- 2a0:	1602                	slli	a2,a2,0x20
-- 2a2:	9201                	srli	a2,a2,0x20
-- 2a4:	00c507b3          	add	a5,a0,a2
-+ 2a4:	00c05f63          	blez	a2,2c2 <memmove+0x28>
-+ 2a8:	1602                	sll	a2,a2,0x20
-+ 2aa:	9201                	srl	a2,a2,0x20
-+ 2ac:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
-- 2a8:	872a                	mv	a4,a0
-+ 2b0:	872a                	mv	a4,a0
-       *dst++ = *src++;
-- 2aa:	0585                	addi	a1,a1,1
-- 2ac:	0705                	addi	a4,a4,1
-- 2ae:	fff5c683          	lbu	a3,-1(a1)
-- 2b2:	fed70fa3          	sb	a3,-1(a4)
-+ 2b2:	0585                	add	a1,a1,1
-+ 2b4:	0705                	add	a4,a4,1
-+ 2b6:	fff5c683          	lbu	a3,-1(a1)
-+ 2ba:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
-- 2b6:	fef71ae3          	bne	a4,a5,2aa <memmove+0x18>
-+ 2be:	fee79ae3          	bne	a5,a4,2b2 <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-   }
-   return vdst;
- }
-- 2ba:	6422                	ld	s0,8(sp)
-- 2bc:	0141                	addi	sp,sp,16
-- 2be:	8082                	ret
-+ 2c2:	6422                	ld	s0,8(sp)
-+ 2c4:	0141                	add	sp,sp,16
-+ 2c6:	8082                	ret
-     dst += n;
-- 2c0:	00c50733          	add	a4,a0,a2
-+ 2c8:	00c50733          	add	a4,a0,a2
-     src += n;
-- 2c4:	95b2                	add	a1,a1,a2
-+ 2cc:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
-- 2c6:	fec05ae3          	blez	a2,2ba <memmove+0x28>
-- 2ca:	fff6079b          	addiw	a5,a2,-1
-- 2ce:	1782                	slli	a5,a5,0x20
-- 2d0:	9381                	srli	a5,a5,0x20
-- 2d2:	fff7c793          	not	a5,a5
-- 2d6:	97ba                	add	a5,a5,a4
-+ 2ce:	fec05ae3          	blez	a2,2c2 <memmove+0x28>
-+ 2d2:	fff6079b          	addw	a5,a2,-1
-+ 2d6:	1782                	sll	a5,a5,0x20
-+ 2d8:	9381                	srl	a5,a5,0x20
-+ 2da:	fff7c793          	not	a5,a5
-+ 2de:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
-- 2d8:	15fd                	addi	a1,a1,-1
-- 2da:	177d                	addi	a4,a4,-1
-- 2dc:	0005c683          	lbu	a3,0(a1)
-- 2e0:	00d70023          	sb	a3,0(a4)
-+ 2e0:	15fd                	add	a1,a1,-1
-+ 2e2:	177d                	add	a4,a4,-1
-+ 2e4:	0005c683          	lbu	a3,0(a1)
-+ 2e8:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
-- 2e4:	fee79ae3          	bne	a5,a4,2d8 <memmove+0x46>
-- 2e8:	bfc9                	j	2ba <memmove+0x28>
-+ 2ec:	fee79ae3          	bne	a5,a4,2e0 <memmove+0x46>
-+ 2f0:	bfc9                	j	2c2 <memmove+0x28>
- 
--00000000000002ea <memcmp>:
-+00000000000002f2 <memcmp>:
- 
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
-- 2ea:	1141                	addi	sp,sp,-16
-- 2ec:	e422                	sd	s0,8(sp)
-- 2ee:	0800                	addi	s0,sp,16
-+ 2f2:	1141                	add	sp,sp,-16
-+ 2f4:	e422                	sd	s0,8(sp)
-+ 2f6:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
-- 2f0:	ca05                	beqz	a2,320 <memcmp+0x36>
-- 2f2:	fff6069b          	addiw	a3,a2,-1
-- 2f6:	1682                	slli	a3,a3,0x20
-- 2f8:	9281                	srli	a3,a3,0x20
-- 2fa:	0685                	addi	a3,a3,1
-- 2fc:	96aa                	add	a3,a3,a0
-+ 2f8:	ca05                	beqz	a2,328 <memcmp+0x36>
-+ 2fa:	fff6069b          	addw	a3,a2,-1
-+ 2fe:	1682                	sll	a3,a3,0x20
-+ 300:	9281                	srl	a3,a3,0x20
-+ 302:	0685                	add	a3,a3,1
-+ 304:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
-- 2fe:	00054783          	lbu	a5,0(a0)
-- 302:	0005c703          	lbu	a4,0(a1)
-- 306:	00e79863          	bne	a5,a4,316 <memcmp+0x2c>
-+ 306:	00054783          	lbu	a5,0(a0)
-+ 30a:	0005c703          	lbu	a4,0(a1)
-+ 30e:	00e79863          	bne	a5,a4,31e <memcmp+0x2c>
-       return *p1 - *p2;
-     }
-     p1++;
-- 30a:	0505                	addi	a0,a0,1
-+ 312:	0505                	add	a0,a0,1
-     p2++;
-- 30c:	0585                	addi	a1,a1,1
-+ 314:	0585                	add	a1,a1,1
-   while (n-- > 0) {
-- 30e:	fed518e3          	bne	a0,a3,2fe <memcmp+0x14>
-+ 316:	fed518e3          	bne	a0,a3,306 <memcmp+0x14>
-   }
-   return 0;
-- 312:	4501                	li	a0,0
-- 314:	a019                	j	31a <memcmp+0x30>
-+ 31a:	4501                	li	a0,0
-+ 31c:	a019                	j	322 <memcmp+0x30>
-       return *p1 - *p2;
-- 316:	40e7853b          	subw	a0,a5,a4
-+ 31e:	40e7853b          	subw	a0,a5,a4
- }
-- 31a:	6422                	ld	s0,8(sp)
-- 31c:	0141                	addi	sp,sp,16
-- 31e:	8082                	ret
-+ 322:	6422                	ld	s0,8(sp)
-+ 324:	0141                	add	sp,sp,16
-+ 326:	8082                	ret
-   return 0;
-- 320:	4501                	li	a0,0
-- 322:	bfe5                	j	31a <memcmp+0x30>
-+ 328:	4501                	li	a0,0
-+ 32a:	bfe5                	j	322 <memcmp+0x30>
- 
--0000000000000324 <memcpy>:
-+000000000000032c <memcpy>:
- 
- void *
- memcpy(void *dst, const void *src, uint n)
- {
-- 324:	1141                	addi	sp,sp,-16
-- 326:	e406                	sd	ra,8(sp)
-- 328:	e022                	sd	s0,0(sp)
-- 32a:	0800                	addi	s0,sp,16
-+ 32c:	1141                	add	sp,sp,-16
-+ 32e:	e406                	sd	ra,8(sp)
-+ 330:	e022                	sd	s0,0(sp)
-+ 332:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
-- 32c:	f67ff0ef          	jal	292 <memmove>
-+ 334:	f67ff0ef          	jal	29a <memmove>
- }
-- 330:	60a2                	ld	ra,8(sp)
-- 332:	6402                	ld	s0,0(sp)
-- 334:	0141                	addi	sp,sp,16
-- 336:	8082                	ret
-+ 338:	60a2                	ld	ra,8(sp)
-+ 33a:	6402                	ld	s0,0(sp)
-+ 33c:	0141                	add	sp,sp,16
-+ 33e:	8082                	ret
- 
--0000000000000338 <fork>:
-+0000000000000340 <fork>:
- # generated by usys.pl - do not edit
- #include "kernel/syscall.h"
- .global fork
- fork:
-  li a7, SYS_fork
-- 338:	4885                	li	a7,1
-+ 340:	4885                	li	a7,1
-  ecall
-- 33a:	00000073          	ecall
-+ 342:	00000073          	ecall
-  ret
-- 33e:	8082                	ret
-+ 346:	8082                	ret
- 
--0000000000000340 <exit>:
-+0000000000000348 <exit>:
- .global exit
- exit:
-  li a7, SYS_exit
-- 340:	4889                	li	a7,2
-+ 348:	4889                	li	a7,2
-  ecall
-- 342:	00000073          	ecall
-+ 34a:	00000073          	ecall
-  ret
-- 346:	8082                	ret
-+ 34e:	8082                	ret
- 
--0000000000000348 <wait>:
-+0000000000000350 <wait>:
- .global wait
- wait:
-  li a7, SYS_wait
-- 348:	488d                	li	a7,3
-+ 350:	488d                	li	a7,3
-  ecall
-- 34a:	00000073          	ecall
-+ 352:	00000073          	ecall
-  ret
-- 34e:	8082                	ret
-+ 356:	8082                	ret
- 
--0000000000000350 <pipe>:
-+0000000000000358 <pipe>:
- .global pipe
- pipe:
-  li a7, SYS_pipe
-- 350:	4891                	li	a7,4
-+ 358:	4891                	li	a7,4
-  ecall
-- 352:	00000073          	ecall
-+ 35a:	00000073          	ecall
-  ret
-- 356:	8082                	ret
-+ 35e:	8082                	ret
- 
--0000000000000358 <read>:
-+0000000000000360 <read>:
- .global read
- read:
-  li a7, SYS_read
-- 358:	4895                	li	a7,5
-+ 360:	4895                	li	a7,5
-  ecall
-- 35a:	00000073          	ecall
-+ 362:	00000073          	ecall
-  ret
-- 35e:	8082                	ret
-+ 366:	8082                	ret
- 
--0000000000000360 <write>:
-+0000000000000368 <write>:
- .global write
- write:
-  li a7, SYS_write
-- 360:	48c1                	li	a7,16
-+ 368:	48c1                	li	a7,16
-  ecall
-- 362:	00000073          	ecall
-+ 36a:	00000073          	ecall
-  ret
-- 366:	8082                	ret
-+ 36e:	8082                	ret
- 
--0000000000000368 <close>:
-+0000000000000370 <close>:
- .global close
- close:
-  li a7, SYS_close
-- 368:	48d5                	li	a7,21
-+ 370:	48d5                	li	a7,21
-  ecall
-- 36a:	00000073          	ecall
-+ 372:	00000073          	ecall
-  ret
-- 36e:	8082                	ret
-+ 376:	8082                	ret
- 
--0000000000000370 <kill>:
-+0000000000000378 <kill>:
- .global kill
- kill:
-  li a7, SYS_kill
-- 370:	4899                	li	a7,6
-+ 378:	4899                	li	a7,6
-  ecall
-- 372:	00000073          	ecall
-+ 37a:	00000073          	ecall
-  ret
-- 376:	8082                	ret
-+ 37e:	8082                	ret
- 
--0000000000000378 <exec>:
-+0000000000000380 <exec>:
- .global exec
- exec:
-  li a7, SYS_exec
-- 378:	489d                	li	a7,7
-+ 380:	489d                	li	a7,7
-  ecall
-- 37a:	00000073          	ecall
-+ 382:	00000073          	ecall
-  ret
-- 37e:	8082                	ret
-+ 386:	8082                	ret
- 
--0000000000000380 <open>:
-+0000000000000388 <open>:
- .global open
- open:
-  li a7, SYS_open
-- 380:	48bd                	li	a7,15
-+ 388:	48bd                	li	a7,15
-  ecall
-- 382:	00000073          	ecall
-+ 38a:	00000073          	ecall
-  ret
-- 386:	8082                	ret
-+ 38e:	8082                	ret
- 
--0000000000000388 <mknod>:
-+0000000000000390 <mknod>:
- .global mknod
- mknod:
-  li a7, SYS_mknod
-- 388:	48c5                	li	a7,17
-+ 390:	48c5                	li	a7,17
-  ecall
-- 38a:	00000073          	ecall
-+ 392:	00000073          	ecall
-  ret
-- 38e:	8082                	ret
-+ 396:	8082                	ret
- 
--0000000000000390 <unlink>:
-+0000000000000398 <unlink>:
- .global unlink
- unlink:
-  li a7, SYS_unlink
-- 390:	48c9                	li	a7,18
-+ 398:	48c9                	li	a7,18
-  ecall
-- 392:	00000073          	ecall
-+ 39a:	00000073          	ecall
-  ret
-- 396:	8082                	ret
-+ 39e:	8082                	ret
- 
--0000000000000398 <fstat>:
-+00000000000003a0 <fstat>:
- .global fstat
- fstat:
-  li a7, SYS_fstat
-- 398:	48a1                	li	a7,8
-+ 3a0:	48a1                	li	a7,8
-  ecall
-- 39a:	00000073          	ecall
-+ 3a2:	00000073          	ecall
-  ret
-- 39e:	8082                	ret
-+ 3a6:	8082                	ret
- 
--00000000000003a0 <link>:
-+00000000000003a8 <link>:
- .global link
- link:
-  li a7, SYS_link
-- 3a0:	48cd                	li	a7,19
-+ 3a8:	48cd                	li	a7,19
-  ecall
-- 3a2:	00000073          	ecall
-+ 3aa:	00000073          	ecall
-  ret
-- 3a6:	8082                	ret
-+ 3ae:	8082                	ret
- 
--00000000000003a8 <mkdir>:
-+00000000000003b0 <mkdir>:
- .global mkdir
- mkdir:
-  li a7, SYS_mkdir
-- 3a8:	48d1                	li	a7,20
-+ 3b0:	48d1                	li	a7,20
-  ecall
-- 3aa:	00000073          	ecall
-+ 3b2:	00000073          	ecall
-  ret
-- 3ae:	8082                	ret
-+ 3b6:	8082                	ret
- 
--00000000000003b0 <chdir>:
-+00000000000003b8 <chdir>:
- .global chdir
- chdir:
-  li a7, SYS_chdir
-- 3b0:	48a5                	li	a7,9
-+ 3b8:	48a5                	li	a7,9
-  ecall
-- 3b2:	00000073          	ecall
-+ 3ba:	00000073          	ecall
-  ret
-- 3b6:	8082                	ret
-+ 3be:	8082                	ret
- 
--00000000000003b8 <dup>:
-+00000000000003c0 <dup>:
- .global dup
- dup:
-  li a7, SYS_dup
-- 3b8:	48a9                	li	a7,10
-+ 3c0:	48a9                	li	a7,10
-  ecall
-- 3ba:	00000073          	ecall
-+ 3c2:	00000073          	ecall
-  ret
-- 3be:	8082                	ret
-+ 3c6:	8082                	ret
- 
--00000000000003c0 <getpid>:
-+00000000000003c8 <getpid>:
- .global getpid
- getpid:
-  li a7, SYS_getpid
-- 3c0:	48ad                	li	a7,11
-+ 3c8:	48ad                	li	a7,11
-  ecall
-- 3c2:	00000073          	ecall
-+ 3ca:	00000073          	ecall
-  ret
-- 3c6:	8082                	ret
-+ 3ce:	8082                	ret
- 
--00000000000003c8 <sbrk>:
-+00000000000003d0 <sbrk>:
- .global sbrk
- sbrk:
-  li a7, SYS_sbrk
-- 3c8:	48b1                	li	a7,12
-+ 3d0:	48b1                	li	a7,12
-  ecall
-- 3ca:	00000073          	ecall
-+ 3d2:	00000073          	ecall
-  ret
-- 3ce:	8082                	ret
-+ 3d6:	8082                	ret
- 
--00000000000003d0 <sleep>:
-+00000000000003d8 <sleep>:
- .global sleep
- sleep:
-  li a7, SYS_sleep
-- 3d0:	48b5                	li	a7,13
-+ 3d8:	48b5                	li	a7,13
-  ecall
-- 3d2:	00000073          	ecall
-+ 3da:	00000073          	ecall
-  ret
-- 3d6:	8082                	ret
-+ 3de:	8082                	ret
- 
--00000000000003d8 <uptime>:
-+00000000000003e0 <uptime>:
- .global uptime
- uptime:
-  li a7, SYS_uptime
-- 3d8:	48b9                	li	a7,14
-+ 3e0:	48b9                	li	a7,14
-  ecall
-- 3da:	00000073          	ecall
-+ 3e2:	00000073          	ecall
-  ret
-- 3de:	8082                	ret
-+ 3e6:	8082                	ret
-diff --git a/Assignments/Assignment-6/xv6/user/forktest.d b/Assignments/Assignment-6/xv6/user/forktest.d
-index 1733509..7430994 100644
---- a/Assignments/Assignment-6/xv6/user/forktest.d
-+++ b/Assignments/Assignment-6/xv6/user/forktest.d
-@@ -1,3 +1 @@
--user/forktest.o: user/forktest.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/stat.h user/user.h
-+user/forktest.o: user/forktest.c kernel/types.h kernel/stat.h user/user.h
-diff --git a/Assignments/Assignment-6/xv6/user/forktest.o b/Assignments/Assignment-6/xv6/user/forktest.o
-index 9ef61f4..c09e4e5 100644
-Binary files a/Assignments/Assignment-6/xv6/user/forktest.o and b/Assignments/Assignment-6/xv6/user/forktest.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/grep.asm b/Assignments/Assignment-6/xv6/user/grep.asm
-index d2d421d..0e30f30 100644
---- a/Assignments/Assignment-6/xv6/user/grep.asm
-+++ b/Assignments/Assignment-6/xv6/user/grep.asm
-@@ -11,14 +11,14 @@ Disassembly of section .text:
- /* matchstar: search for c*re at beginning of text */
- int matchstar(int c, char *re, char *text)
- {
--   0:	7179                	addi	sp,sp,-48
-+   0:	7179                	add	sp,sp,-48
-    2:	f406                	sd	ra,40(sp)
-    4:	f022                	sd	s0,32(sp)
-    6:	ec26                	sd	s1,24(sp)
-    8:	e84a                	sd	s2,16(sp)
-    a:	e44e                	sd	s3,8(sp)
-    c:	e052                	sd	s4,0(sp)
--   e:	1800                	addi	s0,sp,48
-+   e:	1800                	add	s0,sp,48
-   10:	892a                	mv	s2,a0
-   12:	89ae                	mv	s3,a1
-   14:	84b2                	mv	s1,a2
-@@ -35,7 +35,7 @@ int matchstar(int c, char *re, char *text)
-   }while(*text!='\0' && (*text++==c || c=='.'));
-   24:	0004c783          	lbu	a5,0(s1)
-   28:	cb89                	beqz	a5,3a <matchstar+0x3a>
--  2a:	0485                	addi	s1,s1,1
-+  2a:	0485                	add	s1,s1,1
-   2c:	2781                	sext.w	a5,a5
-   2e:	ff2786e3          	beq	a5,s2,1a <matchstar+0x1a>
-   32:	ff4904e3          	beq	s2,s4,1a <matchstar+0x1a>
-@@ -50,7 +50,7 @@ int matchstar(int c, char *re, char *text)
-   40:	6942                	ld	s2,16(sp)
-   42:	69a2                	ld	s3,8(sp)
-   44:	6a02                	ld	s4,0(sp)
--  46:	6145                	addi	sp,sp,48
-+  46:	6145                	add	sp,sp,48
-   48:	8082                	ret
- 
- 000000000000004a <matchhere>:
-@@ -58,10 +58,10 @@ int matchstar(int c, char *re, char *text)
-   4a:	00054703          	lbu	a4,0(a0)
-   4e:	c73d                	beqz	a4,bc <matchhere+0x72>
- {
--  50:	1141                	addi	sp,sp,-16
-+  50:	1141                	add	sp,sp,-16
-   52:	e406                	sd	ra,8(sp)
-   54:	e022                	sd	s0,0(sp)
--  56:	0800                	addi	s0,sp,16
-+  56:	0800                	add	s0,sp,16
-   58:	87aa                	mv	a5,a0
-   if(re[1] == '*')
-   5a:	00154683          	lbu	a3,1(a0)
-@@ -85,11 +85,11 @@ int matchstar(int c, char *re, char *text)
- }
-   84:	60a2                	ld	ra,8(sp)
-   86:	6402                	ld	s0,0(sp)
--  88:	0141                	addi	sp,sp,16
-+  88:	0141                	add	sp,sp,16
-   8a:	8082                	ret
-     return matchstar(re[0], re+2, text);
-   8c:	862e                	mv	a2,a1
--  8e:	00250593          	addi	a1,a0,2
-+  8e:	00250593          	add	a1,a0,2
-   92:	853a                	mv	a0,a4
-   94:	f6dff0ef          	jal	0 <matchstar>
-   98:	b7f5                	j	84 <matchhere+0x3a>
-@@ -106,8 +106,8 @@ int matchstar(int c, char *re, char *text)
-   aa:	00153513          	seqz	a0,a0
-   ae:	bfd9                	j	84 <matchhere+0x3a>
-     return matchhere(re+1, text+1);
--  b0:	0585                	addi	a1,a1,1
--  b2:	00178513          	addi	a0,a5,1
-+  b0:	0585                	add	a1,a1,1
-+  b2:	00178513          	add	a0,a5,1
-   b6:	f95ff0ef          	jal	4a <matchhere>
-   ba:	b7e9                	j	84 <matchhere+0x3a>
-     return 1;
-@@ -117,12 +117,12 @@ int matchstar(int c, char *re, char *text)
- 
- 00000000000000c0 <match>:
- {
--  c0:	1101                	addi	sp,sp,-32
-+  c0:	1101                	add	sp,sp,-32
-   c2:	ec06                	sd	ra,24(sp)
-   c4:	e822                	sd	s0,16(sp)
-   c6:	e426                	sd	s1,8(sp)
-   c8:	e04a                	sd	s2,0(sp)
--  ca:	1000                	addi	s0,sp,32
-+  ca:	1000                	add	s0,sp,32
-   cc:	892a                	mv	s2,a0
-   ce:	84ae                	mv	s1,a1
-   if(re[0] == '^')
-@@ -135,12 +135,12 @@ int matchstar(int c, char *re, char *text)
-   e0:	f6bff0ef          	jal	4a <matchhere>
-   e4:	e911                	bnez	a0,f8 <match+0x38>
-   }while(*text++ != '\0');
--  e6:	0485                	addi	s1,s1,1
-+  e6:	0485                	add	s1,s1,1
-   e8:	fff4c783          	lbu	a5,-1(s1)
-   ec:	fbe5                	bnez	a5,dc <match+0x1c>
-   ee:	a031                	j	fa <match+0x3a>
-     return matchhere(re+1, text);
--  f0:	0505                	addi	a0,a0,1
-+  f0:	0505                	add	a0,a0,1
-   f2:	f59ff0ef          	jal	4a <matchhere>
-   f6:	a011                	j	fa <match+0x3a>
-       return 1;
-@@ -150,12 +150,12 @@ int matchstar(int c, char *re, char *text)
-   fc:	6442                	ld	s0,16(sp)
-   fe:	64a2                	ld	s1,8(sp)
-  100:	6902                	ld	s2,0(sp)
-- 102:	6105                	addi	sp,sp,32
-+ 102:	6105                	add	sp,sp,32
-  104:	8082                	ret
- 
- 0000000000000106 <grep>:
- {
-- 106:	715d                	addi	sp,sp,-80
-+ 106:	715d                	add	sp,sp,-80
-  108:	e486                	sd	ra,72(sp)
-  10a:	e0a2                	sd	s0,64(sp)
-  10c:	fc26                	sd	s1,56(sp)
-@@ -166,7 +166,7 @@ int matchstar(int c, char *re, char *text)
-  116:	e85a                	sd	s6,16(sp)
-  118:	e45e                	sd	s7,8(sp)
-  11a:	e062                	sd	s8,0(sp)
-- 11c:	0880                	addi	s0,sp,80
-+ 11c:	0880                	add	s0,sp,80
-  11e:	89aa                	mv	s3,a0
-  120:	8b2e                	mv	s6,a1
-   m = 0;
-@@ -174,10 +174,10 @@ int matchstar(int c, char *re, char *text)
-   while((n = read(fd, buf+m, sizeof(buf)-m-1)) > 0){
-  124:	3ff00b93          	li	s7,1023
-  128:	00001a97          	auipc	s5,0x1
-- 12c:	ee8a8a93          	addi	s5,s5,-280 # 1010 <buf>
-+ 12c:	ee8a8a93          	add	s5,s5,-280 # 1010 <buf>
-  130:	a835                	j	16c <grep+0x66>
-       p = q+1;
-- 132:	00148913          	addi	s2,s1,1
-+ 132:	00148913          	add	s2,s1,1
-     while((q = strchr(p, '\n')) != 0){
-  136:	45a9                	li	a1,10
-  138:	854a                	mv	a0,s2
-@@ -195,7 +195,7 @@ int matchstar(int c, char *re, char *text)
-  150:	47a9                	li	a5,10
-  152:	00f48023          	sb	a5,0(s1)
-         write(1, p, q+1 - p);
-- 156:	00148613          	addi	a2,s1,1
-+ 156:	00148613          	add	a2,s1,1
-  15a:	4126063b          	subw	a2,a2,s2
-  15e:	85ca                	mv	a1,s2
-  160:	4505                	li	a0,1
-@@ -221,7 +221,7 @@ int matchstar(int c, char *re, char *text)
-  190:	b75d                	j	136 <grep+0x30>
-       m -= p - buf;
-  192:	00001517          	auipc	a0,0x1
-- 196:	e7e50513          	addi	a0,a0,-386 # 1010 <buf>
-+ 196:	e7e50513          	add	a0,a0,-386 # 1010 <buf>
-  19a:	40a90a33          	sub	s4,s2,a0
-  19e:	414c0a3b          	subw	s4,s8,s4
-       memmove(buf, p, m);
-@@ -240,19 +240,19 @@ int matchstar(int c, char *re, char *text)
-  1ba:	6b42                	ld	s6,16(sp)
-  1bc:	6ba2                	ld	s7,8(sp)
-  1be:	6c02                	ld	s8,0(sp)
-- 1c0:	6161                	addi	sp,sp,80
-+ 1c0:	6161                	add	sp,sp,80
-  1c2:	8082                	ret
- 
- 00000000000001c4 <main>:
- {
-- 1c4:	7179                	addi	sp,sp,-48
-+ 1c4:	7179                	add	sp,sp,-48
-  1c6:	f406                	sd	ra,40(sp)
-  1c8:	f022                	sd	s0,32(sp)
-  1ca:	ec26                	sd	s1,24(sp)
-  1cc:	e84a                	sd	s2,16(sp)
-  1ce:	e44e                	sd	s3,8(sp)
-  1d0:	e052                	sd	s4,0(sp)
-- 1d2:	1800                	addi	s0,sp,48
-+ 1d2:	1800                	add	s0,sp,48
-   if(argc <= 1){
-  1d4:	4785                	li	a5,1
-  1d6:	04a7d663          	bge	a5,a0,222 <main+0x5e>
-@@ -261,11 +261,11 @@ int matchstar(int c, char *re, char *text)
-   if(argc <= 2){
-  1de:	4789                	li	a5,2
-  1e0:	04a7db63          	bge	a5,a0,236 <main+0x72>
-- 1e4:	01058913          	addi	s2,a1,16
-- 1e8:	ffd5099b          	addiw	s3,a0,-3
-- 1ec:	02099793          	slli	a5,s3,0x20
-- 1f0:	01d7d993          	srli	s3,a5,0x1d
-- 1f4:	05e1                	addi	a1,a1,24
-+ 1e4:	01058913          	add	s2,a1,16
-+ 1e8:	ffd5099b          	addw	s3,a0,-3
-+ 1ec:	02099793          	sll	a5,s3,0x20
-+ 1f0:	01d7d993          	srl	s3,a5,0x1d
-+ 1f4:	05e1                	add	a1,a1,24
-  1f6:	99ae                	add	s3,s3,a1
-     if((fd = open(argv[i], O_RDONLY)) < 0){
-  1f8:	4581                	li	a1,0
-@@ -281,16 +281,16 @@ int matchstar(int c, char *re, char *text)
-  210:	8526                	mv	a0,s1
-  212:	2da000ef          	jal	4ec <close>
-   for(i = 2; i < argc; i++){
-- 216:	0921                	addi	s2,s2,8
-+ 216:	0921                	add	s2,s2,8
-  218:	ff3910e3          	bne	s2,s3,1f8 <main+0x34>
-   exit(0);
-  21c:	4501                	li	a0,0
-  21e:	2a6000ef          	jal	4c4 <exit>
-     fprintf(2, "usage: grep pattern [file ...]\n");
-  222:	00001597          	auipc	a1,0x1
-- 226:	86e58593          	addi	a1,a1,-1938 # a90 <malloc+0x100>
-+ 226:	84e58593          	add	a1,a1,-1970 # a70 <malloc+0xde>
-  22a:	4509                	li	a0,2
-- 22c:	686000ef          	jal	8b2 <fprintf>
-+ 22c:	688000ef          	jal	8b4 <fprintf>
-     exit(1);
-  230:	4505                	li	a0,1
-  232:	292000ef          	jal	4c4 <exit>
-@@ -304,8 +304,8 @@ int matchstar(int c, char *re, char *text)
-       printf("grep: cannot open %s\n", argv[i]);
-  244:	00093583          	ld	a1,0(s2)
-  248:	00001517          	auipc	a0,0x1
-- 24c:	86850513          	addi	a0,a0,-1944 # ab0 <malloc+0x120>
-- 250:	68c000ef          	jal	8dc <printf>
-+ 24c:	84850513          	add	a0,a0,-1976 # a90 <malloc+0xfe>
-+ 250:	68e000ef          	jal	8de <printf>
-       exit(1);
-  254:	4505                	li	a0,1
-  256:	26e000ef          	jal	4c4 <exit>
-@@ -317,10 +317,10 @@ int matchstar(int c, char *re, char *text)
- void
- start()
- {
-- 25a:	1141                	addi	sp,sp,-16
-+ 25a:	1141                	add	sp,sp,-16
-  25c:	e406                	sd	ra,8(sp)
-  25e:	e022                	sd	s0,0(sp)
-- 260:	0800                	addi	s0,sp,16
-+ 260:	0800                	add	s0,sp,16
-   extern int main();
-   main();
-  262:	f63ff0ef          	jal	1c4 <main>
-@@ -334,16 +334,16 @@ start()
- char*
- strcpy(char *s, const char *t)
- {
-- 26c:	1141                	addi	sp,sp,-16
-+ 26c:	1141                	add	sp,sp,-16
-  26e:	e422                	sd	s0,8(sp)
-- 270:	0800                	addi	s0,sp,16
-+ 270:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
-  272:	87aa                	mv	a5,a0
-- 274:	0585                	addi	a1,a1,1
-- 276:	0785                	addi	a5,a5,1
-+ 274:	0585                	add	a1,a1,1
-+ 276:	0785                	add	a5,a5,1
-  278:	fff5c703          	lbu	a4,-1(a1)
-  27c:	fee78fa3          	sb	a4,-1(a5)
-  280:	fb75                	bnez	a4,274 <strcpy+0x8>
-@@ -351,7 +351,7 @@ strcpy(char *s, const char *t)
-   return os;
- }
-  282:	6422                	ld	s0,8(sp)
-- 284:	0141                	addi	sp,sp,16
-+ 284:	0141                	add	sp,sp,16
-  286:	8082                	ret
- 
- 0000000000000288 <strcmp>:
-@@ -359,17 +359,17 @@ strcpy(char *s, const char *t)
- int
- strcmp(const char *p, const char *q)
- {
-- 288:	1141                	addi	sp,sp,-16
-+ 288:	1141                	add	sp,sp,-16
-  28a:	e422                	sd	s0,8(sp)
-- 28c:	0800                	addi	s0,sp,16
-+ 28c:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
-  28e:	00054783          	lbu	a5,0(a0)
-  292:	cb91                	beqz	a5,2a6 <strcmp+0x1e>
-  294:	0005c703          	lbu	a4,0(a1)
-  298:	00f71763          	bne	a4,a5,2a6 <strcmp+0x1e>
-     p++, q++;
-- 29c:	0505                	addi	a0,a0,1
-- 29e:	0585                	addi	a1,a1,1
-+ 29c:	0505                	add	a0,a0,1
-+ 29e:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
-  2a0:	00054783          	lbu	a5,0(a0)
-  2a4:	fbe5                	bnez	a5,294 <strcmp+0xc>
-@@ -378,7 +378,7 @@ strcmp(const char *p, const char *q)
- }
-  2aa:	40a7853b          	subw	a0,a5,a0
-  2ae:	6422                	ld	s0,8(sp)
-- 2b0:	0141                	addi	sp,sp,16
-+ 2b0:	0141                	add	sp,sp,16
-  2b2:	8082                	ret
- 
- 00000000000002b4 <strlen>:
-@@ -386,27 +386,27 @@ strcmp(const char *p, const char *q)
- uint
- strlen(const char *s)
- {
-- 2b4:	1141                	addi	sp,sp,-16
-+ 2b4:	1141                	add	sp,sp,-16
-  2b6:	e422                	sd	s0,8(sp)
-- 2b8:	0800                	addi	s0,sp,16
-+ 2b8:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
-  2ba:	00054783          	lbu	a5,0(a0)
-  2be:	cf91                	beqz	a5,2da <strlen+0x26>
-- 2c0:	0505                	addi	a0,a0,1
-+ 2c0:	0505                	add	a0,a0,1
-  2c2:	87aa                	mv	a5,a0
-  2c4:	86be                	mv	a3,a5
-- 2c6:	0785                	addi	a5,a5,1
-+ 2c6:	0785                	add	a5,a5,1
-  2c8:	fff7c703          	lbu	a4,-1(a5)
-  2cc:	ff65                	bnez	a4,2c4 <strlen+0x10>
-  2ce:	40a6853b          	subw	a0,a3,a0
-- 2d2:	2505                	addiw	a0,a0,1
-+ 2d2:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
-  2d4:	6422                	ld	s0,8(sp)
-- 2d6:	0141                	addi	sp,sp,16
-+ 2d6:	0141                	add	sp,sp,16
-  2d8:	8082                	ret
-   for(n = 0; s[n]; n++)
-  2da:	4501                	li	a0,0
-@@ -417,27 +417,27 @@ strlen(const char *s)
- void*
- memset(void *dst, int c, uint n)
- {
-- 2de:	1141                	addi	sp,sp,-16
-+ 2de:	1141                	add	sp,sp,-16
-  2e0:	e422                	sd	s0,8(sp)
-- 2e2:	0800                	addi	s0,sp,16
-+ 2e2:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
-  2e4:	ca19                	beqz	a2,2fa <memset+0x1c>
-  2e6:	87aa                	mv	a5,a0
-- 2e8:	1602                	slli	a2,a2,0x20
-- 2ea:	9201                	srli	a2,a2,0x20
-+ 2e8:	1602                	sll	a2,a2,0x20
-+ 2ea:	9201                	srl	a2,a2,0x20
-  2ec:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
-  2f0:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
-- 2f4:	0785                	addi	a5,a5,1
-+ 2f4:	0785                	add	a5,a5,1
-  2f6:	fee79de3          	bne	a5,a4,2f0 <memset+0x12>
-   }
-   return dst;
- }
-  2fa:	6422                	ld	s0,8(sp)
-- 2fc:	0141                	addi	sp,sp,16
-+ 2fc:	0141                	add	sp,sp,16
-  2fe:	8082                	ret
- 
- 0000000000000300 <strchr>:
-@@ -445,16 +445,16 @@ memset(void *dst, int c, uint n)
- char*
- strchr(const char *s, char c)
- {
-- 300:	1141                	addi	sp,sp,-16
-+ 300:	1141                	add	sp,sp,-16
-  302:	e422                	sd	s0,8(sp)
-- 304:	0800                	addi	s0,sp,16
-+ 304:	0800                	add	s0,sp,16
-   for(; *s; s++)
-  306:	00054783          	lbu	a5,0(a0)
-  30a:	cb99                	beqz	a5,320 <strchr+0x20>
-     if(*s == c)
-  30c:	00f58763          	beq	a1,a5,31a <strchr+0x1a>
-   for(; *s; s++)
-- 310:	0505                	addi	a0,a0,1
-+ 310:	0505                	add	a0,a0,1
-  312:	00054783          	lbu	a5,0(a0)
-  316:	fbfd                	bnez	a5,30c <strchr+0xc>
-       return (char*)s;
-@@ -462,7 +462,7 @@ strchr(const char *s, char c)
-  318:	4501                	li	a0,0
- }
-  31a:	6422                	ld	s0,8(sp)
-- 31c:	0141                	addi	sp,sp,16
-+ 31c:	0141                	add	sp,sp,16
-  31e:	8082                	ret
-   return 0;
-  320:	4501                	li	a0,0
-@@ -473,7 +473,7 @@ strchr(const char *s, char c)
- char*
- gets(char *buf, int max)
- {
-- 324:	711d                	addi	sp,sp,-96
-+ 324:	711d                	add	sp,sp,-96
-  326:	ec86                	sd	ra,88(sp)
-  328:	e8a2                	sd	s0,80(sp)
-  32a:	e4a6                	sd	s1,72(sp)
-@@ -483,7 +483,7 @@ gets(char *buf, int max)
-  332:	f456                	sd	s5,40(sp)
-  334:	f05a                	sd	s6,32(sp)
-  336:	ec5e                	sd	s7,24(sp)
-- 338:	1080                	addi	s0,sp,96
-+ 338:	1080                	add	s0,sp,96
-  33a:	8baa                	mv	s7,a0
-  33c:	8a2e                	mv	s4,a1
-   int i, cc;
-@@ -501,11 +501,11 @@ gets(char *buf, int max)
-  344:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
-  346:	89a6                	mv	s3,s1
-- 348:	2485                	addiw	s1,s1,1
-+ 348:	2485                	addw	s1,s1,1
-  34a:	0344d663          	bge	s1,s4,376 <gets+0x52>
-     cc = read(0, &c, 1);
-  34e:	4605                	li	a2,1
-- 350:	faf40593          	addi	a1,s0,-81
-+ 350:	faf40593          	add	a1,s0,-81
-  354:	4501                	li	a0,0
-  356:	186000ef          	jal	4dc <read>
-     if(cc < 1)
-@@ -515,9 +515,9 @@ gets(char *buf, int max)
-  362:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
-  366:	01578763          	beq	a5,s5,374 <gets+0x50>
-- 36a:	0905                	addi	s2,s2,1
-+ 36a:	0905                	add	s2,s2,1
-  36c:	fd679de3          	bne	a5,s6,346 <gets+0x22>
--    buf[i++] = c;
-+  for(i=0; i+1 < max; ){
-  370:	89a6                	mv	s3,s1
-  372:	a011                	j	376 <gets+0x52>
-  374:	89a6                	mv	s3,s1
-@@ -538,7 +538,7 @@ gets(char *buf, int max)
-  38a:	7aa2                	ld	s5,40(sp)
-  38c:	7b02                	ld	s6,32(sp)
-  38e:	6be2                	ld	s7,24(sp)
-- 390:	6125                	addi	sp,sp,96
-+ 390:	6125                	add	sp,sp,96
-  392:	8082                	ret
- 
- 0000000000000394 <stat>:
-@@ -546,21 +546,21 @@ gets(char *buf, int max)
- int
- stat(const char *n, struct stat *st)
- {
-- 394:	1101                	addi	sp,sp,-32
-+ 394:	1101                	add	sp,sp,-32
-  396:	ec06                	sd	ra,24(sp)
-  398:	e822                	sd	s0,16(sp)
-- 39a:	e04a                	sd	s2,0(sp)
-- 39c:	1000                	addi	s0,sp,32
-- 39e:	892e                	mv	s2,a1
-+ 39a:	e426                	sd	s1,8(sp)
-+ 39c:	e04a                	sd	s2,0(sp)
-+ 39e:	1000                	add	s0,sp,32
-+ 3a0:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
-- 3a0:	4581                	li	a1,0
-- 3a2:	162000ef          	jal	504 <open>
-+ 3a2:	4581                	li	a1,0
-+ 3a4:	160000ef          	jal	504 <open>
-   if(fd < 0)
-- 3a6:	02054263          	bltz	a0,3ca <stat+0x36>
-- 3aa:	e426                	sd	s1,8(sp)
-+ 3a8:	02054163          	bltz	a0,3ca <stat+0x36>
-  3ac:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
-@@ -571,32 +571,32 @@ stat(const char *n, struct stat *st)
-  3b6:	8526                	mv	a0,s1
-  3b8:	134000ef          	jal	4ec <close>
-   return r;
-- 3bc:	64a2                	ld	s1,8(sp)
- }
-- 3be:	854a                	mv	a0,s2
-- 3c0:	60e2                	ld	ra,24(sp)
-- 3c2:	6442                	ld	s0,16(sp)
-+ 3bc:	854a                	mv	a0,s2
-+ 3be:	60e2                	ld	ra,24(sp)
-+ 3c0:	6442                	ld	s0,16(sp)
-+ 3c2:	64a2                	ld	s1,8(sp)
-  3c4:	6902                	ld	s2,0(sp)
-- 3c6:	6105                	addi	sp,sp,32
-+ 3c6:	6105                	add	sp,sp,32
-  3c8:	8082                	ret
-     return -1;
-  3ca:	597d                	li	s2,-1
-- 3cc:	bfcd                	j	3be <stat+0x2a>
-+ 3cc:	bfc5                	j	3bc <stat+0x28>
- 
- 00000000000003ce <atoi>:
- 
- int
- atoi(const char *s)
- {
-- 3ce:	1141                	addi	sp,sp,-16
-+ 3ce:	1141                	add	sp,sp,-16
-  3d0:	e422                	sd	s0,8(sp)
-- 3d2:	0800                	addi	s0,sp,16
-+ 3d2:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
-  3d4:	00054683          	lbu	a3,0(a0)
-- 3d8:	fd06879b          	addiw	a5,a3,-48
-+ 3d8:	fd06879b          	addw	a5,a3,-48
-  3dc:	0ff7f793          	zext.b	a5,a5
-  3e0:	4625                	li	a2,9
-  3e2:	02f66863          	bltu	a2,a5,412 <atoi+0x44>
-@@ -604,21 +604,21 @@ atoi(const char *s)
-   n = 0;
-  3e8:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
-- 3ea:	0705                	addi	a4,a4,1
-- 3ec:	0025179b          	slliw	a5,a0,0x2
-+ 3ea:	0705                	add	a4,a4,1
-+ 3ec:	0025179b          	sllw	a5,a0,0x2
-  3f0:	9fa9                	addw	a5,a5,a0
-- 3f2:	0017979b          	slliw	a5,a5,0x1
-+ 3f2:	0017979b          	sllw	a5,a5,0x1
-  3f6:	9fb5                	addw	a5,a5,a3
-- 3f8:	fd07851b          	addiw	a0,a5,-48
-+ 3f8:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
-  3fc:	00074683          	lbu	a3,0(a4)
-- 400:	fd06879b          	addiw	a5,a3,-48
-+ 400:	fd06879b          	addw	a5,a3,-48
-  404:	0ff7f793          	zext.b	a5,a5
-  408:	fef671e3          	bgeu	a2,a5,3ea <atoi+0x1c>
-   return n;
- }
-  40c:	6422                	ld	s0,8(sp)
-- 40e:	0141                	addi	sp,sp,16
-+ 40e:	0141                	add	sp,sp,16
-  410:	8082                	ret
-   n = 0;
-  412:	4501                	li	a0,0
-@@ -629,9 +629,9 @@ atoi(const char *s)
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
-- 416:	1141                	addi	sp,sp,-16
-+ 416:	1141                	add	sp,sp,-16
-  418:	e422                	sd	s0,8(sp)
-- 41a:	0800                	addi	s0,sp,16
-+ 41a:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-@@ -641,18 +641,18 @@ memmove(void *vdst, const void *vsrc, int n)
-  41c:	02b57463          	bgeu	a0,a1,444 <memmove+0x2e>
-     while(n-- > 0)
-  420:	00c05f63          	blez	a2,43e <memmove+0x28>
-- 424:	1602                	slli	a2,a2,0x20
-- 426:	9201                	srli	a2,a2,0x20
-+ 424:	1602                	sll	a2,a2,0x20
-+ 426:	9201                	srl	a2,a2,0x20
-  428:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
-  42c:	872a                	mv	a4,a0
-       *dst++ = *src++;
-- 42e:	0585                	addi	a1,a1,1
-- 430:	0705                	addi	a4,a4,1
-+ 42e:	0585                	add	a1,a1,1
-+ 430:	0705                	add	a4,a4,1
-  432:	fff5c683          	lbu	a3,-1(a1)
-  436:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
-- 43a:	fef71ae3          	bne	a4,a5,42e <memmove+0x18>
-+ 43a:	fee79ae3          	bne	a5,a4,42e <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-@@ -660,7 +660,7 @@ memmove(void *vdst, const void *vsrc, int n)
-   return vdst;
- }
-  43e:	6422                	ld	s0,8(sp)
-- 440:	0141                	addi	sp,sp,16
-+ 440:	0141                	add	sp,sp,16
-  442:	8082                	ret
-     dst += n;
-  444:	00c50733          	add	a4,a0,a2
-@@ -668,14 +668,14 @@ memmove(void *vdst, const void *vsrc, int n)
-  448:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
-  44a:	fec05ae3          	blez	a2,43e <memmove+0x28>
-- 44e:	fff6079b          	addiw	a5,a2,-1
-- 452:	1782                	slli	a5,a5,0x20
-- 454:	9381                	srli	a5,a5,0x20
-+ 44e:	fff6079b          	addw	a5,a2,-1
-+ 452:	1782                	sll	a5,a5,0x20
-+ 454:	9381                	srl	a5,a5,0x20
-  456:	fff7c793          	not	a5,a5
-  45a:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
-- 45c:	15fd                	addi	a1,a1,-1
-- 45e:	177d                	addi	a4,a4,-1
-+ 45c:	15fd                	add	a1,a1,-1
-+ 45e:	177d                	add	a4,a4,-1
-  460:	0005c683          	lbu	a3,0(a1)
-  464:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
-@@ -687,16 +687,16 @@ memmove(void *vdst, const void *vsrc, int n)
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
-- 46e:	1141                	addi	sp,sp,-16
-+ 46e:	1141                	add	sp,sp,-16
-  470:	e422                	sd	s0,8(sp)
-- 472:	0800                	addi	s0,sp,16
-+ 472:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
-  474:	ca05                	beqz	a2,4a4 <memcmp+0x36>
-- 476:	fff6069b          	addiw	a3,a2,-1
-- 47a:	1682                	slli	a3,a3,0x20
-- 47c:	9281                	srli	a3,a3,0x20
-- 47e:	0685                	addi	a3,a3,1
-+ 476:	fff6069b          	addw	a3,a2,-1
-+ 47a:	1682                	sll	a3,a3,0x20
-+ 47c:	9281                	srl	a3,a3,0x20
-+ 47e:	0685                	add	a3,a3,1
-  480:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
-  482:	00054783          	lbu	a5,0(a0)
-@@ -705,9 +705,9 @@ memcmp(const void *s1, const void *s2, uint n)
-       return *p1 - *p2;
-     }
-     p1++;
-- 48e:	0505                	addi	a0,a0,1
-+ 48e:	0505                	add	a0,a0,1
-     p2++;
-- 490:	0585                	addi	a1,a1,1
-+ 490:	0585                	add	a1,a1,1
-   while (n-- > 0) {
-  492:	fed518e3          	bne	a0,a3,482 <memcmp+0x14>
-   }
-@@ -718,7 +718,7 @@ memcmp(const void *s1, const void *s2, uint n)
-  49a:	40e7853b          	subw	a0,a5,a4
- }
-  49e:	6422                	ld	s0,8(sp)
-- 4a0:	0141                	addi	sp,sp,16
-+ 4a0:	0141                	add	sp,sp,16
-  4a2:	8082                	ret
-   return 0;
-  4a4:	4501                	li	a0,0
-@@ -729,16 +729,16 @@ memcmp(const void *s1, const void *s2, uint n)
- void *
- memcpy(void *dst, const void *src, uint n)
- {
-- 4a8:	1141                	addi	sp,sp,-16
-+ 4a8:	1141                	add	sp,sp,-16
-  4aa:	e406                	sd	ra,8(sp)
-  4ac:	e022                	sd	s0,0(sp)
-- 4ae:	0800                	addi	s0,sp,16
-+ 4ae:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
-  4b0:	f67ff0ef          	jal	416 <memmove>
- }
-  4b4:	60a2                	ld	ra,8(sp)
-  4b6:	6402                	ld	s0,0(sp)
-- 4b8:	0141                	addi	sp,sp,16
-+ 4b8:	0141                	add	sp,sp,16
-  4ba:	8082                	ret
- 
- 00000000000004bc <fork>:
-@@ -960,19 +960,19 @@ static char digits[] = "0123456789ABCDEF";
- static void
- putc(int fd, char c)
- {
-- 564:	1101                	addi	sp,sp,-32
-+ 564:	1101                	add	sp,sp,-32
-  566:	ec06                	sd	ra,24(sp)
-  568:	e822                	sd	s0,16(sp)
-- 56a:	1000                	addi	s0,sp,32
-+ 56a:	1000                	add	s0,sp,32
-  56c:	feb407a3          	sb	a1,-17(s0)
-   write(fd, &c, 1);
-  570:	4605                	li	a2,1
-- 572:	fef40593          	addi	a1,s0,-17
-+ 572:	fef40593          	add	a1,s0,-17
-  576:	f6fff0ef          	jal	4e4 <write>
- }
-  57a:	60e2                	ld	ra,24(sp)
-  57c:	6442                	ld	s0,16(sp)
-- 57e:	6105                	addi	sp,sp,32
-+ 57e:	6105                	add	sp,sp,32
-  580:	8082                	ret
- 
- 0000000000000582 <printint>:
-@@ -980,92 +980,92 @@ putc(int fd, char c)
- static void
- printint(int fd, int xx, int base, int sgn)
- {
-- 582:	7139                	addi	sp,sp,-64
-+ 582:	7139                	add	sp,sp,-64
-  584:	fc06                	sd	ra,56(sp)
-  586:	f822                	sd	s0,48(sp)
-  588:	f426                	sd	s1,40(sp)
-- 58a:	0080                	addi	s0,sp,64
-- 58c:	84aa                	mv	s1,a0
-+ 58a:	f04a                	sd	s2,32(sp)
-+ 58c:	ec4e                	sd	s3,24(sp)
-+ 58e:	0080                	add	s0,sp,64
-+ 590:	84aa                	mv	s1,a0
-   char buf[16];
-   int i, neg;
-   uint x;
- 
-   neg = 0;
-   if(sgn && xx < 0){
-- 58e:	c299                	beqz	a3,594 <printint+0x12>
-- 590:	0805c963          	bltz	a1,622 <printint+0xa0>
-+ 592:	c299                	beqz	a3,598 <printint+0x16>
-+ 594:	0805c763          	bltz	a1,622 <printint+0xa0>
-     neg = 1;
-     x = -xx;
-   } else {
-     x = xx;
-- 594:	2581                	sext.w	a1,a1
-+ 598:	2581                	sext.w	a1,a1
-   neg = 0;
-- 596:	4881                	li	a7,0
-- 598:	fc040693          	addi	a3,s0,-64
-+ 59a:	4881                	li	a7,0
-+ 59c:	fc040693          	add	a3,s0,-64
-   }
- 
-   i = 0;
-- 59c:	4701                	li	a4,0
-+ 5a0:	4701                	li	a4,0
-   do{
-     buf[i++] = digits[x % base];
-- 59e:	2601                	sext.w	a2,a2
-- 5a0:	00000517          	auipc	a0,0x0
-- 5a4:	53050513          	addi	a0,a0,1328 # ad0 <digits>
-- 5a8:	883a                	mv	a6,a4
-- 5aa:	2705                	addiw	a4,a4,1
-- 5ac:	02c5f7bb          	remuw	a5,a1,a2
-- 5b0:	1782                	slli	a5,a5,0x20
-- 5b2:	9381                	srli	a5,a5,0x20
-- 5b4:	97aa                	add	a5,a5,a0
-- 5b6:	0007c783          	lbu	a5,0(a5)
-- 5ba:	00f68023          	sb	a5,0(a3)
-+ 5a2:	2601                	sext.w	a2,a2
-+ 5a4:	00000517          	auipc	a0,0x0
-+ 5a8:	50c50513          	add	a0,a0,1292 # ab0 <digits>
-+ 5ac:	883a                	mv	a6,a4
-+ 5ae:	2705                	addw	a4,a4,1
-+ 5b0:	02c5f7bb          	remuw	a5,a1,a2
-+ 5b4:	1782                	sll	a5,a5,0x20
-+ 5b6:	9381                	srl	a5,a5,0x20
-+ 5b8:	97aa                	add	a5,a5,a0
-+ 5ba:	0007c783          	lbu	a5,0(a5)
-+ 5be:	00f68023          	sb	a5,0(a3)
-   }while((x /= base) != 0);
-- 5be:	0005879b          	sext.w	a5,a1
-- 5c2:	02c5d5bb          	divuw	a1,a1,a2
-- 5c6:	0685                	addi	a3,a3,1
-- 5c8:	fec7f0e3          	bgeu	a5,a2,5a8 <printint+0x26>
-+ 5c2:	0005879b          	sext.w	a5,a1
-+ 5c6:	02c5d5bb          	divuw	a1,a1,a2
-+ 5ca:	0685                	add	a3,a3,1
-+ 5cc:	fec7f0e3          	bgeu	a5,a2,5ac <printint+0x2a>
-   if(neg)
-- 5cc:	00088c63          	beqz	a7,5e4 <printint+0x62>
-+ 5d0:	00088c63          	beqz	a7,5e8 <printint+0x66>
-     buf[i++] = '-';
-- 5d0:	fd070793          	addi	a5,a4,-48
-- 5d4:	00878733          	add	a4,a5,s0
-- 5d8:	02d00793          	li	a5,45
-- 5dc:	fef70823          	sb	a5,-16(a4)
-- 5e0:	0028071b          	addiw	a4,a6,2
-+ 5d4:	fd070793          	add	a5,a4,-48
-+ 5d8:	00878733          	add	a4,a5,s0
-+ 5dc:	02d00793          	li	a5,45
-+ 5e0:	fef70823          	sb	a5,-16(a4)
-+ 5e4:	0028071b          	addw	a4,a6,2
- 
-   while(--i >= 0)
-- 5e4:	02e05a63          	blez	a4,618 <printint+0x96>
-- 5e8:	f04a                	sd	s2,32(sp)
-- 5ea:	ec4e                	sd	s3,24(sp)
-- 5ec:	fc040793          	addi	a5,s0,-64
-+ 5e8:	02e05663          	blez	a4,614 <printint+0x92>
-+ 5ec:	fc040793          	add	a5,s0,-64
-  5f0:	00e78933          	add	s2,a5,a4
-- 5f4:	fff78993          	addi	s3,a5,-1
-+ 5f4:	fff78993          	add	s3,a5,-1
-  5f8:	99ba                	add	s3,s3,a4
-- 5fa:	377d                	addiw	a4,a4,-1
-- 5fc:	1702                	slli	a4,a4,0x20
-- 5fe:	9301                	srli	a4,a4,0x20
-+ 5fa:	377d                	addw	a4,a4,-1
-+ 5fc:	1702                	sll	a4,a4,0x20
-+ 5fe:	9301                	srl	a4,a4,0x20
-  600:	40e989b3          	sub	s3,s3,a4
-     putc(fd, buf[i]);
-  604:	fff94583          	lbu	a1,-1(s2)
-  608:	8526                	mv	a0,s1
-  60a:	f5bff0ef          	jal	564 <putc>
-   while(--i >= 0)
-- 60e:	197d                	addi	s2,s2,-1
-+ 60e:	197d                	add	s2,s2,-1
-  610:	ff391ae3          	bne	s2,s3,604 <printint+0x82>
-- 614:	7902                	ld	s2,32(sp)
-- 616:	69e2                	ld	s3,24(sp)
- }
-- 618:	70e2                	ld	ra,56(sp)
-- 61a:	7442                	ld	s0,48(sp)
-- 61c:	74a2                	ld	s1,40(sp)
-- 61e:	6121                	addi	sp,sp,64
-+ 614:	70e2                	ld	ra,56(sp)
-+ 616:	7442                	ld	s0,48(sp)
-+ 618:	74a2                	ld	s1,40(sp)
-+ 61a:	7902                	ld	s2,32(sp)
-+ 61c:	69e2                	ld	s3,24(sp)
-+ 61e:	6121                	add	sp,sp,64
-  620:	8082                	ret
-     x = -xx;
-  622:	40b005bb          	negw	a1,a1
-     neg = 1;
-  626:	4885                	li	a7,1
-     x = -xx;
-- 628:	bf85                	j	598 <printint+0x16>
-+ 628:	bf95                	j	59c <printint+0x1a>
- 
- 000000000000062a <vprintf>:
- }
-@@ -1074,320 +1074,320 @@ printint(int fd, int xx, int base, int sgn)
- void
- vprintf(int fd, const char *fmt, va_list ap)
- {
-- 62a:	711d                	addi	sp,sp,-96
-+ 62a:	711d                	add	sp,sp,-96
-  62c:	ec86                	sd	ra,88(sp)
-  62e:	e8a2                	sd	s0,80(sp)
-- 630:	e0ca                	sd	s2,64(sp)
-- 632:	1080                	addi	s0,sp,96
-+ 630:	e4a6                	sd	s1,72(sp)
-+ 632:	e0ca                	sd	s2,64(sp)
-+ 634:	fc4e                	sd	s3,56(sp)
-+ 636:	f852                	sd	s4,48(sp)
-+ 638:	f456                	sd	s5,40(sp)
-+ 63a:	f05a                	sd	s6,32(sp)
-+ 63c:	ec5e                	sd	s7,24(sp)
-+ 63e:	e862                	sd	s8,16(sp)
-+ 640:	e466                	sd	s9,8(sp)
-+ 642:	e06a                	sd	s10,0(sp)
-+ 644:	1080                	add	s0,sp,96
-   char *s;
-   int c0, c1, c2, i, state;
- 
-   state = 0;
-   for(i = 0; fmt[i]; i++){
-- 634:	0005c903          	lbu	s2,0(a1)
-- 638:	26090863          	beqz	s2,8a8 <vprintf+0x27e>
-- 63c:	e4a6                	sd	s1,72(sp)
-- 63e:	fc4e                	sd	s3,56(sp)
-- 640:	f852                	sd	s4,48(sp)
-- 642:	f456                	sd	s5,40(sp)
-- 644:	f05a                	sd	s6,32(sp)
-- 646:	ec5e                	sd	s7,24(sp)
-- 648:	e862                	sd	s8,16(sp)
-- 64a:	e466                	sd	s9,8(sp)
-- 64c:	8b2a                	mv	s6,a0
-- 64e:	8a2e                	mv	s4,a1
-- 650:	8bb2                	mv	s7,a2
-+ 646:	0005c903          	lbu	s2,0(a1)
-+ 64a:	24090763          	beqz	s2,898 <vprintf+0x26e>
-+ 64e:	8b2a                	mv	s6,a0
-+ 650:	8a2e                	mv	s4,a1
-+ 652:	8bb2                	mv	s7,a2
-   state = 0;
-- 652:	4981                	li	s3,0
-+ 654:	4981                	li	s3,0
-   for(i = 0; fmt[i]; i++){
-- 654:	4481                	li	s1,0
-- 656:	4701                	li	a4,0
-+ 656:	4481                	li	s1,0
-+ 658:	4701                	li	a4,0
-       if(c0 == '%'){
-         state = '%';
-       } else {
-         putc(fd, c0);
-       }
-     } else if(state == '%'){
-- 658:	02500a93          	li	s5,37
-+ 65a:	02500a93          	li	s5,37
-       c1 = c2 = 0;
-       if(c0) c1 = fmt[i+1] & 0xff;
-       if(c1) c2 = fmt[i+2] & 0xff;
-       if(c0 == 'd'){
-- 65c:	06400c13          	li	s8,100
-+ 65e:	06400c13          	li	s8,100
-         printint(fd, va_arg(ap, int), 10, 1);
-       } else if(c0 == 'l' && c1 == 'd'){
-- 660:	06c00c93          	li	s9,108
-- 664:	a005                	j	684 <vprintf+0x5a>
-+ 662:	06c00c93          	li	s9,108
-+ 666:	a005                	j	686 <vprintf+0x5c>
-         putc(fd, c0);
-- 666:	85ca                	mv	a1,s2
-- 668:	855a                	mv	a0,s6
-- 66a:	efbff0ef          	jal	564 <putc>
-- 66e:	a019                	j	674 <vprintf+0x4a>
-+ 668:	85ca                	mv	a1,s2
-+ 66a:	855a                	mv	a0,s6
-+ 66c:	ef9ff0ef          	jal	564 <putc>
-+ 670:	a019                	j	676 <vprintf+0x4c>
-     } else if(state == '%'){
-- 670:	03598263          	beq	s3,s5,694 <vprintf+0x6a>
-+ 672:	03598263          	beq	s3,s5,696 <vprintf+0x6c>
-   for(i = 0; fmt[i]; i++){
-- 674:	2485                	addiw	s1,s1,1
-- 676:	8726                	mv	a4,s1
-- 678:	009a07b3          	add	a5,s4,s1
-- 67c:	0007c903          	lbu	s2,0(a5)
-- 680:	20090c63          	beqz	s2,898 <vprintf+0x26e>
-+ 676:	2485                	addw	s1,s1,1
-+ 678:	8726                	mv	a4,s1
-+ 67a:	009a07b3          	add	a5,s4,s1
-+ 67e:	0007c903          	lbu	s2,0(a5)
-+ 682:	20090b63          	beqz	s2,898 <vprintf+0x26e>
-     c0 = fmt[i] & 0xff;
-- 684:	0009079b          	sext.w	a5,s2
-+ 686:	0009079b          	sext.w	a5,s2
-     if(state == 0){
-- 688:	fe0994e3          	bnez	s3,670 <vprintf+0x46>
-+ 68a:	fe0994e3          	bnez	s3,672 <vprintf+0x48>
-       if(c0 == '%'){
-- 68c:	fd579de3          	bne	a5,s5,666 <vprintf+0x3c>
-+ 68e:	fd579de3          	bne	a5,s5,668 <vprintf+0x3e>
-         state = '%';
-- 690:	89be                	mv	s3,a5
-- 692:	b7cd                	j	674 <vprintf+0x4a>
-+ 692:	89be                	mv	s3,a5
-+ 694:	b7cd                	j	676 <vprintf+0x4c>
-       if(c0) c1 = fmt[i+1] & 0xff;
-- 694:	00ea06b3          	add	a3,s4,a4
-- 698:	0016c683          	lbu	a3,1(a3)
-+ 696:	c7c9                	beqz	a5,720 <vprintf+0xf6>
-+ 698:	00ea06b3          	add	a3,s4,a4
-+ 69c:	0016c683          	lbu	a3,1(a3)
-       c1 = c2 = 0;
-- 69c:	8636                	mv	a2,a3
-+ 6a0:	8636                	mv	a2,a3
-       if(c1) c2 = fmt[i+2] & 0xff;
-- 69e:	c681                	beqz	a3,6a6 <vprintf+0x7c>
-- 6a0:	9752                	add	a4,a4,s4
-- 6a2:	00274603          	lbu	a2,2(a4)
-+ 6a2:	c681                	beqz	a3,6aa <vprintf+0x80>
-+ 6a4:	9752                	add	a4,a4,s4
-+ 6a6:	00274603          	lbu	a2,2(a4)
-       if(c0 == 'd'){
-- 6a6:	03878f63          	beq	a5,s8,6e4 <vprintf+0xba>
-+ 6aa:	03878f63          	beq	a5,s8,6e8 <vprintf+0xbe>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 6aa:	05978963          	beq	a5,s9,6fc <vprintf+0xd2>
-+ 6ae:	05978963          	beq	a5,s9,700 <vprintf+0xd6>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 2;
-       } else if(c0 == 'u'){
-- 6ae:	07500713          	li	a4,117
-- 6b2:	0ee78363          	beq	a5,a4,798 <vprintf+0x16e>
-+ 6b2:	07500713          	li	a4,117
-+ 6b6:	0ee78363          	beq	a5,a4,79c <vprintf+0x172>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 2;
-       } else if(c0 == 'x'){
-- 6b6:	07800713          	li	a4,120
-- 6ba:	12e78563          	beq	a5,a4,7e4 <vprintf+0x1ba>
-+ 6ba:	07800713          	li	a4,120
-+ 6be:	12e78563          	beq	a5,a4,7e8 <vprintf+0x1be>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 2;
-       } else if(c0 == 'p'){
-- 6be:	07000713          	li	a4,112
-- 6c2:	14e78a63          	beq	a5,a4,816 <vprintf+0x1ec>
-+ 6c2:	07000713          	li	a4,112
-+ 6c6:	14e78a63          	beq	a5,a4,81a <vprintf+0x1f0>
-         printptr(fd, va_arg(ap, uint64));
-       } else if(c0 == 's'){
-- 6c6:	07300713          	li	a4,115
-- 6ca:	18e78a63          	beq	a5,a4,85e <vprintf+0x234>
-+ 6ca:	07300713          	li	a4,115
-+ 6ce:	18e78863          	beq	a5,a4,85e <vprintf+0x234>
-         if((s = va_arg(ap, char*)) == 0)
-           s = "(null)";
-         for(; *s; s++)
-           putc(fd, *s);
-       } else if(c0 == '%'){
-- 6ce:	02500713          	li	a4,37
-- 6d2:	04e79563          	bne	a5,a4,71c <vprintf+0xf2>
-+ 6d2:	02500713          	li	a4,37
-+ 6d6:	04e79563          	bne	a5,a4,720 <vprintf+0xf6>
-         putc(fd, '%');
-- 6d6:	02500593          	li	a1,37
-- 6da:	855a                	mv	a0,s6
-- 6dc:	e89ff0ef          	jal	564 <putc>
-+ 6da:	02500593          	li	a1,37
-+ 6de:	855a                	mv	a0,s6
-+ 6e0:	e85ff0ef          	jal	564 <putc>
-         /* Unknown % sequence.  Print it to draw attention. */
-         putc(fd, '%');
-         putc(fd, c);
-       }
- #endif
-       state = 0;
-- 6e0:	4981                	li	s3,0
-- 6e2:	bf49                	j	674 <vprintf+0x4a>
-+ 6e4:	4981                	li	s3,0
-+ 6e6:	bf41                	j	676 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 1);
-- 6e4:	008b8913          	addi	s2,s7,8
-- 6e8:	4685                	li	a3,1
-- 6ea:	4629                	li	a2,10
-- 6ec:	000ba583          	lw	a1,0(s7)
-- 6f0:	855a                	mv	a0,s6
-- 6f2:	e91ff0ef          	jal	582 <printint>
-- 6f6:	8bca                	mv	s7,s2
-+ 6e8:	008b8913          	add	s2,s7,8
-+ 6ec:	4685                	li	a3,1
-+ 6ee:	4629                	li	a2,10
-+ 6f0:	000ba583          	lw	a1,0(s7)
-+ 6f4:	855a                	mv	a0,s6
-+ 6f6:	e8dff0ef          	jal	582 <printint>
-+ 6fa:	8bca                	mv	s7,s2
-       state = 0;
-- 6f8:	4981                	li	s3,0
-- 6fa:	bfad                	j	674 <vprintf+0x4a>
-+ 6fc:	4981                	li	s3,0
-+ 6fe:	bfa5                	j	676 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 6fc:	06400793          	li	a5,100
-- 700:	02f68963          	beq	a3,a5,732 <vprintf+0x108>
-+ 700:	06400793          	li	a5,100
-+ 704:	02f68963          	beq	a3,a5,736 <vprintf+0x10c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 704:	06c00793          	li	a5,108
-- 708:	04f68263          	beq	a3,a5,74c <vprintf+0x122>
-+ 708:	06c00793          	li	a5,108
-+ 70c:	04f68263          	beq	a3,a5,750 <vprintf+0x126>
-       } else if(c0 == 'l' && c1 == 'u'){
-- 70c:	07500793          	li	a5,117
-- 710:	0af68063          	beq	a3,a5,7b0 <vprintf+0x186>
-+ 710:	07500793          	li	a5,117
-+ 714:	0af68063          	beq	a3,a5,7b4 <vprintf+0x18a>
-       } else if(c0 == 'l' && c1 == 'x'){
-- 714:	07800793          	li	a5,120
-- 718:	0ef68263          	beq	a3,a5,7fc <vprintf+0x1d2>
-+ 718:	07800793          	li	a5,120
-+ 71c:	0ef68263          	beq	a3,a5,800 <vprintf+0x1d6>
-         putc(fd, '%');
-- 71c:	02500593          	li	a1,37
-- 720:	855a                	mv	a0,s6
-- 722:	e43ff0ef          	jal	564 <putc>
-+ 720:	02500593          	li	a1,37
-+ 724:	855a                	mv	a0,s6
-+ 726:	e3fff0ef          	jal	564 <putc>
-         putc(fd, c0);
-- 726:	85ca                	mv	a1,s2
-- 728:	855a                	mv	a0,s6
-- 72a:	e3bff0ef          	jal	564 <putc>
-+ 72a:	85ca                	mv	a1,s2
-+ 72c:	855a                	mv	a0,s6
-+ 72e:	e37ff0ef          	jal	564 <putc>
-       state = 0;
-- 72e:	4981                	li	s3,0
-- 730:	b791                	j	674 <vprintf+0x4a>
-+ 732:	4981                	li	s3,0
-+ 734:	b789                	j	676 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 732:	008b8913          	addi	s2,s7,8
-- 736:	4685                	li	a3,1
-- 738:	4629                	li	a2,10
-- 73a:	000ba583          	lw	a1,0(s7)
-- 73e:	855a                	mv	a0,s6
-- 740:	e43ff0ef          	jal	582 <printint>
-+ 736:	008b8913          	add	s2,s7,8
-+ 73a:	4685                	li	a3,1
-+ 73c:	4629                	li	a2,10
-+ 73e:	000ba583          	lw	a1,0(s7)
-+ 742:	855a                	mv	a0,s6
-+ 744:	e3fff0ef          	jal	582 <printint>
-         i += 1;
-- 744:	2485                	addiw	s1,s1,1
-+ 748:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 746:	8bca                	mv	s7,s2
-+ 74a:	8bca                	mv	s7,s2
-       state = 0;
-- 748:	4981                	li	s3,0
-+ 74c:	4981                	li	s3,0
-         i += 1;
-- 74a:	b72d                	j	674 <vprintf+0x4a>
-+ 74e:	b725                	j	676 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 74c:	06400793          	li	a5,100
-- 750:	02f60763          	beq	a2,a5,77e <vprintf+0x154>
-+ 750:	06400793          	li	a5,100
-+ 754:	02f60763          	beq	a2,a5,782 <vprintf+0x158>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-- 754:	07500793          	li	a5,117
-- 758:	06f60963          	beq	a2,a5,7ca <vprintf+0x1a0>
-+ 758:	07500793          	li	a5,117
-+ 75c:	06f60963          	beq	a2,a5,7ce <vprintf+0x1a4>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-- 75c:	07800793          	li	a5,120
-- 760:	faf61ee3          	bne	a2,a5,71c <vprintf+0xf2>
-+ 760:	07800793          	li	a5,120
-+ 764:	faf61ee3          	bne	a2,a5,720 <vprintf+0xf6>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 764:	008b8913          	addi	s2,s7,8
-- 768:	4681                	li	a3,0
-- 76a:	4641                	li	a2,16
-- 76c:	000ba583          	lw	a1,0(s7)
-- 770:	855a                	mv	a0,s6
-- 772:	e11ff0ef          	jal	582 <printint>
-+ 768:	008b8913          	add	s2,s7,8
-+ 76c:	4681                	li	a3,0
-+ 76e:	4641                	li	a2,16
-+ 770:	000ba583          	lw	a1,0(s7)
-+ 774:	855a                	mv	a0,s6
-+ 776:	e0dff0ef          	jal	582 <printint>
-         i += 2;
-- 776:	2489                	addiw	s1,s1,2
-+ 77a:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 778:	8bca                	mv	s7,s2
-+ 77c:	8bca                	mv	s7,s2
-       state = 0;
-- 77a:	4981                	li	s3,0
-+ 77e:	4981                	li	s3,0
-         i += 2;
-- 77c:	bde5                	j	674 <vprintf+0x4a>
-+ 780:	bddd                	j	676 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 77e:	008b8913          	addi	s2,s7,8
-- 782:	4685                	li	a3,1
-- 784:	4629                	li	a2,10
-- 786:	000ba583          	lw	a1,0(s7)
-- 78a:	855a                	mv	a0,s6
-- 78c:	df7ff0ef          	jal	582 <printint>
-+ 782:	008b8913          	add	s2,s7,8
-+ 786:	4685                	li	a3,1
-+ 788:	4629                	li	a2,10
-+ 78a:	000ba583          	lw	a1,0(s7)
-+ 78e:	855a                	mv	a0,s6
-+ 790:	df3ff0ef          	jal	582 <printint>
-         i += 2;
-- 790:	2489                	addiw	s1,s1,2
-+ 794:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 792:	8bca                	mv	s7,s2
-+ 796:	8bca                	mv	s7,s2
-       state = 0;
-- 794:	4981                	li	s3,0
-+ 798:	4981                	li	s3,0
-         i += 2;
-- 796:	bdf9                	j	674 <vprintf+0x4a>
-+ 79a:	bdf1                	j	676 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 0);
-- 798:	008b8913          	addi	s2,s7,8
-- 79c:	4681                	li	a3,0
-- 79e:	4629                	li	a2,10
-- 7a0:	000ba583          	lw	a1,0(s7)
-- 7a4:	855a                	mv	a0,s6
-- 7a6:	dddff0ef          	jal	582 <printint>
-- 7aa:	8bca                	mv	s7,s2
-+ 79c:	008b8913          	add	s2,s7,8
-+ 7a0:	4681                	li	a3,0
-+ 7a2:	4629                	li	a2,10
-+ 7a4:	000ba583          	lw	a1,0(s7)
-+ 7a8:	855a                	mv	a0,s6
-+ 7aa:	dd9ff0ef          	jal	582 <printint>
-+ 7ae:	8bca                	mv	s7,s2
-       state = 0;
-- 7ac:	4981                	li	s3,0
-- 7ae:	b5d9                	j	674 <vprintf+0x4a>
-+ 7b0:	4981                	li	s3,0
-+ 7b2:	b5d1                	j	676 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 7b0:	008b8913          	addi	s2,s7,8
-- 7b4:	4681                	li	a3,0
-- 7b6:	4629                	li	a2,10
-- 7b8:	000ba583          	lw	a1,0(s7)
-- 7bc:	855a                	mv	a0,s6
-- 7be:	dc5ff0ef          	jal	582 <printint>
-+ 7b4:	008b8913          	add	s2,s7,8
-+ 7b8:	4681                	li	a3,0
-+ 7ba:	4629                	li	a2,10
-+ 7bc:	000ba583          	lw	a1,0(s7)
-+ 7c0:	855a                	mv	a0,s6
-+ 7c2:	dc1ff0ef          	jal	582 <printint>
-         i += 1;
-- 7c2:	2485                	addiw	s1,s1,1
-+ 7c6:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 7c4:	8bca                	mv	s7,s2
-+ 7c8:	8bca                	mv	s7,s2
-       state = 0;
-- 7c6:	4981                	li	s3,0
-+ 7ca:	4981                	li	s3,0
-         i += 1;
-- 7c8:	b575                	j	674 <vprintf+0x4a>
-+ 7cc:	b56d                	j	676 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 7ca:	008b8913          	addi	s2,s7,8
-- 7ce:	4681                	li	a3,0
-- 7d0:	4629                	li	a2,10
-- 7d2:	000ba583          	lw	a1,0(s7)
-- 7d6:	855a                	mv	a0,s6
-- 7d8:	dabff0ef          	jal	582 <printint>
-+ 7ce:	008b8913          	add	s2,s7,8
-+ 7d2:	4681                	li	a3,0
-+ 7d4:	4629                	li	a2,10
-+ 7d6:	000ba583          	lw	a1,0(s7)
-+ 7da:	855a                	mv	a0,s6
-+ 7dc:	da7ff0ef          	jal	582 <printint>
-         i += 2;
-- 7dc:	2489                	addiw	s1,s1,2
-+ 7e0:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 7de:	8bca                	mv	s7,s2
-+ 7e2:	8bca                	mv	s7,s2
-       state = 0;
-- 7e0:	4981                	li	s3,0
-+ 7e4:	4981                	li	s3,0
-         i += 2;
-- 7e2:	bd49                	j	674 <vprintf+0x4a>
-+ 7e6:	bd41                	j	676 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 16, 0);
-- 7e4:	008b8913          	addi	s2,s7,8
-- 7e8:	4681                	li	a3,0
-- 7ea:	4641                	li	a2,16
-- 7ec:	000ba583          	lw	a1,0(s7)
-- 7f0:	855a                	mv	a0,s6
-- 7f2:	d91ff0ef          	jal	582 <printint>
-- 7f6:	8bca                	mv	s7,s2
-+ 7e8:	008b8913          	add	s2,s7,8
-+ 7ec:	4681                	li	a3,0
-+ 7ee:	4641                	li	a2,16
-+ 7f0:	000ba583          	lw	a1,0(s7)
-+ 7f4:	855a                	mv	a0,s6
-+ 7f6:	d8dff0ef          	jal	582 <printint>
-+ 7fa:	8bca                	mv	s7,s2
-       state = 0;
-- 7f8:	4981                	li	s3,0
-- 7fa:	bdad                	j	674 <vprintf+0x4a>
-+ 7fc:	4981                	li	s3,0
-+ 7fe:	bda5                	j	676 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 7fc:	008b8913          	addi	s2,s7,8
-- 800:	4681                	li	a3,0
-- 802:	4641                	li	a2,16
-- 804:	000ba583          	lw	a1,0(s7)
-- 808:	855a                	mv	a0,s6
-- 80a:	d79ff0ef          	jal	582 <printint>
-+ 800:	008b8913          	add	s2,s7,8
-+ 804:	4681                	li	a3,0
-+ 806:	4641                	li	a2,16
-+ 808:	000ba583          	lw	a1,0(s7)
-+ 80c:	855a                	mv	a0,s6
-+ 80e:	d75ff0ef          	jal	582 <printint>
-         i += 1;
-- 80e:	2485                	addiw	s1,s1,1
-+ 812:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 810:	8bca                	mv	s7,s2
-+ 814:	8bca                	mv	s7,s2
-       state = 0;
-- 812:	4981                	li	s3,0
-+ 816:	4981                	li	s3,0
-         i += 1;
-- 814:	b585                	j	674 <vprintf+0x4a>
-- 816:	e06a                	sd	s10,0(sp)
-+ 818:	bdb9                	j	676 <vprintf+0x4c>
-         printptr(fd, va_arg(ap, uint64));
-- 818:	008b8d13          	addi	s10,s7,8
-- 81c:	000bb983          	ld	s3,0(s7)
-+ 81a:	008b8d13          	add	s10,s7,8
-+ 81e:	000bb983          	ld	s3,0(s7)
-   putc(fd, '0');
-- 820:	03000593          	li	a1,48
-- 824:	855a                	mv	a0,s6
-- 826:	d3fff0ef          	jal	564 <putc>
-+ 822:	03000593          	li	a1,48
-+ 826:	855a                	mv	a0,s6
-+ 828:	d3dff0ef          	jal	564 <putc>
-   putc(fd, 'x');
-- 82a:	07800593          	li	a1,120
-- 82e:	855a                	mv	a0,s6
-- 830:	d35ff0ef          	jal	564 <putc>
-- 834:	4941                	li	s2,16
-+ 82c:	07800593          	li	a1,120
-+ 830:	855a                	mv	a0,s6
-+ 832:	d33ff0ef          	jal	564 <putc>
-+ 836:	4941                	li	s2,16
-     putc(fd, digits[x >> (sizeof(uint64) * 8 - 4)]);
-- 836:	00000b97          	auipc	s7,0x0
-- 83a:	29ab8b93          	addi	s7,s7,666 # ad0 <digits>
-- 83e:	03c9d793          	srli	a5,s3,0x3c
-- 842:	97de                	add	a5,a5,s7
-- 844:	0007c583          	lbu	a1,0(a5)
-- 848:	855a                	mv	a0,s6
-- 84a:	d1bff0ef          	jal	564 <putc>
-+ 838:	00000b97          	auipc	s7,0x0
-+ 83c:	278b8b93          	add	s7,s7,632 # ab0 <digits>
-+ 840:	03c9d793          	srl	a5,s3,0x3c
-+ 844:	97de                	add	a5,a5,s7
-+ 846:	0007c583          	lbu	a1,0(a5)
-+ 84a:	855a                	mv	a0,s6
-+ 84c:	d19ff0ef          	jal	564 <putc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
-- 84e:	0992                	slli	s3,s3,0x4
-- 850:	397d                	addiw	s2,s2,-1
-- 852:	fe0916e3          	bnez	s2,83e <vprintf+0x214>
-+ 850:	0992                	sll	s3,s3,0x4
-+ 852:	397d                	addw	s2,s2,-1
-+ 854:	fe0916e3          	bnez	s2,840 <vprintf+0x216>
-         printptr(fd, va_arg(ap, uint64));
-- 856:	8bea                	mv	s7,s10
-+ 858:	8bea                	mv	s7,s10
-       state = 0;
-- 858:	4981                	li	s3,0
-- 85a:	6d02                	ld	s10,0(sp)
-- 85c:	bd21                	j	674 <vprintf+0x4a>
-+ 85a:	4981                	li	s3,0
-+ 85c:	bd29                	j	676 <vprintf+0x4c>
-         if((s = va_arg(ap, char*)) == 0)
-- 85e:	008b8993          	addi	s3,s7,8
-+ 85e:	008b8993          	add	s3,s7,8
-  862:	000bb903          	ld	s2,0(s7)
-  866:	00090f63          	beqz	s2,884 <vprintf+0x25a>
-         for(; *s; s++)
-@@ -1397,17 +1397,17 @@ vprintf(int fd, const char *fmt, va_list ap)
-  870:	855a                	mv	a0,s6
-  872:	cf3ff0ef          	jal	564 <putc>
-         for(; *s; s++)
-- 876:	0905                	addi	s2,s2,1
-+ 876:	0905                	add	s2,s2,1
-  878:	00094583          	lbu	a1,0(s2)
-  87c:	f9f5                	bnez	a1,870 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-  87e:	8bce                	mv	s7,s3
-       state = 0;
-  880:	4981                	li	s3,0
-- 882:	bbcd                	j	674 <vprintf+0x4a>
-+ 882:	bbd5                	j	676 <vprintf+0x4c>
-           s = "(null)";
-  884:	00000917          	auipc	s2,0x0
-- 888:	24490913          	addi	s2,s2,580 # ac8 <malloc+0x138>
-+ 888:	22490913          	add	s2,s2,548 # aa8 <malloc+0x116>
-         for(; *s; s++)
-  88c:	02800593          	li	a1,40
-  890:	b7c5                	j	870 <vprintf+0x246>
-@@ -1415,298 +1415,288 @@ vprintf(int fd, const char *fmt, va_list ap)
-  892:	8bce                	mv	s7,s3
-       state = 0;
-  894:	4981                	li	s3,0
-- 896:	bbf9                	j	674 <vprintf+0x4a>
-- 898:	64a6                	ld	s1,72(sp)
-- 89a:	79e2                	ld	s3,56(sp)
-- 89c:	7a42                	ld	s4,48(sp)
-- 89e:	7aa2                	ld	s5,40(sp)
-- 8a0:	7b02                	ld	s6,32(sp)
-- 8a2:	6be2                	ld	s7,24(sp)
-- 8a4:	6c42                	ld	s8,16(sp)
-- 8a6:	6ca2                	ld	s9,8(sp)
-+ 896:	b3c5                	j	676 <vprintf+0x4c>
-     }
-   }
- }
-- 8a8:	60e6                	ld	ra,88(sp)
-- 8aa:	6446                	ld	s0,80(sp)
-- 8ac:	6906                	ld	s2,64(sp)
-- 8ae:	6125                	addi	sp,sp,96
-- 8b0:	8082                	ret
--
--00000000000008b2 <fprintf>:
-+ 898:	60e6                	ld	ra,88(sp)
-+ 89a:	6446                	ld	s0,80(sp)
-+ 89c:	64a6                	ld	s1,72(sp)
-+ 89e:	6906                	ld	s2,64(sp)
-+ 8a0:	79e2                	ld	s3,56(sp)
-+ 8a2:	7a42                	ld	s4,48(sp)
-+ 8a4:	7aa2                	ld	s5,40(sp)
-+ 8a6:	7b02                	ld	s6,32(sp)
-+ 8a8:	6be2                	ld	s7,24(sp)
-+ 8aa:	6c42                	ld	s8,16(sp)
-+ 8ac:	6ca2                	ld	s9,8(sp)
-+ 8ae:	6d02                	ld	s10,0(sp)
-+ 8b0:	6125                	add	sp,sp,96
-+ 8b2:	8082                	ret
-+
-+00000000000008b4 <fprintf>:
- 
- void
- fprintf(int fd, const char *fmt, ...)
- {
-- 8b2:	715d                	addi	sp,sp,-80
-- 8b4:	ec06                	sd	ra,24(sp)
-- 8b6:	e822                	sd	s0,16(sp)
-- 8b8:	1000                	addi	s0,sp,32
-- 8ba:	e010                	sd	a2,0(s0)
-- 8bc:	e414                	sd	a3,8(s0)
-- 8be:	e818                	sd	a4,16(s0)
-- 8c0:	ec1c                	sd	a5,24(s0)
-- 8c2:	03043023          	sd	a6,32(s0)
-- 8c6:	03143423          	sd	a7,40(s0)
-+ 8b4:	715d                	add	sp,sp,-80
-+ 8b6:	ec06                	sd	ra,24(sp)
-+ 8b8:	e822                	sd	s0,16(sp)
-+ 8ba:	1000                	add	s0,sp,32
-+ 8bc:	e010                	sd	a2,0(s0)
-+ 8be:	e414                	sd	a3,8(s0)
-+ 8c0:	e818                	sd	a4,16(s0)
-+ 8c2:	ec1c                	sd	a5,24(s0)
-+ 8c4:	03043023          	sd	a6,32(s0)
-+ 8c8:	03143423          	sd	a7,40(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 8ca:	fe843423          	sd	s0,-24(s0)
-+ 8cc:	fe843423          	sd	s0,-24(s0)
-   vprintf(fd, fmt, ap);
-- 8ce:	8622                	mv	a2,s0
-- 8d0:	d5bff0ef          	jal	62a <vprintf>
-+ 8d0:	8622                	mv	a2,s0
-+ 8d2:	d59ff0ef          	jal	62a <vprintf>
- }
-- 8d4:	60e2                	ld	ra,24(sp)
-- 8d6:	6442                	ld	s0,16(sp)
-- 8d8:	6161                	addi	sp,sp,80
-- 8da:	8082                	ret
-+ 8d6:	60e2                	ld	ra,24(sp)
-+ 8d8:	6442                	ld	s0,16(sp)
-+ 8da:	6161                	add	sp,sp,80
-+ 8dc:	8082                	ret
- 
--00000000000008dc <printf>:
-+00000000000008de <printf>:
- 
- void
- printf(const char *fmt, ...)
- {
-- 8dc:	711d                	addi	sp,sp,-96
-- 8de:	ec06                	sd	ra,24(sp)
-- 8e0:	e822                	sd	s0,16(sp)
-- 8e2:	1000                	addi	s0,sp,32
-- 8e4:	e40c                	sd	a1,8(s0)
-- 8e6:	e810                	sd	a2,16(s0)
-- 8e8:	ec14                	sd	a3,24(s0)
-- 8ea:	f018                	sd	a4,32(s0)
-- 8ec:	f41c                	sd	a5,40(s0)
-- 8ee:	03043823          	sd	a6,48(s0)
-- 8f2:	03143c23          	sd	a7,56(s0)
-+ 8de:	711d                	add	sp,sp,-96
-+ 8e0:	ec06                	sd	ra,24(sp)
-+ 8e2:	e822                	sd	s0,16(sp)
-+ 8e4:	1000                	add	s0,sp,32
-+ 8e6:	e40c                	sd	a1,8(s0)
-+ 8e8:	e810                	sd	a2,16(s0)
-+ 8ea:	ec14                	sd	a3,24(s0)
-+ 8ec:	f018                	sd	a4,32(s0)
-+ 8ee:	f41c                	sd	a5,40(s0)
-+ 8f0:	03043823          	sd	a6,48(s0)
-+ 8f4:	03143c23          	sd	a7,56(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 8f6:	00840613          	addi	a2,s0,8
-- 8fa:	fec43423          	sd	a2,-24(s0)
-+ 8f8:	00840613          	add	a2,s0,8
-+ 8fc:	fec43423          	sd	a2,-24(s0)
-   vprintf(1, fmt, ap);
-- 8fe:	85aa                	mv	a1,a0
-- 900:	4505                	li	a0,1
-- 902:	d29ff0ef          	jal	62a <vprintf>
-+ 900:	85aa                	mv	a1,a0
-+ 902:	4505                	li	a0,1
-+ 904:	d27ff0ef          	jal	62a <vprintf>
- }
-- 906:	60e2                	ld	ra,24(sp)
-- 908:	6442                	ld	s0,16(sp)
-- 90a:	6125                	addi	sp,sp,96
-- 90c:	8082                	ret
-+ 908:	60e2                	ld	ra,24(sp)
-+ 90a:	6442                	ld	s0,16(sp)
-+ 90c:	6125                	add	sp,sp,96
-+ 90e:	8082                	ret
- 
--000000000000090e <free>:
-+0000000000000910 <free>:
- static Header base;
- static Header *freep;
- 
- void
- free(void *ap)
- {
-- 90e:	1141                	addi	sp,sp,-16
-- 910:	e422                	sd	s0,8(sp)
-- 912:	0800                	addi	s0,sp,16
-+ 910:	1141                	add	sp,sp,-16
-+ 912:	e422                	sd	s0,8(sp)
-+ 914:	0800                	add	s0,sp,16
-   Header *bp, *p;
- 
-   bp = (Header*)ap - 1;
-- 914:	ff050693          	addi	a3,a0,-16
-+ 916:	ff050693          	add	a3,a0,-16
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 918:	00000797          	auipc	a5,0x0
-- 91c:	6e87b783          	ld	a5,1768(a5) # 1000 <freep>
-- 920:	a02d                	j	94a <free+0x3c>
-+ 91a:	00000797          	auipc	a5,0x0
-+ 91e:	6e67b783          	ld	a5,1766(a5) # 1000 <freep>
-+ 922:	a02d                	j	94c <free+0x3c>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-       break;
-   if(bp + bp->s.size == p->s.ptr){
-     bp->s.size += p->s.ptr->s.size;
-- 922:	4618                	lw	a4,8(a2)
-- 924:	9f2d                	addw	a4,a4,a1
-- 926:	fee52c23          	sw	a4,-8(a0)
-+ 924:	4618                	lw	a4,8(a2)
-+ 926:	9f2d                	addw	a4,a4,a1
-+ 928:	fee52c23          	sw	a4,-8(a0)
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 92a:	6398                	ld	a4,0(a5)
-- 92c:	6310                	ld	a2,0(a4)
-- 92e:	a83d                	j	96c <free+0x5e>
-+ 92c:	6398                	ld	a4,0(a5)
-+ 92e:	6310                	ld	a2,0(a4)
-+ 930:	a83d                	j	96e <free+0x5e>
-   } else
-     bp->s.ptr = p->s.ptr;
-   if(p + p->s.size == bp){
-     p->s.size += bp->s.size;
-- 930:	ff852703          	lw	a4,-8(a0)
-- 934:	9f31                	addw	a4,a4,a2
-- 936:	c798                	sw	a4,8(a5)
-+ 932:	ff852703          	lw	a4,-8(a0)
-+ 936:	9f31                	addw	a4,a4,a2
-+ 938:	c798                	sw	a4,8(a5)
-     p->s.ptr = bp->s.ptr;
-- 938:	ff053683          	ld	a3,-16(a0)
-- 93c:	a091                	j	980 <free+0x72>
-+ 93a:	ff053683          	ld	a3,-16(a0)
-+ 93e:	a091                	j	982 <free+0x72>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 93e:	6398                	ld	a4,0(a5)
-- 940:	00e7e463          	bltu	a5,a4,948 <free+0x3a>
-- 944:	00e6ea63          	bltu	a3,a4,958 <free+0x4a>
-+ 940:	6398                	ld	a4,0(a5)
-+ 942:	00e7e463          	bltu	a5,a4,94a <free+0x3a>
-+ 946:	00e6ea63          	bltu	a3,a4,95a <free+0x4a>
- {
-- 948:	87ba                	mv	a5,a4
-+ 94a:	87ba                	mv	a5,a4
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 94a:	fed7fae3          	bgeu	a5,a3,93e <free+0x30>
-- 94e:	6398                	ld	a4,0(a5)
-- 950:	00e6e463          	bltu	a3,a4,958 <free+0x4a>
-+ 94c:	fed7fae3          	bgeu	a5,a3,940 <free+0x30>
-+ 950:	6398                	ld	a4,0(a5)
-+ 952:	00e6e463          	bltu	a3,a4,95a <free+0x4a>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 954:	fee7eae3          	bltu	a5,a4,948 <free+0x3a>
-+ 956:	fee7eae3          	bltu	a5,a4,94a <free+0x3a>
-   if(bp + bp->s.size == p->s.ptr){
-- 958:	ff852583          	lw	a1,-8(a0)
-- 95c:	6390                	ld	a2,0(a5)
-- 95e:	02059813          	slli	a6,a1,0x20
-- 962:	01c85713          	srli	a4,a6,0x1c
-- 966:	9736                	add	a4,a4,a3
-- 968:	fae60de3          	beq	a2,a4,922 <free+0x14>
-+ 95a:	ff852583          	lw	a1,-8(a0)
-+ 95e:	6390                	ld	a2,0(a5)
-+ 960:	02059813          	sll	a6,a1,0x20
-+ 964:	01c85713          	srl	a4,a6,0x1c
-+ 968:	9736                	add	a4,a4,a3
-+ 96a:	fae60de3          	beq	a2,a4,924 <free+0x14>
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 96c:	fec53823          	sd	a2,-16(a0)
-+ 96e:	fec53823          	sd	a2,-16(a0)
-   if(p + p->s.size == bp){
-- 970:	4790                	lw	a2,8(a5)
-- 972:	02061593          	slli	a1,a2,0x20
-- 976:	01c5d713          	srli	a4,a1,0x1c
-- 97a:	973e                	add	a4,a4,a5
-- 97c:	fae68ae3          	beq	a3,a4,930 <free+0x22>
-+ 972:	4790                	lw	a2,8(a5)
-+ 974:	02061593          	sll	a1,a2,0x20
-+ 978:	01c5d713          	srl	a4,a1,0x1c
-+ 97c:	973e                	add	a4,a4,a5
-+ 97e:	fae68ae3          	beq	a3,a4,932 <free+0x22>
-     p->s.ptr = bp->s.ptr;
-- 980:	e394                	sd	a3,0(a5)
-+ 982:	e394                	sd	a3,0(a5)
-   } else
-     p->s.ptr = bp;
-   freep = p;
-- 982:	00000717          	auipc	a4,0x0
-- 986:	66f73f23          	sd	a5,1662(a4) # 1000 <freep>
-+ 984:	00000717          	auipc	a4,0x0
-+ 988:	66f73e23          	sd	a5,1660(a4) # 1000 <freep>
- }
-- 98a:	6422                	ld	s0,8(sp)
-- 98c:	0141                	addi	sp,sp,16
-- 98e:	8082                	ret
-+ 98c:	6422                	ld	s0,8(sp)
-+ 98e:	0141                	add	sp,sp,16
-+ 990:	8082                	ret
- 
--0000000000000990 <malloc>:
-+0000000000000992 <malloc>:
-   return freep;
- }
- 
- void*
- malloc(uint nbytes)
- {
-- 990:	7139                	addi	sp,sp,-64
-- 992:	fc06                	sd	ra,56(sp)
-- 994:	f822                	sd	s0,48(sp)
-- 996:	f426                	sd	s1,40(sp)
-- 998:	ec4e                	sd	s3,24(sp)
-- 99a:	0080                	addi	s0,sp,64
-+ 992:	7139                	add	sp,sp,-64
-+ 994:	fc06                	sd	ra,56(sp)
-+ 996:	f822                	sd	s0,48(sp)
-+ 998:	f426                	sd	s1,40(sp)
-+ 99a:	f04a                	sd	s2,32(sp)
-+ 99c:	ec4e                	sd	s3,24(sp)
-+ 99e:	e852                	sd	s4,16(sp)
-+ 9a0:	e456                	sd	s5,8(sp)
-+ 9a2:	e05a                	sd	s6,0(sp)
-+ 9a4:	0080                	add	s0,sp,64
-   Header *p, *prevp;
-   uint nunits;
- 
-   nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;
-- 99c:	02051493          	slli	s1,a0,0x20
-- 9a0:	9081                	srli	s1,s1,0x20
-- 9a2:	04bd                	addi	s1,s1,15
-- 9a4:	8091                	srli	s1,s1,0x4
-- 9a6:	0014899b          	addiw	s3,s1,1
-- 9aa:	0485                	addi	s1,s1,1
-+ 9a6:	02051493          	sll	s1,a0,0x20
-+ 9aa:	9081                	srl	s1,s1,0x20
-+ 9ac:	04bd                	add	s1,s1,15
-+ 9ae:	8091                	srl	s1,s1,0x4
-+ 9b0:	0014899b          	addw	s3,s1,1
-+ 9b4:	0485                	add	s1,s1,1
-   if((prevp = freep) == 0){
-- 9ac:	00000517          	auipc	a0,0x0
-- 9b0:	65453503          	ld	a0,1620(a0) # 1000 <freep>
-- 9b4:	c915                	beqz	a0,9e8 <malloc+0x58>
-+ 9b6:	00000517          	auipc	a0,0x0
-+ 9ba:	64a53503          	ld	a0,1610(a0) # 1000 <freep>
-+ 9be:	c515                	beqz	a0,9ea <malloc+0x58>
-     base.s.ptr = freep = prevp = &base;
-     base.s.size = 0;
-   }
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 9b6:	611c                	ld	a5,0(a0)
-+ 9c0:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 9b8:	4798                	lw	a4,8(a5)
-- 9ba:	08977a63          	bgeu	a4,s1,a4e <malloc+0xbe>
-- 9be:	f04a                	sd	s2,32(sp)
-- 9c0:	e852                	sd	s4,16(sp)
-- 9c2:	e456                	sd	s5,8(sp)
-- 9c4:	e05a                	sd	s6,0(sp)
-+ 9c2:	4798                	lw	a4,8(a5)
-+ 9c4:	02977f63          	bgeu	a4,s1,a02 <malloc+0x70>
-   if(nu < 4096)
-- 9c6:	8a4e                	mv	s4,s3
-- 9c8:	0009871b          	sext.w	a4,s3
-- 9cc:	6685                	lui	a3,0x1
-- 9ce:	00d77363          	bgeu	a4,a3,9d4 <malloc+0x44>
-- 9d2:	6a05                	lui	s4,0x1
-- 9d4:	000a0b1b          	sext.w	s6,s4
-+ 9c8:	8a4e                	mv	s4,s3
-+ 9ca:	0009871b          	sext.w	a4,s3
-+ 9ce:	6685                	lui	a3,0x1
-+ 9d0:	00d77363          	bgeu	a4,a3,9d6 <malloc+0x44>
-+ 9d4:	6a05                	lui	s4,0x1
-+ 9d6:	000a0b1b          	sext.w	s6,s4
-   p = sbrk(nu * sizeof(Header));
-- 9d8:	004a1a1b          	slliw	s4,s4,0x4
-+ 9da:	004a1a1b          	sllw	s4,s4,0x4
-         p->s.size = nunits;
-       }
-       freep = prevp;
-       return (void*)(p + 1);
-     }
-     if(p == freep)
-- 9dc:	00000917          	auipc	s2,0x0
-- 9e0:	62490913          	addi	s2,s2,1572 # 1000 <freep>
-+ 9de:	00000917          	auipc	s2,0x0
-+ 9e2:	62290913          	add	s2,s2,1570 # 1000 <freep>
-   if(p == (char*)-1)
-- 9e4:	5afd                	li	s5,-1
-- 9e6:	a081                	j	a26 <malloc+0x96>
-- 9e8:	f04a                	sd	s2,32(sp)
-- 9ea:	e852                	sd	s4,16(sp)
-- 9ec:	e456                	sd	s5,8(sp)
-- 9ee:	e05a                	sd	s6,0(sp)
-+ 9e6:	5afd                	li	s5,-1
-+ 9e8:	a885                	j	a58 <malloc+0xc6>
-     base.s.ptr = freep = prevp = &base;
-- 9f0:	00001797          	auipc	a5,0x1
-- 9f4:	a2078793          	addi	a5,a5,-1504 # 1410 <base>
-- 9f8:	00000717          	auipc	a4,0x0
-- 9fc:	60f73423          	sd	a5,1544(a4) # 1000 <freep>
-- a00:	e39c                	sd	a5,0(a5)
-+ 9ea:	00001797          	auipc	a5,0x1
-+ 9ee:	a2678793          	add	a5,a5,-1498 # 1410 <base>
-+ 9f2:	00000717          	auipc	a4,0x0
-+ 9f6:	60f73723          	sd	a5,1550(a4) # 1000 <freep>
-+ 9fa:	e39c                	sd	a5,0(a5)
-     base.s.size = 0;
-- a02:	0007a423          	sw	zero,8(a5)
-+ 9fc:	0007a423          	sw	zero,8(a5)
-     if(p->s.size >= nunits){
-- a06:	b7c1                	j	9c6 <malloc+0x36>
-+ a00:	b7e1                	j	9c8 <malloc+0x36>
-+      if(p->s.size == nunits)
-+ a02:	02e48c63          	beq	s1,a4,a3a <malloc+0xa8>
-+        p->s.size -= nunits;
-+ a06:	4137073b          	subw	a4,a4,s3
-+ a0a:	c798                	sw	a4,8(a5)
-+        p += p->s.size;
-+ a0c:	02071693          	sll	a3,a4,0x20
-+ a10:	01c6d713          	srl	a4,a3,0x1c
-+ a14:	97ba                	add	a5,a5,a4
-+        p->s.size = nunits;
-+ a16:	0137a423          	sw	s3,8(a5)
-+      freep = prevp;
-+ a1a:	00000717          	auipc	a4,0x0
-+ a1e:	5ea73323          	sd	a0,1510(a4) # 1000 <freep>
-+      return (void*)(p + 1);
-+ a22:	01078513          	add	a0,a5,16
-+      if((p = morecore(nunits)) == 0)
-+        return 0;
-+  }
-+}
-+ a26:	70e2                	ld	ra,56(sp)
-+ a28:	7442                	ld	s0,48(sp)
-+ a2a:	74a2                	ld	s1,40(sp)
-+ a2c:	7902                	ld	s2,32(sp)
-+ a2e:	69e2                	ld	s3,24(sp)
-+ a30:	6a42                	ld	s4,16(sp)
-+ a32:	6aa2                	ld	s5,8(sp)
-+ a34:	6b02                	ld	s6,0(sp)
-+ a36:	6121                	add	sp,sp,64
-+ a38:	8082                	ret
-         prevp->s.ptr = p->s.ptr;
-- a08:	6398                	ld	a4,0(a5)
-- a0a:	e118                	sd	a4,0(a0)
-- a0c:	a8a9                	j	a66 <malloc+0xd6>
-+ a3a:	6398                	ld	a4,0(a5)
-+ a3c:	e118                	sd	a4,0(a0)
-+ a3e:	bff1                	j	a1a <malloc+0x88>
-   hp->s.size = nu;
-- a0e:	01652423          	sw	s6,8(a0)
-+ a40:	01652423          	sw	s6,8(a0)
-   free((void*)(hp + 1));
-- a12:	0541                	addi	a0,a0,16
-- a14:	efbff0ef          	jal	90e <free>
-+ a44:	0541                	add	a0,a0,16
-+ a46:	ecbff0ef          	jal	910 <free>
-   return freep;
-- a18:	00093503          	ld	a0,0(s2)
-+ a4a:	00093503          	ld	a0,0(s2)
-       if((p = morecore(nunits)) == 0)
-- a1c:	c12d                	beqz	a0,a7e <malloc+0xee>
-+ a4e:	dd61                	beqz	a0,a26 <malloc+0x94>
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- a1e:	611c                	ld	a5,0(a0)
-+ a50:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- a20:	4798                	lw	a4,8(a5)
-- a22:	02977263          	bgeu	a4,s1,a46 <malloc+0xb6>
-+ a52:	4798                	lw	a4,8(a5)
-+ a54:	fa9777e3          	bgeu	a4,s1,a02 <malloc+0x70>
-     if(p == freep)
-- a26:	00093703          	ld	a4,0(s2)
-- a2a:	853e                	mv	a0,a5
-- a2c:	fef719e3          	bne	a4,a5,a1e <malloc+0x8e>
-+ a58:	00093703          	ld	a4,0(s2)
-+ a5c:	853e                	mv	a0,a5
-+ a5e:	fef719e3          	bne	a4,a5,a50 <malloc+0xbe>
-   p = sbrk(nu * sizeof(Header));
-- a30:	8552                	mv	a0,s4
-- a32:	b1bff0ef          	jal	54c <sbrk>
-+ a62:	8552                	mv	a0,s4
-+ a64:	ae9ff0ef          	jal	54c <sbrk>
-   if(p == (char*)-1)
-- a36:	fd551ce3          	bne	a0,s5,a0e <malloc+0x7e>
-+ a68:	fd551ce3          	bne	a0,s5,a40 <malloc+0xae>
-         return 0;
-- a3a:	4501                	li	a0,0
-- a3c:	7902                	ld	s2,32(sp)
-- a3e:	6a42                	ld	s4,16(sp)
-- a40:	6aa2                	ld	s5,8(sp)
-- a42:	6b02                	ld	s6,0(sp)
-- a44:	a03d                	j	a72 <malloc+0xe2>
-- a46:	7902                	ld	s2,32(sp)
-- a48:	6a42                	ld	s4,16(sp)
-- a4a:	6aa2                	ld	s5,8(sp)
-- a4c:	6b02                	ld	s6,0(sp)
--      if(p->s.size == nunits)
-- a4e:	fae48de3          	beq	s1,a4,a08 <malloc+0x78>
--        p->s.size -= nunits;
-- a52:	4137073b          	subw	a4,a4,s3
-- a56:	c798                	sw	a4,8(a5)
--        p += p->s.size;
-- a58:	02071693          	slli	a3,a4,0x20
-- a5c:	01c6d713          	srli	a4,a3,0x1c
-- a60:	97ba                	add	a5,a5,a4
--        p->s.size = nunits;
-- a62:	0137a423          	sw	s3,8(a5)
--      freep = prevp;
-- a66:	00000717          	auipc	a4,0x0
-- a6a:	58a73d23          	sd	a0,1434(a4) # 1000 <freep>
--      return (void*)(p + 1);
-- a6e:	01078513          	addi	a0,a5,16
--  }
--}
-- a72:	70e2                	ld	ra,56(sp)
-- a74:	7442                	ld	s0,48(sp)
-- a76:	74a2                	ld	s1,40(sp)
-- a78:	69e2                	ld	s3,24(sp)
-- a7a:	6121                	addi	sp,sp,64
-- a7c:	8082                	ret
-- a7e:	7902                	ld	s2,32(sp)
-- a80:	6a42                	ld	s4,16(sp)
-- a82:	6aa2                	ld	s5,8(sp)
-- a84:	6b02                	ld	s6,0(sp)
-- a86:	b7f5                	j	a72 <malloc+0xe2>
-+ a6c:	4501                	li	a0,0
-+ a6e:	bf65                	j	a26 <malloc+0x94>
-diff --git a/Assignments/Assignment-6/xv6/user/grep.d b/Assignments/Assignment-6/xv6/user/grep.d
-index 42e1c2b..18243b4 100644
---- a/Assignments/Assignment-6/xv6/user/grep.d
-+++ b/Assignments/Assignment-6/xv6/user/grep.d
-@@ -1,3 +1,2 @@
--user/grep.o: user/grep.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/stat.h kernel/fcntl.h user/user.h
-+user/grep.o: user/grep.c kernel/types.h kernel/stat.h kernel/fcntl.h \
-+ user/user.h
-diff --git a/Assignments/Assignment-6/xv6/user/grep.o b/Assignments/Assignment-6/xv6/user/grep.o
-index a3f1638..fcfd832 100644
-Binary files a/Assignments/Assignment-6/xv6/user/grep.o and b/Assignments/Assignment-6/xv6/user/grep.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/grep.sym b/Assignments/Assignment-6/xv6/user/grep.sym
-index a7246c0..cf95292 100644
---- a/Assignments/Assignment-6/xv6/user/grep.sym
-+++ b/Assignments/Assignment-6/xv6/user/grep.sym
-@@ -1,6 +1,5 @@
- 0000000000000000 .text
--0000000000000a88 .rodata
--0000000000000ae8 .eh_frame
-+0000000000000a70 .rodata
- 0000000000001000 .data
- 0000000000001000 .bss
- 0000000000000000 .debug_info
-@@ -11,6 +10,7 @@
- 0000000000000000 .debug_str
- 0000000000000000 .comment
- 0000000000000000 .riscv.attributes
-+0000000000000000 .debug_frame
- 0000000000000000 .debug_ranges
- 0000000000000000 grep.c
- 0000000000000000 ulib.c
-@@ -18,12 +18,12 @@
- 0000000000000000 printf.c
- 0000000000000564 putc
- 0000000000000582 printint
--0000000000000ad0 digits
-+0000000000000ab0 digits
- 0000000000000000 umalloc.c
- 0000000000001000 freep
- 0000000000001410 base
- 000000000000026c strcpy
--00000000000008dc printf
-+00000000000008de printf
- 0000000000000416 memmove
- 000000000000004a matchhere
- 000000000000050c mknod
-@@ -31,12 +31,12 @@
- 0000000000000544 getpid
- 00000000000004a8 memcpy
- 0000000000000106 grep
--0000000000000990 malloc
-+0000000000000992 malloc
- 0000000000000554 sleep
- 00000000000004d4 pipe
- 00000000000004e4 write
- 000000000000051c fstat
--00000000000008b2 fprintf
-+00000000000008b4 fprintf
- 00000000000004f4 kill
- 000000000000062a vprintf
- 0000000000000534 chdir
-@@ -65,4 +65,4 @@
- 0000000000000300 strchr
- 000000000000052c mkdir
- 00000000000004ec close
--000000000000090e free
-+0000000000000910 free
-diff --git a/Assignments/Assignment-6/xv6/user/grind.asm b/Assignments/Assignment-6/xv6/user/grind.asm
-index 5063b3c..1573312 100644
---- a/Assignments/Assignment-6/xv6/user/grind.asm
-+++ b/Assignments/Assignment-6/xv6/user/grind.asm
-@@ -11,9 +11,9 @@ Disassembly of section .text:
- int
- do_rand(unsigned long *ctx)
- {
--       0:	1141                	addi	sp,sp,-16
-+       0:	1141                	add	sp,sp,-16
-        2:	e422                	sd	s0,8(sp)
--       4:	0800                	addi	s0,sp,16
-+       4:	0800                	add	s0,sp,16
-  * October 1988, p. 1195.
-  */
-     long hi, lo, x;
-@@ -22,23 +22,23 @@ do_rand(unsigned long *ctx)
-     x = (*ctx % 0x7ffffffe) + 1;
-        6:	611c                	ld	a5,0(a0)
-        8:	80000737          	lui	a4,0x80000
--       c:	ffe74713          	xori	a4,a4,-2
-+       c:	ffe74713          	xor	a4,a4,-2
-       10:	02e7f7b3          	remu	a5,a5,a4
--      14:	0785                	addi	a5,a5,1
-+      14:	0785                	add	a5,a5,1
-     hi = x / 127773;
-     lo = x % 127773;
-       16:	66fd                	lui	a3,0x1f
--      18:	31d68693          	addi	a3,a3,797 # 1f31d <base+0x1cf15>
-+      18:	31d68693          	add	a3,a3,797 # 1f31d <base+0x1cf15>
-       1c:	02d7e733          	rem	a4,a5,a3
-     x = 16807 * lo - 2836 * hi;
-       20:	6611                	lui	a2,0x4
--      22:	1a760613          	addi	a2,a2,423 # 41a7 <base+0x1d9f>
-+      22:	1a760613          	add	a2,a2,423 # 41a7 <base+0x1d9f>
-       26:	02c70733          	mul	a4,a4,a2
-     hi = x / 127773;
-       2a:	02d7c7b3          	div	a5,a5,a3
-     x = 16807 * lo - 2836 * hi;
-       2e:	76fd                	lui	a3,0xfffff
--      30:	4ec68693          	addi	a3,a3,1260 # fffffffffffff4ec <base+0xffffffffffffd0e4>
-+      30:	4ec68693          	add	a3,a3,1260 # fffffffffffff4ec <base+0xffffffffffffd0e4>
-       34:	02d787b3          	mul	a5,a5,a3
-       38:	97ba                	add	a5,a5,a4
-     if (x < 0)
-@@ -46,14 +46,14 @@ do_rand(unsigned long *ctx)
-         x += 0x7fffffff;
-     /* Transform to [0, 0x7ffffffd] range. */
-     x--;
--      3e:	17fd                	addi	a5,a5,-1
-+      3e:	17fd                	add	a5,a5,-1
-     *ctx = x;
-       40:	e11c                	sd	a5,0(a0)
-     return (x);
- }
-       42:	0007851b          	sext.w	a0,a5
-       46:	6422                	ld	s0,8(sp)
--      48:	0141                	addi	sp,sp,16
-+      48:	0141                	add	sp,sp,16
-       4a:	8082                	ret
-         x += 0x7fffffff;
-       4c:	80000737          	lui	a4,0x80000
-@@ -68,18 +68,18 @@ unsigned long rand_next = 1;
- int
- rand(void)
- {
--      58:	1141                	addi	sp,sp,-16
-+      58:	1141                	add	sp,sp,-16
-       5a:	e406                	sd	ra,8(sp)
-       5c:	e022                	sd	s0,0(sp)
--      5e:	0800                	addi	s0,sp,16
-+      5e:	0800                	add	s0,sp,16
-     return (do_rand(&rand_next));
-       60:	00002517          	auipc	a0,0x2
--      64:	fa050513          	addi	a0,a0,-96 # 2000 <rand_next>
-+      64:	fa050513          	add	a0,a0,-96 # 2000 <rand_next>
-       68:	f99ff0ef          	jal	0 <do_rand>
- }
-       6c:	60a2                	ld	ra,8(sp)
-       6e:	6402                	ld	s0,0(sp)
--      70:	0141                	addi	sp,sp,16
-+      70:	0141                	add	sp,sp,16
-       72:	8082                	ret
- 
- 0000000000000074 <go>:
-@@ -87,2410 +87,2394 @@ rand(void)
- void
- go(int which_child)
- {
--      74:	7119                	addi	sp,sp,-128
-+      74:	7119                	add	sp,sp,-128
-       76:	fc86                	sd	ra,120(sp)
-       78:	f8a2                	sd	s0,112(sp)
-       7a:	f4a6                	sd	s1,104(sp)
--      7c:	e4d6                	sd	s5,72(sp)
--      7e:	0100                	addi	s0,sp,128
--      80:	84aa                	mv	s1,a0
-+      7c:	f0ca                	sd	s2,96(sp)
-+      7e:	ecce                	sd	s3,88(sp)
-+      80:	e8d2                	sd	s4,80(sp)
-+      82:	e4d6                	sd	s5,72(sp)
-+      84:	e0da                	sd	s6,64(sp)
-+      86:	fc5e                	sd	s7,56(sp)
-+      88:	0100                	add	s0,sp,128
-+      8a:	84aa                	mv	s1,a0
-   int fd = -1;
-   static char buf[999];
-   char *break0 = sbrk(0);
--      82:	4501                	li	a0,0
--      84:	353000ef          	jal	bd6 <sbrk>
--      88:	8aaa                	mv	s5,a0
-+      8c:	4501                	li	a0,0
-+      8e:	335000ef          	jal	bc2 <sbrk>
-+      92:	8aaa                	mv	s5,a0
-   uint64 iters = 0;
- 
-   mkdir("grindir");
--      8a:	00001517          	auipc	a0,0x1
--      8e:	09650513          	addi	a0,a0,150 # 1120 <malloc+0x106>
--      92:	325000ef          	jal	bb6 <mkdir>
-+      94:	00001517          	auipc	a0,0x1
-+      98:	05c50513          	add	a0,a0,92 # 10f0 <malloc+0xe8>
-+      9c:	307000ef          	jal	ba2 <mkdir>
-   if(chdir("grindir") != 0){
--      96:	00001517          	auipc	a0,0x1
--      9a:	08a50513          	addi	a0,a0,138 # 1120 <malloc+0x106>
--      9e:	321000ef          	jal	bbe <chdir>
--      a2:	cd19                	beqz	a0,c0 <go+0x4c>
--      a4:	f0ca                	sd	s2,96(sp)
--      a6:	ecce                	sd	s3,88(sp)
--      a8:	e8d2                	sd	s4,80(sp)
--      aa:	e0da                	sd	s6,64(sp)
--      ac:	fc5e                	sd	s7,56(sp)
-+      a0:	00001517          	auipc	a0,0x1
-+      a4:	05050513          	add	a0,a0,80 # 10f0 <malloc+0xe8>
-+      a8:	303000ef          	jal	baa <chdir>
-+      ac:	c911                	beqz	a0,c0 <go+0x4c>
-     printf("grind: chdir grindir failed\n");
-       ae:	00001517          	auipc	a0,0x1
--      b2:	07a50513          	addi	a0,a0,122 # 1128 <malloc+0x10e>
--      b6:	6b1000ef          	jal	f66 <printf>
-+      b2:	04a50513          	add	a0,a0,74 # 10f8 <malloc+0xf0>
-+      b6:	69f000ef          	jal	f54 <printf>
-     exit(1);
-       ba:	4505                	li	a0,1
--      bc:	293000ef          	jal	b4e <exit>
--      c0:	f0ca                	sd	s2,96(sp)
--      c2:	ecce                	sd	s3,88(sp)
--      c4:	e8d2                	sd	s4,80(sp)
--      c6:	e0da                	sd	s6,64(sp)
--      c8:	fc5e                	sd	s7,56(sp)
-+      bc:	27f000ef          	jal	b3a <exit>
-   }
-   chdir("/");
--      ca:	00001517          	auipc	a0,0x1
--      ce:	08650513          	addi	a0,a0,134 # 1150 <malloc+0x136>
--      d2:	2ed000ef          	jal	bbe <chdir>
-+      c0:	00001517          	auipc	a0,0x1
-+      c4:	05850513          	add	a0,a0,88 # 1118 <malloc+0x110>
-+      c8:	2e3000ef          	jal	baa <chdir>
-+      cc:	00001997          	auipc	s3,0x1
-+      d0:	05c98993          	add	s3,s3,92 # 1128 <malloc+0x120>
-+      d4:	c489                	beqz	s1,de <go+0x6a>
-       d6:	00001997          	auipc	s3,0x1
--      da:	08a98993          	addi	s3,s3,138 # 1160 <malloc+0x146>
--      de:	c489                	beqz	s1,e8 <go+0x74>
--      e0:	00001997          	auipc	s3,0x1
--      e4:	07898993          	addi	s3,s3,120 # 1158 <malloc+0x13e>
-+      da:	04a98993          	add	s3,s3,74 # 1120 <malloc+0x118>
-   uint64 iters = 0;
--      e8:	4481                	li	s1,0
-+      de:	4481                	li	s1,0
-   int fd = -1;
--      ea:	5a7d                	li	s4,-1
--      ec:	00001917          	auipc	s2,0x1
--      f0:	34490913          	addi	s2,s2,836 # 1430 <malloc+0x416>
--      f4:	a819                	j	10a <go+0x96>
-+      e0:	5a7d                	li	s4,-1
-+      e2:	00001917          	auipc	s2,0x1
-+      e6:	2f690913          	add	s2,s2,758 # 13d8 <malloc+0x3d0>
-+      ea:	a819                	j	100 <go+0x8c>
-     iters++;
-     if((iters % 500) == 0)
-       write(1, which_child?"B":"A", 1);
-     int what = rand() % 23;
-     if(what == 1){
-       close(open("grindir/../a", O_CREATE|O_RDWR));
--      f6:	20200593          	li	a1,514
--      fa:	00001517          	auipc	a0,0x1
--      fe:	06e50513          	addi	a0,a0,110 # 1168 <malloc+0x14e>
--     102:	28d000ef          	jal	b8e <open>
--     106:	271000ef          	jal	b76 <close>
-+      ec:	20200593          	li	a1,514
-+      f0:	00001517          	auipc	a0,0x1
-+      f4:	04050513          	add	a0,a0,64 # 1130 <malloc+0x128>
-+      f8:	283000ef          	jal	b7a <open>
-+      fc:	267000ef          	jal	b62 <close>
-     iters++;
--     10a:	0485                	addi	s1,s1,1
-+     100:	0485                	add	s1,s1,1
-     if((iters % 500) == 0)
--     10c:	1f400793          	li	a5,500
--     110:	02f4f7b3          	remu	a5,s1,a5
--     114:	e791                	bnez	a5,120 <go+0xac>
-+     102:	1f400793          	li	a5,500
-+     106:	02f4f7b3          	remu	a5,s1,a5
-+     10a:	e791                	bnez	a5,116 <go+0xa2>
-       write(1, which_child?"B":"A", 1);
--     116:	4605                	li	a2,1
--     118:	85ce                	mv	a1,s3
--     11a:	4505                	li	a0,1
--     11c:	253000ef          	jal	b6e <write>
-+     10c:	4605                	li	a2,1
-+     10e:	85ce                	mv	a1,s3
-+     110:	4505                	li	a0,1
-+     112:	249000ef          	jal	b5a <write>
-     int what = rand() % 23;
--     120:	f39ff0ef          	jal	58 <rand>
--     124:	47dd                	li	a5,23
--     126:	02f5653b          	remw	a0,a0,a5
--     12a:	0005071b          	sext.w	a4,a0
--     12e:	47d9                	li	a5,22
--     130:	fce7ede3          	bltu	a5,a4,10a <go+0x96>
--     134:	02051793          	slli	a5,a0,0x20
--     138:	01e7d513          	srli	a0,a5,0x1e
--     13c:	954a                	add	a0,a0,s2
--     13e:	411c                	lw	a5,0(a0)
--     140:	97ca                	add	a5,a5,s2
--     142:	8782                	jr	a5
-+     116:	f43ff0ef          	jal	58 <rand>
-+     11a:	47dd                	li	a5,23
-+     11c:	02f5653b          	remw	a0,a0,a5
-+    if(what == 1){
-+     120:	4785                	li	a5,1
-+     122:	fcf505e3          	beq	a0,a5,ec <go+0x78>
-     } else if(what == 2){
-+     126:	47d9                	li	a5,22
-+     128:	fca7ece3          	bltu	a5,a0,100 <go+0x8c>
-+     12c:	050a                	sll	a0,a0,0x2
-+     12e:	954a                	add	a0,a0,s2
-+     130:	411c                	lw	a5,0(a0)
-+     132:	97ca                	add	a5,a5,s2
-+     134:	8782                	jr	a5
-       close(open("grindir/../grindir/../b", O_CREATE|O_RDWR));
--     144:	20200593          	li	a1,514
--     148:	00001517          	auipc	a0,0x1
--     14c:	03050513          	addi	a0,a0,48 # 1178 <malloc+0x15e>
--     150:	23f000ef          	jal	b8e <open>
--     154:	223000ef          	jal	b76 <close>
--     158:	bf4d                	j	10a <go+0x96>
-+     136:	20200593          	li	a1,514
-+     13a:	00001517          	auipc	a0,0x1
-+     13e:	00650513          	add	a0,a0,6 # 1140 <malloc+0x138>
-+     142:	239000ef          	jal	b7a <open>
-+     146:	21d000ef          	jal	b62 <close>
-+     14a:	bf5d                	j	100 <go+0x8c>
-     } else if(what == 3){
-       unlink("grindir/../a");
--     15a:	00001517          	auipc	a0,0x1
--     15e:	00e50513          	addi	a0,a0,14 # 1168 <malloc+0x14e>
--     162:	23d000ef          	jal	b9e <unlink>
--     166:	b755                	j	10a <go+0x96>
-+     14c:	00001517          	auipc	a0,0x1
-+     150:	fe450513          	add	a0,a0,-28 # 1130 <malloc+0x128>
-+     154:	237000ef          	jal	b8a <unlink>
-+     158:	b765                	j	100 <go+0x8c>
-     } else if(what == 4){
-       if(chdir("grindir") != 0){
--     168:	00001517          	auipc	a0,0x1
--     16c:	fb850513          	addi	a0,a0,-72 # 1120 <malloc+0x106>
--     170:	24f000ef          	jal	bbe <chdir>
--     174:	ed11                	bnez	a0,190 <go+0x11c>
-+     15a:	00001517          	auipc	a0,0x1
-+     15e:	f9650513          	add	a0,a0,-106 # 10f0 <malloc+0xe8>
-+     162:	249000ef          	jal	baa <chdir>
-+     166:	ed11                	bnez	a0,182 <go+0x10e>
-         printf("grind: chdir grindir failed\n");
-         exit(1);
-       }
-       unlink("../b");
--     176:	00001517          	auipc	a0,0x1
--     17a:	01a50513          	addi	a0,a0,26 # 1190 <malloc+0x176>
--     17e:	221000ef          	jal	b9e <unlink>
-+     168:	00001517          	auipc	a0,0x1
-+     16c:	ff050513          	add	a0,a0,-16 # 1158 <malloc+0x150>
-+     170:	21b000ef          	jal	b8a <unlink>
-       chdir("/");
--     182:	00001517          	auipc	a0,0x1
--     186:	fce50513          	addi	a0,a0,-50 # 1150 <malloc+0x136>
--     18a:	235000ef          	jal	bbe <chdir>
--     18e:	bfb5                	j	10a <go+0x96>
-+     174:	00001517          	auipc	a0,0x1
-+     178:	fa450513          	add	a0,a0,-92 # 1118 <malloc+0x110>
-+     17c:	22f000ef          	jal	baa <chdir>
-+     180:	b741                	j	100 <go+0x8c>
-         printf("grind: chdir grindir failed\n");
--     190:	00001517          	auipc	a0,0x1
--     194:	f9850513          	addi	a0,a0,-104 # 1128 <malloc+0x10e>
--     198:	5cf000ef          	jal	f66 <printf>
-+     182:	00001517          	auipc	a0,0x1
-+     186:	f7650513          	add	a0,a0,-138 # 10f8 <malloc+0xf0>
-+     18a:	5cb000ef          	jal	f54 <printf>
-         exit(1);
--     19c:	4505                	li	a0,1
--     19e:	1b1000ef          	jal	b4e <exit>
-+     18e:	4505                	li	a0,1
-+     190:	1ab000ef          	jal	b3a <exit>
-     } else if(what == 5){
-       close(fd);
--     1a2:	8552                	mv	a0,s4
--     1a4:	1d3000ef          	jal	b76 <close>
-+     194:	8552                	mv	a0,s4
-+     196:	1cd000ef          	jal	b62 <close>
-       fd = open("/grindir/../a", O_CREATE|O_RDWR);
--     1a8:	20200593          	li	a1,514
--     1ac:	00001517          	auipc	a0,0x1
--     1b0:	fec50513          	addi	a0,a0,-20 # 1198 <malloc+0x17e>
--     1b4:	1db000ef          	jal	b8e <open>
--     1b8:	8a2a                	mv	s4,a0
--     1ba:	bf81                	j	10a <go+0x96>
-+     19a:	20200593          	li	a1,514
-+     19e:	00001517          	auipc	a0,0x1
-+     1a2:	fc250513          	add	a0,a0,-62 # 1160 <malloc+0x158>
-+     1a6:	1d5000ef          	jal	b7a <open>
-+     1aa:	8a2a                	mv	s4,a0
-+     1ac:	bf91                	j	100 <go+0x8c>
-     } else if(what == 6){
-       close(fd);
--     1bc:	8552                	mv	a0,s4
--     1be:	1b9000ef          	jal	b76 <close>
-+     1ae:	8552                	mv	a0,s4
-+     1b0:	1b3000ef          	jal	b62 <close>
-       fd = open("/./grindir/./../b", O_CREATE|O_RDWR);
--     1c2:	20200593          	li	a1,514
--     1c6:	00001517          	auipc	a0,0x1
--     1ca:	fe250513          	addi	a0,a0,-30 # 11a8 <malloc+0x18e>
--     1ce:	1c1000ef          	jal	b8e <open>
--     1d2:	8a2a                	mv	s4,a0
--     1d4:	bf1d                	j	10a <go+0x96>
-+     1b4:	20200593          	li	a1,514
-+     1b8:	00001517          	auipc	a0,0x1
-+     1bc:	fb850513          	add	a0,a0,-72 # 1170 <malloc+0x168>
-+     1c0:	1bb000ef          	jal	b7a <open>
-+     1c4:	8a2a                	mv	s4,a0
-+     1c6:	bf2d                	j	100 <go+0x8c>
-     } else if(what == 7){
-       write(fd, buf, sizeof(buf));
--     1d6:	3e700613          	li	a2,999
--     1da:	00002597          	auipc	a1,0x2
--     1de:	e4658593          	addi	a1,a1,-442 # 2020 <buf.0>
--     1e2:	8552                	mv	a0,s4
--     1e4:	18b000ef          	jal	b6e <write>
--     1e8:	b70d                	j	10a <go+0x96>
-+     1c8:	3e700613          	li	a2,999
-+     1cc:	00002597          	auipc	a1,0x2
-+     1d0:	e5458593          	add	a1,a1,-428 # 2020 <buf.0>
-+     1d4:	8552                	mv	a0,s4
-+     1d6:	185000ef          	jal	b5a <write>
-+     1da:	b71d                	j	100 <go+0x8c>
-     } else if(what == 8){
-       read(fd, buf, sizeof(buf));
--     1ea:	3e700613          	li	a2,999
--     1ee:	00002597          	auipc	a1,0x2
--     1f2:	e3258593          	addi	a1,a1,-462 # 2020 <buf.0>
--     1f6:	8552                	mv	a0,s4
--     1f8:	16f000ef          	jal	b66 <read>
--     1fc:	b739                	j	10a <go+0x96>
-+     1dc:	3e700613          	li	a2,999
-+     1e0:	00002597          	auipc	a1,0x2
-+     1e4:	e4058593          	add	a1,a1,-448 # 2020 <buf.0>
-+     1e8:	8552                	mv	a0,s4
-+     1ea:	169000ef          	jal	b52 <read>
-+     1ee:	bf09                	j	100 <go+0x8c>
-     } else if(what == 9){
-       mkdir("grindir/../a");
--     1fe:	00001517          	auipc	a0,0x1
--     202:	f6a50513          	addi	a0,a0,-150 # 1168 <malloc+0x14e>
--     206:	1b1000ef          	jal	bb6 <mkdir>
-+     1f0:	00001517          	auipc	a0,0x1
-+     1f4:	f4050513          	add	a0,a0,-192 # 1130 <malloc+0x128>
-+     1f8:	1ab000ef          	jal	ba2 <mkdir>
-       close(open("a/../a/./a", O_CREATE|O_RDWR));
--     20a:	20200593          	li	a1,514
--     20e:	00001517          	auipc	a0,0x1
--     212:	fb250513          	addi	a0,a0,-78 # 11c0 <malloc+0x1a6>
--     216:	179000ef          	jal	b8e <open>
--     21a:	15d000ef          	jal	b76 <close>
-+     1fc:	20200593          	li	a1,514
-+     200:	00001517          	auipc	a0,0x1
-+     204:	f8850513          	add	a0,a0,-120 # 1188 <malloc+0x180>
-+     208:	173000ef          	jal	b7a <open>
-+     20c:	157000ef          	jal	b62 <close>
-       unlink("a/a");
--     21e:	00001517          	auipc	a0,0x1
--     222:	fb250513          	addi	a0,a0,-78 # 11d0 <malloc+0x1b6>
--     226:	179000ef          	jal	b9e <unlink>
--     22a:	b5c5                	j	10a <go+0x96>
-+     210:	00001517          	auipc	a0,0x1
-+     214:	f8850513          	add	a0,a0,-120 # 1198 <malloc+0x190>
-+     218:	173000ef          	jal	b8a <unlink>
-+     21c:	b5d5                	j	100 <go+0x8c>
-     } else if(what == 10){
-       mkdir("/../b");
--     22c:	00001517          	auipc	a0,0x1
--     230:	fac50513          	addi	a0,a0,-84 # 11d8 <malloc+0x1be>
--     234:	183000ef          	jal	bb6 <mkdir>
-+     21e:	00001517          	auipc	a0,0x1
-+     222:	f8250513          	add	a0,a0,-126 # 11a0 <malloc+0x198>
-+     226:	17d000ef          	jal	ba2 <mkdir>
-       close(open("grindir/../b/b", O_CREATE|O_RDWR));
--     238:	20200593          	li	a1,514
--     23c:	00001517          	auipc	a0,0x1
--     240:	fa450513          	addi	a0,a0,-92 # 11e0 <malloc+0x1c6>
--     244:	14b000ef          	jal	b8e <open>
--     248:	12f000ef          	jal	b76 <close>
-+     22a:	20200593          	li	a1,514
-+     22e:	00001517          	auipc	a0,0x1
-+     232:	f7a50513          	add	a0,a0,-134 # 11a8 <malloc+0x1a0>
-+     236:	145000ef          	jal	b7a <open>
-+     23a:	129000ef          	jal	b62 <close>
-       unlink("b/b");
--     24c:	00001517          	auipc	a0,0x1
--     250:	fa450513          	addi	a0,a0,-92 # 11f0 <malloc+0x1d6>
--     254:	14b000ef          	jal	b9e <unlink>
--     258:	bd4d                	j	10a <go+0x96>
-+     23e:	00001517          	auipc	a0,0x1
-+     242:	f7a50513          	add	a0,a0,-134 # 11b8 <malloc+0x1b0>
-+     246:	145000ef          	jal	b8a <unlink>
-+     24a:	bd5d                	j	100 <go+0x8c>
-     } else if(what == 11){
-       unlink("b");
--     25a:	00001517          	auipc	a0,0x1
--     25e:	f9e50513          	addi	a0,a0,-98 # 11f8 <malloc+0x1de>
--     262:	13d000ef          	jal	b9e <unlink>
-+     24c:	00001517          	auipc	a0,0x1
-+     250:	f3450513          	add	a0,a0,-204 # 1180 <malloc+0x178>
-+     254:	137000ef          	jal	b8a <unlink>
-       link("../grindir/./../a", "../b");
--     266:	00001597          	auipc	a1,0x1
--     26a:	f2a58593          	addi	a1,a1,-214 # 1190 <malloc+0x176>
--     26e:	00001517          	auipc	a0,0x1
--     272:	f9250513          	addi	a0,a0,-110 # 1200 <malloc+0x1e6>
--     276:	139000ef          	jal	bae <link>
--     27a:	bd41                	j	10a <go+0x96>
-+     258:	00001597          	auipc	a1,0x1
-+     25c:	f0058593          	add	a1,a1,-256 # 1158 <malloc+0x150>
-+     260:	00001517          	auipc	a0,0x1
-+     264:	f6050513          	add	a0,a0,-160 # 11c0 <malloc+0x1b8>
-+     268:	133000ef          	jal	b9a <link>
-+     26c:	bd51                	j	100 <go+0x8c>
-     } else if(what == 12){
-       unlink("../grindir/../a");
--     27c:	00001517          	auipc	a0,0x1
--     280:	f9c50513          	addi	a0,a0,-100 # 1218 <malloc+0x1fe>
--     284:	11b000ef          	jal	b9e <unlink>
-+     26e:	00001517          	auipc	a0,0x1
-+     272:	f6a50513          	add	a0,a0,-150 # 11d8 <malloc+0x1d0>
-+     276:	115000ef          	jal	b8a <unlink>
-       link(".././b", "/grindir/../a");
--     288:	00001597          	auipc	a1,0x1
--     28c:	f1058593          	addi	a1,a1,-240 # 1198 <malloc+0x17e>
--     290:	00001517          	auipc	a0,0x1
--     294:	f9850513          	addi	a0,a0,-104 # 1228 <malloc+0x20e>
--     298:	117000ef          	jal	bae <link>
--     29c:	b5bd                	j	10a <go+0x96>
-+     27a:	00001597          	auipc	a1,0x1
-+     27e:	ee658593          	add	a1,a1,-282 # 1160 <malloc+0x158>
-+     282:	00001517          	auipc	a0,0x1
-+     286:	f6650513          	add	a0,a0,-154 # 11e8 <malloc+0x1e0>
-+     28a:	111000ef          	jal	b9a <link>
-+     28e:	bd8d                	j	100 <go+0x8c>
-     } else if(what == 13){
-       int pid = fork();
--     29e:	0a9000ef          	jal	b46 <fork>
-+     290:	0a3000ef          	jal	b32 <fork>
-       if(pid == 0){
--     2a2:	c519                	beqz	a0,2b0 <go+0x23c>
-+     294:	c519                	beqz	a0,2a2 <go+0x22e>
-         exit(0);
-       } else if(pid < 0){
--     2a4:	00054863          	bltz	a0,2b4 <go+0x240>
-+     296:	00054863          	bltz	a0,2a6 <go+0x232>
-         printf("grind: fork failed\n");
-         exit(1);
-       }
-       wait(0);
--     2a8:	4501                	li	a0,0
--     2aa:	0ad000ef          	jal	b56 <wait>
--     2ae:	bdb1                	j	10a <go+0x96>
-+     29a:	4501                	li	a0,0
-+     29c:	0a7000ef          	jal	b42 <wait>
-+     2a0:	b585                	j	100 <go+0x8c>
-         exit(0);
--     2b0:	09f000ef          	jal	b4e <exit>
-+     2a2:	099000ef          	jal	b3a <exit>
-         printf("grind: fork failed\n");
--     2b4:	00001517          	auipc	a0,0x1
--     2b8:	f7c50513          	addi	a0,a0,-132 # 1230 <malloc+0x216>
--     2bc:	4ab000ef          	jal	f66 <printf>
-+     2a6:	00001517          	auipc	a0,0x1
-+     2aa:	f4a50513          	add	a0,a0,-182 # 11f0 <malloc+0x1e8>
-+     2ae:	4a7000ef          	jal	f54 <printf>
-         exit(1);
--     2c0:	4505                	li	a0,1
--     2c2:	08d000ef          	jal	b4e <exit>
-+     2b2:	4505                	li	a0,1
-+     2b4:	087000ef          	jal	b3a <exit>
-     } else if(what == 14){
-       int pid = fork();
--     2c6:	081000ef          	jal	b46 <fork>
-+     2b8:	07b000ef          	jal	b32 <fork>
-       if(pid == 0){
--     2ca:	c519                	beqz	a0,2d8 <go+0x264>
-+     2bc:	c519                	beqz	a0,2ca <go+0x256>
-         fork();
-         fork();
-         exit(0);
-       } else if(pid < 0){
--     2cc:	00054d63          	bltz	a0,2e6 <go+0x272>
-+     2be:	00054d63          	bltz	a0,2d8 <go+0x264>
-         printf("grind: fork failed\n");
-         exit(1);
-       }
-       wait(0);
--     2d0:	4501                	li	a0,0
--     2d2:	085000ef          	jal	b56 <wait>
--     2d6:	bd15                	j	10a <go+0x96>
-+     2c2:	4501                	li	a0,0
-+     2c4:	07f000ef          	jal	b42 <wait>
-+     2c8:	bd25                	j	100 <go+0x8c>
-         fork();
--     2d8:	06f000ef          	jal	b46 <fork>
-+     2ca:	069000ef          	jal	b32 <fork>
-         fork();
--     2dc:	06b000ef          	jal	b46 <fork>
-+     2ce:	065000ef          	jal	b32 <fork>
-         exit(0);
--     2e0:	4501                	li	a0,0
--     2e2:	06d000ef          	jal	b4e <exit>
-+     2d2:	4501                	li	a0,0
-+     2d4:	067000ef          	jal	b3a <exit>
-         printf("grind: fork failed\n");
--     2e6:	00001517          	auipc	a0,0x1
--     2ea:	f4a50513          	addi	a0,a0,-182 # 1230 <malloc+0x216>
--     2ee:	479000ef          	jal	f66 <printf>
-+     2d8:	00001517          	auipc	a0,0x1
-+     2dc:	f1850513          	add	a0,a0,-232 # 11f0 <malloc+0x1e8>
-+     2e0:	475000ef          	jal	f54 <printf>
-         exit(1);
--     2f2:	4505                	li	a0,1
--     2f4:	05b000ef          	jal	b4e <exit>
-+     2e4:	4505                	li	a0,1
-+     2e6:	055000ef          	jal	b3a <exit>
-     } else if(what == 15){
-       sbrk(6011);
--     2f8:	6505                	lui	a0,0x1
--     2fa:	77b50513          	addi	a0,a0,1915 # 177b <digits+0x2eb>
--     2fe:	0d9000ef          	jal	bd6 <sbrk>
--     302:	b521                	j	10a <go+0x96>
-+     2ea:	6505                	lui	a0,0x1
-+     2ec:	77b50513          	add	a0,a0,1915 # 177b <digits+0x33b>
-+     2f0:	0d3000ef          	jal	bc2 <sbrk>
-+     2f4:	b531                	j	100 <go+0x8c>
-     } else if(what == 16){
-       if(sbrk(0) > break0)
--     304:	4501                	li	a0,0
--     306:	0d1000ef          	jal	bd6 <sbrk>
--     30a:	e0aaf0e3          	bgeu	s5,a0,10a <go+0x96>
-+     2f6:	4501                	li	a0,0
-+     2f8:	0cb000ef          	jal	bc2 <sbrk>
-+     2fc:	e0aaf2e3          	bgeu	s5,a0,100 <go+0x8c>
-         sbrk(-(sbrk(0) - break0));
--     30e:	4501                	li	a0,0
--     310:	0c7000ef          	jal	bd6 <sbrk>
--     314:	40aa853b          	subw	a0,s5,a0
--     318:	0bf000ef          	jal	bd6 <sbrk>
--     31c:	b3fd                	j	10a <go+0x96>
-+     300:	4501                	li	a0,0
-+     302:	0c1000ef          	jal	bc2 <sbrk>
-+     306:	40aa853b          	subw	a0,s5,a0
-+     30a:	0b9000ef          	jal	bc2 <sbrk>
-+     30e:	bbcd                	j	100 <go+0x8c>
-     } else if(what == 17){
-       int pid = fork();
--     31e:	029000ef          	jal	b46 <fork>
--     322:	8b2a                	mv	s6,a0
-+     310:	023000ef          	jal	b32 <fork>
-+     314:	8b2a                	mv	s6,a0
-       if(pid == 0){
--     324:	c10d                	beqz	a0,346 <go+0x2d2>
-+     316:	c10d                	beqz	a0,338 <go+0x2c4>
-         close(open("a", O_CREATE|O_RDWR));
-         exit(0);
-       } else if(pid < 0){
--     326:	02054d63          	bltz	a0,360 <go+0x2ec>
-+     318:	02054d63          	bltz	a0,352 <go+0x2de>
-         printf("grind: fork failed\n");
-         exit(1);
-       }
-       if(chdir("../grindir/..") != 0){
--     32a:	00001517          	auipc	a0,0x1
--     32e:	f2650513          	addi	a0,a0,-218 # 1250 <malloc+0x236>
--     332:	08d000ef          	jal	bbe <chdir>
--     336:	ed15                	bnez	a0,372 <go+0x2fe>
-+     31c:	00001517          	auipc	a0,0x1
-+     320:	eec50513          	add	a0,a0,-276 # 1208 <malloc+0x200>
-+     324:	087000ef          	jal	baa <chdir>
-+     328:	ed15                	bnez	a0,364 <go+0x2f0>
-         printf("grind: chdir failed\n");
-         exit(1);
-       }
-       kill(pid);
--     338:	855a                	mv	a0,s6
--     33a:	045000ef          	jal	b7e <kill>
-+     32a:	855a                	mv	a0,s6
-+     32c:	03f000ef          	jal	b6a <kill>
-       wait(0);
--     33e:	4501                	li	a0,0
--     340:	017000ef          	jal	b56 <wait>
--     344:	b3d9                	j	10a <go+0x96>
-+     330:	4501                	li	a0,0
-+     332:	011000ef          	jal	b42 <wait>
-+     336:	b3e9                	j	100 <go+0x8c>
-         close(open("a", O_CREATE|O_RDWR));
--     346:	20200593          	li	a1,514
--     34a:	00001517          	auipc	a0,0x1
--     34e:	efe50513          	addi	a0,a0,-258 # 1248 <malloc+0x22e>
--     352:	03d000ef          	jal	b8e <open>
--     356:	021000ef          	jal	b76 <close>
-+     338:	20200593          	li	a1,514
-+     33c:	00001517          	auipc	a0,0x1
-+     340:	e9450513          	add	a0,a0,-364 # 11d0 <malloc+0x1c8>
-+     344:	037000ef          	jal	b7a <open>
-+     348:	01b000ef          	jal	b62 <close>
-         exit(0);
--     35a:	4501                	li	a0,0
--     35c:	7f2000ef          	jal	b4e <exit>
-+     34c:	4501                	li	a0,0
-+     34e:	7ec000ef          	jal	b3a <exit>
-         printf("grind: fork failed\n");
--     360:	00001517          	auipc	a0,0x1
--     364:	ed050513          	addi	a0,a0,-304 # 1230 <malloc+0x216>
--     368:	3ff000ef          	jal	f66 <printf>
-+     352:	00001517          	auipc	a0,0x1
-+     356:	e9e50513          	add	a0,a0,-354 # 11f0 <malloc+0x1e8>
-+     35a:	3fb000ef          	jal	f54 <printf>
-         exit(1);
--     36c:	4505                	li	a0,1
--     36e:	7e0000ef          	jal	b4e <exit>
-+     35e:	4505                	li	a0,1
-+     360:	7da000ef          	jal	b3a <exit>
-         printf("grind: chdir failed\n");
--     372:	00001517          	auipc	a0,0x1
--     376:	eee50513          	addi	a0,a0,-274 # 1260 <malloc+0x246>
--     37a:	3ed000ef          	jal	f66 <printf>
-+     364:	00001517          	auipc	a0,0x1
-+     368:	eb450513          	add	a0,a0,-332 # 1218 <malloc+0x210>
-+     36c:	3e9000ef          	jal	f54 <printf>
-         exit(1);
--     37e:	4505                	li	a0,1
--     380:	7ce000ef          	jal	b4e <exit>
-+     370:	4505                	li	a0,1
-+     372:	7c8000ef          	jal	b3a <exit>
-     } else if(what == 18){
-       int pid = fork();
--     384:	7c2000ef          	jal	b46 <fork>
-+     376:	7bc000ef          	jal	b32 <fork>
-       if(pid == 0){
--     388:	c519                	beqz	a0,396 <go+0x322>
-+     37a:	c519                	beqz	a0,388 <go+0x314>
-         kill(getpid());
-         exit(0);
-       } else if(pid < 0){
--     38a:	00054d63          	bltz	a0,3a4 <go+0x330>
-+     37c:	00054d63          	bltz	a0,396 <go+0x322>
-         printf("grind: fork failed\n");
-         exit(1);
-       }
-       wait(0);
--     38e:	4501                	li	a0,0
--     390:	7c6000ef          	jal	b56 <wait>
--     394:	bb9d                	j	10a <go+0x96>
-+     380:	4501                	li	a0,0
-+     382:	7c0000ef          	jal	b42 <wait>
-+     386:	bbad                	j	100 <go+0x8c>
-         kill(getpid());
--     396:	039000ef          	jal	bce <getpid>
--     39a:	7e4000ef          	jal	b7e <kill>
-+     388:	033000ef          	jal	bba <getpid>
-+     38c:	7de000ef          	jal	b6a <kill>
-         exit(0);
--     39e:	4501                	li	a0,0
--     3a0:	7ae000ef          	jal	b4e <exit>
-+     390:	4501                	li	a0,0
-+     392:	7a8000ef          	jal	b3a <exit>
-         printf("grind: fork failed\n");
--     3a4:	00001517          	auipc	a0,0x1
--     3a8:	e8c50513          	addi	a0,a0,-372 # 1230 <malloc+0x216>
--     3ac:	3bb000ef          	jal	f66 <printf>
-+     396:	00001517          	auipc	a0,0x1
-+     39a:	e5a50513          	add	a0,a0,-422 # 11f0 <malloc+0x1e8>
-+     39e:	3b7000ef          	jal	f54 <printf>
-         exit(1);
--     3b0:	4505                	li	a0,1
--     3b2:	79c000ef          	jal	b4e <exit>
-+     3a2:	4505                	li	a0,1
-+     3a4:	796000ef          	jal	b3a <exit>
-     } else if(what == 19){
-       int fds[2];
-       if(pipe(fds) < 0){
--     3b6:	f9840513          	addi	a0,s0,-104
--     3ba:	7a4000ef          	jal	b5e <pipe>
--     3be:	02054363          	bltz	a0,3e4 <go+0x370>
-+     3a8:	f9840513          	add	a0,s0,-104
-+     3ac:	79e000ef          	jal	b4a <pipe>
-+     3b0:	02054363          	bltz	a0,3d6 <go+0x362>
-         printf("grind: pipe failed\n");
-         exit(1);
-       }
-       int pid = fork();
--     3c2:	784000ef          	jal	b46 <fork>
-+     3b4:	77e000ef          	jal	b32 <fork>
-       if(pid == 0){
--     3c6:	c905                	beqz	a0,3f6 <go+0x382>
-+     3b8:	c905                	beqz	a0,3e8 <go+0x374>
-           printf("grind: pipe write failed\n");
-         char c;
-         if(read(fds[0], &c, 1) != 1)
-           printf("grind: pipe read failed\n");
-         exit(0);
-       } else if(pid < 0){
--     3c8:	08054263          	bltz	a0,44c <go+0x3d8>
-+     3ba:	08054263          	bltz	a0,43e <go+0x3ca>
-         printf("grind: fork failed\n");
-         exit(1);
-       }
-       close(fds[0]);
--     3cc:	f9842503          	lw	a0,-104(s0)
--     3d0:	7a6000ef          	jal	b76 <close>
-+     3be:	f9842503          	lw	a0,-104(s0)
-+     3c2:	7a0000ef          	jal	b62 <close>
-       close(fds[1]);
--     3d4:	f9c42503          	lw	a0,-100(s0)
--     3d8:	79e000ef          	jal	b76 <close>
-+     3c6:	f9c42503          	lw	a0,-100(s0)
-+     3ca:	798000ef          	jal	b62 <close>
-       wait(0);
--     3dc:	4501                	li	a0,0
--     3de:	778000ef          	jal	b56 <wait>
--     3e2:	b325                	j	10a <go+0x96>
-+     3ce:	4501                	li	a0,0
-+     3d0:	772000ef          	jal	b42 <wait>
-+     3d4:	b335                	j	100 <go+0x8c>
-         printf("grind: pipe failed\n");
--     3e4:	00001517          	auipc	a0,0x1
--     3e8:	e9450513          	addi	a0,a0,-364 # 1278 <malloc+0x25e>
--     3ec:	37b000ef          	jal	f66 <printf>
-+     3d6:	00001517          	auipc	a0,0x1
-+     3da:	e5a50513          	add	a0,a0,-422 # 1230 <malloc+0x228>
-+     3de:	377000ef          	jal	f54 <printf>
-         exit(1);
--     3f0:	4505                	li	a0,1
--     3f2:	75c000ef          	jal	b4e <exit>
-+     3e2:	4505                	li	a0,1
-+     3e4:	756000ef          	jal	b3a <exit>
-         fork();
--     3f6:	750000ef          	jal	b46 <fork>
-+     3e8:	74a000ef          	jal	b32 <fork>
-         fork();
--     3fa:	74c000ef          	jal	b46 <fork>
-+     3ec:	746000ef          	jal	b32 <fork>
-         if(write(fds[1], "x", 1) != 1)
--     3fe:	4605                	li	a2,1
--     400:	00001597          	auipc	a1,0x1
--     404:	e9058593          	addi	a1,a1,-368 # 1290 <malloc+0x276>
--     408:	f9c42503          	lw	a0,-100(s0)
--     40c:	762000ef          	jal	b6e <write>
--     410:	4785                	li	a5,1
--     412:	00f51f63          	bne	a0,a5,430 <go+0x3bc>
-+     3f0:	4605                	li	a2,1
-+     3f2:	00001597          	auipc	a1,0x1
-+     3f6:	e5658593          	add	a1,a1,-426 # 1248 <malloc+0x240>
-+     3fa:	f9c42503          	lw	a0,-100(s0)
-+     3fe:	75c000ef          	jal	b5a <write>
-+     402:	4785                	li	a5,1
-+     404:	00f51f63          	bne	a0,a5,422 <go+0x3ae>
-         if(read(fds[0], &c, 1) != 1)
--     416:	4605                	li	a2,1
--     418:	f9040593          	addi	a1,s0,-112
--     41c:	f9842503          	lw	a0,-104(s0)
--     420:	746000ef          	jal	b66 <read>
--     424:	4785                	li	a5,1
--     426:	00f51c63          	bne	a0,a5,43e <go+0x3ca>
-+     408:	4605                	li	a2,1
-+     40a:	f9040593          	add	a1,s0,-112
-+     40e:	f9842503          	lw	a0,-104(s0)
-+     412:	740000ef          	jal	b52 <read>
-+     416:	4785                	li	a5,1
-+     418:	00f51c63          	bne	a0,a5,430 <go+0x3bc>
-         exit(0);
--     42a:	4501                	li	a0,0
--     42c:	722000ef          	jal	b4e <exit>
-+     41c:	4501                	li	a0,0
-+     41e:	71c000ef          	jal	b3a <exit>
-           printf("grind: pipe write failed\n");
--     430:	00001517          	auipc	a0,0x1
--     434:	e6850513          	addi	a0,a0,-408 # 1298 <malloc+0x27e>
--     438:	32f000ef          	jal	f66 <printf>
--     43c:	bfe9                	j	416 <go+0x3a2>
-+     422:	00001517          	auipc	a0,0x1
-+     426:	e2e50513          	add	a0,a0,-466 # 1250 <malloc+0x248>
-+     42a:	32b000ef          	jal	f54 <printf>
-+     42e:	bfe9                	j	408 <go+0x394>
-           printf("grind: pipe read failed\n");
--     43e:	00001517          	auipc	a0,0x1
--     442:	e7a50513          	addi	a0,a0,-390 # 12b8 <malloc+0x29e>
--     446:	321000ef          	jal	f66 <printf>
--     44a:	b7c5                	j	42a <go+0x3b6>
-+     430:	00001517          	auipc	a0,0x1
-+     434:	e4050513          	add	a0,a0,-448 # 1270 <malloc+0x268>
-+     438:	31d000ef          	jal	f54 <printf>
-+     43c:	b7c5                	j	41c <go+0x3a8>
-         printf("grind: fork failed\n");
--     44c:	00001517          	auipc	a0,0x1
--     450:	de450513          	addi	a0,a0,-540 # 1230 <malloc+0x216>
--     454:	313000ef          	jal	f66 <printf>
-+     43e:	00001517          	auipc	a0,0x1
-+     442:	db250513          	add	a0,a0,-590 # 11f0 <malloc+0x1e8>
-+     446:	30f000ef          	jal	f54 <printf>
-         exit(1);
--     458:	4505                	li	a0,1
--     45a:	6f4000ef          	jal	b4e <exit>
-+     44a:	4505                	li	a0,1
-+     44c:	6ee000ef          	jal	b3a <exit>
-     } else if(what == 20){
-       int pid = fork();
--     45e:	6e8000ef          	jal	b46 <fork>
-+     450:	6e2000ef          	jal	b32 <fork>
-       if(pid == 0){
--     462:	c519                	beqz	a0,470 <go+0x3fc>
-+     454:	c519                	beqz	a0,462 <go+0x3ee>
-         chdir("a");
-         unlink("../a");
-         fd = open("x", O_CREATE|O_RDWR);
-         unlink("x");
-         exit(0);
-       } else if(pid < 0){
--     464:	04054f63          	bltz	a0,4c2 <go+0x44e>
-+     456:	04054f63          	bltz	a0,4b4 <go+0x440>
-         printf("grind: fork failed\n");
-         exit(1);
-       }
-       wait(0);
--     468:	4501                	li	a0,0
--     46a:	6ec000ef          	jal	b56 <wait>
--     46e:	b971                	j	10a <go+0x96>
-+     45a:	4501                	li	a0,0
-+     45c:	6e6000ef          	jal	b42 <wait>
-+     460:	b145                	j	100 <go+0x8c>
-         unlink("a");
--     470:	00001517          	auipc	a0,0x1
--     474:	dd850513          	addi	a0,a0,-552 # 1248 <malloc+0x22e>
--     478:	726000ef          	jal	b9e <unlink>
-+     462:	00001517          	auipc	a0,0x1
-+     466:	d6e50513          	add	a0,a0,-658 # 11d0 <malloc+0x1c8>
-+     46a:	720000ef          	jal	b8a <unlink>
-         mkdir("a");
--     47c:	00001517          	auipc	a0,0x1
--     480:	dcc50513          	addi	a0,a0,-564 # 1248 <malloc+0x22e>
--     484:	732000ef          	jal	bb6 <mkdir>
-+     46e:	00001517          	auipc	a0,0x1
-+     472:	d6250513          	add	a0,a0,-670 # 11d0 <malloc+0x1c8>
-+     476:	72c000ef          	jal	ba2 <mkdir>
-         chdir("a");
--     488:	00001517          	auipc	a0,0x1
--     48c:	dc050513          	addi	a0,a0,-576 # 1248 <malloc+0x22e>
--     490:	72e000ef          	jal	bbe <chdir>
-+     47a:	00001517          	auipc	a0,0x1
-+     47e:	d5650513          	add	a0,a0,-682 # 11d0 <malloc+0x1c8>
-+     482:	728000ef          	jal	baa <chdir>
-         unlink("../a");
--     494:	00001517          	auipc	a0,0x1
--     498:	e4450513          	addi	a0,a0,-444 # 12d8 <malloc+0x2be>
--     49c:	702000ef          	jal	b9e <unlink>
-+     486:	00001517          	auipc	a0,0x1
-+     48a:	cb250513          	add	a0,a0,-846 # 1138 <malloc+0x130>
-+     48e:	6fc000ef          	jal	b8a <unlink>
-         fd = open("x", O_CREATE|O_RDWR);
--     4a0:	20200593          	li	a1,514
--     4a4:	00001517          	auipc	a0,0x1
--     4a8:	dec50513          	addi	a0,a0,-532 # 1290 <malloc+0x276>
--     4ac:	6e2000ef          	jal	b8e <open>
-+     492:	20200593          	li	a1,514
-+     496:	00001517          	auipc	a0,0x1
-+     49a:	db250513          	add	a0,a0,-590 # 1248 <malloc+0x240>
-+     49e:	6dc000ef          	jal	b7a <open>
-         unlink("x");
--     4b0:	00001517          	auipc	a0,0x1
--     4b4:	de050513          	addi	a0,a0,-544 # 1290 <malloc+0x276>
--     4b8:	6e6000ef          	jal	b9e <unlink>
-+     4a2:	00001517          	auipc	a0,0x1
-+     4a6:	da650513          	add	a0,a0,-602 # 1248 <malloc+0x240>
-+     4aa:	6e0000ef          	jal	b8a <unlink>
-         exit(0);
--     4bc:	4501                	li	a0,0
--     4be:	690000ef          	jal	b4e <exit>
-+     4ae:	4501                	li	a0,0
-+     4b0:	68a000ef          	jal	b3a <exit>
-         printf("grind: fork failed\n");
--     4c2:	00001517          	auipc	a0,0x1
--     4c6:	d6e50513          	addi	a0,a0,-658 # 1230 <malloc+0x216>
--     4ca:	29d000ef          	jal	f66 <printf>
-+     4b4:	00001517          	auipc	a0,0x1
-+     4b8:	d3c50513          	add	a0,a0,-708 # 11f0 <malloc+0x1e8>
-+     4bc:	299000ef          	jal	f54 <printf>
-         exit(1);
--     4ce:	4505                	li	a0,1
--     4d0:	67e000ef          	jal	b4e <exit>
-+     4c0:	4505                	li	a0,1
-+     4c2:	678000ef          	jal	b3a <exit>
-     } else if(what == 21){
-       unlink("c");
--     4d4:	00001517          	auipc	a0,0x1
--     4d8:	e0c50513          	addi	a0,a0,-500 # 12e0 <malloc+0x2c6>
--     4dc:	6c2000ef          	jal	b9e <unlink>
-+     4c6:	00001517          	auipc	a0,0x1
-+     4ca:	dca50513          	add	a0,a0,-566 # 1290 <malloc+0x288>
-+     4ce:	6bc000ef          	jal	b8a <unlink>
-       /* should always succeed. check that there are free i-nodes, */
-       /* file descriptors, blocks. */
-       int fd1 = open("c", O_CREATE|O_RDWR);
--     4e0:	20200593          	li	a1,514
--     4e4:	00001517          	auipc	a0,0x1
--     4e8:	dfc50513          	addi	a0,a0,-516 # 12e0 <malloc+0x2c6>
--     4ec:	6a2000ef          	jal	b8e <open>
--     4f0:	8b2a                	mv	s6,a0
-+     4d2:	20200593          	li	a1,514
-+     4d6:	00001517          	auipc	a0,0x1
-+     4da:	dba50513          	add	a0,a0,-582 # 1290 <malloc+0x288>
-+     4de:	69c000ef          	jal	b7a <open>
-+     4e2:	8b2a                	mv	s6,a0
-       if(fd1 < 0){
--     4f2:	04054763          	bltz	a0,540 <go+0x4cc>
-+     4e4:	04054763          	bltz	a0,532 <go+0x4be>
-         printf("grind: create c failed\n");
-         exit(1);
-       }
-       if(write(fd1, "x", 1) != 1){
--     4f6:	4605                	li	a2,1
--     4f8:	00001597          	auipc	a1,0x1
--     4fc:	d9858593          	addi	a1,a1,-616 # 1290 <malloc+0x276>
--     500:	66e000ef          	jal	b6e <write>
--     504:	4785                	li	a5,1
--     506:	04f51663          	bne	a0,a5,552 <go+0x4de>
-+     4e8:	4605                	li	a2,1
-+     4ea:	00001597          	auipc	a1,0x1
-+     4ee:	d5e58593          	add	a1,a1,-674 # 1248 <malloc+0x240>
-+     4f2:	668000ef          	jal	b5a <write>
-+     4f6:	4785                	li	a5,1
-+     4f8:	04f51663          	bne	a0,a5,544 <go+0x4d0>
-         printf("grind: write c failed\n");
-         exit(1);
-       }
-       struct stat st;
-       if(fstat(fd1, &st) != 0){
--     50a:	f9840593          	addi	a1,s0,-104
--     50e:	855a                	mv	a0,s6
--     510:	696000ef          	jal	ba6 <fstat>
--     514:	e921                	bnez	a0,564 <go+0x4f0>
-+     4fc:	f9840593          	add	a1,s0,-104
-+     500:	855a                	mv	a0,s6
-+     502:	690000ef          	jal	b92 <fstat>
-+     506:	e921                	bnez	a0,556 <go+0x4e2>
-         printf("grind: fstat failed\n");
-         exit(1);
-       }
-       if(st.size != 1){
--     516:	fa843583          	ld	a1,-88(s0)
--     51a:	4785                	li	a5,1
--     51c:	04f59d63          	bne	a1,a5,576 <go+0x502>
-+     508:	fa843583          	ld	a1,-88(s0)
-+     50c:	4785                	li	a5,1
-+     50e:	04f59d63          	bne	a1,a5,568 <go+0x4f4>
-         printf("grind: fstat reports wrong size %d\n", (int)st.size);
-         exit(1);
-       }
-       if(st.ino > 200){
--     520:	f9c42583          	lw	a1,-100(s0)
--     524:	0c800793          	li	a5,200
--     528:	06b7e163          	bltu	a5,a1,58a <go+0x516>
-+     512:	f9c42583          	lw	a1,-100(s0)
-+     516:	0c800793          	li	a5,200
-+     51a:	06b7e163          	bltu	a5,a1,57c <go+0x508>
-         printf("grind: fstat reports crazy i-number %d\n", st.ino);
-         exit(1);
-       }
-       close(fd1);
--     52c:	855a                	mv	a0,s6
--     52e:	648000ef          	jal	b76 <close>
-+     51e:	855a                	mv	a0,s6
-+     520:	642000ef          	jal	b62 <close>
-       unlink("c");
--     532:	00001517          	auipc	a0,0x1
--     536:	dae50513          	addi	a0,a0,-594 # 12e0 <malloc+0x2c6>
--     53a:	664000ef          	jal	b9e <unlink>
--     53e:	b6f1                	j	10a <go+0x96>
-+     524:	00001517          	auipc	a0,0x1
-+     528:	d6c50513          	add	a0,a0,-660 # 1290 <malloc+0x288>
-+     52c:	65e000ef          	jal	b8a <unlink>
-+     530:	bec1                	j	100 <go+0x8c>
-         printf("grind: create c failed\n");
--     540:	00001517          	auipc	a0,0x1
--     544:	da850513          	addi	a0,a0,-600 # 12e8 <malloc+0x2ce>
--     548:	21f000ef          	jal	f66 <printf>
-+     532:	00001517          	auipc	a0,0x1
-+     536:	d6650513          	add	a0,a0,-666 # 1298 <malloc+0x290>
-+     53a:	21b000ef          	jal	f54 <printf>
-         exit(1);
--     54c:	4505                	li	a0,1
--     54e:	600000ef          	jal	b4e <exit>
-+     53e:	4505                	li	a0,1
-+     540:	5fa000ef          	jal	b3a <exit>
-         printf("grind: write c failed\n");
--     552:	00001517          	auipc	a0,0x1
--     556:	dae50513          	addi	a0,a0,-594 # 1300 <malloc+0x2e6>
--     55a:	20d000ef          	jal	f66 <printf>
-+     544:	00001517          	auipc	a0,0x1
-+     548:	d6c50513          	add	a0,a0,-660 # 12b0 <malloc+0x2a8>
-+     54c:	209000ef          	jal	f54 <printf>
-         exit(1);
--     55e:	4505                	li	a0,1
--     560:	5ee000ef          	jal	b4e <exit>
-+     550:	4505                	li	a0,1
-+     552:	5e8000ef          	jal	b3a <exit>
-         printf("grind: fstat failed\n");
--     564:	00001517          	auipc	a0,0x1
--     568:	db450513          	addi	a0,a0,-588 # 1318 <malloc+0x2fe>
--     56c:	1fb000ef          	jal	f66 <printf>
-+     556:	00001517          	auipc	a0,0x1
-+     55a:	d7250513          	add	a0,a0,-654 # 12c8 <malloc+0x2c0>
-+     55e:	1f7000ef          	jal	f54 <printf>
-         exit(1);
--     570:	4505                	li	a0,1
--     572:	5dc000ef          	jal	b4e <exit>
-+     562:	4505                	li	a0,1
-+     564:	5d6000ef          	jal	b3a <exit>
-         printf("grind: fstat reports wrong size %d\n", (int)st.size);
--     576:	2581                	sext.w	a1,a1
--     578:	00001517          	auipc	a0,0x1
--     57c:	db850513          	addi	a0,a0,-584 # 1330 <malloc+0x316>
--     580:	1e7000ef          	jal	f66 <printf>
-+     568:	2581                	sext.w	a1,a1
-+     56a:	00001517          	auipc	a0,0x1
-+     56e:	d7650513          	add	a0,a0,-650 # 12e0 <malloc+0x2d8>
-+     572:	1e3000ef          	jal	f54 <printf>
-         exit(1);
--     584:	4505                	li	a0,1
--     586:	5c8000ef          	jal	b4e <exit>
-+     576:	4505                	li	a0,1
-+     578:	5c2000ef          	jal	b3a <exit>
-         printf("grind: fstat reports crazy i-number %d\n", st.ino);
--     58a:	00001517          	auipc	a0,0x1
--     58e:	dce50513          	addi	a0,a0,-562 # 1358 <malloc+0x33e>
--     592:	1d5000ef          	jal	f66 <printf>
-+     57c:	00001517          	auipc	a0,0x1
-+     580:	d8c50513          	add	a0,a0,-628 # 1308 <malloc+0x300>
-+     584:	1d1000ef          	jal	f54 <printf>
-         exit(1);
--     596:	4505                	li	a0,1
--     598:	5b6000ef          	jal	b4e <exit>
-+     588:	4505                	li	a0,1
-+     58a:	5b0000ef          	jal	b3a <exit>
-     } else if(what == 22){
-       /* echo hi | cat */
-       int aa[2], bb[2];
-       if(pipe(aa) < 0){
--     59c:	f8840513          	addi	a0,s0,-120
--     5a0:	5be000ef          	jal	b5e <pipe>
--     5a4:	0a054563          	bltz	a0,64e <go+0x5da>
-+     58e:	f8840513          	add	a0,s0,-120
-+     592:	5b8000ef          	jal	b4a <pipe>
-+     596:	0a054563          	bltz	a0,640 <go+0x5cc>
-         fprintf(2, "grind: pipe failed\n");
-         exit(1);
-       }
-       if(pipe(bb) < 0){
--     5a8:	f9040513          	addi	a0,s0,-112
--     5ac:	5b2000ef          	jal	b5e <pipe>
--     5b0:	0a054963          	bltz	a0,662 <go+0x5ee>
-+     59a:	f9040513          	add	a0,s0,-112
-+     59e:	5ac000ef          	jal	b4a <pipe>
-+     5a2:	0a054963          	bltz	a0,654 <go+0x5e0>
-         fprintf(2, "grind: pipe failed\n");
-         exit(1);
-       }
-       int pid1 = fork();
--     5b4:	592000ef          	jal	b46 <fork>
-+     5a6:	58c000ef          	jal	b32 <fork>
-       if(pid1 == 0){
--     5b8:	cd5d                	beqz	a0,676 <go+0x602>
-+     5aa:	cd5d                	beqz	a0,668 <go+0x5f4>
-         close(aa[1]);
-         char *args[3] = { "echo", "hi", 0 };
-         exec("grindir/../echo", args);
-         fprintf(2, "grind: echo: not found\n");
-         exit(2);
-       } else if(pid1 < 0){
--     5ba:	14054263          	bltz	a0,6fe <go+0x68a>
-+     5ac:	14054263          	bltz	a0,6f0 <go+0x67c>
-         fprintf(2, "grind: fork failed\n");
-         exit(3);
-       }
-       int pid2 = fork();
--     5be:	588000ef          	jal	b46 <fork>
-+     5b0:	582000ef          	jal	b32 <fork>
-       if(pid2 == 0){
--     5c2:	14050863          	beqz	a0,712 <go+0x69e>
-+     5b4:	14050863          	beqz	a0,704 <go+0x690>
-         close(bb[1]);
-         char *args[2] = { "cat", 0 };
-         exec("/cat", args);
-         fprintf(2, "grind: cat: not found\n");
-         exit(6);
-       } else if(pid2 < 0){
--     5c6:	1e054663          	bltz	a0,7b2 <go+0x73e>
-+     5b8:	1e054663          	bltz	a0,7a4 <go+0x730>
-         fprintf(2, "grind: fork failed\n");
-         exit(7);
-       }
-       close(aa[0]);
--     5ca:	f8842503          	lw	a0,-120(s0)
--     5ce:	5a8000ef          	jal	b76 <close>
-+     5bc:	f8842503          	lw	a0,-120(s0)
-+     5c0:	5a2000ef          	jal	b62 <close>
-       close(aa[1]);
--     5d2:	f8c42503          	lw	a0,-116(s0)
--     5d6:	5a0000ef          	jal	b76 <close>
-+     5c4:	f8c42503          	lw	a0,-116(s0)
-+     5c8:	59a000ef          	jal	b62 <close>
-       close(bb[1]);
--     5da:	f9442503          	lw	a0,-108(s0)
--     5de:	598000ef          	jal	b76 <close>
-+     5cc:	f9442503          	lw	a0,-108(s0)
-+     5d0:	592000ef          	jal	b62 <close>
-       char buf[4] = { 0, 0, 0, 0 };
--     5e2:	f8042023          	sw	zero,-128(s0)
-+     5d4:	f8042023          	sw	zero,-128(s0)
-       read(bb[0], buf+0, 1);
-+     5d8:	4605                	li	a2,1
-+     5da:	f8040593          	add	a1,s0,-128
-+     5de:	f9042503          	lw	a0,-112(s0)
-+     5e2:	570000ef          	jal	b52 <read>
-+      read(bb[0], buf+1, 1);
-      5e6:	4605                	li	a2,1
--     5e8:	f8040593          	addi	a1,s0,-128
-+     5e8:	f8140593          	add	a1,s0,-127
-      5ec:	f9042503          	lw	a0,-112(s0)
--     5f0:	576000ef          	jal	b66 <read>
--      read(bb[0], buf+1, 1);
-+     5f0:	562000ef          	jal	b52 <read>
-+      read(bb[0], buf+2, 1);
-      5f4:	4605                	li	a2,1
--     5f6:	f8140593          	addi	a1,s0,-127
-+     5f6:	f8240593          	add	a1,s0,-126
-      5fa:	f9042503          	lw	a0,-112(s0)
--     5fe:	568000ef          	jal	b66 <read>
--      read(bb[0], buf+2, 1);
--     602:	4605                	li	a2,1
--     604:	f8240593          	addi	a1,s0,-126
--     608:	f9042503          	lw	a0,-112(s0)
--     60c:	55a000ef          	jal	b66 <read>
-+     5fe:	554000ef          	jal	b52 <read>
-       close(bb[0]);
--     610:	f9042503          	lw	a0,-112(s0)
--     614:	562000ef          	jal	b76 <close>
-+     602:	f9042503          	lw	a0,-112(s0)
-+     606:	55c000ef          	jal	b62 <close>
-       int st1, st2;
-       wait(&st1);
--     618:	f8440513          	addi	a0,s0,-124
--     61c:	53a000ef          	jal	b56 <wait>
-+     60a:	f8440513          	add	a0,s0,-124
-+     60e:	534000ef          	jal	b42 <wait>
-       wait(&st2);
--     620:	f9840513          	addi	a0,s0,-104
--     624:	532000ef          	jal	b56 <wait>
-+     612:	f9840513          	add	a0,s0,-104
-+     616:	52c000ef          	jal	b42 <wait>
-       if(st1 != 0 || st2 != 0 || strcmp(buf, "hi\n") != 0){
--     628:	f8442783          	lw	a5,-124(s0)
--     62c:	f9842b83          	lw	s7,-104(s0)
--     630:	0177eb33          	or	s6,a5,s7
--     634:	180b1963          	bnez	s6,7c6 <go+0x752>
--     638:	00001597          	auipc	a1,0x1
--     63c:	dc058593          	addi	a1,a1,-576 # 13f8 <malloc+0x3de>
--     640:	f8040513          	addi	a0,s0,-128
--     644:	2ce000ef          	jal	912 <strcmp>
--     648:	ac0501e3          	beqz	a0,10a <go+0x96>
--     64c:	aab5                	j	7c8 <go+0x754>
-+     61a:	f8442783          	lw	a5,-124(s0)
-+     61e:	f9842b83          	lw	s7,-104(s0)
-+     622:	0177eb33          	or	s6,a5,s7
-+     626:	180b1963          	bnez	s6,7b8 <go+0x744>
-+     62a:	00001597          	auipc	a1,0x1
-+     62e:	d7e58593          	add	a1,a1,-642 # 13a8 <malloc+0x3a0>
-+     632:	f8040513          	add	a0,s0,-128
-+     636:	2c8000ef          	jal	8fe <strcmp>
-+     63a:	ac0503e3          	beqz	a0,100 <go+0x8c>
-+     63e:	aab5                	j	7ba <go+0x746>
-         fprintf(2, "grind: pipe failed\n");
--     64e:	00001597          	auipc	a1,0x1
--     652:	c2a58593          	addi	a1,a1,-982 # 1278 <malloc+0x25e>
--     656:	4509                	li	a0,2
--     658:	0e5000ef          	jal	f3c <fprintf>
-+     640:	00001597          	auipc	a1,0x1
-+     644:	bf058593          	add	a1,a1,-1040 # 1230 <malloc+0x228>
-+     648:	4509                	li	a0,2
-+     64a:	0e1000ef          	jal	f2a <fprintf>
-         exit(1);
--     65c:	4505                	li	a0,1
--     65e:	4f0000ef          	jal	b4e <exit>
-+     64e:	4505                	li	a0,1
-+     650:	4ea000ef          	jal	b3a <exit>
-         fprintf(2, "grind: pipe failed\n");
--     662:	00001597          	auipc	a1,0x1
--     666:	c1658593          	addi	a1,a1,-1002 # 1278 <malloc+0x25e>
--     66a:	4509                	li	a0,2
--     66c:	0d1000ef          	jal	f3c <fprintf>
-+     654:	00001597          	auipc	a1,0x1
-+     658:	bdc58593          	add	a1,a1,-1060 # 1230 <malloc+0x228>
-+     65c:	4509                	li	a0,2
-+     65e:	0cd000ef          	jal	f2a <fprintf>
-         exit(1);
--     670:	4505                	li	a0,1
--     672:	4dc000ef          	jal	b4e <exit>
-+     662:	4505                	li	a0,1
-+     664:	4d6000ef          	jal	b3a <exit>
-         close(bb[0]);
--     676:	f9042503          	lw	a0,-112(s0)
--     67a:	4fc000ef          	jal	b76 <close>
-+     668:	f9042503          	lw	a0,-112(s0)
-+     66c:	4f6000ef          	jal	b62 <close>
-         close(bb[1]);
--     67e:	f9442503          	lw	a0,-108(s0)
--     682:	4f4000ef          	jal	b76 <close>
-+     670:	f9442503          	lw	a0,-108(s0)
-+     674:	4ee000ef          	jal	b62 <close>
-         close(aa[0]);
--     686:	f8842503          	lw	a0,-120(s0)
--     68a:	4ec000ef          	jal	b76 <close>
-+     678:	f8842503          	lw	a0,-120(s0)
-+     67c:	4e6000ef          	jal	b62 <close>
-         close(1);
--     68e:	4505                	li	a0,1
--     690:	4e6000ef          	jal	b76 <close>
-+     680:	4505                	li	a0,1
-+     682:	4e0000ef          	jal	b62 <close>
-         if(dup(aa[1]) != 1){
--     694:	f8c42503          	lw	a0,-116(s0)
--     698:	52e000ef          	jal	bc6 <dup>
--     69c:	4785                	li	a5,1
--     69e:	00f50c63          	beq	a0,a5,6b6 <go+0x642>
-+     686:	f8c42503          	lw	a0,-116(s0)
-+     68a:	528000ef          	jal	bb2 <dup>
-+     68e:	4785                	li	a5,1
-+     690:	00f50c63          	beq	a0,a5,6a8 <go+0x634>
-           fprintf(2, "grind: dup failed\n");
--     6a2:	00001597          	auipc	a1,0x1
--     6a6:	cde58593          	addi	a1,a1,-802 # 1380 <malloc+0x366>
--     6aa:	4509                	li	a0,2
--     6ac:	091000ef          	jal	f3c <fprintf>
-+     694:	00001597          	auipc	a1,0x1
-+     698:	c9c58593          	add	a1,a1,-868 # 1330 <malloc+0x328>
-+     69c:	4509                	li	a0,2
-+     69e:	08d000ef          	jal	f2a <fprintf>
-           exit(1);
--     6b0:	4505                	li	a0,1
--     6b2:	49c000ef          	jal	b4e <exit>
-+     6a2:	4505                	li	a0,1
-+     6a4:	496000ef          	jal	b3a <exit>
-         close(aa[1]);
--     6b6:	f8c42503          	lw	a0,-116(s0)
--     6ba:	4bc000ef          	jal	b76 <close>
-+     6a8:	f8c42503          	lw	a0,-116(s0)
-+     6ac:	4b6000ef          	jal	b62 <close>
-         char *args[3] = { "echo", "hi", 0 };
--     6be:	00001797          	auipc	a5,0x1
--     6c2:	cda78793          	addi	a5,a5,-806 # 1398 <malloc+0x37e>
--     6c6:	f8f43c23          	sd	a5,-104(s0)
--     6ca:	00001797          	auipc	a5,0x1
--     6ce:	cd678793          	addi	a5,a5,-810 # 13a0 <malloc+0x386>
--     6d2:	faf43023          	sd	a5,-96(s0)
--     6d6:	fa043423          	sd	zero,-88(s0)
-+     6b0:	00001797          	auipc	a5,0x1
-+     6b4:	c9878793          	add	a5,a5,-872 # 1348 <malloc+0x340>
-+     6b8:	f8f43c23          	sd	a5,-104(s0)
-+     6bc:	00001797          	auipc	a5,0x1
-+     6c0:	c9478793          	add	a5,a5,-876 # 1350 <malloc+0x348>
-+     6c4:	faf43023          	sd	a5,-96(s0)
-+     6c8:	fa043423          	sd	zero,-88(s0)
-         exec("grindir/../echo", args);
--     6da:	f9840593          	addi	a1,s0,-104
--     6de:	00001517          	auipc	a0,0x1
--     6e2:	cca50513          	addi	a0,a0,-822 # 13a8 <malloc+0x38e>
--     6e6:	4a0000ef          	jal	b86 <exec>
-+     6cc:	f9840593          	add	a1,s0,-104
-+     6d0:	00001517          	auipc	a0,0x1
-+     6d4:	c8850513          	add	a0,a0,-888 # 1358 <malloc+0x350>
-+     6d8:	49a000ef          	jal	b72 <exec>
-         fprintf(2, "grind: echo: not found\n");
--     6ea:	00001597          	auipc	a1,0x1
--     6ee:	cce58593          	addi	a1,a1,-818 # 13b8 <malloc+0x39e>
--     6f2:	4509                	li	a0,2
--     6f4:	049000ef          	jal	f3c <fprintf>
-+     6dc:	00001597          	auipc	a1,0x1
-+     6e0:	c8c58593          	add	a1,a1,-884 # 1368 <malloc+0x360>
-+     6e4:	4509                	li	a0,2
-+     6e6:	045000ef          	jal	f2a <fprintf>
-         exit(2);
--     6f8:	4509                	li	a0,2
--     6fa:	454000ef          	jal	b4e <exit>
-+     6ea:	4509                	li	a0,2
-+     6ec:	44e000ef          	jal	b3a <exit>
-         fprintf(2, "grind: fork failed\n");
--     6fe:	00001597          	auipc	a1,0x1
--     702:	b3258593          	addi	a1,a1,-1230 # 1230 <malloc+0x216>
--     706:	4509                	li	a0,2
--     708:	035000ef          	jal	f3c <fprintf>
-+     6f0:	00001597          	auipc	a1,0x1
-+     6f4:	b0058593          	add	a1,a1,-1280 # 11f0 <malloc+0x1e8>
-+     6f8:	4509                	li	a0,2
-+     6fa:	031000ef          	jal	f2a <fprintf>
-         exit(3);
--     70c:	450d                	li	a0,3
--     70e:	440000ef          	jal	b4e <exit>
-+     6fe:	450d                	li	a0,3
-+     700:	43a000ef          	jal	b3a <exit>
-         close(aa[1]);
--     712:	f8c42503          	lw	a0,-116(s0)
--     716:	460000ef          	jal	b76 <close>
-+     704:	f8c42503          	lw	a0,-116(s0)
-+     708:	45a000ef          	jal	b62 <close>
-         close(bb[0]);
--     71a:	f9042503          	lw	a0,-112(s0)
--     71e:	458000ef          	jal	b76 <close>
-+     70c:	f9042503          	lw	a0,-112(s0)
-+     710:	452000ef          	jal	b62 <close>
-         close(0);
--     722:	4501                	li	a0,0
--     724:	452000ef          	jal	b76 <close>
-+     714:	4501                	li	a0,0
-+     716:	44c000ef          	jal	b62 <close>
-         if(dup(aa[0]) != 0){
--     728:	f8842503          	lw	a0,-120(s0)
--     72c:	49a000ef          	jal	bc6 <dup>
--     730:	c919                	beqz	a0,746 <go+0x6d2>
-+     71a:	f8842503          	lw	a0,-120(s0)
-+     71e:	494000ef          	jal	bb2 <dup>
-+     722:	c919                	beqz	a0,738 <go+0x6c4>
-           fprintf(2, "grind: dup failed\n");
--     732:	00001597          	auipc	a1,0x1
--     736:	c4e58593          	addi	a1,a1,-946 # 1380 <malloc+0x366>
--     73a:	4509                	li	a0,2
--     73c:	001000ef          	jal	f3c <fprintf>
-+     724:	00001597          	auipc	a1,0x1
-+     728:	c0c58593          	add	a1,a1,-1012 # 1330 <malloc+0x328>
-+     72c:	4509                	li	a0,2
-+     72e:	7fc000ef          	jal	f2a <fprintf>
-           exit(4);
--     740:	4511                	li	a0,4
--     742:	40c000ef          	jal	b4e <exit>
-+     732:	4511                	li	a0,4
-+     734:	406000ef          	jal	b3a <exit>
-         close(aa[0]);
--     746:	f8842503          	lw	a0,-120(s0)
--     74a:	42c000ef          	jal	b76 <close>
-+     738:	f8842503          	lw	a0,-120(s0)
-+     73c:	426000ef          	jal	b62 <close>
-         close(1);
--     74e:	4505                	li	a0,1
--     750:	426000ef          	jal	b76 <close>
-+     740:	4505                	li	a0,1
-+     742:	420000ef          	jal	b62 <close>
-         if(dup(bb[1]) != 1){
--     754:	f9442503          	lw	a0,-108(s0)
--     758:	46e000ef          	jal	bc6 <dup>
--     75c:	4785                	li	a5,1
--     75e:	00f50c63          	beq	a0,a5,776 <go+0x702>
-+     746:	f9442503          	lw	a0,-108(s0)
-+     74a:	468000ef          	jal	bb2 <dup>
-+     74e:	4785                	li	a5,1
-+     750:	00f50c63          	beq	a0,a5,768 <go+0x6f4>
-           fprintf(2, "grind: dup failed\n");
--     762:	00001597          	auipc	a1,0x1
--     766:	c1e58593          	addi	a1,a1,-994 # 1380 <malloc+0x366>
--     76a:	4509                	li	a0,2
--     76c:	7d0000ef          	jal	f3c <fprintf>
-+     754:	00001597          	auipc	a1,0x1
-+     758:	bdc58593          	add	a1,a1,-1060 # 1330 <malloc+0x328>
-+     75c:	4509                	li	a0,2
-+     75e:	7cc000ef          	jal	f2a <fprintf>
-           exit(5);
--     770:	4515                	li	a0,5
--     772:	3dc000ef          	jal	b4e <exit>
-+     762:	4515                	li	a0,5
-+     764:	3d6000ef          	jal	b3a <exit>
-         close(bb[1]);
--     776:	f9442503          	lw	a0,-108(s0)
--     77a:	3fc000ef          	jal	b76 <close>
-+     768:	f9442503          	lw	a0,-108(s0)
-+     76c:	3f6000ef          	jal	b62 <close>
-         char *args[2] = { "cat", 0 };
--     77e:	00001797          	auipc	a5,0x1
--     782:	c5278793          	addi	a5,a5,-942 # 13d0 <malloc+0x3b6>
--     786:	f8f43c23          	sd	a5,-104(s0)
--     78a:	fa043023          	sd	zero,-96(s0)
-+     770:	00001797          	auipc	a5,0x1
-+     774:	c1078793          	add	a5,a5,-1008 # 1380 <malloc+0x378>
-+     778:	f8f43c23          	sd	a5,-104(s0)
-+     77c:	fa043023          	sd	zero,-96(s0)
-         exec("/cat", args);
--     78e:	f9840593          	addi	a1,s0,-104
--     792:	00001517          	auipc	a0,0x1
--     796:	c4650513          	addi	a0,a0,-954 # 13d8 <malloc+0x3be>
--     79a:	3ec000ef          	jal	b86 <exec>
-+     780:	f9840593          	add	a1,s0,-104
-+     784:	00001517          	auipc	a0,0x1
-+     788:	c0450513          	add	a0,a0,-1020 # 1388 <malloc+0x380>
-+     78c:	3e6000ef          	jal	b72 <exec>
-         fprintf(2, "grind: cat: not found\n");
--     79e:	00001597          	auipc	a1,0x1
--     7a2:	c4258593          	addi	a1,a1,-958 # 13e0 <malloc+0x3c6>
--     7a6:	4509                	li	a0,2
--     7a8:	794000ef          	jal	f3c <fprintf>
-+     790:	00001597          	auipc	a1,0x1
-+     794:	c0058593          	add	a1,a1,-1024 # 1390 <malloc+0x388>
-+     798:	4509                	li	a0,2
-+     79a:	790000ef          	jal	f2a <fprintf>
-         exit(6);
--     7ac:	4519                	li	a0,6
--     7ae:	3a0000ef          	jal	b4e <exit>
-+     79e:	4519                	li	a0,6
-+     7a0:	39a000ef          	jal	b3a <exit>
-         fprintf(2, "grind: fork failed\n");
--     7b2:	00001597          	auipc	a1,0x1
--     7b6:	a7e58593          	addi	a1,a1,-1410 # 1230 <malloc+0x216>
--     7ba:	4509                	li	a0,2
--     7bc:	780000ef          	jal	f3c <fprintf>
-+     7a4:	00001597          	auipc	a1,0x1
-+     7a8:	a4c58593          	add	a1,a1,-1460 # 11f0 <malloc+0x1e8>
-+     7ac:	4509                	li	a0,2
-+     7ae:	77c000ef          	jal	f2a <fprintf>
-         exit(7);
--     7c0:	451d                	li	a0,7
--     7c2:	38c000ef          	jal	b4e <exit>
--     7c6:	8b3e                	mv	s6,a5
-+     7b2:	451d                	li	a0,7
-+     7b4:	386000ef          	jal	b3a <exit>
-+      if(st1 != 0 || st2 != 0 || strcmp(buf, "hi\n") != 0){
-+     7b8:	8b3e                	mv	s6,a5
-         printf("grind: exec pipeline failed %d %d \"%s\"\n", st1, st2, buf);
--     7c8:	f8040693          	addi	a3,s0,-128
--     7cc:	865e                	mv	a2,s7
--     7ce:	85da                	mv	a1,s6
--     7d0:	00001517          	auipc	a0,0x1
--     7d4:	c3050513          	addi	a0,a0,-976 # 1400 <malloc+0x3e6>
--     7d8:	78e000ef          	jal	f66 <printf>
-+     7ba:	f8040693          	add	a3,s0,-128
-+     7be:	865e                	mv	a2,s7
-+     7c0:	85da                	mv	a1,s6
-+     7c2:	00001517          	auipc	a0,0x1
-+     7c6:	bee50513          	add	a0,a0,-1042 # 13b0 <malloc+0x3a8>
-+     7ca:	78a000ef          	jal	f54 <printf>
-         exit(1);
--     7dc:	4505                	li	a0,1
--     7de:	370000ef          	jal	b4e <exit>
-+     7ce:	4505                	li	a0,1
-+     7d0:	36a000ef          	jal	b3a <exit>
- 
--00000000000007e2 <iter>:
-+00000000000007d4 <iter>:
-   }
- }
- 
- void
- iter()
- {
--     7e2:	7179                	addi	sp,sp,-48
--     7e4:	f406                	sd	ra,40(sp)
--     7e6:	f022                	sd	s0,32(sp)
--     7e8:	1800                	addi	s0,sp,48
-+     7d4:	7179                	add	sp,sp,-48
-+     7d6:	f406                	sd	ra,40(sp)
-+     7d8:	f022                	sd	s0,32(sp)
-+     7da:	ec26                	sd	s1,24(sp)
-+     7dc:	e84a                	sd	s2,16(sp)
-+     7de:	1800                	add	s0,sp,48
-   unlink("a");
--     7ea:	00001517          	auipc	a0,0x1
--     7ee:	a5e50513          	addi	a0,a0,-1442 # 1248 <malloc+0x22e>
--     7f2:	3ac000ef          	jal	b9e <unlink>
-+     7e0:	00001517          	auipc	a0,0x1
-+     7e4:	9f050513          	add	a0,a0,-1552 # 11d0 <malloc+0x1c8>
-+     7e8:	3a2000ef          	jal	b8a <unlink>
-   unlink("b");
--     7f6:	00001517          	auipc	a0,0x1
--     7fa:	a0250513          	addi	a0,a0,-1534 # 11f8 <malloc+0x1de>
--     7fe:	3a0000ef          	jal	b9e <unlink>
-+     7ec:	00001517          	auipc	a0,0x1
-+     7f0:	99450513          	add	a0,a0,-1644 # 1180 <malloc+0x178>
-+     7f4:	396000ef          	jal	b8a <unlink>
-   
-   int pid1 = fork();
--     802:	344000ef          	jal	b46 <fork>
-+     7f8:	33a000ef          	jal	b32 <fork>
-   if(pid1 < 0){
--     806:	02054163          	bltz	a0,828 <iter+0x46>
--     80a:	ec26                	sd	s1,24(sp)
--     80c:	84aa                	mv	s1,a0
-+     7fc:	00054f63          	bltz	a0,81a <iter+0x46>
-+     800:	84aa                	mv	s1,a0
-     printf("grind: fork failed\n");
-     exit(1);
-   }
-   if(pid1 == 0){
--     80e:	e905                	bnez	a0,83e <iter+0x5c>
--     810:	e84a                	sd	s2,16(sp)
-+     802:	e50d                	bnez	a0,82c <iter+0x58>
-     rand_next ^= 31;
--     812:	00001717          	auipc	a4,0x1
--     816:	7ee70713          	addi	a4,a4,2030 # 2000 <rand_next>
--     81a:	631c                	ld	a5,0(a4)
--     81c:	01f7c793          	xori	a5,a5,31
--     820:	e31c                	sd	a5,0(a4)
-+     804:	00001717          	auipc	a4,0x1
-+     808:	7fc70713          	add	a4,a4,2044 # 2000 <rand_next>
-+     80c:	631c                	ld	a5,0(a4)
-+     80e:	01f7c793          	xor	a5,a5,31
-+     812:	e31c                	sd	a5,0(a4)
-     go(0);
--     822:	4501                	li	a0,0
--     824:	851ff0ef          	jal	74 <go>
--     828:	ec26                	sd	s1,24(sp)
--     82a:	e84a                	sd	s2,16(sp)
-+     814:	4501                	li	a0,0
-+     816:	85fff0ef          	jal	74 <go>
-     printf("grind: fork failed\n");
--     82c:	00001517          	auipc	a0,0x1
--     830:	a0450513          	addi	a0,a0,-1532 # 1230 <malloc+0x216>
--     834:	732000ef          	jal	f66 <printf>
-+     81a:	00001517          	auipc	a0,0x1
-+     81e:	9d650513          	add	a0,a0,-1578 # 11f0 <malloc+0x1e8>
-+     822:	732000ef          	jal	f54 <printf>
-     exit(1);
--     838:	4505                	li	a0,1
--     83a:	314000ef          	jal	b4e <exit>
--     83e:	e84a                	sd	s2,16(sp)
-+     826:	4505                	li	a0,1
-+     828:	312000ef          	jal	b3a <exit>
-     exit(0);
-   }
- 
-   int pid2 = fork();
--     840:	306000ef          	jal	b46 <fork>
--     844:	892a                	mv	s2,a0
-+     82c:	306000ef          	jal	b32 <fork>
-+     830:	892a                	mv	s2,a0
-   if(pid2 < 0){
--     846:	02054063          	bltz	a0,866 <iter+0x84>
-+     832:	02054063          	bltz	a0,852 <iter+0x7e>
-     printf("grind: fork failed\n");
-     exit(1);
-   }
-   if(pid2 == 0){
--     84a:	e51d                	bnez	a0,878 <iter+0x96>
-+     836:	e51d                	bnez	a0,864 <iter+0x90>
-     rand_next ^= 7177;
--     84c:	00001697          	auipc	a3,0x1
--     850:	7b468693          	addi	a3,a3,1972 # 2000 <rand_next>
--     854:	629c                	ld	a5,0(a3)
--     856:	6709                	lui	a4,0x2
--     858:	c0970713          	addi	a4,a4,-1015 # 1c09 <digits+0x779>
--     85c:	8fb9                	xor	a5,a5,a4
--     85e:	e29c                	sd	a5,0(a3)
-+     838:	00001697          	auipc	a3,0x1
-+     83c:	7c868693          	add	a3,a3,1992 # 2000 <rand_next>
-+     840:	629c                	ld	a5,0(a3)
-+     842:	6709                	lui	a4,0x2
-+     844:	c0970713          	add	a4,a4,-1015 # 1c09 <digits+0x7c9>
-+     848:	8fb9                	xor	a5,a5,a4
-+     84a:	e29c                	sd	a5,0(a3)
-     go(1);
--     860:	4505                	li	a0,1
--     862:	813ff0ef          	jal	74 <go>
-+     84c:	4505                	li	a0,1
-+     84e:	827ff0ef          	jal	74 <go>
-     printf("grind: fork failed\n");
--     866:	00001517          	auipc	a0,0x1
--     86a:	9ca50513          	addi	a0,a0,-1590 # 1230 <malloc+0x216>
--     86e:	6f8000ef          	jal	f66 <printf>
-+     852:	00001517          	auipc	a0,0x1
-+     856:	99e50513          	add	a0,a0,-1634 # 11f0 <malloc+0x1e8>
-+     85a:	6fa000ef          	jal	f54 <printf>
-     exit(1);
--     872:	4505                	li	a0,1
--     874:	2da000ef          	jal	b4e <exit>
-+     85e:	4505                	li	a0,1
-+     860:	2da000ef          	jal	b3a <exit>
-     exit(0);
-   }
- 
-   int st1 = -1;
--     878:	57fd                	li	a5,-1
--     87a:	fcf42e23          	sw	a5,-36(s0)
-+     864:	57fd                	li	a5,-1
-+     866:	fcf42e23          	sw	a5,-36(s0)
-   wait(&st1);
--     87e:	fdc40513          	addi	a0,s0,-36
--     882:	2d4000ef          	jal	b56 <wait>
-+     86a:	fdc40513          	add	a0,s0,-36
-+     86e:	2d4000ef          	jal	b42 <wait>
-   if(st1 != 0){
--     886:	fdc42783          	lw	a5,-36(s0)
--     88a:	eb99                	bnez	a5,8a0 <iter+0xbe>
-+     872:	fdc42783          	lw	a5,-36(s0)
-+     876:	eb99                	bnez	a5,88c <iter+0xb8>
-     kill(pid1);
-     kill(pid2);
-   }
-   int st2 = -1;
--     88c:	57fd                	li	a5,-1
--     88e:	fcf42c23          	sw	a5,-40(s0)
-+     878:	57fd                	li	a5,-1
-+     87a:	fcf42c23          	sw	a5,-40(s0)
-   wait(&st2);
--     892:	fd840513          	addi	a0,s0,-40
--     896:	2c0000ef          	jal	b56 <wait>
-+     87e:	fd840513          	add	a0,s0,-40
-+     882:	2c0000ef          	jal	b42 <wait>
- 
-   exit(0);
--     89a:	4501                	li	a0,0
--     89c:	2b2000ef          	jal	b4e <exit>
-+     886:	4501                	li	a0,0
-+     888:	2b2000ef          	jal	b3a <exit>
-     kill(pid1);
--     8a0:	8526                	mv	a0,s1
--     8a2:	2dc000ef          	jal	b7e <kill>
-+     88c:	8526                	mv	a0,s1
-+     88e:	2dc000ef          	jal	b6a <kill>
-     kill(pid2);
--     8a6:	854a                	mv	a0,s2
--     8a8:	2d6000ef          	jal	b7e <kill>
--     8ac:	b7c5                	j	88c <iter+0xaa>
-+     892:	854a                	mv	a0,s2
-+     894:	2d6000ef          	jal	b6a <kill>
-+     898:	b7c5                	j	878 <iter+0xa4>
- 
--00000000000008ae <main>:
-+000000000000089a <main>:
- }
- 
- int
- main()
- {
--     8ae:	1101                	addi	sp,sp,-32
--     8b0:	ec06                	sd	ra,24(sp)
--     8b2:	e822                	sd	s0,16(sp)
--     8b4:	e426                	sd	s1,8(sp)
--     8b6:	1000                	addi	s0,sp,32
-+     89a:	1101                	add	sp,sp,-32
-+     89c:	ec06                	sd	ra,24(sp)
-+     89e:	e822                	sd	s0,16(sp)
-+     8a0:	e426                	sd	s1,8(sp)
-+     8a2:	1000                	add	s0,sp,32
-     }
-     if(pid > 0){
-       wait(0);
-     }
-     sleep(20);
-     rand_next += 1;
--     8b8:	00001497          	auipc	s1,0x1
--     8bc:	74848493          	addi	s1,s1,1864 # 2000 <rand_next>
--     8c0:	a809                	j	8d2 <main+0x24>
-+     8a4:	00001497          	auipc	s1,0x1
-+     8a8:	75c48493          	add	s1,s1,1884 # 2000 <rand_next>
-+     8ac:	a809                	j	8be <main+0x24>
-       iter();
--     8c2:	f21ff0ef          	jal	7e2 <iter>
-+     8ae:	f27ff0ef          	jal	7d4 <iter>
-     sleep(20);
--     8c6:	4551                	li	a0,20
--     8c8:	316000ef          	jal	bde <sleep>
-+     8b2:	4551                	li	a0,20
-+     8b4:	316000ef          	jal	bca <sleep>
-     rand_next += 1;
--     8cc:	609c                	ld	a5,0(s1)
--     8ce:	0785                	addi	a5,a5,1
--     8d0:	e09c                	sd	a5,0(s1)
-+     8b8:	609c                	ld	a5,0(s1)
-+     8ba:	0785                	add	a5,a5,1
-+     8bc:	e09c                	sd	a5,0(s1)
-     int pid = fork();
--     8d2:	274000ef          	jal	b46 <fork>
-+     8be:	274000ef          	jal	b32 <fork>
-     if(pid == 0){
--     8d6:	d575                	beqz	a0,8c2 <main+0x14>
-+     8c2:	d575                	beqz	a0,8ae <main+0x14>
-     if(pid > 0){
--     8d8:	fea057e3          	blez	a0,8c6 <main+0x18>
-+     8c4:	fea057e3          	blez	a0,8b2 <main+0x18>
-       wait(0);
--     8dc:	4501                	li	a0,0
--     8de:	278000ef          	jal	b56 <wait>
--     8e2:	b7d5                	j	8c6 <main+0x18>
-+     8c8:	4501                	li	a0,0
-+     8ca:	278000ef          	jal	b42 <wait>
-+     8ce:	b7d5                	j	8b2 <main+0x18>
- 
--00000000000008e4 <start>:
-+00000000000008d0 <start>:
- /* */
- /* wrapper so that it's OK if main() does not call exit(). */
- /* */
- void
- start()
- {
--     8e4:	1141                	addi	sp,sp,-16
--     8e6:	e406                	sd	ra,8(sp)
--     8e8:	e022                	sd	s0,0(sp)
--     8ea:	0800                	addi	s0,sp,16
-+     8d0:	1141                	add	sp,sp,-16
-+     8d2:	e406                	sd	ra,8(sp)
-+     8d4:	e022                	sd	s0,0(sp)
-+     8d6:	0800                	add	s0,sp,16
-   extern int main();
-   main();
--     8ec:	fc3ff0ef          	jal	8ae <main>
-+     8d8:	fc3ff0ef          	jal	89a <main>
-   exit(0);
--     8f0:	4501                	li	a0,0
--     8f2:	25c000ef          	jal	b4e <exit>
-+     8dc:	4501                	li	a0,0
-+     8de:	25c000ef          	jal	b3a <exit>
- 
--00000000000008f6 <strcpy>:
-+00000000000008e2 <strcpy>:
- }
- 
- char*
- strcpy(char *s, const char *t)
- {
--     8f6:	1141                	addi	sp,sp,-16
--     8f8:	e422                	sd	s0,8(sp)
--     8fa:	0800                	addi	s0,sp,16
-+     8e2:	1141                	add	sp,sp,-16
-+     8e4:	e422                	sd	s0,8(sp)
-+     8e6:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
--     8fc:	87aa                	mv	a5,a0
--     8fe:	0585                	addi	a1,a1,1
--     900:	0785                	addi	a5,a5,1
--     902:	fff5c703          	lbu	a4,-1(a1)
--     906:	fee78fa3          	sb	a4,-1(a5)
--     90a:	fb75                	bnez	a4,8fe <strcpy+0x8>
-+     8e8:	87aa                	mv	a5,a0
-+     8ea:	0585                	add	a1,a1,1
-+     8ec:	0785                	add	a5,a5,1
-+     8ee:	fff5c703          	lbu	a4,-1(a1)
-+     8f2:	fee78fa3          	sb	a4,-1(a5)
-+     8f6:	fb75                	bnez	a4,8ea <strcpy+0x8>
-     ;
-   return os;
- }
--     90c:	6422                	ld	s0,8(sp)
--     90e:	0141                	addi	sp,sp,16
--     910:	8082                	ret
-+     8f8:	6422                	ld	s0,8(sp)
-+     8fa:	0141                	add	sp,sp,16
-+     8fc:	8082                	ret
- 
--0000000000000912 <strcmp>:
-+00000000000008fe <strcmp>:
- 
- int
- strcmp(const char *p, const char *q)
- {
--     912:	1141                	addi	sp,sp,-16
--     914:	e422                	sd	s0,8(sp)
--     916:	0800                	addi	s0,sp,16
-+     8fe:	1141                	add	sp,sp,-16
-+     900:	e422                	sd	s0,8(sp)
-+     902:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
--     918:	00054783          	lbu	a5,0(a0)
--     91c:	cb91                	beqz	a5,930 <strcmp+0x1e>
--     91e:	0005c703          	lbu	a4,0(a1)
--     922:	00f71763          	bne	a4,a5,930 <strcmp+0x1e>
-+     904:	00054783          	lbu	a5,0(a0)
-+     908:	cb91                	beqz	a5,91c <strcmp+0x1e>
-+     90a:	0005c703          	lbu	a4,0(a1)
-+     90e:	00f71763          	bne	a4,a5,91c <strcmp+0x1e>
-     p++, q++;
--     926:	0505                	addi	a0,a0,1
--     928:	0585                	addi	a1,a1,1
-+     912:	0505                	add	a0,a0,1
-+     914:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
--     92a:	00054783          	lbu	a5,0(a0)
--     92e:	fbe5                	bnez	a5,91e <strcmp+0xc>
-+     916:	00054783          	lbu	a5,0(a0)
-+     91a:	fbe5                	bnez	a5,90a <strcmp+0xc>
-   return (uchar)*p - (uchar)*q;
--     930:	0005c503          	lbu	a0,0(a1)
-+     91c:	0005c503          	lbu	a0,0(a1)
- }
--     934:	40a7853b          	subw	a0,a5,a0
--     938:	6422                	ld	s0,8(sp)
--     93a:	0141                	addi	sp,sp,16
--     93c:	8082                	ret
-+     920:	40a7853b          	subw	a0,a5,a0
-+     924:	6422                	ld	s0,8(sp)
-+     926:	0141                	add	sp,sp,16
-+     928:	8082                	ret
- 
--000000000000093e <strlen>:
-+000000000000092a <strlen>:
- 
- uint
- strlen(const char *s)
- {
--     93e:	1141                	addi	sp,sp,-16
--     940:	e422                	sd	s0,8(sp)
--     942:	0800                	addi	s0,sp,16
-+     92a:	1141                	add	sp,sp,-16
-+     92c:	e422                	sd	s0,8(sp)
-+     92e:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
--     944:	00054783          	lbu	a5,0(a0)
--     948:	cf91                	beqz	a5,964 <strlen+0x26>
--     94a:	0505                	addi	a0,a0,1
--     94c:	87aa                	mv	a5,a0
--     94e:	86be                	mv	a3,a5
--     950:	0785                	addi	a5,a5,1
--     952:	fff7c703          	lbu	a4,-1(a5)
--     956:	ff65                	bnez	a4,94e <strlen+0x10>
--     958:	40a6853b          	subw	a0,a3,a0
--     95c:	2505                	addiw	a0,a0,1
-+     930:	00054783          	lbu	a5,0(a0)
-+     934:	cf91                	beqz	a5,950 <strlen+0x26>
-+     936:	0505                	add	a0,a0,1
-+     938:	87aa                	mv	a5,a0
-+     93a:	86be                	mv	a3,a5
-+     93c:	0785                	add	a5,a5,1
-+     93e:	fff7c703          	lbu	a4,-1(a5)
-+     942:	ff65                	bnez	a4,93a <strlen+0x10>
-+     944:	40a6853b          	subw	a0,a3,a0
-+     948:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
--     95e:	6422                	ld	s0,8(sp)
--     960:	0141                	addi	sp,sp,16
--     962:	8082                	ret
-+     94a:	6422                	ld	s0,8(sp)
-+     94c:	0141                	add	sp,sp,16
-+     94e:	8082                	ret
-   for(n = 0; s[n]; n++)
--     964:	4501                	li	a0,0
--     966:	bfe5                	j	95e <strlen+0x20>
-+     950:	4501                	li	a0,0
-+     952:	bfe5                	j	94a <strlen+0x20>
- 
--0000000000000968 <memset>:
-+0000000000000954 <memset>:
- 
- void*
- memset(void *dst, int c, uint n)
- {
--     968:	1141                	addi	sp,sp,-16
--     96a:	e422                	sd	s0,8(sp)
--     96c:	0800                	addi	s0,sp,16
-+     954:	1141                	add	sp,sp,-16
-+     956:	e422                	sd	s0,8(sp)
-+     958:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
--     96e:	ca19                	beqz	a2,984 <memset+0x1c>
--     970:	87aa                	mv	a5,a0
--     972:	1602                	slli	a2,a2,0x20
--     974:	9201                	srli	a2,a2,0x20
--     976:	00a60733          	add	a4,a2,a0
-+     95a:	ca19                	beqz	a2,970 <memset+0x1c>
-+     95c:	87aa                	mv	a5,a0
-+     95e:	1602                	sll	a2,a2,0x20
-+     960:	9201                	srl	a2,a2,0x20
-+     962:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
--     97a:	00b78023          	sb	a1,0(a5)
-+     966:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
--     97e:	0785                	addi	a5,a5,1
--     980:	fee79de3          	bne	a5,a4,97a <memset+0x12>
-+     96a:	0785                	add	a5,a5,1
-+     96c:	fee79de3          	bne	a5,a4,966 <memset+0x12>
-   }
-   return dst;
- }
--     984:	6422                	ld	s0,8(sp)
--     986:	0141                	addi	sp,sp,16
--     988:	8082                	ret
-+     970:	6422                	ld	s0,8(sp)
-+     972:	0141                	add	sp,sp,16
-+     974:	8082                	ret
- 
--000000000000098a <strchr>:
-+0000000000000976 <strchr>:
- 
- char*
- strchr(const char *s, char c)
- {
--     98a:	1141                	addi	sp,sp,-16
--     98c:	e422                	sd	s0,8(sp)
--     98e:	0800                	addi	s0,sp,16
-+     976:	1141                	add	sp,sp,-16
-+     978:	e422                	sd	s0,8(sp)
-+     97a:	0800                	add	s0,sp,16
-   for(; *s; s++)
--     990:	00054783          	lbu	a5,0(a0)
--     994:	cb99                	beqz	a5,9aa <strchr+0x20>
-+     97c:	00054783          	lbu	a5,0(a0)
-+     980:	cb99                	beqz	a5,996 <strchr+0x20>
-     if(*s == c)
--     996:	00f58763          	beq	a1,a5,9a4 <strchr+0x1a>
-+     982:	00f58763          	beq	a1,a5,990 <strchr+0x1a>
-   for(; *s; s++)
--     99a:	0505                	addi	a0,a0,1
--     99c:	00054783          	lbu	a5,0(a0)
--     9a0:	fbfd                	bnez	a5,996 <strchr+0xc>
-+     986:	0505                	add	a0,a0,1
-+     988:	00054783          	lbu	a5,0(a0)
-+     98c:	fbfd                	bnez	a5,982 <strchr+0xc>
-       return (char*)s;
-   return 0;
--     9a2:	4501                	li	a0,0
-+     98e:	4501                	li	a0,0
- }
--     9a4:	6422                	ld	s0,8(sp)
--     9a6:	0141                	addi	sp,sp,16
--     9a8:	8082                	ret
-+     990:	6422                	ld	s0,8(sp)
-+     992:	0141                	add	sp,sp,16
-+     994:	8082                	ret
-   return 0;
--     9aa:	4501                	li	a0,0
--     9ac:	bfe5                	j	9a4 <strchr+0x1a>
-+     996:	4501                	li	a0,0
-+     998:	bfe5                	j	990 <strchr+0x1a>
- 
--00000000000009ae <gets>:
-+000000000000099a <gets>:
- 
- char*
- gets(char *buf, int max)
- {
--     9ae:	711d                	addi	sp,sp,-96
--     9b0:	ec86                	sd	ra,88(sp)
--     9b2:	e8a2                	sd	s0,80(sp)
--     9b4:	e4a6                	sd	s1,72(sp)
--     9b6:	e0ca                	sd	s2,64(sp)
--     9b8:	fc4e                	sd	s3,56(sp)
--     9ba:	f852                	sd	s4,48(sp)
--     9bc:	f456                	sd	s5,40(sp)
--     9be:	f05a                	sd	s6,32(sp)
--     9c0:	ec5e                	sd	s7,24(sp)
--     9c2:	1080                	addi	s0,sp,96
--     9c4:	8baa                	mv	s7,a0
--     9c6:	8a2e                	mv	s4,a1
-+     99a:	711d                	add	sp,sp,-96
-+     99c:	ec86                	sd	ra,88(sp)
-+     99e:	e8a2                	sd	s0,80(sp)
-+     9a0:	e4a6                	sd	s1,72(sp)
-+     9a2:	e0ca                	sd	s2,64(sp)
-+     9a4:	fc4e                	sd	s3,56(sp)
-+     9a6:	f852                	sd	s4,48(sp)
-+     9a8:	f456                	sd	s5,40(sp)
-+     9aa:	f05a                	sd	s6,32(sp)
-+     9ac:	ec5e                	sd	s7,24(sp)
-+     9ae:	1080                	add	s0,sp,96
-+     9b0:	8baa                	mv	s7,a0
-+     9b2:	8a2e                	mv	s4,a1
-   int i, cc;
-   char c;
- 
-   for(i=0; i+1 < max; ){
--     9c8:	892a                	mv	s2,a0
--     9ca:	4481                	li	s1,0
-+     9b4:	892a                	mv	s2,a0
-+     9b6:	4481                	li	s1,0
-     cc = read(0, &c, 1);
-     if(cc < 1)
-       break;
-     buf[i++] = c;
-     if(c == '\n' || c == '\r')
--     9cc:	4aa9                	li	s5,10
--     9ce:	4b35                	li	s6,13
-+     9b8:	4aa9                	li	s5,10
-+     9ba:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
--     9d0:	89a6                	mv	s3,s1
--     9d2:	2485                	addiw	s1,s1,1
--     9d4:	0344d663          	bge	s1,s4,a00 <gets+0x52>
-+     9bc:	89a6                	mv	s3,s1
-+     9be:	2485                	addw	s1,s1,1
-+     9c0:	0344d663          	bge	s1,s4,9ec <gets+0x52>
-     cc = read(0, &c, 1);
--     9d8:	4605                	li	a2,1
--     9da:	faf40593          	addi	a1,s0,-81
--     9de:	4501                	li	a0,0
--     9e0:	186000ef          	jal	b66 <read>
-+     9c4:	4605                	li	a2,1
-+     9c6:	faf40593          	add	a1,s0,-81
-+     9ca:	4501                	li	a0,0
-+     9cc:	186000ef          	jal	b52 <read>
-     if(cc < 1)
--     9e4:	00a05e63          	blez	a0,a00 <gets+0x52>
-+     9d0:	00a05e63          	blez	a0,9ec <gets+0x52>
-     buf[i++] = c;
--     9e8:	faf44783          	lbu	a5,-81(s0)
--     9ec:	00f90023          	sb	a5,0(s2)
-+     9d4:	faf44783          	lbu	a5,-81(s0)
-+     9d8:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
--     9f0:	01578763          	beq	a5,s5,9fe <gets+0x50>
--     9f4:	0905                	addi	s2,s2,1
--     9f6:	fd679de3          	bne	a5,s6,9d0 <gets+0x22>
--    buf[i++] = c;
--     9fa:	89a6                	mv	s3,s1
--     9fc:	a011                	j	a00 <gets+0x52>
--     9fe:	89a6                	mv	s3,s1
-+     9dc:	01578763          	beq	a5,s5,9ea <gets+0x50>
-+     9e0:	0905                	add	s2,s2,1
-+     9e2:	fd679de3          	bne	a5,s6,9bc <gets+0x22>
-+  for(i=0; i+1 < max; ){
-+     9e6:	89a6                	mv	s3,s1
-+     9e8:	a011                	j	9ec <gets+0x52>
-+     9ea:	89a6                	mv	s3,s1
-       break;
-   }
-   buf[i] = '\0';
--     a00:	99de                	add	s3,s3,s7
--     a02:	00098023          	sb	zero,0(s3)
-+     9ec:	99de                	add	s3,s3,s7
-+     9ee:	00098023          	sb	zero,0(s3)
-   return buf;
- }
--     a06:	855e                	mv	a0,s7
--     a08:	60e6                	ld	ra,88(sp)
--     a0a:	6446                	ld	s0,80(sp)
--     a0c:	64a6                	ld	s1,72(sp)
--     a0e:	6906                	ld	s2,64(sp)
--     a10:	79e2                	ld	s3,56(sp)
--     a12:	7a42                	ld	s4,48(sp)
--     a14:	7aa2                	ld	s5,40(sp)
--     a16:	7b02                	ld	s6,32(sp)
--     a18:	6be2                	ld	s7,24(sp)
--     a1a:	6125                	addi	sp,sp,96
--     a1c:	8082                	ret
--
--0000000000000a1e <stat>:
-+     9f2:	855e                	mv	a0,s7
-+     9f4:	60e6                	ld	ra,88(sp)
-+     9f6:	6446                	ld	s0,80(sp)
-+     9f8:	64a6                	ld	s1,72(sp)
-+     9fa:	6906                	ld	s2,64(sp)
-+     9fc:	79e2                	ld	s3,56(sp)
-+     9fe:	7a42                	ld	s4,48(sp)
-+     a00:	7aa2                	ld	s5,40(sp)
-+     a02:	7b02                	ld	s6,32(sp)
-+     a04:	6be2                	ld	s7,24(sp)
-+     a06:	6125                	add	sp,sp,96
-+     a08:	8082                	ret
-+
-+0000000000000a0a <stat>:
- 
- int
- stat(const char *n, struct stat *st)
- {
--     a1e:	1101                	addi	sp,sp,-32
--     a20:	ec06                	sd	ra,24(sp)
--     a22:	e822                	sd	s0,16(sp)
--     a24:	e04a                	sd	s2,0(sp)
--     a26:	1000                	addi	s0,sp,32
--     a28:	892e                	mv	s2,a1
-+     a0a:	1101                	add	sp,sp,-32
-+     a0c:	ec06                	sd	ra,24(sp)
-+     a0e:	e822                	sd	s0,16(sp)
-+     a10:	e426                	sd	s1,8(sp)
-+     a12:	e04a                	sd	s2,0(sp)
-+     a14:	1000                	add	s0,sp,32
-+     a16:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
--     a2a:	4581                	li	a1,0
--     a2c:	162000ef          	jal	b8e <open>
-+     a18:	4581                	li	a1,0
-+     a1a:	160000ef          	jal	b7a <open>
-   if(fd < 0)
--     a30:	02054263          	bltz	a0,a54 <stat+0x36>
--     a34:	e426                	sd	s1,8(sp)
--     a36:	84aa                	mv	s1,a0
-+     a1e:	02054163          	bltz	a0,a40 <stat+0x36>
-+     a22:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
--     a38:	85ca                	mv	a1,s2
--     a3a:	16c000ef          	jal	ba6 <fstat>
--     a3e:	892a                	mv	s2,a0
-+     a24:	85ca                	mv	a1,s2
-+     a26:	16c000ef          	jal	b92 <fstat>
-+     a2a:	892a                	mv	s2,a0
-   close(fd);
--     a40:	8526                	mv	a0,s1
--     a42:	134000ef          	jal	b76 <close>
-+     a2c:	8526                	mv	a0,s1
-+     a2e:	134000ef          	jal	b62 <close>
-   return r;
--     a46:	64a2                	ld	s1,8(sp)
- }
--     a48:	854a                	mv	a0,s2
--     a4a:	60e2                	ld	ra,24(sp)
--     a4c:	6442                	ld	s0,16(sp)
--     a4e:	6902                	ld	s2,0(sp)
--     a50:	6105                	addi	sp,sp,32
--     a52:	8082                	ret
-+     a32:	854a                	mv	a0,s2
-+     a34:	60e2                	ld	ra,24(sp)
-+     a36:	6442                	ld	s0,16(sp)
-+     a38:	64a2                	ld	s1,8(sp)
-+     a3a:	6902                	ld	s2,0(sp)
-+     a3c:	6105                	add	sp,sp,32
-+     a3e:	8082                	ret
-     return -1;
--     a54:	597d                	li	s2,-1
--     a56:	bfcd                	j	a48 <stat+0x2a>
-+     a40:	597d                	li	s2,-1
-+     a42:	bfc5                	j	a32 <stat+0x28>
- 
--0000000000000a58 <atoi>:
-+0000000000000a44 <atoi>:
- 
- int
- atoi(const char *s)
- {
--     a58:	1141                	addi	sp,sp,-16
--     a5a:	e422                	sd	s0,8(sp)
--     a5c:	0800                	addi	s0,sp,16
-+     a44:	1141                	add	sp,sp,-16
-+     a46:	e422                	sd	s0,8(sp)
-+     a48:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
--     a5e:	00054683          	lbu	a3,0(a0)
--     a62:	fd06879b          	addiw	a5,a3,-48
--     a66:	0ff7f793          	zext.b	a5,a5
--     a6a:	4625                	li	a2,9
--     a6c:	02f66863          	bltu	a2,a5,a9c <atoi+0x44>
--     a70:	872a                	mv	a4,a0
-+     a4a:	00054683          	lbu	a3,0(a0)
-+     a4e:	fd06879b          	addw	a5,a3,-48
-+     a52:	0ff7f793          	zext.b	a5,a5
-+     a56:	4625                	li	a2,9
-+     a58:	02f66863          	bltu	a2,a5,a88 <atoi+0x44>
-+     a5c:	872a                	mv	a4,a0
-   n = 0;
--     a72:	4501                	li	a0,0
-+     a5e:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
--     a74:	0705                	addi	a4,a4,1
--     a76:	0025179b          	slliw	a5,a0,0x2
--     a7a:	9fa9                	addw	a5,a5,a0
--     a7c:	0017979b          	slliw	a5,a5,0x1
--     a80:	9fb5                	addw	a5,a5,a3
--     a82:	fd07851b          	addiw	a0,a5,-48
-+     a60:	0705                	add	a4,a4,1
-+     a62:	0025179b          	sllw	a5,a0,0x2
-+     a66:	9fa9                	addw	a5,a5,a0
-+     a68:	0017979b          	sllw	a5,a5,0x1
-+     a6c:	9fb5                	addw	a5,a5,a3
-+     a6e:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
--     a86:	00074683          	lbu	a3,0(a4)
--     a8a:	fd06879b          	addiw	a5,a3,-48
--     a8e:	0ff7f793          	zext.b	a5,a5
--     a92:	fef671e3          	bgeu	a2,a5,a74 <atoi+0x1c>
-+     a72:	00074683          	lbu	a3,0(a4)
-+     a76:	fd06879b          	addw	a5,a3,-48
-+     a7a:	0ff7f793          	zext.b	a5,a5
-+     a7e:	fef671e3          	bgeu	a2,a5,a60 <atoi+0x1c>
-   return n;
- }
--     a96:	6422                	ld	s0,8(sp)
--     a98:	0141                	addi	sp,sp,16
--     a9a:	8082                	ret
-+     a82:	6422                	ld	s0,8(sp)
-+     a84:	0141                	add	sp,sp,16
-+     a86:	8082                	ret
-   n = 0;
--     a9c:	4501                	li	a0,0
--     a9e:	bfe5                	j	a96 <atoi+0x3e>
-+     a88:	4501                	li	a0,0
-+     a8a:	bfe5                	j	a82 <atoi+0x3e>
- 
--0000000000000aa0 <memmove>:
-+0000000000000a8c <memmove>:
- 
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
--     aa0:	1141                	addi	sp,sp,-16
--     aa2:	e422                	sd	s0,8(sp)
--     aa4:	0800                	addi	s0,sp,16
-+     a8c:	1141                	add	sp,sp,-16
-+     a8e:	e422                	sd	s0,8(sp)
-+     a90:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-   dst = vdst;
-   src = vsrc;
-   if (src > dst) {
--     aa6:	02b57463          	bgeu	a0,a1,ace <memmove+0x2e>
-+     a92:	02b57463          	bgeu	a0,a1,aba <memmove+0x2e>
-     while(n-- > 0)
--     aaa:	00c05f63          	blez	a2,ac8 <memmove+0x28>
--     aae:	1602                	slli	a2,a2,0x20
--     ab0:	9201                	srli	a2,a2,0x20
--     ab2:	00c507b3          	add	a5,a0,a2
-+     a96:	00c05f63          	blez	a2,ab4 <memmove+0x28>
-+     a9a:	1602                	sll	a2,a2,0x20
-+     a9c:	9201                	srl	a2,a2,0x20
-+     a9e:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
--     ab6:	872a                	mv	a4,a0
-+     aa2:	872a                	mv	a4,a0
-       *dst++ = *src++;
--     ab8:	0585                	addi	a1,a1,1
--     aba:	0705                	addi	a4,a4,1
--     abc:	fff5c683          	lbu	a3,-1(a1)
--     ac0:	fed70fa3          	sb	a3,-1(a4)
-+     aa4:	0585                	add	a1,a1,1
-+     aa6:	0705                	add	a4,a4,1
-+     aa8:	fff5c683          	lbu	a3,-1(a1)
-+     aac:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
--     ac4:	fef71ae3          	bne	a4,a5,ab8 <memmove+0x18>
-+     ab0:	fee79ae3          	bne	a5,a4,aa4 <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-   }
-   return vdst;
- }
--     ac8:	6422                	ld	s0,8(sp)
--     aca:	0141                	addi	sp,sp,16
--     acc:	8082                	ret
-+     ab4:	6422                	ld	s0,8(sp)
-+     ab6:	0141                	add	sp,sp,16
-+     ab8:	8082                	ret
-     dst += n;
--     ace:	00c50733          	add	a4,a0,a2
-+     aba:	00c50733          	add	a4,a0,a2
-     src += n;
--     ad2:	95b2                	add	a1,a1,a2
-+     abe:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
--     ad4:	fec05ae3          	blez	a2,ac8 <memmove+0x28>
--     ad8:	fff6079b          	addiw	a5,a2,-1
--     adc:	1782                	slli	a5,a5,0x20
--     ade:	9381                	srli	a5,a5,0x20
--     ae0:	fff7c793          	not	a5,a5
--     ae4:	97ba                	add	a5,a5,a4
-+     ac0:	fec05ae3          	blez	a2,ab4 <memmove+0x28>
-+     ac4:	fff6079b          	addw	a5,a2,-1
-+     ac8:	1782                	sll	a5,a5,0x20
-+     aca:	9381                	srl	a5,a5,0x20
-+     acc:	fff7c793          	not	a5,a5
-+     ad0:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
--     ae6:	15fd                	addi	a1,a1,-1
--     ae8:	177d                	addi	a4,a4,-1
--     aea:	0005c683          	lbu	a3,0(a1)
--     aee:	00d70023          	sb	a3,0(a4)
-+     ad2:	15fd                	add	a1,a1,-1
-+     ad4:	177d                	add	a4,a4,-1
-+     ad6:	0005c683          	lbu	a3,0(a1)
-+     ada:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
--     af2:	fee79ae3          	bne	a5,a4,ae6 <memmove+0x46>
--     af6:	bfc9                	j	ac8 <memmove+0x28>
-+     ade:	fee79ae3          	bne	a5,a4,ad2 <memmove+0x46>
-+     ae2:	bfc9                	j	ab4 <memmove+0x28>
- 
--0000000000000af8 <memcmp>:
-+0000000000000ae4 <memcmp>:
- 
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
--     af8:	1141                	addi	sp,sp,-16
--     afa:	e422                	sd	s0,8(sp)
--     afc:	0800                	addi	s0,sp,16
-+     ae4:	1141                	add	sp,sp,-16
-+     ae6:	e422                	sd	s0,8(sp)
-+     ae8:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
--     afe:	ca05                	beqz	a2,b2e <memcmp+0x36>
--     b00:	fff6069b          	addiw	a3,a2,-1
--     b04:	1682                	slli	a3,a3,0x20
--     b06:	9281                	srli	a3,a3,0x20
--     b08:	0685                	addi	a3,a3,1
--     b0a:	96aa                	add	a3,a3,a0
-+     aea:	ca05                	beqz	a2,b1a <memcmp+0x36>
-+     aec:	fff6069b          	addw	a3,a2,-1
-+     af0:	1682                	sll	a3,a3,0x20
-+     af2:	9281                	srl	a3,a3,0x20
-+     af4:	0685                	add	a3,a3,1
-+     af6:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
--     b0c:	00054783          	lbu	a5,0(a0)
--     b10:	0005c703          	lbu	a4,0(a1)
--     b14:	00e79863          	bne	a5,a4,b24 <memcmp+0x2c>
-+     af8:	00054783          	lbu	a5,0(a0)
-+     afc:	0005c703          	lbu	a4,0(a1)
-+     b00:	00e79863          	bne	a5,a4,b10 <memcmp+0x2c>
-       return *p1 - *p2;
-     }
-     p1++;
--     b18:	0505                	addi	a0,a0,1
-+     b04:	0505                	add	a0,a0,1
-     p2++;
--     b1a:	0585                	addi	a1,a1,1
-+     b06:	0585                	add	a1,a1,1
-   while (n-- > 0) {
--     b1c:	fed518e3          	bne	a0,a3,b0c <memcmp+0x14>
-+     b08:	fed518e3          	bne	a0,a3,af8 <memcmp+0x14>
-   }
-   return 0;
--     b20:	4501                	li	a0,0
--     b22:	a019                	j	b28 <memcmp+0x30>
-+     b0c:	4501                	li	a0,0
-+     b0e:	a019                	j	b14 <memcmp+0x30>
-       return *p1 - *p2;
--     b24:	40e7853b          	subw	a0,a5,a4
-+     b10:	40e7853b          	subw	a0,a5,a4
- }
--     b28:	6422                	ld	s0,8(sp)
--     b2a:	0141                	addi	sp,sp,16
--     b2c:	8082                	ret
-+     b14:	6422                	ld	s0,8(sp)
-+     b16:	0141                	add	sp,sp,16
-+     b18:	8082                	ret
-   return 0;
--     b2e:	4501                	li	a0,0
--     b30:	bfe5                	j	b28 <memcmp+0x30>
-+     b1a:	4501                	li	a0,0
-+     b1c:	bfe5                	j	b14 <memcmp+0x30>
- 
--0000000000000b32 <memcpy>:
-+0000000000000b1e <memcpy>:
- 
- void *
- memcpy(void *dst, const void *src, uint n)
- {
--     b32:	1141                	addi	sp,sp,-16
--     b34:	e406                	sd	ra,8(sp)
--     b36:	e022                	sd	s0,0(sp)
--     b38:	0800                	addi	s0,sp,16
-+     b1e:	1141                	add	sp,sp,-16
-+     b20:	e406                	sd	ra,8(sp)
-+     b22:	e022                	sd	s0,0(sp)
-+     b24:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
--     b3a:	f67ff0ef          	jal	aa0 <memmove>
-+     b26:	f67ff0ef          	jal	a8c <memmove>
- }
--     b3e:	60a2                	ld	ra,8(sp)
--     b40:	6402                	ld	s0,0(sp)
--     b42:	0141                	addi	sp,sp,16
--     b44:	8082                	ret
-+     b2a:	60a2                	ld	ra,8(sp)
-+     b2c:	6402                	ld	s0,0(sp)
-+     b2e:	0141                	add	sp,sp,16
-+     b30:	8082                	ret
- 
--0000000000000b46 <fork>:
-+0000000000000b32 <fork>:
- # generated by usys.pl - do not edit
- #include "kernel/syscall.h"
- .global fork
- fork:
-  li a7, SYS_fork
--     b46:	4885                	li	a7,1
-+     b32:	4885                	li	a7,1
-  ecall
--     b48:	00000073          	ecall
-+     b34:	00000073          	ecall
-  ret
--     b4c:	8082                	ret
-+     b38:	8082                	ret
- 
--0000000000000b4e <exit>:
-+0000000000000b3a <exit>:
- .global exit
- exit:
-  li a7, SYS_exit
--     b4e:	4889                	li	a7,2
-+     b3a:	4889                	li	a7,2
-  ecall
--     b50:	00000073          	ecall
-+     b3c:	00000073          	ecall
-  ret
--     b54:	8082                	ret
-+     b40:	8082                	ret
- 
--0000000000000b56 <wait>:
-+0000000000000b42 <wait>:
- .global wait
- wait:
-  li a7, SYS_wait
--     b56:	488d                	li	a7,3
-+     b42:	488d                	li	a7,3
-  ecall
--     b58:	00000073          	ecall
-+     b44:	00000073          	ecall
-  ret
--     b5c:	8082                	ret
-+     b48:	8082                	ret
- 
--0000000000000b5e <pipe>:
-+0000000000000b4a <pipe>:
- .global pipe
- pipe:
-  li a7, SYS_pipe
--     b5e:	4891                	li	a7,4
-+     b4a:	4891                	li	a7,4
-  ecall
--     b60:	00000073          	ecall
-+     b4c:	00000073          	ecall
-  ret
--     b64:	8082                	ret
-+     b50:	8082                	ret
- 
--0000000000000b66 <read>:
-+0000000000000b52 <read>:
- .global read
- read:
-  li a7, SYS_read
--     b66:	4895                	li	a7,5
-+     b52:	4895                	li	a7,5
-  ecall
--     b68:	00000073          	ecall
-+     b54:	00000073          	ecall
-  ret
--     b6c:	8082                	ret
-+     b58:	8082                	ret
- 
--0000000000000b6e <write>:
-+0000000000000b5a <write>:
- .global write
- write:
-  li a7, SYS_write
--     b6e:	48c1                	li	a7,16
-+     b5a:	48c1                	li	a7,16
-  ecall
--     b70:	00000073          	ecall
-+     b5c:	00000073          	ecall
-  ret
--     b74:	8082                	ret
-+     b60:	8082                	ret
- 
--0000000000000b76 <close>:
-+0000000000000b62 <close>:
- .global close
- close:
-  li a7, SYS_close
--     b76:	48d5                	li	a7,21
-+     b62:	48d5                	li	a7,21
-  ecall
--     b78:	00000073          	ecall
-+     b64:	00000073          	ecall
-  ret
--     b7c:	8082                	ret
-+     b68:	8082                	ret
- 
--0000000000000b7e <kill>:
-+0000000000000b6a <kill>:
- .global kill
- kill:
-  li a7, SYS_kill
--     b7e:	4899                	li	a7,6
-+     b6a:	4899                	li	a7,6
-  ecall
--     b80:	00000073          	ecall
-+     b6c:	00000073          	ecall
-  ret
--     b84:	8082                	ret
-+     b70:	8082                	ret
- 
--0000000000000b86 <exec>:
-+0000000000000b72 <exec>:
- .global exec
- exec:
-  li a7, SYS_exec
--     b86:	489d                	li	a7,7
-+     b72:	489d                	li	a7,7
-  ecall
--     b88:	00000073          	ecall
-+     b74:	00000073          	ecall
-  ret
--     b8c:	8082                	ret
-+     b78:	8082                	ret
- 
--0000000000000b8e <open>:
-+0000000000000b7a <open>:
- .global open
- open:
-  li a7, SYS_open
--     b8e:	48bd                	li	a7,15
-+     b7a:	48bd                	li	a7,15
-  ecall
--     b90:	00000073          	ecall
-+     b7c:	00000073          	ecall
-  ret
--     b94:	8082                	ret
-+     b80:	8082                	ret
- 
--0000000000000b96 <mknod>:
-+0000000000000b82 <mknod>:
- .global mknod
- mknod:
-  li a7, SYS_mknod
--     b96:	48c5                	li	a7,17
-+     b82:	48c5                	li	a7,17
-  ecall
--     b98:	00000073          	ecall
-+     b84:	00000073          	ecall
-  ret
--     b9c:	8082                	ret
-+     b88:	8082                	ret
- 
--0000000000000b9e <unlink>:
-+0000000000000b8a <unlink>:
- .global unlink
- unlink:
-  li a7, SYS_unlink
--     b9e:	48c9                	li	a7,18
-+     b8a:	48c9                	li	a7,18
-  ecall
--     ba0:	00000073          	ecall
-+     b8c:	00000073          	ecall
-  ret
--     ba4:	8082                	ret
-+     b90:	8082                	ret
- 
--0000000000000ba6 <fstat>:
-+0000000000000b92 <fstat>:
- .global fstat
- fstat:
-  li a7, SYS_fstat
--     ba6:	48a1                	li	a7,8
-+     b92:	48a1                	li	a7,8
-  ecall
--     ba8:	00000073          	ecall
-+     b94:	00000073          	ecall
-  ret
--     bac:	8082                	ret
-+     b98:	8082                	ret
- 
--0000000000000bae <link>:
-+0000000000000b9a <link>:
- .global link
- link:
-  li a7, SYS_link
--     bae:	48cd                	li	a7,19
-+     b9a:	48cd                	li	a7,19
-  ecall
--     bb0:	00000073          	ecall
-+     b9c:	00000073          	ecall
-  ret
--     bb4:	8082                	ret
-+     ba0:	8082                	ret
- 
--0000000000000bb6 <mkdir>:
-+0000000000000ba2 <mkdir>:
- .global mkdir
- mkdir:
-  li a7, SYS_mkdir
--     bb6:	48d1                	li	a7,20
-+     ba2:	48d1                	li	a7,20
-  ecall
--     bb8:	00000073          	ecall
-+     ba4:	00000073          	ecall
-  ret
--     bbc:	8082                	ret
-+     ba8:	8082                	ret
- 
--0000000000000bbe <chdir>:
-+0000000000000baa <chdir>:
- .global chdir
- chdir:
-  li a7, SYS_chdir
--     bbe:	48a5                	li	a7,9
-+     baa:	48a5                	li	a7,9
-  ecall
--     bc0:	00000073          	ecall
-+     bac:	00000073          	ecall
-  ret
--     bc4:	8082                	ret
-+     bb0:	8082                	ret
- 
--0000000000000bc6 <dup>:
-+0000000000000bb2 <dup>:
- .global dup
- dup:
-  li a7, SYS_dup
--     bc6:	48a9                	li	a7,10
-+     bb2:	48a9                	li	a7,10
-  ecall
--     bc8:	00000073          	ecall
-+     bb4:	00000073          	ecall
-  ret
--     bcc:	8082                	ret
-+     bb8:	8082                	ret
- 
--0000000000000bce <getpid>:
-+0000000000000bba <getpid>:
- .global getpid
- getpid:
-  li a7, SYS_getpid
--     bce:	48ad                	li	a7,11
-+     bba:	48ad                	li	a7,11
-  ecall
--     bd0:	00000073          	ecall
-+     bbc:	00000073          	ecall
-  ret
--     bd4:	8082                	ret
-+     bc0:	8082                	ret
- 
--0000000000000bd6 <sbrk>:
-+0000000000000bc2 <sbrk>:
- .global sbrk
- sbrk:
-  li a7, SYS_sbrk
--     bd6:	48b1                	li	a7,12
-+     bc2:	48b1                	li	a7,12
-  ecall
--     bd8:	00000073          	ecall
-+     bc4:	00000073          	ecall
-  ret
--     bdc:	8082                	ret
-+     bc8:	8082                	ret
- 
--0000000000000bde <sleep>:
-+0000000000000bca <sleep>:
- .global sleep
- sleep:
-  li a7, SYS_sleep
--     bde:	48b5                	li	a7,13
-+     bca:	48b5                	li	a7,13
-  ecall
--     be0:	00000073          	ecall
-+     bcc:	00000073          	ecall
-  ret
--     be4:	8082                	ret
-+     bd0:	8082                	ret
- 
--0000000000000be6 <uptime>:
-+0000000000000bd2 <uptime>:
- .global uptime
- uptime:
-  li a7, SYS_uptime
--     be6:	48b9                	li	a7,14
-+     bd2:	48b9                	li	a7,14
-  ecall
--     be8:	00000073          	ecall
-+     bd4:	00000073          	ecall
-  ret
--     bec:	8082                	ret
-+     bd8:	8082                	ret
- 
--0000000000000bee <putc>:
-+0000000000000bda <putc>:
- 
- static char digits[] = "0123456789ABCDEF";
- 
- static void
- putc(int fd, char c)
- {
--     bee:	1101                	addi	sp,sp,-32
--     bf0:	ec06                	sd	ra,24(sp)
--     bf2:	e822                	sd	s0,16(sp)
--     bf4:	1000                	addi	s0,sp,32
--     bf6:	feb407a3          	sb	a1,-17(s0)
-+     bda:	1101                	add	sp,sp,-32
-+     bdc:	ec06                	sd	ra,24(sp)
-+     bde:	e822                	sd	s0,16(sp)
-+     be0:	1000                	add	s0,sp,32
-+     be2:	feb407a3          	sb	a1,-17(s0)
-   write(fd, &c, 1);
--     bfa:	4605                	li	a2,1
--     bfc:	fef40593          	addi	a1,s0,-17
--     c00:	f6fff0ef          	jal	b6e <write>
-+     be6:	4605                	li	a2,1
-+     be8:	fef40593          	add	a1,s0,-17
-+     bec:	f6fff0ef          	jal	b5a <write>
- }
--     c04:	60e2                	ld	ra,24(sp)
--     c06:	6442                	ld	s0,16(sp)
--     c08:	6105                	addi	sp,sp,32
--     c0a:	8082                	ret
-+     bf0:	60e2                	ld	ra,24(sp)
-+     bf2:	6442                	ld	s0,16(sp)
-+     bf4:	6105                	add	sp,sp,32
-+     bf6:	8082                	ret
- 
--0000000000000c0c <printint>:
-+0000000000000bf8 <printint>:
- 
- static void
- printint(int fd, int xx, int base, int sgn)
- {
--     c0c:	7139                	addi	sp,sp,-64
--     c0e:	fc06                	sd	ra,56(sp)
--     c10:	f822                	sd	s0,48(sp)
--     c12:	f426                	sd	s1,40(sp)
--     c14:	0080                	addi	s0,sp,64
--     c16:	84aa                	mv	s1,a0
-+     bf8:	7139                	add	sp,sp,-64
-+     bfa:	fc06                	sd	ra,56(sp)
-+     bfc:	f822                	sd	s0,48(sp)
-+     bfe:	f426                	sd	s1,40(sp)
-+     c00:	f04a                	sd	s2,32(sp)
-+     c02:	ec4e                	sd	s3,24(sp)
-+     c04:	0080                	add	s0,sp,64
-+     c06:	84aa                	mv	s1,a0
-   char buf[16];
-   int i, neg;
-   uint x;
- 
-   neg = 0;
-   if(sgn && xx < 0){
--     c18:	c299                	beqz	a3,c1e <printint+0x12>
--     c1a:	0805c963          	bltz	a1,cac <printint+0xa0>
-+     c08:	c299                	beqz	a3,c0e <printint+0x16>
-+     c0a:	0805c763          	bltz	a1,c98 <printint+0xa0>
-     neg = 1;
-     x = -xx;
-   } else {
-     x = xx;
--     c1e:	2581                	sext.w	a1,a1
-+     c0e:	2581                	sext.w	a1,a1
-   neg = 0;
--     c20:	4881                	li	a7,0
--     c22:	fc040693          	addi	a3,s0,-64
-+     c10:	4881                	li	a7,0
-+     c12:	fc040693          	add	a3,s0,-64
-   }
- 
-   i = 0;
--     c26:	4701                	li	a4,0
-+     c16:	4701                	li	a4,0
-   do{
-     buf[i++] = digits[x % base];
--     c28:	2601                	sext.w	a2,a2
--     c2a:	00001517          	auipc	a0,0x1
--     c2e:	86650513          	addi	a0,a0,-1946 # 1490 <digits>
--     c32:	883a                	mv	a6,a4
--     c34:	2705                	addiw	a4,a4,1
--     c36:	02c5f7bb          	remuw	a5,a1,a2
--     c3a:	1782                	slli	a5,a5,0x20
--     c3c:	9381                	srli	a5,a5,0x20
--     c3e:	97aa                	add	a5,a5,a0
--     c40:	0007c783          	lbu	a5,0(a5)
--     c44:	00f68023          	sb	a5,0(a3)
-+     c18:	2601                	sext.w	a2,a2
-+     c1a:	00001517          	auipc	a0,0x1
-+     c1e:	82650513          	add	a0,a0,-2010 # 1440 <digits>
-+     c22:	883a                	mv	a6,a4
-+     c24:	2705                	addw	a4,a4,1
-+     c26:	02c5f7bb          	remuw	a5,a1,a2
-+     c2a:	1782                	sll	a5,a5,0x20
-+     c2c:	9381                	srl	a5,a5,0x20
-+     c2e:	97aa                	add	a5,a5,a0
-+     c30:	0007c783          	lbu	a5,0(a5)
-+     c34:	00f68023          	sb	a5,0(a3)
-   }while((x /= base) != 0);
--     c48:	0005879b          	sext.w	a5,a1
--     c4c:	02c5d5bb          	divuw	a1,a1,a2
--     c50:	0685                	addi	a3,a3,1
--     c52:	fec7f0e3          	bgeu	a5,a2,c32 <printint+0x26>
-+     c38:	0005879b          	sext.w	a5,a1
-+     c3c:	02c5d5bb          	divuw	a1,a1,a2
-+     c40:	0685                	add	a3,a3,1
-+     c42:	fec7f0e3          	bgeu	a5,a2,c22 <printint+0x2a>
-   if(neg)
--     c56:	00088c63          	beqz	a7,c6e <printint+0x62>
-+     c46:	00088c63          	beqz	a7,c5e <printint+0x66>
-     buf[i++] = '-';
--     c5a:	fd070793          	addi	a5,a4,-48
--     c5e:	00878733          	add	a4,a5,s0
--     c62:	02d00793          	li	a5,45
--     c66:	fef70823          	sb	a5,-16(a4)
--     c6a:	0028071b          	addiw	a4,a6,2
-+     c4a:	fd070793          	add	a5,a4,-48
-+     c4e:	00878733          	add	a4,a5,s0
-+     c52:	02d00793          	li	a5,45
-+     c56:	fef70823          	sb	a5,-16(a4)
-+     c5a:	0028071b          	addw	a4,a6,2
- 
-   while(--i >= 0)
--     c6e:	02e05a63          	blez	a4,ca2 <printint+0x96>
--     c72:	f04a                	sd	s2,32(sp)
--     c74:	ec4e                	sd	s3,24(sp)
--     c76:	fc040793          	addi	a5,s0,-64
--     c7a:	00e78933          	add	s2,a5,a4
--     c7e:	fff78993          	addi	s3,a5,-1
--     c82:	99ba                	add	s3,s3,a4
--     c84:	377d                	addiw	a4,a4,-1
--     c86:	1702                	slli	a4,a4,0x20
--     c88:	9301                	srli	a4,a4,0x20
--     c8a:	40e989b3          	sub	s3,s3,a4
-+     c5e:	02e05663          	blez	a4,c8a <printint+0x92>
-+     c62:	fc040793          	add	a5,s0,-64
-+     c66:	00e78933          	add	s2,a5,a4
-+     c6a:	fff78993          	add	s3,a5,-1
-+     c6e:	99ba                	add	s3,s3,a4
-+     c70:	377d                	addw	a4,a4,-1
-+     c72:	1702                	sll	a4,a4,0x20
-+     c74:	9301                	srl	a4,a4,0x20
-+     c76:	40e989b3          	sub	s3,s3,a4
-     putc(fd, buf[i]);
--     c8e:	fff94583          	lbu	a1,-1(s2)
--     c92:	8526                	mv	a0,s1
--     c94:	f5bff0ef          	jal	bee <putc>
-+     c7a:	fff94583          	lbu	a1,-1(s2)
-+     c7e:	8526                	mv	a0,s1
-+     c80:	f5bff0ef          	jal	bda <putc>
-   while(--i >= 0)
--     c98:	197d                	addi	s2,s2,-1
--     c9a:	ff391ae3          	bne	s2,s3,c8e <printint+0x82>
--     c9e:	7902                	ld	s2,32(sp)
--     ca0:	69e2                	ld	s3,24(sp)
-+     c84:	197d                	add	s2,s2,-1
-+     c86:	ff391ae3          	bne	s2,s3,c7a <printint+0x82>
- }
--     ca2:	70e2                	ld	ra,56(sp)
--     ca4:	7442                	ld	s0,48(sp)
--     ca6:	74a2                	ld	s1,40(sp)
--     ca8:	6121                	addi	sp,sp,64
--     caa:	8082                	ret
-+     c8a:	70e2                	ld	ra,56(sp)
-+     c8c:	7442                	ld	s0,48(sp)
-+     c8e:	74a2                	ld	s1,40(sp)
-+     c90:	7902                	ld	s2,32(sp)
-+     c92:	69e2                	ld	s3,24(sp)
-+     c94:	6121                	add	sp,sp,64
-+     c96:	8082                	ret
-     x = -xx;
--     cac:	40b005bb          	negw	a1,a1
-+     c98:	40b005bb          	negw	a1,a1
-     neg = 1;
--     cb0:	4885                	li	a7,1
-+     c9c:	4885                	li	a7,1
-     x = -xx;
--     cb2:	bf85                	j	c22 <printint+0x16>
-+     c9e:	bf95                	j	c12 <printint+0x1a>
- 
--0000000000000cb4 <vprintf>:
-+0000000000000ca0 <vprintf>:
- }
- 
- /* Print to the given fd. Only understands %d, %x, %p, %s. */
- void
- vprintf(int fd, const char *fmt, va_list ap)
- {
--     cb4:	711d                	addi	sp,sp,-96
--     cb6:	ec86                	sd	ra,88(sp)
--     cb8:	e8a2                	sd	s0,80(sp)
--     cba:	e0ca                	sd	s2,64(sp)
--     cbc:	1080                	addi	s0,sp,96
-+     ca0:	711d                	add	sp,sp,-96
-+     ca2:	ec86                	sd	ra,88(sp)
-+     ca4:	e8a2                	sd	s0,80(sp)
-+     ca6:	e4a6                	sd	s1,72(sp)
-+     ca8:	e0ca                	sd	s2,64(sp)
-+     caa:	fc4e                	sd	s3,56(sp)
-+     cac:	f852                	sd	s4,48(sp)
-+     cae:	f456                	sd	s5,40(sp)
-+     cb0:	f05a                	sd	s6,32(sp)
-+     cb2:	ec5e                	sd	s7,24(sp)
-+     cb4:	e862                	sd	s8,16(sp)
-+     cb6:	e466                	sd	s9,8(sp)
-+     cb8:	e06a                	sd	s10,0(sp)
-+     cba:	1080                	add	s0,sp,96
-   char *s;
-   int c0, c1, c2, i, state;
- 
-   state = 0;
-   for(i = 0; fmt[i]; i++){
--     cbe:	0005c903          	lbu	s2,0(a1)
--     cc2:	26090863          	beqz	s2,f32 <vprintf+0x27e>
--     cc6:	e4a6                	sd	s1,72(sp)
--     cc8:	fc4e                	sd	s3,56(sp)
--     cca:	f852                	sd	s4,48(sp)
--     ccc:	f456                	sd	s5,40(sp)
--     cce:	f05a                	sd	s6,32(sp)
--     cd0:	ec5e                	sd	s7,24(sp)
--     cd2:	e862                	sd	s8,16(sp)
--     cd4:	e466                	sd	s9,8(sp)
--     cd6:	8b2a                	mv	s6,a0
--     cd8:	8a2e                	mv	s4,a1
--     cda:	8bb2                	mv	s7,a2
-+     cbc:	0005c903          	lbu	s2,0(a1)
-+     cc0:	24090763          	beqz	s2,f0e <vprintf+0x26e>
-+     cc4:	8b2a                	mv	s6,a0
-+     cc6:	8a2e                	mv	s4,a1
-+     cc8:	8bb2                	mv	s7,a2
-   state = 0;
--     cdc:	4981                	li	s3,0
-+     cca:	4981                	li	s3,0
-   for(i = 0; fmt[i]; i++){
--     cde:	4481                	li	s1,0
--     ce0:	4701                	li	a4,0
-+     ccc:	4481                	li	s1,0
-+     cce:	4701                	li	a4,0
-       if(c0 == '%'){
-         state = '%';
-       } else {
-         putc(fd, c0);
-       }
-     } else if(state == '%'){
--     ce2:	02500a93          	li	s5,37
-+     cd0:	02500a93          	li	s5,37
-       c1 = c2 = 0;
-       if(c0) c1 = fmt[i+1] & 0xff;
-       if(c1) c2 = fmt[i+2] & 0xff;
-       if(c0 == 'd'){
--     ce6:	06400c13          	li	s8,100
-+     cd4:	06400c13          	li	s8,100
-         printint(fd, va_arg(ap, int), 10, 1);
-       } else if(c0 == 'l' && c1 == 'd'){
--     cea:	06c00c93          	li	s9,108
--     cee:	a005                	j	d0e <vprintf+0x5a>
-+     cd8:	06c00c93          	li	s9,108
-+     cdc:	a005                	j	cfc <vprintf+0x5c>
-         putc(fd, c0);
--     cf0:	85ca                	mv	a1,s2
--     cf2:	855a                	mv	a0,s6
--     cf4:	efbff0ef          	jal	bee <putc>
--     cf8:	a019                	j	cfe <vprintf+0x4a>
-+     cde:	85ca                	mv	a1,s2
-+     ce0:	855a                	mv	a0,s6
-+     ce2:	ef9ff0ef          	jal	bda <putc>
-+     ce6:	a019                	j	cec <vprintf+0x4c>
-     } else if(state == '%'){
--     cfa:	03598263          	beq	s3,s5,d1e <vprintf+0x6a>
-+     ce8:	03598263          	beq	s3,s5,d0c <vprintf+0x6c>
-   for(i = 0; fmt[i]; i++){
--     cfe:	2485                	addiw	s1,s1,1
--     d00:	8726                	mv	a4,s1
--     d02:	009a07b3          	add	a5,s4,s1
--     d06:	0007c903          	lbu	s2,0(a5)
--     d0a:	20090c63          	beqz	s2,f22 <vprintf+0x26e>
-+     cec:	2485                	addw	s1,s1,1
-+     cee:	8726                	mv	a4,s1
-+     cf0:	009a07b3          	add	a5,s4,s1
-+     cf4:	0007c903          	lbu	s2,0(a5)
-+     cf8:	20090b63          	beqz	s2,f0e <vprintf+0x26e>
-     c0 = fmt[i] & 0xff;
--     d0e:	0009079b          	sext.w	a5,s2
-+     cfc:	0009079b          	sext.w	a5,s2
-     if(state == 0){
--     d12:	fe0994e3          	bnez	s3,cfa <vprintf+0x46>
-+     d00:	fe0994e3          	bnez	s3,ce8 <vprintf+0x48>
-       if(c0 == '%'){
--     d16:	fd579de3          	bne	a5,s5,cf0 <vprintf+0x3c>
-+     d04:	fd579de3          	bne	a5,s5,cde <vprintf+0x3e>
-         state = '%';
--     d1a:	89be                	mv	s3,a5
--     d1c:	b7cd                	j	cfe <vprintf+0x4a>
-+     d08:	89be                	mv	s3,a5
-+     d0a:	b7cd                	j	cec <vprintf+0x4c>
-       if(c0) c1 = fmt[i+1] & 0xff;
--     d1e:	00ea06b3          	add	a3,s4,a4
--     d22:	0016c683          	lbu	a3,1(a3)
-+     d0c:	c7c9                	beqz	a5,d96 <vprintf+0xf6>
-+     d0e:	00ea06b3          	add	a3,s4,a4
-+     d12:	0016c683          	lbu	a3,1(a3)
-       c1 = c2 = 0;
--     d26:	8636                	mv	a2,a3
-+     d16:	8636                	mv	a2,a3
-       if(c1) c2 = fmt[i+2] & 0xff;
--     d28:	c681                	beqz	a3,d30 <vprintf+0x7c>
--     d2a:	9752                	add	a4,a4,s4
--     d2c:	00274603          	lbu	a2,2(a4)
-+     d18:	c681                	beqz	a3,d20 <vprintf+0x80>
-+     d1a:	9752                	add	a4,a4,s4
-+     d1c:	00274603          	lbu	a2,2(a4)
-       if(c0 == 'd'){
--     d30:	03878f63          	beq	a5,s8,d6e <vprintf+0xba>
-+     d20:	03878f63          	beq	a5,s8,d5e <vprintf+0xbe>
-       } else if(c0 == 'l' && c1 == 'd'){
--     d34:	05978963          	beq	a5,s9,d86 <vprintf+0xd2>
-+     d24:	05978963          	beq	a5,s9,d76 <vprintf+0xd6>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 2;
-       } else if(c0 == 'u'){
--     d38:	07500713          	li	a4,117
--     d3c:	0ee78363          	beq	a5,a4,e22 <vprintf+0x16e>
-+     d28:	07500713          	li	a4,117
-+     d2c:	0ee78363          	beq	a5,a4,e12 <vprintf+0x172>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 2;
-       } else if(c0 == 'x'){
--     d40:	07800713          	li	a4,120
--     d44:	12e78563          	beq	a5,a4,e6e <vprintf+0x1ba>
-+     d30:	07800713          	li	a4,120
-+     d34:	12e78563          	beq	a5,a4,e5e <vprintf+0x1be>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 2;
-       } else if(c0 == 'p'){
--     d48:	07000713          	li	a4,112
--     d4c:	14e78a63          	beq	a5,a4,ea0 <vprintf+0x1ec>
-+     d38:	07000713          	li	a4,112
-+     d3c:	14e78a63          	beq	a5,a4,e90 <vprintf+0x1f0>
-         printptr(fd, va_arg(ap, uint64));
-       } else if(c0 == 's'){
--     d50:	07300713          	li	a4,115
--     d54:	18e78a63          	beq	a5,a4,ee8 <vprintf+0x234>
-+     d40:	07300713          	li	a4,115
-+     d44:	18e78863          	beq	a5,a4,ed4 <vprintf+0x234>
-         if((s = va_arg(ap, char*)) == 0)
-           s = "(null)";
-         for(; *s; s++)
-           putc(fd, *s);
-       } else if(c0 == '%'){
--     d58:	02500713          	li	a4,37
--     d5c:	04e79563          	bne	a5,a4,da6 <vprintf+0xf2>
-+     d48:	02500713          	li	a4,37
-+     d4c:	04e79563          	bne	a5,a4,d96 <vprintf+0xf6>
-         putc(fd, '%');
--     d60:	02500593          	li	a1,37
--     d64:	855a                	mv	a0,s6
--     d66:	e89ff0ef          	jal	bee <putc>
-+     d50:	02500593          	li	a1,37
-+     d54:	855a                	mv	a0,s6
-+     d56:	e85ff0ef          	jal	bda <putc>
-         /* Unknown % sequence.  Print it to draw attention. */
-         putc(fd, '%');
-         putc(fd, c);
-       }
- #endif
-       state = 0;
--     d6a:	4981                	li	s3,0
--     d6c:	bf49                	j	cfe <vprintf+0x4a>
-+     d5a:	4981                	li	s3,0
-+     d5c:	bf41                	j	cec <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 1);
--     d6e:	008b8913          	addi	s2,s7,8
--     d72:	4685                	li	a3,1
--     d74:	4629                	li	a2,10
--     d76:	000ba583          	lw	a1,0(s7)
--     d7a:	855a                	mv	a0,s6
--     d7c:	e91ff0ef          	jal	c0c <printint>
--     d80:	8bca                	mv	s7,s2
-+     d5e:	008b8913          	add	s2,s7,8
-+     d62:	4685                	li	a3,1
-+     d64:	4629                	li	a2,10
-+     d66:	000ba583          	lw	a1,0(s7)
-+     d6a:	855a                	mv	a0,s6
-+     d6c:	e8dff0ef          	jal	bf8 <printint>
-+     d70:	8bca                	mv	s7,s2
-       state = 0;
--     d82:	4981                	li	s3,0
--     d84:	bfad                	j	cfe <vprintf+0x4a>
-+     d72:	4981                	li	s3,0
-+     d74:	bfa5                	j	cec <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'd'){
--     d86:	06400793          	li	a5,100
--     d8a:	02f68963          	beq	a3,a5,dbc <vprintf+0x108>
-+     d76:	06400793          	li	a5,100
-+     d7a:	02f68963          	beq	a3,a5,dac <vprintf+0x10c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
--     d8e:	06c00793          	li	a5,108
--     d92:	04f68263          	beq	a3,a5,dd6 <vprintf+0x122>
-+     d7e:	06c00793          	li	a5,108
-+     d82:	04f68263          	beq	a3,a5,dc6 <vprintf+0x126>
-       } else if(c0 == 'l' && c1 == 'u'){
--     d96:	07500793          	li	a5,117
--     d9a:	0af68063          	beq	a3,a5,e3a <vprintf+0x186>
-+     d86:	07500793          	li	a5,117
-+     d8a:	0af68063          	beq	a3,a5,e2a <vprintf+0x18a>
-       } else if(c0 == 'l' && c1 == 'x'){
--     d9e:	07800793          	li	a5,120
--     da2:	0ef68263          	beq	a3,a5,e86 <vprintf+0x1d2>
-+     d8e:	07800793          	li	a5,120
-+     d92:	0ef68263          	beq	a3,a5,e76 <vprintf+0x1d6>
-         putc(fd, '%');
--     da6:	02500593          	li	a1,37
--     daa:	855a                	mv	a0,s6
--     dac:	e43ff0ef          	jal	bee <putc>
-+     d96:	02500593          	li	a1,37
-+     d9a:	855a                	mv	a0,s6
-+     d9c:	e3fff0ef          	jal	bda <putc>
-         putc(fd, c0);
--     db0:	85ca                	mv	a1,s2
--     db2:	855a                	mv	a0,s6
--     db4:	e3bff0ef          	jal	bee <putc>
-+     da0:	85ca                	mv	a1,s2
-+     da2:	855a                	mv	a0,s6
-+     da4:	e37ff0ef          	jal	bda <putc>
-       state = 0;
--     db8:	4981                	li	s3,0
--     dba:	b791                	j	cfe <vprintf+0x4a>
-+     da8:	4981                	li	s3,0
-+     daa:	b789                	j	cec <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
--     dbc:	008b8913          	addi	s2,s7,8
--     dc0:	4685                	li	a3,1
--     dc2:	4629                	li	a2,10
--     dc4:	000ba583          	lw	a1,0(s7)
--     dc8:	855a                	mv	a0,s6
--     dca:	e43ff0ef          	jal	c0c <printint>
-+     dac:	008b8913          	add	s2,s7,8
-+     db0:	4685                	li	a3,1
-+     db2:	4629                	li	a2,10
-+     db4:	000ba583          	lw	a1,0(s7)
-+     db8:	855a                	mv	a0,s6
-+     dba:	e3fff0ef          	jal	bf8 <printint>
-         i += 1;
--     dce:	2485                	addiw	s1,s1,1
-+     dbe:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 1);
--     dd0:	8bca                	mv	s7,s2
-+     dc0:	8bca                	mv	s7,s2
-       state = 0;
--     dd2:	4981                	li	s3,0
-+     dc2:	4981                	li	s3,0
-         i += 1;
--     dd4:	b72d                	j	cfe <vprintf+0x4a>
-+     dc4:	b725                	j	cec <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
--     dd6:	06400793          	li	a5,100
--     dda:	02f60763          	beq	a2,a5,e08 <vprintf+0x154>
-+     dc6:	06400793          	li	a5,100
-+     dca:	02f60763          	beq	a2,a5,df8 <vprintf+0x158>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
--     dde:	07500793          	li	a5,117
--     de2:	06f60963          	beq	a2,a5,e54 <vprintf+0x1a0>
-+     dce:	07500793          	li	a5,117
-+     dd2:	06f60963          	beq	a2,a5,e44 <vprintf+0x1a4>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
--     de6:	07800793          	li	a5,120
--     dea:	faf61ee3          	bne	a2,a5,da6 <vprintf+0xf2>
-+     dd6:	07800793          	li	a5,120
-+     dda:	faf61ee3          	bne	a2,a5,d96 <vprintf+0xf6>
-         printint(fd, va_arg(ap, uint64), 16, 0);
--     dee:	008b8913          	addi	s2,s7,8
--     df2:	4681                	li	a3,0
--     df4:	4641                	li	a2,16
--     df6:	000ba583          	lw	a1,0(s7)
--     dfa:	855a                	mv	a0,s6
--     dfc:	e11ff0ef          	jal	c0c <printint>
-+     dde:	008b8913          	add	s2,s7,8
-+     de2:	4681                	li	a3,0
-+     de4:	4641                	li	a2,16
-+     de6:	000ba583          	lw	a1,0(s7)
-+     dea:	855a                	mv	a0,s6
-+     dec:	e0dff0ef          	jal	bf8 <printint>
-         i += 2;
--     e00:	2489                	addiw	s1,s1,2
-+     df0:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 16, 0);
--     e02:	8bca                	mv	s7,s2
-+     df2:	8bca                	mv	s7,s2
-       state = 0;
--     e04:	4981                	li	s3,0
-+     df4:	4981                	li	s3,0
-         i += 2;
--     e06:	bde5                	j	cfe <vprintf+0x4a>
-+     df6:	bddd                	j	cec <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
--     e08:	008b8913          	addi	s2,s7,8
--     e0c:	4685                	li	a3,1
--     e0e:	4629                	li	a2,10
--     e10:	000ba583          	lw	a1,0(s7)
--     e14:	855a                	mv	a0,s6
--     e16:	df7ff0ef          	jal	c0c <printint>
-+     df8:	008b8913          	add	s2,s7,8
-+     dfc:	4685                	li	a3,1
-+     dfe:	4629                	li	a2,10
-+     e00:	000ba583          	lw	a1,0(s7)
-+     e04:	855a                	mv	a0,s6
-+     e06:	df3ff0ef          	jal	bf8 <printint>
-         i += 2;
--     e1a:	2489                	addiw	s1,s1,2
-+     e0a:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 1);
--     e1c:	8bca                	mv	s7,s2
-+     e0c:	8bca                	mv	s7,s2
-       state = 0;
--     e1e:	4981                	li	s3,0
-+     e0e:	4981                	li	s3,0
-         i += 2;
--     e20:	bdf9                	j	cfe <vprintf+0x4a>
-+     e10:	bdf1                	j	cec <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 0);
--     e22:	008b8913          	addi	s2,s7,8
--     e26:	4681                	li	a3,0
--     e28:	4629                	li	a2,10
--     e2a:	000ba583          	lw	a1,0(s7)
--     e2e:	855a                	mv	a0,s6
--     e30:	dddff0ef          	jal	c0c <printint>
--     e34:	8bca                	mv	s7,s2
-+     e12:	008b8913          	add	s2,s7,8
-+     e16:	4681                	li	a3,0
-+     e18:	4629                	li	a2,10
-+     e1a:	000ba583          	lw	a1,0(s7)
-+     e1e:	855a                	mv	a0,s6
-+     e20:	dd9ff0ef          	jal	bf8 <printint>
-+     e24:	8bca                	mv	s7,s2
-       state = 0;
--     e36:	4981                	li	s3,0
--     e38:	b5d9                	j	cfe <vprintf+0x4a>
-+     e26:	4981                	li	s3,0
-+     e28:	b5d1                	j	cec <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
--     e3a:	008b8913          	addi	s2,s7,8
--     e3e:	4681                	li	a3,0
--     e40:	4629                	li	a2,10
--     e42:	000ba583          	lw	a1,0(s7)
--     e46:	855a                	mv	a0,s6
--     e48:	dc5ff0ef          	jal	c0c <printint>
-+     e2a:	008b8913          	add	s2,s7,8
-+     e2e:	4681                	li	a3,0
-+     e30:	4629                	li	a2,10
-+     e32:	000ba583          	lw	a1,0(s7)
-+     e36:	855a                	mv	a0,s6
-+     e38:	dc1ff0ef          	jal	bf8 <printint>
-         i += 1;
--     e4c:	2485                	addiw	s1,s1,1
-+     e3c:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 0);
--     e4e:	8bca                	mv	s7,s2
-+     e3e:	8bca                	mv	s7,s2
-       state = 0;
--     e50:	4981                	li	s3,0
-+     e40:	4981                	li	s3,0
-         i += 1;
--     e52:	b575                	j	cfe <vprintf+0x4a>
-+     e42:	b56d                	j	cec <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
--     e54:	008b8913          	addi	s2,s7,8
--     e58:	4681                	li	a3,0
--     e5a:	4629                	li	a2,10
--     e5c:	000ba583          	lw	a1,0(s7)
--     e60:	855a                	mv	a0,s6
--     e62:	dabff0ef          	jal	c0c <printint>
-+     e44:	008b8913          	add	s2,s7,8
-+     e48:	4681                	li	a3,0
-+     e4a:	4629                	li	a2,10
-+     e4c:	000ba583          	lw	a1,0(s7)
-+     e50:	855a                	mv	a0,s6
-+     e52:	da7ff0ef          	jal	bf8 <printint>
-         i += 2;
--     e66:	2489                	addiw	s1,s1,2
-+     e56:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 0);
--     e68:	8bca                	mv	s7,s2
-+     e58:	8bca                	mv	s7,s2
-       state = 0;
--     e6a:	4981                	li	s3,0
-+     e5a:	4981                	li	s3,0
-         i += 2;
--     e6c:	bd49                	j	cfe <vprintf+0x4a>
-+     e5c:	bd41                	j	cec <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 16, 0);
--     e6e:	008b8913          	addi	s2,s7,8
--     e72:	4681                	li	a3,0
--     e74:	4641                	li	a2,16
--     e76:	000ba583          	lw	a1,0(s7)
--     e7a:	855a                	mv	a0,s6
--     e7c:	d91ff0ef          	jal	c0c <printint>
--     e80:	8bca                	mv	s7,s2
-+     e5e:	008b8913          	add	s2,s7,8
-+     e62:	4681                	li	a3,0
-+     e64:	4641                	li	a2,16
-+     e66:	000ba583          	lw	a1,0(s7)
-+     e6a:	855a                	mv	a0,s6
-+     e6c:	d8dff0ef          	jal	bf8 <printint>
-+     e70:	8bca                	mv	s7,s2
-       state = 0;
--     e82:	4981                	li	s3,0
--     e84:	bdad                	j	cfe <vprintf+0x4a>
-+     e72:	4981                	li	s3,0
-+     e74:	bda5                	j	cec <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 16, 0);
--     e86:	008b8913          	addi	s2,s7,8
--     e8a:	4681                	li	a3,0
--     e8c:	4641                	li	a2,16
--     e8e:	000ba583          	lw	a1,0(s7)
--     e92:	855a                	mv	a0,s6
--     e94:	d79ff0ef          	jal	c0c <printint>
-+     e76:	008b8913          	add	s2,s7,8
-+     e7a:	4681                	li	a3,0
-+     e7c:	4641                	li	a2,16
-+     e7e:	000ba583          	lw	a1,0(s7)
-+     e82:	855a                	mv	a0,s6
-+     e84:	d75ff0ef          	jal	bf8 <printint>
-         i += 1;
--     e98:	2485                	addiw	s1,s1,1
-+     e88:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 16, 0);
--     e9a:	8bca                	mv	s7,s2
-+     e8a:	8bca                	mv	s7,s2
-       state = 0;
--     e9c:	4981                	li	s3,0
-+     e8c:	4981                	li	s3,0
-         i += 1;
--     e9e:	b585                	j	cfe <vprintf+0x4a>
--     ea0:	e06a                	sd	s10,0(sp)
-+     e8e:	bdb9                	j	cec <vprintf+0x4c>
-         printptr(fd, va_arg(ap, uint64));
--     ea2:	008b8d13          	addi	s10,s7,8
--     ea6:	000bb983          	ld	s3,0(s7)
-+     e90:	008b8d13          	add	s10,s7,8
-+     e94:	000bb983          	ld	s3,0(s7)
-   putc(fd, '0');
--     eaa:	03000593          	li	a1,48
--     eae:	855a                	mv	a0,s6
--     eb0:	d3fff0ef          	jal	bee <putc>
-+     e98:	03000593          	li	a1,48
-+     e9c:	855a                	mv	a0,s6
-+     e9e:	d3dff0ef          	jal	bda <putc>
-   putc(fd, 'x');
--     eb4:	07800593          	li	a1,120
--     eb8:	855a                	mv	a0,s6
--     eba:	d35ff0ef          	jal	bee <putc>
--     ebe:	4941                	li	s2,16
-+     ea2:	07800593          	li	a1,120
-+     ea6:	855a                	mv	a0,s6
-+     ea8:	d33ff0ef          	jal	bda <putc>
-+     eac:	4941                	li	s2,16
-     putc(fd, digits[x >> (sizeof(uint64) * 8 - 4)]);
--     ec0:	00000b97          	auipc	s7,0x0
--     ec4:	5d0b8b93          	addi	s7,s7,1488 # 1490 <digits>
--     ec8:	03c9d793          	srli	a5,s3,0x3c
--     ecc:	97de                	add	a5,a5,s7
--     ece:	0007c583          	lbu	a1,0(a5)
--     ed2:	855a                	mv	a0,s6
--     ed4:	d1bff0ef          	jal	bee <putc>
-+     eae:	00000b97          	auipc	s7,0x0
-+     eb2:	592b8b93          	add	s7,s7,1426 # 1440 <digits>
-+     eb6:	03c9d793          	srl	a5,s3,0x3c
-+     eba:	97de                	add	a5,a5,s7
-+     ebc:	0007c583          	lbu	a1,0(a5)
-+     ec0:	855a                	mv	a0,s6
-+     ec2:	d19ff0ef          	jal	bda <putc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
--     ed8:	0992                	slli	s3,s3,0x4
--     eda:	397d                	addiw	s2,s2,-1
--     edc:	fe0916e3          	bnez	s2,ec8 <vprintf+0x214>
-+     ec6:	0992                	sll	s3,s3,0x4
-+     ec8:	397d                	addw	s2,s2,-1
-+     eca:	fe0916e3          	bnez	s2,eb6 <vprintf+0x216>
-         printptr(fd, va_arg(ap, uint64));
--     ee0:	8bea                	mv	s7,s10
-+     ece:	8bea                	mv	s7,s10
-       state = 0;
--     ee2:	4981                	li	s3,0
--     ee4:	6d02                	ld	s10,0(sp)
--     ee6:	bd21                	j	cfe <vprintf+0x4a>
-+     ed0:	4981                	li	s3,0
-+     ed2:	bd29                	j	cec <vprintf+0x4c>
-         if((s = va_arg(ap, char*)) == 0)
--     ee8:	008b8993          	addi	s3,s7,8
--     eec:	000bb903          	ld	s2,0(s7)
--     ef0:	00090f63          	beqz	s2,f0e <vprintf+0x25a>
-+     ed4:	008b8993          	add	s3,s7,8
-+     ed8:	000bb903          	ld	s2,0(s7)
-+     edc:	00090f63          	beqz	s2,efa <vprintf+0x25a>
-         for(; *s; s++)
--     ef4:	00094583          	lbu	a1,0(s2)
--     ef8:	c195                	beqz	a1,f1c <vprintf+0x268>
-+     ee0:	00094583          	lbu	a1,0(s2)
-+     ee4:	c195                	beqz	a1,f08 <vprintf+0x268>
-           putc(fd, *s);
--     efa:	855a                	mv	a0,s6
--     efc:	cf3ff0ef          	jal	bee <putc>
-+     ee6:	855a                	mv	a0,s6
-+     ee8:	cf3ff0ef          	jal	bda <putc>
-         for(; *s; s++)
--     f00:	0905                	addi	s2,s2,1
--     f02:	00094583          	lbu	a1,0(s2)
--     f06:	f9f5                	bnez	a1,efa <vprintf+0x246>
-+     eec:	0905                	add	s2,s2,1
-+     eee:	00094583          	lbu	a1,0(s2)
-+     ef2:	f9f5                	bnez	a1,ee6 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
--     f08:	8bce                	mv	s7,s3
-+     ef4:	8bce                	mv	s7,s3
-       state = 0;
--     f0a:	4981                	li	s3,0
--     f0c:	bbcd                	j	cfe <vprintf+0x4a>
-+     ef6:	4981                	li	s3,0
-+     ef8:	bbd5                	j	cec <vprintf+0x4c>
-           s = "(null)";
--     f0e:	00000917          	auipc	s2,0x0
--     f12:	51a90913          	addi	s2,s2,1306 # 1428 <malloc+0x40e>
-+     efa:	00000917          	auipc	s2,0x0
-+     efe:	53e90913          	add	s2,s2,1342 # 1438 <malloc+0x430>
-         for(; *s; s++)
--     f16:	02800593          	li	a1,40
--     f1a:	b7c5                	j	efa <vprintf+0x246>
-+     f02:	02800593          	li	a1,40
-+     f06:	b7c5                	j	ee6 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
--     f1c:	8bce                	mv	s7,s3
-+     f08:	8bce                	mv	s7,s3
-       state = 0;
--     f1e:	4981                	li	s3,0
--     f20:	bbf9                	j	cfe <vprintf+0x4a>
--     f22:	64a6                	ld	s1,72(sp)
--     f24:	79e2                	ld	s3,56(sp)
--     f26:	7a42                	ld	s4,48(sp)
--     f28:	7aa2                	ld	s5,40(sp)
--     f2a:	7b02                	ld	s6,32(sp)
--     f2c:	6be2                	ld	s7,24(sp)
--     f2e:	6c42                	ld	s8,16(sp)
--     f30:	6ca2                	ld	s9,8(sp)
-+     f0a:	4981                	li	s3,0
-+     f0c:	b3c5                	j	cec <vprintf+0x4c>
-     }
-   }
- }
--     f32:	60e6                	ld	ra,88(sp)
--     f34:	6446                	ld	s0,80(sp)
--     f36:	6906                	ld	s2,64(sp)
--     f38:	6125                	addi	sp,sp,96
--     f3a:	8082                	ret
--
--0000000000000f3c <fprintf>:
-+     f0e:	60e6                	ld	ra,88(sp)
-+     f10:	6446                	ld	s0,80(sp)
-+     f12:	64a6                	ld	s1,72(sp)
-+     f14:	6906                	ld	s2,64(sp)
-+     f16:	79e2                	ld	s3,56(sp)
-+     f18:	7a42                	ld	s4,48(sp)
-+     f1a:	7aa2                	ld	s5,40(sp)
-+     f1c:	7b02                	ld	s6,32(sp)
-+     f1e:	6be2                	ld	s7,24(sp)
-+     f20:	6c42                	ld	s8,16(sp)
-+     f22:	6ca2                	ld	s9,8(sp)
-+     f24:	6d02                	ld	s10,0(sp)
-+     f26:	6125                	add	sp,sp,96
-+     f28:	8082                	ret
-+
-+0000000000000f2a <fprintf>:
- 
- void
- fprintf(int fd, const char *fmt, ...)
- {
--     f3c:	715d                	addi	sp,sp,-80
--     f3e:	ec06                	sd	ra,24(sp)
--     f40:	e822                	sd	s0,16(sp)
--     f42:	1000                	addi	s0,sp,32
--     f44:	e010                	sd	a2,0(s0)
--     f46:	e414                	sd	a3,8(s0)
--     f48:	e818                	sd	a4,16(s0)
--     f4a:	ec1c                	sd	a5,24(s0)
--     f4c:	03043023          	sd	a6,32(s0)
--     f50:	03143423          	sd	a7,40(s0)
-+     f2a:	715d                	add	sp,sp,-80
-+     f2c:	ec06                	sd	ra,24(sp)
-+     f2e:	e822                	sd	s0,16(sp)
-+     f30:	1000                	add	s0,sp,32
-+     f32:	e010                	sd	a2,0(s0)
-+     f34:	e414                	sd	a3,8(s0)
-+     f36:	e818                	sd	a4,16(s0)
-+     f38:	ec1c                	sd	a5,24(s0)
-+     f3a:	03043023          	sd	a6,32(s0)
-+     f3e:	03143423          	sd	a7,40(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
--     f54:	fe843423          	sd	s0,-24(s0)
-+     f42:	fe843423          	sd	s0,-24(s0)
-   vprintf(fd, fmt, ap);
--     f58:	8622                	mv	a2,s0
--     f5a:	d5bff0ef          	jal	cb4 <vprintf>
-+     f46:	8622                	mv	a2,s0
-+     f48:	d59ff0ef          	jal	ca0 <vprintf>
- }
--     f5e:	60e2                	ld	ra,24(sp)
--     f60:	6442                	ld	s0,16(sp)
--     f62:	6161                	addi	sp,sp,80
--     f64:	8082                	ret
-+     f4c:	60e2                	ld	ra,24(sp)
-+     f4e:	6442                	ld	s0,16(sp)
-+     f50:	6161                	add	sp,sp,80
-+     f52:	8082                	ret
- 
--0000000000000f66 <printf>:
-+0000000000000f54 <printf>:
- 
- void
- printf(const char *fmt, ...)
- {
--     f66:	711d                	addi	sp,sp,-96
--     f68:	ec06                	sd	ra,24(sp)
--     f6a:	e822                	sd	s0,16(sp)
--     f6c:	1000                	addi	s0,sp,32
--     f6e:	e40c                	sd	a1,8(s0)
--     f70:	e810                	sd	a2,16(s0)
--     f72:	ec14                	sd	a3,24(s0)
--     f74:	f018                	sd	a4,32(s0)
--     f76:	f41c                	sd	a5,40(s0)
--     f78:	03043823          	sd	a6,48(s0)
--     f7c:	03143c23          	sd	a7,56(s0)
-+     f54:	711d                	add	sp,sp,-96
-+     f56:	ec06                	sd	ra,24(sp)
-+     f58:	e822                	sd	s0,16(sp)
-+     f5a:	1000                	add	s0,sp,32
-+     f5c:	e40c                	sd	a1,8(s0)
-+     f5e:	e810                	sd	a2,16(s0)
-+     f60:	ec14                	sd	a3,24(s0)
-+     f62:	f018                	sd	a4,32(s0)
-+     f64:	f41c                	sd	a5,40(s0)
-+     f66:	03043823          	sd	a6,48(s0)
-+     f6a:	03143c23          	sd	a7,56(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
--     f80:	00840613          	addi	a2,s0,8
--     f84:	fec43423          	sd	a2,-24(s0)
-+     f6e:	00840613          	add	a2,s0,8
-+     f72:	fec43423          	sd	a2,-24(s0)
-   vprintf(1, fmt, ap);
--     f88:	85aa                	mv	a1,a0
--     f8a:	4505                	li	a0,1
--     f8c:	d29ff0ef          	jal	cb4 <vprintf>
-+     f76:	85aa                	mv	a1,a0
-+     f78:	4505                	li	a0,1
-+     f7a:	d27ff0ef          	jal	ca0 <vprintf>
- }
--     f90:	60e2                	ld	ra,24(sp)
--     f92:	6442                	ld	s0,16(sp)
--     f94:	6125                	addi	sp,sp,96
--     f96:	8082                	ret
-+     f7e:	60e2                	ld	ra,24(sp)
-+     f80:	6442                	ld	s0,16(sp)
-+     f82:	6125                	add	sp,sp,96
-+     f84:	8082                	ret
- 
--0000000000000f98 <free>:
-+0000000000000f86 <free>:
- static Header base;
- static Header *freep;
- 
- void
- free(void *ap)
- {
--     f98:	1141                	addi	sp,sp,-16
--     f9a:	e422                	sd	s0,8(sp)
--     f9c:	0800                	addi	s0,sp,16
-+     f86:	1141                	add	sp,sp,-16
-+     f88:	e422                	sd	s0,8(sp)
-+     f8a:	0800                	add	s0,sp,16
-   Header *bp, *p;
- 
-   bp = (Header*)ap - 1;
--     f9e:	ff050693          	addi	a3,a0,-16
-+     f8c:	ff050693          	add	a3,a0,-16
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
--     fa2:	00001797          	auipc	a5,0x1
--     fa6:	06e7b783          	ld	a5,110(a5) # 2010 <freep>
--     faa:	a02d                	j	fd4 <free+0x3c>
-+     f90:	00001797          	auipc	a5,0x1
-+     f94:	0807b783          	ld	a5,128(a5) # 2010 <freep>
-+     f98:	a02d                	j	fc2 <free+0x3c>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-       break;
-   if(bp + bp->s.size == p->s.ptr){
-     bp->s.size += p->s.ptr->s.size;
--     fac:	4618                	lw	a4,8(a2)
--     fae:	9f2d                	addw	a4,a4,a1
--     fb0:	fee52c23          	sw	a4,-8(a0)
-+     f9a:	4618                	lw	a4,8(a2)
-+     f9c:	9f2d                	addw	a4,a4,a1
-+     f9e:	fee52c23          	sw	a4,-8(a0)
-     bp->s.ptr = p->s.ptr->s.ptr;
--     fb4:	6398                	ld	a4,0(a5)
--     fb6:	6310                	ld	a2,0(a4)
--     fb8:	a83d                	j	ff6 <free+0x5e>
-+     fa2:	6398                	ld	a4,0(a5)
-+     fa4:	6310                	ld	a2,0(a4)
-+     fa6:	a83d                	j	fe4 <free+0x5e>
-   } else
-     bp->s.ptr = p->s.ptr;
-   if(p + p->s.size == bp){
-     p->s.size += bp->s.size;
--     fba:	ff852703          	lw	a4,-8(a0)
--     fbe:	9f31                	addw	a4,a4,a2
--     fc0:	c798                	sw	a4,8(a5)
-+     fa8:	ff852703          	lw	a4,-8(a0)
-+     fac:	9f31                	addw	a4,a4,a2
-+     fae:	c798                	sw	a4,8(a5)
-     p->s.ptr = bp->s.ptr;
--     fc2:	ff053683          	ld	a3,-16(a0)
--     fc6:	a091                	j	100a <free+0x72>
-+     fb0:	ff053683          	ld	a3,-16(a0)
-+     fb4:	a091                	j	ff8 <free+0x72>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
--     fc8:	6398                	ld	a4,0(a5)
--     fca:	00e7e463          	bltu	a5,a4,fd2 <free+0x3a>
--     fce:	00e6ea63          	bltu	a3,a4,fe2 <free+0x4a>
-+     fb6:	6398                	ld	a4,0(a5)
-+     fb8:	00e7e463          	bltu	a5,a4,fc0 <free+0x3a>
-+     fbc:	00e6ea63          	bltu	a3,a4,fd0 <free+0x4a>
- {
--     fd2:	87ba                	mv	a5,a4
-+     fc0:	87ba                	mv	a5,a4
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
--     fd4:	fed7fae3          	bgeu	a5,a3,fc8 <free+0x30>
--     fd8:	6398                	ld	a4,0(a5)
--     fda:	00e6e463          	bltu	a3,a4,fe2 <free+0x4a>
-+     fc2:	fed7fae3          	bgeu	a5,a3,fb6 <free+0x30>
-+     fc6:	6398                	ld	a4,0(a5)
-+     fc8:	00e6e463          	bltu	a3,a4,fd0 <free+0x4a>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
--     fde:	fee7eae3          	bltu	a5,a4,fd2 <free+0x3a>
-+     fcc:	fee7eae3          	bltu	a5,a4,fc0 <free+0x3a>
-   if(bp + bp->s.size == p->s.ptr){
--     fe2:	ff852583          	lw	a1,-8(a0)
--     fe6:	6390                	ld	a2,0(a5)
--     fe8:	02059813          	slli	a6,a1,0x20
--     fec:	01c85713          	srli	a4,a6,0x1c
--     ff0:	9736                	add	a4,a4,a3
--     ff2:	fae60de3          	beq	a2,a4,fac <free+0x14>
-+     fd0:	ff852583          	lw	a1,-8(a0)
-+     fd4:	6390                	ld	a2,0(a5)
-+     fd6:	02059813          	sll	a6,a1,0x20
-+     fda:	01c85713          	srl	a4,a6,0x1c
-+     fde:	9736                	add	a4,a4,a3
-+     fe0:	fae60de3          	beq	a2,a4,f9a <free+0x14>
-     bp->s.ptr = p->s.ptr->s.ptr;
--     ff6:	fec53823          	sd	a2,-16(a0)
-+     fe4:	fec53823          	sd	a2,-16(a0)
-   if(p + p->s.size == bp){
--     ffa:	4790                	lw	a2,8(a5)
--     ffc:	02061593          	slli	a1,a2,0x20
--    1000:	01c5d713          	srli	a4,a1,0x1c
--    1004:	973e                	add	a4,a4,a5
--    1006:	fae68ae3          	beq	a3,a4,fba <free+0x22>
-+     fe8:	4790                	lw	a2,8(a5)
-+     fea:	02061593          	sll	a1,a2,0x20
-+     fee:	01c5d713          	srl	a4,a1,0x1c
-+     ff2:	973e                	add	a4,a4,a5
-+     ff4:	fae68ae3          	beq	a3,a4,fa8 <free+0x22>
-     p->s.ptr = bp->s.ptr;
--    100a:	e394                	sd	a3,0(a5)
-+     ff8:	e394                	sd	a3,0(a5)
-   } else
-     p->s.ptr = bp;
-   freep = p;
--    100c:	00001717          	auipc	a4,0x1
--    1010:	00f73223          	sd	a5,4(a4) # 2010 <freep>
-+     ffa:	00001717          	auipc	a4,0x1
-+     ffe:	00f73b23          	sd	a5,22(a4) # 2010 <freep>
- }
--    1014:	6422                	ld	s0,8(sp)
--    1016:	0141                	addi	sp,sp,16
--    1018:	8082                	ret
-+    1002:	6422                	ld	s0,8(sp)
-+    1004:	0141                	add	sp,sp,16
-+    1006:	8082                	ret
- 
--000000000000101a <malloc>:
-+0000000000001008 <malloc>:
-   return freep;
- }
- 
- void*
- malloc(uint nbytes)
- {
--    101a:	7139                	addi	sp,sp,-64
--    101c:	fc06                	sd	ra,56(sp)
--    101e:	f822                	sd	s0,48(sp)
--    1020:	f426                	sd	s1,40(sp)
--    1022:	ec4e                	sd	s3,24(sp)
--    1024:	0080                	addi	s0,sp,64
-+    1008:	7139                	add	sp,sp,-64
-+    100a:	fc06                	sd	ra,56(sp)
-+    100c:	f822                	sd	s0,48(sp)
-+    100e:	f426                	sd	s1,40(sp)
-+    1010:	f04a                	sd	s2,32(sp)
-+    1012:	ec4e                	sd	s3,24(sp)
-+    1014:	e852                	sd	s4,16(sp)
-+    1016:	e456                	sd	s5,8(sp)
-+    1018:	e05a                	sd	s6,0(sp)
-+    101a:	0080                	add	s0,sp,64
-   Header *p, *prevp;
-   uint nunits;
- 
-   nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;
--    1026:	02051493          	slli	s1,a0,0x20
--    102a:	9081                	srli	s1,s1,0x20
--    102c:	04bd                	addi	s1,s1,15
--    102e:	8091                	srli	s1,s1,0x4
--    1030:	0014899b          	addiw	s3,s1,1
--    1034:	0485                	addi	s1,s1,1
-+    101c:	02051493          	sll	s1,a0,0x20
-+    1020:	9081                	srl	s1,s1,0x20
-+    1022:	04bd                	add	s1,s1,15
-+    1024:	8091                	srl	s1,s1,0x4
-+    1026:	0014899b          	addw	s3,s1,1
-+    102a:	0485                	add	s1,s1,1
-   if((prevp = freep) == 0){
--    1036:	00001517          	auipc	a0,0x1
--    103a:	fda53503          	ld	a0,-38(a0) # 2010 <freep>
--    103e:	c915                	beqz	a0,1072 <malloc+0x58>
-+    102c:	00001517          	auipc	a0,0x1
-+    1030:	fe453503          	ld	a0,-28(a0) # 2010 <freep>
-+    1034:	c515                	beqz	a0,1060 <malloc+0x58>
-     base.s.ptr = freep = prevp = &base;
-     base.s.size = 0;
-   }
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
--    1040:	611c                	ld	a5,0(a0)
-+    1036:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
--    1042:	4798                	lw	a4,8(a5)
--    1044:	08977a63          	bgeu	a4,s1,10d8 <malloc+0xbe>
--    1048:	f04a                	sd	s2,32(sp)
--    104a:	e852                	sd	s4,16(sp)
--    104c:	e456                	sd	s5,8(sp)
--    104e:	e05a                	sd	s6,0(sp)
-+    1038:	4798                	lw	a4,8(a5)
-+    103a:	02977f63          	bgeu	a4,s1,1078 <malloc+0x70>
-   if(nu < 4096)
--    1050:	8a4e                	mv	s4,s3
--    1052:	0009871b          	sext.w	a4,s3
--    1056:	6685                	lui	a3,0x1
--    1058:	00d77363          	bgeu	a4,a3,105e <malloc+0x44>
--    105c:	6a05                	lui	s4,0x1
--    105e:	000a0b1b          	sext.w	s6,s4
-+    103e:	8a4e                	mv	s4,s3
-+    1040:	0009871b          	sext.w	a4,s3
-+    1044:	6685                	lui	a3,0x1
-+    1046:	00d77363          	bgeu	a4,a3,104c <malloc+0x44>
-+    104a:	6a05                	lui	s4,0x1
-+    104c:	000a0b1b          	sext.w	s6,s4
-   p = sbrk(nu * sizeof(Header));
--    1062:	004a1a1b          	slliw	s4,s4,0x4
-+    1050:	004a1a1b          	sllw	s4,s4,0x4
-         p->s.size = nunits;
-       }
-       freep = prevp;
-       return (void*)(p + 1);
-     }
-     if(p == freep)
--    1066:	00001917          	auipc	s2,0x1
--    106a:	faa90913          	addi	s2,s2,-86 # 2010 <freep>
-+    1054:	00001917          	auipc	s2,0x1
-+    1058:	fbc90913          	add	s2,s2,-68 # 2010 <freep>
-   if(p == (char*)-1)
--    106e:	5afd                	li	s5,-1
--    1070:	a081                	j	10b0 <malloc+0x96>
--    1072:	f04a                	sd	s2,32(sp)
--    1074:	e852                	sd	s4,16(sp)
--    1076:	e456                	sd	s5,8(sp)
--    1078:	e05a                	sd	s6,0(sp)
-+    105c:	5afd                	li	s5,-1
-+    105e:	a885                	j	10ce <malloc+0xc6>
-     base.s.ptr = freep = prevp = &base;
--    107a:	00001797          	auipc	a5,0x1
--    107e:	38e78793          	addi	a5,a5,910 # 2408 <base>
--    1082:	00001717          	auipc	a4,0x1
--    1086:	f8f73723          	sd	a5,-114(a4) # 2010 <freep>
--    108a:	e39c                	sd	a5,0(a5)
-+    1060:	00001797          	auipc	a5,0x1
-+    1064:	3a878793          	add	a5,a5,936 # 2408 <base>
-+    1068:	00001717          	auipc	a4,0x1
-+    106c:	faf73423          	sd	a5,-88(a4) # 2010 <freep>
-+    1070:	e39c                	sd	a5,0(a5)
-     base.s.size = 0;
--    108c:	0007a423          	sw	zero,8(a5)
-+    1072:	0007a423          	sw	zero,8(a5)
-     if(p->s.size >= nunits){
--    1090:	b7c1                	j	1050 <malloc+0x36>
-+    1076:	b7e1                	j	103e <malloc+0x36>
-+      if(p->s.size == nunits)
-+    1078:	02e48c63          	beq	s1,a4,10b0 <malloc+0xa8>
-+        p->s.size -= nunits;
-+    107c:	4137073b          	subw	a4,a4,s3
-+    1080:	c798                	sw	a4,8(a5)
-+        p += p->s.size;
-+    1082:	02071693          	sll	a3,a4,0x20
-+    1086:	01c6d713          	srl	a4,a3,0x1c
-+    108a:	97ba                	add	a5,a5,a4
-+        p->s.size = nunits;
-+    108c:	0137a423          	sw	s3,8(a5)
-+      freep = prevp;
-+    1090:	00001717          	auipc	a4,0x1
-+    1094:	f8a73023          	sd	a0,-128(a4) # 2010 <freep>
-+      return (void*)(p + 1);
-+    1098:	01078513          	add	a0,a5,16
-+      if((p = morecore(nunits)) == 0)
-+        return 0;
-+  }
-+}
-+    109c:	70e2                	ld	ra,56(sp)
-+    109e:	7442                	ld	s0,48(sp)
-+    10a0:	74a2                	ld	s1,40(sp)
-+    10a2:	7902                	ld	s2,32(sp)
-+    10a4:	69e2                	ld	s3,24(sp)
-+    10a6:	6a42                	ld	s4,16(sp)
-+    10a8:	6aa2                	ld	s5,8(sp)
-+    10aa:	6b02                	ld	s6,0(sp)
-+    10ac:	6121                	add	sp,sp,64
-+    10ae:	8082                	ret
-         prevp->s.ptr = p->s.ptr;
--    1092:	6398                	ld	a4,0(a5)
--    1094:	e118                	sd	a4,0(a0)
--    1096:	a8a9                	j	10f0 <malloc+0xd6>
-+    10b0:	6398                	ld	a4,0(a5)
-+    10b2:	e118                	sd	a4,0(a0)
-+    10b4:	bff1                	j	1090 <malloc+0x88>
-   hp->s.size = nu;
--    1098:	01652423          	sw	s6,8(a0)
-+    10b6:	01652423          	sw	s6,8(a0)
-   free((void*)(hp + 1));
--    109c:	0541                	addi	a0,a0,16
--    109e:	efbff0ef          	jal	f98 <free>
-+    10ba:	0541                	add	a0,a0,16
-+    10bc:	ecbff0ef          	jal	f86 <free>
-   return freep;
--    10a2:	00093503          	ld	a0,0(s2)
-+    10c0:	00093503          	ld	a0,0(s2)
-       if((p = morecore(nunits)) == 0)
--    10a6:	c12d                	beqz	a0,1108 <malloc+0xee>
-+    10c4:	dd61                	beqz	a0,109c <malloc+0x94>
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
--    10a8:	611c                	ld	a5,0(a0)
-+    10c6:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
--    10aa:	4798                	lw	a4,8(a5)
--    10ac:	02977263          	bgeu	a4,s1,10d0 <malloc+0xb6>
-+    10c8:	4798                	lw	a4,8(a5)
-+    10ca:	fa9777e3          	bgeu	a4,s1,1078 <malloc+0x70>
-     if(p == freep)
--    10b0:	00093703          	ld	a4,0(s2)
--    10b4:	853e                	mv	a0,a5
--    10b6:	fef719e3          	bne	a4,a5,10a8 <malloc+0x8e>
-+    10ce:	00093703          	ld	a4,0(s2)
-+    10d2:	853e                	mv	a0,a5
-+    10d4:	fef719e3          	bne	a4,a5,10c6 <malloc+0xbe>
-   p = sbrk(nu * sizeof(Header));
--    10ba:	8552                	mv	a0,s4
--    10bc:	b1bff0ef          	jal	bd6 <sbrk>
-+    10d8:	8552                	mv	a0,s4
-+    10da:	ae9ff0ef          	jal	bc2 <sbrk>
-   if(p == (char*)-1)
--    10c0:	fd551ce3          	bne	a0,s5,1098 <malloc+0x7e>
-+    10de:	fd551ce3          	bne	a0,s5,10b6 <malloc+0xae>
-         return 0;
--    10c4:	4501                	li	a0,0
--    10c6:	7902                	ld	s2,32(sp)
--    10c8:	6a42                	ld	s4,16(sp)
--    10ca:	6aa2                	ld	s5,8(sp)
--    10cc:	6b02                	ld	s6,0(sp)
--    10ce:	a03d                	j	10fc <malloc+0xe2>
--    10d0:	7902                	ld	s2,32(sp)
--    10d2:	6a42                	ld	s4,16(sp)
--    10d4:	6aa2                	ld	s5,8(sp)
--    10d6:	6b02                	ld	s6,0(sp)
--      if(p->s.size == nunits)
--    10d8:	fae48de3          	beq	s1,a4,1092 <malloc+0x78>
--        p->s.size -= nunits;
--    10dc:	4137073b          	subw	a4,a4,s3
--    10e0:	c798                	sw	a4,8(a5)
--        p += p->s.size;
--    10e2:	02071693          	slli	a3,a4,0x20
--    10e6:	01c6d713          	srli	a4,a3,0x1c
--    10ea:	97ba                	add	a5,a5,a4
--        p->s.size = nunits;
--    10ec:	0137a423          	sw	s3,8(a5)
--      freep = prevp;
--    10f0:	00001717          	auipc	a4,0x1
--    10f4:	f2a73023          	sd	a0,-224(a4) # 2010 <freep>
--      return (void*)(p + 1);
--    10f8:	01078513          	addi	a0,a5,16
--  }
--}
--    10fc:	70e2                	ld	ra,56(sp)
--    10fe:	7442                	ld	s0,48(sp)
--    1100:	74a2                	ld	s1,40(sp)
--    1102:	69e2                	ld	s3,24(sp)
--    1104:	6121                	addi	sp,sp,64
--    1106:	8082                	ret
--    1108:	7902                	ld	s2,32(sp)
--    110a:	6a42                	ld	s4,16(sp)
--    110c:	6aa2                	ld	s5,8(sp)
--    110e:	6b02                	ld	s6,0(sp)
--    1110:	b7f5                	j	10fc <malloc+0xe2>
-+    10e2:	4501                	li	a0,0
-+    10e4:	bf65                	j	109c <malloc+0x94>
-diff --git a/Assignments/Assignment-6/xv6/user/grind.d b/Assignments/Assignment-6/xv6/user/grind.d
-index d169e73..2b8914b 100644
---- a/Assignments/Assignment-6/xv6/user/grind.d
-+++ b/Assignments/Assignment-6/xv6/user/grind.d
-@@ -1,4 +1,3 @@
--user/grind.o: user/grind.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/param.h kernel/types.h kernel/stat.h user/user.h kernel/fs.h \
-- kernel/fcntl.h kernel/syscall.h kernel/memlayout.h kernel/riscv.h
-+user/grind.o: user/grind.c kernel/param.h kernel/types.h kernel/stat.h \
-+ user/user.h kernel/fs.h kernel/fcntl.h kernel/syscall.h \
-+ kernel/memlayout.h kernel/riscv.h
-diff --git a/Assignments/Assignment-6/xv6/user/grind.o b/Assignments/Assignment-6/xv6/user/grind.o
-index 75779cd..8c7e430 100644
-Binary files a/Assignments/Assignment-6/xv6/user/grind.o and b/Assignments/Assignment-6/xv6/user/grind.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/grind.sym b/Assignments/Assignment-6/xv6/user/grind.sym
-index b957ec3..1fa42cc 100644
---- a/Assignments/Assignment-6/xv6/user/grind.sym
-+++ b/Assignments/Assignment-6/xv6/user/grind.sym
-@@ -1,6 +1,5 @@
- 0000000000000000 .text
--0000000000001118 .rodata
--00000000000014a8 .eh_frame
-+00000000000010e8 .rodata
- 0000000000002000 .data
- 0000000000002010 .bss
- 0000000000000000 .debug_info
-@@ -12,58 +11,59 @@
- 0000000000000000 .debug_str
- 0000000000000000 .comment
- 0000000000000000 .riscv.attributes
-+0000000000000000 .debug_frame
- 0000000000000000 grind.c
- 0000000000002020 buf.0
- 0000000000000000 ulib.c
- 0000000000000000 usys.o
- 0000000000000000 printf.c
--0000000000000bee putc
--0000000000000c0c printint
--0000000000001490 digits
-+0000000000000bda putc
-+0000000000000bf8 printint
-+0000000000001440 digits
- 0000000000000000 umalloc.c
- 0000000000002010 freep
- 0000000000002408 base
--00000000000008f6 strcpy
--0000000000000f66 printf
-+00000000000008e2 strcpy
-+0000000000000f54 printf
- 0000000000000000 do_rand
--0000000000000aa0 memmove
--0000000000000b96 mknod
--00000000000009ae gets
--0000000000000bce getpid
--0000000000000b32 memcpy
--000000000000101a malloc
--0000000000000bde sleep
--0000000000000b5e pipe
-+0000000000000a8c memmove
-+0000000000000b82 mknod
-+000000000000099a gets
-+0000000000000bba getpid
-+0000000000000b1e memcpy
-+0000000000001008 malloc
-+0000000000000bca sleep
-+0000000000000b4a pipe
- 0000000000000074 go
--00000000000007e2 iter
--0000000000000b6e write
--0000000000000ba6 fstat
--0000000000000f3c fprintf
--0000000000000b7e kill
--0000000000000cb4 vprintf
--0000000000000bbe chdir
--0000000000000b86 exec
--0000000000000b56 wait
-+00000000000007d4 iter
-+0000000000000b5a write
-+0000000000000b92 fstat
-+0000000000000f2a fprintf
-+0000000000000b6a kill
-+0000000000000ca0 vprintf
-+0000000000000baa chdir
-+0000000000000b72 exec
-+0000000000000b42 wait
- 0000000000000058 rand
--0000000000000b66 read
--0000000000000b9e unlink
--0000000000000af8 memcmp
--0000000000000b46 fork
-+0000000000000b52 read
-+0000000000000b8a unlink
-+0000000000000ae4 memcmp
-+0000000000000b32 fork
- 0000000000002000 rand_next
--0000000000000bd6 sbrk
--0000000000000be6 uptime
--0000000000000968 memset
--00000000000008ae main
--0000000000000912 strcmp
--0000000000000bc6 dup
--0000000000000a1e stat
--0000000000000bae link
--0000000000000b4e exit
--00000000000008e4 start
--0000000000000a58 atoi
--000000000000093e strlen
--0000000000000b8e open
--000000000000098a strchr
--0000000000000bb6 mkdir
--0000000000000b76 close
--0000000000000f98 free
-+0000000000000bc2 sbrk
-+0000000000000bd2 uptime
-+0000000000000954 memset
-+000000000000089a main
-+00000000000008fe strcmp
-+0000000000000bb2 dup
-+0000000000000a0a stat
-+0000000000000b9a link
-+0000000000000b3a exit
-+00000000000008d0 start
-+0000000000000a44 atoi
-+000000000000092a strlen
-+0000000000000b7a open
-+0000000000000976 strchr
-+0000000000000ba2 mkdir
-+0000000000000b62 close
-+0000000000000f86 free
-diff --git a/Assignments/Assignment-6/xv6/user/init.asm b/Assignments/Assignment-6/xv6/user/init.asm
-index 8174511..4e9ee20 100644
---- a/Assignments/Assignment-6/xv6/user/init.asm
-+++ b/Assignments/Assignment-6/xv6/user/init.asm
-@@ -11,18 +11,18 @@ char *argv[] = { "sh", 0 };
- int
- main(void)
- {
--   0:	1101                	addi	sp,sp,-32
-+   0:	1101                	add	sp,sp,-32
-    2:	ec06                	sd	ra,24(sp)
-    4:	e822                	sd	s0,16(sp)
-    6:	e426                	sd	s1,8(sp)
-    8:	e04a                	sd	s2,0(sp)
--   a:	1000                	addi	s0,sp,32
-+   a:	1000                	add	s0,sp,32
-   int pid, wpid;
- 
-   if(open("console", O_RDWR) < 0){
-    c:	4589                	li	a1,2
-    e:	00001517          	auipc	a0,0x1
--  12:	8e250513          	addi	a0,a0,-1822 # 8f0 <malloc+0xfe>
-+  12:	8d250513          	add	a0,a0,-1838 # 8e0 <malloc+0xec>
-   16:	350000ef          	jal	366 <open>
-   1a:	04054563          	bltz	a0,64 <main+0x64>
-     mknod("console", CONSOLE, 0);
-@@ -38,9 +38,9 @@ main(void)
-   for(;;){
-     printf("init: starting sh\n");
-   2a:	00001917          	auipc	s2,0x1
--  2e:	8ce90913          	addi	s2,s2,-1842 # 8f8 <malloc+0x106>
-+  2e:	8be90913          	add	s2,s2,-1858 # 8e8 <malloc+0xf4>
-   32:	854a                	mv	a0,s2
--  34:	70a000ef          	jal	73e <printf>
-+  34:	70c000ef          	jal	740 <printf>
-     pid = fork();
-   38:	2e6000ef          	jal	31e <fork>
-   3c:	84aa                	mv	s1,a0
-@@ -67,8 +67,8 @@ main(void)
-   4e:	fe055be3          	bgez	a0,44 <main+0x44>
-         printf("init: wait returned an error\n");
-   52:	00001517          	auipc	a0,0x1
--  56:	8f650513          	addi	a0,a0,-1802 # 948 <malloc+0x156>
--  5a:	6e4000ef          	jal	73e <printf>
-+  56:	8e650513          	add	a0,a0,-1818 # 938 <malloc+0x144>
-+  5a:	6e6000ef          	jal	740 <printf>
-         exit(1);
-   5e:	4505                	li	a0,1
-   60:	2c6000ef          	jal	326 <exit>
-@@ -76,31 +76,31 @@ main(void)
-   64:	4601                	li	a2,0
-   66:	4585                	li	a1,1
-   68:	00001517          	auipc	a0,0x1
--  6c:	88850513          	addi	a0,a0,-1912 # 8f0 <malloc+0xfe>
-+  6c:	87850513          	add	a0,a0,-1928 # 8e0 <malloc+0xec>
-   70:	2fe000ef          	jal	36e <mknod>
-     open("console", O_RDWR);
-   74:	4589                	li	a1,2
-   76:	00001517          	auipc	a0,0x1
--  7a:	87a50513          	addi	a0,a0,-1926 # 8f0 <malloc+0xfe>
-+  7a:	86a50513          	add	a0,a0,-1942 # 8e0 <malloc+0xec>
-   7e:	2e8000ef          	jal	366 <open>
-   82:	bf71                	j	1e <main+0x1e>
-       printf("init: fork failed\n");
-   84:	00001517          	auipc	a0,0x1
--  88:	88c50513          	addi	a0,a0,-1908 # 910 <malloc+0x11e>
--  8c:	6b2000ef          	jal	73e <printf>
-+  88:	87c50513          	add	a0,a0,-1924 # 900 <malloc+0x10c>
-+  8c:	6b4000ef          	jal	740 <printf>
-       exit(1);
-   90:	4505                	li	a0,1
-   92:	294000ef          	jal	326 <exit>
-       exec("sh", argv);
-   96:	00001597          	auipc	a1,0x1
--  9a:	f6a58593          	addi	a1,a1,-150 # 1000 <argv>
-+  9a:	f6a58593          	add	a1,a1,-150 # 1000 <argv>
-   9e:	00001517          	auipc	a0,0x1
--  a2:	88a50513          	addi	a0,a0,-1910 # 928 <malloc+0x136>
-+  a2:	87a50513          	add	a0,a0,-1926 # 918 <malloc+0x124>
-   a6:	2b8000ef          	jal	35e <exec>
-       printf("init: exec sh failed\n");
-   aa:	00001517          	auipc	a0,0x1
--  ae:	88650513          	addi	a0,a0,-1914 # 930 <malloc+0x13e>
--  b2:	68c000ef          	jal	73e <printf>
-+  ae:	87650513          	add	a0,a0,-1930 # 920 <malloc+0x12c>
-+  b2:	68e000ef          	jal	740 <printf>
-       exit(1);
-   b6:	4505                	li	a0,1
-   b8:	26e000ef          	jal	326 <exit>
-@@ -112,10 +112,10 @@ main(void)
- void
- start()
- {
--  bc:	1141                	addi	sp,sp,-16
-+  bc:	1141                	add	sp,sp,-16
-   be:	e406                	sd	ra,8(sp)
-   c0:	e022                	sd	s0,0(sp)
--  c2:	0800                	addi	s0,sp,16
-+  c2:	0800                	add	s0,sp,16
-   extern int main();
-   main();
-   c4:	f3dff0ef          	jal	0 <main>
-@@ -129,16 +129,16 @@ start()
- char*
- strcpy(char *s, const char *t)
- {
--  ce:	1141                	addi	sp,sp,-16
-+  ce:	1141                	add	sp,sp,-16
-   d0:	e422                	sd	s0,8(sp)
--  d2:	0800                	addi	s0,sp,16
-+  d2:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
-   d4:	87aa                	mv	a5,a0
--  d6:	0585                	addi	a1,a1,1
--  d8:	0785                	addi	a5,a5,1
-+  d6:	0585                	add	a1,a1,1
-+  d8:	0785                	add	a5,a5,1
-   da:	fff5c703          	lbu	a4,-1(a1)
-   de:	fee78fa3          	sb	a4,-1(a5)
-   e2:	fb75                	bnez	a4,d6 <strcpy+0x8>
-@@ -146,7 +146,7 @@ strcpy(char *s, const char *t)
-   return os;
- }
-   e4:	6422                	ld	s0,8(sp)
--  e6:	0141                	addi	sp,sp,16
-+  e6:	0141                	add	sp,sp,16
-   e8:	8082                	ret
- 
- 00000000000000ea <strcmp>:
-@@ -154,17 +154,17 @@ strcpy(char *s, const char *t)
- int
- strcmp(const char *p, const char *q)
- {
--  ea:	1141                	addi	sp,sp,-16
-+  ea:	1141                	add	sp,sp,-16
-   ec:	e422                	sd	s0,8(sp)
--  ee:	0800                	addi	s0,sp,16
-+  ee:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
-   f0:	00054783          	lbu	a5,0(a0)
-   f4:	cb91                	beqz	a5,108 <strcmp+0x1e>
-   f6:	0005c703          	lbu	a4,0(a1)
-   fa:	00f71763          	bne	a4,a5,108 <strcmp+0x1e>
-     p++, q++;
--  fe:	0505                	addi	a0,a0,1
-- 100:	0585                	addi	a1,a1,1
-+  fe:	0505                	add	a0,a0,1
-+ 100:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
-  102:	00054783          	lbu	a5,0(a0)
-  106:	fbe5                	bnez	a5,f6 <strcmp+0xc>
-@@ -173,7 +173,7 @@ strcmp(const char *p, const char *q)
- }
-  10c:	40a7853b          	subw	a0,a5,a0
-  110:	6422                	ld	s0,8(sp)
-- 112:	0141                	addi	sp,sp,16
-+ 112:	0141                	add	sp,sp,16
-  114:	8082                	ret
- 
- 0000000000000116 <strlen>:
-@@ -181,27 +181,27 @@ strcmp(const char *p, const char *q)
- uint
- strlen(const char *s)
- {
-- 116:	1141                	addi	sp,sp,-16
-+ 116:	1141                	add	sp,sp,-16
-  118:	e422                	sd	s0,8(sp)
-- 11a:	0800                	addi	s0,sp,16
-+ 11a:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
-  11c:	00054783          	lbu	a5,0(a0)
-  120:	cf91                	beqz	a5,13c <strlen+0x26>
-- 122:	0505                	addi	a0,a0,1
-+ 122:	0505                	add	a0,a0,1
-  124:	87aa                	mv	a5,a0
-  126:	86be                	mv	a3,a5
-- 128:	0785                	addi	a5,a5,1
-+ 128:	0785                	add	a5,a5,1
-  12a:	fff7c703          	lbu	a4,-1(a5)
-  12e:	ff65                	bnez	a4,126 <strlen+0x10>
-  130:	40a6853b          	subw	a0,a3,a0
-- 134:	2505                	addiw	a0,a0,1
-+ 134:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
-  136:	6422                	ld	s0,8(sp)
-- 138:	0141                	addi	sp,sp,16
-+ 138:	0141                	add	sp,sp,16
-  13a:	8082                	ret
-   for(n = 0; s[n]; n++)
-  13c:	4501                	li	a0,0
-@@ -212,27 +212,27 @@ strlen(const char *s)
- void*
- memset(void *dst, int c, uint n)
- {
-- 140:	1141                	addi	sp,sp,-16
-+ 140:	1141                	add	sp,sp,-16
-  142:	e422                	sd	s0,8(sp)
-- 144:	0800                	addi	s0,sp,16
-+ 144:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
-  146:	ca19                	beqz	a2,15c <memset+0x1c>
-  148:	87aa                	mv	a5,a0
-- 14a:	1602                	slli	a2,a2,0x20
-- 14c:	9201                	srli	a2,a2,0x20
-+ 14a:	1602                	sll	a2,a2,0x20
-+ 14c:	9201                	srl	a2,a2,0x20
-  14e:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
-  152:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
-- 156:	0785                	addi	a5,a5,1
-+ 156:	0785                	add	a5,a5,1
-  158:	fee79de3          	bne	a5,a4,152 <memset+0x12>
-   }
-   return dst;
- }
-  15c:	6422                	ld	s0,8(sp)
-- 15e:	0141                	addi	sp,sp,16
-+ 15e:	0141                	add	sp,sp,16
-  160:	8082                	ret
- 
- 0000000000000162 <strchr>:
-@@ -240,16 +240,16 @@ memset(void *dst, int c, uint n)
- char*
- strchr(const char *s, char c)
- {
-- 162:	1141                	addi	sp,sp,-16
-+ 162:	1141                	add	sp,sp,-16
-  164:	e422                	sd	s0,8(sp)
-- 166:	0800                	addi	s0,sp,16
-+ 166:	0800                	add	s0,sp,16
-   for(; *s; s++)
-  168:	00054783          	lbu	a5,0(a0)
-  16c:	cb99                	beqz	a5,182 <strchr+0x20>
-     if(*s == c)
-  16e:	00f58763          	beq	a1,a5,17c <strchr+0x1a>
-   for(; *s; s++)
-- 172:	0505                	addi	a0,a0,1
-+ 172:	0505                	add	a0,a0,1
-  174:	00054783          	lbu	a5,0(a0)
-  178:	fbfd                	bnez	a5,16e <strchr+0xc>
-       return (char*)s;
-@@ -257,7 +257,7 @@ strchr(const char *s, char c)
-  17a:	4501                	li	a0,0
- }
-  17c:	6422                	ld	s0,8(sp)
-- 17e:	0141                	addi	sp,sp,16
-+ 17e:	0141                	add	sp,sp,16
-  180:	8082                	ret
-   return 0;
-  182:	4501                	li	a0,0
-@@ -268,7 +268,7 @@ strchr(const char *s, char c)
- char*
- gets(char *buf, int max)
- {
-- 186:	711d                	addi	sp,sp,-96
-+ 186:	711d                	add	sp,sp,-96
-  188:	ec86                	sd	ra,88(sp)
-  18a:	e8a2                	sd	s0,80(sp)
-  18c:	e4a6                	sd	s1,72(sp)
-@@ -278,7 +278,7 @@ gets(char *buf, int max)
-  194:	f456                	sd	s5,40(sp)
-  196:	f05a                	sd	s6,32(sp)
-  198:	ec5e                	sd	s7,24(sp)
-- 19a:	1080                	addi	s0,sp,96
-+ 19a:	1080                	add	s0,sp,96
-  19c:	8baa                	mv	s7,a0
-  19e:	8a2e                	mv	s4,a1
-   int i, cc;
-@@ -296,11 +296,11 @@ gets(char *buf, int max)
-  1a6:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
-  1a8:	89a6                	mv	s3,s1
-- 1aa:	2485                	addiw	s1,s1,1
-+ 1aa:	2485                	addw	s1,s1,1
-  1ac:	0344d663          	bge	s1,s4,1d8 <gets+0x52>
-     cc = read(0, &c, 1);
-  1b0:	4605                	li	a2,1
-- 1b2:	faf40593          	addi	a1,s0,-81
-+ 1b2:	faf40593          	add	a1,s0,-81
-  1b6:	4501                	li	a0,0
-  1b8:	186000ef          	jal	33e <read>
-     if(cc < 1)
-@@ -310,9 +310,9 @@ gets(char *buf, int max)
-  1c4:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
-  1c8:	01578763          	beq	a5,s5,1d6 <gets+0x50>
-- 1cc:	0905                	addi	s2,s2,1
-+ 1cc:	0905                	add	s2,s2,1
-  1ce:	fd679de3          	bne	a5,s6,1a8 <gets+0x22>
--    buf[i++] = c;
-+  for(i=0; i+1 < max; ){
-  1d2:	89a6                	mv	s3,s1
-  1d4:	a011                	j	1d8 <gets+0x52>
-  1d6:	89a6                	mv	s3,s1
-@@ -333,7 +333,7 @@ gets(char *buf, int max)
-  1ec:	7aa2                	ld	s5,40(sp)
-  1ee:	7b02                	ld	s6,32(sp)
-  1f0:	6be2                	ld	s7,24(sp)
-- 1f2:	6125                	addi	sp,sp,96
-+ 1f2:	6125                	add	sp,sp,96
-  1f4:	8082                	ret
- 
- 00000000000001f6 <stat>:
-@@ -341,21 +341,21 @@ gets(char *buf, int max)
- int
- stat(const char *n, struct stat *st)
- {
-- 1f6:	1101                	addi	sp,sp,-32
-+ 1f6:	1101                	add	sp,sp,-32
-  1f8:	ec06                	sd	ra,24(sp)
-  1fa:	e822                	sd	s0,16(sp)
-- 1fc:	e04a                	sd	s2,0(sp)
-- 1fe:	1000                	addi	s0,sp,32
-- 200:	892e                	mv	s2,a1
-+ 1fc:	e426                	sd	s1,8(sp)
-+ 1fe:	e04a                	sd	s2,0(sp)
-+ 200:	1000                	add	s0,sp,32
-+ 202:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
-- 202:	4581                	li	a1,0
-- 204:	162000ef          	jal	366 <open>
-+ 204:	4581                	li	a1,0
-+ 206:	160000ef          	jal	366 <open>
-   if(fd < 0)
-- 208:	02054263          	bltz	a0,22c <stat+0x36>
-- 20c:	e426                	sd	s1,8(sp)
-+ 20a:	02054163          	bltz	a0,22c <stat+0x36>
-  20e:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
-@@ -366,32 +366,32 @@ stat(const char *n, struct stat *st)
-  218:	8526                	mv	a0,s1
-  21a:	134000ef          	jal	34e <close>
-   return r;
-- 21e:	64a2                	ld	s1,8(sp)
- }
-- 220:	854a                	mv	a0,s2
-- 222:	60e2                	ld	ra,24(sp)
-- 224:	6442                	ld	s0,16(sp)
-+ 21e:	854a                	mv	a0,s2
-+ 220:	60e2                	ld	ra,24(sp)
-+ 222:	6442                	ld	s0,16(sp)
-+ 224:	64a2                	ld	s1,8(sp)
-  226:	6902                	ld	s2,0(sp)
-- 228:	6105                	addi	sp,sp,32
-+ 228:	6105                	add	sp,sp,32
-  22a:	8082                	ret
-     return -1;
-  22c:	597d                	li	s2,-1
-- 22e:	bfcd                	j	220 <stat+0x2a>
-+ 22e:	bfc5                	j	21e <stat+0x28>
- 
- 0000000000000230 <atoi>:
- 
- int
- atoi(const char *s)
- {
-- 230:	1141                	addi	sp,sp,-16
-+ 230:	1141                	add	sp,sp,-16
-  232:	e422                	sd	s0,8(sp)
-- 234:	0800                	addi	s0,sp,16
-+ 234:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
-  236:	00054683          	lbu	a3,0(a0)
-- 23a:	fd06879b          	addiw	a5,a3,-48
-+ 23a:	fd06879b          	addw	a5,a3,-48
-  23e:	0ff7f793          	zext.b	a5,a5
-  242:	4625                	li	a2,9
-  244:	02f66863          	bltu	a2,a5,274 <atoi+0x44>
-@@ -399,21 +399,21 @@ atoi(const char *s)
-   n = 0;
-  24a:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
-- 24c:	0705                	addi	a4,a4,1
-- 24e:	0025179b          	slliw	a5,a0,0x2
-+ 24c:	0705                	add	a4,a4,1
-+ 24e:	0025179b          	sllw	a5,a0,0x2
-  252:	9fa9                	addw	a5,a5,a0
-- 254:	0017979b          	slliw	a5,a5,0x1
-+ 254:	0017979b          	sllw	a5,a5,0x1
-  258:	9fb5                	addw	a5,a5,a3
-- 25a:	fd07851b          	addiw	a0,a5,-48
-+ 25a:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
-  25e:	00074683          	lbu	a3,0(a4)
-- 262:	fd06879b          	addiw	a5,a3,-48
-+ 262:	fd06879b          	addw	a5,a3,-48
-  266:	0ff7f793          	zext.b	a5,a5
-  26a:	fef671e3          	bgeu	a2,a5,24c <atoi+0x1c>
-   return n;
- }
-  26e:	6422                	ld	s0,8(sp)
-- 270:	0141                	addi	sp,sp,16
-+ 270:	0141                	add	sp,sp,16
-  272:	8082                	ret
-   n = 0;
-  274:	4501                	li	a0,0
-@@ -424,9 +424,9 @@ atoi(const char *s)
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
-- 278:	1141                	addi	sp,sp,-16
-+ 278:	1141                	add	sp,sp,-16
-  27a:	e422                	sd	s0,8(sp)
-- 27c:	0800                	addi	s0,sp,16
-+ 27c:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-@@ -436,18 +436,18 @@ memmove(void *vdst, const void *vsrc, int n)
-  27e:	02b57463          	bgeu	a0,a1,2a6 <memmove+0x2e>
-     while(n-- > 0)
-  282:	00c05f63          	blez	a2,2a0 <memmove+0x28>
-- 286:	1602                	slli	a2,a2,0x20
-- 288:	9201                	srli	a2,a2,0x20
-+ 286:	1602                	sll	a2,a2,0x20
-+ 288:	9201                	srl	a2,a2,0x20
-  28a:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
-  28e:	872a                	mv	a4,a0
-       *dst++ = *src++;
-- 290:	0585                	addi	a1,a1,1
-- 292:	0705                	addi	a4,a4,1
-+ 290:	0585                	add	a1,a1,1
-+ 292:	0705                	add	a4,a4,1
-  294:	fff5c683          	lbu	a3,-1(a1)
-  298:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
-- 29c:	fef71ae3          	bne	a4,a5,290 <memmove+0x18>
-+ 29c:	fee79ae3          	bne	a5,a4,290 <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-@@ -455,7 +455,7 @@ memmove(void *vdst, const void *vsrc, int n)
-   return vdst;
- }
-  2a0:	6422                	ld	s0,8(sp)
-- 2a2:	0141                	addi	sp,sp,16
-+ 2a2:	0141                	add	sp,sp,16
-  2a4:	8082                	ret
-     dst += n;
-  2a6:	00c50733          	add	a4,a0,a2
-@@ -463,14 +463,14 @@ memmove(void *vdst, const void *vsrc, int n)
-  2aa:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
-  2ac:	fec05ae3          	blez	a2,2a0 <memmove+0x28>
-- 2b0:	fff6079b          	addiw	a5,a2,-1
-- 2b4:	1782                	slli	a5,a5,0x20
-- 2b6:	9381                	srli	a5,a5,0x20
-+ 2b0:	fff6079b          	addw	a5,a2,-1
-+ 2b4:	1782                	sll	a5,a5,0x20
-+ 2b6:	9381                	srl	a5,a5,0x20
-  2b8:	fff7c793          	not	a5,a5
-  2bc:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
-- 2be:	15fd                	addi	a1,a1,-1
-- 2c0:	177d                	addi	a4,a4,-1
-+ 2be:	15fd                	add	a1,a1,-1
-+ 2c0:	177d                	add	a4,a4,-1
-  2c2:	0005c683          	lbu	a3,0(a1)
-  2c6:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
-@@ -482,16 +482,16 @@ memmove(void *vdst, const void *vsrc, int n)
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
-- 2d0:	1141                	addi	sp,sp,-16
-+ 2d0:	1141                	add	sp,sp,-16
-  2d2:	e422                	sd	s0,8(sp)
-- 2d4:	0800                	addi	s0,sp,16
-+ 2d4:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
-  2d6:	ca05                	beqz	a2,306 <memcmp+0x36>
-- 2d8:	fff6069b          	addiw	a3,a2,-1
-- 2dc:	1682                	slli	a3,a3,0x20
-- 2de:	9281                	srli	a3,a3,0x20
-- 2e0:	0685                	addi	a3,a3,1
-+ 2d8:	fff6069b          	addw	a3,a2,-1
-+ 2dc:	1682                	sll	a3,a3,0x20
-+ 2de:	9281                	srl	a3,a3,0x20
-+ 2e0:	0685                	add	a3,a3,1
-  2e2:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
-  2e4:	00054783          	lbu	a5,0(a0)
-@@ -500,9 +500,9 @@ memcmp(const void *s1, const void *s2, uint n)
-       return *p1 - *p2;
-     }
-     p1++;
-- 2f0:	0505                	addi	a0,a0,1
-+ 2f0:	0505                	add	a0,a0,1
-     p2++;
-- 2f2:	0585                	addi	a1,a1,1
-+ 2f2:	0585                	add	a1,a1,1
-   while (n-- > 0) {
-  2f4:	fed518e3          	bne	a0,a3,2e4 <memcmp+0x14>
-   }
-@@ -513,7 +513,7 @@ memcmp(const void *s1, const void *s2, uint n)
-  2fc:	40e7853b          	subw	a0,a5,a4
- }
-  300:	6422                	ld	s0,8(sp)
-- 302:	0141                	addi	sp,sp,16
-+ 302:	0141                	add	sp,sp,16
-  304:	8082                	ret
-   return 0;
-  306:	4501                	li	a0,0
-@@ -524,16 +524,16 @@ memcmp(const void *s1, const void *s2, uint n)
- void *
- memcpy(void *dst, const void *src, uint n)
- {
-- 30a:	1141                	addi	sp,sp,-16
-+ 30a:	1141                	add	sp,sp,-16
-  30c:	e406                	sd	ra,8(sp)
-  30e:	e022                	sd	s0,0(sp)
-- 310:	0800                	addi	s0,sp,16
-+ 310:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
-  312:	f67ff0ef          	jal	278 <memmove>
- }
-  316:	60a2                	ld	ra,8(sp)
-  318:	6402                	ld	s0,0(sp)
-- 31a:	0141                	addi	sp,sp,16
-+ 31a:	0141                	add	sp,sp,16
-  31c:	8082                	ret
- 
- 000000000000031e <fork>:
-@@ -755,19 +755,19 @@ static char digits[] = "0123456789ABCDEF";
- static void
- putc(int fd, char c)
- {
-- 3c6:	1101                	addi	sp,sp,-32
-+ 3c6:	1101                	add	sp,sp,-32
-  3c8:	ec06                	sd	ra,24(sp)
-  3ca:	e822                	sd	s0,16(sp)
-- 3cc:	1000                	addi	s0,sp,32
-+ 3cc:	1000                	add	s0,sp,32
-  3ce:	feb407a3          	sb	a1,-17(s0)
-   write(fd, &c, 1);
-  3d2:	4605                	li	a2,1
-- 3d4:	fef40593          	addi	a1,s0,-17
-+ 3d4:	fef40593          	add	a1,s0,-17
-  3d8:	f6fff0ef          	jal	346 <write>
- }
-  3dc:	60e2                	ld	ra,24(sp)
-  3de:	6442                	ld	s0,16(sp)
-- 3e0:	6105                	addi	sp,sp,32
-+ 3e0:	6105                	add	sp,sp,32
-  3e2:	8082                	ret
- 
- 00000000000003e4 <printint>:
-@@ -775,92 +775,92 @@ putc(int fd, char c)
- static void
- printint(int fd, int xx, int base, int sgn)
- {
-- 3e4:	7139                	addi	sp,sp,-64
-+ 3e4:	7139                	add	sp,sp,-64
-  3e6:	fc06                	sd	ra,56(sp)
-  3e8:	f822                	sd	s0,48(sp)
-  3ea:	f426                	sd	s1,40(sp)
-- 3ec:	0080                	addi	s0,sp,64
-- 3ee:	84aa                	mv	s1,a0
-+ 3ec:	f04a                	sd	s2,32(sp)
-+ 3ee:	ec4e                	sd	s3,24(sp)
-+ 3f0:	0080                	add	s0,sp,64
-+ 3f2:	84aa                	mv	s1,a0
-   char buf[16];
-   int i, neg;
-   uint x;
- 
-   neg = 0;
-   if(sgn && xx < 0){
-- 3f0:	c299                	beqz	a3,3f6 <printint+0x12>
-- 3f2:	0805c963          	bltz	a1,484 <printint+0xa0>
-+ 3f4:	c299                	beqz	a3,3fa <printint+0x16>
-+ 3f6:	0805c763          	bltz	a1,484 <printint+0xa0>
-     neg = 1;
-     x = -xx;
-   } else {
-     x = xx;
-- 3f6:	2581                	sext.w	a1,a1
-+ 3fa:	2581                	sext.w	a1,a1
-   neg = 0;
-- 3f8:	4881                	li	a7,0
-- 3fa:	fc040693          	addi	a3,s0,-64
-+ 3fc:	4881                	li	a7,0
-+ 3fe:	fc040693          	add	a3,s0,-64
-   }
- 
-   i = 0;
-- 3fe:	4701                	li	a4,0
-+ 402:	4701                	li	a4,0
-   do{
-     buf[i++] = digits[x % base];
-- 400:	2601                	sext.w	a2,a2
-- 402:	00000517          	auipc	a0,0x0
-- 406:	56e50513          	addi	a0,a0,1390 # 970 <digits>
-- 40a:	883a                	mv	a6,a4
-- 40c:	2705                	addiw	a4,a4,1
-- 40e:	02c5f7bb          	remuw	a5,a1,a2
-- 412:	1782                	slli	a5,a5,0x20
-- 414:	9381                	srli	a5,a5,0x20
-- 416:	97aa                	add	a5,a5,a0
-- 418:	0007c783          	lbu	a5,0(a5)
-- 41c:	00f68023          	sb	a5,0(a3)
-+ 404:	2601                	sext.w	a2,a2
-+ 406:	00000517          	auipc	a0,0x0
-+ 40a:	55a50513          	add	a0,a0,1370 # 960 <digits>
-+ 40e:	883a                	mv	a6,a4
-+ 410:	2705                	addw	a4,a4,1
-+ 412:	02c5f7bb          	remuw	a5,a1,a2
-+ 416:	1782                	sll	a5,a5,0x20
-+ 418:	9381                	srl	a5,a5,0x20
-+ 41a:	97aa                	add	a5,a5,a0
-+ 41c:	0007c783          	lbu	a5,0(a5)
-+ 420:	00f68023          	sb	a5,0(a3)
-   }while((x /= base) != 0);
-- 420:	0005879b          	sext.w	a5,a1
-- 424:	02c5d5bb          	divuw	a1,a1,a2
-- 428:	0685                	addi	a3,a3,1
-- 42a:	fec7f0e3          	bgeu	a5,a2,40a <printint+0x26>
-+ 424:	0005879b          	sext.w	a5,a1
-+ 428:	02c5d5bb          	divuw	a1,a1,a2
-+ 42c:	0685                	add	a3,a3,1
-+ 42e:	fec7f0e3          	bgeu	a5,a2,40e <printint+0x2a>
-   if(neg)
-- 42e:	00088c63          	beqz	a7,446 <printint+0x62>
-+ 432:	00088c63          	beqz	a7,44a <printint+0x66>
-     buf[i++] = '-';
-- 432:	fd070793          	addi	a5,a4,-48
-- 436:	00878733          	add	a4,a5,s0
-- 43a:	02d00793          	li	a5,45
-- 43e:	fef70823          	sb	a5,-16(a4)
-- 442:	0028071b          	addiw	a4,a6,2
-+ 436:	fd070793          	add	a5,a4,-48
-+ 43a:	00878733          	add	a4,a5,s0
-+ 43e:	02d00793          	li	a5,45
-+ 442:	fef70823          	sb	a5,-16(a4)
-+ 446:	0028071b          	addw	a4,a6,2
- 
-   while(--i >= 0)
-- 446:	02e05a63          	blez	a4,47a <printint+0x96>
-- 44a:	f04a                	sd	s2,32(sp)
-- 44c:	ec4e                	sd	s3,24(sp)
-- 44e:	fc040793          	addi	a5,s0,-64
-+ 44a:	02e05663          	blez	a4,476 <printint+0x92>
-+ 44e:	fc040793          	add	a5,s0,-64
-  452:	00e78933          	add	s2,a5,a4
-- 456:	fff78993          	addi	s3,a5,-1
-+ 456:	fff78993          	add	s3,a5,-1
-  45a:	99ba                	add	s3,s3,a4
-- 45c:	377d                	addiw	a4,a4,-1
-- 45e:	1702                	slli	a4,a4,0x20
-- 460:	9301                	srli	a4,a4,0x20
-+ 45c:	377d                	addw	a4,a4,-1
-+ 45e:	1702                	sll	a4,a4,0x20
-+ 460:	9301                	srl	a4,a4,0x20
-  462:	40e989b3          	sub	s3,s3,a4
-     putc(fd, buf[i]);
-  466:	fff94583          	lbu	a1,-1(s2)
-  46a:	8526                	mv	a0,s1
-  46c:	f5bff0ef          	jal	3c6 <putc>
-   while(--i >= 0)
-- 470:	197d                	addi	s2,s2,-1
-+ 470:	197d                	add	s2,s2,-1
-  472:	ff391ae3          	bne	s2,s3,466 <printint+0x82>
-- 476:	7902                	ld	s2,32(sp)
-- 478:	69e2                	ld	s3,24(sp)
- }
-- 47a:	70e2                	ld	ra,56(sp)
-- 47c:	7442                	ld	s0,48(sp)
-- 47e:	74a2                	ld	s1,40(sp)
-- 480:	6121                	addi	sp,sp,64
-+ 476:	70e2                	ld	ra,56(sp)
-+ 478:	7442                	ld	s0,48(sp)
-+ 47a:	74a2                	ld	s1,40(sp)
-+ 47c:	7902                	ld	s2,32(sp)
-+ 47e:	69e2                	ld	s3,24(sp)
-+ 480:	6121                	add	sp,sp,64
-  482:	8082                	ret
-     x = -xx;
-  484:	40b005bb          	negw	a1,a1
-     neg = 1;
-  488:	4885                	li	a7,1
-     x = -xx;
-- 48a:	bf85                	j	3fa <printint+0x16>
-+ 48a:	bf95                	j	3fe <printint+0x1a>
- 
- 000000000000048c <vprintf>:
- }
-@@ -869,320 +869,320 @@ printint(int fd, int xx, int base, int sgn)
- void
- vprintf(int fd, const char *fmt, va_list ap)
- {
-- 48c:	711d                	addi	sp,sp,-96
-+ 48c:	711d                	add	sp,sp,-96
-  48e:	ec86                	sd	ra,88(sp)
-  490:	e8a2                	sd	s0,80(sp)
-- 492:	e0ca                	sd	s2,64(sp)
-- 494:	1080                	addi	s0,sp,96
-+ 492:	e4a6                	sd	s1,72(sp)
-+ 494:	e0ca                	sd	s2,64(sp)
-+ 496:	fc4e                	sd	s3,56(sp)
-+ 498:	f852                	sd	s4,48(sp)
-+ 49a:	f456                	sd	s5,40(sp)
-+ 49c:	f05a                	sd	s6,32(sp)
-+ 49e:	ec5e                	sd	s7,24(sp)
-+ 4a0:	e862                	sd	s8,16(sp)
-+ 4a2:	e466                	sd	s9,8(sp)
-+ 4a4:	e06a                	sd	s10,0(sp)
-+ 4a6:	1080                	add	s0,sp,96
-   char *s;
-   int c0, c1, c2, i, state;
- 
-   state = 0;
-   for(i = 0; fmt[i]; i++){
-- 496:	0005c903          	lbu	s2,0(a1)
-- 49a:	26090863          	beqz	s2,70a <vprintf+0x27e>
-- 49e:	e4a6                	sd	s1,72(sp)
-- 4a0:	fc4e                	sd	s3,56(sp)
-- 4a2:	f852                	sd	s4,48(sp)
-- 4a4:	f456                	sd	s5,40(sp)
-- 4a6:	f05a                	sd	s6,32(sp)
-- 4a8:	ec5e                	sd	s7,24(sp)
-- 4aa:	e862                	sd	s8,16(sp)
-- 4ac:	e466                	sd	s9,8(sp)
-- 4ae:	8b2a                	mv	s6,a0
-- 4b0:	8a2e                	mv	s4,a1
-- 4b2:	8bb2                	mv	s7,a2
-+ 4a8:	0005c903          	lbu	s2,0(a1)
-+ 4ac:	24090763          	beqz	s2,6fa <vprintf+0x26e>
-+ 4b0:	8b2a                	mv	s6,a0
-+ 4b2:	8a2e                	mv	s4,a1
-+ 4b4:	8bb2                	mv	s7,a2
-   state = 0;
-- 4b4:	4981                	li	s3,0
-+ 4b6:	4981                	li	s3,0
-   for(i = 0; fmt[i]; i++){
-- 4b6:	4481                	li	s1,0
-- 4b8:	4701                	li	a4,0
-+ 4b8:	4481                	li	s1,0
-+ 4ba:	4701                	li	a4,0
-       if(c0 == '%'){
-         state = '%';
-       } else {
-         putc(fd, c0);
-       }
-     } else if(state == '%'){
-- 4ba:	02500a93          	li	s5,37
-+ 4bc:	02500a93          	li	s5,37
-       c1 = c2 = 0;
-       if(c0) c1 = fmt[i+1] & 0xff;
-       if(c1) c2 = fmt[i+2] & 0xff;
-       if(c0 == 'd'){
-- 4be:	06400c13          	li	s8,100
-+ 4c0:	06400c13          	li	s8,100
-         printint(fd, va_arg(ap, int), 10, 1);
-       } else if(c0 == 'l' && c1 == 'd'){
-- 4c2:	06c00c93          	li	s9,108
-- 4c6:	a005                	j	4e6 <vprintf+0x5a>
-+ 4c4:	06c00c93          	li	s9,108
-+ 4c8:	a005                	j	4e8 <vprintf+0x5c>
-         putc(fd, c0);
-- 4c8:	85ca                	mv	a1,s2
-- 4ca:	855a                	mv	a0,s6
-- 4cc:	efbff0ef          	jal	3c6 <putc>
-- 4d0:	a019                	j	4d6 <vprintf+0x4a>
-+ 4ca:	85ca                	mv	a1,s2
-+ 4cc:	855a                	mv	a0,s6
-+ 4ce:	ef9ff0ef          	jal	3c6 <putc>
-+ 4d2:	a019                	j	4d8 <vprintf+0x4c>
-     } else if(state == '%'){
-- 4d2:	03598263          	beq	s3,s5,4f6 <vprintf+0x6a>
-+ 4d4:	03598263          	beq	s3,s5,4f8 <vprintf+0x6c>
-   for(i = 0; fmt[i]; i++){
-- 4d6:	2485                	addiw	s1,s1,1
-- 4d8:	8726                	mv	a4,s1
-- 4da:	009a07b3          	add	a5,s4,s1
-- 4de:	0007c903          	lbu	s2,0(a5)
-- 4e2:	20090c63          	beqz	s2,6fa <vprintf+0x26e>
-+ 4d8:	2485                	addw	s1,s1,1
-+ 4da:	8726                	mv	a4,s1
-+ 4dc:	009a07b3          	add	a5,s4,s1
-+ 4e0:	0007c903          	lbu	s2,0(a5)
-+ 4e4:	20090b63          	beqz	s2,6fa <vprintf+0x26e>
-     c0 = fmt[i] & 0xff;
-- 4e6:	0009079b          	sext.w	a5,s2
-+ 4e8:	0009079b          	sext.w	a5,s2
-     if(state == 0){
-- 4ea:	fe0994e3          	bnez	s3,4d2 <vprintf+0x46>
-+ 4ec:	fe0994e3          	bnez	s3,4d4 <vprintf+0x48>
-       if(c0 == '%'){
-- 4ee:	fd579de3          	bne	a5,s5,4c8 <vprintf+0x3c>
-+ 4f0:	fd579de3          	bne	a5,s5,4ca <vprintf+0x3e>
-         state = '%';
-- 4f2:	89be                	mv	s3,a5
-- 4f4:	b7cd                	j	4d6 <vprintf+0x4a>
-+ 4f4:	89be                	mv	s3,a5
-+ 4f6:	b7cd                	j	4d8 <vprintf+0x4c>
-       if(c0) c1 = fmt[i+1] & 0xff;
-- 4f6:	00ea06b3          	add	a3,s4,a4
-- 4fa:	0016c683          	lbu	a3,1(a3)
-+ 4f8:	c7c9                	beqz	a5,582 <vprintf+0xf6>
-+ 4fa:	00ea06b3          	add	a3,s4,a4
-+ 4fe:	0016c683          	lbu	a3,1(a3)
-       c1 = c2 = 0;
-- 4fe:	8636                	mv	a2,a3
-+ 502:	8636                	mv	a2,a3
-       if(c1) c2 = fmt[i+2] & 0xff;
-- 500:	c681                	beqz	a3,508 <vprintf+0x7c>
-- 502:	9752                	add	a4,a4,s4
-- 504:	00274603          	lbu	a2,2(a4)
-+ 504:	c681                	beqz	a3,50c <vprintf+0x80>
-+ 506:	9752                	add	a4,a4,s4
-+ 508:	00274603          	lbu	a2,2(a4)
-       if(c0 == 'd'){
-- 508:	03878f63          	beq	a5,s8,546 <vprintf+0xba>
-+ 50c:	03878f63          	beq	a5,s8,54a <vprintf+0xbe>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 50c:	05978963          	beq	a5,s9,55e <vprintf+0xd2>
-+ 510:	05978963          	beq	a5,s9,562 <vprintf+0xd6>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 2;
-       } else if(c0 == 'u'){
-- 510:	07500713          	li	a4,117
-- 514:	0ee78363          	beq	a5,a4,5fa <vprintf+0x16e>
-+ 514:	07500713          	li	a4,117
-+ 518:	0ee78363          	beq	a5,a4,5fe <vprintf+0x172>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 2;
-       } else if(c0 == 'x'){
-- 518:	07800713          	li	a4,120
-- 51c:	12e78563          	beq	a5,a4,646 <vprintf+0x1ba>
-+ 51c:	07800713          	li	a4,120
-+ 520:	12e78563          	beq	a5,a4,64a <vprintf+0x1be>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 2;
-       } else if(c0 == 'p'){
-- 520:	07000713          	li	a4,112
-- 524:	14e78a63          	beq	a5,a4,678 <vprintf+0x1ec>
-+ 524:	07000713          	li	a4,112
-+ 528:	14e78a63          	beq	a5,a4,67c <vprintf+0x1f0>
-         printptr(fd, va_arg(ap, uint64));
-       } else if(c0 == 's'){
-- 528:	07300713          	li	a4,115
-- 52c:	18e78a63          	beq	a5,a4,6c0 <vprintf+0x234>
-+ 52c:	07300713          	li	a4,115
-+ 530:	18e78863          	beq	a5,a4,6c0 <vprintf+0x234>
-         if((s = va_arg(ap, char*)) == 0)
-           s = "(null)";
-         for(; *s; s++)
-           putc(fd, *s);
-       } else if(c0 == '%'){
-- 530:	02500713          	li	a4,37
-- 534:	04e79563          	bne	a5,a4,57e <vprintf+0xf2>
-+ 534:	02500713          	li	a4,37
-+ 538:	04e79563          	bne	a5,a4,582 <vprintf+0xf6>
-         putc(fd, '%');
-- 538:	02500593          	li	a1,37
-- 53c:	855a                	mv	a0,s6
-- 53e:	e89ff0ef          	jal	3c6 <putc>
-+ 53c:	02500593          	li	a1,37
-+ 540:	855a                	mv	a0,s6
-+ 542:	e85ff0ef          	jal	3c6 <putc>
-         /* Unknown % sequence.  Print it to draw attention. */
-         putc(fd, '%');
-         putc(fd, c);
-       }
- #endif
-       state = 0;
-- 542:	4981                	li	s3,0
-- 544:	bf49                	j	4d6 <vprintf+0x4a>
-+ 546:	4981                	li	s3,0
-+ 548:	bf41                	j	4d8 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 1);
-- 546:	008b8913          	addi	s2,s7,8
-- 54a:	4685                	li	a3,1
-- 54c:	4629                	li	a2,10
-- 54e:	000ba583          	lw	a1,0(s7)
-- 552:	855a                	mv	a0,s6
-- 554:	e91ff0ef          	jal	3e4 <printint>
-- 558:	8bca                	mv	s7,s2
-+ 54a:	008b8913          	add	s2,s7,8
-+ 54e:	4685                	li	a3,1
-+ 550:	4629                	li	a2,10
-+ 552:	000ba583          	lw	a1,0(s7)
-+ 556:	855a                	mv	a0,s6
-+ 558:	e8dff0ef          	jal	3e4 <printint>
-+ 55c:	8bca                	mv	s7,s2
-       state = 0;
-- 55a:	4981                	li	s3,0
-- 55c:	bfad                	j	4d6 <vprintf+0x4a>
-+ 55e:	4981                	li	s3,0
-+ 560:	bfa5                	j	4d8 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 55e:	06400793          	li	a5,100
-- 562:	02f68963          	beq	a3,a5,594 <vprintf+0x108>
-+ 562:	06400793          	li	a5,100
-+ 566:	02f68963          	beq	a3,a5,598 <vprintf+0x10c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 566:	06c00793          	li	a5,108
-- 56a:	04f68263          	beq	a3,a5,5ae <vprintf+0x122>
-+ 56a:	06c00793          	li	a5,108
-+ 56e:	04f68263          	beq	a3,a5,5b2 <vprintf+0x126>
-       } else if(c0 == 'l' && c1 == 'u'){
-- 56e:	07500793          	li	a5,117
-- 572:	0af68063          	beq	a3,a5,612 <vprintf+0x186>
-+ 572:	07500793          	li	a5,117
-+ 576:	0af68063          	beq	a3,a5,616 <vprintf+0x18a>
-       } else if(c0 == 'l' && c1 == 'x'){
-- 576:	07800793          	li	a5,120
-- 57a:	0ef68263          	beq	a3,a5,65e <vprintf+0x1d2>
-+ 57a:	07800793          	li	a5,120
-+ 57e:	0ef68263          	beq	a3,a5,662 <vprintf+0x1d6>
-         putc(fd, '%');
-- 57e:	02500593          	li	a1,37
-- 582:	855a                	mv	a0,s6
-- 584:	e43ff0ef          	jal	3c6 <putc>
-+ 582:	02500593          	li	a1,37
-+ 586:	855a                	mv	a0,s6
-+ 588:	e3fff0ef          	jal	3c6 <putc>
-         putc(fd, c0);
-- 588:	85ca                	mv	a1,s2
-- 58a:	855a                	mv	a0,s6
-- 58c:	e3bff0ef          	jal	3c6 <putc>
-+ 58c:	85ca                	mv	a1,s2
-+ 58e:	855a                	mv	a0,s6
-+ 590:	e37ff0ef          	jal	3c6 <putc>
-       state = 0;
-- 590:	4981                	li	s3,0
-- 592:	b791                	j	4d6 <vprintf+0x4a>
-+ 594:	4981                	li	s3,0
-+ 596:	b789                	j	4d8 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 594:	008b8913          	addi	s2,s7,8
-- 598:	4685                	li	a3,1
-- 59a:	4629                	li	a2,10
-- 59c:	000ba583          	lw	a1,0(s7)
-- 5a0:	855a                	mv	a0,s6
-- 5a2:	e43ff0ef          	jal	3e4 <printint>
-+ 598:	008b8913          	add	s2,s7,8
-+ 59c:	4685                	li	a3,1
-+ 59e:	4629                	li	a2,10
-+ 5a0:	000ba583          	lw	a1,0(s7)
-+ 5a4:	855a                	mv	a0,s6
-+ 5a6:	e3fff0ef          	jal	3e4 <printint>
-         i += 1;
-- 5a6:	2485                	addiw	s1,s1,1
-+ 5aa:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 5a8:	8bca                	mv	s7,s2
-+ 5ac:	8bca                	mv	s7,s2
-       state = 0;
-- 5aa:	4981                	li	s3,0
-+ 5ae:	4981                	li	s3,0
-         i += 1;
-- 5ac:	b72d                	j	4d6 <vprintf+0x4a>
-+ 5b0:	b725                	j	4d8 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 5ae:	06400793          	li	a5,100
-- 5b2:	02f60763          	beq	a2,a5,5e0 <vprintf+0x154>
-+ 5b2:	06400793          	li	a5,100
-+ 5b6:	02f60763          	beq	a2,a5,5e4 <vprintf+0x158>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-- 5b6:	07500793          	li	a5,117
-- 5ba:	06f60963          	beq	a2,a5,62c <vprintf+0x1a0>
-+ 5ba:	07500793          	li	a5,117
-+ 5be:	06f60963          	beq	a2,a5,630 <vprintf+0x1a4>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-- 5be:	07800793          	li	a5,120
-- 5c2:	faf61ee3          	bne	a2,a5,57e <vprintf+0xf2>
-+ 5c2:	07800793          	li	a5,120
-+ 5c6:	faf61ee3          	bne	a2,a5,582 <vprintf+0xf6>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 5c6:	008b8913          	addi	s2,s7,8
-- 5ca:	4681                	li	a3,0
-- 5cc:	4641                	li	a2,16
-- 5ce:	000ba583          	lw	a1,0(s7)
-- 5d2:	855a                	mv	a0,s6
-- 5d4:	e11ff0ef          	jal	3e4 <printint>
-+ 5ca:	008b8913          	add	s2,s7,8
-+ 5ce:	4681                	li	a3,0
-+ 5d0:	4641                	li	a2,16
-+ 5d2:	000ba583          	lw	a1,0(s7)
-+ 5d6:	855a                	mv	a0,s6
-+ 5d8:	e0dff0ef          	jal	3e4 <printint>
-         i += 2;
-- 5d8:	2489                	addiw	s1,s1,2
-+ 5dc:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 5da:	8bca                	mv	s7,s2
-+ 5de:	8bca                	mv	s7,s2
-       state = 0;
-- 5dc:	4981                	li	s3,0
-+ 5e0:	4981                	li	s3,0
-         i += 2;
-- 5de:	bde5                	j	4d6 <vprintf+0x4a>
-+ 5e2:	bddd                	j	4d8 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 5e0:	008b8913          	addi	s2,s7,8
-- 5e4:	4685                	li	a3,1
-- 5e6:	4629                	li	a2,10
-- 5e8:	000ba583          	lw	a1,0(s7)
-- 5ec:	855a                	mv	a0,s6
-- 5ee:	df7ff0ef          	jal	3e4 <printint>
-+ 5e4:	008b8913          	add	s2,s7,8
-+ 5e8:	4685                	li	a3,1
-+ 5ea:	4629                	li	a2,10
-+ 5ec:	000ba583          	lw	a1,0(s7)
-+ 5f0:	855a                	mv	a0,s6
-+ 5f2:	df3ff0ef          	jal	3e4 <printint>
-         i += 2;
-- 5f2:	2489                	addiw	s1,s1,2
-+ 5f6:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 5f4:	8bca                	mv	s7,s2
-+ 5f8:	8bca                	mv	s7,s2
-       state = 0;
-- 5f6:	4981                	li	s3,0
-+ 5fa:	4981                	li	s3,0
-         i += 2;
-- 5f8:	bdf9                	j	4d6 <vprintf+0x4a>
-+ 5fc:	bdf1                	j	4d8 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 0);
-- 5fa:	008b8913          	addi	s2,s7,8
-- 5fe:	4681                	li	a3,0
-- 600:	4629                	li	a2,10
-- 602:	000ba583          	lw	a1,0(s7)
-- 606:	855a                	mv	a0,s6
-- 608:	dddff0ef          	jal	3e4 <printint>
-- 60c:	8bca                	mv	s7,s2
-+ 5fe:	008b8913          	add	s2,s7,8
-+ 602:	4681                	li	a3,0
-+ 604:	4629                	li	a2,10
-+ 606:	000ba583          	lw	a1,0(s7)
-+ 60a:	855a                	mv	a0,s6
-+ 60c:	dd9ff0ef          	jal	3e4 <printint>
-+ 610:	8bca                	mv	s7,s2
-       state = 0;
-- 60e:	4981                	li	s3,0
-- 610:	b5d9                	j	4d6 <vprintf+0x4a>
-+ 612:	4981                	li	s3,0
-+ 614:	b5d1                	j	4d8 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 612:	008b8913          	addi	s2,s7,8
-- 616:	4681                	li	a3,0
-- 618:	4629                	li	a2,10
-- 61a:	000ba583          	lw	a1,0(s7)
-- 61e:	855a                	mv	a0,s6
-- 620:	dc5ff0ef          	jal	3e4 <printint>
-+ 616:	008b8913          	add	s2,s7,8
-+ 61a:	4681                	li	a3,0
-+ 61c:	4629                	li	a2,10
-+ 61e:	000ba583          	lw	a1,0(s7)
-+ 622:	855a                	mv	a0,s6
-+ 624:	dc1ff0ef          	jal	3e4 <printint>
-         i += 1;
-- 624:	2485                	addiw	s1,s1,1
-+ 628:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 626:	8bca                	mv	s7,s2
-+ 62a:	8bca                	mv	s7,s2
-       state = 0;
-- 628:	4981                	li	s3,0
-+ 62c:	4981                	li	s3,0
-         i += 1;
-- 62a:	b575                	j	4d6 <vprintf+0x4a>
-+ 62e:	b56d                	j	4d8 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 62c:	008b8913          	addi	s2,s7,8
-- 630:	4681                	li	a3,0
-- 632:	4629                	li	a2,10
-- 634:	000ba583          	lw	a1,0(s7)
-- 638:	855a                	mv	a0,s6
-- 63a:	dabff0ef          	jal	3e4 <printint>
-+ 630:	008b8913          	add	s2,s7,8
-+ 634:	4681                	li	a3,0
-+ 636:	4629                	li	a2,10
-+ 638:	000ba583          	lw	a1,0(s7)
-+ 63c:	855a                	mv	a0,s6
-+ 63e:	da7ff0ef          	jal	3e4 <printint>
-         i += 2;
-- 63e:	2489                	addiw	s1,s1,2
-+ 642:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 640:	8bca                	mv	s7,s2
-+ 644:	8bca                	mv	s7,s2
-       state = 0;
-- 642:	4981                	li	s3,0
-+ 646:	4981                	li	s3,0
-         i += 2;
-- 644:	bd49                	j	4d6 <vprintf+0x4a>
-+ 648:	bd41                	j	4d8 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 16, 0);
-- 646:	008b8913          	addi	s2,s7,8
-- 64a:	4681                	li	a3,0
-- 64c:	4641                	li	a2,16
-- 64e:	000ba583          	lw	a1,0(s7)
-- 652:	855a                	mv	a0,s6
-- 654:	d91ff0ef          	jal	3e4 <printint>
-- 658:	8bca                	mv	s7,s2
-+ 64a:	008b8913          	add	s2,s7,8
-+ 64e:	4681                	li	a3,0
-+ 650:	4641                	li	a2,16
-+ 652:	000ba583          	lw	a1,0(s7)
-+ 656:	855a                	mv	a0,s6
-+ 658:	d8dff0ef          	jal	3e4 <printint>
-+ 65c:	8bca                	mv	s7,s2
-       state = 0;
-- 65a:	4981                	li	s3,0
-- 65c:	bdad                	j	4d6 <vprintf+0x4a>
-+ 65e:	4981                	li	s3,0
-+ 660:	bda5                	j	4d8 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 65e:	008b8913          	addi	s2,s7,8
-- 662:	4681                	li	a3,0
-- 664:	4641                	li	a2,16
-- 666:	000ba583          	lw	a1,0(s7)
-- 66a:	855a                	mv	a0,s6
-- 66c:	d79ff0ef          	jal	3e4 <printint>
-+ 662:	008b8913          	add	s2,s7,8
-+ 666:	4681                	li	a3,0
-+ 668:	4641                	li	a2,16
-+ 66a:	000ba583          	lw	a1,0(s7)
-+ 66e:	855a                	mv	a0,s6
-+ 670:	d75ff0ef          	jal	3e4 <printint>
-         i += 1;
-- 670:	2485                	addiw	s1,s1,1
-+ 674:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 672:	8bca                	mv	s7,s2
-+ 676:	8bca                	mv	s7,s2
-       state = 0;
-- 674:	4981                	li	s3,0
-+ 678:	4981                	li	s3,0
-         i += 1;
-- 676:	b585                	j	4d6 <vprintf+0x4a>
-- 678:	e06a                	sd	s10,0(sp)
-+ 67a:	bdb9                	j	4d8 <vprintf+0x4c>
-         printptr(fd, va_arg(ap, uint64));
-- 67a:	008b8d13          	addi	s10,s7,8
-- 67e:	000bb983          	ld	s3,0(s7)
-+ 67c:	008b8d13          	add	s10,s7,8
-+ 680:	000bb983          	ld	s3,0(s7)
-   putc(fd, '0');
-- 682:	03000593          	li	a1,48
-- 686:	855a                	mv	a0,s6
-- 688:	d3fff0ef          	jal	3c6 <putc>
-+ 684:	03000593          	li	a1,48
-+ 688:	855a                	mv	a0,s6
-+ 68a:	d3dff0ef          	jal	3c6 <putc>
-   putc(fd, 'x');
-- 68c:	07800593          	li	a1,120
-- 690:	855a                	mv	a0,s6
-- 692:	d35ff0ef          	jal	3c6 <putc>
-- 696:	4941                	li	s2,16
-+ 68e:	07800593          	li	a1,120
-+ 692:	855a                	mv	a0,s6
-+ 694:	d33ff0ef          	jal	3c6 <putc>
-+ 698:	4941                	li	s2,16
-     putc(fd, digits[x >> (sizeof(uint64) * 8 - 4)]);
-- 698:	00000b97          	auipc	s7,0x0
-- 69c:	2d8b8b93          	addi	s7,s7,728 # 970 <digits>
-- 6a0:	03c9d793          	srli	a5,s3,0x3c
-- 6a4:	97de                	add	a5,a5,s7
-- 6a6:	0007c583          	lbu	a1,0(a5)
-- 6aa:	855a                	mv	a0,s6
-- 6ac:	d1bff0ef          	jal	3c6 <putc>
-+ 69a:	00000b97          	auipc	s7,0x0
-+ 69e:	2c6b8b93          	add	s7,s7,710 # 960 <digits>
-+ 6a2:	03c9d793          	srl	a5,s3,0x3c
-+ 6a6:	97de                	add	a5,a5,s7
-+ 6a8:	0007c583          	lbu	a1,0(a5)
-+ 6ac:	855a                	mv	a0,s6
-+ 6ae:	d19ff0ef          	jal	3c6 <putc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
-- 6b0:	0992                	slli	s3,s3,0x4
-- 6b2:	397d                	addiw	s2,s2,-1
-- 6b4:	fe0916e3          	bnez	s2,6a0 <vprintf+0x214>
-+ 6b2:	0992                	sll	s3,s3,0x4
-+ 6b4:	397d                	addw	s2,s2,-1
-+ 6b6:	fe0916e3          	bnez	s2,6a2 <vprintf+0x216>
-         printptr(fd, va_arg(ap, uint64));
-- 6b8:	8bea                	mv	s7,s10
-+ 6ba:	8bea                	mv	s7,s10
-       state = 0;
-- 6ba:	4981                	li	s3,0
-- 6bc:	6d02                	ld	s10,0(sp)
-- 6be:	bd21                	j	4d6 <vprintf+0x4a>
-+ 6bc:	4981                	li	s3,0
-+ 6be:	bd29                	j	4d8 <vprintf+0x4c>
-         if((s = va_arg(ap, char*)) == 0)
-- 6c0:	008b8993          	addi	s3,s7,8
-+ 6c0:	008b8993          	add	s3,s7,8
-  6c4:	000bb903          	ld	s2,0(s7)
-  6c8:	00090f63          	beqz	s2,6e6 <vprintf+0x25a>
-         for(; *s; s++)
-@@ -1192,17 +1192,17 @@ vprintf(int fd, const char *fmt, va_list ap)
-  6d2:	855a                	mv	a0,s6
-  6d4:	cf3ff0ef          	jal	3c6 <putc>
-         for(; *s; s++)
-- 6d8:	0905                	addi	s2,s2,1
-+ 6d8:	0905                	add	s2,s2,1
-  6da:	00094583          	lbu	a1,0(s2)
-  6de:	f9f5                	bnez	a1,6d2 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-  6e0:	8bce                	mv	s7,s3
-       state = 0;
-  6e2:	4981                	li	s3,0
-- 6e4:	bbcd                	j	4d6 <vprintf+0x4a>
-+ 6e4:	bbd5                	j	4d8 <vprintf+0x4c>
-           s = "(null)";
-  6e6:	00000917          	auipc	s2,0x0
-- 6ea:	28290913          	addi	s2,s2,642 # 968 <malloc+0x176>
-+ 6ea:	27290913          	add	s2,s2,626 # 958 <malloc+0x164>
-         for(; *s; s++)
-  6ee:	02800593          	li	a1,40
-  6f2:	b7c5                	j	6d2 <vprintf+0x246>
-@@ -1210,298 +1210,288 @@ vprintf(int fd, const char *fmt, va_list ap)
-  6f4:	8bce                	mv	s7,s3
-       state = 0;
-  6f6:	4981                	li	s3,0
-- 6f8:	bbf9                	j	4d6 <vprintf+0x4a>
-- 6fa:	64a6                	ld	s1,72(sp)
-- 6fc:	79e2                	ld	s3,56(sp)
-- 6fe:	7a42                	ld	s4,48(sp)
-- 700:	7aa2                	ld	s5,40(sp)
-- 702:	7b02                	ld	s6,32(sp)
-- 704:	6be2                	ld	s7,24(sp)
-- 706:	6c42                	ld	s8,16(sp)
-- 708:	6ca2                	ld	s9,8(sp)
-+ 6f8:	b3c5                	j	4d8 <vprintf+0x4c>
-     }
-   }
- }
-- 70a:	60e6                	ld	ra,88(sp)
-- 70c:	6446                	ld	s0,80(sp)
-- 70e:	6906                	ld	s2,64(sp)
-- 710:	6125                	addi	sp,sp,96
-- 712:	8082                	ret
--
--0000000000000714 <fprintf>:
-+ 6fa:	60e6                	ld	ra,88(sp)
-+ 6fc:	6446                	ld	s0,80(sp)
-+ 6fe:	64a6                	ld	s1,72(sp)
-+ 700:	6906                	ld	s2,64(sp)
-+ 702:	79e2                	ld	s3,56(sp)
-+ 704:	7a42                	ld	s4,48(sp)
-+ 706:	7aa2                	ld	s5,40(sp)
-+ 708:	7b02                	ld	s6,32(sp)
-+ 70a:	6be2                	ld	s7,24(sp)
-+ 70c:	6c42                	ld	s8,16(sp)
-+ 70e:	6ca2                	ld	s9,8(sp)
-+ 710:	6d02                	ld	s10,0(sp)
-+ 712:	6125                	add	sp,sp,96
-+ 714:	8082                	ret
-+
-+0000000000000716 <fprintf>:
- 
- void
- fprintf(int fd, const char *fmt, ...)
- {
-- 714:	715d                	addi	sp,sp,-80
-- 716:	ec06                	sd	ra,24(sp)
-- 718:	e822                	sd	s0,16(sp)
-- 71a:	1000                	addi	s0,sp,32
-- 71c:	e010                	sd	a2,0(s0)
-- 71e:	e414                	sd	a3,8(s0)
-- 720:	e818                	sd	a4,16(s0)
-- 722:	ec1c                	sd	a5,24(s0)
-- 724:	03043023          	sd	a6,32(s0)
-- 728:	03143423          	sd	a7,40(s0)
-+ 716:	715d                	add	sp,sp,-80
-+ 718:	ec06                	sd	ra,24(sp)
-+ 71a:	e822                	sd	s0,16(sp)
-+ 71c:	1000                	add	s0,sp,32
-+ 71e:	e010                	sd	a2,0(s0)
-+ 720:	e414                	sd	a3,8(s0)
-+ 722:	e818                	sd	a4,16(s0)
-+ 724:	ec1c                	sd	a5,24(s0)
-+ 726:	03043023          	sd	a6,32(s0)
-+ 72a:	03143423          	sd	a7,40(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 72c:	fe843423          	sd	s0,-24(s0)
-+ 72e:	fe843423          	sd	s0,-24(s0)
-   vprintf(fd, fmt, ap);
-- 730:	8622                	mv	a2,s0
-- 732:	d5bff0ef          	jal	48c <vprintf>
-+ 732:	8622                	mv	a2,s0
-+ 734:	d59ff0ef          	jal	48c <vprintf>
- }
-- 736:	60e2                	ld	ra,24(sp)
-- 738:	6442                	ld	s0,16(sp)
-- 73a:	6161                	addi	sp,sp,80
-- 73c:	8082                	ret
-+ 738:	60e2                	ld	ra,24(sp)
-+ 73a:	6442                	ld	s0,16(sp)
-+ 73c:	6161                	add	sp,sp,80
-+ 73e:	8082                	ret
- 
--000000000000073e <printf>:
-+0000000000000740 <printf>:
- 
- void
- printf(const char *fmt, ...)
- {
-- 73e:	711d                	addi	sp,sp,-96
-- 740:	ec06                	sd	ra,24(sp)
-- 742:	e822                	sd	s0,16(sp)
-- 744:	1000                	addi	s0,sp,32
-- 746:	e40c                	sd	a1,8(s0)
-- 748:	e810                	sd	a2,16(s0)
-- 74a:	ec14                	sd	a3,24(s0)
-- 74c:	f018                	sd	a4,32(s0)
-- 74e:	f41c                	sd	a5,40(s0)
-- 750:	03043823          	sd	a6,48(s0)
-- 754:	03143c23          	sd	a7,56(s0)
-+ 740:	711d                	add	sp,sp,-96
-+ 742:	ec06                	sd	ra,24(sp)
-+ 744:	e822                	sd	s0,16(sp)
-+ 746:	1000                	add	s0,sp,32
-+ 748:	e40c                	sd	a1,8(s0)
-+ 74a:	e810                	sd	a2,16(s0)
-+ 74c:	ec14                	sd	a3,24(s0)
-+ 74e:	f018                	sd	a4,32(s0)
-+ 750:	f41c                	sd	a5,40(s0)
-+ 752:	03043823          	sd	a6,48(s0)
-+ 756:	03143c23          	sd	a7,56(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 758:	00840613          	addi	a2,s0,8
-- 75c:	fec43423          	sd	a2,-24(s0)
-+ 75a:	00840613          	add	a2,s0,8
-+ 75e:	fec43423          	sd	a2,-24(s0)
-   vprintf(1, fmt, ap);
-- 760:	85aa                	mv	a1,a0
-- 762:	4505                	li	a0,1
-- 764:	d29ff0ef          	jal	48c <vprintf>
-+ 762:	85aa                	mv	a1,a0
-+ 764:	4505                	li	a0,1
-+ 766:	d27ff0ef          	jal	48c <vprintf>
- }
-- 768:	60e2                	ld	ra,24(sp)
-- 76a:	6442                	ld	s0,16(sp)
-- 76c:	6125                	addi	sp,sp,96
-- 76e:	8082                	ret
-+ 76a:	60e2                	ld	ra,24(sp)
-+ 76c:	6442                	ld	s0,16(sp)
-+ 76e:	6125                	add	sp,sp,96
-+ 770:	8082                	ret
- 
--0000000000000770 <free>:
-+0000000000000772 <free>:
- static Header base;
- static Header *freep;
- 
- void
- free(void *ap)
- {
-- 770:	1141                	addi	sp,sp,-16
-- 772:	e422                	sd	s0,8(sp)
-- 774:	0800                	addi	s0,sp,16
-+ 772:	1141                	add	sp,sp,-16
-+ 774:	e422                	sd	s0,8(sp)
-+ 776:	0800                	add	s0,sp,16
-   Header *bp, *p;
- 
-   bp = (Header*)ap - 1;
-- 776:	ff050693          	addi	a3,a0,-16
-+ 778:	ff050693          	add	a3,a0,-16
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 77a:	00001797          	auipc	a5,0x1
-- 77e:	8967b783          	ld	a5,-1898(a5) # 1010 <freep>
-- 782:	a02d                	j	7ac <free+0x3c>
-+ 77c:	00001797          	auipc	a5,0x1
-+ 780:	8947b783          	ld	a5,-1900(a5) # 1010 <freep>
-+ 784:	a02d                	j	7ae <free+0x3c>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-       break;
-   if(bp + bp->s.size == p->s.ptr){
-     bp->s.size += p->s.ptr->s.size;
-- 784:	4618                	lw	a4,8(a2)
-- 786:	9f2d                	addw	a4,a4,a1
-- 788:	fee52c23          	sw	a4,-8(a0)
-+ 786:	4618                	lw	a4,8(a2)
-+ 788:	9f2d                	addw	a4,a4,a1
-+ 78a:	fee52c23          	sw	a4,-8(a0)
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 78c:	6398                	ld	a4,0(a5)
-- 78e:	6310                	ld	a2,0(a4)
-- 790:	a83d                	j	7ce <free+0x5e>
-+ 78e:	6398                	ld	a4,0(a5)
-+ 790:	6310                	ld	a2,0(a4)
-+ 792:	a83d                	j	7d0 <free+0x5e>
-   } else
-     bp->s.ptr = p->s.ptr;
-   if(p + p->s.size == bp){
-     p->s.size += bp->s.size;
-- 792:	ff852703          	lw	a4,-8(a0)
-- 796:	9f31                	addw	a4,a4,a2
-- 798:	c798                	sw	a4,8(a5)
-+ 794:	ff852703          	lw	a4,-8(a0)
-+ 798:	9f31                	addw	a4,a4,a2
-+ 79a:	c798                	sw	a4,8(a5)
-     p->s.ptr = bp->s.ptr;
-- 79a:	ff053683          	ld	a3,-16(a0)
-- 79e:	a091                	j	7e2 <free+0x72>
-+ 79c:	ff053683          	ld	a3,-16(a0)
-+ 7a0:	a091                	j	7e4 <free+0x72>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 7a0:	6398                	ld	a4,0(a5)
-- 7a2:	00e7e463          	bltu	a5,a4,7aa <free+0x3a>
-- 7a6:	00e6ea63          	bltu	a3,a4,7ba <free+0x4a>
-+ 7a2:	6398                	ld	a4,0(a5)
-+ 7a4:	00e7e463          	bltu	a5,a4,7ac <free+0x3a>
-+ 7a8:	00e6ea63          	bltu	a3,a4,7bc <free+0x4a>
- {
-- 7aa:	87ba                	mv	a5,a4
-+ 7ac:	87ba                	mv	a5,a4
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 7ac:	fed7fae3          	bgeu	a5,a3,7a0 <free+0x30>
-- 7b0:	6398                	ld	a4,0(a5)
-- 7b2:	00e6e463          	bltu	a3,a4,7ba <free+0x4a>
-+ 7ae:	fed7fae3          	bgeu	a5,a3,7a2 <free+0x30>
-+ 7b2:	6398                	ld	a4,0(a5)
-+ 7b4:	00e6e463          	bltu	a3,a4,7bc <free+0x4a>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 7b6:	fee7eae3          	bltu	a5,a4,7aa <free+0x3a>
-+ 7b8:	fee7eae3          	bltu	a5,a4,7ac <free+0x3a>
-   if(bp + bp->s.size == p->s.ptr){
-- 7ba:	ff852583          	lw	a1,-8(a0)
-- 7be:	6390                	ld	a2,0(a5)
-- 7c0:	02059813          	slli	a6,a1,0x20
-- 7c4:	01c85713          	srli	a4,a6,0x1c
-- 7c8:	9736                	add	a4,a4,a3
-- 7ca:	fae60de3          	beq	a2,a4,784 <free+0x14>
-+ 7bc:	ff852583          	lw	a1,-8(a0)
-+ 7c0:	6390                	ld	a2,0(a5)
-+ 7c2:	02059813          	sll	a6,a1,0x20
-+ 7c6:	01c85713          	srl	a4,a6,0x1c
-+ 7ca:	9736                	add	a4,a4,a3
-+ 7cc:	fae60de3          	beq	a2,a4,786 <free+0x14>
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 7ce:	fec53823          	sd	a2,-16(a0)
-+ 7d0:	fec53823          	sd	a2,-16(a0)
-   if(p + p->s.size == bp){
-- 7d2:	4790                	lw	a2,8(a5)
-- 7d4:	02061593          	slli	a1,a2,0x20
-- 7d8:	01c5d713          	srli	a4,a1,0x1c
-- 7dc:	973e                	add	a4,a4,a5
-- 7de:	fae68ae3          	beq	a3,a4,792 <free+0x22>
-+ 7d4:	4790                	lw	a2,8(a5)
-+ 7d6:	02061593          	sll	a1,a2,0x20
-+ 7da:	01c5d713          	srl	a4,a1,0x1c
-+ 7de:	973e                	add	a4,a4,a5
-+ 7e0:	fae68ae3          	beq	a3,a4,794 <free+0x22>
-     p->s.ptr = bp->s.ptr;
-- 7e2:	e394                	sd	a3,0(a5)
-+ 7e4:	e394                	sd	a3,0(a5)
-   } else
-     p->s.ptr = bp;
-   freep = p;
-- 7e4:	00001717          	auipc	a4,0x1
-- 7e8:	82f73623          	sd	a5,-2004(a4) # 1010 <freep>
-+ 7e6:	00001717          	auipc	a4,0x1
-+ 7ea:	82f73523          	sd	a5,-2006(a4) # 1010 <freep>
- }
-- 7ec:	6422                	ld	s0,8(sp)
-- 7ee:	0141                	addi	sp,sp,16
-- 7f0:	8082                	ret
-+ 7ee:	6422                	ld	s0,8(sp)
-+ 7f0:	0141                	add	sp,sp,16
-+ 7f2:	8082                	ret
- 
--00000000000007f2 <malloc>:
-+00000000000007f4 <malloc>:
-   return freep;
- }
- 
- void*
- malloc(uint nbytes)
- {
-- 7f2:	7139                	addi	sp,sp,-64
-- 7f4:	fc06                	sd	ra,56(sp)
-- 7f6:	f822                	sd	s0,48(sp)
-- 7f8:	f426                	sd	s1,40(sp)
-- 7fa:	ec4e                	sd	s3,24(sp)
-- 7fc:	0080                	addi	s0,sp,64
-+ 7f4:	7139                	add	sp,sp,-64
-+ 7f6:	fc06                	sd	ra,56(sp)
-+ 7f8:	f822                	sd	s0,48(sp)
-+ 7fa:	f426                	sd	s1,40(sp)
-+ 7fc:	f04a                	sd	s2,32(sp)
-+ 7fe:	ec4e                	sd	s3,24(sp)
-+ 800:	e852                	sd	s4,16(sp)
-+ 802:	e456                	sd	s5,8(sp)
-+ 804:	e05a                	sd	s6,0(sp)
-+ 806:	0080                	add	s0,sp,64
-   Header *p, *prevp;
-   uint nunits;
- 
-   nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;
-- 7fe:	02051493          	slli	s1,a0,0x20
-- 802:	9081                	srli	s1,s1,0x20
-- 804:	04bd                	addi	s1,s1,15
-- 806:	8091                	srli	s1,s1,0x4
-- 808:	0014899b          	addiw	s3,s1,1
-- 80c:	0485                	addi	s1,s1,1
-+ 808:	02051493          	sll	s1,a0,0x20
-+ 80c:	9081                	srl	s1,s1,0x20
-+ 80e:	04bd                	add	s1,s1,15
-+ 810:	8091                	srl	s1,s1,0x4
-+ 812:	0014899b          	addw	s3,s1,1
-+ 816:	0485                	add	s1,s1,1
-   if((prevp = freep) == 0){
-- 80e:	00001517          	auipc	a0,0x1
-- 812:	80253503          	ld	a0,-2046(a0) # 1010 <freep>
-- 816:	c915                	beqz	a0,84a <malloc+0x58>
-+ 818:	00000517          	auipc	a0,0x0
-+ 81c:	7f853503          	ld	a0,2040(a0) # 1010 <freep>
-+ 820:	c515                	beqz	a0,84c <malloc+0x58>
-     base.s.ptr = freep = prevp = &base;
-     base.s.size = 0;
-   }
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 818:	611c                	ld	a5,0(a0)
-+ 822:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 81a:	4798                	lw	a4,8(a5)
-- 81c:	08977a63          	bgeu	a4,s1,8b0 <malloc+0xbe>
-- 820:	f04a                	sd	s2,32(sp)
-- 822:	e852                	sd	s4,16(sp)
-- 824:	e456                	sd	s5,8(sp)
-- 826:	e05a                	sd	s6,0(sp)
-+ 824:	4798                	lw	a4,8(a5)
-+ 826:	02977f63          	bgeu	a4,s1,864 <malloc+0x70>
-   if(nu < 4096)
-- 828:	8a4e                	mv	s4,s3
-- 82a:	0009871b          	sext.w	a4,s3
-- 82e:	6685                	lui	a3,0x1
-- 830:	00d77363          	bgeu	a4,a3,836 <malloc+0x44>
-- 834:	6a05                	lui	s4,0x1
-- 836:	000a0b1b          	sext.w	s6,s4
-+ 82a:	8a4e                	mv	s4,s3
-+ 82c:	0009871b          	sext.w	a4,s3
-+ 830:	6685                	lui	a3,0x1
-+ 832:	00d77363          	bgeu	a4,a3,838 <malloc+0x44>
-+ 836:	6a05                	lui	s4,0x1
-+ 838:	000a0b1b          	sext.w	s6,s4
-   p = sbrk(nu * sizeof(Header));
-- 83a:	004a1a1b          	slliw	s4,s4,0x4
-+ 83c:	004a1a1b          	sllw	s4,s4,0x4
-         p->s.size = nunits;
-       }
-       freep = prevp;
-       return (void*)(p + 1);
-     }
-     if(p == freep)
-- 83e:	00000917          	auipc	s2,0x0
-- 842:	7d290913          	addi	s2,s2,2002 # 1010 <freep>
-+ 840:	00000917          	auipc	s2,0x0
-+ 844:	7d090913          	add	s2,s2,2000 # 1010 <freep>
-   if(p == (char*)-1)
-- 846:	5afd                	li	s5,-1
-- 848:	a081                	j	888 <malloc+0x96>
-- 84a:	f04a                	sd	s2,32(sp)
-- 84c:	e852                	sd	s4,16(sp)
-- 84e:	e456                	sd	s5,8(sp)
-- 850:	e05a                	sd	s6,0(sp)
-+ 848:	5afd                	li	s5,-1
-+ 84a:	a885                	j	8ba <malloc+0xc6>
-     base.s.ptr = freep = prevp = &base;
-- 852:	00000797          	auipc	a5,0x0
-- 856:	7ce78793          	addi	a5,a5,1998 # 1020 <base>
-- 85a:	00000717          	auipc	a4,0x0
-- 85e:	7af73b23          	sd	a5,1974(a4) # 1010 <freep>
-- 862:	e39c                	sd	a5,0(a5)
-+ 84c:	00000797          	auipc	a5,0x0
-+ 850:	7d478793          	add	a5,a5,2004 # 1020 <base>
-+ 854:	00000717          	auipc	a4,0x0
-+ 858:	7af73e23          	sd	a5,1980(a4) # 1010 <freep>
-+ 85c:	e39c                	sd	a5,0(a5)
-     base.s.size = 0;
-- 864:	0007a423          	sw	zero,8(a5)
-+ 85e:	0007a423          	sw	zero,8(a5)
-     if(p->s.size >= nunits){
-- 868:	b7c1                	j	828 <malloc+0x36>
-+ 862:	b7e1                	j	82a <malloc+0x36>
-+      if(p->s.size == nunits)
-+ 864:	02e48c63          	beq	s1,a4,89c <malloc+0xa8>
-+        p->s.size -= nunits;
-+ 868:	4137073b          	subw	a4,a4,s3
-+ 86c:	c798                	sw	a4,8(a5)
-+        p += p->s.size;
-+ 86e:	02071693          	sll	a3,a4,0x20
-+ 872:	01c6d713          	srl	a4,a3,0x1c
-+ 876:	97ba                	add	a5,a5,a4
-+        p->s.size = nunits;
-+ 878:	0137a423          	sw	s3,8(a5)
-+      freep = prevp;
-+ 87c:	00000717          	auipc	a4,0x0
-+ 880:	78a73a23          	sd	a0,1940(a4) # 1010 <freep>
-+      return (void*)(p + 1);
-+ 884:	01078513          	add	a0,a5,16
-+      if((p = morecore(nunits)) == 0)
-+        return 0;
-+  }
-+}
-+ 888:	70e2                	ld	ra,56(sp)
-+ 88a:	7442                	ld	s0,48(sp)
-+ 88c:	74a2                	ld	s1,40(sp)
-+ 88e:	7902                	ld	s2,32(sp)
-+ 890:	69e2                	ld	s3,24(sp)
-+ 892:	6a42                	ld	s4,16(sp)
-+ 894:	6aa2                	ld	s5,8(sp)
-+ 896:	6b02                	ld	s6,0(sp)
-+ 898:	6121                	add	sp,sp,64
-+ 89a:	8082                	ret
-         prevp->s.ptr = p->s.ptr;
-- 86a:	6398                	ld	a4,0(a5)
-- 86c:	e118                	sd	a4,0(a0)
-- 86e:	a8a9                	j	8c8 <malloc+0xd6>
-+ 89c:	6398                	ld	a4,0(a5)
-+ 89e:	e118                	sd	a4,0(a0)
-+ 8a0:	bff1                	j	87c <malloc+0x88>
-   hp->s.size = nu;
-- 870:	01652423          	sw	s6,8(a0)
-+ 8a2:	01652423          	sw	s6,8(a0)
-   free((void*)(hp + 1));
-- 874:	0541                	addi	a0,a0,16
-- 876:	efbff0ef          	jal	770 <free>
-+ 8a6:	0541                	add	a0,a0,16
-+ 8a8:	ecbff0ef          	jal	772 <free>
-   return freep;
-- 87a:	00093503          	ld	a0,0(s2)
-+ 8ac:	00093503          	ld	a0,0(s2)
-       if((p = morecore(nunits)) == 0)
-- 87e:	c12d                	beqz	a0,8e0 <malloc+0xee>
-+ 8b0:	dd61                	beqz	a0,888 <malloc+0x94>
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 880:	611c                	ld	a5,0(a0)
-+ 8b2:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 882:	4798                	lw	a4,8(a5)
-- 884:	02977263          	bgeu	a4,s1,8a8 <malloc+0xb6>
-+ 8b4:	4798                	lw	a4,8(a5)
-+ 8b6:	fa9777e3          	bgeu	a4,s1,864 <malloc+0x70>
-     if(p == freep)
-- 888:	00093703          	ld	a4,0(s2)
-- 88c:	853e                	mv	a0,a5
-- 88e:	fef719e3          	bne	a4,a5,880 <malloc+0x8e>
-+ 8ba:	00093703          	ld	a4,0(s2)
-+ 8be:	853e                	mv	a0,a5
-+ 8c0:	fef719e3          	bne	a4,a5,8b2 <malloc+0xbe>
-   p = sbrk(nu * sizeof(Header));
-- 892:	8552                	mv	a0,s4
-- 894:	b1bff0ef          	jal	3ae <sbrk>
-+ 8c4:	8552                	mv	a0,s4
-+ 8c6:	ae9ff0ef          	jal	3ae <sbrk>
-   if(p == (char*)-1)
-- 898:	fd551ce3          	bne	a0,s5,870 <malloc+0x7e>
-+ 8ca:	fd551ce3          	bne	a0,s5,8a2 <malloc+0xae>
-         return 0;
-- 89c:	4501                	li	a0,0
-- 89e:	7902                	ld	s2,32(sp)
-- 8a0:	6a42                	ld	s4,16(sp)
-- 8a2:	6aa2                	ld	s5,8(sp)
-- 8a4:	6b02                	ld	s6,0(sp)
-- 8a6:	a03d                	j	8d4 <malloc+0xe2>
-- 8a8:	7902                	ld	s2,32(sp)
-- 8aa:	6a42                	ld	s4,16(sp)
-- 8ac:	6aa2                	ld	s5,8(sp)
-- 8ae:	6b02                	ld	s6,0(sp)
--      if(p->s.size == nunits)
-- 8b0:	fae48de3          	beq	s1,a4,86a <malloc+0x78>
--        p->s.size -= nunits;
-- 8b4:	4137073b          	subw	a4,a4,s3
-- 8b8:	c798                	sw	a4,8(a5)
--        p += p->s.size;
-- 8ba:	02071693          	slli	a3,a4,0x20
-- 8be:	01c6d713          	srli	a4,a3,0x1c
-- 8c2:	97ba                	add	a5,a5,a4
--        p->s.size = nunits;
-- 8c4:	0137a423          	sw	s3,8(a5)
--      freep = prevp;
-- 8c8:	00000717          	auipc	a4,0x0
-- 8cc:	74a73423          	sd	a0,1864(a4) # 1010 <freep>
--      return (void*)(p + 1);
-- 8d0:	01078513          	addi	a0,a5,16
--  }
--}
-- 8d4:	70e2                	ld	ra,56(sp)
-- 8d6:	7442                	ld	s0,48(sp)
-- 8d8:	74a2                	ld	s1,40(sp)
-- 8da:	69e2                	ld	s3,24(sp)
-- 8dc:	6121                	addi	sp,sp,64
-- 8de:	8082                	ret
-- 8e0:	7902                	ld	s2,32(sp)
-- 8e2:	6a42                	ld	s4,16(sp)
-- 8e4:	6aa2                	ld	s5,8(sp)
-- 8e6:	6b02                	ld	s6,0(sp)
-- 8e8:	b7f5                	j	8d4 <malloc+0xe2>
-+ 8ce:	4501                	li	a0,0
-+ 8d0:	bf65                	j	888 <malloc+0x94>
-diff --git a/Assignments/Assignment-6/xv6/user/init.d b/Assignments/Assignment-6/xv6/user/init.d
-index b1aaf05..82d3c33 100644
---- a/Assignments/Assignment-6/xv6/user/init.d
-+++ b/Assignments/Assignment-6/xv6/user/init.d
-@@ -1,4 +1,2 @@
--user/init.o: user/init.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/stat.h kernel/spinlock.h kernel/sleeplock.h \
-- kernel/fs.h kernel/file.h user/user.h kernel/fcntl.h
-+user/init.o: user/init.c kernel/types.h kernel/stat.h kernel/spinlock.h \
-+ kernel/sleeplock.h kernel/fs.h kernel/file.h user/user.h kernel/fcntl.h
-diff --git a/Assignments/Assignment-6/xv6/user/init.o b/Assignments/Assignment-6/xv6/user/init.o
-index 5095de7..24eeed3 100644
-Binary files a/Assignments/Assignment-6/xv6/user/init.o and b/Assignments/Assignment-6/xv6/user/init.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/init.sym b/Assignments/Assignment-6/xv6/user/init.sym
-index a6c150c..99df905 100644
---- a/Assignments/Assignment-6/xv6/user/init.sym
-+++ b/Assignments/Assignment-6/xv6/user/init.sym
-@@ -1,6 +1,5 @@
- 0000000000000000 .text
--00000000000008f0 .rodata
--0000000000000988 .eh_frame
-+00000000000008d8 .rodata
- 0000000000001000 .data
- 0000000000001010 .bss
- 0000000000000000 .debug_info
-@@ -11,6 +10,7 @@
- 0000000000000000 .debug_str
- 0000000000000000 .comment
- 0000000000000000 .riscv.attributes
-+0000000000000000 .debug_frame
- 0000000000000000 .debug_ranges
- 0000000000000000 init.c
- 0000000000000000 ulib.c
-@@ -18,24 +18,24 @@
- 0000000000000000 printf.c
- 00000000000003c6 putc
- 00000000000003e4 printint
--0000000000000970 digits
-+0000000000000960 digits
- 0000000000000000 umalloc.c
- 0000000000001010 freep
- 0000000000001020 base
- 00000000000000ce strcpy
--000000000000073e printf
-+0000000000000740 printf
- 0000000000001000 argv
- 0000000000000278 memmove
- 000000000000036e mknod
- 0000000000000186 gets
- 00000000000003a6 getpid
- 000000000000030a memcpy
--00000000000007f2 malloc
-+00000000000007f4 malloc
- 00000000000003b6 sleep
- 0000000000000336 pipe
- 0000000000000346 write
- 000000000000037e fstat
--0000000000000714 fprintf
-+0000000000000716 fprintf
- 0000000000000356 kill
- 000000000000048c vprintf
- 0000000000000396 chdir
-@@ -61,4 +61,4 @@
- 0000000000000162 strchr
- 000000000000038e mkdir
- 000000000000034e close
--0000000000000770 free
-+0000000000000772 free
-diff --git a/Assignments/Assignment-6/xv6/user/initcode.asm b/Assignments/Assignment-6/xv6/user/initcode.asm
-index 00b7104..a3aaa9d 100644
---- a/Assignments/Assignment-6/xv6/user/initcode.asm
-+++ b/Assignments/Assignment-6/xv6/user/initcode.asm
-@@ -34,7 +34,7 @@ exit:
- 
- 0000000000000024 <init>:
-   24:	696e692f          	.word	0x696e692f
--  28:	Address 0x28 is out of bounds.
-+  28:	           	Address 0x28 is out of bounds.
- 
- 
- 000000000000002b <argv>:
-diff --git a/Assignments/Assignment-6/xv6/user/initcode.o b/Assignments/Assignment-6/xv6/user/initcode.o
-index 4d39c4c..730ea30 100644
-Binary files a/Assignments/Assignment-6/xv6/user/initcode.o and b/Assignments/Assignment-6/xv6/user/initcode.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/initcode.out b/Assignments/Assignment-6/xv6/user/initcode.out
-index 882c1df..3ea4ef9 100755
-Binary files a/Assignments/Assignment-6/xv6/user/initcode.out and b/Assignments/Assignment-6/xv6/user/initcode.out differ
-diff --git a/Assignments/Assignment-6/xv6/user/kill.asm b/Assignments/Assignment-6/xv6/user/kill.asm
-index 3d17d80..0273db7 100644
---- a/Assignments/Assignment-6/xv6/user/kill.asm
-+++ b/Assignments/Assignment-6/xv6/user/kill.asm
-@@ -11,22 +11,22 @@ Disassembly of section .text:
- int
- main(int argc, char **argv)
- {
--   0:	1101                	addi	sp,sp,-32
-+   0:	1101                	add	sp,sp,-32
-    2:	ec06                	sd	ra,24(sp)
-    4:	e822                	sd	s0,16(sp)
--   6:	1000                	addi	s0,sp,32
-+   6:	e426                	sd	s1,8(sp)
-+   8:	e04a                	sd	s2,0(sp)
-+   a:	1000                	add	s0,sp,32
-   int i;
- 
-   if(argc < 2){
--   8:	4785                	li	a5,1
--   a:	02a7d963          	bge	a5,a0,3c <main+0x3c>
--   e:	e426                	sd	s1,8(sp)
--  10:	e04a                	sd	s2,0(sp)
--  12:	00858493          	addi	s1,a1,8
--  16:	ffe5091b          	addiw	s2,a0,-2
--  1a:	02091793          	slli	a5,s2,0x20
--  1e:	01d7d913          	srli	s2,a5,0x1d
--  22:	05c1                	addi	a1,a1,16
-+   c:	4785                	li	a5,1
-+   e:	02a7d763          	bge	a5,a0,3c <main+0x3c>
-+  12:	00858493          	add	s1,a1,8
-+  16:	ffe5091b          	addw	s2,a0,-2
-+  1a:	02091793          	sll	a5,s2,0x20
-+  1e:	01d7d913          	srl	s2,a5,0x1d
-+  22:	05c1                	add	a1,a1,16
-   24:	992e                	add	s2,s2,a1
-     fprintf(2, "usage: kill pid...\n");
-     exit(1);
-@@ -34,700 +34,700 @@ main(int argc, char **argv)
-   for(i=1; i<argc; i++)
-     kill(atoi(argv[i]));
-   26:	6088                	ld	a0,0(s1)
--  28:	1a0000ef          	jal	1c8 <atoi>
--  2c:	2c2000ef          	jal	2ee <kill>
-+  28:	19c000ef          	jal	1c4 <atoi>
-+  2c:	2be000ef          	jal	2ea <kill>
-   for(i=1; i<argc; i++)
--  30:	04a1                	addi	s1,s1,8
-+  30:	04a1                	add	s1,s1,8
-   32:	ff249ae3          	bne	s1,s2,26 <main+0x26>
-   exit(0);
-   36:	4501                	li	a0,0
--  38:	286000ef          	jal	2be <exit>
--  3c:	e426                	sd	s1,8(sp)
--  3e:	e04a                	sd	s2,0(sp)
-+  38:	282000ef          	jal	2ba <exit>
-     fprintf(2, "usage: kill pid...\n");
--  40:	00001597          	auipc	a1,0x1
--  44:	85058593          	addi	a1,a1,-1968 # 890 <malloc+0x106>
--  48:	4509                	li	a0,2
--  4a:	662000ef          	jal	6ac <fprintf>
-+  3c:	00001597          	auipc	a1,0x1
-+  40:	83458593          	add	a1,a1,-1996 # 870 <malloc+0xe8>
-+  44:	4509                	li	a0,2
-+  46:	664000ef          	jal	6aa <fprintf>
-     exit(1);
--  4e:	4505                	li	a0,1
--  50:	26e000ef          	jal	2be <exit>
-+  4a:	4505                	li	a0,1
-+  4c:	26e000ef          	jal	2ba <exit>
- 
--0000000000000054 <start>:
-+0000000000000050 <start>:
- /* */
- /* wrapper so that it's OK if main() does not call exit(). */
- /* */
- void
- start()
- {
--  54:	1141                	addi	sp,sp,-16
--  56:	e406                	sd	ra,8(sp)
--  58:	e022                	sd	s0,0(sp)
--  5a:	0800                	addi	s0,sp,16
-+  50:	1141                	add	sp,sp,-16
-+  52:	e406                	sd	ra,8(sp)
-+  54:	e022                	sd	s0,0(sp)
-+  56:	0800                	add	s0,sp,16
-   extern int main();
-   main();
--  5c:	fa5ff0ef          	jal	0 <main>
-+  58:	fa9ff0ef          	jal	0 <main>
-   exit(0);
--  60:	4501                	li	a0,0
--  62:	25c000ef          	jal	2be <exit>
-+  5c:	4501                	li	a0,0
-+  5e:	25c000ef          	jal	2ba <exit>
- 
--0000000000000066 <strcpy>:
-+0000000000000062 <strcpy>:
- }
- 
- char*
- strcpy(char *s, const char *t)
- {
--  66:	1141                	addi	sp,sp,-16
--  68:	e422                	sd	s0,8(sp)
--  6a:	0800                	addi	s0,sp,16
-+  62:	1141                	add	sp,sp,-16
-+  64:	e422                	sd	s0,8(sp)
-+  66:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
--  6c:	87aa                	mv	a5,a0
--  6e:	0585                	addi	a1,a1,1
--  70:	0785                	addi	a5,a5,1
--  72:	fff5c703          	lbu	a4,-1(a1)
--  76:	fee78fa3          	sb	a4,-1(a5)
--  7a:	fb75                	bnez	a4,6e <strcpy+0x8>
-+  68:	87aa                	mv	a5,a0
-+  6a:	0585                	add	a1,a1,1
-+  6c:	0785                	add	a5,a5,1
-+  6e:	fff5c703          	lbu	a4,-1(a1)
-+  72:	fee78fa3          	sb	a4,-1(a5)
-+  76:	fb75                	bnez	a4,6a <strcpy+0x8>
-     ;
-   return os;
- }
--  7c:	6422                	ld	s0,8(sp)
--  7e:	0141                	addi	sp,sp,16
--  80:	8082                	ret
-+  78:	6422                	ld	s0,8(sp)
-+  7a:	0141                	add	sp,sp,16
-+  7c:	8082                	ret
- 
--0000000000000082 <strcmp>:
-+000000000000007e <strcmp>:
- 
- int
- strcmp(const char *p, const char *q)
- {
--  82:	1141                	addi	sp,sp,-16
--  84:	e422                	sd	s0,8(sp)
--  86:	0800                	addi	s0,sp,16
-+  7e:	1141                	add	sp,sp,-16
-+  80:	e422                	sd	s0,8(sp)
-+  82:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
--  88:	00054783          	lbu	a5,0(a0)
--  8c:	cb91                	beqz	a5,a0 <strcmp+0x1e>
--  8e:	0005c703          	lbu	a4,0(a1)
--  92:	00f71763          	bne	a4,a5,a0 <strcmp+0x1e>
-+  84:	00054783          	lbu	a5,0(a0)
-+  88:	cb91                	beqz	a5,9c <strcmp+0x1e>
-+  8a:	0005c703          	lbu	a4,0(a1)
-+  8e:	00f71763          	bne	a4,a5,9c <strcmp+0x1e>
-     p++, q++;
--  96:	0505                	addi	a0,a0,1
--  98:	0585                	addi	a1,a1,1
-+  92:	0505                	add	a0,a0,1
-+  94:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
--  9a:	00054783          	lbu	a5,0(a0)
--  9e:	fbe5                	bnez	a5,8e <strcmp+0xc>
-+  96:	00054783          	lbu	a5,0(a0)
-+  9a:	fbe5                	bnez	a5,8a <strcmp+0xc>
-   return (uchar)*p - (uchar)*q;
--  a0:	0005c503          	lbu	a0,0(a1)
-+  9c:	0005c503          	lbu	a0,0(a1)
- }
--  a4:	40a7853b          	subw	a0,a5,a0
--  a8:	6422                	ld	s0,8(sp)
--  aa:	0141                	addi	sp,sp,16
--  ac:	8082                	ret
-+  a0:	40a7853b          	subw	a0,a5,a0
-+  a4:	6422                	ld	s0,8(sp)
-+  a6:	0141                	add	sp,sp,16
-+  a8:	8082                	ret
- 
--00000000000000ae <strlen>:
-+00000000000000aa <strlen>:
- 
- uint
- strlen(const char *s)
- {
--  ae:	1141                	addi	sp,sp,-16
--  b0:	e422                	sd	s0,8(sp)
--  b2:	0800                	addi	s0,sp,16
-+  aa:	1141                	add	sp,sp,-16
-+  ac:	e422                	sd	s0,8(sp)
-+  ae:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
--  b4:	00054783          	lbu	a5,0(a0)
--  b8:	cf91                	beqz	a5,d4 <strlen+0x26>
--  ba:	0505                	addi	a0,a0,1
--  bc:	87aa                	mv	a5,a0
--  be:	86be                	mv	a3,a5
--  c0:	0785                	addi	a5,a5,1
--  c2:	fff7c703          	lbu	a4,-1(a5)
--  c6:	ff65                	bnez	a4,be <strlen+0x10>
--  c8:	40a6853b          	subw	a0,a3,a0
--  cc:	2505                	addiw	a0,a0,1
-+  b0:	00054783          	lbu	a5,0(a0)
-+  b4:	cf91                	beqz	a5,d0 <strlen+0x26>
-+  b6:	0505                	add	a0,a0,1
-+  b8:	87aa                	mv	a5,a0
-+  ba:	86be                	mv	a3,a5
-+  bc:	0785                	add	a5,a5,1
-+  be:	fff7c703          	lbu	a4,-1(a5)
-+  c2:	ff65                	bnez	a4,ba <strlen+0x10>
-+  c4:	40a6853b          	subw	a0,a3,a0
-+  c8:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
--  ce:	6422                	ld	s0,8(sp)
--  d0:	0141                	addi	sp,sp,16
--  d2:	8082                	ret
-+  ca:	6422                	ld	s0,8(sp)
-+  cc:	0141                	add	sp,sp,16
-+  ce:	8082                	ret
-   for(n = 0; s[n]; n++)
--  d4:	4501                	li	a0,0
--  d6:	bfe5                	j	ce <strlen+0x20>
-+  d0:	4501                	li	a0,0
-+  d2:	bfe5                	j	ca <strlen+0x20>
- 
--00000000000000d8 <memset>:
-+00000000000000d4 <memset>:
- 
- void*
- memset(void *dst, int c, uint n)
- {
--  d8:	1141                	addi	sp,sp,-16
--  da:	e422                	sd	s0,8(sp)
--  dc:	0800                	addi	s0,sp,16
-+  d4:	1141                	add	sp,sp,-16
-+  d6:	e422                	sd	s0,8(sp)
-+  d8:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
--  de:	ca19                	beqz	a2,f4 <memset+0x1c>
--  e0:	87aa                	mv	a5,a0
--  e2:	1602                	slli	a2,a2,0x20
--  e4:	9201                	srli	a2,a2,0x20
--  e6:	00a60733          	add	a4,a2,a0
-+  da:	ca19                	beqz	a2,f0 <memset+0x1c>
-+  dc:	87aa                	mv	a5,a0
-+  de:	1602                	sll	a2,a2,0x20
-+  e0:	9201                	srl	a2,a2,0x20
-+  e2:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
--  ea:	00b78023          	sb	a1,0(a5)
-+  e6:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
--  ee:	0785                	addi	a5,a5,1
--  f0:	fee79de3          	bne	a5,a4,ea <memset+0x12>
-+  ea:	0785                	add	a5,a5,1
-+  ec:	fee79de3          	bne	a5,a4,e6 <memset+0x12>
-   }
-   return dst;
- }
--  f4:	6422                	ld	s0,8(sp)
--  f6:	0141                	addi	sp,sp,16
--  f8:	8082                	ret
-+  f0:	6422                	ld	s0,8(sp)
-+  f2:	0141                	add	sp,sp,16
-+  f4:	8082                	ret
- 
--00000000000000fa <strchr>:
-+00000000000000f6 <strchr>:
- 
- char*
- strchr(const char *s, char c)
- {
--  fa:	1141                	addi	sp,sp,-16
--  fc:	e422                	sd	s0,8(sp)
--  fe:	0800                	addi	s0,sp,16
-+  f6:	1141                	add	sp,sp,-16
-+  f8:	e422                	sd	s0,8(sp)
-+  fa:	0800                	add	s0,sp,16
-   for(; *s; s++)
-- 100:	00054783          	lbu	a5,0(a0)
-- 104:	cb99                	beqz	a5,11a <strchr+0x20>
-+  fc:	00054783          	lbu	a5,0(a0)
-+ 100:	cb99                	beqz	a5,116 <strchr+0x20>
-     if(*s == c)
-- 106:	00f58763          	beq	a1,a5,114 <strchr+0x1a>
-+ 102:	00f58763          	beq	a1,a5,110 <strchr+0x1a>
-   for(; *s; s++)
-- 10a:	0505                	addi	a0,a0,1
-- 10c:	00054783          	lbu	a5,0(a0)
-- 110:	fbfd                	bnez	a5,106 <strchr+0xc>
-+ 106:	0505                	add	a0,a0,1
-+ 108:	00054783          	lbu	a5,0(a0)
-+ 10c:	fbfd                	bnez	a5,102 <strchr+0xc>
-       return (char*)s;
-   return 0;
-- 112:	4501                	li	a0,0
-+ 10e:	4501                	li	a0,0
- }
-- 114:	6422                	ld	s0,8(sp)
-- 116:	0141                	addi	sp,sp,16
-- 118:	8082                	ret
-+ 110:	6422                	ld	s0,8(sp)
-+ 112:	0141                	add	sp,sp,16
-+ 114:	8082                	ret
-   return 0;
-- 11a:	4501                	li	a0,0
-- 11c:	bfe5                	j	114 <strchr+0x1a>
-+ 116:	4501                	li	a0,0
-+ 118:	bfe5                	j	110 <strchr+0x1a>
- 
--000000000000011e <gets>:
-+000000000000011a <gets>:
- 
- char*
- gets(char *buf, int max)
- {
-- 11e:	711d                	addi	sp,sp,-96
-- 120:	ec86                	sd	ra,88(sp)
-- 122:	e8a2                	sd	s0,80(sp)
-- 124:	e4a6                	sd	s1,72(sp)
-- 126:	e0ca                	sd	s2,64(sp)
-- 128:	fc4e                	sd	s3,56(sp)
-- 12a:	f852                	sd	s4,48(sp)
-- 12c:	f456                	sd	s5,40(sp)
-- 12e:	f05a                	sd	s6,32(sp)
-- 130:	ec5e                	sd	s7,24(sp)
-- 132:	1080                	addi	s0,sp,96
-- 134:	8baa                	mv	s7,a0
-- 136:	8a2e                	mv	s4,a1
-+ 11a:	711d                	add	sp,sp,-96
-+ 11c:	ec86                	sd	ra,88(sp)
-+ 11e:	e8a2                	sd	s0,80(sp)
-+ 120:	e4a6                	sd	s1,72(sp)
-+ 122:	e0ca                	sd	s2,64(sp)
-+ 124:	fc4e                	sd	s3,56(sp)
-+ 126:	f852                	sd	s4,48(sp)
-+ 128:	f456                	sd	s5,40(sp)
-+ 12a:	f05a                	sd	s6,32(sp)
-+ 12c:	ec5e                	sd	s7,24(sp)
-+ 12e:	1080                	add	s0,sp,96
-+ 130:	8baa                	mv	s7,a0
-+ 132:	8a2e                	mv	s4,a1
-   int i, cc;
-   char c;
- 
-   for(i=0; i+1 < max; ){
-- 138:	892a                	mv	s2,a0
-- 13a:	4481                	li	s1,0
-+ 134:	892a                	mv	s2,a0
-+ 136:	4481                	li	s1,0
-     cc = read(0, &c, 1);
-     if(cc < 1)
-       break;
-     buf[i++] = c;
-     if(c == '\n' || c == '\r')
-- 13c:	4aa9                	li	s5,10
-- 13e:	4b35                	li	s6,13
-+ 138:	4aa9                	li	s5,10
-+ 13a:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
-- 140:	89a6                	mv	s3,s1
-- 142:	2485                	addiw	s1,s1,1
-- 144:	0344d663          	bge	s1,s4,170 <gets+0x52>
-+ 13c:	89a6                	mv	s3,s1
-+ 13e:	2485                	addw	s1,s1,1
-+ 140:	0344d663          	bge	s1,s4,16c <gets+0x52>
-     cc = read(0, &c, 1);
-- 148:	4605                	li	a2,1
-- 14a:	faf40593          	addi	a1,s0,-81
-- 14e:	4501                	li	a0,0
-- 150:	186000ef          	jal	2d6 <read>
-+ 144:	4605                	li	a2,1
-+ 146:	faf40593          	add	a1,s0,-81
-+ 14a:	4501                	li	a0,0
-+ 14c:	186000ef          	jal	2d2 <read>
-     if(cc < 1)
-- 154:	00a05e63          	blez	a0,170 <gets+0x52>
-+ 150:	00a05e63          	blez	a0,16c <gets+0x52>
-     buf[i++] = c;
-- 158:	faf44783          	lbu	a5,-81(s0)
-- 15c:	00f90023          	sb	a5,0(s2)
-+ 154:	faf44783          	lbu	a5,-81(s0)
-+ 158:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
-- 160:	01578763          	beq	a5,s5,16e <gets+0x50>
-- 164:	0905                	addi	s2,s2,1
-- 166:	fd679de3          	bne	a5,s6,140 <gets+0x22>
--    buf[i++] = c;
-+ 15c:	01578763          	beq	a5,s5,16a <gets+0x50>
-+ 160:	0905                	add	s2,s2,1
-+ 162:	fd679de3          	bne	a5,s6,13c <gets+0x22>
-+  for(i=0; i+1 < max; ){
-+ 166:	89a6                	mv	s3,s1
-+ 168:	a011                	j	16c <gets+0x52>
-  16a:	89a6                	mv	s3,s1
-- 16c:	a011                	j	170 <gets+0x52>
-- 16e:	89a6                	mv	s3,s1
-       break;
-   }
-   buf[i] = '\0';
-- 170:	99de                	add	s3,s3,s7
-- 172:	00098023          	sb	zero,0(s3)
-+ 16c:	99de                	add	s3,s3,s7
-+ 16e:	00098023          	sb	zero,0(s3)
-   return buf;
- }
-- 176:	855e                	mv	a0,s7
-- 178:	60e6                	ld	ra,88(sp)
-- 17a:	6446                	ld	s0,80(sp)
-- 17c:	64a6                	ld	s1,72(sp)
-- 17e:	6906                	ld	s2,64(sp)
-- 180:	79e2                	ld	s3,56(sp)
-- 182:	7a42                	ld	s4,48(sp)
-- 184:	7aa2                	ld	s5,40(sp)
-- 186:	7b02                	ld	s6,32(sp)
-- 188:	6be2                	ld	s7,24(sp)
-- 18a:	6125                	addi	sp,sp,96
-- 18c:	8082                	ret
--
--000000000000018e <stat>:
-+ 172:	855e                	mv	a0,s7
-+ 174:	60e6                	ld	ra,88(sp)
-+ 176:	6446                	ld	s0,80(sp)
-+ 178:	64a6                	ld	s1,72(sp)
-+ 17a:	6906                	ld	s2,64(sp)
-+ 17c:	79e2                	ld	s3,56(sp)
-+ 17e:	7a42                	ld	s4,48(sp)
-+ 180:	7aa2                	ld	s5,40(sp)
-+ 182:	7b02                	ld	s6,32(sp)
-+ 184:	6be2                	ld	s7,24(sp)
-+ 186:	6125                	add	sp,sp,96
-+ 188:	8082                	ret
-+
-+000000000000018a <stat>:
- 
- int
- stat(const char *n, struct stat *st)
- {
-- 18e:	1101                	addi	sp,sp,-32
-- 190:	ec06                	sd	ra,24(sp)
-- 192:	e822                	sd	s0,16(sp)
-- 194:	e04a                	sd	s2,0(sp)
-- 196:	1000                	addi	s0,sp,32
-- 198:	892e                	mv	s2,a1
-+ 18a:	1101                	add	sp,sp,-32
-+ 18c:	ec06                	sd	ra,24(sp)
-+ 18e:	e822                	sd	s0,16(sp)
-+ 190:	e426                	sd	s1,8(sp)
-+ 192:	e04a                	sd	s2,0(sp)
-+ 194:	1000                	add	s0,sp,32
-+ 196:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
-- 19a:	4581                	li	a1,0
-- 19c:	162000ef          	jal	2fe <open>
-+ 198:	4581                	li	a1,0
-+ 19a:	160000ef          	jal	2fa <open>
-   if(fd < 0)
-- 1a0:	02054263          	bltz	a0,1c4 <stat+0x36>
-- 1a4:	e426                	sd	s1,8(sp)
-- 1a6:	84aa                	mv	s1,a0
-+ 19e:	02054163          	bltz	a0,1c0 <stat+0x36>
-+ 1a2:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
-- 1a8:	85ca                	mv	a1,s2
-- 1aa:	16c000ef          	jal	316 <fstat>
-- 1ae:	892a                	mv	s2,a0
-+ 1a4:	85ca                	mv	a1,s2
-+ 1a6:	16c000ef          	jal	312 <fstat>
-+ 1aa:	892a                	mv	s2,a0
-   close(fd);
-- 1b0:	8526                	mv	a0,s1
-- 1b2:	134000ef          	jal	2e6 <close>
-+ 1ac:	8526                	mv	a0,s1
-+ 1ae:	134000ef          	jal	2e2 <close>
-   return r;
-- 1b6:	64a2                	ld	s1,8(sp)
- }
-- 1b8:	854a                	mv	a0,s2
-- 1ba:	60e2                	ld	ra,24(sp)
-- 1bc:	6442                	ld	s0,16(sp)
-- 1be:	6902                	ld	s2,0(sp)
-- 1c0:	6105                	addi	sp,sp,32
-- 1c2:	8082                	ret
-+ 1b2:	854a                	mv	a0,s2
-+ 1b4:	60e2                	ld	ra,24(sp)
-+ 1b6:	6442                	ld	s0,16(sp)
-+ 1b8:	64a2                	ld	s1,8(sp)
-+ 1ba:	6902                	ld	s2,0(sp)
-+ 1bc:	6105                	add	sp,sp,32
-+ 1be:	8082                	ret
-     return -1;
-- 1c4:	597d                	li	s2,-1
-- 1c6:	bfcd                	j	1b8 <stat+0x2a>
-+ 1c0:	597d                	li	s2,-1
-+ 1c2:	bfc5                	j	1b2 <stat+0x28>
- 
--00000000000001c8 <atoi>:
-+00000000000001c4 <atoi>:
- 
- int
- atoi(const char *s)
- {
-- 1c8:	1141                	addi	sp,sp,-16
-- 1ca:	e422                	sd	s0,8(sp)
-- 1cc:	0800                	addi	s0,sp,16
-+ 1c4:	1141                	add	sp,sp,-16
-+ 1c6:	e422                	sd	s0,8(sp)
-+ 1c8:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
-- 1ce:	00054683          	lbu	a3,0(a0)
-- 1d2:	fd06879b          	addiw	a5,a3,-48
-- 1d6:	0ff7f793          	zext.b	a5,a5
-- 1da:	4625                	li	a2,9
-- 1dc:	02f66863          	bltu	a2,a5,20c <atoi+0x44>
-- 1e0:	872a                	mv	a4,a0
-+ 1ca:	00054683          	lbu	a3,0(a0)
-+ 1ce:	fd06879b          	addw	a5,a3,-48
-+ 1d2:	0ff7f793          	zext.b	a5,a5
-+ 1d6:	4625                	li	a2,9
-+ 1d8:	02f66863          	bltu	a2,a5,208 <atoi+0x44>
-+ 1dc:	872a                	mv	a4,a0
-   n = 0;
-- 1e2:	4501                	li	a0,0
-+ 1de:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
-- 1e4:	0705                	addi	a4,a4,1
-- 1e6:	0025179b          	slliw	a5,a0,0x2
-- 1ea:	9fa9                	addw	a5,a5,a0
-- 1ec:	0017979b          	slliw	a5,a5,0x1
-- 1f0:	9fb5                	addw	a5,a5,a3
-- 1f2:	fd07851b          	addiw	a0,a5,-48
-+ 1e0:	0705                	add	a4,a4,1
-+ 1e2:	0025179b          	sllw	a5,a0,0x2
-+ 1e6:	9fa9                	addw	a5,a5,a0
-+ 1e8:	0017979b          	sllw	a5,a5,0x1
-+ 1ec:	9fb5                	addw	a5,a5,a3
-+ 1ee:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
-- 1f6:	00074683          	lbu	a3,0(a4)
-- 1fa:	fd06879b          	addiw	a5,a3,-48
-- 1fe:	0ff7f793          	zext.b	a5,a5
-- 202:	fef671e3          	bgeu	a2,a5,1e4 <atoi+0x1c>
-+ 1f2:	00074683          	lbu	a3,0(a4)
-+ 1f6:	fd06879b          	addw	a5,a3,-48
-+ 1fa:	0ff7f793          	zext.b	a5,a5
-+ 1fe:	fef671e3          	bgeu	a2,a5,1e0 <atoi+0x1c>
-   return n;
- }
-- 206:	6422                	ld	s0,8(sp)
-- 208:	0141                	addi	sp,sp,16
-- 20a:	8082                	ret
-+ 202:	6422                	ld	s0,8(sp)
-+ 204:	0141                	add	sp,sp,16
-+ 206:	8082                	ret
-   n = 0;
-- 20c:	4501                	li	a0,0
-- 20e:	bfe5                	j	206 <atoi+0x3e>
-+ 208:	4501                	li	a0,0
-+ 20a:	bfe5                	j	202 <atoi+0x3e>
- 
--0000000000000210 <memmove>:
-+000000000000020c <memmove>:
- 
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
-- 210:	1141                	addi	sp,sp,-16
-- 212:	e422                	sd	s0,8(sp)
-- 214:	0800                	addi	s0,sp,16
-+ 20c:	1141                	add	sp,sp,-16
-+ 20e:	e422                	sd	s0,8(sp)
-+ 210:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-   dst = vdst;
-   src = vsrc;
-   if (src > dst) {
-- 216:	02b57463          	bgeu	a0,a1,23e <memmove+0x2e>
-+ 212:	02b57463          	bgeu	a0,a1,23a <memmove+0x2e>
-     while(n-- > 0)
-- 21a:	00c05f63          	blez	a2,238 <memmove+0x28>
-- 21e:	1602                	slli	a2,a2,0x20
-- 220:	9201                	srli	a2,a2,0x20
-- 222:	00c507b3          	add	a5,a0,a2
-+ 216:	00c05f63          	blez	a2,234 <memmove+0x28>
-+ 21a:	1602                	sll	a2,a2,0x20
-+ 21c:	9201                	srl	a2,a2,0x20
-+ 21e:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
-- 226:	872a                	mv	a4,a0
-+ 222:	872a                	mv	a4,a0
-       *dst++ = *src++;
-- 228:	0585                	addi	a1,a1,1
-- 22a:	0705                	addi	a4,a4,1
-- 22c:	fff5c683          	lbu	a3,-1(a1)
-- 230:	fed70fa3          	sb	a3,-1(a4)
-+ 224:	0585                	add	a1,a1,1
-+ 226:	0705                	add	a4,a4,1
-+ 228:	fff5c683          	lbu	a3,-1(a1)
-+ 22c:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
-- 234:	fef71ae3          	bne	a4,a5,228 <memmove+0x18>
-+ 230:	fee79ae3          	bne	a5,a4,224 <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-   }
-   return vdst;
- }
-- 238:	6422                	ld	s0,8(sp)
-- 23a:	0141                	addi	sp,sp,16
-- 23c:	8082                	ret
-+ 234:	6422                	ld	s0,8(sp)
-+ 236:	0141                	add	sp,sp,16
-+ 238:	8082                	ret
-     dst += n;
-- 23e:	00c50733          	add	a4,a0,a2
-+ 23a:	00c50733          	add	a4,a0,a2
-     src += n;
-- 242:	95b2                	add	a1,a1,a2
-+ 23e:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
-- 244:	fec05ae3          	blez	a2,238 <memmove+0x28>
-- 248:	fff6079b          	addiw	a5,a2,-1
-- 24c:	1782                	slli	a5,a5,0x20
-- 24e:	9381                	srli	a5,a5,0x20
-- 250:	fff7c793          	not	a5,a5
-- 254:	97ba                	add	a5,a5,a4
-+ 240:	fec05ae3          	blez	a2,234 <memmove+0x28>
-+ 244:	fff6079b          	addw	a5,a2,-1
-+ 248:	1782                	sll	a5,a5,0x20
-+ 24a:	9381                	srl	a5,a5,0x20
-+ 24c:	fff7c793          	not	a5,a5
-+ 250:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
-- 256:	15fd                	addi	a1,a1,-1
-- 258:	177d                	addi	a4,a4,-1
-- 25a:	0005c683          	lbu	a3,0(a1)
-- 25e:	00d70023          	sb	a3,0(a4)
-+ 252:	15fd                	add	a1,a1,-1
-+ 254:	177d                	add	a4,a4,-1
-+ 256:	0005c683          	lbu	a3,0(a1)
-+ 25a:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
-- 262:	fee79ae3          	bne	a5,a4,256 <memmove+0x46>
-- 266:	bfc9                	j	238 <memmove+0x28>
-+ 25e:	fee79ae3          	bne	a5,a4,252 <memmove+0x46>
-+ 262:	bfc9                	j	234 <memmove+0x28>
- 
--0000000000000268 <memcmp>:
-+0000000000000264 <memcmp>:
- 
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
-- 268:	1141                	addi	sp,sp,-16
-- 26a:	e422                	sd	s0,8(sp)
-- 26c:	0800                	addi	s0,sp,16
-+ 264:	1141                	add	sp,sp,-16
-+ 266:	e422                	sd	s0,8(sp)
-+ 268:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
-- 26e:	ca05                	beqz	a2,29e <memcmp+0x36>
-- 270:	fff6069b          	addiw	a3,a2,-1
-- 274:	1682                	slli	a3,a3,0x20
-- 276:	9281                	srli	a3,a3,0x20
-- 278:	0685                	addi	a3,a3,1
-- 27a:	96aa                	add	a3,a3,a0
-+ 26a:	ca05                	beqz	a2,29a <memcmp+0x36>
-+ 26c:	fff6069b          	addw	a3,a2,-1
-+ 270:	1682                	sll	a3,a3,0x20
-+ 272:	9281                	srl	a3,a3,0x20
-+ 274:	0685                	add	a3,a3,1
-+ 276:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
-- 27c:	00054783          	lbu	a5,0(a0)
-- 280:	0005c703          	lbu	a4,0(a1)
-- 284:	00e79863          	bne	a5,a4,294 <memcmp+0x2c>
-+ 278:	00054783          	lbu	a5,0(a0)
-+ 27c:	0005c703          	lbu	a4,0(a1)
-+ 280:	00e79863          	bne	a5,a4,290 <memcmp+0x2c>
-       return *p1 - *p2;
-     }
-     p1++;
-- 288:	0505                	addi	a0,a0,1
-+ 284:	0505                	add	a0,a0,1
-     p2++;
-- 28a:	0585                	addi	a1,a1,1
-+ 286:	0585                	add	a1,a1,1
-   while (n-- > 0) {
-- 28c:	fed518e3          	bne	a0,a3,27c <memcmp+0x14>
-+ 288:	fed518e3          	bne	a0,a3,278 <memcmp+0x14>
-   }
-   return 0;
-- 290:	4501                	li	a0,0
-- 292:	a019                	j	298 <memcmp+0x30>
-+ 28c:	4501                	li	a0,0
-+ 28e:	a019                	j	294 <memcmp+0x30>
-       return *p1 - *p2;
-- 294:	40e7853b          	subw	a0,a5,a4
-+ 290:	40e7853b          	subw	a0,a5,a4
- }
-- 298:	6422                	ld	s0,8(sp)
-- 29a:	0141                	addi	sp,sp,16
-- 29c:	8082                	ret
-+ 294:	6422                	ld	s0,8(sp)
-+ 296:	0141                	add	sp,sp,16
-+ 298:	8082                	ret
-   return 0;
-- 29e:	4501                	li	a0,0
-- 2a0:	bfe5                	j	298 <memcmp+0x30>
-+ 29a:	4501                	li	a0,0
-+ 29c:	bfe5                	j	294 <memcmp+0x30>
- 
--00000000000002a2 <memcpy>:
-+000000000000029e <memcpy>:
- 
- void *
- memcpy(void *dst, const void *src, uint n)
- {
-- 2a2:	1141                	addi	sp,sp,-16
-- 2a4:	e406                	sd	ra,8(sp)
-- 2a6:	e022                	sd	s0,0(sp)
-- 2a8:	0800                	addi	s0,sp,16
-+ 29e:	1141                	add	sp,sp,-16
-+ 2a0:	e406                	sd	ra,8(sp)
-+ 2a2:	e022                	sd	s0,0(sp)
-+ 2a4:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
-- 2aa:	f67ff0ef          	jal	210 <memmove>
-+ 2a6:	f67ff0ef          	jal	20c <memmove>
- }
-- 2ae:	60a2                	ld	ra,8(sp)
-- 2b0:	6402                	ld	s0,0(sp)
-- 2b2:	0141                	addi	sp,sp,16
-- 2b4:	8082                	ret
-+ 2aa:	60a2                	ld	ra,8(sp)
-+ 2ac:	6402                	ld	s0,0(sp)
-+ 2ae:	0141                	add	sp,sp,16
-+ 2b0:	8082                	ret
- 
--00000000000002b6 <fork>:
-+00000000000002b2 <fork>:
- # generated by usys.pl - do not edit
- #include "kernel/syscall.h"
- .global fork
- fork:
-  li a7, SYS_fork
-- 2b6:	4885                	li	a7,1
-+ 2b2:	4885                	li	a7,1
-  ecall
-- 2b8:	00000073          	ecall
-+ 2b4:	00000073          	ecall
-  ret
-- 2bc:	8082                	ret
-+ 2b8:	8082                	ret
- 
--00000000000002be <exit>:
-+00000000000002ba <exit>:
- .global exit
- exit:
-  li a7, SYS_exit
-- 2be:	4889                	li	a7,2
-+ 2ba:	4889                	li	a7,2
-  ecall
-- 2c0:	00000073          	ecall
-+ 2bc:	00000073          	ecall
-  ret
-- 2c4:	8082                	ret
-+ 2c0:	8082                	ret
- 
--00000000000002c6 <wait>:
-+00000000000002c2 <wait>:
- .global wait
- wait:
-  li a7, SYS_wait
-- 2c6:	488d                	li	a7,3
-+ 2c2:	488d                	li	a7,3
-  ecall
-- 2c8:	00000073          	ecall
-+ 2c4:	00000073          	ecall
-  ret
-- 2cc:	8082                	ret
-+ 2c8:	8082                	ret
- 
--00000000000002ce <pipe>:
-+00000000000002ca <pipe>:
- .global pipe
- pipe:
-  li a7, SYS_pipe
-- 2ce:	4891                	li	a7,4
-+ 2ca:	4891                	li	a7,4
-  ecall
-- 2d0:	00000073          	ecall
-+ 2cc:	00000073          	ecall
-  ret
-- 2d4:	8082                	ret
-+ 2d0:	8082                	ret
- 
--00000000000002d6 <read>:
-+00000000000002d2 <read>:
- .global read
- read:
-  li a7, SYS_read
-- 2d6:	4895                	li	a7,5
-+ 2d2:	4895                	li	a7,5
-  ecall
-- 2d8:	00000073          	ecall
-+ 2d4:	00000073          	ecall
-  ret
-- 2dc:	8082                	ret
-+ 2d8:	8082                	ret
- 
--00000000000002de <write>:
-+00000000000002da <write>:
- .global write
- write:
-  li a7, SYS_write
-- 2de:	48c1                	li	a7,16
-+ 2da:	48c1                	li	a7,16
-  ecall
-- 2e0:	00000073          	ecall
-+ 2dc:	00000073          	ecall
-  ret
-- 2e4:	8082                	ret
-+ 2e0:	8082                	ret
- 
--00000000000002e6 <close>:
-+00000000000002e2 <close>:
- .global close
- close:
-  li a7, SYS_close
-- 2e6:	48d5                	li	a7,21
-+ 2e2:	48d5                	li	a7,21
-  ecall
-- 2e8:	00000073          	ecall
-+ 2e4:	00000073          	ecall
-  ret
-- 2ec:	8082                	ret
-+ 2e8:	8082                	ret
- 
--00000000000002ee <kill>:
-+00000000000002ea <kill>:
- .global kill
- kill:
-  li a7, SYS_kill
-- 2ee:	4899                	li	a7,6
-+ 2ea:	4899                	li	a7,6
-  ecall
-- 2f0:	00000073          	ecall
-+ 2ec:	00000073          	ecall
-  ret
-- 2f4:	8082                	ret
-+ 2f0:	8082                	ret
- 
--00000000000002f6 <exec>:
-+00000000000002f2 <exec>:
- .global exec
- exec:
-  li a7, SYS_exec
-- 2f6:	489d                	li	a7,7
-+ 2f2:	489d                	li	a7,7
-  ecall
-- 2f8:	00000073          	ecall
-+ 2f4:	00000073          	ecall
-  ret
-- 2fc:	8082                	ret
-+ 2f8:	8082                	ret
- 
--00000000000002fe <open>:
-+00000000000002fa <open>:
- .global open
- open:
-  li a7, SYS_open
-- 2fe:	48bd                	li	a7,15
-+ 2fa:	48bd                	li	a7,15
-  ecall
-- 300:	00000073          	ecall
-+ 2fc:	00000073          	ecall
-  ret
-- 304:	8082                	ret
-+ 300:	8082                	ret
- 
--0000000000000306 <mknod>:
-+0000000000000302 <mknod>:
- .global mknod
- mknod:
-  li a7, SYS_mknod
-- 306:	48c5                	li	a7,17
-+ 302:	48c5                	li	a7,17
-  ecall
-- 308:	00000073          	ecall
-+ 304:	00000073          	ecall
-  ret
-- 30c:	8082                	ret
-+ 308:	8082                	ret
- 
--000000000000030e <unlink>:
-+000000000000030a <unlink>:
- .global unlink
- unlink:
-  li a7, SYS_unlink
-- 30e:	48c9                	li	a7,18
-+ 30a:	48c9                	li	a7,18
-  ecall
-- 310:	00000073          	ecall
-+ 30c:	00000073          	ecall
-  ret
-- 314:	8082                	ret
-+ 310:	8082                	ret
- 
--0000000000000316 <fstat>:
-+0000000000000312 <fstat>:
- .global fstat
- fstat:
-  li a7, SYS_fstat
-- 316:	48a1                	li	a7,8
-+ 312:	48a1                	li	a7,8
-  ecall
-- 318:	00000073          	ecall
-+ 314:	00000073          	ecall
-  ret
-- 31c:	8082                	ret
-+ 318:	8082                	ret
- 
--000000000000031e <link>:
-+000000000000031a <link>:
- .global link
- link:
-  li a7, SYS_link
-- 31e:	48cd                	li	a7,19
-+ 31a:	48cd                	li	a7,19
-  ecall
-- 320:	00000073          	ecall
-+ 31c:	00000073          	ecall
-  ret
-- 324:	8082                	ret
-+ 320:	8082                	ret
- 
--0000000000000326 <mkdir>:
-+0000000000000322 <mkdir>:
- .global mkdir
- mkdir:
-  li a7, SYS_mkdir
-- 326:	48d1                	li	a7,20
-+ 322:	48d1                	li	a7,20
-  ecall
-- 328:	00000073          	ecall
-+ 324:	00000073          	ecall
-  ret
-- 32c:	8082                	ret
-+ 328:	8082                	ret
- 
--000000000000032e <chdir>:
-+000000000000032a <chdir>:
- .global chdir
- chdir:
-  li a7, SYS_chdir
-- 32e:	48a5                	li	a7,9
-+ 32a:	48a5                	li	a7,9
-  ecall
-- 330:	00000073          	ecall
-+ 32c:	00000073          	ecall
-  ret
-- 334:	8082                	ret
-+ 330:	8082                	ret
- 
--0000000000000336 <dup>:
-+0000000000000332 <dup>:
- .global dup
- dup:
-  li a7, SYS_dup
-- 336:	48a9                	li	a7,10
-+ 332:	48a9                	li	a7,10
-  ecall
-- 338:	00000073          	ecall
-+ 334:	00000073          	ecall
-  ret
-- 33c:	8082                	ret
-+ 338:	8082                	ret
- 
--000000000000033e <getpid>:
-+000000000000033a <getpid>:
- .global getpid
- getpid:
-  li a7, SYS_getpid
-- 33e:	48ad                	li	a7,11
-+ 33a:	48ad                	li	a7,11
-  ecall
-- 340:	00000073          	ecall
-+ 33c:	00000073          	ecall
-  ret
-- 344:	8082                	ret
-+ 340:	8082                	ret
- 
--0000000000000346 <sbrk>:
-+0000000000000342 <sbrk>:
- .global sbrk
- sbrk:
-  li a7, SYS_sbrk
-- 346:	48b1                	li	a7,12
-+ 342:	48b1                	li	a7,12
-  ecall
-- 348:	00000073          	ecall
-+ 344:	00000073          	ecall
-  ret
-- 34c:	8082                	ret
-+ 348:	8082                	ret
- 
--000000000000034e <sleep>:
-+000000000000034a <sleep>:
- .global sleep
- sleep:
-  li a7, SYS_sleep
-- 34e:	48b5                	li	a7,13
-+ 34a:	48b5                	li	a7,13
-  ecall
-- 350:	00000073          	ecall
-+ 34c:	00000073          	ecall
-  ret
-- 354:	8082                	ret
-+ 350:	8082                	ret
- 
--0000000000000356 <uptime>:
-+0000000000000352 <uptime>:
- .global uptime
- uptime:
-  li a7, SYS_uptime
-- 356:	48b9                	li	a7,14
-+ 352:	48b9                	li	a7,14
-  ecall
-- 358:	00000073          	ecall
-+ 354:	00000073          	ecall
-  ret
-- 35c:	8082                	ret
-+ 358:	8082                	ret
- 
--000000000000035e <putc>:
-+000000000000035a <putc>:
- 
- static char digits[] = "0123456789ABCDEF";
- 
- static void
- putc(int fd, char c)
- {
-- 35e:	1101                	addi	sp,sp,-32
-- 360:	ec06                	sd	ra,24(sp)
-- 362:	e822                	sd	s0,16(sp)
-- 364:	1000                	addi	s0,sp,32
-- 366:	feb407a3          	sb	a1,-17(s0)
-+ 35a:	1101                	add	sp,sp,-32
-+ 35c:	ec06                	sd	ra,24(sp)
-+ 35e:	e822                	sd	s0,16(sp)
-+ 360:	1000                	add	s0,sp,32
-+ 362:	feb407a3          	sb	a1,-17(s0)
-   write(fd, &c, 1);
-- 36a:	4605                	li	a2,1
-- 36c:	fef40593          	addi	a1,s0,-17
-- 370:	f6fff0ef          	jal	2de <write>
-+ 366:	4605                	li	a2,1
-+ 368:	fef40593          	add	a1,s0,-17
-+ 36c:	f6fff0ef          	jal	2da <write>
- }
-- 374:	60e2                	ld	ra,24(sp)
-- 376:	6442                	ld	s0,16(sp)
-- 378:	6105                	addi	sp,sp,32
-- 37a:	8082                	ret
-+ 370:	60e2                	ld	ra,24(sp)
-+ 372:	6442                	ld	s0,16(sp)
-+ 374:	6105                	add	sp,sp,32
-+ 376:	8082                	ret
- 
--000000000000037c <printint>:
-+0000000000000378 <printint>:
- 
- static void
- printint(int fd, int xx, int base, int sgn)
- {
-- 37c:	7139                	addi	sp,sp,-64
-- 37e:	fc06                	sd	ra,56(sp)
-- 380:	f822                	sd	s0,48(sp)
-- 382:	f426                	sd	s1,40(sp)
-- 384:	0080                	addi	s0,sp,64
-+ 378:	7139                	add	sp,sp,-64
-+ 37a:	fc06                	sd	ra,56(sp)
-+ 37c:	f822                	sd	s0,48(sp)
-+ 37e:	f426                	sd	s1,40(sp)
-+ 380:	f04a                	sd	s2,32(sp)
-+ 382:	ec4e                	sd	s3,24(sp)
-+ 384:	0080                	add	s0,sp,64
-  386:	84aa                	mv	s1,a0
-   char buf[16];
-   int i, neg;
-@@ -735,8 +735,8 @@ printint(int fd, int xx, int base, int sgn)
- 
-   neg = 0;
-   if(sgn && xx < 0){
-- 388:	c299                	beqz	a3,38e <printint+0x12>
-- 38a:	0805c963          	bltz	a1,41c <printint+0xa0>
-+ 388:	c299                	beqz	a3,38e <printint+0x16>
-+ 38a:	0805c763          	bltz	a1,418 <printint+0xa0>
-     neg = 1;
-     x = -xx;
-   } else {
-@@ -744,7 +744,7 @@ printint(int fd, int xx, int base, int sgn)
-  38e:	2581                	sext.w	a1,a1
-   neg = 0;
-  390:	4881                	li	a7,0
-- 392:	fc040693          	addi	a3,s0,-64
-+ 392:	fc040693          	add	a3,s0,-64
-   }
- 
-   i = 0;
-@@ -753,149 +753,149 @@ printint(int fd, int xx, int base, int sgn)
-     buf[i++] = digits[x % base];
-  398:	2601                	sext.w	a2,a2
-  39a:	00000517          	auipc	a0,0x0
-- 39e:	51650513          	addi	a0,a0,1302 # 8b0 <digits>
-+ 39e:	4f650513          	add	a0,a0,1270 # 890 <digits>
-  3a2:	883a                	mv	a6,a4
-- 3a4:	2705                	addiw	a4,a4,1
-+ 3a4:	2705                	addw	a4,a4,1
-  3a6:	02c5f7bb          	remuw	a5,a1,a2
-- 3aa:	1782                	slli	a5,a5,0x20
-- 3ac:	9381                	srli	a5,a5,0x20
-+ 3aa:	1782                	sll	a5,a5,0x20
-+ 3ac:	9381                	srl	a5,a5,0x20
-  3ae:	97aa                	add	a5,a5,a0
-  3b0:	0007c783          	lbu	a5,0(a5)
-  3b4:	00f68023          	sb	a5,0(a3)
-   }while((x /= base) != 0);
-  3b8:	0005879b          	sext.w	a5,a1
-  3bc:	02c5d5bb          	divuw	a1,a1,a2
-- 3c0:	0685                	addi	a3,a3,1
-- 3c2:	fec7f0e3          	bgeu	a5,a2,3a2 <printint+0x26>
-+ 3c0:	0685                	add	a3,a3,1
-+ 3c2:	fec7f0e3          	bgeu	a5,a2,3a2 <printint+0x2a>
-   if(neg)
-- 3c6:	00088c63          	beqz	a7,3de <printint+0x62>
-+ 3c6:	00088c63          	beqz	a7,3de <printint+0x66>
-     buf[i++] = '-';
-- 3ca:	fd070793          	addi	a5,a4,-48
-+ 3ca:	fd070793          	add	a5,a4,-48
-  3ce:	00878733          	add	a4,a5,s0
-  3d2:	02d00793          	li	a5,45
-  3d6:	fef70823          	sb	a5,-16(a4)
-- 3da:	0028071b          	addiw	a4,a6,2
-+ 3da:	0028071b          	addw	a4,a6,2
- 
-   while(--i >= 0)
-- 3de:	02e05a63          	blez	a4,412 <printint+0x96>
-- 3e2:	f04a                	sd	s2,32(sp)
-- 3e4:	ec4e                	sd	s3,24(sp)
-- 3e6:	fc040793          	addi	a5,s0,-64
-- 3ea:	00e78933          	add	s2,a5,a4
-- 3ee:	fff78993          	addi	s3,a5,-1
-- 3f2:	99ba                	add	s3,s3,a4
-- 3f4:	377d                	addiw	a4,a4,-1
-- 3f6:	1702                	slli	a4,a4,0x20
-- 3f8:	9301                	srli	a4,a4,0x20
-- 3fa:	40e989b3          	sub	s3,s3,a4
-+ 3de:	02e05663          	blez	a4,40a <printint+0x92>
-+ 3e2:	fc040793          	add	a5,s0,-64
-+ 3e6:	00e78933          	add	s2,a5,a4
-+ 3ea:	fff78993          	add	s3,a5,-1
-+ 3ee:	99ba                	add	s3,s3,a4
-+ 3f0:	377d                	addw	a4,a4,-1
-+ 3f2:	1702                	sll	a4,a4,0x20
-+ 3f4:	9301                	srl	a4,a4,0x20
-+ 3f6:	40e989b3          	sub	s3,s3,a4
-     putc(fd, buf[i]);
-- 3fe:	fff94583          	lbu	a1,-1(s2)
-- 402:	8526                	mv	a0,s1
-- 404:	f5bff0ef          	jal	35e <putc>
-+ 3fa:	fff94583          	lbu	a1,-1(s2)
-+ 3fe:	8526                	mv	a0,s1
-+ 400:	f5bff0ef          	jal	35a <putc>
-   while(--i >= 0)
-- 408:	197d                	addi	s2,s2,-1
-- 40a:	ff391ae3          	bne	s2,s3,3fe <printint+0x82>
-- 40e:	7902                	ld	s2,32(sp)
-- 410:	69e2                	ld	s3,24(sp)
-+ 404:	197d                	add	s2,s2,-1
-+ 406:	ff391ae3          	bne	s2,s3,3fa <printint+0x82>
- }
-- 412:	70e2                	ld	ra,56(sp)
-- 414:	7442                	ld	s0,48(sp)
-- 416:	74a2                	ld	s1,40(sp)
-- 418:	6121                	addi	sp,sp,64
-- 41a:	8082                	ret
-+ 40a:	70e2                	ld	ra,56(sp)
-+ 40c:	7442                	ld	s0,48(sp)
-+ 40e:	74a2                	ld	s1,40(sp)
-+ 410:	7902                	ld	s2,32(sp)
-+ 412:	69e2                	ld	s3,24(sp)
-+ 414:	6121                	add	sp,sp,64
-+ 416:	8082                	ret
-     x = -xx;
-- 41c:	40b005bb          	negw	a1,a1
-+ 418:	40b005bb          	negw	a1,a1
-     neg = 1;
-- 420:	4885                	li	a7,1
-+ 41c:	4885                	li	a7,1
-     x = -xx;
-- 422:	bf85                	j	392 <printint+0x16>
-+ 41e:	bf95                	j	392 <printint+0x1a>
- 
--0000000000000424 <vprintf>:
-+0000000000000420 <vprintf>:
- }
- 
- /* Print to the given fd. Only understands %d, %x, %p, %s. */
- void
- vprintf(int fd, const char *fmt, va_list ap)
- {
-- 424:	711d                	addi	sp,sp,-96
-- 426:	ec86                	sd	ra,88(sp)
-- 428:	e8a2                	sd	s0,80(sp)
-- 42a:	e0ca                	sd	s2,64(sp)
-- 42c:	1080                	addi	s0,sp,96
-+ 420:	711d                	add	sp,sp,-96
-+ 422:	ec86                	sd	ra,88(sp)
-+ 424:	e8a2                	sd	s0,80(sp)
-+ 426:	e4a6                	sd	s1,72(sp)
-+ 428:	e0ca                	sd	s2,64(sp)
-+ 42a:	fc4e                	sd	s3,56(sp)
-+ 42c:	f852                	sd	s4,48(sp)
-+ 42e:	f456                	sd	s5,40(sp)
-+ 430:	f05a                	sd	s6,32(sp)
-+ 432:	ec5e                	sd	s7,24(sp)
-+ 434:	e862                	sd	s8,16(sp)
-+ 436:	e466                	sd	s9,8(sp)
-+ 438:	e06a                	sd	s10,0(sp)
-+ 43a:	1080                	add	s0,sp,96
-   char *s;
-   int c0, c1, c2, i, state;
- 
-   state = 0;
-   for(i = 0; fmt[i]; i++){
-- 42e:	0005c903          	lbu	s2,0(a1)
-- 432:	26090863          	beqz	s2,6a2 <vprintf+0x27e>
-- 436:	e4a6                	sd	s1,72(sp)
-- 438:	fc4e                	sd	s3,56(sp)
-- 43a:	f852                	sd	s4,48(sp)
-- 43c:	f456                	sd	s5,40(sp)
-- 43e:	f05a                	sd	s6,32(sp)
-- 440:	ec5e                	sd	s7,24(sp)
-- 442:	e862                	sd	s8,16(sp)
-- 444:	e466                	sd	s9,8(sp)
-- 446:	8b2a                	mv	s6,a0
-- 448:	8a2e                	mv	s4,a1
-- 44a:	8bb2                	mv	s7,a2
-+ 43c:	0005c903          	lbu	s2,0(a1)
-+ 440:	24090763          	beqz	s2,68e <vprintf+0x26e>
-+ 444:	8b2a                	mv	s6,a0
-+ 446:	8a2e                	mv	s4,a1
-+ 448:	8bb2                	mv	s7,a2
-   state = 0;
-- 44c:	4981                	li	s3,0
-+ 44a:	4981                	li	s3,0
-   for(i = 0; fmt[i]; i++){
-- 44e:	4481                	li	s1,0
-- 450:	4701                	li	a4,0
-+ 44c:	4481                	li	s1,0
-+ 44e:	4701                	li	a4,0
-       if(c0 == '%'){
-         state = '%';
-       } else {
-         putc(fd, c0);
-       }
-     } else if(state == '%'){
-- 452:	02500a93          	li	s5,37
-+ 450:	02500a93          	li	s5,37
-       c1 = c2 = 0;
-       if(c0) c1 = fmt[i+1] & 0xff;
-       if(c1) c2 = fmt[i+2] & 0xff;
-       if(c0 == 'd'){
-- 456:	06400c13          	li	s8,100
-+ 454:	06400c13          	li	s8,100
-         printint(fd, va_arg(ap, int), 10, 1);
-       } else if(c0 == 'l' && c1 == 'd'){
-- 45a:	06c00c93          	li	s9,108
-- 45e:	a005                	j	47e <vprintf+0x5a>
-+ 458:	06c00c93          	li	s9,108
-+ 45c:	a005                	j	47c <vprintf+0x5c>
-         putc(fd, c0);
-- 460:	85ca                	mv	a1,s2
-- 462:	855a                	mv	a0,s6
-- 464:	efbff0ef          	jal	35e <putc>
-- 468:	a019                	j	46e <vprintf+0x4a>
-+ 45e:	85ca                	mv	a1,s2
-+ 460:	855a                	mv	a0,s6
-+ 462:	ef9ff0ef          	jal	35a <putc>
-+ 466:	a019                	j	46c <vprintf+0x4c>
-     } else if(state == '%'){
-- 46a:	03598263          	beq	s3,s5,48e <vprintf+0x6a>
-+ 468:	03598263          	beq	s3,s5,48c <vprintf+0x6c>
-   for(i = 0; fmt[i]; i++){
-- 46e:	2485                	addiw	s1,s1,1
-- 470:	8726                	mv	a4,s1
-- 472:	009a07b3          	add	a5,s4,s1
-- 476:	0007c903          	lbu	s2,0(a5)
-- 47a:	20090c63          	beqz	s2,692 <vprintf+0x26e>
-+ 46c:	2485                	addw	s1,s1,1
-+ 46e:	8726                	mv	a4,s1
-+ 470:	009a07b3          	add	a5,s4,s1
-+ 474:	0007c903          	lbu	s2,0(a5)
-+ 478:	20090b63          	beqz	s2,68e <vprintf+0x26e>
-     c0 = fmt[i] & 0xff;
-- 47e:	0009079b          	sext.w	a5,s2
-+ 47c:	0009079b          	sext.w	a5,s2
-     if(state == 0){
-- 482:	fe0994e3          	bnez	s3,46a <vprintf+0x46>
-+ 480:	fe0994e3          	bnez	s3,468 <vprintf+0x48>
-       if(c0 == '%'){
-- 486:	fd579de3          	bne	a5,s5,460 <vprintf+0x3c>
-+ 484:	fd579de3          	bne	a5,s5,45e <vprintf+0x3e>
-         state = '%';
-- 48a:	89be                	mv	s3,a5
-- 48c:	b7cd                	j	46e <vprintf+0x4a>
-+ 488:	89be                	mv	s3,a5
-+ 48a:	b7cd                	j	46c <vprintf+0x4c>
-       if(c0) c1 = fmt[i+1] & 0xff;
-+ 48c:	c7c9                	beqz	a5,516 <vprintf+0xf6>
-  48e:	00ea06b3          	add	a3,s4,a4
-  492:	0016c683          	lbu	a3,1(a3)
-       c1 = c2 = 0;
-  496:	8636                	mv	a2,a3
-       if(c1) c2 = fmt[i+2] & 0xff;
-- 498:	c681                	beqz	a3,4a0 <vprintf+0x7c>
-+ 498:	c681                	beqz	a3,4a0 <vprintf+0x80>
-  49a:	9752                	add	a4,a4,s4
-  49c:	00274603          	lbu	a2,2(a4)
-       if(c0 == 'd'){
-- 4a0:	03878f63          	beq	a5,s8,4de <vprintf+0xba>
-+ 4a0:	03878f63          	beq	a5,s8,4de <vprintf+0xbe>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 4a4:	05978963          	beq	a5,s9,4f6 <vprintf+0xd2>
-+ 4a4:	05978963          	beq	a5,s9,4f6 <vprintf+0xd6>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-@@ -903,7 +903,7 @@ vprintf(int fd, const char *fmt, va_list ap)
-         i += 2;
-       } else if(c0 == 'u'){
-  4a8:	07500713          	li	a4,117
-- 4ac:	0ee78363          	beq	a5,a4,592 <vprintf+0x16e>
-+ 4ac:	0ee78363          	beq	a5,a4,592 <vprintf+0x172>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-@@ -911,7 +911,7 @@ vprintf(int fd, const char *fmt, va_list ap)
-         i += 2;
-       } else if(c0 == 'x'){
-  4b0:	07800713          	li	a4,120
-- 4b4:	12e78563          	beq	a5,a4,5de <vprintf+0x1ba>
-+ 4b4:	12e78563          	beq	a5,a4,5de <vprintf+0x1be>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-@@ -919,22 +919,22 @@ vprintf(int fd, const char *fmt, va_list ap)
-         i += 2;
-       } else if(c0 == 'p'){
-  4b8:	07000713          	li	a4,112
-- 4bc:	14e78a63          	beq	a5,a4,610 <vprintf+0x1ec>
-+ 4bc:	14e78a63          	beq	a5,a4,610 <vprintf+0x1f0>
-         printptr(fd, va_arg(ap, uint64));
-       } else if(c0 == 's'){
-  4c0:	07300713          	li	a4,115
-- 4c4:	18e78a63          	beq	a5,a4,658 <vprintf+0x234>
-+ 4c4:	18e78863          	beq	a5,a4,654 <vprintf+0x234>
-         if((s = va_arg(ap, char*)) == 0)
-           s = "(null)";
-         for(; *s; s++)
-           putc(fd, *s);
-       } else if(c0 == '%'){
-  4c8:	02500713          	li	a4,37
-- 4cc:	04e79563          	bne	a5,a4,516 <vprintf+0xf2>
-+ 4cc:	04e79563          	bne	a5,a4,516 <vprintf+0xf6>
-         putc(fd, '%');
-  4d0:	02500593          	li	a1,37
-  4d4:	855a                	mv	a0,s6
-- 4d6:	e89ff0ef          	jal	35e <putc>
-+ 4d6:	e85ff0ef          	jal	35a <putc>
-         /* Unknown % sequence.  Print it to draw attention. */
-         putc(fd, '%');
-         putc(fd, c);
-@@ -942,514 +942,502 @@ vprintf(int fd, const char *fmt, va_list ap)
- #endif
-       state = 0;
-  4da:	4981                	li	s3,0
-- 4dc:	bf49                	j	46e <vprintf+0x4a>
-+ 4dc:	bf41                	j	46c <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 1);
-- 4de:	008b8913          	addi	s2,s7,8
-+ 4de:	008b8913          	add	s2,s7,8
-  4e2:	4685                	li	a3,1
-  4e4:	4629                	li	a2,10
-  4e6:	000ba583          	lw	a1,0(s7)
-  4ea:	855a                	mv	a0,s6
-- 4ec:	e91ff0ef          	jal	37c <printint>
-+ 4ec:	e8dff0ef          	jal	378 <printint>
-  4f0:	8bca                	mv	s7,s2
-       state = 0;
-  4f2:	4981                	li	s3,0
-- 4f4:	bfad                	j	46e <vprintf+0x4a>
-+ 4f4:	bfa5                	j	46c <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'd'){
-  4f6:	06400793          	li	a5,100
-- 4fa:	02f68963          	beq	a3,a5,52c <vprintf+0x108>
-+ 4fa:	02f68963          	beq	a3,a5,52c <vprintf+0x10c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-  4fe:	06c00793          	li	a5,108
-- 502:	04f68263          	beq	a3,a5,546 <vprintf+0x122>
-+ 502:	04f68263          	beq	a3,a5,546 <vprintf+0x126>
-       } else if(c0 == 'l' && c1 == 'u'){
-  506:	07500793          	li	a5,117
-- 50a:	0af68063          	beq	a3,a5,5aa <vprintf+0x186>
-+ 50a:	0af68063          	beq	a3,a5,5aa <vprintf+0x18a>
-       } else if(c0 == 'l' && c1 == 'x'){
-  50e:	07800793          	li	a5,120
-- 512:	0ef68263          	beq	a3,a5,5f6 <vprintf+0x1d2>
-+ 512:	0ef68263          	beq	a3,a5,5f6 <vprintf+0x1d6>
-         putc(fd, '%');
-  516:	02500593          	li	a1,37
-  51a:	855a                	mv	a0,s6
-- 51c:	e43ff0ef          	jal	35e <putc>
-+ 51c:	e3fff0ef          	jal	35a <putc>
-         putc(fd, c0);
-  520:	85ca                	mv	a1,s2
-  522:	855a                	mv	a0,s6
-- 524:	e3bff0ef          	jal	35e <putc>
-+ 524:	e37ff0ef          	jal	35a <putc>
-       state = 0;
-  528:	4981                	li	s3,0
-- 52a:	b791                	j	46e <vprintf+0x4a>
-+ 52a:	b789                	j	46c <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 52c:	008b8913          	addi	s2,s7,8
-+ 52c:	008b8913          	add	s2,s7,8
-  530:	4685                	li	a3,1
-  532:	4629                	li	a2,10
-  534:	000ba583          	lw	a1,0(s7)
-  538:	855a                	mv	a0,s6
-- 53a:	e43ff0ef          	jal	37c <printint>
-+ 53a:	e3fff0ef          	jal	378 <printint>
-         i += 1;
-- 53e:	2485                	addiw	s1,s1,1
-+ 53e:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 1);
-  540:	8bca                	mv	s7,s2
-       state = 0;
-  542:	4981                	li	s3,0
-         i += 1;
-- 544:	b72d                	j	46e <vprintf+0x4a>
-+ 544:	b725                	j	46c <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-  546:	06400793          	li	a5,100
-- 54a:	02f60763          	beq	a2,a5,578 <vprintf+0x154>
-+ 54a:	02f60763          	beq	a2,a5,578 <vprintf+0x158>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-  54e:	07500793          	li	a5,117
-- 552:	06f60963          	beq	a2,a5,5c4 <vprintf+0x1a0>
-+ 552:	06f60963          	beq	a2,a5,5c4 <vprintf+0x1a4>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-  556:	07800793          	li	a5,120
-- 55a:	faf61ee3          	bne	a2,a5,516 <vprintf+0xf2>
-+ 55a:	faf61ee3          	bne	a2,a5,516 <vprintf+0xf6>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 55e:	008b8913          	addi	s2,s7,8
-+ 55e:	008b8913          	add	s2,s7,8
-  562:	4681                	li	a3,0
-  564:	4641                	li	a2,16
-  566:	000ba583          	lw	a1,0(s7)
-  56a:	855a                	mv	a0,s6
-- 56c:	e11ff0ef          	jal	37c <printint>
-+ 56c:	e0dff0ef          	jal	378 <printint>
-         i += 2;
-- 570:	2489                	addiw	s1,s1,2
-+ 570:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 16, 0);
-  572:	8bca                	mv	s7,s2
-       state = 0;
-  574:	4981                	li	s3,0
-         i += 2;
-- 576:	bde5                	j	46e <vprintf+0x4a>
-+ 576:	bddd                	j	46c <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 578:	008b8913          	addi	s2,s7,8
-+ 578:	008b8913          	add	s2,s7,8
-  57c:	4685                	li	a3,1
-  57e:	4629                	li	a2,10
-  580:	000ba583          	lw	a1,0(s7)
-  584:	855a                	mv	a0,s6
-- 586:	df7ff0ef          	jal	37c <printint>
-+ 586:	df3ff0ef          	jal	378 <printint>
-         i += 2;
-- 58a:	2489                	addiw	s1,s1,2
-+ 58a:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 1);
-  58c:	8bca                	mv	s7,s2
-       state = 0;
-  58e:	4981                	li	s3,0
-         i += 2;
-- 590:	bdf9                	j	46e <vprintf+0x4a>
-+ 590:	bdf1                	j	46c <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 0);
-- 592:	008b8913          	addi	s2,s7,8
-+ 592:	008b8913          	add	s2,s7,8
-  596:	4681                	li	a3,0
-  598:	4629                	li	a2,10
-  59a:	000ba583          	lw	a1,0(s7)
-  59e:	855a                	mv	a0,s6
-- 5a0:	dddff0ef          	jal	37c <printint>
-+ 5a0:	dd9ff0ef          	jal	378 <printint>
-  5a4:	8bca                	mv	s7,s2
-       state = 0;
-  5a6:	4981                	li	s3,0
-- 5a8:	b5d9                	j	46e <vprintf+0x4a>
-+ 5a8:	b5d1                	j	46c <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 5aa:	008b8913          	addi	s2,s7,8
-+ 5aa:	008b8913          	add	s2,s7,8
-  5ae:	4681                	li	a3,0
-  5b0:	4629                	li	a2,10
-  5b2:	000ba583          	lw	a1,0(s7)
-  5b6:	855a                	mv	a0,s6
-- 5b8:	dc5ff0ef          	jal	37c <printint>
-+ 5b8:	dc1ff0ef          	jal	378 <printint>
-         i += 1;
-- 5bc:	2485                	addiw	s1,s1,1
-+ 5bc:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 0);
-  5be:	8bca                	mv	s7,s2
-       state = 0;
-  5c0:	4981                	li	s3,0
-         i += 1;
-- 5c2:	b575                	j	46e <vprintf+0x4a>
-+ 5c2:	b56d                	j	46c <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 5c4:	008b8913          	addi	s2,s7,8
-+ 5c4:	008b8913          	add	s2,s7,8
-  5c8:	4681                	li	a3,0
-  5ca:	4629                	li	a2,10
-  5cc:	000ba583          	lw	a1,0(s7)
-  5d0:	855a                	mv	a0,s6
-- 5d2:	dabff0ef          	jal	37c <printint>
-+ 5d2:	da7ff0ef          	jal	378 <printint>
-         i += 2;
-- 5d6:	2489                	addiw	s1,s1,2
-+ 5d6:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 0);
-  5d8:	8bca                	mv	s7,s2
-       state = 0;
-  5da:	4981                	li	s3,0
-         i += 2;
-- 5dc:	bd49                	j	46e <vprintf+0x4a>
-+ 5dc:	bd41                	j	46c <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 16, 0);
-- 5de:	008b8913          	addi	s2,s7,8
-+ 5de:	008b8913          	add	s2,s7,8
-  5e2:	4681                	li	a3,0
-  5e4:	4641                	li	a2,16
-  5e6:	000ba583          	lw	a1,0(s7)
-  5ea:	855a                	mv	a0,s6
-- 5ec:	d91ff0ef          	jal	37c <printint>
-+ 5ec:	d8dff0ef          	jal	378 <printint>
-  5f0:	8bca                	mv	s7,s2
-       state = 0;
-  5f2:	4981                	li	s3,0
-- 5f4:	bdad                	j	46e <vprintf+0x4a>
-+ 5f4:	bda5                	j	46c <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 5f6:	008b8913          	addi	s2,s7,8
-+ 5f6:	008b8913          	add	s2,s7,8
-  5fa:	4681                	li	a3,0
-  5fc:	4641                	li	a2,16
-  5fe:	000ba583          	lw	a1,0(s7)
-  602:	855a                	mv	a0,s6
-- 604:	d79ff0ef          	jal	37c <printint>
-+ 604:	d75ff0ef          	jal	378 <printint>
-         i += 1;
-- 608:	2485                	addiw	s1,s1,1
-+ 608:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 16, 0);
-  60a:	8bca                	mv	s7,s2
-       state = 0;
-  60c:	4981                	li	s3,0
-         i += 1;
-- 60e:	b585                	j	46e <vprintf+0x4a>
-- 610:	e06a                	sd	s10,0(sp)
-+ 60e:	bdb9                	j	46c <vprintf+0x4c>
-         printptr(fd, va_arg(ap, uint64));
-- 612:	008b8d13          	addi	s10,s7,8
-- 616:	000bb983          	ld	s3,0(s7)
-+ 610:	008b8d13          	add	s10,s7,8
-+ 614:	000bb983          	ld	s3,0(s7)
-   putc(fd, '0');
-- 61a:	03000593          	li	a1,48
-- 61e:	855a                	mv	a0,s6
-- 620:	d3fff0ef          	jal	35e <putc>
-+ 618:	03000593          	li	a1,48
-+ 61c:	855a                	mv	a0,s6
-+ 61e:	d3dff0ef          	jal	35a <putc>
-   putc(fd, 'x');
-- 624:	07800593          	li	a1,120
-- 628:	855a                	mv	a0,s6
-- 62a:	d35ff0ef          	jal	35e <putc>
-- 62e:	4941                	li	s2,16
-+ 622:	07800593          	li	a1,120
-+ 626:	855a                	mv	a0,s6
-+ 628:	d33ff0ef          	jal	35a <putc>
-+ 62c:	4941                	li	s2,16
-     putc(fd, digits[x >> (sizeof(uint64) * 8 - 4)]);
-- 630:	00000b97          	auipc	s7,0x0
-- 634:	280b8b93          	addi	s7,s7,640 # 8b0 <digits>
-- 638:	03c9d793          	srli	a5,s3,0x3c
-- 63c:	97de                	add	a5,a5,s7
-- 63e:	0007c583          	lbu	a1,0(a5)
-- 642:	855a                	mv	a0,s6
-- 644:	d1bff0ef          	jal	35e <putc>
-+ 62e:	00000b97          	auipc	s7,0x0
-+ 632:	262b8b93          	add	s7,s7,610 # 890 <digits>
-+ 636:	03c9d793          	srl	a5,s3,0x3c
-+ 63a:	97de                	add	a5,a5,s7
-+ 63c:	0007c583          	lbu	a1,0(a5)
-+ 640:	855a                	mv	a0,s6
-+ 642:	d19ff0ef          	jal	35a <putc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
-- 648:	0992                	slli	s3,s3,0x4
-- 64a:	397d                	addiw	s2,s2,-1
-- 64c:	fe0916e3          	bnez	s2,638 <vprintf+0x214>
-+ 646:	0992                	sll	s3,s3,0x4
-+ 648:	397d                	addw	s2,s2,-1
-+ 64a:	fe0916e3          	bnez	s2,636 <vprintf+0x216>
-         printptr(fd, va_arg(ap, uint64));
-- 650:	8bea                	mv	s7,s10
-+ 64e:	8bea                	mv	s7,s10
-       state = 0;
-- 652:	4981                	li	s3,0
-- 654:	6d02                	ld	s10,0(sp)
-- 656:	bd21                	j	46e <vprintf+0x4a>
-+ 650:	4981                	li	s3,0
-+ 652:	bd29                	j	46c <vprintf+0x4c>
-         if((s = va_arg(ap, char*)) == 0)
-- 658:	008b8993          	addi	s3,s7,8
-- 65c:	000bb903          	ld	s2,0(s7)
-- 660:	00090f63          	beqz	s2,67e <vprintf+0x25a>
-+ 654:	008b8993          	add	s3,s7,8
-+ 658:	000bb903          	ld	s2,0(s7)
-+ 65c:	00090f63          	beqz	s2,67a <vprintf+0x25a>
-         for(; *s; s++)
-- 664:	00094583          	lbu	a1,0(s2)
-- 668:	c195                	beqz	a1,68c <vprintf+0x268>
-+ 660:	00094583          	lbu	a1,0(s2)
-+ 664:	c195                	beqz	a1,688 <vprintf+0x268>
-           putc(fd, *s);
-- 66a:	855a                	mv	a0,s6
-- 66c:	cf3ff0ef          	jal	35e <putc>
-+ 666:	855a                	mv	a0,s6
-+ 668:	cf3ff0ef          	jal	35a <putc>
-         for(; *s; s++)
-- 670:	0905                	addi	s2,s2,1
-- 672:	00094583          	lbu	a1,0(s2)
-- 676:	f9f5                	bnez	a1,66a <vprintf+0x246>
-+ 66c:	0905                	add	s2,s2,1
-+ 66e:	00094583          	lbu	a1,0(s2)
-+ 672:	f9f5                	bnez	a1,666 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-- 678:	8bce                	mv	s7,s3
-+ 674:	8bce                	mv	s7,s3
-       state = 0;
-- 67a:	4981                	li	s3,0
-- 67c:	bbcd                	j	46e <vprintf+0x4a>
-+ 676:	4981                	li	s3,0
-+ 678:	bbd5                	j	46c <vprintf+0x4c>
-           s = "(null)";
-- 67e:	00000917          	auipc	s2,0x0
-- 682:	22a90913          	addi	s2,s2,554 # 8a8 <malloc+0x11e>
-+ 67a:	00000917          	auipc	s2,0x0
-+ 67e:	20e90913          	add	s2,s2,526 # 888 <malloc+0x100>
-         for(; *s; s++)
-- 686:	02800593          	li	a1,40
-- 68a:	b7c5                	j	66a <vprintf+0x246>
-+ 682:	02800593          	li	a1,40
-+ 686:	b7c5                	j	666 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-- 68c:	8bce                	mv	s7,s3
-+ 688:	8bce                	mv	s7,s3
-       state = 0;
-- 68e:	4981                	li	s3,0
-- 690:	bbf9                	j	46e <vprintf+0x4a>
-- 692:	64a6                	ld	s1,72(sp)
-- 694:	79e2                	ld	s3,56(sp)
-- 696:	7a42                	ld	s4,48(sp)
-- 698:	7aa2                	ld	s5,40(sp)
-- 69a:	7b02                	ld	s6,32(sp)
-- 69c:	6be2                	ld	s7,24(sp)
-- 69e:	6c42                	ld	s8,16(sp)
-- 6a0:	6ca2                	ld	s9,8(sp)
-+ 68a:	4981                	li	s3,0
-+ 68c:	b3c5                	j	46c <vprintf+0x4c>
-     }
-   }
- }
-- 6a2:	60e6                	ld	ra,88(sp)
-- 6a4:	6446                	ld	s0,80(sp)
-- 6a6:	6906                	ld	s2,64(sp)
-- 6a8:	6125                	addi	sp,sp,96
-- 6aa:	8082                	ret
--
--00000000000006ac <fprintf>:
-+ 68e:	60e6                	ld	ra,88(sp)
-+ 690:	6446                	ld	s0,80(sp)
-+ 692:	64a6                	ld	s1,72(sp)
-+ 694:	6906                	ld	s2,64(sp)
-+ 696:	79e2                	ld	s3,56(sp)
-+ 698:	7a42                	ld	s4,48(sp)
-+ 69a:	7aa2                	ld	s5,40(sp)
-+ 69c:	7b02                	ld	s6,32(sp)
-+ 69e:	6be2                	ld	s7,24(sp)
-+ 6a0:	6c42                	ld	s8,16(sp)
-+ 6a2:	6ca2                	ld	s9,8(sp)
-+ 6a4:	6d02                	ld	s10,0(sp)
-+ 6a6:	6125                	add	sp,sp,96
-+ 6a8:	8082                	ret
-+
-+00000000000006aa <fprintf>:
- 
- void
- fprintf(int fd, const char *fmt, ...)
- {
-- 6ac:	715d                	addi	sp,sp,-80
-- 6ae:	ec06                	sd	ra,24(sp)
-- 6b0:	e822                	sd	s0,16(sp)
-- 6b2:	1000                	addi	s0,sp,32
-- 6b4:	e010                	sd	a2,0(s0)
-- 6b6:	e414                	sd	a3,8(s0)
-- 6b8:	e818                	sd	a4,16(s0)
-- 6ba:	ec1c                	sd	a5,24(s0)
-- 6bc:	03043023          	sd	a6,32(s0)
-- 6c0:	03143423          	sd	a7,40(s0)
-+ 6aa:	715d                	add	sp,sp,-80
-+ 6ac:	ec06                	sd	ra,24(sp)
-+ 6ae:	e822                	sd	s0,16(sp)
-+ 6b0:	1000                	add	s0,sp,32
-+ 6b2:	e010                	sd	a2,0(s0)
-+ 6b4:	e414                	sd	a3,8(s0)
-+ 6b6:	e818                	sd	a4,16(s0)
-+ 6b8:	ec1c                	sd	a5,24(s0)
-+ 6ba:	03043023          	sd	a6,32(s0)
-+ 6be:	03143423          	sd	a7,40(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 6c4:	fe843423          	sd	s0,-24(s0)
-+ 6c2:	fe843423          	sd	s0,-24(s0)
-   vprintf(fd, fmt, ap);
-- 6c8:	8622                	mv	a2,s0
-- 6ca:	d5bff0ef          	jal	424 <vprintf>
-+ 6c6:	8622                	mv	a2,s0
-+ 6c8:	d59ff0ef          	jal	420 <vprintf>
- }
-- 6ce:	60e2                	ld	ra,24(sp)
-- 6d0:	6442                	ld	s0,16(sp)
-- 6d2:	6161                	addi	sp,sp,80
-- 6d4:	8082                	ret
-+ 6cc:	60e2                	ld	ra,24(sp)
-+ 6ce:	6442                	ld	s0,16(sp)
-+ 6d0:	6161                	add	sp,sp,80
-+ 6d2:	8082                	ret
- 
--00000000000006d6 <printf>:
-+00000000000006d4 <printf>:
- 
- void
- printf(const char *fmt, ...)
- {
-- 6d6:	711d                	addi	sp,sp,-96
-- 6d8:	ec06                	sd	ra,24(sp)
-- 6da:	e822                	sd	s0,16(sp)
-- 6dc:	1000                	addi	s0,sp,32
-- 6de:	e40c                	sd	a1,8(s0)
-- 6e0:	e810                	sd	a2,16(s0)
-- 6e2:	ec14                	sd	a3,24(s0)
-- 6e4:	f018                	sd	a4,32(s0)
-- 6e6:	f41c                	sd	a5,40(s0)
-- 6e8:	03043823          	sd	a6,48(s0)
-- 6ec:	03143c23          	sd	a7,56(s0)
-+ 6d4:	711d                	add	sp,sp,-96
-+ 6d6:	ec06                	sd	ra,24(sp)
-+ 6d8:	e822                	sd	s0,16(sp)
-+ 6da:	1000                	add	s0,sp,32
-+ 6dc:	e40c                	sd	a1,8(s0)
-+ 6de:	e810                	sd	a2,16(s0)
-+ 6e0:	ec14                	sd	a3,24(s0)
-+ 6e2:	f018                	sd	a4,32(s0)
-+ 6e4:	f41c                	sd	a5,40(s0)
-+ 6e6:	03043823          	sd	a6,48(s0)
-+ 6ea:	03143c23          	sd	a7,56(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 6f0:	00840613          	addi	a2,s0,8
-- 6f4:	fec43423          	sd	a2,-24(s0)
-+ 6ee:	00840613          	add	a2,s0,8
-+ 6f2:	fec43423          	sd	a2,-24(s0)
-   vprintf(1, fmt, ap);
-- 6f8:	85aa                	mv	a1,a0
-- 6fa:	4505                	li	a0,1
-- 6fc:	d29ff0ef          	jal	424 <vprintf>
-+ 6f6:	85aa                	mv	a1,a0
-+ 6f8:	4505                	li	a0,1
-+ 6fa:	d27ff0ef          	jal	420 <vprintf>
- }
-- 700:	60e2                	ld	ra,24(sp)
-- 702:	6442                	ld	s0,16(sp)
-- 704:	6125                	addi	sp,sp,96
-- 706:	8082                	ret
-+ 6fe:	60e2                	ld	ra,24(sp)
-+ 700:	6442                	ld	s0,16(sp)
-+ 702:	6125                	add	sp,sp,96
-+ 704:	8082                	ret
- 
--0000000000000708 <free>:
-+0000000000000706 <free>:
- static Header base;
- static Header *freep;
- 
- void
- free(void *ap)
- {
-- 708:	1141                	addi	sp,sp,-16
-- 70a:	e422                	sd	s0,8(sp)
-- 70c:	0800                	addi	s0,sp,16
-+ 706:	1141                	add	sp,sp,-16
-+ 708:	e422                	sd	s0,8(sp)
-+ 70a:	0800                	add	s0,sp,16
-   Header *bp, *p;
- 
-   bp = (Header*)ap - 1;
-- 70e:	ff050693          	addi	a3,a0,-16
-+ 70c:	ff050693          	add	a3,a0,-16
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 712:	00001797          	auipc	a5,0x1
-- 716:	8ee7b783          	ld	a5,-1810(a5) # 1000 <freep>
-- 71a:	a02d                	j	744 <free+0x3c>
-+ 710:	00001797          	auipc	a5,0x1
-+ 714:	8f07b783          	ld	a5,-1808(a5) # 1000 <freep>
-+ 718:	a02d                	j	742 <free+0x3c>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-       break;
-   if(bp + bp->s.size == p->s.ptr){
-     bp->s.size += p->s.ptr->s.size;
-- 71c:	4618                	lw	a4,8(a2)
-- 71e:	9f2d                	addw	a4,a4,a1
-- 720:	fee52c23          	sw	a4,-8(a0)
-+ 71a:	4618                	lw	a4,8(a2)
-+ 71c:	9f2d                	addw	a4,a4,a1
-+ 71e:	fee52c23          	sw	a4,-8(a0)
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 724:	6398                	ld	a4,0(a5)
-- 726:	6310                	ld	a2,0(a4)
-- 728:	a83d                	j	766 <free+0x5e>
-+ 722:	6398                	ld	a4,0(a5)
-+ 724:	6310                	ld	a2,0(a4)
-+ 726:	a83d                	j	764 <free+0x5e>
-   } else
-     bp->s.ptr = p->s.ptr;
-   if(p + p->s.size == bp){
-     p->s.size += bp->s.size;
-- 72a:	ff852703          	lw	a4,-8(a0)
-- 72e:	9f31                	addw	a4,a4,a2
-- 730:	c798                	sw	a4,8(a5)
-+ 728:	ff852703          	lw	a4,-8(a0)
-+ 72c:	9f31                	addw	a4,a4,a2
-+ 72e:	c798                	sw	a4,8(a5)
-     p->s.ptr = bp->s.ptr;
-- 732:	ff053683          	ld	a3,-16(a0)
-- 736:	a091                	j	77a <free+0x72>
-+ 730:	ff053683          	ld	a3,-16(a0)
-+ 734:	a091                	j	778 <free+0x72>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 738:	6398                	ld	a4,0(a5)
-- 73a:	00e7e463          	bltu	a5,a4,742 <free+0x3a>
-- 73e:	00e6ea63          	bltu	a3,a4,752 <free+0x4a>
-+ 736:	6398                	ld	a4,0(a5)
-+ 738:	00e7e463          	bltu	a5,a4,740 <free+0x3a>
-+ 73c:	00e6ea63          	bltu	a3,a4,750 <free+0x4a>
- {
-- 742:	87ba                	mv	a5,a4
-+ 740:	87ba                	mv	a5,a4
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 744:	fed7fae3          	bgeu	a5,a3,738 <free+0x30>
-- 748:	6398                	ld	a4,0(a5)
-- 74a:	00e6e463          	bltu	a3,a4,752 <free+0x4a>
-+ 742:	fed7fae3          	bgeu	a5,a3,736 <free+0x30>
-+ 746:	6398                	ld	a4,0(a5)
-+ 748:	00e6e463          	bltu	a3,a4,750 <free+0x4a>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 74e:	fee7eae3          	bltu	a5,a4,742 <free+0x3a>
-+ 74c:	fee7eae3          	bltu	a5,a4,740 <free+0x3a>
-   if(bp + bp->s.size == p->s.ptr){
-- 752:	ff852583          	lw	a1,-8(a0)
-- 756:	6390                	ld	a2,0(a5)
-- 758:	02059813          	slli	a6,a1,0x20
-- 75c:	01c85713          	srli	a4,a6,0x1c
-- 760:	9736                	add	a4,a4,a3
-- 762:	fae60de3          	beq	a2,a4,71c <free+0x14>
-+ 750:	ff852583          	lw	a1,-8(a0)
-+ 754:	6390                	ld	a2,0(a5)
-+ 756:	02059813          	sll	a6,a1,0x20
-+ 75a:	01c85713          	srl	a4,a6,0x1c
-+ 75e:	9736                	add	a4,a4,a3
-+ 760:	fae60de3          	beq	a2,a4,71a <free+0x14>
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 766:	fec53823          	sd	a2,-16(a0)
-+ 764:	fec53823          	sd	a2,-16(a0)
-   if(p + p->s.size == bp){
-- 76a:	4790                	lw	a2,8(a5)
-- 76c:	02061593          	slli	a1,a2,0x20
-- 770:	01c5d713          	srli	a4,a1,0x1c
-- 774:	973e                	add	a4,a4,a5
-- 776:	fae68ae3          	beq	a3,a4,72a <free+0x22>
-+ 768:	4790                	lw	a2,8(a5)
-+ 76a:	02061593          	sll	a1,a2,0x20
-+ 76e:	01c5d713          	srl	a4,a1,0x1c
-+ 772:	973e                	add	a4,a4,a5
-+ 774:	fae68ae3          	beq	a3,a4,728 <free+0x22>
-     p->s.ptr = bp->s.ptr;
-- 77a:	e394                	sd	a3,0(a5)
-+ 778:	e394                	sd	a3,0(a5)
-   } else
-     p->s.ptr = bp;
-   freep = p;
-- 77c:	00001717          	auipc	a4,0x1
-- 780:	88f73223          	sd	a5,-1916(a4) # 1000 <freep>
-+ 77a:	00001717          	auipc	a4,0x1
-+ 77e:	88f73323          	sd	a5,-1914(a4) # 1000 <freep>
- }
-- 784:	6422                	ld	s0,8(sp)
-- 786:	0141                	addi	sp,sp,16
-- 788:	8082                	ret
-+ 782:	6422                	ld	s0,8(sp)
-+ 784:	0141                	add	sp,sp,16
-+ 786:	8082                	ret
- 
--000000000000078a <malloc>:
-+0000000000000788 <malloc>:
-   return freep;
- }
- 
- void*
- malloc(uint nbytes)
- {
-- 78a:	7139                	addi	sp,sp,-64
-- 78c:	fc06                	sd	ra,56(sp)
-- 78e:	f822                	sd	s0,48(sp)
-- 790:	f426                	sd	s1,40(sp)
-+ 788:	7139                	add	sp,sp,-64
-+ 78a:	fc06                	sd	ra,56(sp)
-+ 78c:	f822                	sd	s0,48(sp)
-+ 78e:	f426                	sd	s1,40(sp)
-+ 790:	f04a                	sd	s2,32(sp)
-  792:	ec4e                	sd	s3,24(sp)
-- 794:	0080                	addi	s0,sp,64
-+ 794:	e852                	sd	s4,16(sp)
-+ 796:	e456                	sd	s5,8(sp)
-+ 798:	e05a                	sd	s6,0(sp)
-+ 79a:	0080                	add	s0,sp,64
-   Header *p, *prevp;
-   uint nunits;
- 
-   nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;
-- 796:	02051493          	slli	s1,a0,0x20
-- 79a:	9081                	srli	s1,s1,0x20
-- 79c:	04bd                	addi	s1,s1,15
-- 79e:	8091                	srli	s1,s1,0x4
-- 7a0:	0014899b          	addiw	s3,s1,1
-- 7a4:	0485                	addi	s1,s1,1
-+ 79c:	02051493          	sll	s1,a0,0x20
-+ 7a0:	9081                	srl	s1,s1,0x20
-+ 7a2:	04bd                	add	s1,s1,15
-+ 7a4:	8091                	srl	s1,s1,0x4
-+ 7a6:	0014899b          	addw	s3,s1,1
-+ 7aa:	0485                	add	s1,s1,1
-   if((prevp = freep) == 0){
-- 7a6:	00001517          	auipc	a0,0x1
-- 7aa:	85a53503          	ld	a0,-1958(a0) # 1000 <freep>
-- 7ae:	c915                	beqz	a0,7e2 <malloc+0x58>
-+ 7ac:	00001517          	auipc	a0,0x1
-+ 7b0:	85453503          	ld	a0,-1964(a0) # 1000 <freep>
-+ 7b4:	c515                	beqz	a0,7e0 <malloc+0x58>
-     base.s.ptr = freep = prevp = &base;
-     base.s.size = 0;
-   }
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 7b0:	611c                	ld	a5,0(a0)
-+ 7b6:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 7b2:	4798                	lw	a4,8(a5)
-- 7b4:	08977a63          	bgeu	a4,s1,848 <malloc+0xbe>
-- 7b8:	f04a                	sd	s2,32(sp)
-- 7ba:	e852                	sd	s4,16(sp)
-- 7bc:	e456                	sd	s5,8(sp)
-- 7be:	e05a                	sd	s6,0(sp)
-+ 7b8:	4798                	lw	a4,8(a5)
-+ 7ba:	02977f63          	bgeu	a4,s1,7f8 <malloc+0x70>
-   if(nu < 4096)
-- 7c0:	8a4e                	mv	s4,s3
-- 7c2:	0009871b          	sext.w	a4,s3
-- 7c6:	6685                	lui	a3,0x1
-- 7c8:	00d77363          	bgeu	a4,a3,7ce <malloc+0x44>
-- 7cc:	6a05                	lui	s4,0x1
-- 7ce:	000a0b1b          	sext.w	s6,s4
-+ 7be:	8a4e                	mv	s4,s3
-+ 7c0:	0009871b          	sext.w	a4,s3
-+ 7c4:	6685                	lui	a3,0x1
-+ 7c6:	00d77363          	bgeu	a4,a3,7cc <malloc+0x44>
-+ 7ca:	6a05                	lui	s4,0x1
-+ 7cc:	000a0b1b          	sext.w	s6,s4
-   p = sbrk(nu * sizeof(Header));
-- 7d2:	004a1a1b          	slliw	s4,s4,0x4
-+ 7d0:	004a1a1b          	sllw	s4,s4,0x4
-         p->s.size = nunits;
-       }
-       freep = prevp;
-       return (void*)(p + 1);
-     }
-     if(p == freep)
-- 7d6:	00001917          	auipc	s2,0x1
-- 7da:	82a90913          	addi	s2,s2,-2006 # 1000 <freep>
-+ 7d4:	00001917          	auipc	s2,0x1
-+ 7d8:	82c90913          	add	s2,s2,-2004 # 1000 <freep>
-   if(p == (char*)-1)
-- 7de:	5afd                	li	s5,-1
-- 7e0:	a081                	j	820 <malloc+0x96>
-- 7e2:	f04a                	sd	s2,32(sp)
-- 7e4:	e852                	sd	s4,16(sp)
-- 7e6:	e456                	sd	s5,8(sp)
-- 7e8:	e05a                	sd	s6,0(sp)
-+ 7dc:	5afd                	li	s5,-1
-+ 7de:	a885                	j	84e <malloc+0xc6>
-     base.s.ptr = freep = prevp = &base;
-- 7ea:	00001797          	auipc	a5,0x1
-- 7ee:	82678793          	addi	a5,a5,-2010 # 1010 <base>
-- 7f2:	00001717          	auipc	a4,0x1
-- 7f6:	80f73723          	sd	a5,-2034(a4) # 1000 <freep>
-- 7fa:	e39c                	sd	a5,0(a5)
-+ 7e0:	00001797          	auipc	a5,0x1
-+ 7e4:	83078793          	add	a5,a5,-2000 # 1010 <base>
-+ 7e8:	00001717          	auipc	a4,0x1
-+ 7ec:	80f73c23          	sd	a5,-2024(a4) # 1000 <freep>
-+ 7f0:	e39c                	sd	a5,0(a5)
-     base.s.size = 0;
-- 7fc:	0007a423          	sw	zero,8(a5)
-+ 7f2:	0007a423          	sw	zero,8(a5)
-     if(p->s.size >= nunits){
-- 800:	b7c1                	j	7c0 <malloc+0x36>
-+ 7f6:	b7e1                	j	7be <malloc+0x36>
-+      if(p->s.size == nunits)
-+ 7f8:	02e48c63          	beq	s1,a4,830 <malloc+0xa8>
-+        p->s.size -= nunits;
-+ 7fc:	4137073b          	subw	a4,a4,s3
-+ 800:	c798                	sw	a4,8(a5)
-+        p += p->s.size;
-+ 802:	02071693          	sll	a3,a4,0x20
-+ 806:	01c6d713          	srl	a4,a3,0x1c
-+ 80a:	97ba                	add	a5,a5,a4
-+        p->s.size = nunits;
-+ 80c:	0137a423          	sw	s3,8(a5)
-+      freep = prevp;
-+ 810:	00000717          	auipc	a4,0x0
-+ 814:	7ea73823          	sd	a0,2032(a4) # 1000 <freep>
-+      return (void*)(p + 1);
-+ 818:	01078513          	add	a0,a5,16
-+      if((p = morecore(nunits)) == 0)
-+        return 0;
-+  }
-+}
-+ 81c:	70e2                	ld	ra,56(sp)
-+ 81e:	7442                	ld	s0,48(sp)
-+ 820:	74a2                	ld	s1,40(sp)
-+ 822:	7902                	ld	s2,32(sp)
-+ 824:	69e2                	ld	s3,24(sp)
-+ 826:	6a42                	ld	s4,16(sp)
-+ 828:	6aa2                	ld	s5,8(sp)
-+ 82a:	6b02                	ld	s6,0(sp)
-+ 82c:	6121                	add	sp,sp,64
-+ 82e:	8082                	ret
-         prevp->s.ptr = p->s.ptr;
-- 802:	6398                	ld	a4,0(a5)
-- 804:	e118                	sd	a4,0(a0)
-- 806:	a8a9                	j	860 <malloc+0xd6>
-+ 830:	6398                	ld	a4,0(a5)
-+ 832:	e118                	sd	a4,0(a0)
-+ 834:	bff1                	j	810 <malloc+0x88>
-   hp->s.size = nu;
-- 808:	01652423          	sw	s6,8(a0)
-+ 836:	01652423          	sw	s6,8(a0)
-   free((void*)(hp + 1));
-- 80c:	0541                	addi	a0,a0,16
-- 80e:	efbff0ef          	jal	708 <free>
-+ 83a:	0541                	add	a0,a0,16
-+ 83c:	ecbff0ef          	jal	706 <free>
-   return freep;
-- 812:	00093503          	ld	a0,0(s2)
-+ 840:	00093503          	ld	a0,0(s2)
-       if((p = morecore(nunits)) == 0)
-- 816:	c12d                	beqz	a0,878 <malloc+0xee>
-+ 844:	dd61                	beqz	a0,81c <malloc+0x94>
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 818:	611c                	ld	a5,0(a0)
-+ 846:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 81a:	4798                	lw	a4,8(a5)
-- 81c:	02977263          	bgeu	a4,s1,840 <malloc+0xb6>
-+ 848:	4798                	lw	a4,8(a5)
-+ 84a:	fa9777e3          	bgeu	a4,s1,7f8 <malloc+0x70>
-     if(p == freep)
-- 820:	00093703          	ld	a4,0(s2)
-- 824:	853e                	mv	a0,a5
-- 826:	fef719e3          	bne	a4,a5,818 <malloc+0x8e>
-+ 84e:	00093703          	ld	a4,0(s2)
-+ 852:	853e                	mv	a0,a5
-+ 854:	fef719e3          	bne	a4,a5,846 <malloc+0xbe>
-   p = sbrk(nu * sizeof(Header));
-- 82a:	8552                	mv	a0,s4
-- 82c:	b1bff0ef          	jal	346 <sbrk>
-+ 858:	8552                	mv	a0,s4
-+ 85a:	ae9ff0ef          	jal	342 <sbrk>
-   if(p == (char*)-1)
-- 830:	fd551ce3          	bne	a0,s5,808 <malloc+0x7e>
-+ 85e:	fd551ce3          	bne	a0,s5,836 <malloc+0xae>
-         return 0;
-- 834:	4501                	li	a0,0
-- 836:	7902                	ld	s2,32(sp)
-- 838:	6a42                	ld	s4,16(sp)
-- 83a:	6aa2                	ld	s5,8(sp)
-- 83c:	6b02                	ld	s6,0(sp)
-- 83e:	a03d                	j	86c <malloc+0xe2>
-- 840:	7902                	ld	s2,32(sp)
-- 842:	6a42                	ld	s4,16(sp)
-- 844:	6aa2                	ld	s5,8(sp)
-- 846:	6b02                	ld	s6,0(sp)
--      if(p->s.size == nunits)
-- 848:	fae48de3          	beq	s1,a4,802 <malloc+0x78>
--        p->s.size -= nunits;
-- 84c:	4137073b          	subw	a4,a4,s3
-- 850:	c798                	sw	a4,8(a5)
--        p += p->s.size;
-- 852:	02071693          	slli	a3,a4,0x20
-- 856:	01c6d713          	srli	a4,a3,0x1c
-- 85a:	97ba                	add	a5,a5,a4
--        p->s.size = nunits;
-- 85c:	0137a423          	sw	s3,8(a5)
--      freep = prevp;
-- 860:	00000717          	auipc	a4,0x0
-- 864:	7aa73023          	sd	a0,1952(a4) # 1000 <freep>
--      return (void*)(p + 1);
-- 868:	01078513          	addi	a0,a5,16
--  }
--}
-- 86c:	70e2                	ld	ra,56(sp)
-- 86e:	7442                	ld	s0,48(sp)
-- 870:	74a2                	ld	s1,40(sp)
-- 872:	69e2                	ld	s3,24(sp)
-- 874:	6121                	addi	sp,sp,64
-- 876:	8082                	ret
-- 878:	7902                	ld	s2,32(sp)
-- 87a:	6a42                	ld	s4,16(sp)
-- 87c:	6aa2                	ld	s5,8(sp)
-- 87e:	6b02                	ld	s6,0(sp)
-- 880:	b7f5                	j	86c <malloc+0xe2>
-+ 862:	4501                	li	a0,0
-+ 864:	bf65                	j	81c <malloc+0x94>
-diff --git a/Assignments/Assignment-6/xv6/user/kill.d b/Assignments/Assignment-6/xv6/user/kill.d
-index 0a648e5..e83f22f 100644
---- a/Assignments/Assignment-6/xv6/user/kill.d
-+++ b/Assignments/Assignment-6/xv6/user/kill.d
-@@ -1,3 +1 @@
--user/kill.o: user/kill.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/stat.h user/user.h
-+user/kill.o: user/kill.c kernel/types.h kernel/stat.h user/user.h
-diff --git a/Assignments/Assignment-6/xv6/user/kill.o b/Assignments/Assignment-6/xv6/user/kill.o
-index 673c06c..2506c63 100644
-Binary files a/Assignments/Assignment-6/xv6/user/kill.o and b/Assignments/Assignment-6/xv6/user/kill.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/kill.sym b/Assignments/Assignment-6/xv6/user/kill.sym
-index 02bd5af..6e5428f 100644
---- a/Assignments/Assignment-6/xv6/user/kill.sym
-+++ b/Assignments/Assignment-6/xv6/user/kill.sym
-@@ -1,6 +1,5 @@
- 0000000000000000 .text
--0000000000000888 .rodata
--00000000000008c8 .eh_frame
-+0000000000000868 .rodata
- 0000000000001000 .data
- 0000000000001000 .bss
- 0000000000000000 .debug_info
-@@ -11,53 +10,54 @@
- 0000000000000000 .debug_str
- 0000000000000000 .comment
- 0000000000000000 .riscv.attributes
-+0000000000000000 .debug_frame
- 0000000000000000 .debug_ranges
- 0000000000000000 kill.c
- 0000000000000000 ulib.c
- 0000000000000000 usys.o
- 0000000000000000 printf.c
--000000000000035e putc
--000000000000037c printint
--00000000000008b0 digits
-+000000000000035a putc
-+0000000000000378 printint
-+0000000000000890 digits
- 0000000000000000 umalloc.c
- 0000000000001000 freep
- 0000000000001010 base
--0000000000000066 strcpy
--00000000000006d6 printf
--0000000000000210 memmove
--0000000000000306 mknod
--000000000000011e gets
--000000000000033e getpid
--00000000000002a2 memcpy
--000000000000078a malloc
--000000000000034e sleep
--00000000000002ce pipe
--00000000000002de write
--0000000000000316 fstat
--00000000000006ac fprintf
--00000000000002ee kill
--0000000000000424 vprintf
--000000000000032e chdir
--00000000000002f6 exec
--00000000000002c6 wait
--00000000000002d6 read
--000000000000030e unlink
--0000000000000268 memcmp
--00000000000002b6 fork
--0000000000000346 sbrk
--0000000000000356 uptime
--00000000000000d8 memset
-+0000000000000062 strcpy
-+00000000000006d4 printf
-+000000000000020c memmove
-+0000000000000302 mknod
-+000000000000011a gets
-+000000000000033a getpid
-+000000000000029e memcpy
-+0000000000000788 malloc
-+000000000000034a sleep
-+00000000000002ca pipe
-+00000000000002da write
-+0000000000000312 fstat
-+00000000000006aa fprintf
-+00000000000002ea kill
-+0000000000000420 vprintf
-+000000000000032a chdir
-+00000000000002f2 exec
-+00000000000002c2 wait
-+00000000000002d2 read
-+000000000000030a unlink
-+0000000000000264 memcmp
-+00000000000002b2 fork
-+0000000000000342 sbrk
-+0000000000000352 uptime
-+00000000000000d4 memset
- 0000000000000000 main
--0000000000000082 strcmp
--0000000000000336 dup
--000000000000018e stat
--000000000000031e link
--00000000000002be exit
--0000000000000054 start
--00000000000001c8 atoi
--00000000000000ae strlen
--00000000000002fe open
--00000000000000fa strchr
--0000000000000326 mkdir
--00000000000002e6 close
--0000000000000708 free
-+000000000000007e strcmp
-+0000000000000332 dup
-+000000000000018a stat
-+000000000000031a link
-+00000000000002ba exit
-+0000000000000050 start
-+00000000000001c4 atoi
-+00000000000000aa strlen
-+00000000000002fa open
-+00000000000000f6 strchr
-+0000000000000322 mkdir
-+00000000000002e2 close
-+0000000000000706 free
-diff --git a/Assignments/Assignment-6/xv6/user/ln.asm b/Assignments/Assignment-6/xv6/user/ln.asm
-index 5b4f860..ae8b3ca 100644
---- a/Assignments/Assignment-6/xv6/user/ln.asm
-+++ b/Assignments/Assignment-6/xv6/user/ln.asm
-@@ -11,827 +11,827 @@ Disassembly of section .text:
- int
- main(int argc, char *argv[])
- {
--   0:	1101                	addi	sp,sp,-32
-+   0:	1101                	add	sp,sp,-32
-    2:	ec06                	sd	ra,24(sp)
-    4:	e822                	sd	s0,16(sp)
--   6:	1000                	addi	s0,sp,32
-+   6:	e426                	sd	s1,8(sp)
-+   8:	1000                	add	s0,sp,32
-   if(argc != 3){
--   8:	478d                	li	a5,3
--   a:	00f50d63          	beq	a0,a5,24 <main+0x24>
--   e:	e426                	sd	s1,8(sp)
-+   a:	478d                	li	a5,3
-+   c:	00f50c63          	beq	a0,a5,24 <main+0x24>
-     fprintf(2, "Usage: ln old new\n");
-   10:	00001597          	auipc	a1,0x1
--  14:	87058593          	addi	a1,a1,-1936 # 880 <malloc+0xfc>
-+  14:	86058593          	add	a1,a1,-1952 # 870 <malloc+0xec>
-   18:	4509                	li	a0,2
-   1a:	68c000ef          	jal	6a6 <fprintf>
-     exit(1);
-   1e:	4505                	li	a0,1
--  20:	298000ef          	jal	2b8 <exit>
--  24:	e426                	sd	s1,8(sp)
--  26:	84ae                	mv	s1,a1
-+  20:	296000ef          	jal	2b6 <exit>
-+  24:	84ae                	mv	s1,a1
-   }
-   if(link(argv[1], argv[2]) < 0)
--  28:	698c                	ld	a1,16(a1)
--  2a:	6488                	ld	a0,8(s1)
--  2c:	2ec000ef          	jal	318 <link>
--  30:	00054563          	bltz	a0,3a <main+0x3a>
-+  26:	698c                	ld	a1,16(a1)
-+  28:	6488                	ld	a0,8(s1)
-+  2a:	2ec000ef          	jal	316 <link>
-+  2e:	00054563          	bltz	a0,38 <main+0x38>
-     fprintf(2, "link %s %s: failed\n", argv[1], argv[2]);
-   exit(0);
--  34:	4501                	li	a0,0
--  36:	282000ef          	jal	2b8 <exit>
-+  32:	4501                	li	a0,0
-+  34:	282000ef          	jal	2b6 <exit>
-     fprintf(2, "link %s %s: failed\n", argv[1], argv[2]);
--  3a:	6894                	ld	a3,16(s1)
--  3c:	6490                	ld	a2,8(s1)
--  3e:	00001597          	auipc	a1,0x1
--  42:	85a58593          	addi	a1,a1,-1958 # 898 <malloc+0x114>
--  46:	4509                	li	a0,2
--  48:	65e000ef          	jal	6a6 <fprintf>
--  4c:	b7e5                	j	34 <main+0x34>
--
--000000000000004e <start>:
-+  38:	6894                	ld	a3,16(s1)
-+  3a:	6490                	ld	a2,8(s1)
-+  3c:	00001597          	auipc	a1,0x1
-+  40:	84c58593          	add	a1,a1,-1972 # 888 <malloc+0x104>
-+  44:	4509                	li	a0,2
-+  46:	660000ef          	jal	6a6 <fprintf>
-+  4a:	b7e5                	j	32 <main+0x32>
-+
-+000000000000004c <start>:
- /* */
- /* wrapper so that it's OK if main() does not call exit(). */
- /* */
- void
- start()
- {
--  4e:	1141                	addi	sp,sp,-16
--  50:	e406                	sd	ra,8(sp)
--  52:	e022                	sd	s0,0(sp)
--  54:	0800                	addi	s0,sp,16
-+  4c:	1141                	add	sp,sp,-16
-+  4e:	e406                	sd	ra,8(sp)
-+  50:	e022                	sd	s0,0(sp)
-+  52:	0800                	add	s0,sp,16
-   extern int main();
-   main();
--  56:	fabff0ef          	jal	0 <main>
-+  54:	fadff0ef          	jal	0 <main>
-   exit(0);
--  5a:	4501                	li	a0,0
--  5c:	25c000ef          	jal	2b8 <exit>
-+  58:	4501                	li	a0,0
-+  5a:	25c000ef          	jal	2b6 <exit>
- 
--0000000000000060 <strcpy>:
-+000000000000005e <strcpy>:
- }
- 
- char*
- strcpy(char *s, const char *t)
- {
--  60:	1141                	addi	sp,sp,-16
--  62:	e422                	sd	s0,8(sp)
--  64:	0800                	addi	s0,sp,16
-+  5e:	1141                	add	sp,sp,-16
-+  60:	e422                	sd	s0,8(sp)
-+  62:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
--  66:	87aa                	mv	a5,a0
--  68:	0585                	addi	a1,a1,1
--  6a:	0785                	addi	a5,a5,1
--  6c:	fff5c703          	lbu	a4,-1(a1)
--  70:	fee78fa3          	sb	a4,-1(a5)
--  74:	fb75                	bnez	a4,68 <strcpy+0x8>
-+  64:	87aa                	mv	a5,a0
-+  66:	0585                	add	a1,a1,1
-+  68:	0785                	add	a5,a5,1
-+  6a:	fff5c703          	lbu	a4,-1(a1)
-+  6e:	fee78fa3          	sb	a4,-1(a5)
-+  72:	fb75                	bnez	a4,66 <strcpy+0x8>
-     ;
-   return os;
- }
--  76:	6422                	ld	s0,8(sp)
--  78:	0141                	addi	sp,sp,16
--  7a:	8082                	ret
-+  74:	6422                	ld	s0,8(sp)
-+  76:	0141                	add	sp,sp,16
-+  78:	8082                	ret
- 
--000000000000007c <strcmp>:
-+000000000000007a <strcmp>:
- 
- int
- strcmp(const char *p, const char *q)
- {
--  7c:	1141                	addi	sp,sp,-16
--  7e:	e422                	sd	s0,8(sp)
--  80:	0800                	addi	s0,sp,16
-+  7a:	1141                	add	sp,sp,-16
-+  7c:	e422                	sd	s0,8(sp)
-+  7e:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
--  82:	00054783          	lbu	a5,0(a0)
--  86:	cb91                	beqz	a5,9a <strcmp+0x1e>
--  88:	0005c703          	lbu	a4,0(a1)
--  8c:	00f71763          	bne	a4,a5,9a <strcmp+0x1e>
-+  80:	00054783          	lbu	a5,0(a0)
-+  84:	cb91                	beqz	a5,98 <strcmp+0x1e>
-+  86:	0005c703          	lbu	a4,0(a1)
-+  8a:	00f71763          	bne	a4,a5,98 <strcmp+0x1e>
-     p++, q++;
--  90:	0505                	addi	a0,a0,1
--  92:	0585                	addi	a1,a1,1
-+  8e:	0505                	add	a0,a0,1
-+  90:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
--  94:	00054783          	lbu	a5,0(a0)
--  98:	fbe5                	bnez	a5,88 <strcmp+0xc>
-+  92:	00054783          	lbu	a5,0(a0)
-+  96:	fbe5                	bnez	a5,86 <strcmp+0xc>
-   return (uchar)*p - (uchar)*q;
--  9a:	0005c503          	lbu	a0,0(a1)
-+  98:	0005c503          	lbu	a0,0(a1)
- }
--  9e:	40a7853b          	subw	a0,a5,a0
--  a2:	6422                	ld	s0,8(sp)
--  a4:	0141                	addi	sp,sp,16
--  a6:	8082                	ret
-+  9c:	40a7853b          	subw	a0,a5,a0
-+  a0:	6422                	ld	s0,8(sp)
-+  a2:	0141                	add	sp,sp,16
-+  a4:	8082                	ret
- 
--00000000000000a8 <strlen>:
-+00000000000000a6 <strlen>:
- 
- uint
- strlen(const char *s)
- {
--  a8:	1141                	addi	sp,sp,-16
--  aa:	e422                	sd	s0,8(sp)
--  ac:	0800                	addi	s0,sp,16
-+  a6:	1141                	add	sp,sp,-16
-+  a8:	e422                	sd	s0,8(sp)
-+  aa:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
--  ae:	00054783          	lbu	a5,0(a0)
--  b2:	cf91                	beqz	a5,ce <strlen+0x26>
--  b4:	0505                	addi	a0,a0,1
--  b6:	87aa                	mv	a5,a0
--  b8:	86be                	mv	a3,a5
--  ba:	0785                	addi	a5,a5,1
--  bc:	fff7c703          	lbu	a4,-1(a5)
--  c0:	ff65                	bnez	a4,b8 <strlen+0x10>
--  c2:	40a6853b          	subw	a0,a3,a0
--  c6:	2505                	addiw	a0,a0,1
-+  ac:	00054783          	lbu	a5,0(a0)
-+  b0:	cf91                	beqz	a5,cc <strlen+0x26>
-+  b2:	0505                	add	a0,a0,1
-+  b4:	87aa                	mv	a5,a0
-+  b6:	86be                	mv	a3,a5
-+  b8:	0785                	add	a5,a5,1
-+  ba:	fff7c703          	lbu	a4,-1(a5)
-+  be:	ff65                	bnez	a4,b6 <strlen+0x10>
-+  c0:	40a6853b          	subw	a0,a3,a0
-+  c4:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
--  c8:	6422                	ld	s0,8(sp)
--  ca:	0141                	addi	sp,sp,16
--  cc:	8082                	ret
-+  c6:	6422                	ld	s0,8(sp)
-+  c8:	0141                	add	sp,sp,16
-+  ca:	8082                	ret
-   for(n = 0; s[n]; n++)
--  ce:	4501                	li	a0,0
--  d0:	bfe5                	j	c8 <strlen+0x20>
-+  cc:	4501                	li	a0,0
-+  ce:	bfe5                	j	c6 <strlen+0x20>
- 
--00000000000000d2 <memset>:
-+00000000000000d0 <memset>:
- 
- void*
- memset(void *dst, int c, uint n)
- {
--  d2:	1141                	addi	sp,sp,-16
--  d4:	e422                	sd	s0,8(sp)
--  d6:	0800                	addi	s0,sp,16
-+  d0:	1141                	add	sp,sp,-16
-+  d2:	e422                	sd	s0,8(sp)
-+  d4:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
--  d8:	ca19                	beqz	a2,ee <memset+0x1c>
--  da:	87aa                	mv	a5,a0
--  dc:	1602                	slli	a2,a2,0x20
--  de:	9201                	srli	a2,a2,0x20
--  e0:	00a60733          	add	a4,a2,a0
-+  d6:	ca19                	beqz	a2,ec <memset+0x1c>
-+  d8:	87aa                	mv	a5,a0
-+  da:	1602                	sll	a2,a2,0x20
-+  dc:	9201                	srl	a2,a2,0x20
-+  de:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
--  e4:	00b78023          	sb	a1,0(a5)
-+  e2:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
--  e8:	0785                	addi	a5,a5,1
--  ea:	fee79de3          	bne	a5,a4,e4 <memset+0x12>
-+  e6:	0785                	add	a5,a5,1
-+  e8:	fee79de3          	bne	a5,a4,e2 <memset+0x12>
-   }
-   return dst;
- }
--  ee:	6422                	ld	s0,8(sp)
--  f0:	0141                	addi	sp,sp,16
--  f2:	8082                	ret
-+  ec:	6422                	ld	s0,8(sp)
-+  ee:	0141                	add	sp,sp,16
-+  f0:	8082                	ret
- 
--00000000000000f4 <strchr>:
-+00000000000000f2 <strchr>:
- 
- char*
- strchr(const char *s, char c)
- {
--  f4:	1141                	addi	sp,sp,-16
--  f6:	e422                	sd	s0,8(sp)
--  f8:	0800                	addi	s0,sp,16
-+  f2:	1141                	add	sp,sp,-16
-+  f4:	e422                	sd	s0,8(sp)
-+  f6:	0800                	add	s0,sp,16
-   for(; *s; s++)
--  fa:	00054783          	lbu	a5,0(a0)
--  fe:	cb99                	beqz	a5,114 <strchr+0x20>
-+  f8:	00054783          	lbu	a5,0(a0)
-+  fc:	cb99                	beqz	a5,112 <strchr+0x20>
-     if(*s == c)
-- 100:	00f58763          	beq	a1,a5,10e <strchr+0x1a>
-+  fe:	00f58763          	beq	a1,a5,10c <strchr+0x1a>
-   for(; *s; s++)
-- 104:	0505                	addi	a0,a0,1
-- 106:	00054783          	lbu	a5,0(a0)
-- 10a:	fbfd                	bnez	a5,100 <strchr+0xc>
-+ 102:	0505                	add	a0,a0,1
-+ 104:	00054783          	lbu	a5,0(a0)
-+ 108:	fbfd                	bnez	a5,fe <strchr+0xc>
-       return (char*)s;
-   return 0;
-- 10c:	4501                	li	a0,0
-+ 10a:	4501                	li	a0,0
- }
-- 10e:	6422                	ld	s0,8(sp)
-- 110:	0141                	addi	sp,sp,16
-- 112:	8082                	ret
-+ 10c:	6422                	ld	s0,8(sp)
-+ 10e:	0141                	add	sp,sp,16
-+ 110:	8082                	ret
-   return 0;
-- 114:	4501                	li	a0,0
-- 116:	bfe5                	j	10e <strchr+0x1a>
-+ 112:	4501                	li	a0,0
-+ 114:	bfe5                	j	10c <strchr+0x1a>
- 
--0000000000000118 <gets>:
-+0000000000000116 <gets>:
- 
- char*
- gets(char *buf, int max)
- {
-- 118:	711d                	addi	sp,sp,-96
-- 11a:	ec86                	sd	ra,88(sp)
-- 11c:	e8a2                	sd	s0,80(sp)
-- 11e:	e4a6                	sd	s1,72(sp)
-- 120:	e0ca                	sd	s2,64(sp)
-- 122:	fc4e                	sd	s3,56(sp)
-- 124:	f852                	sd	s4,48(sp)
-- 126:	f456                	sd	s5,40(sp)
-- 128:	f05a                	sd	s6,32(sp)
-- 12a:	ec5e                	sd	s7,24(sp)
-- 12c:	1080                	addi	s0,sp,96
-- 12e:	8baa                	mv	s7,a0
-- 130:	8a2e                	mv	s4,a1
-+ 116:	711d                	add	sp,sp,-96
-+ 118:	ec86                	sd	ra,88(sp)
-+ 11a:	e8a2                	sd	s0,80(sp)
-+ 11c:	e4a6                	sd	s1,72(sp)
-+ 11e:	e0ca                	sd	s2,64(sp)
-+ 120:	fc4e                	sd	s3,56(sp)
-+ 122:	f852                	sd	s4,48(sp)
-+ 124:	f456                	sd	s5,40(sp)
-+ 126:	f05a                	sd	s6,32(sp)
-+ 128:	ec5e                	sd	s7,24(sp)
-+ 12a:	1080                	add	s0,sp,96
-+ 12c:	8baa                	mv	s7,a0
-+ 12e:	8a2e                	mv	s4,a1
-   int i, cc;
-   char c;
- 
-   for(i=0; i+1 < max; ){
-- 132:	892a                	mv	s2,a0
-- 134:	4481                	li	s1,0
-+ 130:	892a                	mv	s2,a0
-+ 132:	4481                	li	s1,0
-     cc = read(0, &c, 1);
-     if(cc < 1)
-       break;
-     buf[i++] = c;
-     if(c == '\n' || c == '\r')
-- 136:	4aa9                	li	s5,10
-- 138:	4b35                	li	s6,13
-+ 134:	4aa9                	li	s5,10
-+ 136:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
-- 13a:	89a6                	mv	s3,s1
-- 13c:	2485                	addiw	s1,s1,1
-- 13e:	0344d663          	bge	s1,s4,16a <gets+0x52>
-+ 138:	89a6                	mv	s3,s1
-+ 13a:	2485                	addw	s1,s1,1
-+ 13c:	0344d663          	bge	s1,s4,168 <gets+0x52>
-     cc = read(0, &c, 1);
-- 142:	4605                	li	a2,1
-- 144:	faf40593          	addi	a1,s0,-81
-- 148:	4501                	li	a0,0
-- 14a:	186000ef          	jal	2d0 <read>
-+ 140:	4605                	li	a2,1
-+ 142:	faf40593          	add	a1,s0,-81
-+ 146:	4501                	li	a0,0
-+ 148:	186000ef          	jal	2ce <read>
-     if(cc < 1)
-- 14e:	00a05e63          	blez	a0,16a <gets+0x52>
-+ 14c:	00a05e63          	blez	a0,168 <gets+0x52>
-     buf[i++] = c;
-- 152:	faf44783          	lbu	a5,-81(s0)
-- 156:	00f90023          	sb	a5,0(s2)
-+ 150:	faf44783          	lbu	a5,-81(s0)
-+ 154:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
-- 15a:	01578763          	beq	a5,s5,168 <gets+0x50>
-- 15e:	0905                	addi	s2,s2,1
-- 160:	fd679de3          	bne	a5,s6,13a <gets+0x22>
--    buf[i++] = c;
-- 164:	89a6                	mv	s3,s1
-- 166:	a011                	j	16a <gets+0x52>
-- 168:	89a6                	mv	s3,s1
-+ 158:	01578763          	beq	a5,s5,166 <gets+0x50>
-+ 15c:	0905                	add	s2,s2,1
-+ 15e:	fd679de3          	bne	a5,s6,138 <gets+0x22>
-+  for(i=0; i+1 < max; ){
-+ 162:	89a6                	mv	s3,s1
-+ 164:	a011                	j	168 <gets+0x52>
-+ 166:	89a6                	mv	s3,s1
-       break;
-   }
-   buf[i] = '\0';
-- 16a:	99de                	add	s3,s3,s7
-- 16c:	00098023          	sb	zero,0(s3)
-+ 168:	99de                	add	s3,s3,s7
-+ 16a:	00098023          	sb	zero,0(s3)
-   return buf;
- }
-- 170:	855e                	mv	a0,s7
-- 172:	60e6                	ld	ra,88(sp)
-- 174:	6446                	ld	s0,80(sp)
-- 176:	64a6                	ld	s1,72(sp)
-- 178:	6906                	ld	s2,64(sp)
-- 17a:	79e2                	ld	s3,56(sp)
-- 17c:	7a42                	ld	s4,48(sp)
-- 17e:	7aa2                	ld	s5,40(sp)
-- 180:	7b02                	ld	s6,32(sp)
-- 182:	6be2                	ld	s7,24(sp)
-- 184:	6125                	addi	sp,sp,96
-- 186:	8082                	ret
--
--0000000000000188 <stat>:
-+ 16e:	855e                	mv	a0,s7
-+ 170:	60e6                	ld	ra,88(sp)
-+ 172:	6446                	ld	s0,80(sp)
-+ 174:	64a6                	ld	s1,72(sp)
-+ 176:	6906                	ld	s2,64(sp)
-+ 178:	79e2                	ld	s3,56(sp)
-+ 17a:	7a42                	ld	s4,48(sp)
-+ 17c:	7aa2                	ld	s5,40(sp)
-+ 17e:	7b02                	ld	s6,32(sp)
-+ 180:	6be2                	ld	s7,24(sp)
-+ 182:	6125                	add	sp,sp,96
-+ 184:	8082                	ret
-+
-+0000000000000186 <stat>:
- 
- int
- stat(const char *n, struct stat *st)
- {
-- 188:	1101                	addi	sp,sp,-32
-- 18a:	ec06                	sd	ra,24(sp)
-- 18c:	e822                	sd	s0,16(sp)
-+ 186:	1101                	add	sp,sp,-32
-+ 188:	ec06                	sd	ra,24(sp)
-+ 18a:	e822                	sd	s0,16(sp)
-+ 18c:	e426                	sd	s1,8(sp)
-  18e:	e04a                	sd	s2,0(sp)
-- 190:	1000                	addi	s0,sp,32
-+ 190:	1000                	add	s0,sp,32
-  192:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
-  194:	4581                	li	a1,0
-- 196:	162000ef          	jal	2f8 <open>
-+ 196:	160000ef          	jal	2f6 <open>
-   if(fd < 0)
-- 19a:	02054263          	bltz	a0,1be <stat+0x36>
-- 19e:	e426                	sd	s1,8(sp)
-- 1a0:	84aa                	mv	s1,a0
-+ 19a:	02054163          	bltz	a0,1bc <stat+0x36>
-+ 19e:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
-- 1a2:	85ca                	mv	a1,s2
-- 1a4:	16c000ef          	jal	310 <fstat>
-- 1a8:	892a                	mv	s2,a0
-+ 1a0:	85ca                	mv	a1,s2
-+ 1a2:	16c000ef          	jal	30e <fstat>
-+ 1a6:	892a                	mv	s2,a0
-   close(fd);
-- 1aa:	8526                	mv	a0,s1
-- 1ac:	134000ef          	jal	2e0 <close>
-+ 1a8:	8526                	mv	a0,s1
-+ 1aa:	134000ef          	jal	2de <close>
-   return r;
-- 1b0:	64a2                	ld	s1,8(sp)
- }
-- 1b2:	854a                	mv	a0,s2
-- 1b4:	60e2                	ld	ra,24(sp)
-- 1b6:	6442                	ld	s0,16(sp)
-- 1b8:	6902                	ld	s2,0(sp)
-- 1ba:	6105                	addi	sp,sp,32
-- 1bc:	8082                	ret
-+ 1ae:	854a                	mv	a0,s2
-+ 1b0:	60e2                	ld	ra,24(sp)
-+ 1b2:	6442                	ld	s0,16(sp)
-+ 1b4:	64a2                	ld	s1,8(sp)
-+ 1b6:	6902                	ld	s2,0(sp)
-+ 1b8:	6105                	add	sp,sp,32
-+ 1ba:	8082                	ret
-     return -1;
-- 1be:	597d                	li	s2,-1
-- 1c0:	bfcd                	j	1b2 <stat+0x2a>
-+ 1bc:	597d                	li	s2,-1
-+ 1be:	bfc5                	j	1ae <stat+0x28>
- 
--00000000000001c2 <atoi>:
-+00000000000001c0 <atoi>:
- 
- int
- atoi(const char *s)
- {
-- 1c2:	1141                	addi	sp,sp,-16
-- 1c4:	e422                	sd	s0,8(sp)
-- 1c6:	0800                	addi	s0,sp,16
-+ 1c0:	1141                	add	sp,sp,-16
-+ 1c2:	e422                	sd	s0,8(sp)
-+ 1c4:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
-- 1c8:	00054683          	lbu	a3,0(a0)
-- 1cc:	fd06879b          	addiw	a5,a3,-48
-- 1d0:	0ff7f793          	zext.b	a5,a5
-- 1d4:	4625                	li	a2,9
-- 1d6:	02f66863          	bltu	a2,a5,206 <atoi+0x44>
-- 1da:	872a                	mv	a4,a0
-+ 1c6:	00054683          	lbu	a3,0(a0)
-+ 1ca:	fd06879b          	addw	a5,a3,-48
-+ 1ce:	0ff7f793          	zext.b	a5,a5
-+ 1d2:	4625                	li	a2,9
-+ 1d4:	02f66863          	bltu	a2,a5,204 <atoi+0x44>
-+ 1d8:	872a                	mv	a4,a0
-   n = 0;
-- 1dc:	4501                	li	a0,0
-+ 1da:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
-- 1de:	0705                	addi	a4,a4,1
-- 1e0:	0025179b          	slliw	a5,a0,0x2
-- 1e4:	9fa9                	addw	a5,a5,a0
-- 1e6:	0017979b          	slliw	a5,a5,0x1
-- 1ea:	9fb5                	addw	a5,a5,a3
-- 1ec:	fd07851b          	addiw	a0,a5,-48
-+ 1dc:	0705                	add	a4,a4,1
-+ 1de:	0025179b          	sllw	a5,a0,0x2
-+ 1e2:	9fa9                	addw	a5,a5,a0
-+ 1e4:	0017979b          	sllw	a5,a5,0x1
-+ 1e8:	9fb5                	addw	a5,a5,a3
-+ 1ea:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
-- 1f0:	00074683          	lbu	a3,0(a4)
-- 1f4:	fd06879b          	addiw	a5,a3,-48
-- 1f8:	0ff7f793          	zext.b	a5,a5
-- 1fc:	fef671e3          	bgeu	a2,a5,1de <atoi+0x1c>
-+ 1ee:	00074683          	lbu	a3,0(a4)
-+ 1f2:	fd06879b          	addw	a5,a3,-48
-+ 1f6:	0ff7f793          	zext.b	a5,a5
-+ 1fa:	fef671e3          	bgeu	a2,a5,1dc <atoi+0x1c>
-   return n;
- }
-- 200:	6422                	ld	s0,8(sp)
-- 202:	0141                	addi	sp,sp,16
-- 204:	8082                	ret
-+ 1fe:	6422                	ld	s0,8(sp)
-+ 200:	0141                	add	sp,sp,16
-+ 202:	8082                	ret
-   n = 0;
-- 206:	4501                	li	a0,0
-- 208:	bfe5                	j	200 <atoi+0x3e>
-+ 204:	4501                	li	a0,0
-+ 206:	bfe5                	j	1fe <atoi+0x3e>
- 
--000000000000020a <memmove>:
-+0000000000000208 <memmove>:
- 
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
-- 20a:	1141                	addi	sp,sp,-16
-- 20c:	e422                	sd	s0,8(sp)
-- 20e:	0800                	addi	s0,sp,16
-+ 208:	1141                	add	sp,sp,-16
-+ 20a:	e422                	sd	s0,8(sp)
-+ 20c:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-   dst = vdst;
-   src = vsrc;
-   if (src > dst) {
-- 210:	02b57463          	bgeu	a0,a1,238 <memmove+0x2e>
-+ 20e:	02b57463          	bgeu	a0,a1,236 <memmove+0x2e>
-     while(n-- > 0)
-- 214:	00c05f63          	blez	a2,232 <memmove+0x28>
-- 218:	1602                	slli	a2,a2,0x20
-- 21a:	9201                	srli	a2,a2,0x20
-- 21c:	00c507b3          	add	a5,a0,a2
-+ 212:	00c05f63          	blez	a2,230 <memmove+0x28>
-+ 216:	1602                	sll	a2,a2,0x20
-+ 218:	9201                	srl	a2,a2,0x20
-+ 21a:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
-- 220:	872a                	mv	a4,a0
-+ 21e:	872a                	mv	a4,a0
-       *dst++ = *src++;
-- 222:	0585                	addi	a1,a1,1
-- 224:	0705                	addi	a4,a4,1
-- 226:	fff5c683          	lbu	a3,-1(a1)
-- 22a:	fed70fa3          	sb	a3,-1(a4)
-+ 220:	0585                	add	a1,a1,1
-+ 222:	0705                	add	a4,a4,1
-+ 224:	fff5c683          	lbu	a3,-1(a1)
-+ 228:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
-- 22e:	fef71ae3          	bne	a4,a5,222 <memmove+0x18>
-+ 22c:	fee79ae3          	bne	a5,a4,220 <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-   }
-   return vdst;
- }
-- 232:	6422                	ld	s0,8(sp)
-- 234:	0141                	addi	sp,sp,16
-- 236:	8082                	ret
-+ 230:	6422                	ld	s0,8(sp)
-+ 232:	0141                	add	sp,sp,16
-+ 234:	8082                	ret
-     dst += n;
-- 238:	00c50733          	add	a4,a0,a2
-+ 236:	00c50733          	add	a4,a0,a2
-     src += n;
-- 23c:	95b2                	add	a1,a1,a2
-+ 23a:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
-- 23e:	fec05ae3          	blez	a2,232 <memmove+0x28>
-- 242:	fff6079b          	addiw	a5,a2,-1
-- 246:	1782                	slli	a5,a5,0x20
-- 248:	9381                	srli	a5,a5,0x20
-- 24a:	fff7c793          	not	a5,a5
-- 24e:	97ba                	add	a5,a5,a4
-+ 23c:	fec05ae3          	blez	a2,230 <memmove+0x28>
-+ 240:	fff6079b          	addw	a5,a2,-1
-+ 244:	1782                	sll	a5,a5,0x20
-+ 246:	9381                	srl	a5,a5,0x20
-+ 248:	fff7c793          	not	a5,a5
-+ 24c:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
-- 250:	15fd                	addi	a1,a1,-1
-- 252:	177d                	addi	a4,a4,-1
-- 254:	0005c683          	lbu	a3,0(a1)
-- 258:	00d70023          	sb	a3,0(a4)
-+ 24e:	15fd                	add	a1,a1,-1
-+ 250:	177d                	add	a4,a4,-1
-+ 252:	0005c683          	lbu	a3,0(a1)
-+ 256:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
-- 25c:	fee79ae3          	bne	a5,a4,250 <memmove+0x46>
-- 260:	bfc9                	j	232 <memmove+0x28>
-+ 25a:	fee79ae3          	bne	a5,a4,24e <memmove+0x46>
-+ 25e:	bfc9                	j	230 <memmove+0x28>
- 
--0000000000000262 <memcmp>:
-+0000000000000260 <memcmp>:
- 
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
-- 262:	1141                	addi	sp,sp,-16
-- 264:	e422                	sd	s0,8(sp)
-- 266:	0800                	addi	s0,sp,16
-+ 260:	1141                	add	sp,sp,-16
-+ 262:	e422                	sd	s0,8(sp)
-+ 264:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
-- 268:	ca05                	beqz	a2,298 <memcmp+0x36>
-- 26a:	fff6069b          	addiw	a3,a2,-1
-- 26e:	1682                	slli	a3,a3,0x20
-- 270:	9281                	srli	a3,a3,0x20
-- 272:	0685                	addi	a3,a3,1
-- 274:	96aa                	add	a3,a3,a0
-+ 266:	ca05                	beqz	a2,296 <memcmp+0x36>
-+ 268:	fff6069b          	addw	a3,a2,-1
-+ 26c:	1682                	sll	a3,a3,0x20
-+ 26e:	9281                	srl	a3,a3,0x20
-+ 270:	0685                	add	a3,a3,1
-+ 272:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
-- 276:	00054783          	lbu	a5,0(a0)
-- 27a:	0005c703          	lbu	a4,0(a1)
-- 27e:	00e79863          	bne	a5,a4,28e <memcmp+0x2c>
-+ 274:	00054783          	lbu	a5,0(a0)
-+ 278:	0005c703          	lbu	a4,0(a1)
-+ 27c:	00e79863          	bne	a5,a4,28c <memcmp+0x2c>
-       return *p1 - *p2;
-     }
-     p1++;
-- 282:	0505                	addi	a0,a0,1
-+ 280:	0505                	add	a0,a0,1
-     p2++;
-- 284:	0585                	addi	a1,a1,1
-+ 282:	0585                	add	a1,a1,1
-   while (n-- > 0) {
-- 286:	fed518e3          	bne	a0,a3,276 <memcmp+0x14>
-+ 284:	fed518e3          	bne	a0,a3,274 <memcmp+0x14>
-   }
-   return 0;
-- 28a:	4501                	li	a0,0
-- 28c:	a019                	j	292 <memcmp+0x30>
-+ 288:	4501                	li	a0,0
-+ 28a:	a019                	j	290 <memcmp+0x30>
-       return *p1 - *p2;
-- 28e:	40e7853b          	subw	a0,a5,a4
-+ 28c:	40e7853b          	subw	a0,a5,a4
- }
-- 292:	6422                	ld	s0,8(sp)
-- 294:	0141                	addi	sp,sp,16
-- 296:	8082                	ret
-+ 290:	6422                	ld	s0,8(sp)
-+ 292:	0141                	add	sp,sp,16
-+ 294:	8082                	ret
-   return 0;
-- 298:	4501                	li	a0,0
-- 29a:	bfe5                	j	292 <memcmp+0x30>
-+ 296:	4501                	li	a0,0
-+ 298:	bfe5                	j	290 <memcmp+0x30>
- 
--000000000000029c <memcpy>:
-+000000000000029a <memcpy>:
- 
- void *
- memcpy(void *dst, const void *src, uint n)
- {
-- 29c:	1141                	addi	sp,sp,-16
-- 29e:	e406                	sd	ra,8(sp)
-- 2a0:	e022                	sd	s0,0(sp)
-- 2a2:	0800                	addi	s0,sp,16
-+ 29a:	1141                	add	sp,sp,-16
-+ 29c:	e406                	sd	ra,8(sp)
-+ 29e:	e022                	sd	s0,0(sp)
-+ 2a0:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
-- 2a4:	f67ff0ef          	jal	20a <memmove>
-+ 2a2:	f67ff0ef          	jal	208 <memmove>
- }
-- 2a8:	60a2                	ld	ra,8(sp)
-- 2aa:	6402                	ld	s0,0(sp)
-- 2ac:	0141                	addi	sp,sp,16
-- 2ae:	8082                	ret
-+ 2a6:	60a2                	ld	ra,8(sp)
-+ 2a8:	6402                	ld	s0,0(sp)
-+ 2aa:	0141                	add	sp,sp,16
-+ 2ac:	8082                	ret
- 
--00000000000002b0 <fork>:
-+00000000000002ae <fork>:
- # generated by usys.pl - do not edit
- #include "kernel/syscall.h"
- .global fork
- fork:
-  li a7, SYS_fork
-- 2b0:	4885                	li	a7,1
-+ 2ae:	4885                	li	a7,1
-  ecall
-- 2b2:	00000073          	ecall
-+ 2b0:	00000073          	ecall
-  ret
-- 2b6:	8082                	ret
-+ 2b4:	8082                	ret
- 
--00000000000002b8 <exit>:
-+00000000000002b6 <exit>:
- .global exit
- exit:
-  li a7, SYS_exit
-- 2b8:	4889                	li	a7,2
-+ 2b6:	4889                	li	a7,2
-  ecall
-- 2ba:	00000073          	ecall
-+ 2b8:	00000073          	ecall
-  ret
-- 2be:	8082                	ret
-+ 2bc:	8082                	ret
- 
--00000000000002c0 <wait>:
-+00000000000002be <wait>:
- .global wait
- wait:
-  li a7, SYS_wait
-- 2c0:	488d                	li	a7,3
-+ 2be:	488d                	li	a7,3
-  ecall
-- 2c2:	00000073          	ecall
-+ 2c0:	00000073          	ecall
-  ret
-- 2c6:	8082                	ret
-+ 2c4:	8082                	ret
- 
--00000000000002c8 <pipe>:
-+00000000000002c6 <pipe>:
- .global pipe
- pipe:
-  li a7, SYS_pipe
-- 2c8:	4891                	li	a7,4
-+ 2c6:	4891                	li	a7,4
-  ecall
-- 2ca:	00000073          	ecall
-+ 2c8:	00000073          	ecall
-  ret
-- 2ce:	8082                	ret
-+ 2cc:	8082                	ret
- 
--00000000000002d0 <read>:
-+00000000000002ce <read>:
- .global read
- read:
-  li a7, SYS_read
-- 2d0:	4895                	li	a7,5
-+ 2ce:	4895                	li	a7,5
-  ecall
-- 2d2:	00000073          	ecall
-+ 2d0:	00000073          	ecall
-  ret
-- 2d6:	8082                	ret
-+ 2d4:	8082                	ret
- 
--00000000000002d8 <write>:
-+00000000000002d6 <write>:
- .global write
- write:
-  li a7, SYS_write
-- 2d8:	48c1                	li	a7,16
-+ 2d6:	48c1                	li	a7,16
-  ecall
-- 2da:	00000073          	ecall
-+ 2d8:	00000073          	ecall
-  ret
-- 2de:	8082                	ret
-+ 2dc:	8082                	ret
- 
--00000000000002e0 <close>:
-+00000000000002de <close>:
- .global close
- close:
-  li a7, SYS_close
-- 2e0:	48d5                	li	a7,21
-+ 2de:	48d5                	li	a7,21
-  ecall
-- 2e2:	00000073          	ecall
-+ 2e0:	00000073          	ecall
-  ret
-- 2e6:	8082                	ret
-+ 2e4:	8082                	ret
- 
--00000000000002e8 <kill>:
-+00000000000002e6 <kill>:
- .global kill
- kill:
-  li a7, SYS_kill
-- 2e8:	4899                	li	a7,6
-+ 2e6:	4899                	li	a7,6
-  ecall
-- 2ea:	00000073          	ecall
-+ 2e8:	00000073          	ecall
-  ret
-- 2ee:	8082                	ret
-+ 2ec:	8082                	ret
- 
--00000000000002f0 <exec>:
-+00000000000002ee <exec>:
- .global exec
- exec:
-  li a7, SYS_exec
-- 2f0:	489d                	li	a7,7
-+ 2ee:	489d                	li	a7,7
-  ecall
-- 2f2:	00000073          	ecall
-+ 2f0:	00000073          	ecall
-  ret
-- 2f6:	8082                	ret
-+ 2f4:	8082                	ret
- 
--00000000000002f8 <open>:
-+00000000000002f6 <open>:
- .global open
- open:
-  li a7, SYS_open
-- 2f8:	48bd                	li	a7,15
-+ 2f6:	48bd                	li	a7,15
-  ecall
-- 2fa:	00000073          	ecall
-+ 2f8:	00000073          	ecall
-  ret
-- 2fe:	8082                	ret
-+ 2fc:	8082                	ret
- 
--0000000000000300 <mknod>:
-+00000000000002fe <mknod>:
- .global mknod
- mknod:
-  li a7, SYS_mknod
-- 300:	48c5                	li	a7,17
-+ 2fe:	48c5                	li	a7,17
-  ecall
-- 302:	00000073          	ecall
-+ 300:	00000073          	ecall
-  ret
-- 306:	8082                	ret
-+ 304:	8082                	ret
- 
--0000000000000308 <unlink>:
-+0000000000000306 <unlink>:
- .global unlink
- unlink:
-  li a7, SYS_unlink
-- 308:	48c9                	li	a7,18
-+ 306:	48c9                	li	a7,18
-  ecall
-- 30a:	00000073          	ecall
-+ 308:	00000073          	ecall
-  ret
-- 30e:	8082                	ret
-+ 30c:	8082                	ret
- 
--0000000000000310 <fstat>:
-+000000000000030e <fstat>:
- .global fstat
- fstat:
-  li a7, SYS_fstat
-- 310:	48a1                	li	a7,8
-+ 30e:	48a1                	li	a7,8
-  ecall
-- 312:	00000073          	ecall
-+ 310:	00000073          	ecall
-  ret
-- 316:	8082                	ret
-+ 314:	8082                	ret
- 
--0000000000000318 <link>:
-+0000000000000316 <link>:
- .global link
- link:
-  li a7, SYS_link
-- 318:	48cd                	li	a7,19
-+ 316:	48cd                	li	a7,19
-  ecall
-- 31a:	00000073          	ecall
-+ 318:	00000073          	ecall
-  ret
-- 31e:	8082                	ret
-+ 31c:	8082                	ret
- 
--0000000000000320 <mkdir>:
-+000000000000031e <mkdir>:
- .global mkdir
- mkdir:
-  li a7, SYS_mkdir
-- 320:	48d1                	li	a7,20
-+ 31e:	48d1                	li	a7,20
-  ecall
-- 322:	00000073          	ecall
-+ 320:	00000073          	ecall
-  ret
-- 326:	8082                	ret
-+ 324:	8082                	ret
- 
--0000000000000328 <chdir>:
-+0000000000000326 <chdir>:
- .global chdir
- chdir:
-  li a7, SYS_chdir
-- 328:	48a5                	li	a7,9
-+ 326:	48a5                	li	a7,9
-  ecall
-- 32a:	00000073          	ecall
-+ 328:	00000073          	ecall
-  ret
-- 32e:	8082                	ret
-+ 32c:	8082                	ret
- 
--0000000000000330 <dup>:
-+000000000000032e <dup>:
- .global dup
- dup:
-  li a7, SYS_dup
-- 330:	48a9                	li	a7,10
-+ 32e:	48a9                	li	a7,10
-  ecall
-- 332:	00000073          	ecall
-+ 330:	00000073          	ecall
-  ret
-- 336:	8082                	ret
-+ 334:	8082                	ret
- 
--0000000000000338 <getpid>:
-+0000000000000336 <getpid>:
- .global getpid
- getpid:
-  li a7, SYS_getpid
-- 338:	48ad                	li	a7,11
-+ 336:	48ad                	li	a7,11
-  ecall
-- 33a:	00000073          	ecall
-+ 338:	00000073          	ecall
-  ret
-- 33e:	8082                	ret
-+ 33c:	8082                	ret
- 
--0000000000000340 <sbrk>:
-+000000000000033e <sbrk>:
- .global sbrk
- sbrk:
-  li a7, SYS_sbrk
-- 340:	48b1                	li	a7,12
-+ 33e:	48b1                	li	a7,12
-  ecall
-- 342:	00000073          	ecall
-+ 340:	00000073          	ecall
-  ret
-- 346:	8082                	ret
-+ 344:	8082                	ret
- 
--0000000000000348 <sleep>:
-+0000000000000346 <sleep>:
- .global sleep
- sleep:
-  li a7, SYS_sleep
-- 348:	48b5                	li	a7,13
-+ 346:	48b5                	li	a7,13
-  ecall
-- 34a:	00000073          	ecall
-+ 348:	00000073          	ecall
-  ret
-- 34e:	8082                	ret
-+ 34c:	8082                	ret
- 
--0000000000000350 <uptime>:
-+000000000000034e <uptime>:
- .global uptime
- uptime:
-  li a7, SYS_uptime
-- 350:	48b9                	li	a7,14
-+ 34e:	48b9                	li	a7,14
-  ecall
-- 352:	00000073          	ecall
-+ 350:	00000073          	ecall
-  ret
-- 356:	8082                	ret
-+ 354:	8082                	ret
- 
--0000000000000358 <putc>:
-+0000000000000356 <putc>:
- 
- static char digits[] = "0123456789ABCDEF";
- 
- static void
- putc(int fd, char c)
- {
-- 358:	1101                	addi	sp,sp,-32
-- 35a:	ec06                	sd	ra,24(sp)
-- 35c:	e822                	sd	s0,16(sp)
-- 35e:	1000                	addi	s0,sp,32
-- 360:	feb407a3          	sb	a1,-17(s0)
-+ 356:	1101                	add	sp,sp,-32
-+ 358:	ec06                	sd	ra,24(sp)
-+ 35a:	e822                	sd	s0,16(sp)
-+ 35c:	1000                	add	s0,sp,32
-+ 35e:	feb407a3          	sb	a1,-17(s0)
-   write(fd, &c, 1);
-- 364:	4605                	li	a2,1
-- 366:	fef40593          	addi	a1,s0,-17
-- 36a:	f6fff0ef          	jal	2d8 <write>
-+ 362:	4605                	li	a2,1
-+ 364:	fef40593          	add	a1,s0,-17
-+ 368:	f6fff0ef          	jal	2d6 <write>
- }
-- 36e:	60e2                	ld	ra,24(sp)
-- 370:	6442                	ld	s0,16(sp)
-- 372:	6105                	addi	sp,sp,32
-- 374:	8082                	ret
-+ 36c:	60e2                	ld	ra,24(sp)
-+ 36e:	6442                	ld	s0,16(sp)
-+ 370:	6105                	add	sp,sp,32
-+ 372:	8082                	ret
- 
--0000000000000376 <printint>:
-+0000000000000374 <printint>:
- 
- static void
- printint(int fd, int xx, int base, int sgn)
- {
-- 376:	7139                	addi	sp,sp,-64
-- 378:	fc06                	sd	ra,56(sp)
-- 37a:	f822                	sd	s0,48(sp)
-- 37c:	f426                	sd	s1,40(sp)
-- 37e:	0080                	addi	s0,sp,64
-- 380:	84aa                	mv	s1,a0
-+ 374:	7139                	add	sp,sp,-64
-+ 376:	fc06                	sd	ra,56(sp)
-+ 378:	f822                	sd	s0,48(sp)
-+ 37a:	f426                	sd	s1,40(sp)
-+ 37c:	f04a                	sd	s2,32(sp)
-+ 37e:	ec4e                	sd	s3,24(sp)
-+ 380:	0080                	add	s0,sp,64
-+ 382:	84aa                	mv	s1,a0
-   char buf[16];
-   int i, neg;
-   uint x;
- 
-   neg = 0;
-   if(sgn && xx < 0){
-- 382:	c299                	beqz	a3,388 <printint+0x12>
-- 384:	0805c963          	bltz	a1,416 <printint+0xa0>
-+ 384:	c299                	beqz	a3,38a <printint+0x16>
-+ 386:	0805c763          	bltz	a1,414 <printint+0xa0>
-     neg = 1;
-     x = -xx;
-   } else {
-     x = xx;
-- 388:	2581                	sext.w	a1,a1
-+ 38a:	2581                	sext.w	a1,a1
-   neg = 0;
-- 38a:	4881                	li	a7,0
-- 38c:	fc040693          	addi	a3,s0,-64
-+ 38c:	4881                	li	a7,0
-+ 38e:	fc040693          	add	a3,s0,-64
-   }
- 
-   i = 0;
-- 390:	4701                	li	a4,0
-+ 392:	4701                	li	a4,0
-   do{
-     buf[i++] = digits[x % base];
-- 392:	2601                	sext.w	a2,a2
-- 394:	00000517          	auipc	a0,0x0
-- 398:	52450513          	addi	a0,a0,1316 # 8b8 <digits>
-- 39c:	883a                	mv	a6,a4
-- 39e:	2705                	addiw	a4,a4,1
-- 3a0:	02c5f7bb          	remuw	a5,a1,a2
-- 3a4:	1782                	slli	a5,a5,0x20
-- 3a6:	9381                	srli	a5,a5,0x20
-- 3a8:	97aa                	add	a5,a5,a0
-- 3aa:	0007c783          	lbu	a5,0(a5)
-- 3ae:	00f68023          	sb	a5,0(a3)
-+ 394:	2601                	sext.w	a2,a2
-+ 396:	00000517          	auipc	a0,0x0
-+ 39a:	51250513          	add	a0,a0,1298 # 8a8 <digits>
-+ 39e:	883a                	mv	a6,a4
-+ 3a0:	2705                	addw	a4,a4,1
-+ 3a2:	02c5f7bb          	remuw	a5,a1,a2
-+ 3a6:	1782                	sll	a5,a5,0x20
-+ 3a8:	9381                	srl	a5,a5,0x20
-+ 3aa:	97aa                	add	a5,a5,a0
-+ 3ac:	0007c783          	lbu	a5,0(a5)
-+ 3b0:	00f68023          	sb	a5,0(a3)
-   }while((x /= base) != 0);
-- 3b2:	0005879b          	sext.w	a5,a1
-- 3b6:	02c5d5bb          	divuw	a1,a1,a2
-- 3ba:	0685                	addi	a3,a3,1
-- 3bc:	fec7f0e3          	bgeu	a5,a2,39c <printint+0x26>
-+ 3b4:	0005879b          	sext.w	a5,a1
-+ 3b8:	02c5d5bb          	divuw	a1,a1,a2
-+ 3bc:	0685                	add	a3,a3,1
-+ 3be:	fec7f0e3          	bgeu	a5,a2,39e <printint+0x2a>
-   if(neg)
-- 3c0:	00088c63          	beqz	a7,3d8 <printint+0x62>
-+ 3c2:	00088c63          	beqz	a7,3da <printint+0x66>
-     buf[i++] = '-';
-- 3c4:	fd070793          	addi	a5,a4,-48
-- 3c8:	00878733          	add	a4,a5,s0
-- 3cc:	02d00793          	li	a5,45
-- 3d0:	fef70823          	sb	a5,-16(a4)
-- 3d4:	0028071b          	addiw	a4,a6,2
-+ 3c6:	fd070793          	add	a5,a4,-48
-+ 3ca:	00878733          	add	a4,a5,s0
-+ 3ce:	02d00793          	li	a5,45
-+ 3d2:	fef70823          	sb	a5,-16(a4)
-+ 3d6:	0028071b          	addw	a4,a6,2
- 
-   while(--i >= 0)
-- 3d8:	02e05a63          	blez	a4,40c <printint+0x96>
-- 3dc:	f04a                	sd	s2,32(sp)
-- 3de:	ec4e                	sd	s3,24(sp)
-- 3e0:	fc040793          	addi	a5,s0,-64
-- 3e4:	00e78933          	add	s2,a5,a4
-- 3e8:	fff78993          	addi	s3,a5,-1
-- 3ec:	99ba                	add	s3,s3,a4
-- 3ee:	377d                	addiw	a4,a4,-1
-- 3f0:	1702                	slli	a4,a4,0x20
-- 3f2:	9301                	srli	a4,a4,0x20
-- 3f4:	40e989b3          	sub	s3,s3,a4
-+ 3da:	02e05663          	blez	a4,406 <printint+0x92>
-+ 3de:	fc040793          	add	a5,s0,-64
-+ 3e2:	00e78933          	add	s2,a5,a4
-+ 3e6:	fff78993          	add	s3,a5,-1
-+ 3ea:	99ba                	add	s3,s3,a4
-+ 3ec:	377d                	addw	a4,a4,-1
-+ 3ee:	1702                	sll	a4,a4,0x20
-+ 3f0:	9301                	srl	a4,a4,0x20
-+ 3f2:	40e989b3          	sub	s3,s3,a4
-     putc(fd, buf[i]);
-- 3f8:	fff94583          	lbu	a1,-1(s2)
-- 3fc:	8526                	mv	a0,s1
-- 3fe:	f5bff0ef          	jal	358 <putc>
-+ 3f6:	fff94583          	lbu	a1,-1(s2)
-+ 3fa:	8526                	mv	a0,s1
-+ 3fc:	f5bff0ef          	jal	356 <putc>
-   while(--i >= 0)
-- 402:	197d                	addi	s2,s2,-1
-- 404:	ff391ae3          	bne	s2,s3,3f8 <printint+0x82>
-- 408:	7902                	ld	s2,32(sp)
-- 40a:	69e2                	ld	s3,24(sp)
-+ 400:	197d                	add	s2,s2,-1
-+ 402:	ff391ae3          	bne	s2,s3,3f6 <printint+0x82>
- }
-- 40c:	70e2                	ld	ra,56(sp)
-- 40e:	7442                	ld	s0,48(sp)
-- 410:	74a2                	ld	s1,40(sp)
-- 412:	6121                	addi	sp,sp,64
-- 414:	8082                	ret
-+ 406:	70e2                	ld	ra,56(sp)
-+ 408:	7442                	ld	s0,48(sp)
-+ 40a:	74a2                	ld	s1,40(sp)
-+ 40c:	7902                	ld	s2,32(sp)
-+ 40e:	69e2                	ld	s3,24(sp)
-+ 410:	6121                	add	sp,sp,64
-+ 412:	8082                	ret
-     x = -xx;
-- 416:	40b005bb          	negw	a1,a1
-+ 414:	40b005bb          	negw	a1,a1
-     neg = 1;
-- 41a:	4885                	li	a7,1
-+ 418:	4885                	li	a7,1
-     x = -xx;
-- 41c:	bf85                	j	38c <printint+0x16>
-+ 41a:	bf95                	j	38e <printint+0x1a>
- 
--000000000000041e <vprintf>:
-+000000000000041c <vprintf>:
- }
- 
- /* Print to the given fd. Only understands %d, %x, %p, %s. */
- void
- vprintf(int fd, const char *fmt, va_list ap)
- {
-- 41e:	711d                	addi	sp,sp,-96
-- 420:	ec86                	sd	ra,88(sp)
-- 422:	e8a2                	sd	s0,80(sp)
-+ 41c:	711d                	add	sp,sp,-96
-+ 41e:	ec86                	sd	ra,88(sp)
-+ 420:	e8a2                	sd	s0,80(sp)
-+ 422:	e4a6                	sd	s1,72(sp)
-  424:	e0ca                	sd	s2,64(sp)
-- 426:	1080                	addi	s0,sp,96
-+ 426:	fc4e                	sd	s3,56(sp)
-+ 428:	f852                	sd	s4,48(sp)
-+ 42a:	f456                	sd	s5,40(sp)
-+ 42c:	f05a                	sd	s6,32(sp)
-+ 42e:	ec5e                	sd	s7,24(sp)
-+ 430:	e862                	sd	s8,16(sp)
-+ 432:	e466                	sd	s9,8(sp)
-+ 434:	e06a                	sd	s10,0(sp)
-+ 436:	1080                	add	s0,sp,96
-   char *s;
-   int c0, c1, c2, i, state;
- 
-   state = 0;
-   for(i = 0; fmt[i]; i++){
-- 428:	0005c903          	lbu	s2,0(a1)
-- 42c:	26090863          	beqz	s2,69c <vprintf+0x27e>
-- 430:	e4a6                	sd	s1,72(sp)
-- 432:	fc4e                	sd	s3,56(sp)
-- 434:	f852                	sd	s4,48(sp)
-- 436:	f456                	sd	s5,40(sp)
-- 438:	f05a                	sd	s6,32(sp)
-- 43a:	ec5e                	sd	s7,24(sp)
-- 43c:	e862                	sd	s8,16(sp)
-- 43e:	e466                	sd	s9,8(sp)
-+ 438:	0005c903          	lbu	s2,0(a1)
-+ 43c:	24090763          	beqz	s2,68a <vprintf+0x26e>
-  440:	8b2a                	mv	s6,a0
-  442:	8a2e                	mv	s4,a1
-  444:	8bb2                	mv	s7,a2
-@@ -855,320 +855,320 @@ vprintf(int fd, const char *fmt, va_list ap)
-         printint(fd, va_arg(ap, int), 10, 1);
-       } else if(c0 == 'l' && c1 == 'd'){
-  454:	06c00c93          	li	s9,108
-- 458:	a005                	j	478 <vprintf+0x5a>
-+ 458:	a005                	j	478 <vprintf+0x5c>
-         putc(fd, c0);
-  45a:	85ca                	mv	a1,s2
-  45c:	855a                	mv	a0,s6
-- 45e:	efbff0ef          	jal	358 <putc>
-- 462:	a019                	j	468 <vprintf+0x4a>
-+ 45e:	ef9ff0ef          	jal	356 <putc>
-+ 462:	a019                	j	468 <vprintf+0x4c>
-     } else if(state == '%'){
-- 464:	03598263          	beq	s3,s5,488 <vprintf+0x6a>
-+ 464:	03598263          	beq	s3,s5,488 <vprintf+0x6c>
-   for(i = 0; fmt[i]; i++){
-- 468:	2485                	addiw	s1,s1,1
-+ 468:	2485                	addw	s1,s1,1
-  46a:	8726                	mv	a4,s1
-  46c:	009a07b3          	add	a5,s4,s1
-  470:	0007c903          	lbu	s2,0(a5)
-- 474:	20090c63          	beqz	s2,68c <vprintf+0x26e>
-+ 474:	20090b63          	beqz	s2,68a <vprintf+0x26e>
-     c0 = fmt[i] & 0xff;
-  478:	0009079b          	sext.w	a5,s2
-     if(state == 0){
-- 47c:	fe0994e3          	bnez	s3,464 <vprintf+0x46>
-+ 47c:	fe0994e3          	bnez	s3,464 <vprintf+0x48>
-       if(c0 == '%'){
-- 480:	fd579de3          	bne	a5,s5,45a <vprintf+0x3c>
-+ 480:	fd579de3          	bne	a5,s5,45a <vprintf+0x3e>
-         state = '%';
-  484:	89be                	mv	s3,a5
-- 486:	b7cd                	j	468 <vprintf+0x4a>
-+ 486:	b7cd                	j	468 <vprintf+0x4c>
-       if(c0) c1 = fmt[i+1] & 0xff;
-- 488:	00ea06b3          	add	a3,s4,a4
-- 48c:	0016c683          	lbu	a3,1(a3)
-+ 488:	c7c9                	beqz	a5,512 <vprintf+0xf6>
-+ 48a:	00ea06b3          	add	a3,s4,a4
-+ 48e:	0016c683          	lbu	a3,1(a3)
-       c1 = c2 = 0;
-- 490:	8636                	mv	a2,a3
-+ 492:	8636                	mv	a2,a3
-       if(c1) c2 = fmt[i+2] & 0xff;
-- 492:	c681                	beqz	a3,49a <vprintf+0x7c>
-- 494:	9752                	add	a4,a4,s4
-- 496:	00274603          	lbu	a2,2(a4)
-+ 494:	c681                	beqz	a3,49c <vprintf+0x80>
-+ 496:	9752                	add	a4,a4,s4
-+ 498:	00274603          	lbu	a2,2(a4)
-       if(c0 == 'd'){
-- 49a:	03878f63          	beq	a5,s8,4d8 <vprintf+0xba>
-+ 49c:	03878f63          	beq	a5,s8,4da <vprintf+0xbe>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 49e:	05978963          	beq	a5,s9,4f0 <vprintf+0xd2>
-+ 4a0:	05978963          	beq	a5,s9,4f2 <vprintf+0xd6>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 2;
-       } else if(c0 == 'u'){
-- 4a2:	07500713          	li	a4,117
-- 4a6:	0ee78363          	beq	a5,a4,58c <vprintf+0x16e>
-+ 4a4:	07500713          	li	a4,117
-+ 4a8:	0ee78363          	beq	a5,a4,58e <vprintf+0x172>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 2;
-       } else if(c0 == 'x'){
-- 4aa:	07800713          	li	a4,120
-- 4ae:	12e78563          	beq	a5,a4,5d8 <vprintf+0x1ba>
-+ 4ac:	07800713          	li	a4,120
-+ 4b0:	12e78563          	beq	a5,a4,5da <vprintf+0x1be>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 2;
-       } else if(c0 == 'p'){
-- 4b2:	07000713          	li	a4,112
-- 4b6:	14e78a63          	beq	a5,a4,60a <vprintf+0x1ec>
-+ 4b4:	07000713          	li	a4,112
-+ 4b8:	14e78a63          	beq	a5,a4,60c <vprintf+0x1f0>
-         printptr(fd, va_arg(ap, uint64));
-       } else if(c0 == 's'){
-- 4ba:	07300713          	li	a4,115
-- 4be:	18e78a63          	beq	a5,a4,652 <vprintf+0x234>
-+ 4bc:	07300713          	li	a4,115
-+ 4c0:	18e78863          	beq	a5,a4,650 <vprintf+0x234>
-         if((s = va_arg(ap, char*)) == 0)
-           s = "(null)";
-         for(; *s; s++)
-           putc(fd, *s);
-       } else if(c0 == '%'){
-- 4c2:	02500713          	li	a4,37
-- 4c6:	04e79563          	bne	a5,a4,510 <vprintf+0xf2>
-+ 4c4:	02500713          	li	a4,37
-+ 4c8:	04e79563          	bne	a5,a4,512 <vprintf+0xf6>
-         putc(fd, '%');
-- 4ca:	02500593          	li	a1,37
-- 4ce:	855a                	mv	a0,s6
-- 4d0:	e89ff0ef          	jal	358 <putc>
-+ 4cc:	02500593          	li	a1,37
-+ 4d0:	855a                	mv	a0,s6
-+ 4d2:	e85ff0ef          	jal	356 <putc>
-         /* Unknown % sequence.  Print it to draw attention. */
-         putc(fd, '%');
-         putc(fd, c);
-       }
- #endif
-       state = 0;
-- 4d4:	4981                	li	s3,0
-- 4d6:	bf49                	j	468 <vprintf+0x4a>
-+ 4d6:	4981                	li	s3,0
-+ 4d8:	bf41                	j	468 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 1);
-- 4d8:	008b8913          	addi	s2,s7,8
-- 4dc:	4685                	li	a3,1
-- 4de:	4629                	li	a2,10
-- 4e0:	000ba583          	lw	a1,0(s7)
-- 4e4:	855a                	mv	a0,s6
-- 4e6:	e91ff0ef          	jal	376 <printint>
-- 4ea:	8bca                	mv	s7,s2
-+ 4da:	008b8913          	add	s2,s7,8
-+ 4de:	4685                	li	a3,1
-+ 4e0:	4629                	li	a2,10
-+ 4e2:	000ba583          	lw	a1,0(s7)
-+ 4e6:	855a                	mv	a0,s6
-+ 4e8:	e8dff0ef          	jal	374 <printint>
-+ 4ec:	8bca                	mv	s7,s2
-       state = 0;
-- 4ec:	4981                	li	s3,0
-- 4ee:	bfad                	j	468 <vprintf+0x4a>
-+ 4ee:	4981                	li	s3,0
-+ 4f0:	bfa5                	j	468 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 4f0:	06400793          	li	a5,100
-- 4f4:	02f68963          	beq	a3,a5,526 <vprintf+0x108>
-+ 4f2:	06400793          	li	a5,100
-+ 4f6:	02f68963          	beq	a3,a5,528 <vprintf+0x10c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 4f8:	06c00793          	li	a5,108
-- 4fc:	04f68263          	beq	a3,a5,540 <vprintf+0x122>
-+ 4fa:	06c00793          	li	a5,108
-+ 4fe:	04f68263          	beq	a3,a5,542 <vprintf+0x126>
-       } else if(c0 == 'l' && c1 == 'u'){
-- 500:	07500793          	li	a5,117
-- 504:	0af68063          	beq	a3,a5,5a4 <vprintf+0x186>
-+ 502:	07500793          	li	a5,117
-+ 506:	0af68063          	beq	a3,a5,5a6 <vprintf+0x18a>
-       } else if(c0 == 'l' && c1 == 'x'){
-- 508:	07800793          	li	a5,120
-- 50c:	0ef68263          	beq	a3,a5,5f0 <vprintf+0x1d2>
-+ 50a:	07800793          	li	a5,120
-+ 50e:	0ef68263          	beq	a3,a5,5f2 <vprintf+0x1d6>
-         putc(fd, '%');
-- 510:	02500593          	li	a1,37
-- 514:	855a                	mv	a0,s6
-- 516:	e43ff0ef          	jal	358 <putc>
-+ 512:	02500593          	li	a1,37
-+ 516:	855a                	mv	a0,s6
-+ 518:	e3fff0ef          	jal	356 <putc>
-         putc(fd, c0);
-- 51a:	85ca                	mv	a1,s2
-- 51c:	855a                	mv	a0,s6
-- 51e:	e3bff0ef          	jal	358 <putc>
-+ 51c:	85ca                	mv	a1,s2
-+ 51e:	855a                	mv	a0,s6
-+ 520:	e37ff0ef          	jal	356 <putc>
-       state = 0;
-- 522:	4981                	li	s3,0
-- 524:	b791                	j	468 <vprintf+0x4a>
-+ 524:	4981                	li	s3,0
-+ 526:	b789                	j	468 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 526:	008b8913          	addi	s2,s7,8
-- 52a:	4685                	li	a3,1
-- 52c:	4629                	li	a2,10
-- 52e:	000ba583          	lw	a1,0(s7)
-- 532:	855a                	mv	a0,s6
-- 534:	e43ff0ef          	jal	376 <printint>
-+ 528:	008b8913          	add	s2,s7,8
-+ 52c:	4685                	li	a3,1
-+ 52e:	4629                	li	a2,10
-+ 530:	000ba583          	lw	a1,0(s7)
-+ 534:	855a                	mv	a0,s6
-+ 536:	e3fff0ef          	jal	374 <printint>
-         i += 1;
-- 538:	2485                	addiw	s1,s1,1
-+ 53a:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 53a:	8bca                	mv	s7,s2
-+ 53c:	8bca                	mv	s7,s2
-       state = 0;
-- 53c:	4981                	li	s3,0
-+ 53e:	4981                	li	s3,0
-         i += 1;
-- 53e:	b72d                	j	468 <vprintf+0x4a>
-+ 540:	b725                	j	468 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 540:	06400793          	li	a5,100
-- 544:	02f60763          	beq	a2,a5,572 <vprintf+0x154>
-+ 542:	06400793          	li	a5,100
-+ 546:	02f60763          	beq	a2,a5,574 <vprintf+0x158>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-- 548:	07500793          	li	a5,117
-- 54c:	06f60963          	beq	a2,a5,5be <vprintf+0x1a0>
-+ 54a:	07500793          	li	a5,117
-+ 54e:	06f60963          	beq	a2,a5,5c0 <vprintf+0x1a4>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-- 550:	07800793          	li	a5,120
-- 554:	faf61ee3          	bne	a2,a5,510 <vprintf+0xf2>
-+ 552:	07800793          	li	a5,120
-+ 556:	faf61ee3          	bne	a2,a5,512 <vprintf+0xf6>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 558:	008b8913          	addi	s2,s7,8
-- 55c:	4681                	li	a3,0
-- 55e:	4641                	li	a2,16
-- 560:	000ba583          	lw	a1,0(s7)
-- 564:	855a                	mv	a0,s6
-- 566:	e11ff0ef          	jal	376 <printint>
-+ 55a:	008b8913          	add	s2,s7,8
-+ 55e:	4681                	li	a3,0
-+ 560:	4641                	li	a2,16
-+ 562:	000ba583          	lw	a1,0(s7)
-+ 566:	855a                	mv	a0,s6
-+ 568:	e0dff0ef          	jal	374 <printint>
-         i += 2;
-- 56a:	2489                	addiw	s1,s1,2
-+ 56c:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 56c:	8bca                	mv	s7,s2
-+ 56e:	8bca                	mv	s7,s2
-       state = 0;
-- 56e:	4981                	li	s3,0
-+ 570:	4981                	li	s3,0
-         i += 2;
-- 570:	bde5                	j	468 <vprintf+0x4a>
-+ 572:	bddd                	j	468 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 572:	008b8913          	addi	s2,s7,8
-- 576:	4685                	li	a3,1
-- 578:	4629                	li	a2,10
-- 57a:	000ba583          	lw	a1,0(s7)
-- 57e:	855a                	mv	a0,s6
-- 580:	df7ff0ef          	jal	376 <printint>
-+ 574:	008b8913          	add	s2,s7,8
-+ 578:	4685                	li	a3,1
-+ 57a:	4629                	li	a2,10
-+ 57c:	000ba583          	lw	a1,0(s7)
-+ 580:	855a                	mv	a0,s6
-+ 582:	df3ff0ef          	jal	374 <printint>
-         i += 2;
-- 584:	2489                	addiw	s1,s1,2
-+ 586:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 586:	8bca                	mv	s7,s2
-+ 588:	8bca                	mv	s7,s2
-       state = 0;
-- 588:	4981                	li	s3,0
-+ 58a:	4981                	li	s3,0
-         i += 2;
-- 58a:	bdf9                	j	468 <vprintf+0x4a>
-+ 58c:	bdf1                	j	468 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 0);
-- 58c:	008b8913          	addi	s2,s7,8
-- 590:	4681                	li	a3,0
-- 592:	4629                	li	a2,10
-- 594:	000ba583          	lw	a1,0(s7)
-- 598:	855a                	mv	a0,s6
-- 59a:	dddff0ef          	jal	376 <printint>
-- 59e:	8bca                	mv	s7,s2
-+ 58e:	008b8913          	add	s2,s7,8
-+ 592:	4681                	li	a3,0
-+ 594:	4629                	li	a2,10
-+ 596:	000ba583          	lw	a1,0(s7)
-+ 59a:	855a                	mv	a0,s6
-+ 59c:	dd9ff0ef          	jal	374 <printint>
-+ 5a0:	8bca                	mv	s7,s2
-       state = 0;
-- 5a0:	4981                	li	s3,0
-- 5a2:	b5d9                	j	468 <vprintf+0x4a>
-+ 5a2:	4981                	li	s3,0
-+ 5a4:	b5d1                	j	468 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 5a4:	008b8913          	addi	s2,s7,8
-- 5a8:	4681                	li	a3,0
-- 5aa:	4629                	li	a2,10
-- 5ac:	000ba583          	lw	a1,0(s7)
-- 5b0:	855a                	mv	a0,s6
-- 5b2:	dc5ff0ef          	jal	376 <printint>
-+ 5a6:	008b8913          	add	s2,s7,8
-+ 5aa:	4681                	li	a3,0
-+ 5ac:	4629                	li	a2,10
-+ 5ae:	000ba583          	lw	a1,0(s7)
-+ 5b2:	855a                	mv	a0,s6
-+ 5b4:	dc1ff0ef          	jal	374 <printint>
-         i += 1;
-- 5b6:	2485                	addiw	s1,s1,1
-+ 5b8:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 5b8:	8bca                	mv	s7,s2
-+ 5ba:	8bca                	mv	s7,s2
-       state = 0;
-- 5ba:	4981                	li	s3,0
-+ 5bc:	4981                	li	s3,0
-         i += 1;
-- 5bc:	b575                	j	468 <vprintf+0x4a>
-+ 5be:	b56d                	j	468 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 5be:	008b8913          	addi	s2,s7,8
-- 5c2:	4681                	li	a3,0
-- 5c4:	4629                	li	a2,10
-- 5c6:	000ba583          	lw	a1,0(s7)
-- 5ca:	855a                	mv	a0,s6
-- 5cc:	dabff0ef          	jal	376 <printint>
-+ 5c0:	008b8913          	add	s2,s7,8
-+ 5c4:	4681                	li	a3,0
-+ 5c6:	4629                	li	a2,10
-+ 5c8:	000ba583          	lw	a1,0(s7)
-+ 5cc:	855a                	mv	a0,s6
-+ 5ce:	da7ff0ef          	jal	374 <printint>
-         i += 2;
-- 5d0:	2489                	addiw	s1,s1,2
-+ 5d2:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 5d2:	8bca                	mv	s7,s2
-+ 5d4:	8bca                	mv	s7,s2
-       state = 0;
-- 5d4:	4981                	li	s3,0
-+ 5d6:	4981                	li	s3,0
-         i += 2;
-- 5d6:	bd49                	j	468 <vprintf+0x4a>
-+ 5d8:	bd41                	j	468 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 16, 0);
-- 5d8:	008b8913          	addi	s2,s7,8
-- 5dc:	4681                	li	a3,0
-- 5de:	4641                	li	a2,16
-- 5e0:	000ba583          	lw	a1,0(s7)
-- 5e4:	855a                	mv	a0,s6
-- 5e6:	d91ff0ef          	jal	376 <printint>
-- 5ea:	8bca                	mv	s7,s2
-+ 5da:	008b8913          	add	s2,s7,8
-+ 5de:	4681                	li	a3,0
-+ 5e0:	4641                	li	a2,16
-+ 5e2:	000ba583          	lw	a1,0(s7)
-+ 5e6:	855a                	mv	a0,s6
-+ 5e8:	d8dff0ef          	jal	374 <printint>
-+ 5ec:	8bca                	mv	s7,s2
-       state = 0;
-- 5ec:	4981                	li	s3,0
-- 5ee:	bdad                	j	468 <vprintf+0x4a>
-+ 5ee:	4981                	li	s3,0
-+ 5f0:	bda5                	j	468 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 5f0:	008b8913          	addi	s2,s7,8
-- 5f4:	4681                	li	a3,0
-- 5f6:	4641                	li	a2,16
-- 5f8:	000ba583          	lw	a1,0(s7)
-- 5fc:	855a                	mv	a0,s6
-- 5fe:	d79ff0ef          	jal	376 <printint>
-+ 5f2:	008b8913          	add	s2,s7,8
-+ 5f6:	4681                	li	a3,0
-+ 5f8:	4641                	li	a2,16
-+ 5fa:	000ba583          	lw	a1,0(s7)
-+ 5fe:	855a                	mv	a0,s6
-+ 600:	d75ff0ef          	jal	374 <printint>
-         i += 1;
-- 602:	2485                	addiw	s1,s1,1
-+ 604:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 604:	8bca                	mv	s7,s2
-+ 606:	8bca                	mv	s7,s2
-       state = 0;
-- 606:	4981                	li	s3,0
-+ 608:	4981                	li	s3,0
-         i += 1;
-- 608:	b585                	j	468 <vprintf+0x4a>
-- 60a:	e06a                	sd	s10,0(sp)
-+ 60a:	bdb9                	j	468 <vprintf+0x4c>
-         printptr(fd, va_arg(ap, uint64));
-- 60c:	008b8d13          	addi	s10,s7,8
-+ 60c:	008b8d13          	add	s10,s7,8
-  610:	000bb983          	ld	s3,0(s7)
-   putc(fd, '0');
-  614:	03000593          	li	a1,48
-  618:	855a                	mv	a0,s6
-- 61a:	d3fff0ef          	jal	358 <putc>
-+ 61a:	d3dff0ef          	jal	356 <putc>
-   putc(fd, 'x');
-  61e:	07800593          	li	a1,120
-  622:	855a                	mv	a0,s6
-- 624:	d35ff0ef          	jal	358 <putc>
-+ 624:	d33ff0ef          	jal	356 <putc>
-  628:	4941                	li	s2,16
-     putc(fd, digits[x >> (sizeof(uint64) * 8 - 4)]);
-  62a:	00000b97          	auipc	s7,0x0
-- 62e:	28eb8b93          	addi	s7,s7,654 # 8b8 <digits>
-- 632:	03c9d793          	srli	a5,s3,0x3c
-+ 62e:	27eb8b93          	add	s7,s7,638 # 8a8 <digits>
-+ 632:	03c9d793          	srl	a5,s3,0x3c
-  636:	97de                	add	a5,a5,s7
-  638:	0007c583          	lbu	a1,0(a5)
-  63c:	855a                	mv	a0,s6
-- 63e:	d1bff0ef          	jal	358 <putc>
-+ 63e:	d19ff0ef          	jal	356 <putc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
-- 642:	0992                	slli	s3,s3,0x4
-- 644:	397d                	addiw	s2,s2,-1
-- 646:	fe0916e3          	bnez	s2,632 <vprintf+0x214>
-+ 642:	0992                	sll	s3,s3,0x4
-+ 644:	397d                	addw	s2,s2,-1
-+ 646:	fe0916e3          	bnez	s2,632 <vprintf+0x216>
-         printptr(fd, va_arg(ap, uint64));
-  64a:	8bea                	mv	s7,s10
-       state = 0;
-  64c:	4981                	li	s3,0
-- 64e:	6d02                	ld	s10,0(sp)
-- 650:	bd21                	j	468 <vprintf+0x4a>
-+ 64e:	bd29                	j	468 <vprintf+0x4c>
-         if((s = va_arg(ap, char*)) == 0)
-- 652:	008b8993          	addi	s3,s7,8
-- 656:	000bb903          	ld	s2,0(s7)
-- 65a:	00090f63          	beqz	s2,678 <vprintf+0x25a>
-+ 650:	008b8993          	add	s3,s7,8
-+ 654:	000bb903          	ld	s2,0(s7)
-+ 658:	00090f63          	beqz	s2,676 <vprintf+0x25a>
-         for(; *s; s++)
-- 65e:	00094583          	lbu	a1,0(s2)
-- 662:	c195                	beqz	a1,686 <vprintf+0x268>
-+ 65c:	00094583          	lbu	a1,0(s2)
-+ 660:	c195                	beqz	a1,684 <vprintf+0x268>
-           putc(fd, *s);
-- 664:	855a                	mv	a0,s6
-- 666:	cf3ff0ef          	jal	358 <putc>
-+ 662:	855a                	mv	a0,s6
-+ 664:	cf3ff0ef          	jal	356 <putc>
-         for(; *s; s++)
-- 66a:	0905                	addi	s2,s2,1
-- 66c:	00094583          	lbu	a1,0(s2)
-- 670:	f9f5                	bnez	a1,664 <vprintf+0x246>
-+ 668:	0905                	add	s2,s2,1
-+ 66a:	00094583          	lbu	a1,0(s2)
-+ 66e:	f9f5                	bnez	a1,662 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-- 672:	8bce                	mv	s7,s3
-+ 670:	8bce                	mv	s7,s3
-       state = 0;
-- 674:	4981                	li	s3,0
-- 676:	bbcd                	j	468 <vprintf+0x4a>
-+ 672:	4981                	li	s3,0
-+ 674:	bbd5                	j	468 <vprintf+0x4c>
-           s = "(null)";
-- 678:	00000917          	auipc	s2,0x0
-- 67c:	23890913          	addi	s2,s2,568 # 8b0 <malloc+0x12c>
-+ 676:	00000917          	auipc	s2,0x0
-+ 67a:	22a90913          	add	s2,s2,554 # 8a0 <malloc+0x11c>
-         for(; *s; s++)
-- 680:	02800593          	li	a1,40
-- 684:	b7c5                	j	664 <vprintf+0x246>
-+ 67e:	02800593          	li	a1,40
-+ 682:	b7c5                	j	662 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-- 686:	8bce                	mv	s7,s3
-+ 684:	8bce                	mv	s7,s3
-       state = 0;
-- 688:	4981                	li	s3,0
-- 68a:	bbf9                	j	468 <vprintf+0x4a>
-- 68c:	64a6                	ld	s1,72(sp)
-- 68e:	79e2                	ld	s3,56(sp)
-- 690:	7a42                	ld	s4,48(sp)
-- 692:	7aa2                	ld	s5,40(sp)
-- 694:	7b02                	ld	s6,32(sp)
-- 696:	6be2                	ld	s7,24(sp)
-- 698:	6c42                	ld	s8,16(sp)
-- 69a:	6ca2                	ld	s9,8(sp)
-+ 686:	4981                	li	s3,0
-+ 688:	b3c5                	j	468 <vprintf+0x4c>
-     }
-   }
- }
-- 69c:	60e6                	ld	ra,88(sp)
-- 69e:	6446                	ld	s0,80(sp)
-- 6a0:	6906                	ld	s2,64(sp)
-- 6a2:	6125                	addi	sp,sp,96
-+ 68a:	60e6                	ld	ra,88(sp)
-+ 68c:	6446                	ld	s0,80(sp)
-+ 68e:	64a6                	ld	s1,72(sp)
-+ 690:	6906                	ld	s2,64(sp)
-+ 692:	79e2                	ld	s3,56(sp)
-+ 694:	7a42                	ld	s4,48(sp)
-+ 696:	7aa2                	ld	s5,40(sp)
-+ 698:	7b02                	ld	s6,32(sp)
-+ 69a:	6be2                	ld	s7,24(sp)
-+ 69c:	6c42                	ld	s8,16(sp)
-+ 69e:	6ca2                	ld	s9,8(sp)
-+ 6a0:	6d02                	ld	s10,0(sp)
-+ 6a2:	6125                	add	sp,sp,96
-  6a4:	8082                	ret
- 
- 00000000000006a6 <fprintf>:
-@@ -1176,10 +1176,10 @@ vprintf(int fd, const char *fmt, va_list ap)
- void
- fprintf(int fd, const char *fmt, ...)
- {
-- 6a6:	715d                	addi	sp,sp,-80
-+ 6a6:	715d                	add	sp,sp,-80
-  6a8:	ec06                	sd	ra,24(sp)
-  6aa:	e822                	sd	s0,16(sp)
-- 6ac:	1000                	addi	s0,sp,32
-+ 6ac:	1000                	add	s0,sp,32
-  6ae:	e010                	sd	a2,0(s0)
-  6b0:	e414                	sd	a3,8(s0)
-  6b2:	e818                	sd	a4,16(s0)
-@@ -1192,11 +1192,11 @@ fprintf(int fd, const char *fmt, ...)
-  6be:	fe843423          	sd	s0,-24(s0)
-   vprintf(fd, fmt, ap);
-  6c2:	8622                	mv	a2,s0
-- 6c4:	d5bff0ef          	jal	41e <vprintf>
-+ 6c4:	d59ff0ef          	jal	41c <vprintf>
- }
-  6c8:	60e2                	ld	ra,24(sp)
-  6ca:	6442                	ld	s0,16(sp)
-- 6cc:	6161                	addi	sp,sp,80
-+ 6cc:	6161                	add	sp,sp,80
-  6ce:	8082                	ret
- 
- 00000000000006d0 <printf>:
-@@ -1204,10 +1204,10 @@ fprintf(int fd, const char *fmt, ...)
- void
- printf(const char *fmt, ...)
- {
-- 6d0:	711d                	addi	sp,sp,-96
-+ 6d0:	711d                	add	sp,sp,-96
-  6d2:	ec06                	sd	ra,24(sp)
-  6d4:	e822                	sd	s0,16(sp)
-- 6d6:	1000                	addi	s0,sp,32
-+ 6d6:	1000                	add	s0,sp,32
-  6d8:	e40c                	sd	a1,8(s0)
-  6da:	e810                	sd	a2,16(s0)
-  6dc:	ec14                	sd	a3,24(s0)
-@@ -1218,16 +1218,16 @@ printf(const char *fmt, ...)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 6ea:	00840613          	addi	a2,s0,8
-+ 6ea:	00840613          	add	a2,s0,8
-  6ee:	fec43423          	sd	a2,-24(s0)
-   vprintf(1, fmt, ap);
-  6f2:	85aa                	mv	a1,a0
-  6f4:	4505                	li	a0,1
-- 6f6:	d29ff0ef          	jal	41e <vprintf>
-+ 6f6:	d27ff0ef          	jal	41c <vprintf>
- }
-  6fa:	60e2                	ld	ra,24(sp)
-  6fc:	6442                	ld	s0,16(sp)
-- 6fe:	6125                	addi	sp,sp,96
-+ 6fe:	6125                	add	sp,sp,96
-  700:	8082                	ret
- 
- 0000000000000702 <free>:
-@@ -1237,13 +1237,13 @@ static Header *freep;
- void
- free(void *ap)
- {
-- 702:	1141                	addi	sp,sp,-16
-+ 702:	1141                	add	sp,sp,-16
-  704:	e422                	sd	s0,8(sp)
-- 706:	0800                	addi	s0,sp,16
-+ 706:	0800                	add	s0,sp,16
-   Header *bp, *p;
- 
-   bp = (Header*)ap - 1;
-- 708:	ff050693          	addi	a3,a0,-16
-+ 708:	ff050693          	add	a3,a0,-16
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-  70c:	00001797          	auipc	a5,0x1
-  710:	8f47b783          	ld	a5,-1804(a5) # 1000 <freep>
-@@ -1284,16 +1284,16 @@ free(void *ap)
-   if(bp + bp->s.size == p->s.ptr){
-  74c:	ff852583          	lw	a1,-8(a0)
-  750:	6390                	ld	a2,0(a5)
-- 752:	02059813          	slli	a6,a1,0x20
-- 756:	01c85713          	srli	a4,a6,0x1c
-+ 752:	02059813          	sll	a6,a1,0x20
-+ 756:	01c85713          	srl	a4,a6,0x1c
-  75a:	9736                	add	a4,a4,a3
-  75c:	fae60de3          	beq	a2,a4,716 <free+0x14>
-     bp->s.ptr = p->s.ptr->s.ptr;
-  760:	fec53823          	sd	a2,-16(a0)
-   if(p + p->s.size == bp){
-  764:	4790                	lw	a2,8(a5)
-- 766:	02061593          	slli	a1,a2,0x20
-- 76a:	01c5d713          	srli	a4,a1,0x1c
-+ 766:	02061593          	sll	a1,a2,0x20
-+ 76a:	01c5d713          	srl	a4,a1,0x1c
-  76e:	973e                	add	a4,a4,a5
-  770:	fae68ae3          	beq	a3,a4,724 <free+0x22>
-     p->s.ptr = bp->s.ptr;
-@@ -1305,7 +1305,7 @@ free(void *ap)
-  77a:	88f73523          	sd	a5,-1910(a4) # 1000 <freep>
- }
-  77e:	6422                	ld	s0,8(sp)
-- 780:	0141                	addi	sp,sp,16
-+ 780:	0141                	add	sp,sp,16
-  782:	8082                	ret
- 
- 0000000000000784 <malloc>:
-@@ -1315,38 +1315,38 @@ free(void *ap)
- void*
- malloc(uint nbytes)
- {
-- 784:	7139                	addi	sp,sp,-64
-+ 784:	7139                	add	sp,sp,-64
-  786:	fc06                	sd	ra,56(sp)
-  788:	f822                	sd	s0,48(sp)
-  78a:	f426                	sd	s1,40(sp)
-- 78c:	ec4e                	sd	s3,24(sp)
-- 78e:	0080                	addi	s0,sp,64
-+ 78c:	f04a                	sd	s2,32(sp)
-+ 78e:	ec4e                	sd	s3,24(sp)
-+ 790:	e852                	sd	s4,16(sp)
-+ 792:	e456                	sd	s5,8(sp)
-+ 794:	e05a                	sd	s6,0(sp)
-+ 796:	0080                	add	s0,sp,64
-   Header *p, *prevp;
-   uint nunits;
- 
-   nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;
-- 790:	02051493          	slli	s1,a0,0x20
-- 794:	9081                	srli	s1,s1,0x20
-- 796:	04bd                	addi	s1,s1,15
-- 798:	8091                	srli	s1,s1,0x4
-- 79a:	0014899b          	addiw	s3,s1,1
-- 79e:	0485                	addi	s1,s1,1
-+ 798:	02051493          	sll	s1,a0,0x20
-+ 79c:	9081                	srl	s1,s1,0x20
-+ 79e:	04bd                	add	s1,s1,15
-+ 7a0:	8091                	srl	s1,s1,0x4
-+ 7a2:	0014899b          	addw	s3,s1,1
-+ 7a6:	0485                	add	s1,s1,1
-   if((prevp = freep) == 0){
-- 7a0:	00001517          	auipc	a0,0x1
-- 7a4:	86053503          	ld	a0,-1952(a0) # 1000 <freep>
-- 7a8:	c915                	beqz	a0,7dc <malloc+0x58>
-+ 7a8:	00001517          	auipc	a0,0x1
-+ 7ac:	85853503          	ld	a0,-1960(a0) # 1000 <freep>
-+ 7b0:	c515                	beqz	a0,7dc <malloc+0x58>
-     base.s.ptr = freep = prevp = &base;
-     base.s.size = 0;
-   }
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 7aa:	611c                	ld	a5,0(a0)
-+ 7b2:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 7ac:	4798                	lw	a4,8(a5)
-- 7ae:	08977a63          	bgeu	a4,s1,842 <malloc+0xbe>
-- 7b2:	f04a                	sd	s2,32(sp)
-- 7b4:	e852                	sd	s4,16(sp)
-- 7b6:	e456                	sd	s5,8(sp)
-- 7b8:	e05a                	sd	s6,0(sp)
-+ 7b4:	4798                	lw	a4,8(a5)
-+ 7b6:	02977f63          	bgeu	a4,s1,7f4 <malloc+0x70>
-   if(nu < 4096)
-  7ba:	8a4e                	mv	s4,s3
-  7bc:	0009871b          	sext.w	a4,s3
-@@ -1355,7 +1355,7 @@ malloc(uint nbytes)
-  7c6:	6a05                	lui	s4,0x1
-  7c8:	000a0b1b          	sext.w	s6,s4
-   p = sbrk(nu * sizeof(Header));
-- 7cc:	004a1a1b          	slliw	s4,s4,0x4
-+ 7cc:	004a1a1b          	sllw	s4,s4,0x4
-         p->s.size = nunits;
-       }
-       freep = prevp;
-@@ -1363,88 +1363,77 @@ malloc(uint nbytes)
-     }
-     if(p == freep)
-  7d0:	00001917          	auipc	s2,0x1
-- 7d4:	83090913          	addi	s2,s2,-2000 # 1000 <freep>
-+ 7d4:	83090913          	add	s2,s2,-2000 # 1000 <freep>
-   if(p == (char*)-1)
-  7d8:	5afd                	li	s5,-1
-- 7da:	a081                	j	81a <malloc+0x96>
-- 7dc:	f04a                	sd	s2,32(sp)
-- 7de:	e852                	sd	s4,16(sp)
-- 7e0:	e456                	sd	s5,8(sp)
-- 7e2:	e05a                	sd	s6,0(sp)
-+ 7da:	a885                	j	84a <malloc+0xc6>
-     base.s.ptr = freep = prevp = &base;
-- 7e4:	00001797          	auipc	a5,0x1
-- 7e8:	82c78793          	addi	a5,a5,-2004 # 1010 <base>
-- 7ec:	00001717          	auipc	a4,0x1
-- 7f0:	80f73a23          	sd	a5,-2028(a4) # 1000 <freep>
-- 7f4:	e39c                	sd	a5,0(a5)
-+ 7dc:	00001797          	auipc	a5,0x1
-+ 7e0:	83478793          	add	a5,a5,-1996 # 1010 <base>
-+ 7e4:	00001717          	auipc	a4,0x1
-+ 7e8:	80f73e23          	sd	a5,-2020(a4) # 1000 <freep>
-+ 7ec:	e39c                	sd	a5,0(a5)
-     base.s.size = 0;
-- 7f6:	0007a423          	sw	zero,8(a5)
-+ 7ee:	0007a423          	sw	zero,8(a5)
-     if(p->s.size >= nunits){
-- 7fa:	b7c1                	j	7ba <malloc+0x36>
-+ 7f2:	b7e1                	j	7ba <malloc+0x36>
-+      if(p->s.size == nunits)
-+ 7f4:	02e48c63          	beq	s1,a4,82c <malloc+0xa8>
-+        p->s.size -= nunits;
-+ 7f8:	4137073b          	subw	a4,a4,s3
-+ 7fc:	c798                	sw	a4,8(a5)
-+        p += p->s.size;
-+ 7fe:	02071693          	sll	a3,a4,0x20
-+ 802:	01c6d713          	srl	a4,a3,0x1c
-+ 806:	97ba                	add	a5,a5,a4
-+        p->s.size = nunits;
-+ 808:	0137a423          	sw	s3,8(a5)
-+      freep = prevp;
-+ 80c:	00000717          	auipc	a4,0x0
-+ 810:	7ea73a23          	sd	a0,2036(a4) # 1000 <freep>
-+      return (void*)(p + 1);
-+ 814:	01078513          	add	a0,a5,16
-+      if((p = morecore(nunits)) == 0)
-+        return 0;
-+  }
-+}
-+ 818:	70e2                	ld	ra,56(sp)
-+ 81a:	7442                	ld	s0,48(sp)
-+ 81c:	74a2                	ld	s1,40(sp)
-+ 81e:	7902                	ld	s2,32(sp)
-+ 820:	69e2                	ld	s3,24(sp)
-+ 822:	6a42                	ld	s4,16(sp)
-+ 824:	6aa2                	ld	s5,8(sp)
-+ 826:	6b02                	ld	s6,0(sp)
-+ 828:	6121                	add	sp,sp,64
-+ 82a:	8082                	ret
-         prevp->s.ptr = p->s.ptr;
-- 7fc:	6398                	ld	a4,0(a5)
-- 7fe:	e118                	sd	a4,0(a0)
-- 800:	a8a9                	j	85a <malloc+0xd6>
-+ 82c:	6398                	ld	a4,0(a5)
-+ 82e:	e118                	sd	a4,0(a0)
-+ 830:	bff1                	j	80c <malloc+0x88>
-   hp->s.size = nu;
-- 802:	01652423          	sw	s6,8(a0)
-+ 832:	01652423          	sw	s6,8(a0)
-   free((void*)(hp + 1));
-- 806:	0541                	addi	a0,a0,16
-- 808:	efbff0ef          	jal	702 <free>
-+ 836:	0541                	add	a0,a0,16
-+ 838:	ecbff0ef          	jal	702 <free>
-   return freep;
-- 80c:	00093503          	ld	a0,0(s2)
-+ 83c:	00093503          	ld	a0,0(s2)
-       if((p = morecore(nunits)) == 0)
-- 810:	c12d                	beqz	a0,872 <malloc+0xee>
-+ 840:	dd61                	beqz	a0,818 <malloc+0x94>
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 812:	611c                	ld	a5,0(a0)
-+ 842:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 814:	4798                	lw	a4,8(a5)
-- 816:	02977263          	bgeu	a4,s1,83a <malloc+0xb6>
-+ 844:	4798                	lw	a4,8(a5)
-+ 846:	fa9777e3          	bgeu	a4,s1,7f4 <malloc+0x70>
-     if(p == freep)
-- 81a:	00093703          	ld	a4,0(s2)
-- 81e:	853e                	mv	a0,a5
-- 820:	fef719e3          	bne	a4,a5,812 <malloc+0x8e>
-+ 84a:	00093703          	ld	a4,0(s2)
-+ 84e:	853e                	mv	a0,a5
-+ 850:	fef719e3          	bne	a4,a5,842 <malloc+0xbe>
-   p = sbrk(nu * sizeof(Header));
-- 824:	8552                	mv	a0,s4
-- 826:	b1bff0ef          	jal	340 <sbrk>
-+ 854:	8552                	mv	a0,s4
-+ 856:	ae9ff0ef          	jal	33e <sbrk>
-   if(p == (char*)-1)
-- 82a:	fd551ce3          	bne	a0,s5,802 <malloc+0x7e>
-+ 85a:	fd551ce3          	bne	a0,s5,832 <malloc+0xae>
-         return 0;
-- 82e:	4501                	li	a0,0
-- 830:	7902                	ld	s2,32(sp)
-- 832:	6a42                	ld	s4,16(sp)
-- 834:	6aa2                	ld	s5,8(sp)
-- 836:	6b02                	ld	s6,0(sp)
-- 838:	a03d                	j	866 <malloc+0xe2>
-- 83a:	7902                	ld	s2,32(sp)
-- 83c:	6a42                	ld	s4,16(sp)
-- 83e:	6aa2                	ld	s5,8(sp)
-- 840:	6b02                	ld	s6,0(sp)
--      if(p->s.size == nunits)
-- 842:	fae48de3          	beq	s1,a4,7fc <malloc+0x78>
--        p->s.size -= nunits;
-- 846:	4137073b          	subw	a4,a4,s3
-- 84a:	c798                	sw	a4,8(a5)
--        p += p->s.size;
-- 84c:	02071693          	slli	a3,a4,0x20
-- 850:	01c6d713          	srli	a4,a3,0x1c
-- 854:	97ba                	add	a5,a5,a4
--        p->s.size = nunits;
-- 856:	0137a423          	sw	s3,8(a5)
--      freep = prevp;
-- 85a:	00000717          	auipc	a4,0x0
-- 85e:	7aa73323          	sd	a0,1958(a4) # 1000 <freep>
--      return (void*)(p + 1);
-- 862:	01078513          	addi	a0,a5,16
--  }
--}
-- 866:	70e2                	ld	ra,56(sp)
-- 868:	7442                	ld	s0,48(sp)
-- 86a:	74a2                	ld	s1,40(sp)
-- 86c:	69e2                	ld	s3,24(sp)
-- 86e:	6121                	addi	sp,sp,64
-- 870:	8082                	ret
-- 872:	7902                	ld	s2,32(sp)
-- 874:	6a42                	ld	s4,16(sp)
-- 876:	6aa2                	ld	s5,8(sp)
-- 878:	6b02                	ld	s6,0(sp)
-- 87a:	b7f5                	j	866 <malloc+0xe2>
-+ 85e:	4501                	li	a0,0
-+ 860:	bf65                	j	818 <malloc+0x94>
-diff --git a/Assignments/Assignment-6/xv6/user/ln.d b/Assignments/Assignment-6/xv6/user/ln.d
-index fc8b1b9..927138d 100644
---- a/Assignments/Assignment-6/xv6/user/ln.d
-+++ b/Assignments/Assignment-6/xv6/user/ln.d
-@@ -1,3 +1 @@
--user/ln.o: user/ln.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/stat.h user/user.h
-+user/ln.o: user/ln.c kernel/types.h kernel/stat.h user/user.h
-diff --git a/Assignments/Assignment-6/xv6/user/ln.o b/Assignments/Assignment-6/xv6/user/ln.o
-index 8aae64b..e8dec59 100644
-Binary files a/Assignments/Assignment-6/xv6/user/ln.o and b/Assignments/Assignment-6/xv6/user/ln.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/ln.sym b/Assignments/Assignment-6/xv6/user/ln.sym
-index 83019e1..0d3821c 100644
---- a/Assignments/Assignment-6/xv6/user/ln.sym
-+++ b/Assignments/Assignment-6/xv6/user/ln.sym
-@@ -1,6 +1,5 @@
- 0000000000000000 .text
--0000000000000880 .rodata
--00000000000008d0 .eh_frame
-+0000000000000868 .rodata
- 0000000000001000 .data
- 0000000000001000 .bss
- 0000000000000000 .debug_info
-@@ -11,53 +10,54 @@
- 0000000000000000 .debug_str
- 0000000000000000 .comment
- 0000000000000000 .riscv.attributes
-+0000000000000000 .debug_frame
- 0000000000000000 .debug_ranges
- 0000000000000000 ln.c
- 0000000000000000 ulib.c
- 0000000000000000 usys.o
- 0000000000000000 printf.c
--0000000000000358 putc
--0000000000000376 printint
--00000000000008b8 digits
-+0000000000000356 putc
-+0000000000000374 printint
-+00000000000008a8 digits
- 0000000000000000 umalloc.c
- 0000000000001000 freep
- 0000000000001010 base
--0000000000000060 strcpy
-+000000000000005e strcpy
- 00000000000006d0 printf
--000000000000020a memmove
--0000000000000300 mknod
--0000000000000118 gets
--0000000000000338 getpid
--000000000000029c memcpy
-+0000000000000208 memmove
-+00000000000002fe mknod
-+0000000000000116 gets
-+0000000000000336 getpid
-+000000000000029a memcpy
- 0000000000000784 malloc
--0000000000000348 sleep
--00000000000002c8 pipe
--00000000000002d8 write
--0000000000000310 fstat
-+0000000000000346 sleep
-+00000000000002c6 pipe
-+00000000000002d6 write
-+000000000000030e fstat
- 00000000000006a6 fprintf
--00000000000002e8 kill
--000000000000041e vprintf
--0000000000000328 chdir
--00000000000002f0 exec
--00000000000002c0 wait
--00000000000002d0 read
--0000000000000308 unlink
--0000000000000262 memcmp
--00000000000002b0 fork
--0000000000000340 sbrk
--0000000000000350 uptime
--00000000000000d2 memset
-+00000000000002e6 kill
-+000000000000041c vprintf
-+0000000000000326 chdir
-+00000000000002ee exec
-+00000000000002be wait
-+00000000000002ce read
-+0000000000000306 unlink
-+0000000000000260 memcmp
-+00000000000002ae fork
-+000000000000033e sbrk
-+000000000000034e uptime
-+00000000000000d0 memset
- 0000000000000000 main
--000000000000007c strcmp
--0000000000000330 dup
--0000000000000188 stat
--0000000000000318 link
--00000000000002b8 exit
--000000000000004e start
--00000000000001c2 atoi
--00000000000000a8 strlen
--00000000000002f8 open
--00000000000000f4 strchr
--0000000000000320 mkdir
--00000000000002e0 close
-+000000000000007a strcmp
-+000000000000032e dup
-+0000000000000186 stat
-+0000000000000316 link
-+00000000000002b6 exit
-+000000000000004c start
-+00000000000001c0 atoi
-+00000000000000a6 strlen
-+00000000000002f6 open
-+00000000000000f2 strchr
-+000000000000031e mkdir
-+00000000000002de close
- 0000000000000702 free
-diff --git a/Assignments/Assignment-6/xv6/user/ls.asm b/Assignments/Assignment-6/xv6/user/ls.asm
-index 4bea757..1d8ec58 100644
---- a/Assignments/Assignment-6/xv6/user/ls.asm
-+++ b/Assignments/Assignment-6/xv6/user/ls.asm
-@@ -11,1580 +11,1581 @@ Disassembly of section .text:
- char*
- fmtname(char *path)
- {
--   0:	7179                	addi	sp,sp,-48
-+   0:	7179                	add	sp,sp,-48
-    2:	f406                	sd	ra,40(sp)
-    4:	f022                	sd	s0,32(sp)
-    6:	ec26                	sd	s1,24(sp)
--   8:	1800                	addi	s0,sp,48
--   a:	84aa                	mv	s1,a0
-+   8:	e84a                	sd	s2,16(sp)
-+   a:	e44e                	sd	s3,8(sp)
-+   c:	1800                	add	s0,sp,48
-+   e:	84aa                	mv	s1,a0
-   static char buf[DIRSIZ+1];
-   char *p;
- 
-   /* Find first character after last slash. */
-   for(p=path+strlen(path); p >= path && *p != '/'; p--)
--   c:	2b6000ef          	jal	2c2 <strlen>
--  10:	02051793          	slli	a5,a0,0x20
--  14:	9381                	srli	a5,a5,0x20
--  16:	97a6                	add	a5,a5,s1
--  18:	02f00693          	li	a3,47
--  1c:	0097e963          	bltu	a5,s1,2e <fmtname+0x2e>
--  20:	0007c703          	lbu	a4,0(a5)
--  24:	00d70563          	beq	a4,a3,2e <fmtname+0x2e>
--  28:	17fd                	addi	a5,a5,-1
--  2a:	fe97fbe3          	bgeu	a5,s1,20 <fmtname+0x20>
-+  10:	2a8000ef          	jal	2b8 <strlen>
-+  14:	02051793          	sll	a5,a0,0x20
-+  18:	9381                	srl	a5,a5,0x20
-+  1a:	97a6                	add	a5,a5,s1
-+  1c:	02f00693          	li	a3,47
-+  20:	0097e963          	bltu	a5,s1,32 <fmtname+0x32>
-+  24:	0007c703          	lbu	a4,0(a5)
-+  28:	00d70563          	beq	a4,a3,32 <fmtname+0x32>
-+  2c:	17fd                	add	a5,a5,-1
-+  2e:	fe97fbe3          	bgeu	a5,s1,24 <fmtname+0x24>
-     ;
-   p++;
--  2e:	00178493          	addi	s1,a5,1
-+  32:	00178493          	add	s1,a5,1
- 
-   /* Return blank-padded name. */
-   if(strlen(p) >= DIRSIZ)
--  32:	8526                	mv	a0,s1
--  34:	28e000ef          	jal	2c2 <strlen>
--  38:	2501                	sext.w	a0,a0
--  3a:	47b5                	li	a5,13
--  3c:	00a7f863          	bgeu	a5,a0,4c <fmtname+0x4c>
-+  36:	8526                	mv	a0,s1
-+  38:	280000ef          	jal	2b8 <strlen>
-+  3c:	2501                	sext.w	a0,a0
-+  3e:	47b5                	li	a5,13
-+  40:	00a7fa63          	bgeu	a5,a0,54 <fmtname+0x54>
-     return p;
-   memmove(buf, p, strlen(p));
-   memset(buf+strlen(p), ' ', DIRSIZ-strlen(p));
-   return buf;
- }
--  40:	8526                	mv	a0,s1
--  42:	70a2                	ld	ra,40(sp)
--  44:	7402                	ld	s0,32(sp)
--  46:	64e2                	ld	s1,24(sp)
--  48:	6145                	addi	sp,sp,48
--  4a:	8082                	ret
--  4c:	e84a                	sd	s2,16(sp)
--  4e:	e44e                	sd	s3,8(sp)
-+  44:	8526                	mv	a0,s1
-+  46:	70a2                	ld	ra,40(sp)
-+  48:	7402                	ld	s0,32(sp)
-+  4a:	64e2                	ld	s1,24(sp)
-+  4c:	6942                	ld	s2,16(sp)
-+  4e:	69a2                	ld	s3,8(sp)
-+  50:	6145                	add	sp,sp,48
-+  52:	8082                	ret
-   memmove(buf, p, strlen(p));
--  50:	8526                	mv	a0,s1
--  52:	270000ef          	jal	2c2 <strlen>
--  56:	00001997          	auipc	s3,0x1
--  5a:	fba98993          	addi	s3,s3,-70 # 1010 <buf.0>
--  5e:	0005061b          	sext.w	a2,a0
--  62:	85a6                	mv	a1,s1
--  64:	854e                	mv	a0,s3
--  66:	3be000ef          	jal	424 <memmove>
-+  54:	8526                	mv	a0,s1
-+  56:	262000ef          	jal	2b8 <strlen>
-+  5a:	00001997          	auipc	s3,0x1
-+  5e:	fb698993          	add	s3,s3,-74 # 1010 <buf.0>
-+  62:	0005061b          	sext.w	a2,a0
-+  66:	85a6                	mv	a1,s1
-+  68:	854e                	mv	a0,s3
-+  6a:	3b0000ef          	jal	41a <memmove>
-   memset(buf+strlen(p), ' ', DIRSIZ-strlen(p));
--  6a:	8526                	mv	a0,s1
--  6c:	256000ef          	jal	2c2 <strlen>
--  70:	0005091b          	sext.w	s2,a0
--  74:	8526                	mv	a0,s1
--  76:	24c000ef          	jal	2c2 <strlen>
--  7a:	1902                	slli	s2,s2,0x20
--  7c:	02095913          	srli	s2,s2,0x20
--  80:	4639                	li	a2,14
--  82:	9e09                	subw	a2,a2,a0
--  84:	02000593          	li	a1,32
--  88:	01298533          	add	a0,s3,s2
--  8c:	260000ef          	jal	2ec <memset>
-+  6e:	8526                	mv	a0,s1
-+  70:	248000ef          	jal	2b8 <strlen>
-+  74:	0005091b          	sext.w	s2,a0
-+  78:	8526                	mv	a0,s1
-+  7a:	23e000ef          	jal	2b8 <strlen>
-+  7e:	1902                	sll	s2,s2,0x20
-+  80:	02095913          	srl	s2,s2,0x20
-+  84:	4639                	li	a2,14
-+  86:	9e09                	subw	a2,a2,a0
-+  88:	02000593          	li	a1,32
-+  8c:	01298533          	add	a0,s3,s2
-+  90:	252000ef          	jal	2e2 <memset>
-   return buf;
--  90:	84ce                	mv	s1,s3
--  92:	6942                	ld	s2,16(sp)
--  94:	69a2                	ld	s3,8(sp)
--  96:	b76d                	j	40 <fmtname+0x40>
-+  94:	84ce                	mv	s1,s3
-+  96:	b77d                	j	44 <fmtname+0x44>
- 
- 0000000000000098 <ls>:
- 
- void
- ls(char *path)
- {
--  98:	d9010113          	addi	sp,sp,-624
-+  98:	d9010113          	add	sp,sp,-624
-   9c:	26113423          	sd	ra,616(sp)
-   a0:	26813023          	sd	s0,608(sp)
--  a4:	25213823          	sd	s2,592(sp)
--  a8:	1c80                	addi	s0,sp,624
--  aa:	892a                	mv	s2,a0
-+  a4:	24913c23          	sd	s1,600(sp)
-+  a8:	25213823          	sd	s2,592(sp)
-+  ac:	25313423          	sd	s3,584(sp)
-+  b0:	25413023          	sd	s4,576(sp)
-+  b4:	23513c23          	sd	s5,568(sp)
-+  b8:	1c80                	add	s0,sp,624
-+  ba:	892a                	mv	s2,a0
-   char buf[512], *p;
-   int fd;
-   struct dirent de;
-   struct stat st;
- 
-   if((fd = open(path, O_RDONLY)) < 0){
--  ac:	4581                	li	a1,0
--  ae:	464000ef          	jal	512 <open>
--  b2:	06054363          	bltz	a0,118 <ls+0x80>
--  b6:	24913c23          	sd	s1,600(sp)
--  ba:	84aa                	mv	s1,a0
-+  bc:	4581                	li	a1,0
-+  be:	44a000ef          	jal	508 <open>
-+  c2:	06054763          	bltz	a0,130 <ls+0x98>
-+  c6:	84aa                	mv	s1,a0
-     fprintf(2, "ls: cannot open %s\n", path);
-     return;
-   }
- 
-   if(fstat(fd, &st) < 0){
--  bc:	d9840593          	addi	a1,s0,-616
--  c0:	46a000ef          	jal	52a <fstat>
--  c4:	06054363          	bltz	a0,12a <ls+0x92>
-+  c8:	d9840593          	add	a1,s0,-616
-+  cc:	454000ef          	jal	520 <fstat>
-+  d0:	06054963          	bltz	a0,142 <ls+0xaa>
-     fprintf(2, "ls: cannot stat %s\n", path);
-     close(fd);
-     return;
-   }
- 
-   switch(st.type){
--  c8:	da041783          	lh	a5,-608(s0)
--  cc:	4705                	li	a4,1
--  ce:	06e78c63          	beq	a5,a4,146 <ls+0xae>
--  d2:	37f9                	addiw	a5,a5,-2
--  d4:	17c2                	slli	a5,a5,0x30
--  d6:	93c1                	srli	a5,a5,0x30
--  d8:	02f76263          	bltu	a4,a5,fc <ls+0x64>
-+  d4:	da041783          	lh	a5,-608(s0)
-+  d8:	4705                	li	a4,1
-+  da:	08e78063          	beq	a5,a4,15a <ls+0xc2>
-+  de:	37f9                	addw	a5,a5,-2
-+  e0:	17c2                	sll	a5,a5,0x30
-+  e2:	93c1                	srl	a5,a5,0x30
-+  e4:	02f76263          	bltu	a4,a5,108 <ls+0x70>
-   case T_DEVICE:
-   case T_FILE:
-     printf("%s %d %d %d\n", fmtname(path), st.type, st.ino, (int) st.size);
--  dc:	854a                	mv	a0,s2
--  de:	f23ff0ef          	jal	0 <fmtname>
--  e2:	85aa                	mv	a1,a0
--  e4:	da842703          	lw	a4,-600(s0)
--  e8:	d9c42683          	lw	a3,-612(s0)
--  ec:	da041603          	lh	a2,-608(s0)
--  f0:	00001517          	auipc	a0,0x1
--  f4:	9e050513          	addi	a0,a0,-1568 # ad0 <malloc+0x132>
--  f8:	7f2000ef          	jal	8ea <printf>
-+  e8:	854a                	mv	a0,s2
-+  ea:	f17ff0ef          	jal	0 <fmtname>
-+  ee:	85aa                	mv	a1,a0
-+  f0:	da842703          	lw	a4,-600(s0)
-+  f4:	d9c42683          	lw	a3,-612(s0)
-+  f8:	da041603          	lh	a2,-608(s0)
-+  fc:	00001517          	auipc	a0,0x1
-+ 100:	9b450513          	add	a0,a0,-1612 # ab0 <malloc+0x11a>
-+ 104:	7de000ef          	jal	8e2 <printf>
-       }
-       printf("%s %d %d %d\n", fmtname(buf), st.type, st.ino, (int) st.size);
-     }
-     break;
-   }
-   close(fd);
--  fc:	8526                	mv	a0,s1
--  fe:	3fc000ef          	jal	4fa <close>
-- 102:	25813483          	ld	s1,600(sp)
-+ 108:	8526                	mv	a0,s1
-+ 10a:	3e6000ef          	jal	4f0 <close>
- }
-- 106:	26813083          	ld	ra,616(sp)
-- 10a:	26013403          	ld	s0,608(sp)
-- 10e:	25013903          	ld	s2,592(sp)
-- 112:	27010113          	addi	sp,sp,624
-- 116:	8082                	ret
-+ 10e:	26813083          	ld	ra,616(sp)
-+ 112:	26013403          	ld	s0,608(sp)
-+ 116:	25813483          	ld	s1,600(sp)
-+ 11a:	25013903          	ld	s2,592(sp)
-+ 11e:	24813983          	ld	s3,584(sp)
-+ 122:	24013a03          	ld	s4,576(sp)
-+ 126:	23813a83          	ld	s5,568(sp)
-+ 12a:	27010113          	add	sp,sp,624
-+ 12e:	8082                	ret
-     fprintf(2, "ls: cannot open %s\n", path);
-- 118:	864a                	mv	a2,s2
-- 11a:	00001597          	auipc	a1,0x1
-- 11e:	98658593          	addi	a1,a1,-1658 # aa0 <malloc+0x102>
-- 122:	4509                	li	a0,2
-- 124:	79c000ef          	jal	8c0 <fprintf>
-+ 130:	864a                	mv	a2,s2
-+ 132:	00001597          	auipc	a1,0x1
-+ 136:	94e58593          	add	a1,a1,-1714 # a80 <malloc+0xea>
-+ 13a:	4509                	li	a0,2
-+ 13c:	77c000ef          	jal	8b8 <fprintf>
-     return;
-- 128:	bff9                	j	106 <ls+0x6e>
-+ 140:	b7f9                	j	10e <ls+0x76>
-     fprintf(2, "ls: cannot stat %s\n", path);
-- 12a:	864a                	mv	a2,s2
-- 12c:	00001597          	auipc	a1,0x1
-- 130:	98c58593          	addi	a1,a1,-1652 # ab8 <malloc+0x11a>
-- 134:	4509                	li	a0,2
-- 136:	78a000ef          	jal	8c0 <fprintf>
-+ 142:	864a                	mv	a2,s2
-+ 144:	00001597          	auipc	a1,0x1
-+ 148:	95458593          	add	a1,a1,-1708 # a98 <malloc+0x102>
-+ 14c:	4509                	li	a0,2
-+ 14e:	76a000ef          	jal	8b8 <fprintf>
-     close(fd);
-- 13a:	8526                	mv	a0,s1
-- 13c:	3be000ef          	jal	4fa <close>
-+ 152:	8526                	mv	a0,s1
-+ 154:	39c000ef          	jal	4f0 <close>
-     return;
-- 140:	25813483          	ld	s1,600(sp)
-- 144:	b7c9                	j	106 <ls+0x6e>
-+ 158:	bf5d                	j	10e <ls+0x76>
-     if(strlen(path) + 1 + DIRSIZ + 1 > sizeof buf){
-- 146:	854a                	mv	a0,s2
-- 148:	17a000ef          	jal	2c2 <strlen>
-- 14c:	2541                	addiw	a0,a0,16
-- 14e:	20000793          	li	a5,512
-- 152:	00a7f963          	bgeu	a5,a0,164 <ls+0xcc>
-+ 15a:	854a                	mv	a0,s2
-+ 15c:	15c000ef          	jal	2b8 <strlen>
-+ 160:	2541                	addw	a0,a0,16
-+ 162:	20000793          	li	a5,512
-+ 166:	00a7f963          	bgeu	a5,a0,178 <ls+0xe0>
-       printf("ls: path too long\n");
-- 156:	00001517          	auipc	a0,0x1
-- 15a:	98a50513          	addi	a0,a0,-1654 # ae0 <malloc+0x142>
-- 15e:	78c000ef          	jal	8ea <printf>
-+ 16a:	00001517          	auipc	a0,0x1
-+ 16e:	95650513          	add	a0,a0,-1706 # ac0 <malloc+0x12a>
-+ 172:	770000ef          	jal	8e2 <printf>
-       break;
-- 162:	bf69                	j	fc <ls+0x64>
-- 164:	25313423          	sd	s3,584(sp)
-- 168:	25413023          	sd	s4,576(sp)
-- 16c:	23513c23          	sd	s5,568(sp)
-+ 176:	bf49                	j	108 <ls+0x70>
-     strcpy(buf, path);
-- 170:	85ca                	mv	a1,s2
-- 172:	dc040513          	addi	a0,s0,-576
-- 176:	104000ef          	jal	27a <strcpy>
-+ 178:	85ca                	mv	a1,s2
-+ 17a:	dc040513          	add	a0,s0,-576
-+ 17e:	0f2000ef          	jal	270 <strcpy>
-     p = buf+strlen(buf);
-- 17a:	dc040513          	addi	a0,s0,-576
-- 17e:	144000ef          	jal	2c2 <strlen>
-- 182:	1502                	slli	a0,a0,0x20
-- 184:	9101                	srli	a0,a0,0x20
-- 186:	dc040793          	addi	a5,s0,-576
-- 18a:	00a78933          	add	s2,a5,a0
-+ 182:	dc040513          	add	a0,s0,-576
-+ 186:	132000ef          	jal	2b8 <strlen>
-+ 18a:	1502                	sll	a0,a0,0x20
-+ 18c:	9101                	srl	a0,a0,0x20
-+ 18e:	dc040793          	add	a5,s0,-576
-+ 192:	00a78933          	add	s2,a5,a0
-     *p++ = '/';
-- 18e:	00190993          	addi	s3,s2,1
-- 192:	02f00793          	li	a5,47
-- 196:	00f90023          	sb	a5,0(s2)
-+ 196:	00190993          	add	s3,s2,1
-+ 19a:	02f00793          	li	a5,47
-+ 19e:	00f90023          	sb	a5,0(s2)
-       printf("%s %d %d %d\n", fmtname(buf), st.type, st.ino, (int) st.size);
-- 19a:	00001a17          	auipc	s4,0x1
-- 19e:	936a0a13          	addi	s4,s4,-1738 # ad0 <malloc+0x132>
-+ 1a2:	00001a17          	auipc	s4,0x1
-+ 1a6:	90ea0a13          	add	s4,s4,-1778 # ab0 <malloc+0x11a>
-         printf("ls: cannot stat %s\n", buf);
-- 1a2:	00001a97          	auipc	s5,0x1
-- 1a6:	916a8a93          	addi	s5,s5,-1770 # ab8 <malloc+0x11a>
-+ 1aa:	00001a97          	auipc	s5,0x1
-+ 1ae:	8eea8a93          	add	s5,s5,-1810 # a98 <malloc+0x102>
-     while(read(fd, &de, sizeof(de)) == sizeof(de)){
-- 1aa:	a031                	j	1b6 <ls+0x11e>
-+ 1b2:	a031                	j	1be <ls+0x126>
-         printf("ls: cannot stat %s\n", buf);
-- 1ac:	dc040593          	addi	a1,s0,-576
-- 1b0:	8556                	mv	a0,s5
-- 1b2:	738000ef          	jal	8ea <printf>
-+ 1b4:	dc040593          	add	a1,s0,-576
-+ 1b8:	8556                	mv	a0,s5
-+ 1ba:	728000ef          	jal	8e2 <printf>
-     while(read(fd, &de, sizeof(de)) == sizeof(de)){
-- 1b6:	4641                	li	a2,16
-- 1b8:	db040593          	addi	a1,s0,-592
-- 1bc:	8526                	mv	a0,s1
-- 1be:	32c000ef          	jal	4ea <read>
-- 1c2:	47c1                	li	a5,16
-- 1c4:	04f51463          	bne	a0,a5,20c <ls+0x174>
-+ 1be:	4641                	li	a2,16
-+ 1c0:	db040593          	add	a1,s0,-592
-+ 1c4:	8526                	mv	a0,s1
-+ 1c6:	31a000ef          	jal	4e0 <read>
-+ 1ca:	47c1                	li	a5,16
-+ 1cc:	f2f51ee3          	bne	a0,a5,108 <ls+0x70>
-       if(de.inum == 0)
-- 1c8:	db045783          	lhu	a5,-592(s0)
-- 1cc:	d7ed                	beqz	a5,1b6 <ls+0x11e>
-+ 1d0:	db045783          	lhu	a5,-592(s0)
-+ 1d4:	d7ed                	beqz	a5,1be <ls+0x126>
-       memmove(p, de.name, DIRSIZ);
-- 1ce:	4639                	li	a2,14
-- 1d0:	db240593          	addi	a1,s0,-590
-- 1d4:	854e                	mv	a0,s3
-- 1d6:	24e000ef          	jal	424 <memmove>
-+ 1d6:	4639                	li	a2,14
-+ 1d8:	db240593          	add	a1,s0,-590
-+ 1dc:	854e                	mv	a0,s3
-+ 1de:	23c000ef          	jal	41a <memmove>
-       p[DIRSIZ] = 0;
-- 1da:	000907a3          	sb	zero,15(s2)
-+ 1e2:	000907a3          	sb	zero,15(s2)
-       if(stat(buf, &st) < 0){
-- 1de:	d9840593          	addi	a1,s0,-616
-- 1e2:	dc040513          	addi	a0,s0,-576
-- 1e6:	1bc000ef          	jal	3a2 <stat>
-- 1ea:	fc0541e3          	bltz	a0,1ac <ls+0x114>
-+ 1e6:	d9840593          	add	a1,s0,-616
-+ 1ea:	dc040513          	add	a0,s0,-576
-+ 1ee:	1aa000ef          	jal	398 <stat>
-+ 1f2:	fc0541e3          	bltz	a0,1b4 <ls+0x11c>
-       printf("%s %d %d %d\n", fmtname(buf), st.type, st.ino, (int) st.size);
-- 1ee:	dc040513          	addi	a0,s0,-576
-- 1f2:	e0fff0ef          	jal	0 <fmtname>
-- 1f6:	85aa                	mv	a1,a0
-- 1f8:	da842703          	lw	a4,-600(s0)
-- 1fc:	d9c42683          	lw	a3,-612(s0)
-- 200:	da041603          	lh	a2,-608(s0)
-- 204:	8552                	mv	a0,s4
-- 206:	6e4000ef          	jal	8ea <printf>
-- 20a:	b775                	j	1b6 <ls+0x11e>
-- 20c:	24813983          	ld	s3,584(sp)
-- 210:	24013a03          	ld	s4,576(sp)
-- 214:	23813a83          	ld	s5,568(sp)
-- 218:	b5d5                	j	fc <ls+0x64>
--
--000000000000021a <main>:
-+ 1f6:	dc040513          	add	a0,s0,-576
-+ 1fa:	e07ff0ef          	jal	0 <fmtname>
-+ 1fe:	85aa                	mv	a1,a0
-+ 200:	da842703          	lw	a4,-600(s0)
-+ 204:	d9c42683          	lw	a3,-612(s0)
-+ 208:	da041603          	lh	a2,-608(s0)
-+ 20c:	8552                	mv	a0,s4
-+ 20e:	6d4000ef          	jal	8e2 <printf>
-+ 212:	b775                	j	1be <ls+0x126>
-+
-+0000000000000214 <main>:
- 
- int
- main(int argc, char *argv[])
- {
-- 21a:	1101                	addi	sp,sp,-32
-- 21c:	ec06                	sd	ra,24(sp)
-- 21e:	e822                	sd	s0,16(sp)
-- 220:	1000                	addi	s0,sp,32
-+ 214:	1101                	add	sp,sp,-32
-+ 216:	ec06                	sd	ra,24(sp)
-+ 218:	e822                	sd	s0,16(sp)
-+ 21a:	e426                	sd	s1,8(sp)
-+ 21c:	e04a                	sd	s2,0(sp)
-+ 21e:	1000                	add	s0,sp,32
-   int i;
- 
-   if(argc < 2){
-- 222:	4785                	li	a5,1
-- 224:	02a7d763          	bge	a5,a0,252 <main+0x38>
-- 228:	e426                	sd	s1,8(sp)
-- 22a:	e04a                	sd	s2,0(sp)
-- 22c:	00858493          	addi	s1,a1,8
-- 230:	ffe5091b          	addiw	s2,a0,-2
-- 234:	02091793          	slli	a5,s2,0x20
-- 238:	01d7d913          	srli	s2,a5,0x1d
-- 23c:	05c1                	addi	a1,a1,16
-- 23e:	992e                	add	s2,s2,a1
-+ 220:	4785                	li	a5,1
-+ 222:	02a7d563          	bge	a5,a0,24c <main+0x38>
-+ 226:	00858493          	add	s1,a1,8
-+ 22a:	ffe5091b          	addw	s2,a0,-2
-+ 22e:	02091793          	sll	a5,s2,0x20
-+ 232:	01d7d913          	srl	s2,a5,0x1d
-+ 236:	05c1                	add	a1,a1,16
-+ 238:	992e                	add	s2,s2,a1
-     ls(".");
-     exit(0);
-   }
-   for(i=1; i<argc; i++)
-     ls(argv[i]);
-- 240:	6088                	ld	a0,0(s1)
-- 242:	e57ff0ef          	jal	98 <ls>
-+ 23a:	6088                	ld	a0,0(s1)
-+ 23c:	e5dff0ef          	jal	98 <ls>
-   for(i=1; i<argc; i++)
-- 246:	04a1                	addi	s1,s1,8
-- 248:	ff249ce3          	bne	s1,s2,240 <main+0x26>
-+ 240:	04a1                	add	s1,s1,8
-+ 242:	ff249ce3          	bne	s1,s2,23a <main+0x26>
-   exit(0);
-- 24c:	4501                	li	a0,0
-- 24e:	284000ef          	jal	4d2 <exit>
-- 252:	e426                	sd	s1,8(sp)
-- 254:	e04a                	sd	s2,0(sp)
-+ 246:	4501                	li	a0,0
-+ 248:	280000ef          	jal	4c8 <exit>
-     ls(".");
-- 256:	00001517          	auipc	a0,0x1
-- 25a:	8a250513          	addi	a0,a0,-1886 # af8 <malloc+0x15a>
-- 25e:	e3bff0ef          	jal	98 <ls>
-+ 24c:	00001517          	auipc	a0,0x1
-+ 250:	88c50513          	add	a0,a0,-1908 # ad8 <malloc+0x142>
-+ 254:	e45ff0ef          	jal	98 <ls>
-     exit(0);
-- 262:	4501                	li	a0,0
-- 264:	26e000ef          	jal	4d2 <exit>
-+ 258:	4501                	li	a0,0
-+ 25a:	26e000ef          	jal	4c8 <exit>
- 
--0000000000000268 <start>:
-+000000000000025e <start>:
- /* */
- /* wrapper so that it's OK if main() does not call exit(). */
- /* */
- void
- start()
- {
-- 268:	1141                	addi	sp,sp,-16
-- 26a:	e406                	sd	ra,8(sp)
-- 26c:	e022                	sd	s0,0(sp)
-- 26e:	0800                	addi	s0,sp,16
-+ 25e:	1141                	add	sp,sp,-16
-+ 260:	e406                	sd	ra,8(sp)
-+ 262:	e022                	sd	s0,0(sp)
-+ 264:	0800                	add	s0,sp,16
-   extern int main();
-   main();
-- 270:	fabff0ef          	jal	21a <main>
-+ 266:	fafff0ef          	jal	214 <main>
-   exit(0);
-- 274:	4501                	li	a0,0
-- 276:	25c000ef          	jal	4d2 <exit>
-+ 26a:	4501                	li	a0,0
-+ 26c:	25c000ef          	jal	4c8 <exit>
- 
--000000000000027a <strcpy>:
-+0000000000000270 <strcpy>:
- }
- 
- char*
- strcpy(char *s, const char *t)
- {
-- 27a:	1141                	addi	sp,sp,-16
-- 27c:	e422                	sd	s0,8(sp)
-- 27e:	0800                	addi	s0,sp,16
-+ 270:	1141                	add	sp,sp,-16
-+ 272:	e422                	sd	s0,8(sp)
-+ 274:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
-- 280:	87aa                	mv	a5,a0
-- 282:	0585                	addi	a1,a1,1
-- 284:	0785                	addi	a5,a5,1
-- 286:	fff5c703          	lbu	a4,-1(a1)
-- 28a:	fee78fa3          	sb	a4,-1(a5)
-- 28e:	fb75                	bnez	a4,282 <strcpy+0x8>
-+ 276:	87aa                	mv	a5,a0
-+ 278:	0585                	add	a1,a1,1
-+ 27a:	0785                	add	a5,a5,1
-+ 27c:	fff5c703          	lbu	a4,-1(a1)
-+ 280:	fee78fa3          	sb	a4,-1(a5)
-+ 284:	fb75                	bnez	a4,278 <strcpy+0x8>
-     ;
-   return os;
- }
-- 290:	6422                	ld	s0,8(sp)
-- 292:	0141                	addi	sp,sp,16
-- 294:	8082                	ret
-+ 286:	6422                	ld	s0,8(sp)
-+ 288:	0141                	add	sp,sp,16
-+ 28a:	8082                	ret
- 
--0000000000000296 <strcmp>:
-+000000000000028c <strcmp>:
- 
- int
- strcmp(const char *p, const char *q)
- {
-- 296:	1141                	addi	sp,sp,-16
-- 298:	e422                	sd	s0,8(sp)
-- 29a:	0800                	addi	s0,sp,16
-+ 28c:	1141                	add	sp,sp,-16
-+ 28e:	e422                	sd	s0,8(sp)
-+ 290:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
-- 29c:	00054783          	lbu	a5,0(a0)
-- 2a0:	cb91                	beqz	a5,2b4 <strcmp+0x1e>
-- 2a2:	0005c703          	lbu	a4,0(a1)
-- 2a6:	00f71763          	bne	a4,a5,2b4 <strcmp+0x1e>
-+ 292:	00054783          	lbu	a5,0(a0)
-+ 296:	cb91                	beqz	a5,2aa <strcmp+0x1e>
-+ 298:	0005c703          	lbu	a4,0(a1)
-+ 29c:	00f71763          	bne	a4,a5,2aa <strcmp+0x1e>
-     p++, q++;
-- 2aa:	0505                	addi	a0,a0,1
-- 2ac:	0585                	addi	a1,a1,1
-+ 2a0:	0505                	add	a0,a0,1
-+ 2a2:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
-- 2ae:	00054783          	lbu	a5,0(a0)
-- 2b2:	fbe5                	bnez	a5,2a2 <strcmp+0xc>
-+ 2a4:	00054783          	lbu	a5,0(a0)
-+ 2a8:	fbe5                	bnez	a5,298 <strcmp+0xc>
-   return (uchar)*p - (uchar)*q;
-- 2b4:	0005c503          	lbu	a0,0(a1)
-+ 2aa:	0005c503          	lbu	a0,0(a1)
- }
-- 2b8:	40a7853b          	subw	a0,a5,a0
-- 2bc:	6422                	ld	s0,8(sp)
-- 2be:	0141                	addi	sp,sp,16
-- 2c0:	8082                	ret
-+ 2ae:	40a7853b          	subw	a0,a5,a0
-+ 2b2:	6422                	ld	s0,8(sp)
-+ 2b4:	0141                	add	sp,sp,16
-+ 2b6:	8082                	ret
- 
--00000000000002c2 <strlen>:
-+00000000000002b8 <strlen>:
- 
- uint
- strlen(const char *s)
- {
-- 2c2:	1141                	addi	sp,sp,-16
-- 2c4:	e422                	sd	s0,8(sp)
-- 2c6:	0800                	addi	s0,sp,16
-+ 2b8:	1141                	add	sp,sp,-16
-+ 2ba:	e422                	sd	s0,8(sp)
-+ 2bc:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
-- 2c8:	00054783          	lbu	a5,0(a0)
-- 2cc:	cf91                	beqz	a5,2e8 <strlen+0x26>
-- 2ce:	0505                	addi	a0,a0,1
-- 2d0:	87aa                	mv	a5,a0
-- 2d2:	86be                	mv	a3,a5
-- 2d4:	0785                	addi	a5,a5,1
-- 2d6:	fff7c703          	lbu	a4,-1(a5)
-- 2da:	ff65                	bnez	a4,2d2 <strlen+0x10>
-- 2dc:	40a6853b          	subw	a0,a3,a0
-- 2e0:	2505                	addiw	a0,a0,1
-+ 2be:	00054783          	lbu	a5,0(a0)
-+ 2c2:	cf91                	beqz	a5,2de <strlen+0x26>
-+ 2c4:	0505                	add	a0,a0,1
-+ 2c6:	87aa                	mv	a5,a0
-+ 2c8:	86be                	mv	a3,a5
-+ 2ca:	0785                	add	a5,a5,1
-+ 2cc:	fff7c703          	lbu	a4,-1(a5)
-+ 2d0:	ff65                	bnez	a4,2c8 <strlen+0x10>
-+ 2d2:	40a6853b          	subw	a0,a3,a0
-+ 2d6:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
-- 2e2:	6422                	ld	s0,8(sp)
-- 2e4:	0141                	addi	sp,sp,16
-- 2e6:	8082                	ret
-+ 2d8:	6422                	ld	s0,8(sp)
-+ 2da:	0141                	add	sp,sp,16
-+ 2dc:	8082                	ret
-   for(n = 0; s[n]; n++)
-- 2e8:	4501                	li	a0,0
-- 2ea:	bfe5                	j	2e2 <strlen+0x20>
-+ 2de:	4501                	li	a0,0
-+ 2e0:	bfe5                	j	2d8 <strlen+0x20>
- 
--00000000000002ec <memset>:
-+00000000000002e2 <memset>:
- 
- void*
- memset(void *dst, int c, uint n)
- {
-- 2ec:	1141                	addi	sp,sp,-16
-- 2ee:	e422                	sd	s0,8(sp)
-- 2f0:	0800                	addi	s0,sp,16
-+ 2e2:	1141                	add	sp,sp,-16
-+ 2e4:	e422                	sd	s0,8(sp)
-+ 2e6:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
-- 2f2:	ca19                	beqz	a2,308 <memset+0x1c>
-- 2f4:	87aa                	mv	a5,a0
-- 2f6:	1602                	slli	a2,a2,0x20
-- 2f8:	9201                	srli	a2,a2,0x20
-- 2fa:	00a60733          	add	a4,a2,a0
-+ 2e8:	ca19                	beqz	a2,2fe <memset+0x1c>
-+ 2ea:	87aa                	mv	a5,a0
-+ 2ec:	1602                	sll	a2,a2,0x20
-+ 2ee:	9201                	srl	a2,a2,0x20
-+ 2f0:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
-- 2fe:	00b78023          	sb	a1,0(a5)
-+ 2f4:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
-- 302:	0785                	addi	a5,a5,1
-- 304:	fee79de3          	bne	a5,a4,2fe <memset+0x12>
-+ 2f8:	0785                	add	a5,a5,1
-+ 2fa:	fee79de3          	bne	a5,a4,2f4 <memset+0x12>
-   }
-   return dst;
- }
-- 308:	6422                	ld	s0,8(sp)
-- 30a:	0141                	addi	sp,sp,16
-- 30c:	8082                	ret
-+ 2fe:	6422                	ld	s0,8(sp)
-+ 300:	0141                	add	sp,sp,16
-+ 302:	8082                	ret
- 
--000000000000030e <strchr>:
-+0000000000000304 <strchr>:
- 
- char*
- strchr(const char *s, char c)
- {
-- 30e:	1141                	addi	sp,sp,-16
-- 310:	e422                	sd	s0,8(sp)
-- 312:	0800                	addi	s0,sp,16
-+ 304:	1141                	add	sp,sp,-16
-+ 306:	e422                	sd	s0,8(sp)
-+ 308:	0800                	add	s0,sp,16
-   for(; *s; s++)
-- 314:	00054783          	lbu	a5,0(a0)
-- 318:	cb99                	beqz	a5,32e <strchr+0x20>
-+ 30a:	00054783          	lbu	a5,0(a0)
-+ 30e:	cb99                	beqz	a5,324 <strchr+0x20>
-     if(*s == c)
-- 31a:	00f58763          	beq	a1,a5,328 <strchr+0x1a>
-+ 310:	00f58763          	beq	a1,a5,31e <strchr+0x1a>
-   for(; *s; s++)
-- 31e:	0505                	addi	a0,a0,1
-- 320:	00054783          	lbu	a5,0(a0)
-- 324:	fbfd                	bnez	a5,31a <strchr+0xc>
-+ 314:	0505                	add	a0,a0,1
-+ 316:	00054783          	lbu	a5,0(a0)
-+ 31a:	fbfd                	bnez	a5,310 <strchr+0xc>
-       return (char*)s;
-   return 0;
-- 326:	4501                	li	a0,0
-+ 31c:	4501                	li	a0,0
- }
-- 328:	6422                	ld	s0,8(sp)
-- 32a:	0141                	addi	sp,sp,16
-- 32c:	8082                	ret
-+ 31e:	6422                	ld	s0,8(sp)
-+ 320:	0141                	add	sp,sp,16
-+ 322:	8082                	ret
-   return 0;
-- 32e:	4501                	li	a0,0
-- 330:	bfe5                	j	328 <strchr+0x1a>
-+ 324:	4501                	li	a0,0
-+ 326:	bfe5                	j	31e <strchr+0x1a>
- 
--0000000000000332 <gets>:
-+0000000000000328 <gets>:
- 
- char*
- gets(char *buf, int max)
- {
-- 332:	711d                	addi	sp,sp,-96
-- 334:	ec86                	sd	ra,88(sp)
-- 336:	e8a2                	sd	s0,80(sp)
-- 338:	e4a6                	sd	s1,72(sp)
-- 33a:	e0ca                	sd	s2,64(sp)
-- 33c:	fc4e                	sd	s3,56(sp)
-- 33e:	f852                	sd	s4,48(sp)
-- 340:	f456                	sd	s5,40(sp)
-- 342:	f05a                	sd	s6,32(sp)
-- 344:	ec5e                	sd	s7,24(sp)
-- 346:	1080                	addi	s0,sp,96
-- 348:	8baa                	mv	s7,a0
-- 34a:	8a2e                	mv	s4,a1
-+ 328:	711d                	add	sp,sp,-96
-+ 32a:	ec86                	sd	ra,88(sp)
-+ 32c:	e8a2                	sd	s0,80(sp)
-+ 32e:	e4a6                	sd	s1,72(sp)
-+ 330:	e0ca                	sd	s2,64(sp)
-+ 332:	fc4e                	sd	s3,56(sp)
-+ 334:	f852                	sd	s4,48(sp)
-+ 336:	f456                	sd	s5,40(sp)
-+ 338:	f05a                	sd	s6,32(sp)
-+ 33a:	ec5e                	sd	s7,24(sp)
-+ 33c:	1080                	add	s0,sp,96
-+ 33e:	8baa                	mv	s7,a0
-+ 340:	8a2e                	mv	s4,a1
-   int i, cc;
-   char c;
- 
-   for(i=0; i+1 < max; ){
-- 34c:	892a                	mv	s2,a0
-- 34e:	4481                	li	s1,0
-+ 342:	892a                	mv	s2,a0
-+ 344:	4481                	li	s1,0
-     cc = read(0, &c, 1);
-     if(cc < 1)
-       break;
-     buf[i++] = c;
-     if(c == '\n' || c == '\r')
-- 350:	4aa9                	li	s5,10
-- 352:	4b35                	li	s6,13
-+ 346:	4aa9                	li	s5,10
-+ 348:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
-- 354:	89a6                	mv	s3,s1
-- 356:	2485                	addiw	s1,s1,1
-- 358:	0344d663          	bge	s1,s4,384 <gets+0x52>
-+ 34a:	89a6                	mv	s3,s1
-+ 34c:	2485                	addw	s1,s1,1
-+ 34e:	0344d663          	bge	s1,s4,37a <gets+0x52>
-     cc = read(0, &c, 1);
-- 35c:	4605                	li	a2,1
-- 35e:	faf40593          	addi	a1,s0,-81
-- 362:	4501                	li	a0,0
-- 364:	186000ef          	jal	4ea <read>
-+ 352:	4605                	li	a2,1
-+ 354:	faf40593          	add	a1,s0,-81
-+ 358:	4501                	li	a0,0
-+ 35a:	186000ef          	jal	4e0 <read>
-     if(cc < 1)
-- 368:	00a05e63          	blez	a0,384 <gets+0x52>
-+ 35e:	00a05e63          	blez	a0,37a <gets+0x52>
-     buf[i++] = c;
-- 36c:	faf44783          	lbu	a5,-81(s0)
-- 370:	00f90023          	sb	a5,0(s2)
-+ 362:	faf44783          	lbu	a5,-81(s0)
-+ 366:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
-- 374:	01578763          	beq	a5,s5,382 <gets+0x50>
-- 378:	0905                	addi	s2,s2,1
-- 37a:	fd679de3          	bne	a5,s6,354 <gets+0x22>
--    buf[i++] = c;
-- 37e:	89a6                	mv	s3,s1
-- 380:	a011                	j	384 <gets+0x52>
-- 382:	89a6                	mv	s3,s1
-+ 36a:	01578763          	beq	a5,s5,378 <gets+0x50>
-+ 36e:	0905                	add	s2,s2,1
-+ 370:	fd679de3          	bne	a5,s6,34a <gets+0x22>
-+  for(i=0; i+1 < max; ){
-+ 374:	89a6                	mv	s3,s1
-+ 376:	a011                	j	37a <gets+0x52>
-+ 378:	89a6                	mv	s3,s1
-       break;
-   }
-   buf[i] = '\0';
-- 384:	99de                	add	s3,s3,s7
-- 386:	00098023          	sb	zero,0(s3)
-+ 37a:	99de                	add	s3,s3,s7
-+ 37c:	00098023          	sb	zero,0(s3)
-   return buf;
- }
-- 38a:	855e                	mv	a0,s7
-- 38c:	60e6                	ld	ra,88(sp)
-- 38e:	6446                	ld	s0,80(sp)
-- 390:	64a6                	ld	s1,72(sp)
-- 392:	6906                	ld	s2,64(sp)
-- 394:	79e2                	ld	s3,56(sp)
-- 396:	7a42                	ld	s4,48(sp)
-- 398:	7aa2                	ld	s5,40(sp)
-- 39a:	7b02                	ld	s6,32(sp)
-- 39c:	6be2                	ld	s7,24(sp)
-- 39e:	6125                	addi	sp,sp,96
-- 3a0:	8082                	ret
--
--00000000000003a2 <stat>:
-+ 380:	855e                	mv	a0,s7
-+ 382:	60e6                	ld	ra,88(sp)
-+ 384:	6446                	ld	s0,80(sp)
-+ 386:	64a6                	ld	s1,72(sp)
-+ 388:	6906                	ld	s2,64(sp)
-+ 38a:	79e2                	ld	s3,56(sp)
-+ 38c:	7a42                	ld	s4,48(sp)
-+ 38e:	7aa2                	ld	s5,40(sp)
-+ 390:	7b02                	ld	s6,32(sp)
-+ 392:	6be2                	ld	s7,24(sp)
-+ 394:	6125                	add	sp,sp,96
-+ 396:	8082                	ret
-+
-+0000000000000398 <stat>:
- 
- int
- stat(const char *n, struct stat *st)
- {
-- 3a2:	1101                	addi	sp,sp,-32
-- 3a4:	ec06                	sd	ra,24(sp)
-- 3a6:	e822                	sd	s0,16(sp)
-- 3a8:	e04a                	sd	s2,0(sp)
-- 3aa:	1000                	addi	s0,sp,32
-- 3ac:	892e                	mv	s2,a1
-+ 398:	1101                	add	sp,sp,-32
-+ 39a:	ec06                	sd	ra,24(sp)
-+ 39c:	e822                	sd	s0,16(sp)
-+ 39e:	e426                	sd	s1,8(sp)
-+ 3a0:	e04a                	sd	s2,0(sp)
-+ 3a2:	1000                	add	s0,sp,32
-+ 3a4:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
-- 3ae:	4581                	li	a1,0
-- 3b0:	162000ef          	jal	512 <open>
-+ 3a6:	4581                	li	a1,0
-+ 3a8:	160000ef          	jal	508 <open>
-   if(fd < 0)
-- 3b4:	02054263          	bltz	a0,3d8 <stat+0x36>
-- 3b8:	e426                	sd	s1,8(sp)
-- 3ba:	84aa                	mv	s1,a0
-+ 3ac:	02054163          	bltz	a0,3ce <stat+0x36>
-+ 3b0:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
-- 3bc:	85ca                	mv	a1,s2
-- 3be:	16c000ef          	jal	52a <fstat>
-- 3c2:	892a                	mv	s2,a0
-+ 3b2:	85ca                	mv	a1,s2
-+ 3b4:	16c000ef          	jal	520 <fstat>
-+ 3b8:	892a                	mv	s2,a0
-   close(fd);
-- 3c4:	8526                	mv	a0,s1
-- 3c6:	134000ef          	jal	4fa <close>
-+ 3ba:	8526                	mv	a0,s1
-+ 3bc:	134000ef          	jal	4f0 <close>
-   return r;
-- 3ca:	64a2                	ld	s1,8(sp)
- }
-- 3cc:	854a                	mv	a0,s2
-- 3ce:	60e2                	ld	ra,24(sp)
-- 3d0:	6442                	ld	s0,16(sp)
-- 3d2:	6902                	ld	s2,0(sp)
-- 3d4:	6105                	addi	sp,sp,32
-- 3d6:	8082                	ret
-+ 3c0:	854a                	mv	a0,s2
-+ 3c2:	60e2                	ld	ra,24(sp)
-+ 3c4:	6442                	ld	s0,16(sp)
-+ 3c6:	64a2                	ld	s1,8(sp)
-+ 3c8:	6902                	ld	s2,0(sp)
-+ 3ca:	6105                	add	sp,sp,32
-+ 3cc:	8082                	ret
-     return -1;
-- 3d8:	597d                	li	s2,-1
-- 3da:	bfcd                	j	3cc <stat+0x2a>
-+ 3ce:	597d                	li	s2,-1
-+ 3d0:	bfc5                	j	3c0 <stat+0x28>
- 
--00000000000003dc <atoi>:
-+00000000000003d2 <atoi>:
- 
- int
- atoi(const char *s)
- {
-- 3dc:	1141                	addi	sp,sp,-16
-- 3de:	e422                	sd	s0,8(sp)
-- 3e0:	0800                	addi	s0,sp,16
-+ 3d2:	1141                	add	sp,sp,-16
-+ 3d4:	e422                	sd	s0,8(sp)
-+ 3d6:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
-- 3e2:	00054683          	lbu	a3,0(a0)
-- 3e6:	fd06879b          	addiw	a5,a3,-48
-- 3ea:	0ff7f793          	zext.b	a5,a5
-- 3ee:	4625                	li	a2,9
-- 3f0:	02f66863          	bltu	a2,a5,420 <atoi+0x44>
-- 3f4:	872a                	mv	a4,a0
-+ 3d8:	00054683          	lbu	a3,0(a0)
-+ 3dc:	fd06879b          	addw	a5,a3,-48
-+ 3e0:	0ff7f793          	zext.b	a5,a5
-+ 3e4:	4625                	li	a2,9
-+ 3e6:	02f66863          	bltu	a2,a5,416 <atoi+0x44>
-+ 3ea:	872a                	mv	a4,a0
-   n = 0;
-- 3f6:	4501                	li	a0,0
-+ 3ec:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
-- 3f8:	0705                	addi	a4,a4,1
-- 3fa:	0025179b          	slliw	a5,a0,0x2
-- 3fe:	9fa9                	addw	a5,a5,a0
-- 400:	0017979b          	slliw	a5,a5,0x1
-- 404:	9fb5                	addw	a5,a5,a3
-- 406:	fd07851b          	addiw	a0,a5,-48
-+ 3ee:	0705                	add	a4,a4,1
-+ 3f0:	0025179b          	sllw	a5,a0,0x2
-+ 3f4:	9fa9                	addw	a5,a5,a0
-+ 3f6:	0017979b          	sllw	a5,a5,0x1
-+ 3fa:	9fb5                	addw	a5,a5,a3
-+ 3fc:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
-- 40a:	00074683          	lbu	a3,0(a4)
-- 40e:	fd06879b          	addiw	a5,a3,-48
-- 412:	0ff7f793          	zext.b	a5,a5
-- 416:	fef671e3          	bgeu	a2,a5,3f8 <atoi+0x1c>
-+ 400:	00074683          	lbu	a3,0(a4)
-+ 404:	fd06879b          	addw	a5,a3,-48
-+ 408:	0ff7f793          	zext.b	a5,a5
-+ 40c:	fef671e3          	bgeu	a2,a5,3ee <atoi+0x1c>
-   return n;
- }
-- 41a:	6422                	ld	s0,8(sp)
-- 41c:	0141                	addi	sp,sp,16
-- 41e:	8082                	ret
-+ 410:	6422                	ld	s0,8(sp)
-+ 412:	0141                	add	sp,sp,16
-+ 414:	8082                	ret
-   n = 0;
-- 420:	4501                	li	a0,0
-- 422:	bfe5                	j	41a <atoi+0x3e>
-+ 416:	4501                	li	a0,0
-+ 418:	bfe5                	j	410 <atoi+0x3e>
- 
--0000000000000424 <memmove>:
-+000000000000041a <memmove>:
- 
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
-- 424:	1141                	addi	sp,sp,-16
-- 426:	e422                	sd	s0,8(sp)
-- 428:	0800                	addi	s0,sp,16
-+ 41a:	1141                	add	sp,sp,-16
-+ 41c:	e422                	sd	s0,8(sp)
-+ 41e:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-   dst = vdst;
-   src = vsrc;
-   if (src > dst) {
-- 42a:	02b57463          	bgeu	a0,a1,452 <memmove+0x2e>
-+ 420:	02b57463          	bgeu	a0,a1,448 <memmove+0x2e>
-     while(n-- > 0)
-- 42e:	00c05f63          	blez	a2,44c <memmove+0x28>
-- 432:	1602                	slli	a2,a2,0x20
-- 434:	9201                	srli	a2,a2,0x20
-- 436:	00c507b3          	add	a5,a0,a2
-+ 424:	00c05f63          	blez	a2,442 <memmove+0x28>
-+ 428:	1602                	sll	a2,a2,0x20
-+ 42a:	9201                	srl	a2,a2,0x20
-+ 42c:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
-- 43a:	872a                	mv	a4,a0
-+ 430:	872a                	mv	a4,a0
-       *dst++ = *src++;
-- 43c:	0585                	addi	a1,a1,1
-- 43e:	0705                	addi	a4,a4,1
-- 440:	fff5c683          	lbu	a3,-1(a1)
-- 444:	fed70fa3          	sb	a3,-1(a4)
-+ 432:	0585                	add	a1,a1,1
-+ 434:	0705                	add	a4,a4,1
-+ 436:	fff5c683          	lbu	a3,-1(a1)
-+ 43a:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
-- 448:	fef71ae3          	bne	a4,a5,43c <memmove+0x18>
-+ 43e:	fee79ae3          	bne	a5,a4,432 <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-   }
-   return vdst;
- }
-- 44c:	6422                	ld	s0,8(sp)
-- 44e:	0141                	addi	sp,sp,16
-- 450:	8082                	ret
-+ 442:	6422                	ld	s0,8(sp)
-+ 444:	0141                	add	sp,sp,16
-+ 446:	8082                	ret
-     dst += n;
-- 452:	00c50733          	add	a4,a0,a2
-+ 448:	00c50733          	add	a4,a0,a2
-     src += n;
-- 456:	95b2                	add	a1,a1,a2
-+ 44c:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
-- 458:	fec05ae3          	blez	a2,44c <memmove+0x28>
-- 45c:	fff6079b          	addiw	a5,a2,-1
-- 460:	1782                	slli	a5,a5,0x20
-- 462:	9381                	srli	a5,a5,0x20
-- 464:	fff7c793          	not	a5,a5
-- 468:	97ba                	add	a5,a5,a4
-+ 44e:	fec05ae3          	blez	a2,442 <memmove+0x28>
-+ 452:	fff6079b          	addw	a5,a2,-1
-+ 456:	1782                	sll	a5,a5,0x20
-+ 458:	9381                	srl	a5,a5,0x20
-+ 45a:	fff7c793          	not	a5,a5
-+ 45e:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
-- 46a:	15fd                	addi	a1,a1,-1
-- 46c:	177d                	addi	a4,a4,-1
-- 46e:	0005c683          	lbu	a3,0(a1)
-- 472:	00d70023          	sb	a3,0(a4)
-+ 460:	15fd                	add	a1,a1,-1
-+ 462:	177d                	add	a4,a4,-1
-+ 464:	0005c683          	lbu	a3,0(a1)
-+ 468:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
-- 476:	fee79ae3          	bne	a5,a4,46a <memmove+0x46>
-- 47a:	bfc9                	j	44c <memmove+0x28>
-+ 46c:	fee79ae3          	bne	a5,a4,460 <memmove+0x46>
-+ 470:	bfc9                	j	442 <memmove+0x28>
- 
--000000000000047c <memcmp>:
-+0000000000000472 <memcmp>:
- 
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
-- 47c:	1141                	addi	sp,sp,-16
-- 47e:	e422                	sd	s0,8(sp)
-- 480:	0800                	addi	s0,sp,16
-+ 472:	1141                	add	sp,sp,-16
-+ 474:	e422                	sd	s0,8(sp)
-+ 476:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
-- 482:	ca05                	beqz	a2,4b2 <memcmp+0x36>
-- 484:	fff6069b          	addiw	a3,a2,-1
-- 488:	1682                	slli	a3,a3,0x20
-- 48a:	9281                	srli	a3,a3,0x20
-- 48c:	0685                	addi	a3,a3,1
-- 48e:	96aa                	add	a3,a3,a0
-+ 478:	ca05                	beqz	a2,4a8 <memcmp+0x36>
-+ 47a:	fff6069b          	addw	a3,a2,-1
-+ 47e:	1682                	sll	a3,a3,0x20
-+ 480:	9281                	srl	a3,a3,0x20
-+ 482:	0685                	add	a3,a3,1
-+ 484:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
-- 490:	00054783          	lbu	a5,0(a0)
-- 494:	0005c703          	lbu	a4,0(a1)
-- 498:	00e79863          	bne	a5,a4,4a8 <memcmp+0x2c>
-+ 486:	00054783          	lbu	a5,0(a0)
-+ 48a:	0005c703          	lbu	a4,0(a1)
-+ 48e:	00e79863          	bne	a5,a4,49e <memcmp+0x2c>
-       return *p1 - *p2;
-     }
-     p1++;
-- 49c:	0505                	addi	a0,a0,1
-+ 492:	0505                	add	a0,a0,1
-     p2++;
-- 49e:	0585                	addi	a1,a1,1
-+ 494:	0585                	add	a1,a1,1
-   while (n-- > 0) {
-- 4a0:	fed518e3          	bne	a0,a3,490 <memcmp+0x14>
-+ 496:	fed518e3          	bne	a0,a3,486 <memcmp+0x14>
-   }
-   return 0;
-- 4a4:	4501                	li	a0,0
-- 4a6:	a019                	j	4ac <memcmp+0x30>
-+ 49a:	4501                	li	a0,0
-+ 49c:	a019                	j	4a2 <memcmp+0x30>
-       return *p1 - *p2;
-- 4a8:	40e7853b          	subw	a0,a5,a4
-+ 49e:	40e7853b          	subw	a0,a5,a4
- }
-- 4ac:	6422                	ld	s0,8(sp)
-- 4ae:	0141                	addi	sp,sp,16
-- 4b0:	8082                	ret
-+ 4a2:	6422                	ld	s0,8(sp)
-+ 4a4:	0141                	add	sp,sp,16
-+ 4a6:	8082                	ret
-   return 0;
-- 4b2:	4501                	li	a0,0
-- 4b4:	bfe5                	j	4ac <memcmp+0x30>
-+ 4a8:	4501                	li	a0,0
-+ 4aa:	bfe5                	j	4a2 <memcmp+0x30>
- 
--00000000000004b6 <memcpy>:
-+00000000000004ac <memcpy>:
- 
- void *
- memcpy(void *dst, const void *src, uint n)
- {
-- 4b6:	1141                	addi	sp,sp,-16
-- 4b8:	e406                	sd	ra,8(sp)
-- 4ba:	e022                	sd	s0,0(sp)
-- 4bc:	0800                	addi	s0,sp,16
-+ 4ac:	1141                	add	sp,sp,-16
-+ 4ae:	e406                	sd	ra,8(sp)
-+ 4b0:	e022                	sd	s0,0(sp)
-+ 4b2:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
-- 4be:	f67ff0ef          	jal	424 <memmove>
-+ 4b4:	f67ff0ef          	jal	41a <memmove>
- }
-- 4c2:	60a2                	ld	ra,8(sp)
-- 4c4:	6402                	ld	s0,0(sp)
-- 4c6:	0141                	addi	sp,sp,16
-- 4c8:	8082                	ret
-+ 4b8:	60a2                	ld	ra,8(sp)
-+ 4ba:	6402                	ld	s0,0(sp)
-+ 4bc:	0141                	add	sp,sp,16
-+ 4be:	8082                	ret
- 
--00000000000004ca <fork>:
-+00000000000004c0 <fork>:
- # generated by usys.pl - do not edit
- #include "kernel/syscall.h"
- .global fork
- fork:
-  li a7, SYS_fork
-- 4ca:	4885                	li	a7,1
-+ 4c0:	4885                	li	a7,1
-  ecall
-- 4cc:	00000073          	ecall
-+ 4c2:	00000073          	ecall
-  ret
-- 4d0:	8082                	ret
-+ 4c6:	8082                	ret
- 
--00000000000004d2 <exit>:
-+00000000000004c8 <exit>:
- .global exit
- exit:
-  li a7, SYS_exit
-- 4d2:	4889                	li	a7,2
-+ 4c8:	4889                	li	a7,2
-  ecall
-- 4d4:	00000073          	ecall
-+ 4ca:	00000073          	ecall
-  ret
-- 4d8:	8082                	ret
-+ 4ce:	8082                	ret
- 
--00000000000004da <wait>:
-+00000000000004d0 <wait>:
- .global wait
- wait:
-  li a7, SYS_wait
-- 4da:	488d                	li	a7,3
-+ 4d0:	488d                	li	a7,3
-  ecall
-- 4dc:	00000073          	ecall
-+ 4d2:	00000073          	ecall
-  ret
-- 4e0:	8082                	ret
-+ 4d6:	8082                	ret
- 
--00000000000004e2 <pipe>:
-+00000000000004d8 <pipe>:
- .global pipe
- pipe:
-  li a7, SYS_pipe
-- 4e2:	4891                	li	a7,4
-+ 4d8:	4891                	li	a7,4
-  ecall
-- 4e4:	00000073          	ecall
-+ 4da:	00000073          	ecall
-  ret
-- 4e8:	8082                	ret
-+ 4de:	8082                	ret
- 
--00000000000004ea <read>:
-+00000000000004e0 <read>:
- .global read
- read:
-  li a7, SYS_read
-- 4ea:	4895                	li	a7,5
-+ 4e0:	4895                	li	a7,5
-  ecall
-- 4ec:	00000073          	ecall
-+ 4e2:	00000073          	ecall
-  ret
-- 4f0:	8082                	ret
-+ 4e6:	8082                	ret
- 
--00000000000004f2 <write>:
-+00000000000004e8 <write>:
- .global write
- write:
-  li a7, SYS_write
-- 4f2:	48c1                	li	a7,16
-+ 4e8:	48c1                	li	a7,16
-  ecall
-- 4f4:	00000073          	ecall
-+ 4ea:	00000073          	ecall
-  ret
-- 4f8:	8082                	ret
-+ 4ee:	8082                	ret
- 
--00000000000004fa <close>:
-+00000000000004f0 <close>:
- .global close
- close:
-  li a7, SYS_close
-- 4fa:	48d5                	li	a7,21
-+ 4f0:	48d5                	li	a7,21
-  ecall
-- 4fc:	00000073          	ecall
-+ 4f2:	00000073          	ecall
-  ret
-- 500:	8082                	ret
-+ 4f6:	8082                	ret
- 
--0000000000000502 <kill>:
-+00000000000004f8 <kill>:
- .global kill
- kill:
-  li a7, SYS_kill
-- 502:	4899                	li	a7,6
-+ 4f8:	4899                	li	a7,6
-  ecall
-- 504:	00000073          	ecall
-+ 4fa:	00000073          	ecall
-  ret
-- 508:	8082                	ret
-+ 4fe:	8082                	ret
- 
--000000000000050a <exec>:
-+0000000000000500 <exec>:
- .global exec
- exec:
-  li a7, SYS_exec
-- 50a:	489d                	li	a7,7
-+ 500:	489d                	li	a7,7
-  ecall
-- 50c:	00000073          	ecall
-+ 502:	00000073          	ecall
-  ret
-- 510:	8082                	ret
-+ 506:	8082                	ret
- 
--0000000000000512 <open>:
-+0000000000000508 <open>:
- .global open
- open:
-  li a7, SYS_open
-- 512:	48bd                	li	a7,15
-+ 508:	48bd                	li	a7,15
-  ecall
-- 514:	00000073          	ecall
-+ 50a:	00000073          	ecall
-  ret
-- 518:	8082                	ret
-+ 50e:	8082                	ret
- 
--000000000000051a <mknod>:
-+0000000000000510 <mknod>:
- .global mknod
- mknod:
-  li a7, SYS_mknod
-- 51a:	48c5                	li	a7,17
-+ 510:	48c5                	li	a7,17
-  ecall
-- 51c:	00000073          	ecall
-+ 512:	00000073          	ecall
-  ret
-- 520:	8082                	ret
-+ 516:	8082                	ret
- 
--0000000000000522 <unlink>:
-+0000000000000518 <unlink>:
- .global unlink
- unlink:
-  li a7, SYS_unlink
-- 522:	48c9                	li	a7,18
-+ 518:	48c9                	li	a7,18
-  ecall
-- 524:	00000073          	ecall
-+ 51a:	00000073          	ecall
-  ret
-- 528:	8082                	ret
-+ 51e:	8082                	ret
- 
--000000000000052a <fstat>:
-+0000000000000520 <fstat>:
- .global fstat
- fstat:
-  li a7, SYS_fstat
-- 52a:	48a1                	li	a7,8
-+ 520:	48a1                	li	a7,8
-  ecall
-- 52c:	00000073          	ecall
-+ 522:	00000073          	ecall
-  ret
-- 530:	8082                	ret
-+ 526:	8082                	ret
- 
--0000000000000532 <link>:
-+0000000000000528 <link>:
- .global link
- link:
-  li a7, SYS_link
-- 532:	48cd                	li	a7,19
-+ 528:	48cd                	li	a7,19
-  ecall
-- 534:	00000073          	ecall
-+ 52a:	00000073          	ecall
-  ret
-- 538:	8082                	ret
-+ 52e:	8082                	ret
- 
--000000000000053a <mkdir>:
-+0000000000000530 <mkdir>:
- .global mkdir
- mkdir:
-  li a7, SYS_mkdir
-- 53a:	48d1                	li	a7,20
-+ 530:	48d1                	li	a7,20
-  ecall
-- 53c:	00000073          	ecall
-+ 532:	00000073          	ecall
-  ret
-- 540:	8082                	ret
-+ 536:	8082                	ret
- 
--0000000000000542 <chdir>:
-+0000000000000538 <chdir>:
- .global chdir
- chdir:
-  li a7, SYS_chdir
-- 542:	48a5                	li	a7,9
-+ 538:	48a5                	li	a7,9
-  ecall
-- 544:	00000073          	ecall
-+ 53a:	00000073          	ecall
-  ret
-- 548:	8082                	ret
-+ 53e:	8082                	ret
- 
--000000000000054a <dup>:
-+0000000000000540 <dup>:
- .global dup
- dup:
-  li a7, SYS_dup
-- 54a:	48a9                	li	a7,10
-+ 540:	48a9                	li	a7,10
-  ecall
-- 54c:	00000073          	ecall
-+ 542:	00000073          	ecall
-  ret
-- 550:	8082                	ret
-+ 546:	8082                	ret
- 
--0000000000000552 <getpid>:
-+0000000000000548 <getpid>:
- .global getpid
- getpid:
-  li a7, SYS_getpid
-- 552:	48ad                	li	a7,11
-+ 548:	48ad                	li	a7,11
-  ecall
-- 554:	00000073          	ecall
-+ 54a:	00000073          	ecall
-  ret
-- 558:	8082                	ret
-+ 54e:	8082                	ret
- 
--000000000000055a <sbrk>:
-+0000000000000550 <sbrk>:
- .global sbrk
- sbrk:
-  li a7, SYS_sbrk
-- 55a:	48b1                	li	a7,12
-+ 550:	48b1                	li	a7,12
-  ecall
-- 55c:	00000073          	ecall
-+ 552:	00000073          	ecall
-  ret
-- 560:	8082                	ret
-+ 556:	8082                	ret
- 
--0000000000000562 <sleep>:
-+0000000000000558 <sleep>:
- .global sleep
- sleep:
-  li a7, SYS_sleep
-- 562:	48b5                	li	a7,13
-+ 558:	48b5                	li	a7,13
-  ecall
-- 564:	00000073          	ecall
-+ 55a:	00000073          	ecall
-  ret
-- 568:	8082                	ret
-+ 55e:	8082                	ret
- 
--000000000000056a <uptime>:
-+0000000000000560 <uptime>:
- .global uptime
- uptime:
-  li a7, SYS_uptime
-- 56a:	48b9                	li	a7,14
-+ 560:	48b9                	li	a7,14
-  ecall
-- 56c:	00000073          	ecall
-+ 562:	00000073          	ecall
-  ret
-- 570:	8082                	ret
-+ 566:	8082                	ret
- 
--0000000000000572 <putc>:
-+0000000000000568 <putc>:
- 
- static char digits[] = "0123456789ABCDEF";
- 
- static void
- putc(int fd, char c)
- {
-- 572:	1101                	addi	sp,sp,-32
-- 574:	ec06                	sd	ra,24(sp)
-- 576:	e822                	sd	s0,16(sp)
-- 578:	1000                	addi	s0,sp,32
-- 57a:	feb407a3          	sb	a1,-17(s0)
-+ 568:	1101                	add	sp,sp,-32
-+ 56a:	ec06                	sd	ra,24(sp)
-+ 56c:	e822                	sd	s0,16(sp)
-+ 56e:	1000                	add	s0,sp,32
-+ 570:	feb407a3          	sb	a1,-17(s0)
-   write(fd, &c, 1);
-- 57e:	4605                	li	a2,1
-- 580:	fef40593          	addi	a1,s0,-17
-- 584:	f6fff0ef          	jal	4f2 <write>
-+ 574:	4605                	li	a2,1
-+ 576:	fef40593          	add	a1,s0,-17
-+ 57a:	f6fff0ef          	jal	4e8 <write>
- }
-- 588:	60e2                	ld	ra,24(sp)
-- 58a:	6442                	ld	s0,16(sp)
-- 58c:	6105                	addi	sp,sp,32
-- 58e:	8082                	ret
-+ 57e:	60e2                	ld	ra,24(sp)
-+ 580:	6442                	ld	s0,16(sp)
-+ 582:	6105                	add	sp,sp,32
-+ 584:	8082                	ret
- 
--0000000000000590 <printint>:
-+0000000000000586 <printint>:
- 
- static void
- printint(int fd, int xx, int base, int sgn)
- {
-- 590:	7139                	addi	sp,sp,-64
-- 592:	fc06                	sd	ra,56(sp)
-- 594:	f822                	sd	s0,48(sp)
-- 596:	f426                	sd	s1,40(sp)
-- 598:	0080                	addi	s0,sp,64
-- 59a:	84aa                	mv	s1,a0
-+ 586:	7139                	add	sp,sp,-64
-+ 588:	fc06                	sd	ra,56(sp)
-+ 58a:	f822                	sd	s0,48(sp)
-+ 58c:	f426                	sd	s1,40(sp)
-+ 58e:	f04a                	sd	s2,32(sp)
-+ 590:	ec4e                	sd	s3,24(sp)
-+ 592:	0080                	add	s0,sp,64
-+ 594:	84aa                	mv	s1,a0
-   char buf[16];
-   int i, neg;
-   uint x;
- 
-   neg = 0;
-   if(sgn && xx < 0){
-- 59c:	c299                	beqz	a3,5a2 <printint+0x12>
-- 59e:	0805c963          	bltz	a1,630 <printint+0xa0>
-+ 596:	c299                	beqz	a3,59c <printint+0x16>
-+ 598:	0805c763          	bltz	a1,626 <printint+0xa0>
-     neg = 1;
-     x = -xx;
-   } else {
-     x = xx;
-- 5a2:	2581                	sext.w	a1,a1
-+ 59c:	2581                	sext.w	a1,a1
-   neg = 0;
-- 5a4:	4881                	li	a7,0
-- 5a6:	fc040693          	addi	a3,s0,-64
-+ 59e:	4881                	li	a7,0
-+ 5a0:	fc040693          	add	a3,s0,-64
-   }
- 
-   i = 0;
-- 5aa:	4701                	li	a4,0
-+ 5a4:	4701                	li	a4,0
-   do{
-     buf[i++] = digits[x % base];
-- 5ac:	2601                	sext.w	a2,a2
-- 5ae:	00000517          	auipc	a0,0x0
-- 5b2:	55a50513          	addi	a0,a0,1370 # b08 <digits>
-- 5b6:	883a                	mv	a6,a4
-- 5b8:	2705                	addiw	a4,a4,1
-- 5ba:	02c5f7bb          	remuw	a5,a1,a2
-- 5be:	1782                	slli	a5,a5,0x20
-- 5c0:	9381                	srli	a5,a5,0x20
-- 5c2:	97aa                	add	a5,a5,a0
-- 5c4:	0007c783          	lbu	a5,0(a5)
-- 5c8:	00f68023          	sb	a5,0(a3)
-+ 5a6:	2601                	sext.w	a2,a2
-+ 5a8:	00000517          	auipc	a0,0x0
-+ 5ac:	54050513          	add	a0,a0,1344 # ae8 <digits>
-+ 5b0:	883a                	mv	a6,a4
-+ 5b2:	2705                	addw	a4,a4,1
-+ 5b4:	02c5f7bb          	remuw	a5,a1,a2
-+ 5b8:	1782                	sll	a5,a5,0x20
-+ 5ba:	9381                	srl	a5,a5,0x20
-+ 5bc:	97aa                	add	a5,a5,a0
-+ 5be:	0007c783          	lbu	a5,0(a5)
-+ 5c2:	00f68023          	sb	a5,0(a3)
-   }while((x /= base) != 0);
-- 5cc:	0005879b          	sext.w	a5,a1
-- 5d0:	02c5d5bb          	divuw	a1,a1,a2
-- 5d4:	0685                	addi	a3,a3,1
-- 5d6:	fec7f0e3          	bgeu	a5,a2,5b6 <printint+0x26>
-+ 5c6:	0005879b          	sext.w	a5,a1
-+ 5ca:	02c5d5bb          	divuw	a1,a1,a2
-+ 5ce:	0685                	add	a3,a3,1
-+ 5d0:	fec7f0e3          	bgeu	a5,a2,5b0 <printint+0x2a>
-   if(neg)
-- 5da:	00088c63          	beqz	a7,5f2 <printint+0x62>
-+ 5d4:	00088c63          	beqz	a7,5ec <printint+0x66>
-     buf[i++] = '-';
-- 5de:	fd070793          	addi	a5,a4,-48
-- 5e2:	00878733          	add	a4,a5,s0
-- 5e6:	02d00793          	li	a5,45
-- 5ea:	fef70823          	sb	a5,-16(a4)
-- 5ee:	0028071b          	addiw	a4,a6,2
-+ 5d8:	fd070793          	add	a5,a4,-48
-+ 5dc:	00878733          	add	a4,a5,s0
-+ 5e0:	02d00793          	li	a5,45
-+ 5e4:	fef70823          	sb	a5,-16(a4)
-+ 5e8:	0028071b          	addw	a4,a6,2
- 
-   while(--i >= 0)
-- 5f2:	02e05a63          	blez	a4,626 <printint+0x96>
-- 5f6:	f04a                	sd	s2,32(sp)
-- 5f8:	ec4e                	sd	s3,24(sp)
-- 5fa:	fc040793          	addi	a5,s0,-64
-- 5fe:	00e78933          	add	s2,a5,a4
-- 602:	fff78993          	addi	s3,a5,-1
-- 606:	99ba                	add	s3,s3,a4
-- 608:	377d                	addiw	a4,a4,-1
-- 60a:	1702                	slli	a4,a4,0x20
-- 60c:	9301                	srli	a4,a4,0x20
-- 60e:	40e989b3          	sub	s3,s3,a4
-+ 5ec:	02e05663          	blez	a4,618 <printint+0x92>
-+ 5f0:	fc040793          	add	a5,s0,-64
-+ 5f4:	00e78933          	add	s2,a5,a4
-+ 5f8:	fff78993          	add	s3,a5,-1
-+ 5fc:	99ba                	add	s3,s3,a4
-+ 5fe:	377d                	addw	a4,a4,-1
-+ 600:	1702                	sll	a4,a4,0x20
-+ 602:	9301                	srl	a4,a4,0x20
-+ 604:	40e989b3          	sub	s3,s3,a4
-     putc(fd, buf[i]);
-- 612:	fff94583          	lbu	a1,-1(s2)
-- 616:	8526                	mv	a0,s1
-- 618:	f5bff0ef          	jal	572 <putc>
-+ 608:	fff94583          	lbu	a1,-1(s2)
-+ 60c:	8526                	mv	a0,s1
-+ 60e:	f5bff0ef          	jal	568 <putc>
-   while(--i >= 0)
-- 61c:	197d                	addi	s2,s2,-1
-- 61e:	ff391ae3          	bne	s2,s3,612 <printint+0x82>
-- 622:	7902                	ld	s2,32(sp)
-- 624:	69e2                	ld	s3,24(sp)
-+ 612:	197d                	add	s2,s2,-1
-+ 614:	ff391ae3          	bne	s2,s3,608 <printint+0x82>
- }
-- 626:	70e2                	ld	ra,56(sp)
-- 628:	7442                	ld	s0,48(sp)
-- 62a:	74a2                	ld	s1,40(sp)
-- 62c:	6121                	addi	sp,sp,64
-- 62e:	8082                	ret
-+ 618:	70e2                	ld	ra,56(sp)
-+ 61a:	7442                	ld	s0,48(sp)
-+ 61c:	74a2                	ld	s1,40(sp)
-+ 61e:	7902                	ld	s2,32(sp)
-+ 620:	69e2                	ld	s3,24(sp)
-+ 622:	6121                	add	sp,sp,64
-+ 624:	8082                	ret
-     x = -xx;
-- 630:	40b005bb          	negw	a1,a1
-+ 626:	40b005bb          	negw	a1,a1
-     neg = 1;
-- 634:	4885                	li	a7,1
-+ 62a:	4885                	li	a7,1
-     x = -xx;
-- 636:	bf85                	j	5a6 <printint+0x16>
-+ 62c:	bf95                	j	5a0 <printint+0x1a>
- 
--0000000000000638 <vprintf>:
-+000000000000062e <vprintf>:
- }
- 
- /* Print to the given fd. Only understands %d, %x, %p, %s. */
- void
- vprintf(int fd, const char *fmt, va_list ap)
- {
-- 638:	711d                	addi	sp,sp,-96
-- 63a:	ec86                	sd	ra,88(sp)
-- 63c:	e8a2                	sd	s0,80(sp)
-- 63e:	e0ca                	sd	s2,64(sp)
-- 640:	1080                	addi	s0,sp,96
-+ 62e:	711d                	add	sp,sp,-96
-+ 630:	ec86                	sd	ra,88(sp)
-+ 632:	e8a2                	sd	s0,80(sp)
-+ 634:	e4a6                	sd	s1,72(sp)
-+ 636:	e0ca                	sd	s2,64(sp)
-+ 638:	fc4e                	sd	s3,56(sp)
-+ 63a:	f852                	sd	s4,48(sp)
-+ 63c:	f456                	sd	s5,40(sp)
-+ 63e:	f05a                	sd	s6,32(sp)
-+ 640:	ec5e                	sd	s7,24(sp)
-+ 642:	e862                	sd	s8,16(sp)
-+ 644:	e466                	sd	s9,8(sp)
-+ 646:	e06a                	sd	s10,0(sp)
-+ 648:	1080                	add	s0,sp,96
-   char *s;
-   int c0, c1, c2, i, state;
- 
-   state = 0;
-   for(i = 0; fmt[i]; i++){
-- 642:	0005c903          	lbu	s2,0(a1)
-- 646:	26090863          	beqz	s2,8b6 <vprintf+0x27e>
-- 64a:	e4a6                	sd	s1,72(sp)
-- 64c:	fc4e                	sd	s3,56(sp)
-- 64e:	f852                	sd	s4,48(sp)
-- 650:	f456                	sd	s5,40(sp)
-- 652:	f05a                	sd	s6,32(sp)
-- 654:	ec5e                	sd	s7,24(sp)
-- 656:	e862                	sd	s8,16(sp)
-- 658:	e466                	sd	s9,8(sp)
-- 65a:	8b2a                	mv	s6,a0
-- 65c:	8a2e                	mv	s4,a1
-- 65e:	8bb2                	mv	s7,a2
-+ 64a:	0005c903          	lbu	s2,0(a1)
-+ 64e:	24090763          	beqz	s2,89c <vprintf+0x26e>
-+ 652:	8b2a                	mv	s6,a0
-+ 654:	8a2e                	mv	s4,a1
-+ 656:	8bb2                	mv	s7,a2
-   state = 0;
-- 660:	4981                	li	s3,0
-+ 658:	4981                	li	s3,0
-   for(i = 0; fmt[i]; i++){
-- 662:	4481                	li	s1,0
-- 664:	4701                	li	a4,0
-+ 65a:	4481                	li	s1,0
-+ 65c:	4701                	li	a4,0
-       if(c0 == '%'){
-         state = '%';
-       } else {
-         putc(fd, c0);
-       }
-     } else if(state == '%'){
-- 666:	02500a93          	li	s5,37
-+ 65e:	02500a93          	li	s5,37
-       c1 = c2 = 0;
-       if(c0) c1 = fmt[i+1] & 0xff;
-       if(c1) c2 = fmt[i+2] & 0xff;
-       if(c0 == 'd'){
-- 66a:	06400c13          	li	s8,100
-+ 662:	06400c13          	li	s8,100
-         printint(fd, va_arg(ap, int), 10, 1);
-       } else if(c0 == 'l' && c1 == 'd'){
-- 66e:	06c00c93          	li	s9,108
-- 672:	a005                	j	692 <vprintf+0x5a>
-+ 666:	06c00c93          	li	s9,108
-+ 66a:	a005                	j	68a <vprintf+0x5c>
-         putc(fd, c0);
-- 674:	85ca                	mv	a1,s2
-- 676:	855a                	mv	a0,s6
-- 678:	efbff0ef          	jal	572 <putc>
-- 67c:	a019                	j	682 <vprintf+0x4a>
-+ 66c:	85ca                	mv	a1,s2
-+ 66e:	855a                	mv	a0,s6
-+ 670:	ef9ff0ef          	jal	568 <putc>
-+ 674:	a019                	j	67a <vprintf+0x4c>
-     } else if(state == '%'){
-- 67e:	03598263          	beq	s3,s5,6a2 <vprintf+0x6a>
-+ 676:	03598263          	beq	s3,s5,69a <vprintf+0x6c>
-   for(i = 0; fmt[i]; i++){
-- 682:	2485                	addiw	s1,s1,1
-- 684:	8726                	mv	a4,s1
-- 686:	009a07b3          	add	a5,s4,s1
-- 68a:	0007c903          	lbu	s2,0(a5)
-- 68e:	20090c63          	beqz	s2,8a6 <vprintf+0x26e>
-+ 67a:	2485                	addw	s1,s1,1
-+ 67c:	8726                	mv	a4,s1
-+ 67e:	009a07b3          	add	a5,s4,s1
-+ 682:	0007c903          	lbu	s2,0(a5)
-+ 686:	20090b63          	beqz	s2,89c <vprintf+0x26e>
-     c0 = fmt[i] & 0xff;
-- 692:	0009079b          	sext.w	a5,s2
-+ 68a:	0009079b          	sext.w	a5,s2
-     if(state == 0){
-- 696:	fe0994e3          	bnez	s3,67e <vprintf+0x46>
-+ 68e:	fe0994e3          	bnez	s3,676 <vprintf+0x48>
-       if(c0 == '%'){
-- 69a:	fd579de3          	bne	a5,s5,674 <vprintf+0x3c>
-+ 692:	fd579de3          	bne	a5,s5,66c <vprintf+0x3e>
-         state = '%';
-- 69e:	89be                	mv	s3,a5
-- 6a0:	b7cd                	j	682 <vprintf+0x4a>
-+ 696:	89be                	mv	s3,a5
-+ 698:	b7cd                	j	67a <vprintf+0x4c>
-       if(c0) c1 = fmt[i+1] & 0xff;
-- 6a2:	00ea06b3          	add	a3,s4,a4
-- 6a6:	0016c683          	lbu	a3,1(a3)
-+ 69a:	c7c9                	beqz	a5,724 <vprintf+0xf6>
-+ 69c:	00ea06b3          	add	a3,s4,a4
-+ 6a0:	0016c683          	lbu	a3,1(a3)
-       c1 = c2 = 0;
-- 6aa:	8636                	mv	a2,a3
-+ 6a4:	8636                	mv	a2,a3
-       if(c1) c2 = fmt[i+2] & 0xff;
-- 6ac:	c681                	beqz	a3,6b4 <vprintf+0x7c>
-- 6ae:	9752                	add	a4,a4,s4
-- 6b0:	00274603          	lbu	a2,2(a4)
-+ 6a6:	c681                	beqz	a3,6ae <vprintf+0x80>
-+ 6a8:	9752                	add	a4,a4,s4
-+ 6aa:	00274603          	lbu	a2,2(a4)
-       if(c0 == 'd'){
-- 6b4:	03878f63          	beq	a5,s8,6f2 <vprintf+0xba>
-+ 6ae:	03878f63          	beq	a5,s8,6ec <vprintf+0xbe>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 6b8:	05978963          	beq	a5,s9,70a <vprintf+0xd2>
-+ 6b2:	05978963          	beq	a5,s9,704 <vprintf+0xd6>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 2;
-       } else if(c0 == 'u'){
-- 6bc:	07500713          	li	a4,117
-- 6c0:	0ee78363          	beq	a5,a4,7a6 <vprintf+0x16e>
-+ 6b6:	07500713          	li	a4,117
-+ 6ba:	0ee78363          	beq	a5,a4,7a0 <vprintf+0x172>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 2;
-       } else if(c0 == 'x'){
-- 6c4:	07800713          	li	a4,120
-- 6c8:	12e78563          	beq	a5,a4,7f2 <vprintf+0x1ba>
-+ 6be:	07800713          	li	a4,120
-+ 6c2:	12e78563          	beq	a5,a4,7ec <vprintf+0x1be>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 2;
-       } else if(c0 == 'p'){
-- 6cc:	07000713          	li	a4,112
-- 6d0:	14e78a63          	beq	a5,a4,824 <vprintf+0x1ec>
-+ 6c6:	07000713          	li	a4,112
-+ 6ca:	14e78a63          	beq	a5,a4,81e <vprintf+0x1f0>
-         printptr(fd, va_arg(ap, uint64));
-       } else if(c0 == 's'){
-- 6d4:	07300713          	li	a4,115
-- 6d8:	18e78a63          	beq	a5,a4,86c <vprintf+0x234>
-+ 6ce:	07300713          	li	a4,115
-+ 6d2:	18e78863          	beq	a5,a4,862 <vprintf+0x234>
-         if((s = va_arg(ap, char*)) == 0)
-           s = "(null)";
-         for(; *s; s++)
-           putc(fd, *s);
-       } else if(c0 == '%'){
-- 6dc:	02500713          	li	a4,37
-- 6e0:	04e79563          	bne	a5,a4,72a <vprintf+0xf2>
-+ 6d6:	02500713          	li	a4,37
-+ 6da:	04e79563          	bne	a5,a4,724 <vprintf+0xf6>
-         putc(fd, '%');
-- 6e4:	02500593          	li	a1,37
-- 6e8:	855a                	mv	a0,s6
-- 6ea:	e89ff0ef          	jal	572 <putc>
-+ 6de:	02500593          	li	a1,37
-+ 6e2:	855a                	mv	a0,s6
-+ 6e4:	e85ff0ef          	jal	568 <putc>
-         /* Unknown % sequence.  Print it to draw attention. */
-         putc(fd, '%');
-         putc(fd, c);
-       }
- #endif
-       state = 0;
-- 6ee:	4981                	li	s3,0
-- 6f0:	bf49                	j	682 <vprintf+0x4a>
-+ 6e8:	4981                	li	s3,0
-+ 6ea:	bf41                	j	67a <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 1);
-- 6f2:	008b8913          	addi	s2,s7,8
-- 6f6:	4685                	li	a3,1
-- 6f8:	4629                	li	a2,10
-- 6fa:	000ba583          	lw	a1,0(s7)
-- 6fe:	855a                	mv	a0,s6
-- 700:	e91ff0ef          	jal	590 <printint>
-- 704:	8bca                	mv	s7,s2
-+ 6ec:	008b8913          	add	s2,s7,8
-+ 6f0:	4685                	li	a3,1
-+ 6f2:	4629                	li	a2,10
-+ 6f4:	000ba583          	lw	a1,0(s7)
-+ 6f8:	855a                	mv	a0,s6
-+ 6fa:	e8dff0ef          	jal	586 <printint>
-+ 6fe:	8bca                	mv	s7,s2
-       state = 0;
-- 706:	4981                	li	s3,0
-- 708:	bfad                	j	682 <vprintf+0x4a>
-+ 700:	4981                	li	s3,0
-+ 702:	bfa5                	j	67a <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 70a:	06400793          	li	a5,100
-- 70e:	02f68963          	beq	a3,a5,740 <vprintf+0x108>
-+ 704:	06400793          	li	a5,100
-+ 708:	02f68963          	beq	a3,a5,73a <vprintf+0x10c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 712:	06c00793          	li	a5,108
-- 716:	04f68263          	beq	a3,a5,75a <vprintf+0x122>
-+ 70c:	06c00793          	li	a5,108
-+ 710:	04f68263          	beq	a3,a5,754 <vprintf+0x126>
-       } else if(c0 == 'l' && c1 == 'u'){
-- 71a:	07500793          	li	a5,117
-- 71e:	0af68063          	beq	a3,a5,7be <vprintf+0x186>
-+ 714:	07500793          	li	a5,117
-+ 718:	0af68063          	beq	a3,a5,7b8 <vprintf+0x18a>
-       } else if(c0 == 'l' && c1 == 'x'){
-- 722:	07800793          	li	a5,120
-- 726:	0ef68263          	beq	a3,a5,80a <vprintf+0x1d2>
-+ 71c:	07800793          	li	a5,120
-+ 720:	0ef68263          	beq	a3,a5,804 <vprintf+0x1d6>
-         putc(fd, '%');
-- 72a:	02500593          	li	a1,37
-- 72e:	855a                	mv	a0,s6
-- 730:	e43ff0ef          	jal	572 <putc>
-+ 724:	02500593          	li	a1,37
-+ 728:	855a                	mv	a0,s6
-+ 72a:	e3fff0ef          	jal	568 <putc>
-         putc(fd, c0);
-- 734:	85ca                	mv	a1,s2
-- 736:	855a                	mv	a0,s6
-- 738:	e3bff0ef          	jal	572 <putc>
-+ 72e:	85ca                	mv	a1,s2
-+ 730:	855a                	mv	a0,s6
-+ 732:	e37ff0ef          	jal	568 <putc>
-       state = 0;
-- 73c:	4981                	li	s3,0
-- 73e:	b791                	j	682 <vprintf+0x4a>
-+ 736:	4981                	li	s3,0
-+ 738:	b789                	j	67a <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 740:	008b8913          	addi	s2,s7,8
-- 744:	4685                	li	a3,1
-- 746:	4629                	li	a2,10
-- 748:	000ba583          	lw	a1,0(s7)
-- 74c:	855a                	mv	a0,s6
-- 74e:	e43ff0ef          	jal	590 <printint>
-+ 73a:	008b8913          	add	s2,s7,8
-+ 73e:	4685                	li	a3,1
-+ 740:	4629                	li	a2,10
-+ 742:	000ba583          	lw	a1,0(s7)
-+ 746:	855a                	mv	a0,s6
-+ 748:	e3fff0ef          	jal	586 <printint>
-         i += 1;
-- 752:	2485                	addiw	s1,s1,1
-+ 74c:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 754:	8bca                	mv	s7,s2
-+ 74e:	8bca                	mv	s7,s2
-       state = 0;
-- 756:	4981                	li	s3,0
-+ 750:	4981                	li	s3,0
-         i += 1;
-- 758:	b72d                	j	682 <vprintf+0x4a>
-+ 752:	b725                	j	67a <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 75a:	06400793          	li	a5,100
-- 75e:	02f60763          	beq	a2,a5,78c <vprintf+0x154>
-+ 754:	06400793          	li	a5,100
-+ 758:	02f60763          	beq	a2,a5,786 <vprintf+0x158>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-- 762:	07500793          	li	a5,117
-- 766:	06f60963          	beq	a2,a5,7d8 <vprintf+0x1a0>
-+ 75c:	07500793          	li	a5,117
-+ 760:	06f60963          	beq	a2,a5,7d2 <vprintf+0x1a4>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-- 76a:	07800793          	li	a5,120
-- 76e:	faf61ee3          	bne	a2,a5,72a <vprintf+0xf2>
-+ 764:	07800793          	li	a5,120
-+ 768:	faf61ee3          	bne	a2,a5,724 <vprintf+0xf6>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 772:	008b8913          	addi	s2,s7,8
-- 776:	4681                	li	a3,0
-- 778:	4641                	li	a2,16
-- 77a:	000ba583          	lw	a1,0(s7)
-- 77e:	855a                	mv	a0,s6
-- 780:	e11ff0ef          	jal	590 <printint>
-+ 76c:	008b8913          	add	s2,s7,8
-+ 770:	4681                	li	a3,0
-+ 772:	4641                	li	a2,16
-+ 774:	000ba583          	lw	a1,0(s7)
-+ 778:	855a                	mv	a0,s6
-+ 77a:	e0dff0ef          	jal	586 <printint>
-         i += 2;
-- 784:	2489                	addiw	s1,s1,2
-+ 77e:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 786:	8bca                	mv	s7,s2
-+ 780:	8bca                	mv	s7,s2
-       state = 0;
-- 788:	4981                	li	s3,0
-+ 782:	4981                	li	s3,0
-         i += 2;
-- 78a:	bde5                	j	682 <vprintf+0x4a>
-+ 784:	bddd                	j	67a <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 78c:	008b8913          	addi	s2,s7,8
-- 790:	4685                	li	a3,1
-- 792:	4629                	li	a2,10
-- 794:	000ba583          	lw	a1,0(s7)
-- 798:	855a                	mv	a0,s6
-- 79a:	df7ff0ef          	jal	590 <printint>
-+ 786:	008b8913          	add	s2,s7,8
-+ 78a:	4685                	li	a3,1
-+ 78c:	4629                	li	a2,10
-+ 78e:	000ba583          	lw	a1,0(s7)
-+ 792:	855a                	mv	a0,s6
-+ 794:	df3ff0ef          	jal	586 <printint>
-         i += 2;
-- 79e:	2489                	addiw	s1,s1,2
-+ 798:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 7a0:	8bca                	mv	s7,s2
-+ 79a:	8bca                	mv	s7,s2
-       state = 0;
-- 7a2:	4981                	li	s3,0
-+ 79c:	4981                	li	s3,0
-         i += 2;
-- 7a4:	bdf9                	j	682 <vprintf+0x4a>
-+ 79e:	bdf1                	j	67a <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 0);
-- 7a6:	008b8913          	addi	s2,s7,8
-- 7aa:	4681                	li	a3,0
-- 7ac:	4629                	li	a2,10
-- 7ae:	000ba583          	lw	a1,0(s7)
-- 7b2:	855a                	mv	a0,s6
-- 7b4:	dddff0ef          	jal	590 <printint>
-- 7b8:	8bca                	mv	s7,s2
-+ 7a0:	008b8913          	add	s2,s7,8
-+ 7a4:	4681                	li	a3,0
-+ 7a6:	4629                	li	a2,10
-+ 7a8:	000ba583          	lw	a1,0(s7)
-+ 7ac:	855a                	mv	a0,s6
-+ 7ae:	dd9ff0ef          	jal	586 <printint>
-+ 7b2:	8bca                	mv	s7,s2
-       state = 0;
-- 7ba:	4981                	li	s3,0
-- 7bc:	b5d9                	j	682 <vprintf+0x4a>
-+ 7b4:	4981                	li	s3,0
-+ 7b6:	b5d1                	j	67a <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 7be:	008b8913          	addi	s2,s7,8
-- 7c2:	4681                	li	a3,0
-- 7c4:	4629                	li	a2,10
-- 7c6:	000ba583          	lw	a1,0(s7)
-- 7ca:	855a                	mv	a0,s6
-- 7cc:	dc5ff0ef          	jal	590 <printint>
-+ 7b8:	008b8913          	add	s2,s7,8
-+ 7bc:	4681                	li	a3,0
-+ 7be:	4629                	li	a2,10
-+ 7c0:	000ba583          	lw	a1,0(s7)
-+ 7c4:	855a                	mv	a0,s6
-+ 7c6:	dc1ff0ef          	jal	586 <printint>
-         i += 1;
-- 7d0:	2485                	addiw	s1,s1,1
-+ 7ca:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 7d2:	8bca                	mv	s7,s2
-+ 7cc:	8bca                	mv	s7,s2
-       state = 0;
-- 7d4:	4981                	li	s3,0
-+ 7ce:	4981                	li	s3,0
-         i += 1;
-- 7d6:	b575                	j	682 <vprintf+0x4a>
-+ 7d0:	b56d                	j	67a <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 7d8:	008b8913          	addi	s2,s7,8
-- 7dc:	4681                	li	a3,0
-- 7de:	4629                	li	a2,10
-- 7e0:	000ba583          	lw	a1,0(s7)
-- 7e4:	855a                	mv	a0,s6
-- 7e6:	dabff0ef          	jal	590 <printint>
-+ 7d2:	008b8913          	add	s2,s7,8
-+ 7d6:	4681                	li	a3,0
-+ 7d8:	4629                	li	a2,10
-+ 7da:	000ba583          	lw	a1,0(s7)
-+ 7de:	855a                	mv	a0,s6
-+ 7e0:	da7ff0ef          	jal	586 <printint>
-         i += 2;
-- 7ea:	2489                	addiw	s1,s1,2
-+ 7e4:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 7ec:	8bca                	mv	s7,s2
-+ 7e6:	8bca                	mv	s7,s2
-       state = 0;
-- 7ee:	4981                	li	s3,0
-+ 7e8:	4981                	li	s3,0
-         i += 2;
-- 7f0:	bd49                	j	682 <vprintf+0x4a>
-+ 7ea:	bd41                	j	67a <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 16, 0);
-- 7f2:	008b8913          	addi	s2,s7,8
-- 7f6:	4681                	li	a3,0
-- 7f8:	4641                	li	a2,16
-- 7fa:	000ba583          	lw	a1,0(s7)
-- 7fe:	855a                	mv	a0,s6
-- 800:	d91ff0ef          	jal	590 <printint>
-- 804:	8bca                	mv	s7,s2
-+ 7ec:	008b8913          	add	s2,s7,8
-+ 7f0:	4681                	li	a3,0
-+ 7f2:	4641                	li	a2,16
-+ 7f4:	000ba583          	lw	a1,0(s7)
-+ 7f8:	855a                	mv	a0,s6
-+ 7fa:	d8dff0ef          	jal	586 <printint>
-+ 7fe:	8bca                	mv	s7,s2
-       state = 0;
-- 806:	4981                	li	s3,0
-- 808:	bdad                	j	682 <vprintf+0x4a>
-+ 800:	4981                	li	s3,0
-+ 802:	bda5                	j	67a <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 80a:	008b8913          	addi	s2,s7,8
-- 80e:	4681                	li	a3,0
-- 810:	4641                	li	a2,16
-- 812:	000ba583          	lw	a1,0(s7)
-- 816:	855a                	mv	a0,s6
-- 818:	d79ff0ef          	jal	590 <printint>
-+ 804:	008b8913          	add	s2,s7,8
-+ 808:	4681                	li	a3,0
-+ 80a:	4641                	li	a2,16
-+ 80c:	000ba583          	lw	a1,0(s7)
-+ 810:	855a                	mv	a0,s6
-+ 812:	d75ff0ef          	jal	586 <printint>
-         i += 1;
-- 81c:	2485                	addiw	s1,s1,1
-+ 816:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 81e:	8bca                	mv	s7,s2
-+ 818:	8bca                	mv	s7,s2
-       state = 0;
-- 820:	4981                	li	s3,0
-+ 81a:	4981                	li	s3,0
-         i += 1;
-- 822:	b585                	j	682 <vprintf+0x4a>
-- 824:	e06a                	sd	s10,0(sp)
-+ 81c:	bdb9                	j	67a <vprintf+0x4c>
-         printptr(fd, va_arg(ap, uint64));
-- 826:	008b8d13          	addi	s10,s7,8
-- 82a:	000bb983          	ld	s3,0(s7)
-+ 81e:	008b8d13          	add	s10,s7,8
-+ 822:	000bb983          	ld	s3,0(s7)
-   putc(fd, '0');
-- 82e:	03000593          	li	a1,48
-- 832:	855a                	mv	a0,s6
-- 834:	d3fff0ef          	jal	572 <putc>
-+ 826:	03000593          	li	a1,48
-+ 82a:	855a                	mv	a0,s6
-+ 82c:	d3dff0ef          	jal	568 <putc>
-   putc(fd, 'x');
-- 838:	07800593          	li	a1,120
-- 83c:	855a                	mv	a0,s6
-- 83e:	d35ff0ef          	jal	572 <putc>
-- 842:	4941                	li	s2,16
-+ 830:	07800593          	li	a1,120
-+ 834:	855a                	mv	a0,s6
-+ 836:	d33ff0ef          	jal	568 <putc>
-+ 83a:	4941                	li	s2,16
-     putc(fd, digits[x >> (sizeof(uint64) * 8 - 4)]);
-- 844:	00000b97          	auipc	s7,0x0
-- 848:	2c4b8b93          	addi	s7,s7,708 # b08 <digits>
-- 84c:	03c9d793          	srli	a5,s3,0x3c
-- 850:	97de                	add	a5,a5,s7
-- 852:	0007c583          	lbu	a1,0(a5)
-- 856:	855a                	mv	a0,s6
-- 858:	d1bff0ef          	jal	572 <putc>
-+ 83c:	00000b97          	auipc	s7,0x0
-+ 840:	2acb8b93          	add	s7,s7,684 # ae8 <digits>
-+ 844:	03c9d793          	srl	a5,s3,0x3c
-+ 848:	97de                	add	a5,a5,s7
-+ 84a:	0007c583          	lbu	a1,0(a5)
-+ 84e:	855a                	mv	a0,s6
-+ 850:	d19ff0ef          	jal	568 <putc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
-- 85c:	0992                	slli	s3,s3,0x4
-- 85e:	397d                	addiw	s2,s2,-1
-- 860:	fe0916e3          	bnez	s2,84c <vprintf+0x214>
-+ 854:	0992                	sll	s3,s3,0x4
-+ 856:	397d                	addw	s2,s2,-1
-+ 858:	fe0916e3          	bnez	s2,844 <vprintf+0x216>
-         printptr(fd, va_arg(ap, uint64));
-- 864:	8bea                	mv	s7,s10
-+ 85c:	8bea                	mv	s7,s10
-       state = 0;
-- 866:	4981                	li	s3,0
-- 868:	6d02                	ld	s10,0(sp)
-- 86a:	bd21                	j	682 <vprintf+0x4a>
-+ 85e:	4981                	li	s3,0
-+ 860:	bd29                	j	67a <vprintf+0x4c>
-         if((s = va_arg(ap, char*)) == 0)
-- 86c:	008b8993          	addi	s3,s7,8
-- 870:	000bb903          	ld	s2,0(s7)
-- 874:	00090f63          	beqz	s2,892 <vprintf+0x25a>
-+ 862:	008b8993          	add	s3,s7,8
-+ 866:	000bb903          	ld	s2,0(s7)
-+ 86a:	00090f63          	beqz	s2,888 <vprintf+0x25a>
-         for(; *s; s++)
-- 878:	00094583          	lbu	a1,0(s2)
-- 87c:	c195                	beqz	a1,8a0 <vprintf+0x268>
-+ 86e:	00094583          	lbu	a1,0(s2)
-+ 872:	c195                	beqz	a1,896 <vprintf+0x268>
-           putc(fd, *s);
-- 87e:	855a                	mv	a0,s6
-- 880:	cf3ff0ef          	jal	572 <putc>
-+ 874:	855a                	mv	a0,s6
-+ 876:	cf3ff0ef          	jal	568 <putc>
-         for(; *s; s++)
-- 884:	0905                	addi	s2,s2,1
-- 886:	00094583          	lbu	a1,0(s2)
-- 88a:	f9f5                	bnez	a1,87e <vprintf+0x246>
-+ 87a:	0905                	add	s2,s2,1
-+ 87c:	00094583          	lbu	a1,0(s2)
-+ 880:	f9f5                	bnez	a1,874 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-- 88c:	8bce                	mv	s7,s3
-+ 882:	8bce                	mv	s7,s3
-       state = 0;
-- 88e:	4981                	li	s3,0
-- 890:	bbcd                	j	682 <vprintf+0x4a>
-+ 884:	4981                	li	s3,0
-+ 886:	bbd5                	j	67a <vprintf+0x4c>
-           s = "(null)";
-- 892:	00000917          	auipc	s2,0x0
-- 896:	26e90913          	addi	s2,s2,622 # b00 <malloc+0x162>
-+ 888:	00000917          	auipc	s2,0x0
-+ 88c:	25890913          	add	s2,s2,600 # ae0 <malloc+0x14a>
-         for(; *s; s++)
-- 89a:	02800593          	li	a1,40
-- 89e:	b7c5                	j	87e <vprintf+0x246>
-+ 890:	02800593          	li	a1,40
-+ 894:	b7c5                	j	874 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-- 8a0:	8bce                	mv	s7,s3
-+ 896:	8bce                	mv	s7,s3
-       state = 0;
-- 8a2:	4981                	li	s3,0
-- 8a4:	bbf9                	j	682 <vprintf+0x4a>
-- 8a6:	64a6                	ld	s1,72(sp)
-- 8a8:	79e2                	ld	s3,56(sp)
-- 8aa:	7a42                	ld	s4,48(sp)
-- 8ac:	7aa2                	ld	s5,40(sp)
-- 8ae:	7b02                	ld	s6,32(sp)
-- 8b0:	6be2                	ld	s7,24(sp)
-- 8b2:	6c42                	ld	s8,16(sp)
-- 8b4:	6ca2                	ld	s9,8(sp)
-+ 898:	4981                	li	s3,0
-+ 89a:	b3c5                	j	67a <vprintf+0x4c>
-     }
-   }
- }
-- 8b6:	60e6                	ld	ra,88(sp)
-- 8b8:	6446                	ld	s0,80(sp)
-- 8ba:	6906                	ld	s2,64(sp)
-- 8bc:	6125                	addi	sp,sp,96
-- 8be:	8082                	ret
--
--00000000000008c0 <fprintf>:
-+ 89c:	60e6                	ld	ra,88(sp)
-+ 89e:	6446                	ld	s0,80(sp)
-+ 8a0:	64a6                	ld	s1,72(sp)
-+ 8a2:	6906                	ld	s2,64(sp)
-+ 8a4:	79e2                	ld	s3,56(sp)
-+ 8a6:	7a42                	ld	s4,48(sp)
-+ 8a8:	7aa2                	ld	s5,40(sp)
-+ 8aa:	7b02                	ld	s6,32(sp)
-+ 8ac:	6be2                	ld	s7,24(sp)
-+ 8ae:	6c42                	ld	s8,16(sp)
-+ 8b0:	6ca2                	ld	s9,8(sp)
-+ 8b2:	6d02                	ld	s10,0(sp)
-+ 8b4:	6125                	add	sp,sp,96
-+ 8b6:	8082                	ret
-+
-+00000000000008b8 <fprintf>:
- 
- void
- fprintf(int fd, const char *fmt, ...)
- {
-- 8c0:	715d                	addi	sp,sp,-80
-- 8c2:	ec06                	sd	ra,24(sp)
-- 8c4:	e822                	sd	s0,16(sp)
-- 8c6:	1000                	addi	s0,sp,32
-- 8c8:	e010                	sd	a2,0(s0)
-- 8ca:	e414                	sd	a3,8(s0)
-- 8cc:	e818                	sd	a4,16(s0)
-- 8ce:	ec1c                	sd	a5,24(s0)
-- 8d0:	03043023          	sd	a6,32(s0)
-- 8d4:	03143423          	sd	a7,40(s0)
-+ 8b8:	715d                	add	sp,sp,-80
-+ 8ba:	ec06                	sd	ra,24(sp)
-+ 8bc:	e822                	sd	s0,16(sp)
-+ 8be:	1000                	add	s0,sp,32
-+ 8c0:	e010                	sd	a2,0(s0)
-+ 8c2:	e414                	sd	a3,8(s0)
-+ 8c4:	e818                	sd	a4,16(s0)
-+ 8c6:	ec1c                	sd	a5,24(s0)
-+ 8c8:	03043023          	sd	a6,32(s0)
-+ 8cc:	03143423          	sd	a7,40(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 8d8:	fe843423          	sd	s0,-24(s0)
-+ 8d0:	fe843423          	sd	s0,-24(s0)
-   vprintf(fd, fmt, ap);
-- 8dc:	8622                	mv	a2,s0
-- 8de:	d5bff0ef          	jal	638 <vprintf>
-+ 8d4:	8622                	mv	a2,s0
-+ 8d6:	d59ff0ef          	jal	62e <vprintf>
- }
-- 8e2:	60e2                	ld	ra,24(sp)
-- 8e4:	6442                	ld	s0,16(sp)
-- 8e6:	6161                	addi	sp,sp,80
-- 8e8:	8082                	ret
-+ 8da:	60e2                	ld	ra,24(sp)
-+ 8dc:	6442                	ld	s0,16(sp)
-+ 8de:	6161                	add	sp,sp,80
-+ 8e0:	8082                	ret
- 
--00000000000008ea <printf>:
-+00000000000008e2 <printf>:
- 
- void
- printf(const char *fmt, ...)
- {
-- 8ea:	711d                	addi	sp,sp,-96
-- 8ec:	ec06                	sd	ra,24(sp)
-- 8ee:	e822                	sd	s0,16(sp)
-- 8f0:	1000                	addi	s0,sp,32
-- 8f2:	e40c                	sd	a1,8(s0)
-- 8f4:	e810                	sd	a2,16(s0)
-- 8f6:	ec14                	sd	a3,24(s0)
-- 8f8:	f018                	sd	a4,32(s0)
-- 8fa:	f41c                	sd	a5,40(s0)
-- 8fc:	03043823          	sd	a6,48(s0)
-- 900:	03143c23          	sd	a7,56(s0)
-+ 8e2:	711d                	add	sp,sp,-96
-+ 8e4:	ec06                	sd	ra,24(sp)
-+ 8e6:	e822                	sd	s0,16(sp)
-+ 8e8:	1000                	add	s0,sp,32
-+ 8ea:	e40c                	sd	a1,8(s0)
-+ 8ec:	e810                	sd	a2,16(s0)
-+ 8ee:	ec14                	sd	a3,24(s0)
-+ 8f0:	f018                	sd	a4,32(s0)
-+ 8f2:	f41c                	sd	a5,40(s0)
-+ 8f4:	03043823          	sd	a6,48(s0)
-+ 8f8:	03143c23          	sd	a7,56(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 904:	00840613          	addi	a2,s0,8
-- 908:	fec43423          	sd	a2,-24(s0)
-+ 8fc:	00840613          	add	a2,s0,8
-+ 900:	fec43423          	sd	a2,-24(s0)
-   vprintf(1, fmt, ap);
-- 90c:	85aa                	mv	a1,a0
-- 90e:	4505                	li	a0,1
-- 910:	d29ff0ef          	jal	638 <vprintf>
-+ 904:	85aa                	mv	a1,a0
-+ 906:	4505                	li	a0,1
-+ 908:	d27ff0ef          	jal	62e <vprintf>
- }
-- 914:	60e2                	ld	ra,24(sp)
-- 916:	6442                	ld	s0,16(sp)
-- 918:	6125                	addi	sp,sp,96
-- 91a:	8082                	ret
-+ 90c:	60e2                	ld	ra,24(sp)
-+ 90e:	6442                	ld	s0,16(sp)
-+ 910:	6125                	add	sp,sp,96
-+ 912:	8082                	ret
- 
--000000000000091c <free>:
-+0000000000000914 <free>:
- static Header base;
- static Header *freep;
- 
- void
- free(void *ap)
- {
-- 91c:	1141                	addi	sp,sp,-16
-- 91e:	e422                	sd	s0,8(sp)
-- 920:	0800                	addi	s0,sp,16
-+ 914:	1141                	add	sp,sp,-16
-+ 916:	e422                	sd	s0,8(sp)
-+ 918:	0800                	add	s0,sp,16
-   Header *bp, *p;
- 
-   bp = (Header*)ap - 1;
-- 922:	ff050693          	addi	a3,a0,-16
-+ 91a:	ff050693          	add	a3,a0,-16
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 926:	00000797          	auipc	a5,0x0
-- 92a:	6da7b783          	ld	a5,1754(a5) # 1000 <freep>
-- 92e:	a02d                	j	958 <free+0x3c>
-+ 91e:	00000797          	auipc	a5,0x0
-+ 922:	6e27b783          	ld	a5,1762(a5) # 1000 <freep>
-+ 926:	a02d                	j	950 <free+0x3c>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-       break;
-   if(bp + bp->s.size == p->s.ptr){
-     bp->s.size += p->s.ptr->s.size;
-- 930:	4618                	lw	a4,8(a2)
-- 932:	9f2d                	addw	a4,a4,a1
-- 934:	fee52c23          	sw	a4,-8(a0)
-+ 928:	4618                	lw	a4,8(a2)
-+ 92a:	9f2d                	addw	a4,a4,a1
-+ 92c:	fee52c23          	sw	a4,-8(a0)
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 938:	6398                	ld	a4,0(a5)
-- 93a:	6310                	ld	a2,0(a4)
-- 93c:	a83d                	j	97a <free+0x5e>
-+ 930:	6398                	ld	a4,0(a5)
-+ 932:	6310                	ld	a2,0(a4)
-+ 934:	a83d                	j	972 <free+0x5e>
-   } else
-     bp->s.ptr = p->s.ptr;
-   if(p + p->s.size == bp){
-     p->s.size += bp->s.size;
-- 93e:	ff852703          	lw	a4,-8(a0)
-- 942:	9f31                	addw	a4,a4,a2
-- 944:	c798                	sw	a4,8(a5)
-+ 936:	ff852703          	lw	a4,-8(a0)
-+ 93a:	9f31                	addw	a4,a4,a2
-+ 93c:	c798                	sw	a4,8(a5)
-     p->s.ptr = bp->s.ptr;
-- 946:	ff053683          	ld	a3,-16(a0)
-- 94a:	a091                	j	98e <free+0x72>
-+ 93e:	ff053683          	ld	a3,-16(a0)
-+ 942:	a091                	j	986 <free+0x72>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 94c:	6398                	ld	a4,0(a5)
-- 94e:	00e7e463          	bltu	a5,a4,956 <free+0x3a>
-- 952:	00e6ea63          	bltu	a3,a4,966 <free+0x4a>
-+ 944:	6398                	ld	a4,0(a5)
-+ 946:	00e7e463          	bltu	a5,a4,94e <free+0x3a>
-+ 94a:	00e6ea63          	bltu	a3,a4,95e <free+0x4a>
- {
-- 956:	87ba                	mv	a5,a4
-+ 94e:	87ba                	mv	a5,a4
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 958:	fed7fae3          	bgeu	a5,a3,94c <free+0x30>
-- 95c:	6398                	ld	a4,0(a5)
-- 95e:	00e6e463          	bltu	a3,a4,966 <free+0x4a>
-+ 950:	fed7fae3          	bgeu	a5,a3,944 <free+0x30>
-+ 954:	6398                	ld	a4,0(a5)
-+ 956:	00e6e463          	bltu	a3,a4,95e <free+0x4a>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 962:	fee7eae3          	bltu	a5,a4,956 <free+0x3a>
-+ 95a:	fee7eae3          	bltu	a5,a4,94e <free+0x3a>
-   if(bp + bp->s.size == p->s.ptr){
-- 966:	ff852583          	lw	a1,-8(a0)
-- 96a:	6390                	ld	a2,0(a5)
-- 96c:	02059813          	slli	a6,a1,0x20
-- 970:	01c85713          	srli	a4,a6,0x1c
-- 974:	9736                	add	a4,a4,a3
-- 976:	fae60de3          	beq	a2,a4,930 <free+0x14>
-+ 95e:	ff852583          	lw	a1,-8(a0)
-+ 962:	6390                	ld	a2,0(a5)
-+ 964:	02059813          	sll	a6,a1,0x20
-+ 968:	01c85713          	srl	a4,a6,0x1c
-+ 96c:	9736                	add	a4,a4,a3
-+ 96e:	fae60de3          	beq	a2,a4,928 <free+0x14>
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 97a:	fec53823          	sd	a2,-16(a0)
-+ 972:	fec53823          	sd	a2,-16(a0)
-   if(p + p->s.size == bp){
-- 97e:	4790                	lw	a2,8(a5)
-- 980:	02061593          	slli	a1,a2,0x20
-- 984:	01c5d713          	srli	a4,a1,0x1c
-- 988:	973e                	add	a4,a4,a5
-- 98a:	fae68ae3          	beq	a3,a4,93e <free+0x22>
-+ 976:	4790                	lw	a2,8(a5)
-+ 978:	02061593          	sll	a1,a2,0x20
-+ 97c:	01c5d713          	srl	a4,a1,0x1c
-+ 980:	973e                	add	a4,a4,a5
-+ 982:	fae68ae3          	beq	a3,a4,936 <free+0x22>
-     p->s.ptr = bp->s.ptr;
-- 98e:	e394                	sd	a3,0(a5)
-+ 986:	e394                	sd	a3,0(a5)
-   } else
-     p->s.ptr = bp;
-   freep = p;
-- 990:	00000717          	auipc	a4,0x0
-- 994:	66f73823          	sd	a5,1648(a4) # 1000 <freep>
-+ 988:	00000717          	auipc	a4,0x0
-+ 98c:	66f73c23          	sd	a5,1656(a4) # 1000 <freep>
- }
-- 998:	6422                	ld	s0,8(sp)
-- 99a:	0141                	addi	sp,sp,16
-- 99c:	8082                	ret
-+ 990:	6422                	ld	s0,8(sp)
-+ 992:	0141                	add	sp,sp,16
-+ 994:	8082                	ret
- 
--000000000000099e <malloc>:
-+0000000000000996 <malloc>:
-   return freep;
- }
- 
- void*
- malloc(uint nbytes)
- {
-- 99e:	7139                	addi	sp,sp,-64
-- 9a0:	fc06                	sd	ra,56(sp)
-- 9a2:	f822                	sd	s0,48(sp)
-- 9a4:	f426                	sd	s1,40(sp)
-- 9a6:	ec4e                	sd	s3,24(sp)
-- 9a8:	0080                	addi	s0,sp,64
-+ 996:	7139                	add	sp,sp,-64
-+ 998:	fc06                	sd	ra,56(sp)
-+ 99a:	f822                	sd	s0,48(sp)
-+ 99c:	f426                	sd	s1,40(sp)
-+ 99e:	f04a                	sd	s2,32(sp)
-+ 9a0:	ec4e                	sd	s3,24(sp)
-+ 9a2:	e852                	sd	s4,16(sp)
-+ 9a4:	e456                	sd	s5,8(sp)
-+ 9a6:	e05a                	sd	s6,0(sp)
-+ 9a8:	0080                	add	s0,sp,64
-   Header *p, *prevp;
-   uint nunits;
- 
-   nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;
-- 9aa:	02051493          	slli	s1,a0,0x20
-- 9ae:	9081                	srli	s1,s1,0x20
-- 9b0:	04bd                	addi	s1,s1,15
-- 9b2:	8091                	srli	s1,s1,0x4
-- 9b4:	0014899b          	addiw	s3,s1,1
-- 9b8:	0485                	addi	s1,s1,1
-+ 9aa:	02051493          	sll	s1,a0,0x20
-+ 9ae:	9081                	srl	s1,s1,0x20
-+ 9b0:	04bd                	add	s1,s1,15
-+ 9b2:	8091                	srl	s1,s1,0x4
-+ 9b4:	0014899b          	addw	s3,s1,1
-+ 9b8:	0485                	add	s1,s1,1
-   if((prevp = freep) == 0){
-  9ba:	00000517          	auipc	a0,0x0
-  9be:	64653503          	ld	a0,1606(a0) # 1000 <freep>
-- 9c2:	c915                	beqz	a0,9f6 <malloc+0x58>
-+ 9c2:	c515                	beqz	a0,9ee <malloc+0x58>
-     base.s.ptr = freep = prevp = &base;
-     base.s.size = 0;
-   }
-@@ -1592,109 +1593,94 @@ malloc(uint nbytes)
-  9c4:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-  9c6:	4798                	lw	a4,8(a5)
-- 9c8:	08977a63          	bgeu	a4,s1,a5c <malloc+0xbe>
-- 9cc:	f04a                	sd	s2,32(sp)
-- 9ce:	e852                	sd	s4,16(sp)
-- 9d0:	e456                	sd	s5,8(sp)
-- 9d2:	e05a                	sd	s6,0(sp)
-+ 9c8:	02977f63          	bgeu	a4,s1,a06 <malloc+0x70>
-   if(nu < 4096)
-- 9d4:	8a4e                	mv	s4,s3
-- 9d6:	0009871b          	sext.w	a4,s3
-- 9da:	6685                	lui	a3,0x1
-- 9dc:	00d77363          	bgeu	a4,a3,9e2 <malloc+0x44>
-- 9e0:	6a05                	lui	s4,0x1
-- 9e2:	000a0b1b          	sext.w	s6,s4
-+ 9cc:	8a4e                	mv	s4,s3
-+ 9ce:	0009871b          	sext.w	a4,s3
-+ 9d2:	6685                	lui	a3,0x1
-+ 9d4:	00d77363          	bgeu	a4,a3,9da <malloc+0x44>
-+ 9d8:	6a05                	lui	s4,0x1
-+ 9da:	000a0b1b          	sext.w	s6,s4
-   p = sbrk(nu * sizeof(Header));
-- 9e6:	004a1a1b          	slliw	s4,s4,0x4
-+ 9de:	004a1a1b          	sllw	s4,s4,0x4
-         p->s.size = nunits;
-       }
-       freep = prevp;
-       return (void*)(p + 1);
-     }
-     if(p == freep)
-- 9ea:	00000917          	auipc	s2,0x0
-- 9ee:	61690913          	addi	s2,s2,1558 # 1000 <freep>
-+ 9e2:	00000917          	auipc	s2,0x0
-+ 9e6:	61e90913          	add	s2,s2,1566 # 1000 <freep>
-   if(p == (char*)-1)
-- 9f2:	5afd                	li	s5,-1
-- 9f4:	a081                	j	a34 <malloc+0x96>
-- 9f6:	f04a                	sd	s2,32(sp)
-- 9f8:	e852                	sd	s4,16(sp)
-- 9fa:	e456                	sd	s5,8(sp)
-- 9fc:	e05a                	sd	s6,0(sp)
-+ 9ea:	5afd                	li	s5,-1
-+ 9ec:	a885                	j	a5c <malloc+0xc6>
-     base.s.ptr = freep = prevp = &base;
-- 9fe:	00000797          	auipc	a5,0x0
-- a02:	62278793          	addi	a5,a5,1570 # 1020 <base>
-- a06:	00000717          	auipc	a4,0x0
-- a0a:	5ef73d23          	sd	a5,1530(a4) # 1000 <freep>
-- a0e:	e39c                	sd	a5,0(a5)
-+ 9ee:	00000797          	auipc	a5,0x0
-+ 9f2:	63278793          	add	a5,a5,1586 # 1020 <base>
-+ 9f6:	00000717          	auipc	a4,0x0
-+ 9fa:	60f73523          	sd	a5,1546(a4) # 1000 <freep>
-+ 9fe:	e39c                	sd	a5,0(a5)
-     base.s.size = 0;
-- a10:	0007a423          	sw	zero,8(a5)
-+ a00:	0007a423          	sw	zero,8(a5)
-     if(p->s.size >= nunits){
-- a14:	b7c1                	j	9d4 <malloc+0x36>
-+ a04:	b7e1                	j	9cc <malloc+0x36>
-+      if(p->s.size == nunits)
-+ a06:	02e48c63          	beq	s1,a4,a3e <malloc+0xa8>
-+        p->s.size -= nunits;
-+ a0a:	4137073b          	subw	a4,a4,s3
-+ a0e:	c798                	sw	a4,8(a5)
-+        p += p->s.size;
-+ a10:	02071693          	sll	a3,a4,0x20
-+ a14:	01c6d713          	srl	a4,a3,0x1c
-+ a18:	97ba                	add	a5,a5,a4
-+        p->s.size = nunits;
-+ a1a:	0137a423          	sw	s3,8(a5)
-+      freep = prevp;
-+ a1e:	00000717          	auipc	a4,0x0
-+ a22:	5ea73123          	sd	a0,1506(a4) # 1000 <freep>
-+      return (void*)(p + 1);
-+ a26:	01078513          	add	a0,a5,16
-+      if((p = morecore(nunits)) == 0)
-+        return 0;
-+  }
-+}
-+ a2a:	70e2                	ld	ra,56(sp)
-+ a2c:	7442                	ld	s0,48(sp)
-+ a2e:	74a2                	ld	s1,40(sp)
-+ a30:	7902                	ld	s2,32(sp)
-+ a32:	69e2                	ld	s3,24(sp)
-+ a34:	6a42                	ld	s4,16(sp)
-+ a36:	6aa2                	ld	s5,8(sp)
-+ a38:	6b02                	ld	s6,0(sp)
-+ a3a:	6121                	add	sp,sp,64
-+ a3c:	8082                	ret
-         prevp->s.ptr = p->s.ptr;
-- a16:	6398                	ld	a4,0(a5)
-- a18:	e118                	sd	a4,0(a0)
-- a1a:	a8a9                	j	a74 <malloc+0xd6>
-+ a3e:	6398                	ld	a4,0(a5)
-+ a40:	e118                	sd	a4,0(a0)
-+ a42:	bff1                	j	a1e <malloc+0x88>
-   hp->s.size = nu;
-- a1c:	01652423          	sw	s6,8(a0)
-+ a44:	01652423          	sw	s6,8(a0)
-   free((void*)(hp + 1));
-- a20:	0541                	addi	a0,a0,16
-- a22:	efbff0ef          	jal	91c <free>
-+ a48:	0541                	add	a0,a0,16
-+ a4a:	ecbff0ef          	jal	914 <free>
-   return freep;
-- a26:	00093503          	ld	a0,0(s2)
-+ a4e:	00093503          	ld	a0,0(s2)
-       if((p = morecore(nunits)) == 0)
-- a2a:	c12d                	beqz	a0,a8c <malloc+0xee>
-+ a52:	dd61                	beqz	a0,a2a <malloc+0x94>
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- a2c:	611c                	ld	a5,0(a0)
-+ a54:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- a2e:	4798                	lw	a4,8(a5)
-- a30:	02977263          	bgeu	a4,s1,a54 <malloc+0xb6>
-+ a56:	4798                	lw	a4,8(a5)
-+ a58:	fa9777e3          	bgeu	a4,s1,a06 <malloc+0x70>
-     if(p == freep)
-- a34:	00093703          	ld	a4,0(s2)
-- a38:	853e                	mv	a0,a5
-- a3a:	fef719e3          	bne	a4,a5,a2c <malloc+0x8e>
-+ a5c:	00093703          	ld	a4,0(s2)
-+ a60:	853e                	mv	a0,a5
-+ a62:	fef719e3          	bne	a4,a5,a54 <malloc+0xbe>
-   p = sbrk(nu * sizeof(Header));
-- a3e:	8552                	mv	a0,s4
-- a40:	b1bff0ef          	jal	55a <sbrk>
-+ a66:	8552                	mv	a0,s4
-+ a68:	ae9ff0ef          	jal	550 <sbrk>
-   if(p == (char*)-1)
-- a44:	fd551ce3          	bne	a0,s5,a1c <malloc+0x7e>
-+ a6c:	fd551ce3          	bne	a0,s5,a44 <malloc+0xae>
-         return 0;
-- a48:	4501                	li	a0,0
-- a4a:	7902                	ld	s2,32(sp)
-- a4c:	6a42                	ld	s4,16(sp)
-- a4e:	6aa2                	ld	s5,8(sp)
-- a50:	6b02                	ld	s6,0(sp)
-- a52:	a03d                	j	a80 <malloc+0xe2>
-- a54:	7902                	ld	s2,32(sp)
-- a56:	6a42                	ld	s4,16(sp)
-- a58:	6aa2                	ld	s5,8(sp)
-- a5a:	6b02                	ld	s6,0(sp)
--      if(p->s.size == nunits)
-- a5c:	fae48de3          	beq	s1,a4,a16 <malloc+0x78>
--        p->s.size -= nunits;
-- a60:	4137073b          	subw	a4,a4,s3
-- a64:	c798                	sw	a4,8(a5)
--        p += p->s.size;
-- a66:	02071693          	slli	a3,a4,0x20
-- a6a:	01c6d713          	srli	a4,a3,0x1c
-- a6e:	97ba                	add	a5,a5,a4
--        p->s.size = nunits;
-- a70:	0137a423          	sw	s3,8(a5)
--      freep = prevp;
-- a74:	00000717          	auipc	a4,0x0
-- a78:	58a73623          	sd	a0,1420(a4) # 1000 <freep>
--      return (void*)(p + 1);
-- a7c:	01078513          	addi	a0,a5,16
--  }
--}
-- a80:	70e2                	ld	ra,56(sp)
-- a82:	7442                	ld	s0,48(sp)
-- a84:	74a2                	ld	s1,40(sp)
-- a86:	69e2                	ld	s3,24(sp)
-- a88:	6121                	addi	sp,sp,64
-- a8a:	8082                	ret
-- a8c:	7902                	ld	s2,32(sp)
-- a8e:	6a42                	ld	s4,16(sp)
-- a90:	6aa2                	ld	s5,8(sp)
-- a92:	6b02                	ld	s6,0(sp)
-- a94:	b7f5                	j	a80 <malloc+0xe2>
-+ a70:	4501                	li	a0,0
-+ a72:	bf65                	j	a2a <malloc+0x94>
-diff --git a/Assignments/Assignment-6/xv6/user/ls.d b/Assignments/Assignment-6/xv6/user/ls.d
-index 08c93a6..7dddf9b 100644
---- a/Assignments/Assignment-6/xv6/user/ls.d
-+++ b/Assignments/Assignment-6/xv6/user/ls.d
-@@ -1,3 +1,2 @@
--user/ls.o: user/ls.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/stat.h user/user.h kernel/fs.h kernel/fcntl.h
-+user/ls.o: user/ls.c kernel/types.h kernel/stat.h user/user.h kernel/fs.h \
-+ kernel/fcntl.h
-diff --git a/Assignments/Assignment-6/xv6/user/ls.o b/Assignments/Assignment-6/xv6/user/ls.o
-index f49d663..406627e 100644
-Binary files a/Assignments/Assignment-6/xv6/user/ls.o and b/Assignments/Assignment-6/xv6/user/ls.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/ls.sym b/Assignments/Assignment-6/xv6/user/ls.sym
-index 78398f0..d7e132c 100644
---- a/Assignments/Assignment-6/xv6/user/ls.sym
-+++ b/Assignments/Assignment-6/xv6/user/ls.sym
-@@ -1,6 +1,5 @@
- 0000000000000000 .text
--0000000000000a98 .rodata
--0000000000000b20 .eh_frame
-+0000000000000a78 .rodata
- 0000000000001000 .data
- 0000000000001000 .bss
- 0000000000000000 .debug_info
-@@ -11,56 +10,57 @@
- 0000000000000000 .debug_str
- 0000000000000000 .comment
- 0000000000000000 .riscv.attributes
-+0000000000000000 .debug_frame
- 0000000000000000 .debug_ranges
- 0000000000000000 ls.c
- 0000000000001010 buf.0
- 0000000000000000 ulib.c
- 0000000000000000 usys.o
- 0000000000000000 printf.c
--0000000000000572 putc
--0000000000000590 printint
--0000000000000b08 digits
-+0000000000000568 putc
-+0000000000000586 printint
-+0000000000000ae8 digits
- 0000000000000000 umalloc.c
- 0000000000001000 freep
- 0000000000001020 base
--000000000000027a strcpy
-+0000000000000270 strcpy
- 0000000000000000 fmtname
--00000000000008ea printf
--0000000000000424 memmove
--000000000000051a mknod
--0000000000000332 gets
--0000000000000552 getpid
--00000000000004b6 memcpy
--000000000000099e malloc
--0000000000000562 sleep
--00000000000004e2 pipe
--00000000000004f2 write
--000000000000052a fstat
--00000000000008c0 fprintf
--0000000000000502 kill
--0000000000000638 vprintf
--0000000000000542 chdir
--000000000000050a exec
--00000000000004da wait
--00000000000004ea read
--0000000000000522 unlink
--000000000000047c memcmp
--00000000000004ca fork
--000000000000055a sbrk
--000000000000056a uptime
--00000000000002ec memset
--000000000000021a main
--0000000000000296 strcmp
--000000000000054a dup
--00000000000003a2 stat
--0000000000000532 link
-+00000000000008e2 printf
-+000000000000041a memmove
-+0000000000000510 mknod
-+0000000000000328 gets
-+0000000000000548 getpid
-+00000000000004ac memcpy
-+0000000000000996 malloc
-+0000000000000558 sleep
-+00000000000004d8 pipe
-+00000000000004e8 write
-+0000000000000520 fstat
-+00000000000008b8 fprintf
-+00000000000004f8 kill
-+000000000000062e vprintf
-+0000000000000538 chdir
-+0000000000000500 exec
-+00000000000004d0 wait
-+00000000000004e0 read
-+0000000000000518 unlink
-+0000000000000472 memcmp
-+00000000000004c0 fork
-+0000000000000550 sbrk
-+0000000000000560 uptime
-+00000000000002e2 memset
-+0000000000000214 main
-+000000000000028c strcmp
-+0000000000000540 dup
-+0000000000000398 stat
-+0000000000000528 link
- 0000000000000098 ls
--00000000000004d2 exit
--0000000000000268 start
--00000000000003dc atoi
--00000000000002c2 strlen
--0000000000000512 open
--000000000000030e strchr
--000000000000053a mkdir
--00000000000004fa close
--000000000000091c free
-+00000000000004c8 exit
-+000000000000025e start
-+00000000000003d2 atoi
-+00000000000002b8 strlen
-+0000000000000508 open
-+0000000000000304 strchr
-+0000000000000530 mkdir
-+00000000000004f0 close
-+0000000000000914 free
-diff --git a/Assignments/Assignment-6/xv6/user/mkdir.asm b/Assignments/Assignment-6/xv6/user/mkdir.asm
-index 0d52056..5c69094 100644
---- a/Assignments/Assignment-6/xv6/user/mkdir.asm
-+++ b/Assignments/Assignment-6/xv6/user/mkdir.asm
-@@ -11,22 +11,22 @@ Disassembly of section .text:
- int
- main(int argc, char *argv[])
- {
--   0:	1101                	addi	sp,sp,-32
-+   0:	1101                	add	sp,sp,-32
-    2:	ec06                	sd	ra,24(sp)
-    4:	e822                	sd	s0,16(sp)
--   6:	1000                	addi	s0,sp,32
-+   6:	e426                	sd	s1,8(sp)
-+   8:	e04a                	sd	s2,0(sp)
-+   a:	1000                	add	s0,sp,32
-   int i;
- 
-   if(argc < 2){
--   8:	4785                	li	a5,1
--   a:	02a7d763          	bge	a5,a0,38 <main+0x38>
--   e:	e426                	sd	s1,8(sp)
--  10:	e04a                	sd	s2,0(sp)
--  12:	00858493          	addi	s1,a1,8
--  16:	ffe5091b          	addiw	s2,a0,-2
--  1a:	02091793          	slli	a5,s2,0x20
--  1e:	01d7d913          	srli	s2,a5,0x1d
--  22:	05c1                	addi	a1,a1,16
-+   c:	4785                	li	a5,1
-+   e:	02a7d563          	bge	a5,a0,38 <main+0x38>
-+  12:	00858493          	add	s1,a1,8
-+  16:	ffe5091b          	addw	s2,a0,-2
-+  1a:	02091793          	sll	a5,s2,0x20
-+  1e:	01d7d913          	srl	s2,a5,0x1d
-+  22:	05c1                	add	a1,a1,16
-   24:	992e                	add	s2,s2,a1
-     fprintf(2, "Usage: mkdir files...\n");
-     exit(1);
-@@ -35,711 +35,711 @@ main(int argc, char *argv[])
-   for(i = 1; i < argc; i++){
-     if(mkdir(argv[i]) < 0){
-   26:	6088                	ld	a0,0(s1)
--  28:	310000ef          	jal	338 <mkdir>
--  2c:	02054263          	bltz	a0,50 <main+0x50>
-+  28:	30c000ef          	jal	334 <mkdir>
-+  2c:	02054063          	bltz	a0,4c <main+0x4c>
-   for(i = 1; i < argc; i++){
--  30:	04a1                	addi	s1,s1,8
-+  30:	04a1                	add	s1,s1,8
-   32:	ff249ae3          	bne	s1,s2,26 <main+0x26>
--  36:	a02d                	j	60 <main+0x60>
--  38:	e426                	sd	s1,8(sp)
--  3a:	e04a                	sd	s2,0(sp)
-+  36:	a01d                	j	5c <main+0x5c>
-     fprintf(2, "Usage: mkdir files...\n");
--  3c:	00001597          	auipc	a1,0x1
--  40:	86458593          	addi	a1,a1,-1948 # 8a0 <malloc+0x104>
--  44:	4509                	li	a0,2
--  46:	678000ef          	jal	6be <fprintf>
-+  38:	00001597          	auipc	a1,0x1
-+  3c:	84858593          	add	a1,a1,-1976 # 880 <malloc+0xe6>
-+  40:	4509                	li	a0,2
-+  42:	67a000ef          	jal	6bc <fprintf>
-     exit(1);
--  4a:	4505                	li	a0,1
--  4c:	284000ef          	jal	2d0 <exit>
-+  46:	4505                	li	a0,1
-+  48:	284000ef          	jal	2cc <exit>
-       fprintf(2, "mkdir: %s failed to create\n", argv[i]);
--  50:	6090                	ld	a2,0(s1)
--  52:	00001597          	auipc	a1,0x1
--  56:	86658593          	addi	a1,a1,-1946 # 8b8 <malloc+0x11c>
--  5a:	4509                	li	a0,2
--  5c:	662000ef          	jal	6be <fprintf>
-+  4c:	6090                	ld	a2,0(s1)
-+  4e:	00001597          	auipc	a1,0x1
-+  52:	84a58593          	add	a1,a1,-1974 # 898 <malloc+0xfe>
-+  56:	4509                	li	a0,2
-+  58:	664000ef          	jal	6bc <fprintf>
-       break;
-     }
-   }
- 
-   exit(0);
--  60:	4501                	li	a0,0
--  62:	26e000ef          	jal	2d0 <exit>
-+  5c:	4501                	li	a0,0
-+  5e:	26e000ef          	jal	2cc <exit>
- 
--0000000000000066 <start>:
-+0000000000000062 <start>:
- /* */
- /* wrapper so that it's OK if main() does not call exit(). */
- /* */
- void
- start()
- {
--  66:	1141                	addi	sp,sp,-16
--  68:	e406                	sd	ra,8(sp)
--  6a:	e022                	sd	s0,0(sp)
--  6c:	0800                	addi	s0,sp,16
-+  62:	1141                	add	sp,sp,-16
-+  64:	e406                	sd	ra,8(sp)
-+  66:	e022                	sd	s0,0(sp)
-+  68:	0800                	add	s0,sp,16
-   extern int main();
-   main();
--  6e:	f93ff0ef          	jal	0 <main>
-+  6a:	f97ff0ef          	jal	0 <main>
-   exit(0);
--  72:	4501                	li	a0,0
--  74:	25c000ef          	jal	2d0 <exit>
-+  6e:	4501                	li	a0,0
-+  70:	25c000ef          	jal	2cc <exit>
- 
--0000000000000078 <strcpy>:
-+0000000000000074 <strcpy>:
- }
- 
- char*
- strcpy(char *s, const char *t)
- {
--  78:	1141                	addi	sp,sp,-16
--  7a:	e422                	sd	s0,8(sp)
--  7c:	0800                	addi	s0,sp,16
-+  74:	1141                	add	sp,sp,-16
-+  76:	e422                	sd	s0,8(sp)
-+  78:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
--  7e:	87aa                	mv	a5,a0
--  80:	0585                	addi	a1,a1,1
--  82:	0785                	addi	a5,a5,1
--  84:	fff5c703          	lbu	a4,-1(a1)
--  88:	fee78fa3          	sb	a4,-1(a5)
--  8c:	fb75                	bnez	a4,80 <strcpy+0x8>
-+  7a:	87aa                	mv	a5,a0
-+  7c:	0585                	add	a1,a1,1
-+  7e:	0785                	add	a5,a5,1
-+  80:	fff5c703          	lbu	a4,-1(a1)
-+  84:	fee78fa3          	sb	a4,-1(a5)
-+  88:	fb75                	bnez	a4,7c <strcpy+0x8>
-     ;
-   return os;
- }
--  8e:	6422                	ld	s0,8(sp)
--  90:	0141                	addi	sp,sp,16
--  92:	8082                	ret
-+  8a:	6422                	ld	s0,8(sp)
-+  8c:	0141                	add	sp,sp,16
-+  8e:	8082                	ret
- 
--0000000000000094 <strcmp>:
-+0000000000000090 <strcmp>:
- 
- int
- strcmp(const char *p, const char *q)
- {
--  94:	1141                	addi	sp,sp,-16
--  96:	e422                	sd	s0,8(sp)
--  98:	0800                	addi	s0,sp,16
-+  90:	1141                	add	sp,sp,-16
-+  92:	e422                	sd	s0,8(sp)
-+  94:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
--  9a:	00054783          	lbu	a5,0(a0)
--  9e:	cb91                	beqz	a5,b2 <strcmp+0x1e>
--  a0:	0005c703          	lbu	a4,0(a1)
--  a4:	00f71763          	bne	a4,a5,b2 <strcmp+0x1e>
-+  96:	00054783          	lbu	a5,0(a0)
-+  9a:	cb91                	beqz	a5,ae <strcmp+0x1e>
-+  9c:	0005c703          	lbu	a4,0(a1)
-+  a0:	00f71763          	bne	a4,a5,ae <strcmp+0x1e>
-     p++, q++;
--  a8:	0505                	addi	a0,a0,1
--  aa:	0585                	addi	a1,a1,1
-+  a4:	0505                	add	a0,a0,1
-+  a6:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
--  ac:	00054783          	lbu	a5,0(a0)
--  b0:	fbe5                	bnez	a5,a0 <strcmp+0xc>
-+  a8:	00054783          	lbu	a5,0(a0)
-+  ac:	fbe5                	bnez	a5,9c <strcmp+0xc>
-   return (uchar)*p - (uchar)*q;
--  b2:	0005c503          	lbu	a0,0(a1)
-+  ae:	0005c503          	lbu	a0,0(a1)
- }
--  b6:	40a7853b          	subw	a0,a5,a0
--  ba:	6422                	ld	s0,8(sp)
--  bc:	0141                	addi	sp,sp,16
--  be:	8082                	ret
-+  b2:	40a7853b          	subw	a0,a5,a0
-+  b6:	6422                	ld	s0,8(sp)
-+  b8:	0141                	add	sp,sp,16
-+  ba:	8082                	ret
- 
--00000000000000c0 <strlen>:
-+00000000000000bc <strlen>:
- 
- uint
- strlen(const char *s)
- {
--  c0:	1141                	addi	sp,sp,-16
--  c2:	e422                	sd	s0,8(sp)
--  c4:	0800                	addi	s0,sp,16
-+  bc:	1141                	add	sp,sp,-16
-+  be:	e422                	sd	s0,8(sp)
-+  c0:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
--  c6:	00054783          	lbu	a5,0(a0)
--  ca:	cf91                	beqz	a5,e6 <strlen+0x26>
--  cc:	0505                	addi	a0,a0,1
--  ce:	87aa                	mv	a5,a0
--  d0:	86be                	mv	a3,a5
--  d2:	0785                	addi	a5,a5,1
--  d4:	fff7c703          	lbu	a4,-1(a5)
--  d8:	ff65                	bnez	a4,d0 <strlen+0x10>
--  da:	40a6853b          	subw	a0,a3,a0
--  de:	2505                	addiw	a0,a0,1
-+  c2:	00054783          	lbu	a5,0(a0)
-+  c6:	cf91                	beqz	a5,e2 <strlen+0x26>
-+  c8:	0505                	add	a0,a0,1
-+  ca:	87aa                	mv	a5,a0
-+  cc:	86be                	mv	a3,a5
-+  ce:	0785                	add	a5,a5,1
-+  d0:	fff7c703          	lbu	a4,-1(a5)
-+  d4:	ff65                	bnez	a4,cc <strlen+0x10>
-+  d6:	40a6853b          	subw	a0,a3,a0
-+  da:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
--  e0:	6422                	ld	s0,8(sp)
--  e2:	0141                	addi	sp,sp,16
--  e4:	8082                	ret
-+  dc:	6422                	ld	s0,8(sp)
-+  de:	0141                	add	sp,sp,16
-+  e0:	8082                	ret
-   for(n = 0; s[n]; n++)
--  e6:	4501                	li	a0,0
--  e8:	bfe5                	j	e0 <strlen+0x20>
-+  e2:	4501                	li	a0,0
-+  e4:	bfe5                	j	dc <strlen+0x20>
- 
--00000000000000ea <memset>:
-+00000000000000e6 <memset>:
- 
- void*
- memset(void *dst, int c, uint n)
- {
--  ea:	1141                	addi	sp,sp,-16
--  ec:	e422                	sd	s0,8(sp)
--  ee:	0800                	addi	s0,sp,16
-+  e6:	1141                	add	sp,sp,-16
-+  e8:	e422                	sd	s0,8(sp)
-+  ea:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
--  f0:	ca19                	beqz	a2,106 <memset+0x1c>
--  f2:	87aa                	mv	a5,a0
--  f4:	1602                	slli	a2,a2,0x20
--  f6:	9201                	srli	a2,a2,0x20
--  f8:	00a60733          	add	a4,a2,a0
-+  ec:	ca19                	beqz	a2,102 <memset+0x1c>
-+  ee:	87aa                	mv	a5,a0
-+  f0:	1602                	sll	a2,a2,0x20
-+  f2:	9201                	srl	a2,a2,0x20
-+  f4:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
--  fc:	00b78023          	sb	a1,0(a5)
-+  f8:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
-- 100:	0785                	addi	a5,a5,1
-- 102:	fee79de3          	bne	a5,a4,fc <memset+0x12>
-+  fc:	0785                	add	a5,a5,1
-+  fe:	fee79de3          	bne	a5,a4,f8 <memset+0x12>
-   }
-   return dst;
- }
-- 106:	6422                	ld	s0,8(sp)
-- 108:	0141                	addi	sp,sp,16
-- 10a:	8082                	ret
-+ 102:	6422                	ld	s0,8(sp)
-+ 104:	0141                	add	sp,sp,16
-+ 106:	8082                	ret
- 
--000000000000010c <strchr>:
-+0000000000000108 <strchr>:
- 
- char*
- strchr(const char *s, char c)
- {
-- 10c:	1141                	addi	sp,sp,-16
-- 10e:	e422                	sd	s0,8(sp)
-- 110:	0800                	addi	s0,sp,16
-+ 108:	1141                	add	sp,sp,-16
-+ 10a:	e422                	sd	s0,8(sp)
-+ 10c:	0800                	add	s0,sp,16
-   for(; *s; s++)
-- 112:	00054783          	lbu	a5,0(a0)
-- 116:	cb99                	beqz	a5,12c <strchr+0x20>
-+ 10e:	00054783          	lbu	a5,0(a0)
-+ 112:	cb99                	beqz	a5,128 <strchr+0x20>
-     if(*s == c)
-- 118:	00f58763          	beq	a1,a5,126 <strchr+0x1a>
-+ 114:	00f58763          	beq	a1,a5,122 <strchr+0x1a>
-   for(; *s; s++)
-- 11c:	0505                	addi	a0,a0,1
-- 11e:	00054783          	lbu	a5,0(a0)
-- 122:	fbfd                	bnez	a5,118 <strchr+0xc>
-+ 118:	0505                	add	a0,a0,1
-+ 11a:	00054783          	lbu	a5,0(a0)
-+ 11e:	fbfd                	bnez	a5,114 <strchr+0xc>
-       return (char*)s;
-   return 0;
-- 124:	4501                	li	a0,0
-+ 120:	4501                	li	a0,0
- }
-- 126:	6422                	ld	s0,8(sp)
-- 128:	0141                	addi	sp,sp,16
-- 12a:	8082                	ret
-+ 122:	6422                	ld	s0,8(sp)
-+ 124:	0141                	add	sp,sp,16
-+ 126:	8082                	ret
-   return 0;
-- 12c:	4501                	li	a0,0
-- 12e:	bfe5                	j	126 <strchr+0x1a>
-+ 128:	4501                	li	a0,0
-+ 12a:	bfe5                	j	122 <strchr+0x1a>
- 
--0000000000000130 <gets>:
-+000000000000012c <gets>:
- 
- char*
- gets(char *buf, int max)
- {
-- 130:	711d                	addi	sp,sp,-96
-- 132:	ec86                	sd	ra,88(sp)
-- 134:	e8a2                	sd	s0,80(sp)
-- 136:	e4a6                	sd	s1,72(sp)
-- 138:	e0ca                	sd	s2,64(sp)
-- 13a:	fc4e                	sd	s3,56(sp)
-- 13c:	f852                	sd	s4,48(sp)
-- 13e:	f456                	sd	s5,40(sp)
-- 140:	f05a                	sd	s6,32(sp)
-- 142:	ec5e                	sd	s7,24(sp)
-- 144:	1080                	addi	s0,sp,96
-- 146:	8baa                	mv	s7,a0
-- 148:	8a2e                	mv	s4,a1
-+ 12c:	711d                	add	sp,sp,-96
-+ 12e:	ec86                	sd	ra,88(sp)
-+ 130:	e8a2                	sd	s0,80(sp)
-+ 132:	e4a6                	sd	s1,72(sp)
-+ 134:	e0ca                	sd	s2,64(sp)
-+ 136:	fc4e                	sd	s3,56(sp)
-+ 138:	f852                	sd	s4,48(sp)
-+ 13a:	f456                	sd	s5,40(sp)
-+ 13c:	f05a                	sd	s6,32(sp)
-+ 13e:	ec5e                	sd	s7,24(sp)
-+ 140:	1080                	add	s0,sp,96
-+ 142:	8baa                	mv	s7,a0
-+ 144:	8a2e                	mv	s4,a1
-   int i, cc;
-   char c;
- 
-   for(i=0; i+1 < max; ){
-- 14a:	892a                	mv	s2,a0
-- 14c:	4481                	li	s1,0
-+ 146:	892a                	mv	s2,a0
-+ 148:	4481                	li	s1,0
-     cc = read(0, &c, 1);
-     if(cc < 1)
-       break;
-     buf[i++] = c;
-     if(c == '\n' || c == '\r')
-- 14e:	4aa9                	li	s5,10
-- 150:	4b35                	li	s6,13
-+ 14a:	4aa9                	li	s5,10
-+ 14c:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
-- 152:	89a6                	mv	s3,s1
-- 154:	2485                	addiw	s1,s1,1
-- 156:	0344d663          	bge	s1,s4,182 <gets+0x52>
-+ 14e:	89a6                	mv	s3,s1
-+ 150:	2485                	addw	s1,s1,1
-+ 152:	0344d663          	bge	s1,s4,17e <gets+0x52>
-     cc = read(0, &c, 1);
-- 15a:	4605                	li	a2,1
-- 15c:	faf40593          	addi	a1,s0,-81
-- 160:	4501                	li	a0,0
-- 162:	186000ef          	jal	2e8 <read>
-+ 156:	4605                	li	a2,1
-+ 158:	faf40593          	add	a1,s0,-81
-+ 15c:	4501                	li	a0,0
-+ 15e:	186000ef          	jal	2e4 <read>
-     if(cc < 1)
-- 166:	00a05e63          	blez	a0,182 <gets+0x52>
-+ 162:	00a05e63          	blez	a0,17e <gets+0x52>
-     buf[i++] = c;
-- 16a:	faf44783          	lbu	a5,-81(s0)
-- 16e:	00f90023          	sb	a5,0(s2)
-+ 166:	faf44783          	lbu	a5,-81(s0)
-+ 16a:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
-- 172:	01578763          	beq	a5,s5,180 <gets+0x50>
-- 176:	0905                	addi	s2,s2,1
-- 178:	fd679de3          	bne	a5,s6,152 <gets+0x22>
--    buf[i++] = c;
-+ 16e:	01578763          	beq	a5,s5,17c <gets+0x50>
-+ 172:	0905                	add	s2,s2,1
-+ 174:	fd679de3          	bne	a5,s6,14e <gets+0x22>
-+  for(i=0; i+1 < max; ){
-+ 178:	89a6                	mv	s3,s1
-+ 17a:	a011                	j	17e <gets+0x52>
-  17c:	89a6                	mv	s3,s1
-- 17e:	a011                	j	182 <gets+0x52>
-- 180:	89a6                	mv	s3,s1
-       break;
-   }
-   buf[i] = '\0';
-- 182:	99de                	add	s3,s3,s7
-- 184:	00098023          	sb	zero,0(s3)
-+ 17e:	99de                	add	s3,s3,s7
-+ 180:	00098023          	sb	zero,0(s3)
-   return buf;
- }
-- 188:	855e                	mv	a0,s7
-- 18a:	60e6                	ld	ra,88(sp)
-- 18c:	6446                	ld	s0,80(sp)
-- 18e:	64a6                	ld	s1,72(sp)
-- 190:	6906                	ld	s2,64(sp)
-- 192:	79e2                	ld	s3,56(sp)
-- 194:	7a42                	ld	s4,48(sp)
-- 196:	7aa2                	ld	s5,40(sp)
-- 198:	7b02                	ld	s6,32(sp)
-- 19a:	6be2                	ld	s7,24(sp)
-- 19c:	6125                	addi	sp,sp,96
-- 19e:	8082                	ret
--
--00000000000001a0 <stat>:
-+ 184:	855e                	mv	a0,s7
-+ 186:	60e6                	ld	ra,88(sp)
-+ 188:	6446                	ld	s0,80(sp)
-+ 18a:	64a6                	ld	s1,72(sp)
-+ 18c:	6906                	ld	s2,64(sp)
-+ 18e:	79e2                	ld	s3,56(sp)
-+ 190:	7a42                	ld	s4,48(sp)
-+ 192:	7aa2                	ld	s5,40(sp)
-+ 194:	7b02                	ld	s6,32(sp)
-+ 196:	6be2                	ld	s7,24(sp)
-+ 198:	6125                	add	sp,sp,96
-+ 19a:	8082                	ret
-+
-+000000000000019c <stat>:
- 
- int
- stat(const char *n, struct stat *st)
- {
-- 1a0:	1101                	addi	sp,sp,-32
-- 1a2:	ec06                	sd	ra,24(sp)
-- 1a4:	e822                	sd	s0,16(sp)
-- 1a6:	e04a                	sd	s2,0(sp)
-- 1a8:	1000                	addi	s0,sp,32
-- 1aa:	892e                	mv	s2,a1
-+ 19c:	1101                	add	sp,sp,-32
-+ 19e:	ec06                	sd	ra,24(sp)
-+ 1a0:	e822                	sd	s0,16(sp)
-+ 1a2:	e426                	sd	s1,8(sp)
-+ 1a4:	e04a                	sd	s2,0(sp)
-+ 1a6:	1000                	add	s0,sp,32
-+ 1a8:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
-- 1ac:	4581                	li	a1,0
-- 1ae:	162000ef          	jal	310 <open>
-+ 1aa:	4581                	li	a1,0
-+ 1ac:	160000ef          	jal	30c <open>
-   if(fd < 0)
-- 1b2:	02054263          	bltz	a0,1d6 <stat+0x36>
-- 1b6:	e426                	sd	s1,8(sp)
-- 1b8:	84aa                	mv	s1,a0
-+ 1b0:	02054163          	bltz	a0,1d2 <stat+0x36>
-+ 1b4:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
-- 1ba:	85ca                	mv	a1,s2
-- 1bc:	16c000ef          	jal	328 <fstat>
-- 1c0:	892a                	mv	s2,a0
-+ 1b6:	85ca                	mv	a1,s2
-+ 1b8:	16c000ef          	jal	324 <fstat>
-+ 1bc:	892a                	mv	s2,a0
-   close(fd);
-- 1c2:	8526                	mv	a0,s1
-- 1c4:	134000ef          	jal	2f8 <close>
-+ 1be:	8526                	mv	a0,s1
-+ 1c0:	134000ef          	jal	2f4 <close>
-   return r;
-- 1c8:	64a2                	ld	s1,8(sp)
- }
-- 1ca:	854a                	mv	a0,s2
-- 1cc:	60e2                	ld	ra,24(sp)
-- 1ce:	6442                	ld	s0,16(sp)
-- 1d0:	6902                	ld	s2,0(sp)
-- 1d2:	6105                	addi	sp,sp,32
-- 1d4:	8082                	ret
-+ 1c4:	854a                	mv	a0,s2
-+ 1c6:	60e2                	ld	ra,24(sp)
-+ 1c8:	6442                	ld	s0,16(sp)
-+ 1ca:	64a2                	ld	s1,8(sp)
-+ 1cc:	6902                	ld	s2,0(sp)
-+ 1ce:	6105                	add	sp,sp,32
-+ 1d0:	8082                	ret
-     return -1;
-- 1d6:	597d                	li	s2,-1
-- 1d8:	bfcd                	j	1ca <stat+0x2a>
-+ 1d2:	597d                	li	s2,-1
-+ 1d4:	bfc5                	j	1c4 <stat+0x28>
- 
--00000000000001da <atoi>:
-+00000000000001d6 <atoi>:
- 
- int
- atoi(const char *s)
- {
-- 1da:	1141                	addi	sp,sp,-16
-- 1dc:	e422                	sd	s0,8(sp)
-- 1de:	0800                	addi	s0,sp,16
-+ 1d6:	1141                	add	sp,sp,-16
-+ 1d8:	e422                	sd	s0,8(sp)
-+ 1da:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
-- 1e0:	00054683          	lbu	a3,0(a0)
-- 1e4:	fd06879b          	addiw	a5,a3,-48
-- 1e8:	0ff7f793          	zext.b	a5,a5
-- 1ec:	4625                	li	a2,9
-- 1ee:	02f66863          	bltu	a2,a5,21e <atoi+0x44>
-- 1f2:	872a                	mv	a4,a0
-+ 1dc:	00054683          	lbu	a3,0(a0)
-+ 1e0:	fd06879b          	addw	a5,a3,-48
-+ 1e4:	0ff7f793          	zext.b	a5,a5
-+ 1e8:	4625                	li	a2,9
-+ 1ea:	02f66863          	bltu	a2,a5,21a <atoi+0x44>
-+ 1ee:	872a                	mv	a4,a0
-   n = 0;
-- 1f4:	4501                	li	a0,0
-+ 1f0:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
-- 1f6:	0705                	addi	a4,a4,1
-- 1f8:	0025179b          	slliw	a5,a0,0x2
-- 1fc:	9fa9                	addw	a5,a5,a0
-- 1fe:	0017979b          	slliw	a5,a5,0x1
-- 202:	9fb5                	addw	a5,a5,a3
-- 204:	fd07851b          	addiw	a0,a5,-48
-+ 1f2:	0705                	add	a4,a4,1
-+ 1f4:	0025179b          	sllw	a5,a0,0x2
-+ 1f8:	9fa9                	addw	a5,a5,a0
-+ 1fa:	0017979b          	sllw	a5,a5,0x1
-+ 1fe:	9fb5                	addw	a5,a5,a3
-+ 200:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
-- 208:	00074683          	lbu	a3,0(a4)
-- 20c:	fd06879b          	addiw	a5,a3,-48
-- 210:	0ff7f793          	zext.b	a5,a5
-- 214:	fef671e3          	bgeu	a2,a5,1f6 <atoi+0x1c>
-+ 204:	00074683          	lbu	a3,0(a4)
-+ 208:	fd06879b          	addw	a5,a3,-48
-+ 20c:	0ff7f793          	zext.b	a5,a5
-+ 210:	fef671e3          	bgeu	a2,a5,1f2 <atoi+0x1c>
-   return n;
- }
-- 218:	6422                	ld	s0,8(sp)
-- 21a:	0141                	addi	sp,sp,16
-- 21c:	8082                	ret
-+ 214:	6422                	ld	s0,8(sp)
-+ 216:	0141                	add	sp,sp,16
-+ 218:	8082                	ret
-   n = 0;
-- 21e:	4501                	li	a0,0
-- 220:	bfe5                	j	218 <atoi+0x3e>
-+ 21a:	4501                	li	a0,0
-+ 21c:	bfe5                	j	214 <atoi+0x3e>
- 
--0000000000000222 <memmove>:
-+000000000000021e <memmove>:
- 
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
-- 222:	1141                	addi	sp,sp,-16
-- 224:	e422                	sd	s0,8(sp)
-- 226:	0800                	addi	s0,sp,16
-+ 21e:	1141                	add	sp,sp,-16
-+ 220:	e422                	sd	s0,8(sp)
-+ 222:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-   dst = vdst;
-   src = vsrc;
-   if (src > dst) {
-- 228:	02b57463          	bgeu	a0,a1,250 <memmove+0x2e>
-+ 224:	02b57463          	bgeu	a0,a1,24c <memmove+0x2e>
-     while(n-- > 0)
-- 22c:	00c05f63          	blez	a2,24a <memmove+0x28>
-- 230:	1602                	slli	a2,a2,0x20
-- 232:	9201                	srli	a2,a2,0x20
-- 234:	00c507b3          	add	a5,a0,a2
-+ 228:	00c05f63          	blez	a2,246 <memmove+0x28>
-+ 22c:	1602                	sll	a2,a2,0x20
-+ 22e:	9201                	srl	a2,a2,0x20
-+ 230:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
-- 238:	872a                	mv	a4,a0
-+ 234:	872a                	mv	a4,a0
-       *dst++ = *src++;
-- 23a:	0585                	addi	a1,a1,1
-- 23c:	0705                	addi	a4,a4,1
-- 23e:	fff5c683          	lbu	a3,-1(a1)
-- 242:	fed70fa3          	sb	a3,-1(a4)
-+ 236:	0585                	add	a1,a1,1
-+ 238:	0705                	add	a4,a4,1
-+ 23a:	fff5c683          	lbu	a3,-1(a1)
-+ 23e:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
-- 246:	fef71ae3          	bne	a4,a5,23a <memmove+0x18>
-+ 242:	fee79ae3          	bne	a5,a4,236 <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-   }
-   return vdst;
- }
-- 24a:	6422                	ld	s0,8(sp)
-- 24c:	0141                	addi	sp,sp,16
-- 24e:	8082                	ret
-+ 246:	6422                	ld	s0,8(sp)
-+ 248:	0141                	add	sp,sp,16
-+ 24a:	8082                	ret
-     dst += n;
-- 250:	00c50733          	add	a4,a0,a2
-+ 24c:	00c50733          	add	a4,a0,a2
-     src += n;
-- 254:	95b2                	add	a1,a1,a2
-+ 250:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
-- 256:	fec05ae3          	blez	a2,24a <memmove+0x28>
-- 25a:	fff6079b          	addiw	a5,a2,-1
-- 25e:	1782                	slli	a5,a5,0x20
-- 260:	9381                	srli	a5,a5,0x20
-- 262:	fff7c793          	not	a5,a5
-- 266:	97ba                	add	a5,a5,a4
-+ 252:	fec05ae3          	blez	a2,246 <memmove+0x28>
-+ 256:	fff6079b          	addw	a5,a2,-1
-+ 25a:	1782                	sll	a5,a5,0x20
-+ 25c:	9381                	srl	a5,a5,0x20
-+ 25e:	fff7c793          	not	a5,a5
-+ 262:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
-- 268:	15fd                	addi	a1,a1,-1
-- 26a:	177d                	addi	a4,a4,-1
-- 26c:	0005c683          	lbu	a3,0(a1)
-- 270:	00d70023          	sb	a3,0(a4)
-+ 264:	15fd                	add	a1,a1,-1
-+ 266:	177d                	add	a4,a4,-1
-+ 268:	0005c683          	lbu	a3,0(a1)
-+ 26c:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
-- 274:	fee79ae3          	bne	a5,a4,268 <memmove+0x46>
-- 278:	bfc9                	j	24a <memmove+0x28>
-+ 270:	fee79ae3          	bne	a5,a4,264 <memmove+0x46>
-+ 274:	bfc9                	j	246 <memmove+0x28>
- 
--000000000000027a <memcmp>:
-+0000000000000276 <memcmp>:
- 
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
-- 27a:	1141                	addi	sp,sp,-16
-- 27c:	e422                	sd	s0,8(sp)
-- 27e:	0800                	addi	s0,sp,16
-+ 276:	1141                	add	sp,sp,-16
-+ 278:	e422                	sd	s0,8(sp)
-+ 27a:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
-- 280:	ca05                	beqz	a2,2b0 <memcmp+0x36>
-- 282:	fff6069b          	addiw	a3,a2,-1
-- 286:	1682                	slli	a3,a3,0x20
-- 288:	9281                	srli	a3,a3,0x20
-- 28a:	0685                	addi	a3,a3,1
-- 28c:	96aa                	add	a3,a3,a0
-+ 27c:	ca05                	beqz	a2,2ac <memcmp+0x36>
-+ 27e:	fff6069b          	addw	a3,a2,-1
-+ 282:	1682                	sll	a3,a3,0x20
-+ 284:	9281                	srl	a3,a3,0x20
-+ 286:	0685                	add	a3,a3,1
-+ 288:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
-- 28e:	00054783          	lbu	a5,0(a0)
-- 292:	0005c703          	lbu	a4,0(a1)
-- 296:	00e79863          	bne	a5,a4,2a6 <memcmp+0x2c>
-+ 28a:	00054783          	lbu	a5,0(a0)
-+ 28e:	0005c703          	lbu	a4,0(a1)
-+ 292:	00e79863          	bne	a5,a4,2a2 <memcmp+0x2c>
-       return *p1 - *p2;
-     }
-     p1++;
-- 29a:	0505                	addi	a0,a0,1
-+ 296:	0505                	add	a0,a0,1
-     p2++;
-- 29c:	0585                	addi	a1,a1,1
-+ 298:	0585                	add	a1,a1,1
-   while (n-- > 0) {
-- 29e:	fed518e3          	bne	a0,a3,28e <memcmp+0x14>
-+ 29a:	fed518e3          	bne	a0,a3,28a <memcmp+0x14>
-   }
-   return 0;
-- 2a2:	4501                	li	a0,0
-- 2a4:	a019                	j	2aa <memcmp+0x30>
-+ 29e:	4501                	li	a0,0
-+ 2a0:	a019                	j	2a6 <memcmp+0x30>
-       return *p1 - *p2;
-- 2a6:	40e7853b          	subw	a0,a5,a4
-+ 2a2:	40e7853b          	subw	a0,a5,a4
- }
-- 2aa:	6422                	ld	s0,8(sp)
-- 2ac:	0141                	addi	sp,sp,16
-- 2ae:	8082                	ret
-+ 2a6:	6422                	ld	s0,8(sp)
-+ 2a8:	0141                	add	sp,sp,16
-+ 2aa:	8082                	ret
-   return 0;
-- 2b0:	4501                	li	a0,0
-- 2b2:	bfe5                	j	2aa <memcmp+0x30>
-+ 2ac:	4501                	li	a0,0
-+ 2ae:	bfe5                	j	2a6 <memcmp+0x30>
- 
--00000000000002b4 <memcpy>:
-+00000000000002b0 <memcpy>:
- 
- void *
- memcpy(void *dst, const void *src, uint n)
- {
-- 2b4:	1141                	addi	sp,sp,-16
-- 2b6:	e406                	sd	ra,8(sp)
-- 2b8:	e022                	sd	s0,0(sp)
-- 2ba:	0800                	addi	s0,sp,16
-+ 2b0:	1141                	add	sp,sp,-16
-+ 2b2:	e406                	sd	ra,8(sp)
-+ 2b4:	e022                	sd	s0,0(sp)
-+ 2b6:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
-- 2bc:	f67ff0ef          	jal	222 <memmove>
-+ 2b8:	f67ff0ef          	jal	21e <memmove>
- }
-- 2c0:	60a2                	ld	ra,8(sp)
-- 2c2:	6402                	ld	s0,0(sp)
-- 2c4:	0141                	addi	sp,sp,16
-- 2c6:	8082                	ret
-+ 2bc:	60a2                	ld	ra,8(sp)
-+ 2be:	6402                	ld	s0,0(sp)
-+ 2c0:	0141                	add	sp,sp,16
-+ 2c2:	8082                	ret
- 
--00000000000002c8 <fork>:
-+00000000000002c4 <fork>:
- # generated by usys.pl - do not edit
- #include "kernel/syscall.h"
- .global fork
- fork:
-  li a7, SYS_fork
-- 2c8:	4885                	li	a7,1
-+ 2c4:	4885                	li	a7,1
-  ecall
-- 2ca:	00000073          	ecall
-+ 2c6:	00000073          	ecall
-  ret
-- 2ce:	8082                	ret
-+ 2ca:	8082                	ret
- 
--00000000000002d0 <exit>:
-+00000000000002cc <exit>:
- .global exit
- exit:
-  li a7, SYS_exit
-- 2d0:	4889                	li	a7,2
-+ 2cc:	4889                	li	a7,2
-  ecall
-- 2d2:	00000073          	ecall
-+ 2ce:	00000073          	ecall
-  ret
-- 2d6:	8082                	ret
-+ 2d2:	8082                	ret
- 
--00000000000002d8 <wait>:
-+00000000000002d4 <wait>:
- .global wait
- wait:
-  li a7, SYS_wait
-- 2d8:	488d                	li	a7,3
-+ 2d4:	488d                	li	a7,3
-  ecall
-- 2da:	00000073          	ecall
-+ 2d6:	00000073          	ecall
-  ret
-- 2de:	8082                	ret
-+ 2da:	8082                	ret
- 
--00000000000002e0 <pipe>:
-+00000000000002dc <pipe>:
- .global pipe
- pipe:
-  li a7, SYS_pipe
-- 2e0:	4891                	li	a7,4
-+ 2dc:	4891                	li	a7,4
-  ecall
-- 2e2:	00000073          	ecall
-+ 2de:	00000073          	ecall
-  ret
-- 2e6:	8082                	ret
-+ 2e2:	8082                	ret
- 
--00000000000002e8 <read>:
-+00000000000002e4 <read>:
- .global read
- read:
-  li a7, SYS_read
-- 2e8:	4895                	li	a7,5
-+ 2e4:	4895                	li	a7,5
-  ecall
-- 2ea:	00000073          	ecall
-+ 2e6:	00000073          	ecall
-  ret
-- 2ee:	8082                	ret
-+ 2ea:	8082                	ret
- 
--00000000000002f0 <write>:
-+00000000000002ec <write>:
- .global write
- write:
-  li a7, SYS_write
-- 2f0:	48c1                	li	a7,16
-+ 2ec:	48c1                	li	a7,16
-  ecall
-- 2f2:	00000073          	ecall
-+ 2ee:	00000073          	ecall
-  ret
-- 2f6:	8082                	ret
-+ 2f2:	8082                	ret
- 
--00000000000002f8 <close>:
-+00000000000002f4 <close>:
- .global close
- close:
-  li a7, SYS_close
-- 2f8:	48d5                	li	a7,21
-+ 2f4:	48d5                	li	a7,21
-  ecall
-- 2fa:	00000073          	ecall
-+ 2f6:	00000073          	ecall
-  ret
-- 2fe:	8082                	ret
-+ 2fa:	8082                	ret
- 
--0000000000000300 <kill>:
-+00000000000002fc <kill>:
- .global kill
- kill:
-  li a7, SYS_kill
-- 300:	4899                	li	a7,6
-+ 2fc:	4899                	li	a7,6
-  ecall
-- 302:	00000073          	ecall
-+ 2fe:	00000073          	ecall
-  ret
-- 306:	8082                	ret
-+ 302:	8082                	ret
- 
--0000000000000308 <exec>:
-+0000000000000304 <exec>:
- .global exec
- exec:
-  li a7, SYS_exec
-- 308:	489d                	li	a7,7
-+ 304:	489d                	li	a7,7
-  ecall
-- 30a:	00000073          	ecall
-+ 306:	00000073          	ecall
-  ret
-- 30e:	8082                	ret
-+ 30a:	8082                	ret
- 
--0000000000000310 <open>:
-+000000000000030c <open>:
- .global open
- open:
-  li a7, SYS_open
-- 310:	48bd                	li	a7,15
-+ 30c:	48bd                	li	a7,15
-  ecall
-- 312:	00000073          	ecall
-+ 30e:	00000073          	ecall
-  ret
-- 316:	8082                	ret
-+ 312:	8082                	ret
- 
--0000000000000318 <mknod>:
-+0000000000000314 <mknod>:
- .global mknod
- mknod:
-  li a7, SYS_mknod
-- 318:	48c5                	li	a7,17
-+ 314:	48c5                	li	a7,17
-  ecall
-- 31a:	00000073          	ecall
-+ 316:	00000073          	ecall
-  ret
-- 31e:	8082                	ret
-+ 31a:	8082                	ret
- 
--0000000000000320 <unlink>:
-+000000000000031c <unlink>:
- .global unlink
- unlink:
-  li a7, SYS_unlink
-- 320:	48c9                	li	a7,18
-+ 31c:	48c9                	li	a7,18
-  ecall
-- 322:	00000073          	ecall
-+ 31e:	00000073          	ecall
-  ret
-- 326:	8082                	ret
-+ 322:	8082                	ret
- 
--0000000000000328 <fstat>:
-+0000000000000324 <fstat>:
- .global fstat
- fstat:
-  li a7, SYS_fstat
-- 328:	48a1                	li	a7,8
-+ 324:	48a1                	li	a7,8
-  ecall
-- 32a:	00000073          	ecall
-+ 326:	00000073          	ecall
-  ret
-- 32e:	8082                	ret
-+ 32a:	8082                	ret
- 
--0000000000000330 <link>:
-+000000000000032c <link>:
- .global link
- link:
-  li a7, SYS_link
-- 330:	48cd                	li	a7,19
-+ 32c:	48cd                	li	a7,19
-  ecall
-- 332:	00000073          	ecall
-+ 32e:	00000073          	ecall
-  ret
-- 336:	8082                	ret
-+ 332:	8082                	ret
- 
--0000000000000338 <mkdir>:
-+0000000000000334 <mkdir>:
- .global mkdir
- mkdir:
-  li a7, SYS_mkdir
-- 338:	48d1                	li	a7,20
-+ 334:	48d1                	li	a7,20
-  ecall
-- 33a:	00000073          	ecall
-+ 336:	00000073          	ecall
-  ret
-- 33e:	8082                	ret
-+ 33a:	8082                	ret
- 
--0000000000000340 <chdir>:
-+000000000000033c <chdir>:
- .global chdir
- chdir:
-  li a7, SYS_chdir
-- 340:	48a5                	li	a7,9
-+ 33c:	48a5                	li	a7,9
-  ecall
-- 342:	00000073          	ecall
-+ 33e:	00000073          	ecall
-  ret
-- 346:	8082                	ret
-+ 342:	8082                	ret
- 
--0000000000000348 <dup>:
-+0000000000000344 <dup>:
- .global dup
- dup:
-  li a7, SYS_dup
-- 348:	48a9                	li	a7,10
-+ 344:	48a9                	li	a7,10
-  ecall
-- 34a:	00000073          	ecall
-+ 346:	00000073          	ecall
-  ret
-- 34e:	8082                	ret
-+ 34a:	8082                	ret
- 
--0000000000000350 <getpid>:
-+000000000000034c <getpid>:
- .global getpid
- getpid:
-  li a7, SYS_getpid
-- 350:	48ad                	li	a7,11
-+ 34c:	48ad                	li	a7,11
-  ecall
-- 352:	00000073          	ecall
-+ 34e:	00000073          	ecall
-  ret
-- 356:	8082                	ret
-+ 352:	8082                	ret
- 
--0000000000000358 <sbrk>:
-+0000000000000354 <sbrk>:
- .global sbrk
- sbrk:
-  li a7, SYS_sbrk
-- 358:	48b1                	li	a7,12
-+ 354:	48b1                	li	a7,12
-  ecall
-- 35a:	00000073          	ecall
-+ 356:	00000073          	ecall
-  ret
-- 35e:	8082                	ret
-+ 35a:	8082                	ret
- 
--0000000000000360 <sleep>:
-+000000000000035c <sleep>:
- .global sleep
- sleep:
-  li a7, SYS_sleep
-- 360:	48b5                	li	a7,13
-+ 35c:	48b5                	li	a7,13
-  ecall
-- 362:	00000073          	ecall
-+ 35e:	00000073          	ecall
-  ret
-- 366:	8082                	ret
-+ 362:	8082                	ret
- 
--0000000000000368 <uptime>:
-+0000000000000364 <uptime>:
- .global uptime
- uptime:
-  li a7, SYS_uptime
-- 368:	48b9                	li	a7,14
-+ 364:	48b9                	li	a7,14
-  ecall
-- 36a:	00000073          	ecall
-+ 366:	00000073          	ecall
-  ret
-- 36e:	8082                	ret
-+ 36a:	8082                	ret
- 
--0000000000000370 <putc>:
-+000000000000036c <putc>:
- 
- static char digits[] = "0123456789ABCDEF";
- 
- static void
- putc(int fd, char c)
- {
-- 370:	1101                	addi	sp,sp,-32
-- 372:	ec06                	sd	ra,24(sp)
-- 374:	e822                	sd	s0,16(sp)
-- 376:	1000                	addi	s0,sp,32
-- 378:	feb407a3          	sb	a1,-17(s0)
-+ 36c:	1101                	add	sp,sp,-32
-+ 36e:	ec06                	sd	ra,24(sp)
-+ 370:	e822                	sd	s0,16(sp)
-+ 372:	1000                	add	s0,sp,32
-+ 374:	feb407a3          	sb	a1,-17(s0)
-   write(fd, &c, 1);
-- 37c:	4605                	li	a2,1
-- 37e:	fef40593          	addi	a1,s0,-17
-- 382:	f6fff0ef          	jal	2f0 <write>
-+ 378:	4605                	li	a2,1
-+ 37a:	fef40593          	add	a1,s0,-17
-+ 37e:	f6fff0ef          	jal	2ec <write>
- }
-- 386:	60e2                	ld	ra,24(sp)
-- 388:	6442                	ld	s0,16(sp)
-- 38a:	6105                	addi	sp,sp,32
-- 38c:	8082                	ret
-+ 382:	60e2                	ld	ra,24(sp)
-+ 384:	6442                	ld	s0,16(sp)
-+ 386:	6105                	add	sp,sp,32
-+ 388:	8082                	ret
- 
--000000000000038e <printint>:
-+000000000000038a <printint>:
- 
- static void
- printint(int fd, int xx, int base, int sgn)
- {
-- 38e:	7139                	addi	sp,sp,-64
-- 390:	fc06                	sd	ra,56(sp)
-- 392:	f822                	sd	s0,48(sp)
-- 394:	f426                	sd	s1,40(sp)
-- 396:	0080                	addi	s0,sp,64
-+ 38a:	7139                	add	sp,sp,-64
-+ 38c:	fc06                	sd	ra,56(sp)
-+ 38e:	f822                	sd	s0,48(sp)
-+ 390:	f426                	sd	s1,40(sp)
-+ 392:	f04a                	sd	s2,32(sp)
-+ 394:	ec4e                	sd	s3,24(sp)
-+ 396:	0080                	add	s0,sp,64
-  398:	84aa                	mv	s1,a0
-   char buf[16];
-   int i, neg;
-@@ -747,8 +747,8 @@ printint(int fd, int xx, int base, int sgn)
- 
-   neg = 0;
-   if(sgn && xx < 0){
-- 39a:	c299                	beqz	a3,3a0 <printint+0x12>
-- 39c:	0805c963          	bltz	a1,42e <printint+0xa0>
-+ 39a:	c299                	beqz	a3,3a0 <printint+0x16>
-+ 39c:	0805c763          	bltz	a1,42a <printint+0xa0>
-     neg = 1;
-     x = -xx;
-   } else {
-@@ -756,7 +756,7 @@ printint(int fd, int xx, int base, int sgn)
-  3a0:	2581                	sext.w	a1,a1
-   neg = 0;
-  3a2:	4881                	li	a7,0
-- 3a4:	fc040693          	addi	a3,s0,-64
-+ 3a4:	fc040693          	add	a3,s0,-64
-   }
- 
-   i = 0;
-@@ -765,149 +765,149 @@ printint(int fd, int xx, int base, int sgn)
-     buf[i++] = digits[x % base];
-  3aa:	2601                	sext.w	a2,a2
-  3ac:	00000517          	auipc	a0,0x0
-- 3b0:	53450513          	addi	a0,a0,1332 # 8e0 <digits>
-+ 3b0:	51450513          	add	a0,a0,1300 # 8c0 <digits>
-  3b4:	883a                	mv	a6,a4
-- 3b6:	2705                	addiw	a4,a4,1
-+ 3b6:	2705                	addw	a4,a4,1
-  3b8:	02c5f7bb          	remuw	a5,a1,a2
-- 3bc:	1782                	slli	a5,a5,0x20
-- 3be:	9381                	srli	a5,a5,0x20
-+ 3bc:	1782                	sll	a5,a5,0x20
-+ 3be:	9381                	srl	a5,a5,0x20
-  3c0:	97aa                	add	a5,a5,a0
-  3c2:	0007c783          	lbu	a5,0(a5)
-  3c6:	00f68023          	sb	a5,0(a3)
-   }while((x /= base) != 0);
-  3ca:	0005879b          	sext.w	a5,a1
-  3ce:	02c5d5bb          	divuw	a1,a1,a2
-- 3d2:	0685                	addi	a3,a3,1
-- 3d4:	fec7f0e3          	bgeu	a5,a2,3b4 <printint+0x26>
-+ 3d2:	0685                	add	a3,a3,1
-+ 3d4:	fec7f0e3          	bgeu	a5,a2,3b4 <printint+0x2a>
-   if(neg)
-- 3d8:	00088c63          	beqz	a7,3f0 <printint+0x62>
-+ 3d8:	00088c63          	beqz	a7,3f0 <printint+0x66>
-     buf[i++] = '-';
-- 3dc:	fd070793          	addi	a5,a4,-48
-+ 3dc:	fd070793          	add	a5,a4,-48
-  3e0:	00878733          	add	a4,a5,s0
-  3e4:	02d00793          	li	a5,45
-  3e8:	fef70823          	sb	a5,-16(a4)
-- 3ec:	0028071b          	addiw	a4,a6,2
-+ 3ec:	0028071b          	addw	a4,a6,2
- 
-   while(--i >= 0)
-- 3f0:	02e05a63          	blez	a4,424 <printint+0x96>
-- 3f4:	f04a                	sd	s2,32(sp)
-- 3f6:	ec4e                	sd	s3,24(sp)
-- 3f8:	fc040793          	addi	a5,s0,-64
-- 3fc:	00e78933          	add	s2,a5,a4
-- 400:	fff78993          	addi	s3,a5,-1
-- 404:	99ba                	add	s3,s3,a4
-- 406:	377d                	addiw	a4,a4,-1
-- 408:	1702                	slli	a4,a4,0x20
-- 40a:	9301                	srli	a4,a4,0x20
-- 40c:	40e989b3          	sub	s3,s3,a4
-+ 3f0:	02e05663          	blez	a4,41c <printint+0x92>
-+ 3f4:	fc040793          	add	a5,s0,-64
-+ 3f8:	00e78933          	add	s2,a5,a4
-+ 3fc:	fff78993          	add	s3,a5,-1
-+ 400:	99ba                	add	s3,s3,a4
-+ 402:	377d                	addw	a4,a4,-1
-+ 404:	1702                	sll	a4,a4,0x20
-+ 406:	9301                	srl	a4,a4,0x20
-+ 408:	40e989b3          	sub	s3,s3,a4
-     putc(fd, buf[i]);
-- 410:	fff94583          	lbu	a1,-1(s2)
-- 414:	8526                	mv	a0,s1
-- 416:	f5bff0ef          	jal	370 <putc>
-+ 40c:	fff94583          	lbu	a1,-1(s2)
-+ 410:	8526                	mv	a0,s1
-+ 412:	f5bff0ef          	jal	36c <putc>
-   while(--i >= 0)
-- 41a:	197d                	addi	s2,s2,-1
-- 41c:	ff391ae3          	bne	s2,s3,410 <printint+0x82>
-- 420:	7902                	ld	s2,32(sp)
-- 422:	69e2                	ld	s3,24(sp)
-+ 416:	197d                	add	s2,s2,-1
-+ 418:	ff391ae3          	bne	s2,s3,40c <printint+0x82>
- }
-- 424:	70e2                	ld	ra,56(sp)
-- 426:	7442                	ld	s0,48(sp)
-- 428:	74a2                	ld	s1,40(sp)
-- 42a:	6121                	addi	sp,sp,64
-- 42c:	8082                	ret
-+ 41c:	70e2                	ld	ra,56(sp)
-+ 41e:	7442                	ld	s0,48(sp)
-+ 420:	74a2                	ld	s1,40(sp)
-+ 422:	7902                	ld	s2,32(sp)
-+ 424:	69e2                	ld	s3,24(sp)
-+ 426:	6121                	add	sp,sp,64
-+ 428:	8082                	ret
-     x = -xx;
-- 42e:	40b005bb          	negw	a1,a1
-+ 42a:	40b005bb          	negw	a1,a1
-     neg = 1;
-- 432:	4885                	li	a7,1
-+ 42e:	4885                	li	a7,1
-     x = -xx;
-- 434:	bf85                	j	3a4 <printint+0x16>
-+ 430:	bf95                	j	3a4 <printint+0x1a>
- 
--0000000000000436 <vprintf>:
-+0000000000000432 <vprintf>:
- }
- 
- /* Print to the given fd. Only understands %d, %x, %p, %s. */
- void
- vprintf(int fd, const char *fmt, va_list ap)
- {
-- 436:	711d                	addi	sp,sp,-96
-- 438:	ec86                	sd	ra,88(sp)
-- 43a:	e8a2                	sd	s0,80(sp)
-- 43c:	e0ca                	sd	s2,64(sp)
-- 43e:	1080                	addi	s0,sp,96
-+ 432:	711d                	add	sp,sp,-96
-+ 434:	ec86                	sd	ra,88(sp)
-+ 436:	e8a2                	sd	s0,80(sp)
-+ 438:	e4a6                	sd	s1,72(sp)
-+ 43a:	e0ca                	sd	s2,64(sp)
-+ 43c:	fc4e                	sd	s3,56(sp)
-+ 43e:	f852                	sd	s4,48(sp)
-+ 440:	f456                	sd	s5,40(sp)
-+ 442:	f05a                	sd	s6,32(sp)
-+ 444:	ec5e                	sd	s7,24(sp)
-+ 446:	e862                	sd	s8,16(sp)
-+ 448:	e466                	sd	s9,8(sp)
-+ 44a:	e06a                	sd	s10,0(sp)
-+ 44c:	1080                	add	s0,sp,96
-   char *s;
-   int c0, c1, c2, i, state;
- 
-   state = 0;
-   for(i = 0; fmt[i]; i++){
-- 440:	0005c903          	lbu	s2,0(a1)
-- 444:	26090863          	beqz	s2,6b4 <vprintf+0x27e>
-- 448:	e4a6                	sd	s1,72(sp)
-- 44a:	fc4e                	sd	s3,56(sp)
-- 44c:	f852                	sd	s4,48(sp)
-- 44e:	f456                	sd	s5,40(sp)
-- 450:	f05a                	sd	s6,32(sp)
-- 452:	ec5e                	sd	s7,24(sp)
-- 454:	e862                	sd	s8,16(sp)
-- 456:	e466                	sd	s9,8(sp)
-- 458:	8b2a                	mv	s6,a0
-- 45a:	8a2e                	mv	s4,a1
-- 45c:	8bb2                	mv	s7,a2
-+ 44e:	0005c903          	lbu	s2,0(a1)
-+ 452:	24090763          	beqz	s2,6a0 <vprintf+0x26e>
-+ 456:	8b2a                	mv	s6,a0
-+ 458:	8a2e                	mv	s4,a1
-+ 45a:	8bb2                	mv	s7,a2
-   state = 0;
-- 45e:	4981                	li	s3,0
-+ 45c:	4981                	li	s3,0
-   for(i = 0; fmt[i]; i++){
-- 460:	4481                	li	s1,0
-- 462:	4701                	li	a4,0
-+ 45e:	4481                	li	s1,0
-+ 460:	4701                	li	a4,0
-       if(c0 == '%'){
-         state = '%';
-       } else {
-         putc(fd, c0);
-       }
-     } else if(state == '%'){
-- 464:	02500a93          	li	s5,37
-+ 462:	02500a93          	li	s5,37
-       c1 = c2 = 0;
-       if(c0) c1 = fmt[i+1] & 0xff;
-       if(c1) c2 = fmt[i+2] & 0xff;
-       if(c0 == 'd'){
-- 468:	06400c13          	li	s8,100
-+ 466:	06400c13          	li	s8,100
-         printint(fd, va_arg(ap, int), 10, 1);
-       } else if(c0 == 'l' && c1 == 'd'){
-- 46c:	06c00c93          	li	s9,108
-- 470:	a005                	j	490 <vprintf+0x5a>
-+ 46a:	06c00c93          	li	s9,108
-+ 46e:	a005                	j	48e <vprintf+0x5c>
-         putc(fd, c0);
-- 472:	85ca                	mv	a1,s2
-- 474:	855a                	mv	a0,s6
-- 476:	efbff0ef          	jal	370 <putc>
-- 47a:	a019                	j	480 <vprintf+0x4a>
-+ 470:	85ca                	mv	a1,s2
-+ 472:	855a                	mv	a0,s6
-+ 474:	ef9ff0ef          	jal	36c <putc>
-+ 478:	a019                	j	47e <vprintf+0x4c>
-     } else if(state == '%'){
-- 47c:	03598263          	beq	s3,s5,4a0 <vprintf+0x6a>
-+ 47a:	03598263          	beq	s3,s5,49e <vprintf+0x6c>
-   for(i = 0; fmt[i]; i++){
-- 480:	2485                	addiw	s1,s1,1
-- 482:	8726                	mv	a4,s1
-- 484:	009a07b3          	add	a5,s4,s1
-- 488:	0007c903          	lbu	s2,0(a5)
-- 48c:	20090c63          	beqz	s2,6a4 <vprintf+0x26e>
-+ 47e:	2485                	addw	s1,s1,1
-+ 480:	8726                	mv	a4,s1
-+ 482:	009a07b3          	add	a5,s4,s1
-+ 486:	0007c903          	lbu	s2,0(a5)
-+ 48a:	20090b63          	beqz	s2,6a0 <vprintf+0x26e>
-     c0 = fmt[i] & 0xff;
-- 490:	0009079b          	sext.w	a5,s2
-+ 48e:	0009079b          	sext.w	a5,s2
-     if(state == 0){
-- 494:	fe0994e3          	bnez	s3,47c <vprintf+0x46>
-+ 492:	fe0994e3          	bnez	s3,47a <vprintf+0x48>
-       if(c0 == '%'){
-- 498:	fd579de3          	bne	a5,s5,472 <vprintf+0x3c>
-+ 496:	fd579de3          	bne	a5,s5,470 <vprintf+0x3e>
-         state = '%';
-- 49c:	89be                	mv	s3,a5
-- 49e:	b7cd                	j	480 <vprintf+0x4a>
-+ 49a:	89be                	mv	s3,a5
-+ 49c:	b7cd                	j	47e <vprintf+0x4c>
-       if(c0) c1 = fmt[i+1] & 0xff;
-+ 49e:	c7c9                	beqz	a5,528 <vprintf+0xf6>
-  4a0:	00ea06b3          	add	a3,s4,a4
-  4a4:	0016c683          	lbu	a3,1(a3)
-       c1 = c2 = 0;
-  4a8:	8636                	mv	a2,a3
-       if(c1) c2 = fmt[i+2] & 0xff;
-- 4aa:	c681                	beqz	a3,4b2 <vprintf+0x7c>
-+ 4aa:	c681                	beqz	a3,4b2 <vprintf+0x80>
-  4ac:	9752                	add	a4,a4,s4
-  4ae:	00274603          	lbu	a2,2(a4)
-       if(c0 == 'd'){
-- 4b2:	03878f63          	beq	a5,s8,4f0 <vprintf+0xba>
-+ 4b2:	03878f63          	beq	a5,s8,4f0 <vprintf+0xbe>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 4b6:	05978963          	beq	a5,s9,508 <vprintf+0xd2>
-+ 4b6:	05978963          	beq	a5,s9,508 <vprintf+0xd6>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-@@ -915,7 +915,7 @@ vprintf(int fd, const char *fmt, va_list ap)
-         i += 2;
-       } else if(c0 == 'u'){
-  4ba:	07500713          	li	a4,117
-- 4be:	0ee78363          	beq	a5,a4,5a4 <vprintf+0x16e>
-+ 4be:	0ee78363          	beq	a5,a4,5a4 <vprintf+0x172>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-@@ -923,7 +923,7 @@ vprintf(int fd, const char *fmt, va_list ap)
-         i += 2;
-       } else if(c0 == 'x'){
-  4c2:	07800713          	li	a4,120
-- 4c6:	12e78563          	beq	a5,a4,5f0 <vprintf+0x1ba>
-+ 4c6:	12e78563          	beq	a5,a4,5f0 <vprintf+0x1be>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-@@ -931,22 +931,22 @@ vprintf(int fd, const char *fmt, va_list ap)
-         i += 2;
-       } else if(c0 == 'p'){
-  4ca:	07000713          	li	a4,112
-- 4ce:	14e78a63          	beq	a5,a4,622 <vprintf+0x1ec>
-+ 4ce:	14e78a63          	beq	a5,a4,622 <vprintf+0x1f0>
-         printptr(fd, va_arg(ap, uint64));
-       } else if(c0 == 's'){
-  4d2:	07300713          	li	a4,115
-- 4d6:	18e78a63          	beq	a5,a4,66a <vprintf+0x234>
-+ 4d6:	18e78863          	beq	a5,a4,666 <vprintf+0x234>
-         if((s = va_arg(ap, char*)) == 0)
-           s = "(null)";
-         for(; *s; s++)
-           putc(fd, *s);
-       } else if(c0 == '%'){
-  4da:	02500713          	li	a4,37
-- 4de:	04e79563          	bne	a5,a4,528 <vprintf+0xf2>
-+ 4de:	04e79563          	bne	a5,a4,528 <vprintf+0xf6>
-         putc(fd, '%');
-  4e2:	02500593          	li	a1,37
-  4e6:	855a                	mv	a0,s6
-- 4e8:	e89ff0ef          	jal	370 <putc>
-+ 4e8:	e85ff0ef          	jal	36c <putc>
-         /* Unknown % sequence.  Print it to draw attention. */
-         putc(fd, '%');
-         putc(fd, c);
-@@ -954,514 +954,502 @@ vprintf(int fd, const char *fmt, va_list ap)
- #endif
-       state = 0;
-  4ec:	4981                	li	s3,0
-- 4ee:	bf49                	j	480 <vprintf+0x4a>
-+ 4ee:	bf41                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 1);
-- 4f0:	008b8913          	addi	s2,s7,8
-+ 4f0:	008b8913          	add	s2,s7,8
-  4f4:	4685                	li	a3,1
-  4f6:	4629                	li	a2,10
-  4f8:	000ba583          	lw	a1,0(s7)
-  4fc:	855a                	mv	a0,s6
-- 4fe:	e91ff0ef          	jal	38e <printint>
-+ 4fe:	e8dff0ef          	jal	38a <printint>
-  502:	8bca                	mv	s7,s2
-       state = 0;
-  504:	4981                	li	s3,0
-- 506:	bfad                	j	480 <vprintf+0x4a>
-+ 506:	bfa5                	j	47e <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'd'){
-  508:	06400793          	li	a5,100
-- 50c:	02f68963          	beq	a3,a5,53e <vprintf+0x108>
-+ 50c:	02f68963          	beq	a3,a5,53e <vprintf+0x10c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-  510:	06c00793          	li	a5,108
-- 514:	04f68263          	beq	a3,a5,558 <vprintf+0x122>
-+ 514:	04f68263          	beq	a3,a5,558 <vprintf+0x126>
-       } else if(c0 == 'l' && c1 == 'u'){
-  518:	07500793          	li	a5,117
-- 51c:	0af68063          	beq	a3,a5,5bc <vprintf+0x186>
-+ 51c:	0af68063          	beq	a3,a5,5bc <vprintf+0x18a>
-       } else if(c0 == 'l' && c1 == 'x'){
-  520:	07800793          	li	a5,120
-- 524:	0ef68263          	beq	a3,a5,608 <vprintf+0x1d2>
-+ 524:	0ef68263          	beq	a3,a5,608 <vprintf+0x1d6>
-         putc(fd, '%');
-  528:	02500593          	li	a1,37
-  52c:	855a                	mv	a0,s6
-- 52e:	e43ff0ef          	jal	370 <putc>
-+ 52e:	e3fff0ef          	jal	36c <putc>
-         putc(fd, c0);
-  532:	85ca                	mv	a1,s2
-  534:	855a                	mv	a0,s6
-- 536:	e3bff0ef          	jal	370 <putc>
-+ 536:	e37ff0ef          	jal	36c <putc>
-       state = 0;
-  53a:	4981                	li	s3,0
-- 53c:	b791                	j	480 <vprintf+0x4a>
-+ 53c:	b789                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 53e:	008b8913          	addi	s2,s7,8
-+ 53e:	008b8913          	add	s2,s7,8
-  542:	4685                	li	a3,1
-  544:	4629                	li	a2,10
-  546:	000ba583          	lw	a1,0(s7)
-  54a:	855a                	mv	a0,s6
-- 54c:	e43ff0ef          	jal	38e <printint>
-+ 54c:	e3fff0ef          	jal	38a <printint>
-         i += 1;
-- 550:	2485                	addiw	s1,s1,1
-+ 550:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 1);
-  552:	8bca                	mv	s7,s2
-       state = 0;
-  554:	4981                	li	s3,0
-         i += 1;
-- 556:	b72d                	j	480 <vprintf+0x4a>
-+ 556:	b725                	j	47e <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-  558:	06400793          	li	a5,100
-- 55c:	02f60763          	beq	a2,a5,58a <vprintf+0x154>
-+ 55c:	02f60763          	beq	a2,a5,58a <vprintf+0x158>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-  560:	07500793          	li	a5,117
-- 564:	06f60963          	beq	a2,a5,5d6 <vprintf+0x1a0>
-+ 564:	06f60963          	beq	a2,a5,5d6 <vprintf+0x1a4>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-  568:	07800793          	li	a5,120
-- 56c:	faf61ee3          	bne	a2,a5,528 <vprintf+0xf2>
-+ 56c:	faf61ee3          	bne	a2,a5,528 <vprintf+0xf6>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 570:	008b8913          	addi	s2,s7,8
-+ 570:	008b8913          	add	s2,s7,8
-  574:	4681                	li	a3,0
-  576:	4641                	li	a2,16
-  578:	000ba583          	lw	a1,0(s7)
-  57c:	855a                	mv	a0,s6
-- 57e:	e11ff0ef          	jal	38e <printint>
-+ 57e:	e0dff0ef          	jal	38a <printint>
-         i += 2;
-- 582:	2489                	addiw	s1,s1,2
-+ 582:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 16, 0);
-  584:	8bca                	mv	s7,s2
-       state = 0;
-  586:	4981                	li	s3,0
-         i += 2;
-- 588:	bde5                	j	480 <vprintf+0x4a>
-+ 588:	bddd                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 58a:	008b8913          	addi	s2,s7,8
-+ 58a:	008b8913          	add	s2,s7,8
-  58e:	4685                	li	a3,1
-  590:	4629                	li	a2,10
-  592:	000ba583          	lw	a1,0(s7)
-  596:	855a                	mv	a0,s6
-- 598:	df7ff0ef          	jal	38e <printint>
-+ 598:	df3ff0ef          	jal	38a <printint>
-         i += 2;
-- 59c:	2489                	addiw	s1,s1,2
-+ 59c:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 1);
-  59e:	8bca                	mv	s7,s2
-       state = 0;
-  5a0:	4981                	li	s3,0
-         i += 2;
-- 5a2:	bdf9                	j	480 <vprintf+0x4a>
-+ 5a2:	bdf1                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 0);
-- 5a4:	008b8913          	addi	s2,s7,8
-+ 5a4:	008b8913          	add	s2,s7,8
-  5a8:	4681                	li	a3,0
-  5aa:	4629                	li	a2,10
-  5ac:	000ba583          	lw	a1,0(s7)
-  5b0:	855a                	mv	a0,s6
-- 5b2:	dddff0ef          	jal	38e <printint>
-+ 5b2:	dd9ff0ef          	jal	38a <printint>
-  5b6:	8bca                	mv	s7,s2
-       state = 0;
-  5b8:	4981                	li	s3,0
-- 5ba:	b5d9                	j	480 <vprintf+0x4a>
-+ 5ba:	b5d1                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 5bc:	008b8913          	addi	s2,s7,8
-+ 5bc:	008b8913          	add	s2,s7,8
-  5c0:	4681                	li	a3,0
-  5c2:	4629                	li	a2,10
-  5c4:	000ba583          	lw	a1,0(s7)
-  5c8:	855a                	mv	a0,s6
-- 5ca:	dc5ff0ef          	jal	38e <printint>
-+ 5ca:	dc1ff0ef          	jal	38a <printint>
-         i += 1;
-- 5ce:	2485                	addiw	s1,s1,1
-+ 5ce:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 0);
-  5d0:	8bca                	mv	s7,s2
-       state = 0;
-  5d2:	4981                	li	s3,0
-         i += 1;
-- 5d4:	b575                	j	480 <vprintf+0x4a>
-+ 5d4:	b56d                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 5d6:	008b8913          	addi	s2,s7,8
-+ 5d6:	008b8913          	add	s2,s7,8
-  5da:	4681                	li	a3,0
-  5dc:	4629                	li	a2,10
-  5de:	000ba583          	lw	a1,0(s7)
-  5e2:	855a                	mv	a0,s6
-- 5e4:	dabff0ef          	jal	38e <printint>
-+ 5e4:	da7ff0ef          	jal	38a <printint>
-         i += 2;
-- 5e8:	2489                	addiw	s1,s1,2
-+ 5e8:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 0);
-  5ea:	8bca                	mv	s7,s2
-       state = 0;
-  5ec:	4981                	li	s3,0
-         i += 2;
-- 5ee:	bd49                	j	480 <vprintf+0x4a>
-+ 5ee:	bd41                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 16, 0);
-- 5f0:	008b8913          	addi	s2,s7,8
-+ 5f0:	008b8913          	add	s2,s7,8
-  5f4:	4681                	li	a3,0
-  5f6:	4641                	li	a2,16
-  5f8:	000ba583          	lw	a1,0(s7)
-  5fc:	855a                	mv	a0,s6
-- 5fe:	d91ff0ef          	jal	38e <printint>
-+ 5fe:	d8dff0ef          	jal	38a <printint>
-  602:	8bca                	mv	s7,s2
-       state = 0;
-  604:	4981                	li	s3,0
-- 606:	bdad                	j	480 <vprintf+0x4a>
-+ 606:	bda5                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 608:	008b8913          	addi	s2,s7,8
-+ 608:	008b8913          	add	s2,s7,8
-  60c:	4681                	li	a3,0
-  60e:	4641                	li	a2,16
-  610:	000ba583          	lw	a1,0(s7)
-  614:	855a                	mv	a0,s6
-- 616:	d79ff0ef          	jal	38e <printint>
-+ 616:	d75ff0ef          	jal	38a <printint>
-         i += 1;
-- 61a:	2485                	addiw	s1,s1,1
-+ 61a:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 16, 0);
-  61c:	8bca                	mv	s7,s2
-       state = 0;
-  61e:	4981                	li	s3,0
-         i += 1;
-- 620:	b585                	j	480 <vprintf+0x4a>
-- 622:	e06a                	sd	s10,0(sp)
-+ 620:	bdb9                	j	47e <vprintf+0x4c>
-         printptr(fd, va_arg(ap, uint64));
-- 624:	008b8d13          	addi	s10,s7,8
-- 628:	000bb983          	ld	s3,0(s7)
-+ 622:	008b8d13          	add	s10,s7,8
-+ 626:	000bb983          	ld	s3,0(s7)
-   putc(fd, '0');
-- 62c:	03000593          	li	a1,48
-- 630:	855a                	mv	a0,s6
-- 632:	d3fff0ef          	jal	370 <putc>
-+ 62a:	03000593          	li	a1,48
-+ 62e:	855a                	mv	a0,s6
-+ 630:	d3dff0ef          	jal	36c <putc>
-   putc(fd, 'x');
-- 636:	07800593          	li	a1,120
-- 63a:	855a                	mv	a0,s6
-- 63c:	d35ff0ef          	jal	370 <putc>
-- 640:	4941                	li	s2,16
-+ 634:	07800593          	li	a1,120
-+ 638:	855a                	mv	a0,s6
-+ 63a:	d33ff0ef          	jal	36c <putc>
-+ 63e:	4941                	li	s2,16
-     putc(fd, digits[x >> (sizeof(uint64) * 8 - 4)]);
-- 642:	00000b97          	auipc	s7,0x0
-- 646:	29eb8b93          	addi	s7,s7,670 # 8e0 <digits>
-- 64a:	03c9d793          	srli	a5,s3,0x3c
-- 64e:	97de                	add	a5,a5,s7
-- 650:	0007c583          	lbu	a1,0(a5)
-- 654:	855a                	mv	a0,s6
-- 656:	d1bff0ef          	jal	370 <putc>
-+ 640:	00000b97          	auipc	s7,0x0
-+ 644:	280b8b93          	add	s7,s7,640 # 8c0 <digits>
-+ 648:	03c9d793          	srl	a5,s3,0x3c
-+ 64c:	97de                	add	a5,a5,s7
-+ 64e:	0007c583          	lbu	a1,0(a5)
-+ 652:	855a                	mv	a0,s6
-+ 654:	d19ff0ef          	jal	36c <putc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
-- 65a:	0992                	slli	s3,s3,0x4
-- 65c:	397d                	addiw	s2,s2,-1
-- 65e:	fe0916e3          	bnez	s2,64a <vprintf+0x214>
-+ 658:	0992                	sll	s3,s3,0x4
-+ 65a:	397d                	addw	s2,s2,-1
-+ 65c:	fe0916e3          	bnez	s2,648 <vprintf+0x216>
-         printptr(fd, va_arg(ap, uint64));
-- 662:	8bea                	mv	s7,s10
-+ 660:	8bea                	mv	s7,s10
-       state = 0;
-- 664:	4981                	li	s3,0
-- 666:	6d02                	ld	s10,0(sp)
-- 668:	bd21                	j	480 <vprintf+0x4a>
-+ 662:	4981                	li	s3,0
-+ 664:	bd29                	j	47e <vprintf+0x4c>
-         if((s = va_arg(ap, char*)) == 0)
-- 66a:	008b8993          	addi	s3,s7,8
-- 66e:	000bb903          	ld	s2,0(s7)
-- 672:	00090f63          	beqz	s2,690 <vprintf+0x25a>
-+ 666:	008b8993          	add	s3,s7,8
-+ 66a:	000bb903          	ld	s2,0(s7)
-+ 66e:	00090f63          	beqz	s2,68c <vprintf+0x25a>
-         for(; *s; s++)
-- 676:	00094583          	lbu	a1,0(s2)
-- 67a:	c195                	beqz	a1,69e <vprintf+0x268>
-+ 672:	00094583          	lbu	a1,0(s2)
-+ 676:	c195                	beqz	a1,69a <vprintf+0x268>
-           putc(fd, *s);
-- 67c:	855a                	mv	a0,s6
-- 67e:	cf3ff0ef          	jal	370 <putc>
-+ 678:	855a                	mv	a0,s6
-+ 67a:	cf3ff0ef          	jal	36c <putc>
-         for(; *s; s++)
-- 682:	0905                	addi	s2,s2,1
-- 684:	00094583          	lbu	a1,0(s2)
-- 688:	f9f5                	bnez	a1,67c <vprintf+0x246>
-+ 67e:	0905                	add	s2,s2,1
-+ 680:	00094583          	lbu	a1,0(s2)
-+ 684:	f9f5                	bnez	a1,678 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-- 68a:	8bce                	mv	s7,s3
-+ 686:	8bce                	mv	s7,s3
-       state = 0;
-- 68c:	4981                	li	s3,0
-- 68e:	bbcd                	j	480 <vprintf+0x4a>
-+ 688:	4981                	li	s3,0
-+ 68a:	bbd5                	j	47e <vprintf+0x4c>
-           s = "(null)";
-- 690:	00000917          	auipc	s2,0x0
-- 694:	24890913          	addi	s2,s2,584 # 8d8 <malloc+0x13c>
-+ 68c:	00000917          	auipc	s2,0x0
-+ 690:	22c90913          	add	s2,s2,556 # 8b8 <malloc+0x11e>
-         for(; *s; s++)
-- 698:	02800593          	li	a1,40
-- 69c:	b7c5                	j	67c <vprintf+0x246>
-+ 694:	02800593          	li	a1,40
-+ 698:	b7c5                	j	678 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-- 69e:	8bce                	mv	s7,s3
-+ 69a:	8bce                	mv	s7,s3
-       state = 0;
-- 6a0:	4981                	li	s3,0
-- 6a2:	bbf9                	j	480 <vprintf+0x4a>
-- 6a4:	64a6                	ld	s1,72(sp)
-- 6a6:	79e2                	ld	s3,56(sp)
-- 6a8:	7a42                	ld	s4,48(sp)
-- 6aa:	7aa2                	ld	s5,40(sp)
-- 6ac:	7b02                	ld	s6,32(sp)
-- 6ae:	6be2                	ld	s7,24(sp)
-- 6b0:	6c42                	ld	s8,16(sp)
-- 6b2:	6ca2                	ld	s9,8(sp)
-+ 69c:	4981                	li	s3,0
-+ 69e:	b3c5                	j	47e <vprintf+0x4c>
-     }
-   }
- }
-- 6b4:	60e6                	ld	ra,88(sp)
-- 6b6:	6446                	ld	s0,80(sp)
-- 6b8:	6906                	ld	s2,64(sp)
-- 6ba:	6125                	addi	sp,sp,96
-- 6bc:	8082                	ret
--
--00000000000006be <fprintf>:
-+ 6a0:	60e6                	ld	ra,88(sp)
-+ 6a2:	6446                	ld	s0,80(sp)
-+ 6a4:	64a6                	ld	s1,72(sp)
-+ 6a6:	6906                	ld	s2,64(sp)
-+ 6a8:	79e2                	ld	s3,56(sp)
-+ 6aa:	7a42                	ld	s4,48(sp)
-+ 6ac:	7aa2                	ld	s5,40(sp)
-+ 6ae:	7b02                	ld	s6,32(sp)
-+ 6b0:	6be2                	ld	s7,24(sp)
-+ 6b2:	6c42                	ld	s8,16(sp)
-+ 6b4:	6ca2                	ld	s9,8(sp)
-+ 6b6:	6d02                	ld	s10,0(sp)
-+ 6b8:	6125                	add	sp,sp,96
-+ 6ba:	8082                	ret
-+
-+00000000000006bc <fprintf>:
- 
- void
- fprintf(int fd, const char *fmt, ...)
- {
-- 6be:	715d                	addi	sp,sp,-80
-- 6c0:	ec06                	sd	ra,24(sp)
-- 6c2:	e822                	sd	s0,16(sp)
-- 6c4:	1000                	addi	s0,sp,32
-- 6c6:	e010                	sd	a2,0(s0)
-- 6c8:	e414                	sd	a3,8(s0)
-- 6ca:	e818                	sd	a4,16(s0)
-- 6cc:	ec1c                	sd	a5,24(s0)
-- 6ce:	03043023          	sd	a6,32(s0)
-- 6d2:	03143423          	sd	a7,40(s0)
-+ 6bc:	715d                	add	sp,sp,-80
-+ 6be:	ec06                	sd	ra,24(sp)
-+ 6c0:	e822                	sd	s0,16(sp)
-+ 6c2:	1000                	add	s0,sp,32
-+ 6c4:	e010                	sd	a2,0(s0)
-+ 6c6:	e414                	sd	a3,8(s0)
-+ 6c8:	e818                	sd	a4,16(s0)
-+ 6ca:	ec1c                	sd	a5,24(s0)
-+ 6cc:	03043023          	sd	a6,32(s0)
-+ 6d0:	03143423          	sd	a7,40(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 6d6:	fe843423          	sd	s0,-24(s0)
-+ 6d4:	fe843423          	sd	s0,-24(s0)
-   vprintf(fd, fmt, ap);
-- 6da:	8622                	mv	a2,s0
-- 6dc:	d5bff0ef          	jal	436 <vprintf>
-+ 6d8:	8622                	mv	a2,s0
-+ 6da:	d59ff0ef          	jal	432 <vprintf>
- }
-- 6e0:	60e2                	ld	ra,24(sp)
-- 6e2:	6442                	ld	s0,16(sp)
-- 6e4:	6161                	addi	sp,sp,80
-- 6e6:	8082                	ret
-+ 6de:	60e2                	ld	ra,24(sp)
-+ 6e0:	6442                	ld	s0,16(sp)
-+ 6e2:	6161                	add	sp,sp,80
-+ 6e4:	8082                	ret
- 
--00000000000006e8 <printf>:
-+00000000000006e6 <printf>:
- 
- void
- printf(const char *fmt, ...)
- {
-- 6e8:	711d                	addi	sp,sp,-96
-- 6ea:	ec06                	sd	ra,24(sp)
-- 6ec:	e822                	sd	s0,16(sp)
-- 6ee:	1000                	addi	s0,sp,32
-- 6f0:	e40c                	sd	a1,8(s0)
-- 6f2:	e810                	sd	a2,16(s0)
-- 6f4:	ec14                	sd	a3,24(s0)
-- 6f6:	f018                	sd	a4,32(s0)
-- 6f8:	f41c                	sd	a5,40(s0)
-- 6fa:	03043823          	sd	a6,48(s0)
-- 6fe:	03143c23          	sd	a7,56(s0)
-+ 6e6:	711d                	add	sp,sp,-96
-+ 6e8:	ec06                	sd	ra,24(sp)
-+ 6ea:	e822                	sd	s0,16(sp)
-+ 6ec:	1000                	add	s0,sp,32
-+ 6ee:	e40c                	sd	a1,8(s0)
-+ 6f0:	e810                	sd	a2,16(s0)
-+ 6f2:	ec14                	sd	a3,24(s0)
-+ 6f4:	f018                	sd	a4,32(s0)
-+ 6f6:	f41c                	sd	a5,40(s0)
-+ 6f8:	03043823          	sd	a6,48(s0)
-+ 6fc:	03143c23          	sd	a7,56(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 702:	00840613          	addi	a2,s0,8
-- 706:	fec43423          	sd	a2,-24(s0)
-+ 700:	00840613          	add	a2,s0,8
-+ 704:	fec43423          	sd	a2,-24(s0)
-   vprintf(1, fmt, ap);
-- 70a:	85aa                	mv	a1,a0
-- 70c:	4505                	li	a0,1
-- 70e:	d29ff0ef          	jal	436 <vprintf>
-+ 708:	85aa                	mv	a1,a0
-+ 70a:	4505                	li	a0,1
-+ 70c:	d27ff0ef          	jal	432 <vprintf>
- }
-- 712:	60e2                	ld	ra,24(sp)
-- 714:	6442                	ld	s0,16(sp)
-- 716:	6125                	addi	sp,sp,96
-- 718:	8082                	ret
-+ 710:	60e2                	ld	ra,24(sp)
-+ 712:	6442                	ld	s0,16(sp)
-+ 714:	6125                	add	sp,sp,96
-+ 716:	8082                	ret
- 
--000000000000071a <free>:
-+0000000000000718 <free>:
- static Header base;
- static Header *freep;
- 
- void
- free(void *ap)
- {
-- 71a:	1141                	addi	sp,sp,-16
-- 71c:	e422                	sd	s0,8(sp)
-- 71e:	0800                	addi	s0,sp,16
-+ 718:	1141                	add	sp,sp,-16
-+ 71a:	e422                	sd	s0,8(sp)
-+ 71c:	0800                	add	s0,sp,16
-   Header *bp, *p;
- 
-   bp = (Header*)ap - 1;
-- 720:	ff050693          	addi	a3,a0,-16
-+ 71e:	ff050693          	add	a3,a0,-16
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 724:	00001797          	auipc	a5,0x1
-- 728:	8dc7b783          	ld	a5,-1828(a5) # 1000 <freep>
-- 72c:	a02d                	j	756 <free+0x3c>
-+ 722:	00001797          	auipc	a5,0x1
-+ 726:	8de7b783          	ld	a5,-1826(a5) # 1000 <freep>
-+ 72a:	a02d                	j	754 <free+0x3c>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-       break;
-   if(bp + bp->s.size == p->s.ptr){
-     bp->s.size += p->s.ptr->s.size;
-- 72e:	4618                	lw	a4,8(a2)
-- 730:	9f2d                	addw	a4,a4,a1
-- 732:	fee52c23          	sw	a4,-8(a0)
-+ 72c:	4618                	lw	a4,8(a2)
-+ 72e:	9f2d                	addw	a4,a4,a1
-+ 730:	fee52c23          	sw	a4,-8(a0)
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 736:	6398                	ld	a4,0(a5)
-- 738:	6310                	ld	a2,0(a4)
-- 73a:	a83d                	j	778 <free+0x5e>
-+ 734:	6398                	ld	a4,0(a5)
-+ 736:	6310                	ld	a2,0(a4)
-+ 738:	a83d                	j	776 <free+0x5e>
-   } else
-     bp->s.ptr = p->s.ptr;
-   if(p + p->s.size == bp){
-     p->s.size += bp->s.size;
-- 73c:	ff852703          	lw	a4,-8(a0)
-- 740:	9f31                	addw	a4,a4,a2
-- 742:	c798                	sw	a4,8(a5)
-+ 73a:	ff852703          	lw	a4,-8(a0)
-+ 73e:	9f31                	addw	a4,a4,a2
-+ 740:	c798                	sw	a4,8(a5)
-     p->s.ptr = bp->s.ptr;
-- 744:	ff053683          	ld	a3,-16(a0)
-- 748:	a091                	j	78c <free+0x72>
-+ 742:	ff053683          	ld	a3,-16(a0)
-+ 746:	a091                	j	78a <free+0x72>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 74a:	6398                	ld	a4,0(a5)
-- 74c:	00e7e463          	bltu	a5,a4,754 <free+0x3a>
-- 750:	00e6ea63          	bltu	a3,a4,764 <free+0x4a>
-+ 748:	6398                	ld	a4,0(a5)
-+ 74a:	00e7e463          	bltu	a5,a4,752 <free+0x3a>
-+ 74e:	00e6ea63          	bltu	a3,a4,762 <free+0x4a>
- {
-- 754:	87ba                	mv	a5,a4
-+ 752:	87ba                	mv	a5,a4
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 756:	fed7fae3          	bgeu	a5,a3,74a <free+0x30>
-- 75a:	6398                	ld	a4,0(a5)
-- 75c:	00e6e463          	bltu	a3,a4,764 <free+0x4a>
-+ 754:	fed7fae3          	bgeu	a5,a3,748 <free+0x30>
-+ 758:	6398                	ld	a4,0(a5)
-+ 75a:	00e6e463          	bltu	a3,a4,762 <free+0x4a>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 760:	fee7eae3          	bltu	a5,a4,754 <free+0x3a>
-+ 75e:	fee7eae3          	bltu	a5,a4,752 <free+0x3a>
-   if(bp + bp->s.size == p->s.ptr){
-- 764:	ff852583          	lw	a1,-8(a0)
-- 768:	6390                	ld	a2,0(a5)
-- 76a:	02059813          	slli	a6,a1,0x20
-- 76e:	01c85713          	srli	a4,a6,0x1c
-- 772:	9736                	add	a4,a4,a3
-- 774:	fae60de3          	beq	a2,a4,72e <free+0x14>
-+ 762:	ff852583          	lw	a1,-8(a0)
-+ 766:	6390                	ld	a2,0(a5)
-+ 768:	02059813          	sll	a6,a1,0x20
-+ 76c:	01c85713          	srl	a4,a6,0x1c
-+ 770:	9736                	add	a4,a4,a3
-+ 772:	fae60de3          	beq	a2,a4,72c <free+0x14>
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 778:	fec53823          	sd	a2,-16(a0)
-+ 776:	fec53823          	sd	a2,-16(a0)
-   if(p + p->s.size == bp){
-- 77c:	4790                	lw	a2,8(a5)
-- 77e:	02061593          	slli	a1,a2,0x20
-- 782:	01c5d713          	srli	a4,a1,0x1c
-- 786:	973e                	add	a4,a4,a5
-- 788:	fae68ae3          	beq	a3,a4,73c <free+0x22>
-+ 77a:	4790                	lw	a2,8(a5)
-+ 77c:	02061593          	sll	a1,a2,0x20
-+ 780:	01c5d713          	srl	a4,a1,0x1c
-+ 784:	973e                	add	a4,a4,a5
-+ 786:	fae68ae3          	beq	a3,a4,73a <free+0x22>
-     p->s.ptr = bp->s.ptr;
-- 78c:	e394                	sd	a3,0(a5)
-+ 78a:	e394                	sd	a3,0(a5)
-   } else
-     p->s.ptr = bp;
-   freep = p;
-- 78e:	00001717          	auipc	a4,0x1
-- 792:	86f73923          	sd	a5,-1934(a4) # 1000 <freep>
-+ 78c:	00001717          	auipc	a4,0x1
-+ 790:	86f73a23          	sd	a5,-1932(a4) # 1000 <freep>
- }
-- 796:	6422                	ld	s0,8(sp)
-- 798:	0141                	addi	sp,sp,16
-- 79a:	8082                	ret
-+ 794:	6422                	ld	s0,8(sp)
-+ 796:	0141                	add	sp,sp,16
-+ 798:	8082                	ret
- 
--000000000000079c <malloc>:
-+000000000000079a <malloc>:
-   return freep;
- }
- 
- void*
- malloc(uint nbytes)
- {
-- 79c:	7139                	addi	sp,sp,-64
-- 79e:	fc06                	sd	ra,56(sp)
-- 7a0:	f822                	sd	s0,48(sp)
-- 7a2:	f426                	sd	s1,40(sp)
-+ 79a:	7139                	add	sp,sp,-64
-+ 79c:	fc06                	sd	ra,56(sp)
-+ 79e:	f822                	sd	s0,48(sp)
-+ 7a0:	f426                	sd	s1,40(sp)
-+ 7a2:	f04a                	sd	s2,32(sp)
-  7a4:	ec4e                	sd	s3,24(sp)
-- 7a6:	0080                	addi	s0,sp,64
-+ 7a6:	e852                	sd	s4,16(sp)
-+ 7a8:	e456                	sd	s5,8(sp)
-+ 7aa:	e05a                	sd	s6,0(sp)
-+ 7ac:	0080                	add	s0,sp,64
-   Header *p, *prevp;
-   uint nunits;
- 
-   nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;
-- 7a8:	02051493          	slli	s1,a0,0x20
-- 7ac:	9081                	srli	s1,s1,0x20
-- 7ae:	04bd                	addi	s1,s1,15
-- 7b0:	8091                	srli	s1,s1,0x4
-- 7b2:	0014899b          	addiw	s3,s1,1
-- 7b6:	0485                	addi	s1,s1,1
-+ 7ae:	02051493          	sll	s1,a0,0x20
-+ 7b2:	9081                	srl	s1,s1,0x20
-+ 7b4:	04bd                	add	s1,s1,15
-+ 7b6:	8091                	srl	s1,s1,0x4
-+ 7b8:	0014899b          	addw	s3,s1,1
-+ 7bc:	0485                	add	s1,s1,1
-   if((prevp = freep) == 0){
-- 7b8:	00001517          	auipc	a0,0x1
-- 7bc:	84853503          	ld	a0,-1976(a0) # 1000 <freep>
-- 7c0:	c915                	beqz	a0,7f4 <malloc+0x58>
-+ 7be:	00001517          	auipc	a0,0x1
-+ 7c2:	84253503          	ld	a0,-1982(a0) # 1000 <freep>
-+ 7c6:	c515                	beqz	a0,7f2 <malloc+0x58>
-     base.s.ptr = freep = prevp = &base;
-     base.s.size = 0;
-   }
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 7c2:	611c                	ld	a5,0(a0)
-+ 7c8:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 7c4:	4798                	lw	a4,8(a5)
-- 7c6:	08977a63          	bgeu	a4,s1,85a <malloc+0xbe>
-- 7ca:	f04a                	sd	s2,32(sp)
-- 7cc:	e852                	sd	s4,16(sp)
-- 7ce:	e456                	sd	s5,8(sp)
-- 7d0:	e05a                	sd	s6,0(sp)
-+ 7ca:	4798                	lw	a4,8(a5)
-+ 7cc:	02977f63          	bgeu	a4,s1,80a <malloc+0x70>
-   if(nu < 4096)
-- 7d2:	8a4e                	mv	s4,s3
-- 7d4:	0009871b          	sext.w	a4,s3
-- 7d8:	6685                	lui	a3,0x1
-- 7da:	00d77363          	bgeu	a4,a3,7e0 <malloc+0x44>
-- 7de:	6a05                	lui	s4,0x1
-- 7e0:	000a0b1b          	sext.w	s6,s4
-+ 7d0:	8a4e                	mv	s4,s3
-+ 7d2:	0009871b          	sext.w	a4,s3
-+ 7d6:	6685                	lui	a3,0x1
-+ 7d8:	00d77363          	bgeu	a4,a3,7de <malloc+0x44>
-+ 7dc:	6a05                	lui	s4,0x1
-+ 7de:	000a0b1b          	sext.w	s6,s4
-   p = sbrk(nu * sizeof(Header));
-- 7e4:	004a1a1b          	slliw	s4,s4,0x4
-+ 7e2:	004a1a1b          	sllw	s4,s4,0x4
-         p->s.size = nunits;
-       }
-       freep = prevp;
-       return (void*)(p + 1);
-     }
-     if(p == freep)
-- 7e8:	00001917          	auipc	s2,0x1
-- 7ec:	81890913          	addi	s2,s2,-2024 # 1000 <freep>
-+ 7e6:	00001917          	auipc	s2,0x1
-+ 7ea:	81a90913          	add	s2,s2,-2022 # 1000 <freep>
-   if(p == (char*)-1)
-- 7f0:	5afd                	li	s5,-1
-- 7f2:	a081                	j	832 <malloc+0x96>
-- 7f4:	f04a                	sd	s2,32(sp)
-- 7f6:	e852                	sd	s4,16(sp)
-- 7f8:	e456                	sd	s5,8(sp)
-- 7fa:	e05a                	sd	s6,0(sp)
-+ 7ee:	5afd                	li	s5,-1
-+ 7f0:	a885                	j	860 <malloc+0xc6>
-     base.s.ptr = freep = prevp = &base;
-- 7fc:	00001797          	auipc	a5,0x1
-- 800:	81478793          	addi	a5,a5,-2028 # 1010 <base>
-- 804:	00000717          	auipc	a4,0x0
-- 808:	7ef73e23          	sd	a5,2044(a4) # 1000 <freep>
-- 80c:	e39c                	sd	a5,0(a5)
-+ 7f2:	00001797          	auipc	a5,0x1
-+ 7f6:	81e78793          	add	a5,a5,-2018 # 1010 <base>
-+ 7fa:	00001717          	auipc	a4,0x1
-+ 7fe:	80f73323          	sd	a5,-2042(a4) # 1000 <freep>
-+ 802:	e39c                	sd	a5,0(a5)
-     base.s.size = 0;
-- 80e:	0007a423          	sw	zero,8(a5)
-+ 804:	0007a423          	sw	zero,8(a5)
-     if(p->s.size >= nunits){
-- 812:	b7c1                	j	7d2 <malloc+0x36>
-+ 808:	b7e1                	j	7d0 <malloc+0x36>
-+      if(p->s.size == nunits)
-+ 80a:	02e48c63          	beq	s1,a4,842 <malloc+0xa8>
-+        p->s.size -= nunits;
-+ 80e:	4137073b          	subw	a4,a4,s3
-+ 812:	c798                	sw	a4,8(a5)
-+        p += p->s.size;
-+ 814:	02071693          	sll	a3,a4,0x20
-+ 818:	01c6d713          	srl	a4,a3,0x1c
-+ 81c:	97ba                	add	a5,a5,a4
-+        p->s.size = nunits;
-+ 81e:	0137a423          	sw	s3,8(a5)
-+      freep = prevp;
-+ 822:	00000717          	auipc	a4,0x0
-+ 826:	7ca73f23          	sd	a0,2014(a4) # 1000 <freep>
-+      return (void*)(p + 1);
-+ 82a:	01078513          	add	a0,a5,16
-+      if((p = morecore(nunits)) == 0)
-+        return 0;
-+  }
-+}
-+ 82e:	70e2                	ld	ra,56(sp)
-+ 830:	7442                	ld	s0,48(sp)
-+ 832:	74a2                	ld	s1,40(sp)
-+ 834:	7902                	ld	s2,32(sp)
-+ 836:	69e2                	ld	s3,24(sp)
-+ 838:	6a42                	ld	s4,16(sp)
-+ 83a:	6aa2                	ld	s5,8(sp)
-+ 83c:	6b02                	ld	s6,0(sp)
-+ 83e:	6121                	add	sp,sp,64
-+ 840:	8082                	ret
-         prevp->s.ptr = p->s.ptr;
-- 814:	6398                	ld	a4,0(a5)
-- 816:	e118                	sd	a4,0(a0)
-- 818:	a8a9                	j	872 <malloc+0xd6>
-+ 842:	6398                	ld	a4,0(a5)
-+ 844:	e118                	sd	a4,0(a0)
-+ 846:	bff1                	j	822 <malloc+0x88>
-   hp->s.size = nu;
-- 81a:	01652423          	sw	s6,8(a0)
-+ 848:	01652423          	sw	s6,8(a0)
-   free((void*)(hp + 1));
-- 81e:	0541                	addi	a0,a0,16
-- 820:	efbff0ef          	jal	71a <free>
-+ 84c:	0541                	add	a0,a0,16
-+ 84e:	ecbff0ef          	jal	718 <free>
-   return freep;
-- 824:	00093503          	ld	a0,0(s2)
-+ 852:	00093503          	ld	a0,0(s2)
-       if((p = morecore(nunits)) == 0)
-- 828:	c12d                	beqz	a0,88a <malloc+0xee>
-+ 856:	dd61                	beqz	a0,82e <malloc+0x94>
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 82a:	611c                	ld	a5,0(a0)
-+ 858:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 82c:	4798                	lw	a4,8(a5)
-- 82e:	02977263          	bgeu	a4,s1,852 <malloc+0xb6>
-+ 85a:	4798                	lw	a4,8(a5)
-+ 85c:	fa9777e3          	bgeu	a4,s1,80a <malloc+0x70>
-     if(p == freep)
-- 832:	00093703          	ld	a4,0(s2)
-- 836:	853e                	mv	a0,a5
-- 838:	fef719e3          	bne	a4,a5,82a <malloc+0x8e>
-+ 860:	00093703          	ld	a4,0(s2)
-+ 864:	853e                	mv	a0,a5
-+ 866:	fef719e3          	bne	a4,a5,858 <malloc+0xbe>
-   p = sbrk(nu * sizeof(Header));
-- 83c:	8552                	mv	a0,s4
-- 83e:	b1bff0ef          	jal	358 <sbrk>
-+ 86a:	8552                	mv	a0,s4
-+ 86c:	ae9ff0ef          	jal	354 <sbrk>
-   if(p == (char*)-1)
-- 842:	fd551ce3          	bne	a0,s5,81a <malloc+0x7e>
-+ 870:	fd551ce3          	bne	a0,s5,848 <malloc+0xae>
-         return 0;
-- 846:	4501                	li	a0,0
-- 848:	7902                	ld	s2,32(sp)
-- 84a:	6a42                	ld	s4,16(sp)
-- 84c:	6aa2                	ld	s5,8(sp)
-- 84e:	6b02                	ld	s6,0(sp)
-- 850:	a03d                	j	87e <malloc+0xe2>
-- 852:	7902                	ld	s2,32(sp)
-- 854:	6a42                	ld	s4,16(sp)
-- 856:	6aa2                	ld	s5,8(sp)
-- 858:	6b02                	ld	s6,0(sp)
--      if(p->s.size == nunits)
-- 85a:	fae48de3          	beq	s1,a4,814 <malloc+0x78>
--        p->s.size -= nunits;
-- 85e:	4137073b          	subw	a4,a4,s3
-- 862:	c798                	sw	a4,8(a5)
--        p += p->s.size;
-- 864:	02071693          	slli	a3,a4,0x20
-- 868:	01c6d713          	srli	a4,a3,0x1c
-- 86c:	97ba                	add	a5,a5,a4
--        p->s.size = nunits;
-- 86e:	0137a423          	sw	s3,8(a5)
--      freep = prevp;
-- 872:	00000717          	auipc	a4,0x0
-- 876:	78a73723          	sd	a0,1934(a4) # 1000 <freep>
--      return (void*)(p + 1);
-- 87a:	01078513          	addi	a0,a5,16
--  }
--}
-- 87e:	70e2                	ld	ra,56(sp)
-- 880:	7442                	ld	s0,48(sp)
-- 882:	74a2                	ld	s1,40(sp)
-- 884:	69e2                	ld	s3,24(sp)
-- 886:	6121                	addi	sp,sp,64
-- 888:	8082                	ret
-- 88a:	7902                	ld	s2,32(sp)
-- 88c:	6a42                	ld	s4,16(sp)
-- 88e:	6aa2                	ld	s5,8(sp)
-- 890:	6b02                	ld	s6,0(sp)
-- 892:	b7f5                	j	87e <malloc+0xe2>
-+ 874:	4501                	li	a0,0
-+ 876:	bf65                	j	82e <malloc+0x94>
-diff --git a/Assignments/Assignment-6/xv6/user/mkdir.d b/Assignments/Assignment-6/xv6/user/mkdir.d
-index 061f079..7ad28be 100644
---- a/Assignments/Assignment-6/xv6/user/mkdir.d
-+++ b/Assignments/Assignment-6/xv6/user/mkdir.d
-@@ -1,3 +1 @@
--user/mkdir.o: user/mkdir.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/stat.h user/user.h
-+user/mkdir.o: user/mkdir.c kernel/types.h kernel/stat.h user/user.h
-diff --git a/Assignments/Assignment-6/xv6/user/mkdir.o b/Assignments/Assignment-6/xv6/user/mkdir.o
-index 9239fa7..a245902 100644
-Binary files a/Assignments/Assignment-6/xv6/user/mkdir.o and b/Assignments/Assignment-6/xv6/user/mkdir.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/mkdir.sym b/Assignments/Assignment-6/xv6/user/mkdir.sym
-index fd72e4a..2e198d7 100644
---- a/Assignments/Assignment-6/xv6/user/mkdir.sym
-+++ b/Assignments/Assignment-6/xv6/user/mkdir.sym
-@@ -1,6 +1,5 @@
- 0000000000000000 .text
--0000000000000898 .rodata
--00000000000008f8 .eh_frame
-+0000000000000878 .rodata
- 0000000000001000 .data
- 0000000000001000 .bss
- 0000000000000000 .debug_info
-@@ -11,53 +10,54 @@
- 0000000000000000 .debug_str
- 0000000000000000 .comment
- 0000000000000000 .riscv.attributes
-+0000000000000000 .debug_frame
- 0000000000000000 .debug_ranges
- 0000000000000000 mkdir.c
- 0000000000000000 ulib.c
- 0000000000000000 usys.o
- 0000000000000000 printf.c
--0000000000000370 putc
--000000000000038e printint
--00000000000008e0 digits
-+000000000000036c putc
-+000000000000038a printint
-+00000000000008c0 digits
- 0000000000000000 umalloc.c
- 0000000000001000 freep
- 0000000000001010 base
--0000000000000078 strcpy
--00000000000006e8 printf
--0000000000000222 memmove
--0000000000000318 mknod
--0000000000000130 gets
--0000000000000350 getpid
--00000000000002b4 memcpy
--000000000000079c malloc
--0000000000000360 sleep
--00000000000002e0 pipe
--00000000000002f0 write
--0000000000000328 fstat
--00000000000006be fprintf
--0000000000000300 kill
--0000000000000436 vprintf
--0000000000000340 chdir
--0000000000000308 exec
--00000000000002d8 wait
--00000000000002e8 read
--0000000000000320 unlink
--000000000000027a memcmp
--00000000000002c8 fork
--0000000000000358 sbrk
--0000000000000368 uptime
--00000000000000ea memset
-+0000000000000074 strcpy
-+00000000000006e6 printf
-+000000000000021e memmove
-+0000000000000314 mknod
-+000000000000012c gets
-+000000000000034c getpid
-+00000000000002b0 memcpy
-+000000000000079a malloc
-+000000000000035c sleep
-+00000000000002dc pipe
-+00000000000002ec write
-+0000000000000324 fstat
-+00000000000006bc fprintf
-+00000000000002fc kill
-+0000000000000432 vprintf
-+000000000000033c chdir
-+0000000000000304 exec
-+00000000000002d4 wait
-+00000000000002e4 read
-+000000000000031c unlink
-+0000000000000276 memcmp
-+00000000000002c4 fork
-+0000000000000354 sbrk
-+0000000000000364 uptime
-+00000000000000e6 memset
- 0000000000000000 main
--0000000000000094 strcmp
--0000000000000348 dup
--00000000000001a0 stat
--0000000000000330 link
--00000000000002d0 exit
--0000000000000066 start
--00000000000001da atoi
--00000000000000c0 strlen
--0000000000000310 open
--000000000000010c strchr
--0000000000000338 mkdir
--00000000000002f8 close
--000000000000071a free
-+0000000000000090 strcmp
-+0000000000000344 dup
-+000000000000019c stat
-+000000000000032c link
-+00000000000002cc exit
-+0000000000000062 start
-+00000000000001d6 atoi
-+00000000000000bc strlen
-+000000000000030c open
-+0000000000000108 strchr
-+0000000000000334 mkdir
-+00000000000002f4 close
-+0000000000000718 free
-diff --git a/Assignments/Assignment-6/xv6/user/printf.d b/Assignments/Assignment-6/xv6/user/printf.d
-index 89ae0fd..18af8d7 100644
---- a/Assignments/Assignment-6/xv6/user/printf.d
-+++ b/Assignments/Assignment-6/xv6/user/printf.d
-@@ -1,4 +1,2 @@
--user/printf.o: user/printf.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/stat.h user/user.h \
-- /student/cmpt332/xv6-2024/riscv/lib/gcc/riscv64-unknown-linux-gnu/13.2.0/include/stdarg.h
-+user/printf.o: user/printf.c kernel/types.h kernel/stat.h user/user.h \
-+ /usr/local/riscv/lib/gcc/riscv64-unknown-elf/12.2.0/include/stdarg.h
-diff --git a/Assignments/Assignment-6/xv6/user/printf.o b/Assignments/Assignment-6/xv6/user/printf.o
-index 6ffe98b..9f05228 100644
-Binary files a/Assignments/Assignment-6/xv6/user/printf.o and b/Assignments/Assignment-6/xv6/user/printf.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/rm.asm b/Assignments/Assignment-6/xv6/user/rm.asm
-index 255a205..f216968 100644
---- a/Assignments/Assignment-6/xv6/user/rm.asm
-+++ b/Assignments/Assignment-6/xv6/user/rm.asm
-@@ -11,22 +11,22 @@ Disassembly of section .text:
- int
- main(int argc, char *argv[])
- {
--   0:	1101                	addi	sp,sp,-32
-+   0:	1101                	add	sp,sp,-32
-    2:	ec06                	sd	ra,24(sp)
-    4:	e822                	sd	s0,16(sp)
--   6:	1000                	addi	s0,sp,32
-+   6:	e426                	sd	s1,8(sp)
-+   8:	e04a                	sd	s2,0(sp)
-+   a:	1000                	add	s0,sp,32
-   int i;
- 
-   if(argc < 2){
--   8:	4785                	li	a5,1
--   a:	02a7d763          	bge	a5,a0,38 <main+0x38>
--   e:	e426                	sd	s1,8(sp)
--  10:	e04a                	sd	s2,0(sp)
--  12:	00858493          	addi	s1,a1,8
--  16:	ffe5091b          	addiw	s2,a0,-2
--  1a:	02091793          	slli	a5,s2,0x20
--  1e:	01d7d913          	srli	s2,a5,0x1d
--  22:	05c1                	addi	a1,a1,16
-+   c:	4785                	li	a5,1
-+   e:	02a7d563          	bge	a5,a0,38 <main+0x38>
-+  12:	00858493          	add	s1,a1,8
-+  16:	ffe5091b          	addw	s2,a0,-2
-+  1a:	02091793          	sll	a5,s2,0x20
-+  1e:	01d7d913          	srl	s2,a5,0x1d
-+  22:	05c1                	add	a1,a1,16
-   24:	992e                	add	s2,s2,a1
-     fprintf(2, "Usage: rm files...\n");
-     exit(1);
-@@ -35,711 +35,711 @@ main(int argc, char *argv[])
-   for(i = 1; i < argc; i++){
-     if(unlink(argv[i]) < 0){
-   26:	6088                	ld	a0,0(s1)
--  28:	2f8000ef          	jal	320 <unlink>
--  2c:	02054263          	bltz	a0,50 <main+0x50>
-+  28:	2f4000ef          	jal	31c <unlink>
-+  2c:	02054063          	bltz	a0,4c <main+0x4c>
-   for(i = 1; i < argc; i++){
--  30:	04a1                	addi	s1,s1,8
-+  30:	04a1                	add	s1,s1,8
-   32:	ff249ae3          	bne	s1,s2,26 <main+0x26>
--  36:	a02d                	j	60 <main+0x60>
--  38:	e426                	sd	s1,8(sp)
--  3a:	e04a                	sd	s2,0(sp)
-+  36:	a01d                	j	5c <main+0x5c>
-     fprintf(2, "Usage: rm files...\n");
--  3c:	00001597          	auipc	a1,0x1
--  40:	86458593          	addi	a1,a1,-1948 # 8a0 <malloc+0x104>
--  44:	4509                	li	a0,2
--  46:	678000ef          	jal	6be <fprintf>
-+  38:	00001597          	auipc	a1,0x1
-+  3c:	84858593          	add	a1,a1,-1976 # 880 <malloc+0xe6>
-+  40:	4509                	li	a0,2
-+  42:	67a000ef          	jal	6bc <fprintf>
-     exit(1);
--  4a:	4505                	li	a0,1
--  4c:	284000ef          	jal	2d0 <exit>
-+  46:	4505                	li	a0,1
-+  48:	284000ef          	jal	2cc <exit>
-       fprintf(2, "rm: %s failed to delete\n", argv[i]);
--  50:	6090                	ld	a2,0(s1)
--  52:	00001597          	auipc	a1,0x1
--  56:	86658593          	addi	a1,a1,-1946 # 8b8 <malloc+0x11c>
--  5a:	4509                	li	a0,2
--  5c:	662000ef          	jal	6be <fprintf>
-+  4c:	6090                	ld	a2,0(s1)
-+  4e:	00001597          	auipc	a1,0x1
-+  52:	84a58593          	add	a1,a1,-1974 # 898 <malloc+0xfe>
-+  56:	4509                	li	a0,2
-+  58:	664000ef          	jal	6bc <fprintf>
-       break;
-     }
-   }
- 
-   exit(0);
--  60:	4501                	li	a0,0
--  62:	26e000ef          	jal	2d0 <exit>
-+  5c:	4501                	li	a0,0
-+  5e:	26e000ef          	jal	2cc <exit>
- 
--0000000000000066 <start>:
-+0000000000000062 <start>:
- /* */
- /* wrapper so that it's OK if main() does not call exit(). */
- /* */
- void
- start()
- {
--  66:	1141                	addi	sp,sp,-16
--  68:	e406                	sd	ra,8(sp)
--  6a:	e022                	sd	s0,0(sp)
--  6c:	0800                	addi	s0,sp,16
-+  62:	1141                	add	sp,sp,-16
-+  64:	e406                	sd	ra,8(sp)
-+  66:	e022                	sd	s0,0(sp)
-+  68:	0800                	add	s0,sp,16
-   extern int main();
-   main();
--  6e:	f93ff0ef          	jal	0 <main>
-+  6a:	f97ff0ef          	jal	0 <main>
-   exit(0);
--  72:	4501                	li	a0,0
--  74:	25c000ef          	jal	2d0 <exit>
-+  6e:	4501                	li	a0,0
-+  70:	25c000ef          	jal	2cc <exit>
- 
--0000000000000078 <strcpy>:
-+0000000000000074 <strcpy>:
- }
- 
- char*
- strcpy(char *s, const char *t)
- {
--  78:	1141                	addi	sp,sp,-16
--  7a:	e422                	sd	s0,8(sp)
--  7c:	0800                	addi	s0,sp,16
-+  74:	1141                	add	sp,sp,-16
-+  76:	e422                	sd	s0,8(sp)
-+  78:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
--  7e:	87aa                	mv	a5,a0
--  80:	0585                	addi	a1,a1,1
--  82:	0785                	addi	a5,a5,1
--  84:	fff5c703          	lbu	a4,-1(a1)
--  88:	fee78fa3          	sb	a4,-1(a5)
--  8c:	fb75                	bnez	a4,80 <strcpy+0x8>
-+  7a:	87aa                	mv	a5,a0
-+  7c:	0585                	add	a1,a1,1
-+  7e:	0785                	add	a5,a5,1
-+  80:	fff5c703          	lbu	a4,-1(a1)
-+  84:	fee78fa3          	sb	a4,-1(a5)
-+  88:	fb75                	bnez	a4,7c <strcpy+0x8>
-     ;
-   return os;
- }
--  8e:	6422                	ld	s0,8(sp)
--  90:	0141                	addi	sp,sp,16
--  92:	8082                	ret
-+  8a:	6422                	ld	s0,8(sp)
-+  8c:	0141                	add	sp,sp,16
-+  8e:	8082                	ret
- 
--0000000000000094 <strcmp>:
-+0000000000000090 <strcmp>:
- 
- int
- strcmp(const char *p, const char *q)
- {
--  94:	1141                	addi	sp,sp,-16
--  96:	e422                	sd	s0,8(sp)
--  98:	0800                	addi	s0,sp,16
-+  90:	1141                	add	sp,sp,-16
-+  92:	e422                	sd	s0,8(sp)
-+  94:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
--  9a:	00054783          	lbu	a5,0(a0)
--  9e:	cb91                	beqz	a5,b2 <strcmp+0x1e>
--  a0:	0005c703          	lbu	a4,0(a1)
--  a4:	00f71763          	bne	a4,a5,b2 <strcmp+0x1e>
-+  96:	00054783          	lbu	a5,0(a0)
-+  9a:	cb91                	beqz	a5,ae <strcmp+0x1e>
-+  9c:	0005c703          	lbu	a4,0(a1)
-+  a0:	00f71763          	bne	a4,a5,ae <strcmp+0x1e>
-     p++, q++;
--  a8:	0505                	addi	a0,a0,1
--  aa:	0585                	addi	a1,a1,1
-+  a4:	0505                	add	a0,a0,1
-+  a6:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
--  ac:	00054783          	lbu	a5,0(a0)
--  b0:	fbe5                	bnez	a5,a0 <strcmp+0xc>
-+  a8:	00054783          	lbu	a5,0(a0)
-+  ac:	fbe5                	bnez	a5,9c <strcmp+0xc>
-   return (uchar)*p - (uchar)*q;
--  b2:	0005c503          	lbu	a0,0(a1)
-+  ae:	0005c503          	lbu	a0,0(a1)
- }
--  b6:	40a7853b          	subw	a0,a5,a0
--  ba:	6422                	ld	s0,8(sp)
--  bc:	0141                	addi	sp,sp,16
--  be:	8082                	ret
-+  b2:	40a7853b          	subw	a0,a5,a0
-+  b6:	6422                	ld	s0,8(sp)
-+  b8:	0141                	add	sp,sp,16
-+  ba:	8082                	ret
- 
--00000000000000c0 <strlen>:
-+00000000000000bc <strlen>:
- 
- uint
- strlen(const char *s)
- {
--  c0:	1141                	addi	sp,sp,-16
--  c2:	e422                	sd	s0,8(sp)
--  c4:	0800                	addi	s0,sp,16
-+  bc:	1141                	add	sp,sp,-16
-+  be:	e422                	sd	s0,8(sp)
-+  c0:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
--  c6:	00054783          	lbu	a5,0(a0)
--  ca:	cf91                	beqz	a5,e6 <strlen+0x26>
--  cc:	0505                	addi	a0,a0,1
--  ce:	87aa                	mv	a5,a0
--  d0:	86be                	mv	a3,a5
--  d2:	0785                	addi	a5,a5,1
--  d4:	fff7c703          	lbu	a4,-1(a5)
--  d8:	ff65                	bnez	a4,d0 <strlen+0x10>
--  da:	40a6853b          	subw	a0,a3,a0
--  de:	2505                	addiw	a0,a0,1
-+  c2:	00054783          	lbu	a5,0(a0)
-+  c6:	cf91                	beqz	a5,e2 <strlen+0x26>
-+  c8:	0505                	add	a0,a0,1
-+  ca:	87aa                	mv	a5,a0
-+  cc:	86be                	mv	a3,a5
-+  ce:	0785                	add	a5,a5,1
-+  d0:	fff7c703          	lbu	a4,-1(a5)
-+  d4:	ff65                	bnez	a4,cc <strlen+0x10>
-+  d6:	40a6853b          	subw	a0,a3,a0
-+  da:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
--  e0:	6422                	ld	s0,8(sp)
--  e2:	0141                	addi	sp,sp,16
--  e4:	8082                	ret
-+  dc:	6422                	ld	s0,8(sp)
-+  de:	0141                	add	sp,sp,16
-+  e0:	8082                	ret
-   for(n = 0; s[n]; n++)
--  e6:	4501                	li	a0,0
--  e8:	bfe5                	j	e0 <strlen+0x20>
-+  e2:	4501                	li	a0,0
-+  e4:	bfe5                	j	dc <strlen+0x20>
- 
--00000000000000ea <memset>:
-+00000000000000e6 <memset>:
- 
- void*
- memset(void *dst, int c, uint n)
- {
--  ea:	1141                	addi	sp,sp,-16
--  ec:	e422                	sd	s0,8(sp)
--  ee:	0800                	addi	s0,sp,16
-+  e6:	1141                	add	sp,sp,-16
-+  e8:	e422                	sd	s0,8(sp)
-+  ea:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
--  f0:	ca19                	beqz	a2,106 <memset+0x1c>
--  f2:	87aa                	mv	a5,a0
--  f4:	1602                	slli	a2,a2,0x20
--  f6:	9201                	srli	a2,a2,0x20
--  f8:	00a60733          	add	a4,a2,a0
-+  ec:	ca19                	beqz	a2,102 <memset+0x1c>
-+  ee:	87aa                	mv	a5,a0
-+  f0:	1602                	sll	a2,a2,0x20
-+  f2:	9201                	srl	a2,a2,0x20
-+  f4:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
--  fc:	00b78023          	sb	a1,0(a5)
-+  f8:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
-- 100:	0785                	addi	a5,a5,1
-- 102:	fee79de3          	bne	a5,a4,fc <memset+0x12>
-+  fc:	0785                	add	a5,a5,1
-+  fe:	fee79de3          	bne	a5,a4,f8 <memset+0x12>
-   }
-   return dst;
- }
-- 106:	6422                	ld	s0,8(sp)
-- 108:	0141                	addi	sp,sp,16
-- 10a:	8082                	ret
-+ 102:	6422                	ld	s0,8(sp)
-+ 104:	0141                	add	sp,sp,16
-+ 106:	8082                	ret
- 
--000000000000010c <strchr>:
-+0000000000000108 <strchr>:
- 
- char*
- strchr(const char *s, char c)
- {
-- 10c:	1141                	addi	sp,sp,-16
-- 10e:	e422                	sd	s0,8(sp)
-- 110:	0800                	addi	s0,sp,16
-+ 108:	1141                	add	sp,sp,-16
-+ 10a:	e422                	sd	s0,8(sp)
-+ 10c:	0800                	add	s0,sp,16
-   for(; *s; s++)
-- 112:	00054783          	lbu	a5,0(a0)
-- 116:	cb99                	beqz	a5,12c <strchr+0x20>
-+ 10e:	00054783          	lbu	a5,0(a0)
-+ 112:	cb99                	beqz	a5,128 <strchr+0x20>
-     if(*s == c)
-- 118:	00f58763          	beq	a1,a5,126 <strchr+0x1a>
-+ 114:	00f58763          	beq	a1,a5,122 <strchr+0x1a>
-   for(; *s; s++)
-- 11c:	0505                	addi	a0,a0,1
-- 11e:	00054783          	lbu	a5,0(a0)
-- 122:	fbfd                	bnez	a5,118 <strchr+0xc>
-+ 118:	0505                	add	a0,a0,1
-+ 11a:	00054783          	lbu	a5,0(a0)
-+ 11e:	fbfd                	bnez	a5,114 <strchr+0xc>
-       return (char*)s;
-   return 0;
-- 124:	4501                	li	a0,0
-+ 120:	4501                	li	a0,0
- }
-- 126:	6422                	ld	s0,8(sp)
-- 128:	0141                	addi	sp,sp,16
-- 12a:	8082                	ret
-+ 122:	6422                	ld	s0,8(sp)
-+ 124:	0141                	add	sp,sp,16
-+ 126:	8082                	ret
-   return 0;
-- 12c:	4501                	li	a0,0
-- 12e:	bfe5                	j	126 <strchr+0x1a>
-+ 128:	4501                	li	a0,0
-+ 12a:	bfe5                	j	122 <strchr+0x1a>
- 
--0000000000000130 <gets>:
-+000000000000012c <gets>:
- 
- char*
- gets(char *buf, int max)
- {
-- 130:	711d                	addi	sp,sp,-96
-- 132:	ec86                	sd	ra,88(sp)
-- 134:	e8a2                	sd	s0,80(sp)
-- 136:	e4a6                	sd	s1,72(sp)
-- 138:	e0ca                	sd	s2,64(sp)
-- 13a:	fc4e                	sd	s3,56(sp)
-- 13c:	f852                	sd	s4,48(sp)
-- 13e:	f456                	sd	s5,40(sp)
-- 140:	f05a                	sd	s6,32(sp)
-- 142:	ec5e                	sd	s7,24(sp)
-- 144:	1080                	addi	s0,sp,96
-- 146:	8baa                	mv	s7,a0
-- 148:	8a2e                	mv	s4,a1
-+ 12c:	711d                	add	sp,sp,-96
-+ 12e:	ec86                	sd	ra,88(sp)
-+ 130:	e8a2                	sd	s0,80(sp)
-+ 132:	e4a6                	sd	s1,72(sp)
-+ 134:	e0ca                	sd	s2,64(sp)
-+ 136:	fc4e                	sd	s3,56(sp)
-+ 138:	f852                	sd	s4,48(sp)
-+ 13a:	f456                	sd	s5,40(sp)
-+ 13c:	f05a                	sd	s6,32(sp)
-+ 13e:	ec5e                	sd	s7,24(sp)
-+ 140:	1080                	add	s0,sp,96
-+ 142:	8baa                	mv	s7,a0
-+ 144:	8a2e                	mv	s4,a1
-   int i, cc;
-   char c;
- 
-   for(i=0; i+1 < max; ){
-- 14a:	892a                	mv	s2,a0
-- 14c:	4481                	li	s1,0
-+ 146:	892a                	mv	s2,a0
-+ 148:	4481                	li	s1,0
-     cc = read(0, &c, 1);
-     if(cc < 1)
-       break;
-     buf[i++] = c;
-     if(c == '\n' || c == '\r')
-- 14e:	4aa9                	li	s5,10
-- 150:	4b35                	li	s6,13
-+ 14a:	4aa9                	li	s5,10
-+ 14c:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
-- 152:	89a6                	mv	s3,s1
-- 154:	2485                	addiw	s1,s1,1
-- 156:	0344d663          	bge	s1,s4,182 <gets+0x52>
-+ 14e:	89a6                	mv	s3,s1
-+ 150:	2485                	addw	s1,s1,1
-+ 152:	0344d663          	bge	s1,s4,17e <gets+0x52>
-     cc = read(0, &c, 1);
-- 15a:	4605                	li	a2,1
-- 15c:	faf40593          	addi	a1,s0,-81
-- 160:	4501                	li	a0,0
-- 162:	186000ef          	jal	2e8 <read>
-+ 156:	4605                	li	a2,1
-+ 158:	faf40593          	add	a1,s0,-81
-+ 15c:	4501                	li	a0,0
-+ 15e:	186000ef          	jal	2e4 <read>
-     if(cc < 1)
-- 166:	00a05e63          	blez	a0,182 <gets+0x52>
-+ 162:	00a05e63          	blez	a0,17e <gets+0x52>
-     buf[i++] = c;
-- 16a:	faf44783          	lbu	a5,-81(s0)
-- 16e:	00f90023          	sb	a5,0(s2)
-+ 166:	faf44783          	lbu	a5,-81(s0)
-+ 16a:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
-- 172:	01578763          	beq	a5,s5,180 <gets+0x50>
-- 176:	0905                	addi	s2,s2,1
-- 178:	fd679de3          	bne	a5,s6,152 <gets+0x22>
--    buf[i++] = c;
-+ 16e:	01578763          	beq	a5,s5,17c <gets+0x50>
-+ 172:	0905                	add	s2,s2,1
-+ 174:	fd679de3          	bne	a5,s6,14e <gets+0x22>
-+  for(i=0; i+1 < max; ){
-+ 178:	89a6                	mv	s3,s1
-+ 17a:	a011                	j	17e <gets+0x52>
-  17c:	89a6                	mv	s3,s1
-- 17e:	a011                	j	182 <gets+0x52>
-- 180:	89a6                	mv	s3,s1
-       break;
-   }
-   buf[i] = '\0';
-- 182:	99de                	add	s3,s3,s7
-- 184:	00098023          	sb	zero,0(s3)
-+ 17e:	99de                	add	s3,s3,s7
-+ 180:	00098023          	sb	zero,0(s3)
-   return buf;
- }
-- 188:	855e                	mv	a0,s7
-- 18a:	60e6                	ld	ra,88(sp)
-- 18c:	6446                	ld	s0,80(sp)
-- 18e:	64a6                	ld	s1,72(sp)
-- 190:	6906                	ld	s2,64(sp)
-- 192:	79e2                	ld	s3,56(sp)
-- 194:	7a42                	ld	s4,48(sp)
-- 196:	7aa2                	ld	s5,40(sp)
-- 198:	7b02                	ld	s6,32(sp)
-- 19a:	6be2                	ld	s7,24(sp)
-- 19c:	6125                	addi	sp,sp,96
-- 19e:	8082                	ret
--
--00000000000001a0 <stat>:
-+ 184:	855e                	mv	a0,s7
-+ 186:	60e6                	ld	ra,88(sp)
-+ 188:	6446                	ld	s0,80(sp)
-+ 18a:	64a6                	ld	s1,72(sp)
-+ 18c:	6906                	ld	s2,64(sp)
-+ 18e:	79e2                	ld	s3,56(sp)
-+ 190:	7a42                	ld	s4,48(sp)
-+ 192:	7aa2                	ld	s5,40(sp)
-+ 194:	7b02                	ld	s6,32(sp)
-+ 196:	6be2                	ld	s7,24(sp)
-+ 198:	6125                	add	sp,sp,96
-+ 19a:	8082                	ret
-+
-+000000000000019c <stat>:
- 
- int
- stat(const char *n, struct stat *st)
- {
-- 1a0:	1101                	addi	sp,sp,-32
-- 1a2:	ec06                	sd	ra,24(sp)
-- 1a4:	e822                	sd	s0,16(sp)
-- 1a6:	e04a                	sd	s2,0(sp)
-- 1a8:	1000                	addi	s0,sp,32
-- 1aa:	892e                	mv	s2,a1
-+ 19c:	1101                	add	sp,sp,-32
-+ 19e:	ec06                	sd	ra,24(sp)
-+ 1a0:	e822                	sd	s0,16(sp)
-+ 1a2:	e426                	sd	s1,8(sp)
-+ 1a4:	e04a                	sd	s2,0(sp)
-+ 1a6:	1000                	add	s0,sp,32
-+ 1a8:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
-- 1ac:	4581                	li	a1,0
-- 1ae:	162000ef          	jal	310 <open>
-+ 1aa:	4581                	li	a1,0
-+ 1ac:	160000ef          	jal	30c <open>
-   if(fd < 0)
-- 1b2:	02054263          	bltz	a0,1d6 <stat+0x36>
-- 1b6:	e426                	sd	s1,8(sp)
-- 1b8:	84aa                	mv	s1,a0
-+ 1b0:	02054163          	bltz	a0,1d2 <stat+0x36>
-+ 1b4:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
-- 1ba:	85ca                	mv	a1,s2
-- 1bc:	16c000ef          	jal	328 <fstat>
-- 1c0:	892a                	mv	s2,a0
-+ 1b6:	85ca                	mv	a1,s2
-+ 1b8:	16c000ef          	jal	324 <fstat>
-+ 1bc:	892a                	mv	s2,a0
-   close(fd);
-- 1c2:	8526                	mv	a0,s1
-- 1c4:	134000ef          	jal	2f8 <close>
-+ 1be:	8526                	mv	a0,s1
-+ 1c0:	134000ef          	jal	2f4 <close>
-   return r;
-- 1c8:	64a2                	ld	s1,8(sp)
- }
-- 1ca:	854a                	mv	a0,s2
-- 1cc:	60e2                	ld	ra,24(sp)
-- 1ce:	6442                	ld	s0,16(sp)
-- 1d0:	6902                	ld	s2,0(sp)
-- 1d2:	6105                	addi	sp,sp,32
-- 1d4:	8082                	ret
-+ 1c4:	854a                	mv	a0,s2
-+ 1c6:	60e2                	ld	ra,24(sp)
-+ 1c8:	6442                	ld	s0,16(sp)
-+ 1ca:	64a2                	ld	s1,8(sp)
-+ 1cc:	6902                	ld	s2,0(sp)
-+ 1ce:	6105                	add	sp,sp,32
-+ 1d0:	8082                	ret
-     return -1;
-- 1d6:	597d                	li	s2,-1
-- 1d8:	bfcd                	j	1ca <stat+0x2a>
-+ 1d2:	597d                	li	s2,-1
-+ 1d4:	bfc5                	j	1c4 <stat+0x28>
- 
--00000000000001da <atoi>:
-+00000000000001d6 <atoi>:
- 
- int
- atoi(const char *s)
- {
-- 1da:	1141                	addi	sp,sp,-16
-- 1dc:	e422                	sd	s0,8(sp)
-- 1de:	0800                	addi	s0,sp,16
-+ 1d6:	1141                	add	sp,sp,-16
-+ 1d8:	e422                	sd	s0,8(sp)
-+ 1da:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
-- 1e0:	00054683          	lbu	a3,0(a0)
-- 1e4:	fd06879b          	addiw	a5,a3,-48
-- 1e8:	0ff7f793          	zext.b	a5,a5
-- 1ec:	4625                	li	a2,9
-- 1ee:	02f66863          	bltu	a2,a5,21e <atoi+0x44>
-- 1f2:	872a                	mv	a4,a0
-+ 1dc:	00054683          	lbu	a3,0(a0)
-+ 1e0:	fd06879b          	addw	a5,a3,-48
-+ 1e4:	0ff7f793          	zext.b	a5,a5
-+ 1e8:	4625                	li	a2,9
-+ 1ea:	02f66863          	bltu	a2,a5,21a <atoi+0x44>
-+ 1ee:	872a                	mv	a4,a0
-   n = 0;
-- 1f4:	4501                	li	a0,0
-+ 1f0:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
-- 1f6:	0705                	addi	a4,a4,1
-- 1f8:	0025179b          	slliw	a5,a0,0x2
-- 1fc:	9fa9                	addw	a5,a5,a0
-- 1fe:	0017979b          	slliw	a5,a5,0x1
-- 202:	9fb5                	addw	a5,a5,a3
-- 204:	fd07851b          	addiw	a0,a5,-48
-+ 1f2:	0705                	add	a4,a4,1
-+ 1f4:	0025179b          	sllw	a5,a0,0x2
-+ 1f8:	9fa9                	addw	a5,a5,a0
-+ 1fa:	0017979b          	sllw	a5,a5,0x1
-+ 1fe:	9fb5                	addw	a5,a5,a3
-+ 200:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
-- 208:	00074683          	lbu	a3,0(a4)
-- 20c:	fd06879b          	addiw	a5,a3,-48
-- 210:	0ff7f793          	zext.b	a5,a5
-- 214:	fef671e3          	bgeu	a2,a5,1f6 <atoi+0x1c>
-+ 204:	00074683          	lbu	a3,0(a4)
-+ 208:	fd06879b          	addw	a5,a3,-48
-+ 20c:	0ff7f793          	zext.b	a5,a5
-+ 210:	fef671e3          	bgeu	a2,a5,1f2 <atoi+0x1c>
-   return n;
- }
-- 218:	6422                	ld	s0,8(sp)
-- 21a:	0141                	addi	sp,sp,16
-- 21c:	8082                	ret
-+ 214:	6422                	ld	s0,8(sp)
-+ 216:	0141                	add	sp,sp,16
-+ 218:	8082                	ret
-   n = 0;
-- 21e:	4501                	li	a0,0
-- 220:	bfe5                	j	218 <atoi+0x3e>
-+ 21a:	4501                	li	a0,0
-+ 21c:	bfe5                	j	214 <atoi+0x3e>
- 
--0000000000000222 <memmove>:
-+000000000000021e <memmove>:
- 
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
-- 222:	1141                	addi	sp,sp,-16
-- 224:	e422                	sd	s0,8(sp)
-- 226:	0800                	addi	s0,sp,16
-+ 21e:	1141                	add	sp,sp,-16
-+ 220:	e422                	sd	s0,8(sp)
-+ 222:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-   dst = vdst;
-   src = vsrc;
-   if (src > dst) {
-- 228:	02b57463          	bgeu	a0,a1,250 <memmove+0x2e>
-+ 224:	02b57463          	bgeu	a0,a1,24c <memmove+0x2e>
-     while(n-- > 0)
-- 22c:	00c05f63          	blez	a2,24a <memmove+0x28>
-- 230:	1602                	slli	a2,a2,0x20
-- 232:	9201                	srli	a2,a2,0x20
-- 234:	00c507b3          	add	a5,a0,a2
-+ 228:	00c05f63          	blez	a2,246 <memmove+0x28>
-+ 22c:	1602                	sll	a2,a2,0x20
-+ 22e:	9201                	srl	a2,a2,0x20
-+ 230:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
-- 238:	872a                	mv	a4,a0
-+ 234:	872a                	mv	a4,a0
-       *dst++ = *src++;
-- 23a:	0585                	addi	a1,a1,1
-- 23c:	0705                	addi	a4,a4,1
-- 23e:	fff5c683          	lbu	a3,-1(a1)
-- 242:	fed70fa3          	sb	a3,-1(a4)
-+ 236:	0585                	add	a1,a1,1
-+ 238:	0705                	add	a4,a4,1
-+ 23a:	fff5c683          	lbu	a3,-1(a1)
-+ 23e:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
-- 246:	fef71ae3          	bne	a4,a5,23a <memmove+0x18>
-+ 242:	fee79ae3          	bne	a5,a4,236 <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-   }
-   return vdst;
- }
-- 24a:	6422                	ld	s0,8(sp)
-- 24c:	0141                	addi	sp,sp,16
-- 24e:	8082                	ret
-+ 246:	6422                	ld	s0,8(sp)
-+ 248:	0141                	add	sp,sp,16
-+ 24a:	8082                	ret
-     dst += n;
-- 250:	00c50733          	add	a4,a0,a2
-+ 24c:	00c50733          	add	a4,a0,a2
-     src += n;
-- 254:	95b2                	add	a1,a1,a2
-+ 250:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
-- 256:	fec05ae3          	blez	a2,24a <memmove+0x28>
-- 25a:	fff6079b          	addiw	a5,a2,-1
-- 25e:	1782                	slli	a5,a5,0x20
-- 260:	9381                	srli	a5,a5,0x20
-- 262:	fff7c793          	not	a5,a5
-- 266:	97ba                	add	a5,a5,a4
-+ 252:	fec05ae3          	blez	a2,246 <memmove+0x28>
-+ 256:	fff6079b          	addw	a5,a2,-1
-+ 25a:	1782                	sll	a5,a5,0x20
-+ 25c:	9381                	srl	a5,a5,0x20
-+ 25e:	fff7c793          	not	a5,a5
-+ 262:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
-- 268:	15fd                	addi	a1,a1,-1
-- 26a:	177d                	addi	a4,a4,-1
-- 26c:	0005c683          	lbu	a3,0(a1)
-- 270:	00d70023          	sb	a3,0(a4)
-+ 264:	15fd                	add	a1,a1,-1
-+ 266:	177d                	add	a4,a4,-1
-+ 268:	0005c683          	lbu	a3,0(a1)
-+ 26c:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
-- 274:	fee79ae3          	bne	a5,a4,268 <memmove+0x46>
-- 278:	bfc9                	j	24a <memmove+0x28>
-+ 270:	fee79ae3          	bne	a5,a4,264 <memmove+0x46>
-+ 274:	bfc9                	j	246 <memmove+0x28>
- 
--000000000000027a <memcmp>:
-+0000000000000276 <memcmp>:
- 
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
-- 27a:	1141                	addi	sp,sp,-16
-- 27c:	e422                	sd	s0,8(sp)
-- 27e:	0800                	addi	s0,sp,16
-+ 276:	1141                	add	sp,sp,-16
-+ 278:	e422                	sd	s0,8(sp)
-+ 27a:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
-- 280:	ca05                	beqz	a2,2b0 <memcmp+0x36>
-- 282:	fff6069b          	addiw	a3,a2,-1
-- 286:	1682                	slli	a3,a3,0x20
-- 288:	9281                	srli	a3,a3,0x20
-- 28a:	0685                	addi	a3,a3,1
-- 28c:	96aa                	add	a3,a3,a0
-+ 27c:	ca05                	beqz	a2,2ac <memcmp+0x36>
-+ 27e:	fff6069b          	addw	a3,a2,-1
-+ 282:	1682                	sll	a3,a3,0x20
-+ 284:	9281                	srl	a3,a3,0x20
-+ 286:	0685                	add	a3,a3,1
-+ 288:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
-- 28e:	00054783          	lbu	a5,0(a0)
-- 292:	0005c703          	lbu	a4,0(a1)
-- 296:	00e79863          	bne	a5,a4,2a6 <memcmp+0x2c>
-+ 28a:	00054783          	lbu	a5,0(a0)
-+ 28e:	0005c703          	lbu	a4,0(a1)
-+ 292:	00e79863          	bne	a5,a4,2a2 <memcmp+0x2c>
-       return *p1 - *p2;
-     }
-     p1++;
-- 29a:	0505                	addi	a0,a0,1
-+ 296:	0505                	add	a0,a0,1
-     p2++;
-- 29c:	0585                	addi	a1,a1,1
-+ 298:	0585                	add	a1,a1,1
-   while (n-- > 0) {
-- 29e:	fed518e3          	bne	a0,a3,28e <memcmp+0x14>
-+ 29a:	fed518e3          	bne	a0,a3,28a <memcmp+0x14>
-   }
-   return 0;
-- 2a2:	4501                	li	a0,0
-- 2a4:	a019                	j	2aa <memcmp+0x30>
-+ 29e:	4501                	li	a0,0
-+ 2a0:	a019                	j	2a6 <memcmp+0x30>
-       return *p1 - *p2;
-- 2a6:	40e7853b          	subw	a0,a5,a4
-+ 2a2:	40e7853b          	subw	a0,a5,a4
- }
-- 2aa:	6422                	ld	s0,8(sp)
-- 2ac:	0141                	addi	sp,sp,16
-- 2ae:	8082                	ret
-+ 2a6:	6422                	ld	s0,8(sp)
-+ 2a8:	0141                	add	sp,sp,16
-+ 2aa:	8082                	ret
-   return 0;
-- 2b0:	4501                	li	a0,0
-- 2b2:	bfe5                	j	2aa <memcmp+0x30>
-+ 2ac:	4501                	li	a0,0
-+ 2ae:	bfe5                	j	2a6 <memcmp+0x30>
- 
--00000000000002b4 <memcpy>:
-+00000000000002b0 <memcpy>:
- 
- void *
- memcpy(void *dst, const void *src, uint n)
- {
-- 2b4:	1141                	addi	sp,sp,-16
-- 2b6:	e406                	sd	ra,8(sp)
-- 2b8:	e022                	sd	s0,0(sp)
-- 2ba:	0800                	addi	s0,sp,16
-+ 2b0:	1141                	add	sp,sp,-16
-+ 2b2:	e406                	sd	ra,8(sp)
-+ 2b4:	e022                	sd	s0,0(sp)
-+ 2b6:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
-- 2bc:	f67ff0ef          	jal	222 <memmove>
-+ 2b8:	f67ff0ef          	jal	21e <memmove>
- }
-- 2c0:	60a2                	ld	ra,8(sp)
-- 2c2:	6402                	ld	s0,0(sp)
-- 2c4:	0141                	addi	sp,sp,16
-- 2c6:	8082                	ret
-+ 2bc:	60a2                	ld	ra,8(sp)
-+ 2be:	6402                	ld	s0,0(sp)
-+ 2c0:	0141                	add	sp,sp,16
-+ 2c2:	8082                	ret
- 
--00000000000002c8 <fork>:
-+00000000000002c4 <fork>:
- # generated by usys.pl - do not edit
- #include "kernel/syscall.h"
- .global fork
- fork:
-  li a7, SYS_fork
-- 2c8:	4885                	li	a7,1
-+ 2c4:	4885                	li	a7,1
-  ecall
-- 2ca:	00000073          	ecall
-+ 2c6:	00000073          	ecall
-  ret
-- 2ce:	8082                	ret
-+ 2ca:	8082                	ret
- 
--00000000000002d0 <exit>:
-+00000000000002cc <exit>:
- .global exit
- exit:
-  li a7, SYS_exit
-- 2d0:	4889                	li	a7,2
-+ 2cc:	4889                	li	a7,2
-  ecall
-- 2d2:	00000073          	ecall
-+ 2ce:	00000073          	ecall
-  ret
-- 2d6:	8082                	ret
-+ 2d2:	8082                	ret
- 
--00000000000002d8 <wait>:
-+00000000000002d4 <wait>:
- .global wait
- wait:
-  li a7, SYS_wait
-- 2d8:	488d                	li	a7,3
-+ 2d4:	488d                	li	a7,3
-  ecall
-- 2da:	00000073          	ecall
-+ 2d6:	00000073          	ecall
-  ret
-- 2de:	8082                	ret
-+ 2da:	8082                	ret
- 
--00000000000002e0 <pipe>:
-+00000000000002dc <pipe>:
- .global pipe
- pipe:
-  li a7, SYS_pipe
-- 2e0:	4891                	li	a7,4
-+ 2dc:	4891                	li	a7,4
-  ecall
-- 2e2:	00000073          	ecall
-+ 2de:	00000073          	ecall
-  ret
-- 2e6:	8082                	ret
-+ 2e2:	8082                	ret
- 
--00000000000002e8 <read>:
-+00000000000002e4 <read>:
- .global read
- read:
-  li a7, SYS_read
-- 2e8:	4895                	li	a7,5
-+ 2e4:	4895                	li	a7,5
-  ecall
-- 2ea:	00000073          	ecall
-+ 2e6:	00000073          	ecall
-  ret
-- 2ee:	8082                	ret
-+ 2ea:	8082                	ret
- 
--00000000000002f0 <write>:
-+00000000000002ec <write>:
- .global write
- write:
-  li a7, SYS_write
-- 2f0:	48c1                	li	a7,16
-+ 2ec:	48c1                	li	a7,16
-  ecall
-- 2f2:	00000073          	ecall
-+ 2ee:	00000073          	ecall
-  ret
-- 2f6:	8082                	ret
-+ 2f2:	8082                	ret
- 
--00000000000002f8 <close>:
-+00000000000002f4 <close>:
- .global close
- close:
-  li a7, SYS_close
-- 2f8:	48d5                	li	a7,21
-+ 2f4:	48d5                	li	a7,21
-  ecall
-- 2fa:	00000073          	ecall
-+ 2f6:	00000073          	ecall
-  ret
-- 2fe:	8082                	ret
-+ 2fa:	8082                	ret
- 
--0000000000000300 <kill>:
-+00000000000002fc <kill>:
- .global kill
- kill:
-  li a7, SYS_kill
-- 300:	4899                	li	a7,6
-+ 2fc:	4899                	li	a7,6
-  ecall
-- 302:	00000073          	ecall
-+ 2fe:	00000073          	ecall
-  ret
-- 306:	8082                	ret
-+ 302:	8082                	ret
- 
--0000000000000308 <exec>:
-+0000000000000304 <exec>:
- .global exec
- exec:
-  li a7, SYS_exec
-- 308:	489d                	li	a7,7
-+ 304:	489d                	li	a7,7
-  ecall
-- 30a:	00000073          	ecall
-+ 306:	00000073          	ecall
-  ret
-- 30e:	8082                	ret
-+ 30a:	8082                	ret
- 
--0000000000000310 <open>:
-+000000000000030c <open>:
- .global open
- open:
-  li a7, SYS_open
-- 310:	48bd                	li	a7,15
-+ 30c:	48bd                	li	a7,15
-  ecall
-- 312:	00000073          	ecall
-+ 30e:	00000073          	ecall
-  ret
-- 316:	8082                	ret
-+ 312:	8082                	ret
- 
--0000000000000318 <mknod>:
-+0000000000000314 <mknod>:
- .global mknod
- mknod:
-  li a7, SYS_mknod
-- 318:	48c5                	li	a7,17
-+ 314:	48c5                	li	a7,17
-  ecall
-- 31a:	00000073          	ecall
-+ 316:	00000073          	ecall
-  ret
-- 31e:	8082                	ret
-+ 31a:	8082                	ret
- 
--0000000000000320 <unlink>:
-+000000000000031c <unlink>:
- .global unlink
- unlink:
-  li a7, SYS_unlink
-- 320:	48c9                	li	a7,18
-+ 31c:	48c9                	li	a7,18
-  ecall
-- 322:	00000073          	ecall
-+ 31e:	00000073          	ecall
-  ret
-- 326:	8082                	ret
-+ 322:	8082                	ret
- 
--0000000000000328 <fstat>:
-+0000000000000324 <fstat>:
- .global fstat
- fstat:
-  li a7, SYS_fstat
-- 328:	48a1                	li	a7,8
-+ 324:	48a1                	li	a7,8
-  ecall
-- 32a:	00000073          	ecall
-+ 326:	00000073          	ecall
-  ret
-- 32e:	8082                	ret
-+ 32a:	8082                	ret
- 
--0000000000000330 <link>:
-+000000000000032c <link>:
- .global link
- link:
-  li a7, SYS_link
-- 330:	48cd                	li	a7,19
-+ 32c:	48cd                	li	a7,19
-  ecall
-- 332:	00000073          	ecall
-+ 32e:	00000073          	ecall
-  ret
-- 336:	8082                	ret
-+ 332:	8082                	ret
- 
--0000000000000338 <mkdir>:
-+0000000000000334 <mkdir>:
- .global mkdir
- mkdir:
-  li a7, SYS_mkdir
-- 338:	48d1                	li	a7,20
-+ 334:	48d1                	li	a7,20
-  ecall
-- 33a:	00000073          	ecall
-+ 336:	00000073          	ecall
-  ret
-- 33e:	8082                	ret
-+ 33a:	8082                	ret
- 
--0000000000000340 <chdir>:
-+000000000000033c <chdir>:
- .global chdir
- chdir:
-  li a7, SYS_chdir
-- 340:	48a5                	li	a7,9
-+ 33c:	48a5                	li	a7,9
-  ecall
-- 342:	00000073          	ecall
-+ 33e:	00000073          	ecall
-  ret
-- 346:	8082                	ret
-+ 342:	8082                	ret
- 
--0000000000000348 <dup>:
-+0000000000000344 <dup>:
- .global dup
- dup:
-  li a7, SYS_dup
-- 348:	48a9                	li	a7,10
-+ 344:	48a9                	li	a7,10
-  ecall
-- 34a:	00000073          	ecall
-+ 346:	00000073          	ecall
-  ret
-- 34e:	8082                	ret
-+ 34a:	8082                	ret
- 
--0000000000000350 <getpid>:
-+000000000000034c <getpid>:
- .global getpid
- getpid:
-  li a7, SYS_getpid
-- 350:	48ad                	li	a7,11
-+ 34c:	48ad                	li	a7,11
-  ecall
-- 352:	00000073          	ecall
-+ 34e:	00000073          	ecall
-  ret
-- 356:	8082                	ret
-+ 352:	8082                	ret
- 
--0000000000000358 <sbrk>:
-+0000000000000354 <sbrk>:
- .global sbrk
- sbrk:
-  li a7, SYS_sbrk
-- 358:	48b1                	li	a7,12
-+ 354:	48b1                	li	a7,12
-  ecall
-- 35a:	00000073          	ecall
-+ 356:	00000073          	ecall
-  ret
-- 35e:	8082                	ret
-+ 35a:	8082                	ret
- 
--0000000000000360 <sleep>:
-+000000000000035c <sleep>:
- .global sleep
- sleep:
-  li a7, SYS_sleep
-- 360:	48b5                	li	a7,13
-+ 35c:	48b5                	li	a7,13
-  ecall
-- 362:	00000073          	ecall
-+ 35e:	00000073          	ecall
-  ret
-- 366:	8082                	ret
-+ 362:	8082                	ret
- 
--0000000000000368 <uptime>:
-+0000000000000364 <uptime>:
- .global uptime
- uptime:
-  li a7, SYS_uptime
-- 368:	48b9                	li	a7,14
-+ 364:	48b9                	li	a7,14
-  ecall
-- 36a:	00000073          	ecall
-+ 366:	00000073          	ecall
-  ret
-- 36e:	8082                	ret
-+ 36a:	8082                	ret
- 
--0000000000000370 <putc>:
-+000000000000036c <putc>:
- 
- static char digits[] = "0123456789ABCDEF";
- 
- static void
- putc(int fd, char c)
- {
-- 370:	1101                	addi	sp,sp,-32
-- 372:	ec06                	sd	ra,24(sp)
-- 374:	e822                	sd	s0,16(sp)
-- 376:	1000                	addi	s0,sp,32
-- 378:	feb407a3          	sb	a1,-17(s0)
-+ 36c:	1101                	add	sp,sp,-32
-+ 36e:	ec06                	sd	ra,24(sp)
-+ 370:	e822                	sd	s0,16(sp)
-+ 372:	1000                	add	s0,sp,32
-+ 374:	feb407a3          	sb	a1,-17(s0)
-   write(fd, &c, 1);
-- 37c:	4605                	li	a2,1
-- 37e:	fef40593          	addi	a1,s0,-17
-- 382:	f6fff0ef          	jal	2f0 <write>
-+ 378:	4605                	li	a2,1
-+ 37a:	fef40593          	add	a1,s0,-17
-+ 37e:	f6fff0ef          	jal	2ec <write>
- }
-- 386:	60e2                	ld	ra,24(sp)
-- 388:	6442                	ld	s0,16(sp)
-- 38a:	6105                	addi	sp,sp,32
-- 38c:	8082                	ret
-+ 382:	60e2                	ld	ra,24(sp)
-+ 384:	6442                	ld	s0,16(sp)
-+ 386:	6105                	add	sp,sp,32
-+ 388:	8082                	ret
- 
--000000000000038e <printint>:
-+000000000000038a <printint>:
- 
- static void
- printint(int fd, int xx, int base, int sgn)
- {
-- 38e:	7139                	addi	sp,sp,-64
-- 390:	fc06                	sd	ra,56(sp)
-- 392:	f822                	sd	s0,48(sp)
-- 394:	f426                	sd	s1,40(sp)
-- 396:	0080                	addi	s0,sp,64
-+ 38a:	7139                	add	sp,sp,-64
-+ 38c:	fc06                	sd	ra,56(sp)
-+ 38e:	f822                	sd	s0,48(sp)
-+ 390:	f426                	sd	s1,40(sp)
-+ 392:	f04a                	sd	s2,32(sp)
-+ 394:	ec4e                	sd	s3,24(sp)
-+ 396:	0080                	add	s0,sp,64
-  398:	84aa                	mv	s1,a0
-   char buf[16];
-   int i, neg;
-@@ -747,8 +747,8 @@ printint(int fd, int xx, int base, int sgn)
- 
-   neg = 0;
-   if(sgn && xx < 0){
-- 39a:	c299                	beqz	a3,3a0 <printint+0x12>
-- 39c:	0805c963          	bltz	a1,42e <printint+0xa0>
-+ 39a:	c299                	beqz	a3,3a0 <printint+0x16>
-+ 39c:	0805c763          	bltz	a1,42a <printint+0xa0>
-     neg = 1;
-     x = -xx;
-   } else {
-@@ -756,7 +756,7 @@ printint(int fd, int xx, int base, int sgn)
-  3a0:	2581                	sext.w	a1,a1
-   neg = 0;
-  3a2:	4881                	li	a7,0
-- 3a4:	fc040693          	addi	a3,s0,-64
-+ 3a4:	fc040693          	add	a3,s0,-64
-   }
- 
-   i = 0;
-@@ -765,149 +765,149 @@ printint(int fd, int xx, int base, int sgn)
-     buf[i++] = digits[x % base];
-  3aa:	2601                	sext.w	a2,a2
-  3ac:	00000517          	auipc	a0,0x0
-- 3b0:	53450513          	addi	a0,a0,1332 # 8e0 <digits>
-+ 3b0:	51450513          	add	a0,a0,1300 # 8c0 <digits>
-  3b4:	883a                	mv	a6,a4
-- 3b6:	2705                	addiw	a4,a4,1
-+ 3b6:	2705                	addw	a4,a4,1
-  3b8:	02c5f7bb          	remuw	a5,a1,a2
-- 3bc:	1782                	slli	a5,a5,0x20
-- 3be:	9381                	srli	a5,a5,0x20
-+ 3bc:	1782                	sll	a5,a5,0x20
-+ 3be:	9381                	srl	a5,a5,0x20
-  3c0:	97aa                	add	a5,a5,a0
-  3c2:	0007c783          	lbu	a5,0(a5)
-  3c6:	00f68023          	sb	a5,0(a3)
-   }while((x /= base) != 0);
-  3ca:	0005879b          	sext.w	a5,a1
-  3ce:	02c5d5bb          	divuw	a1,a1,a2
-- 3d2:	0685                	addi	a3,a3,1
-- 3d4:	fec7f0e3          	bgeu	a5,a2,3b4 <printint+0x26>
-+ 3d2:	0685                	add	a3,a3,1
-+ 3d4:	fec7f0e3          	bgeu	a5,a2,3b4 <printint+0x2a>
-   if(neg)
-- 3d8:	00088c63          	beqz	a7,3f0 <printint+0x62>
-+ 3d8:	00088c63          	beqz	a7,3f0 <printint+0x66>
-     buf[i++] = '-';
-- 3dc:	fd070793          	addi	a5,a4,-48
-+ 3dc:	fd070793          	add	a5,a4,-48
-  3e0:	00878733          	add	a4,a5,s0
-  3e4:	02d00793          	li	a5,45
-  3e8:	fef70823          	sb	a5,-16(a4)
-- 3ec:	0028071b          	addiw	a4,a6,2
-+ 3ec:	0028071b          	addw	a4,a6,2
- 
-   while(--i >= 0)
-- 3f0:	02e05a63          	blez	a4,424 <printint+0x96>
-- 3f4:	f04a                	sd	s2,32(sp)
-- 3f6:	ec4e                	sd	s3,24(sp)
-- 3f8:	fc040793          	addi	a5,s0,-64
-- 3fc:	00e78933          	add	s2,a5,a4
-- 400:	fff78993          	addi	s3,a5,-1
-- 404:	99ba                	add	s3,s3,a4
-- 406:	377d                	addiw	a4,a4,-1
-- 408:	1702                	slli	a4,a4,0x20
-- 40a:	9301                	srli	a4,a4,0x20
-- 40c:	40e989b3          	sub	s3,s3,a4
-+ 3f0:	02e05663          	blez	a4,41c <printint+0x92>
-+ 3f4:	fc040793          	add	a5,s0,-64
-+ 3f8:	00e78933          	add	s2,a5,a4
-+ 3fc:	fff78993          	add	s3,a5,-1
-+ 400:	99ba                	add	s3,s3,a4
-+ 402:	377d                	addw	a4,a4,-1
-+ 404:	1702                	sll	a4,a4,0x20
-+ 406:	9301                	srl	a4,a4,0x20
-+ 408:	40e989b3          	sub	s3,s3,a4
-     putc(fd, buf[i]);
-- 410:	fff94583          	lbu	a1,-1(s2)
-- 414:	8526                	mv	a0,s1
-- 416:	f5bff0ef          	jal	370 <putc>
-+ 40c:	fff94583          	lbu	a1,-1(s2)
-+ 410:	8526                	mv	a0,s1
-+ 412:	f5bff0ef          	jal	36c <putc>
-   while(--i >= 0)
-- 41a:	197d                	addi	s2,s2,-1
-- 41c:	ff391ae3          	bne	s2,s3,410 <printint+0x82>
-- 420:	7902                	ld	s2,32(sp)
-- 422:	69e2                	ld	s3,24(sp)
-+ 416:	197d                	add	s2,s2,-1
-+ 418:	ff391ae3          	bne	s2,s3,40c <printint+0x82>
- }
-- 424:	70e2                	ld	ra,56(sp)
-- 426:	7442                	ld	s0,48(sp)
-- 428:	74a2                	ld	s1,40(sp)
-- 42a:	6121                	addi	sp,sp,64
-- 42c:	8082                	ret
-+ 41c:	70e2                	ld	ra,56(sp)
-+ 41e:	7442                	ld	s0,48(sp)
-+ 420:	74a2                	ld	s1,40(sp)
-+ 422:	7902                	ld	s2,32(sp)
-+ 424:	69e2                	ld	s3,24(sp)
-+ 426:	6121                	add	sp,sp,64
-+ 428:	8082                	ret
-     x = -xx;
-- 42e:	40b005bb          	negw	a1,a1
-+ 42a:	40b005bb          	negw	a1,a1
-     neg = 1;
-- 432:	4885                	li	a7,1
-+ 42e:	4885                	li	a7,1
-     x = -xx;
-- 434:	bf85                	j	3a4 <printint+0x16>
-+ 430:	bf95                	j	3a4 <printint+0x1a>
- 
--0000000000000436 <vprintf>:
-+0000000000000432 <vprintf>:
- }
- 
- /* Print to the given fd. Only understands %d, %x, %p, %s. */
- void
- vprintf(int fd, const char *fmt, va_list ap)
- {
-- 436:	711d                	addi	sp,sp,-96
-- 438:	ec86                	sd	ra,88(sp)
-- 43a:	e8a2                	sd	s0,80(sp)
-- 43c:	e0ca                	sd	s2,64(sp)
-- 43e:	1080                	addi	s0,sp,96
-+ 432:	711d                	add	sp,sp,-96
-+ 434:	ec86                	sd	ra,88(sp)
-+ 436:	e8a2                	sd	s0,80(sp)
-+ 438:	e4a6                	sd	s1,72(sp)
-+ 43a:	e0ca                	sd	s2,64(sp)
-+ 43c:	fc4e                	sd	s3,56(sp)
-+ 43e:	f852                	sd	s4,48(sp)
-+ 440:	f456                	sd	s5,40(sp)
-+ 442:	f05a                	sd	s6,32(sp)
-+ 444:	ec5e                	sd	s7,24(sp)
-+ 446:	e862                	sd	s8,16(sp)
-+ 448:	e466                	sd	s9,8(sp)
-+ 44a:	e06a                	sd	s10,0(sp)
-+ 44c:	1080                	add	s0,sp,96
-   char *s;
-   int c0, c1, c2, i, state;
- 
-   state = 0;
-   for(i = 0; fmt[i]; i++){
-- 440:	0005c903          	lbu	s2,0(a1)
-- 444:	26090863          	beqz	s2,6b4 <vprintf+0x27e>
-- 448:	e4a6                	sd	s1,72(sp)
-- 44a:	fc4e                	sd	s3,56(sp)
-- 44c:	f852                	sd	s4,48(sp)
-- 44e:	f456                	sd	s5,40(sp)
-- 450:	f05a                	sd	s6,32(sp)
-- 452:	ec5e                	sd	s7,24(sp)
-- 454:	e862                	sd	s8,16(sp)
-- 456:	e466                	sd	s9,8(sp)
-- 458:	8b2a                	mv	s6,a0
-- 45a:	8a2e                	mv	s4,a1
-- 45c:	8bb2                	mv	s7,a2
-+ 44e:	0005c903          	lbu	s2,0(a1)
-+ 452:	24090763          	beqz	s2,6a0 <vprintf+0x26e>
-+ 456:	8b2a                	mv	s6,a0
-+ 458:	8a2e                	mv	s4,a1
-+ 45a:	8bb2                	mv	s7,a2
-   state = 0;
-- 45e:	4981                	li	s3,0
-+ 45c:	4981                	li	s3,0
-   for(i = 0; fmt[i]; i++){
-- 460:	4481                	li	s1,0
-- 462:	4701                	li	a4,0
-+ 45e:	4481                	li	s1,0
-+ 460:	4701                	li	a4,0
-       if(c0 == '%'){
-         state = '%';
-       } else {
-         putc(fd, c0);
-       }
-     } else if(state == '%'){
-- 464:	02500a93          	li	s5,37
-+ 462:	02500a93          	li	s5,37
-       c1 = c2 = 0;
-       if(c0) c1 = fmt[i+1] & 0xff;
-       if(c1) c2 = fmt[i+2] & 0xff;
-       if(c0 == 'd'){
-- 468:	06400c13          	li	s8,100
-+ 466:	06400c13          	li	s8,100
-         printint(fd, va_arg(ap, int), 10, 1);
-       } else if(c0 == 'l' && c1 == 'd'){
-- 46c:	06c00c93          	li	s9,108
-- 470:	a005                	j	490 <vprintf+0x5a>
-+ 46a:	06c00c93          	li	s9,108
-+ 46e:	a005                	j	48e <vprintf+0x5c>
-         putc(fd, c0);
-- 472:	85ca                	mv	a1,s2
-- 474:	855a                	mv	a0,s6
-- 476:	efbff0ef          	jal	370 <putc>
-- 47a:	a019                	j	480 <vprintf+0x4a>
-+ 470:	85ca                	mv	a1,s2
-+ 472:	855a                	mv	a0,s6
-+ 474:	ef9ff0ef          	jal	36c <putc>
-+ 478:	a019                	j	47e <vprintf+0x4c>
-     } else if(state == '%'){
-- 47c:	03598263          	beq	s3,s5,4a0 <vprintf+0x6a>
-+ 47a:	03598263          	beq	s3,s5,49e <vprintf+0x6c>
-   for(i = 0; fmt[i]; i++){
-- 480:	2485                	addiw	s1,s1,1
-- 482:	8726                	mv	a4,s1
-- 484:	009a07b3          	add	a5,s4,s1
-- 488:	0007c903          	lbu	s2,0(a5)
-- 48c:	20090c63          	beqz	s2,6a4 <vprintf+0x26e>
-+ 47e:	2485                	addw	s1,s1,1
-+ 480:	8726                	mv	a4,s1
-+ 482:	009a07b3          	add	a5,s4,s1
-+ 486:	0007c903          	lbu	s2,0(a5)
-+ 48a:	20090b63          	beqz	s2,6a0 <vprintf+0x26e>
-     c0 = fmt[i] & 0xff;
-- 490:	0009079b          	sext.w	a5,s2
-+ 48e:	0009079b          	sext.w	a5,s2
-     if(state == 0){
-- 494:	fe0994e3          	bnez	s3,47c <vprintf+0x46>
-+ 492:	fe0994e3          	bnez	s3,47a <vprintf+0x48>
-       if(c0 == '%'){
-- 498:	fd579de3          	bne	a5,s5,472 <vprintf+0x3c>
-+ 496:	fd579de3          	bne	a5,s5,470 <vprintf+0x3e>
-         state = '%';
-- 49c:	89be                	mv	s3,a5
-- 49e:	b7cd                	j	480 <vprintf+0x4a>
-+ 49a:	89be                	mv	s3,a5
-+ 49c:	b7cd                	j	47e <vprintf+0x4c>
-       if(c0) c1 = fmt[i+1] & 0xff;
-+ 49e:	c7c9                	beqz	a5,528 <vprintf+0xf6>
-  4a0:	00ea06b3          	add	a3,s4,a4
-  4a4:	0016c683          	lbu	a3,1(a3)
-       c1 = c2 = 0;
-  4a8:	8636                	mv	a2,a3
-       if(c1) c2 = fmt[i+2] & 0xff;
-- 4aa:	c681                	beqz	a3,4b2 <vprintf+0x7c>
-+ 4aa:	c681                	beqz	a3,4b2 <vprintf+0x80>
-  4ac:	9752                	add	a4,a4,s4
-  4ae:	00274603          	lbu	a2,2(a4)
-       if(c0 == 'd'){
-- 4b2:	03878f63          	beq	a5,s8,4f0 <vprintf+0xba>
-+ 4b2:	03878f63          	beq	a5,s8,4f0 <vprintf+0xbe>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 4b6:	05978963          	beq	a5,s9,508 <vprintf+0xd2>
-+ 4b6:	05978963          	beq	a5,s9,508 <vprintf+0xd6>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-@@ -915,7 +915,7 @@ vprintf(int fd, const char *fmt, va_list ap)
-         i += 2;
-       } else if(c0 == 'u'){
-  4ba:	07500713          	li	a4,117
-- 4be:	0ee78363          	beq	a5,a4,5a4 <vprintf+0x16e>
-+ 4be:	0ee78363          	beq	a5,a4,5a4 <vprintf+0x172>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-@@ -923,7 +923,7 @@ vprintf(int fd, const char *fmt, va_list ap)
-         i += 2;
-       } else if(c0 == 'x'){
-  4c2:	07800713          	li	a4,120
-- 4c6:	12e78563          	beq	a5,a4,5f0 <vprintf+0x1ba>
-+ 4c6:	12e78563          	beq	a5,a4,5f0 <vprintf+0x1be>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-@@ -931,22 +931,22 @@ vprintf(int fd, const char *fmt, va_list ap)
-         i += 2;
-       } else if(c0 == 'p'){
-  4ca:	07000713          	li	a4,112
-- 4ce:	14e78a63          	beq	a5,a4,622 <vprintf+0x1ec>
-+ 4ce:	14e78a63          	beq	a5,a4,622 <vprintf+0x1f0>
-         printptr(fd, va_arg(ap, uint64));
-       } else if(c0 == 's'){
-  4d2:	07300713          	li	a4,115
-- 4d6:	18e78a63          	beq	a5,a4,66a <vprintf+0x234>
-+ 4d6:	18e78863          	beq	a5,a4,666 <vprintf+0x234>
-         if((s = va_arg(ap, char*)) == 0)
-           s = "(null)";
-         for(; *s; s++)
-           putc(fd, *s);
-       } else if(c0 == '%'){
-  4da:	02500713          	li	a4,37
-- 4de:	04e79563          	bne	a5,a4,528 <vprintf+0xf2>
-+ 4de:	04e79563          	bne	a5,a4,528 <vprintf+0xf6>
-         putc(fd, '%');
-  4e2:	02500593          	li	a1,37
-  4e6:	855a                	mv	a0,s6
-- 4e8:	e89ff0ef          	jal	370 <putc>
-+ 4e8:	e85ff0ef          	jal	36c <putc>
-         /* Unknown % sequence.  Print it to draw attention. */
-         putc(fd, '%');
-         putc(fd, c);
-@@ -954,514 +954,502 @@ vprintf(int fd, const char *fmt, va_list ap)
- #endif
-       state = 0;
-  4ec:	4981                	li	s3,0
-- 4ee:	bf49                	j	480 <vprintf+0x4a>
-+ 4ee:	bf41                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 1);
-- 4f0:	008b8913          	addi	s2,s7,8
-+ 4f0:	008b8913          	add	s2,s7,8
-  4f4:	4685                	li	a3,1
-  4f6:	4629                	li	a2,10
-  4f8:	000ba583          	lw	a1,0(s7)
-  4fc:	855a                	mv	a0,s6
-- 4fe:	e91ff0ef          	jal	38e <printint>
-+ 4fe:	e8dff0ef          	jal	38a <printint>
-  502:	8bca                	mv	s7,s2
-       state = 0;
-  504:	4981                	li	s3,0
-- 506:	bfad                	j	480 <vprintf+0x4a>
-+ 506:	bfa5                	j	47e <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'd'){
-  508:	06400793          	li	a5,100
-- 50c:	02f68963          	beq	a3,a5,53e <vprintf+0x108>
-+ 50c:	02f68963          	beq	a3,a5,53e <vprintf+0x10c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-  510:	06c00793          	li	a5,108
-- 514:	04f68263          	beq	a3,a5,558 <vprintf+0x122>
-+ 514:	04f68263          	beq	a3,a5,558 <vprintf+0x126>
-       } else if(c0 == 'l' && c1 == 'u'){
-  518:	07500793          	li	a5,117
-- 51c:	0af68063          	beq	a3,a5,5bc <vprintf+0x186>
-+ 51c:	0af68063          	beq	a3,a5,5bc <vprintf+0x18a>
-       } else if(c0 == 'l' && c1 == 'x'){
-  520:	07800793          	li	a5,120
-- 524:	0ef68263          	beq	a3,a5,608 <vprintf+0x1d2>
-+ 524:	0ef68263          	beq	a3,a5,608 <vprintf+0x1d6>
-         putc(fd, '%');
-  528:	02500593          	li	a1,37
-  52c:	855a                	mv	a0,s6
-- 52e:	e43ff0ef          	jal	370 <putc>
-+ 52e:	e3fff0ef          	jal	36c <putc>
-         putc(fd, c0);
-  532:	85ca                	mv	a1,s2
-  534:	855a                	mv	a0,s6
-- 536:	e3bff0ef          	jal	370 <putc>
-+ 536:	e37ff0ef          	jal	36c <putc>
-       state = 0;
-  53a:	4981                	li	s3,0
-- 53c:	b791                	j	480 <vprintf+0x4a>
-+ 53c:	b789                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 53e:	008b8913          	addi	s2,s7,8
-+ 53e:	008b8913          	add	s2,s7,8
-  542:	4685                	li	a3,1
-  544:	4629                	li	a2,10
-  546:	000ba583          	lw	a1,0(s7)
-  54a:	855a                	mv	a0,s6
-- 54c:	e43ff0ef          	jal	38e <printint>
-+ 54c:	e3fff0ef          	jal	38a <printint>
-         i += 1;
-- 550:	2485                	addiw	s1,s1,1
-+ 550:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 1);
-  552:	8bca                	mv	s7,s2
-       state = 0;
-  554:	4981                	li	s3,0
-         i += 1;
-- 556:	b72d                	j	480 <vprintf+0x4a>
-+ 556:	b725                	j	47e <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-  558:	06400793          	li	a5,100
-- 55c:	02f60763          	beq	a2,a5,58a <vprintf+0x154>
-+ 55c:	02f60763          	beq	a2,a5,58a <vprintf+0x158>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-  560:	07500793          	li	a5,117
-- 564:	06f60963          	beq	a2,a5,5d6 <vprintf+0x1a0>
-+ 564:	06f60963          	beq	a2,a5,5d6 <vprintf+0x1a4>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-  568:	07800793          	li	a5,120
-- 56c:	faf61ee3          	bne	a2,a5,528 <vprintf+0xf2>
-+ 56c:	faf61ee3          	bne	a2,a5,528 <vprintf+0xf6>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 570:	008b8913          	addi	s2,s7,8
-+ 570:	008b8913          	add	s2,s7,8
-  574:	4681                	li	a3,0
-  576:	4641                	li	a2,16
-  578:	000ba583          	lw	a1,0(s7)
-  57c:	855a                	mv	a0,s6
-- 57e:	e11ff0ef          	jal	38e <printint>
-+ 57e:	e0dff0ef          	jal	38a <printint>
-         i += 2;
-- 582:	2489                	addiw	s1,s1,2
-+ 582:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 16, 0);
-  584:	8bca                	mv	s7,s2
-       state = 0;
-  586:	4981                	li	s3,0
-         i += 2;
-- 588:	bde5                	j	480 <vprintf+0x4a>
-+ 588:	bddd                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 58a:	008b8913          	addi	s2,s7,8
-+ 58a:	008b8913          	add	s2,s7,8
-  58e:	4685                	li	a3,1
-  590:	4629                	li	a2,10
-  592:	000ba583          	lw	a1,0(s7)
-  596:	855a                	mv	a0,s6
-- 598:	df7ff0ef          	jal	38e <printint>
-+ 598:	df3ff0ef          	jal	38a <printint>
-         i += 2;
-- 59c:	2489                	addiw	s1,s1,2
-+ 59c:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 1);
-  59e:	8bca                	mv	s7,s2
-       state = 0;
-  5a0:	4981                	li	s3,0
-         i += 2;
-- 5a2:	bdf9                	j	480 <vprintf+0x4a>
-+ 5a2:	bdf1                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 0);
-- 5a4:	008b8913          	addi	s2,s7,8
-+ 5a4:	008b8913          	add	s2,s7,8
-  5a8:	4681                	li	a3,0
-  5aa:	4629                	li	a2,10
-  5ac:	000ba583          	lw	a1,0(s7)
-  5b0:	855a                	mv	a0,s6
-- 5b2:	dddff0ef          	jal	38e <printint>
-+ 5b2:	dd9ff0ef          	jal	38a <printint>
-  5b6:	8bca                	mv	s7,s2
-       state = 0;
-  5b8:	4981                	li	s3,0
-- 5ba:	b5d9                	j	480 <vprintf+0x4a>
-+ 5ba:	b5d1                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 5bc:	008b8913          	addi	s2,s7,8
-+ 5bc:	008b8913          	add	s2,s7,8
-  5c0:	4681                	li	a3,0
-  5c2:	4629                	li	a2,10
-  5c4:	000ba583          	lw	a1,0(s7)
-  5c8:	855a                	mv	a0,s6
-- 5ca:	dc5ff0ef          	jal	38e <printint>
-+ 5ca:	dc1ff0ef          	jal	38a <printint>
-         i += 1;
-- 5ce:	2485                	addiw	s1,s1,1
-+ 5ce:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 0);
-  5d0:	8bca                	mv	s7,s2
-       state = 0;
-  5d2:	4981                	li	s3,0
-         i += 1;
-- 5d4:	b575                	j	480 <vprintf+0x4a>
-+ 5d4:	b56d                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 5d6:	008b8913          	addi	s2,s7,8
-+ 5d6:	008b8913          	add	s2,s7,8
-  5da:	4681                	li	a3,0
-  5dc:	4629                	li	a2,10
-  5de:	000ba583          	lw	a1,0(s7)
-  5e2:	855a                	mv	a0,s6
-- 5e4:	dabff0ef          	jal	38e <printint>
-+ 5e4:	da7ff0ef          	jal	38a <printint>
-         i += 2;
-- 5e8:	2489                	addiw	s1,s1,2
-+ 5e8:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 0);
-  5ea:	8bca                	mv	s7,s2
-       state = 0;
-  5ec:	4981                	li	s3,0
-         i += 2;
-- 5ee:	bd49                	j	480 <vprintf+0x4a>
-+ 5ee:	bd41                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 16, 0);
-- 5f0:	008b8913          	addi	s2,s7,8
-+ 5f0:	008b8913          	add	s2,s7,8
-  5f4:	4681                	li	a3,0
-  5f6:	4641                	li	a2,16
-  5f8:	000ba583          	lw	a1,0(s7)
-  5fc:	855a                	mv	a0,s6
-- 5fe:	d91ff0ef          	jal	38e <printint>
-+ 5fe:	d8dff0ef          	jal	38a <printint>
-  602:	8bca                	mv	s7,s2
-       state = 0;
-  604:	4981                	li	s3,0
-- 606:	bdad                	j	480 <vprintf+0x4a>
-+ 606:	bda5                	j	47e <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 608:	008b8913          	addi	s2,s7,8
-+ 608:	008b8913          	add	s2,s7,8
-  60c:	4681                	li	a3,0
-  60e:	4641                	li	a2,16
-  610:	000ba583          	lw	a1,0(s7)
-  614:	855a                	mv	a0,s6
-- 616:	d79ff0ef          	jal	38e <printint>
-+ 616:	d75ff0ef          	jal	38a <printint>
-         i += 1;
-- 61a:	2485                	addiw	s1,s1,1
-+ 61a:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 16, 0);
-  61c:	8bca                	mv	s7,s2
-       state = 0;
-  61e:	4981                	li	s3,0
-         i += 1;
-- 620:	b585                	j	480 <vprintf+0x4a>
-- 622:	e06a                	sd	s10,0(sp)
-+ 620:	bdb9                	j	47e <vprintf+0x4c>
-         printptr(fd, va_arg(ap, uint64));
-- 624:	008b8d13          	addi	s10,s7,8
-- 628:	000bb983          	ld	s3,0(s7)
-+ 622:	008b8d13          	add	s10,s7,8
-+ 626:	000bb983          	ld	s3,0(s7)
-   putc(fd, '0');
-- 62c:	03000593          	li	a1,48
-- 630:	855a                	mv	a0,s6
-- 632:	d3fff0ef          	jal	370 <putc>
-+ 62a:	03000593          	li	a1,48
-+ 62e:	855a                	mv	a0,s6
-+ 630:	d3dff0ef          	jal	36c <putc>
-   putc(fd, 'x');
-- 636:	07800593          	li	a1,120
-- 63a:	855a                	mv	a0,s6
-- 63c:	d35ff0ef          	jal	370 <putc>
-- 640:	4941                	li	s2,16
-+ 634:	07800593          	li	a1,120
-+ 638:	855a                	mv	a0,s6
-+ 63a:	d33ff0ef          	jal	36c <putc>
-+ 63e:	4941                	li	s2,16
-     putc(fd, digits[x >> (sizeof(uint64) * 8 - 4)]);
-- 642:	00000b97          	auipc	s7,0x0
-- 646:	29eb8b93          	addi	s7,s7,670 # 8e0 <digits>
-- 64a:	03c9d793          	srli	a5,s3,0x3c
-- 64e:	97de                	add	a5,a5,s7
-- 650:	0007c583          	lbu	a1,0(a5)
-- 654:	855a                	mv	a0,s6
-- 656:	d1bff0ef          	jal	370 <putc>
-+ 640:	00000b97          	auipc	s7,0x0
-+ 644:	280b8b93          	add	s7,s7,640 # 8c0 <digits>
-+ 648:	03c9d793          	srl	a5,s3,0x3c
-+ 64c:	97de                	add	a5,a5,s7
-+ 64e:	0007c583          	lbu	a1,0(a5)
-+ 652:	855a                	mv	a0,s6
-+ 654:	d19ff0ef          	jal	36c <putc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
-- 65a:	0992                	slli	s3,s3,0x4
-- 65c:	397d                	addiw	s2,s2,-1
-- 65e:	fe0916e3          	bnez	s2,64a <vprintf+0x214>
-+ 658:	0992                	sll	s3,s3,0x4
-+ 65a:	397d                	addw	s2,s2,-1
-+ 65c:	fe0916e3          	bnez	s2,648 <vprintf+0x216>
-         printptr(fd, va_arg(ap, uint64));
-- 662:	8bea                	mv	s7,s10
-+ 660:	8bea                	mv	s7,s10
-       state = 0;
-- 664:	4981                	li	s3,0
-- 666:	6d02                	ld	s10,0(sp)
-- 668:	bd21                	j	480 <vprintf+0x4a>
-+ 662:	4981                	li	s3,0
-+ 664:	bd29                	j	47e <vprintf+0x4c>
-         if((s = va_arg(ap, char*)) == 0)
-- 66a:	008b8993          	addi	s3,s7,8
-- 66e:	000bb903          	ld	s2,0(s7)
-- 672:	00090f63          	beqz	s2,690 <vprintf+0x25a>
-+ 666:	008b8993          	add	s3,s7,8
-+ 66a:	000bb903          	ld	s2,0(s7)
-+ 66e:	00090f63          	beqz	s2,68c <vprintf+0x25a>
-         for(; *s; s++)
-- 676:	00094583          	lbu	a1,0(s2)
-- 67a:	c195                	beqz	a1,69e <vprintf+0x268>
-+ 672:	00094583          	lbu	a1,0(s2)
-+ 676:	c195                	beqz	a1,69a <vprintf+0x268>
-           putc(fd, *s);
-- 67c:	855a                	mv	a0,s6
-- 67e:	cf3ff0ef          	jal	370 <putc>
-+ 678:	855a                	mv	a0,s6
-+ 67a:	cf3ff0ef          	jal	36c <putc>
-         for(; *s; s++)
-- 682:	0905                	addi	s2,s2,1
-- 684:	00094583          	lbu	a1,0(s2)
-- 688:	f9f5                	bnez	a1,67c <vprintf+0x246>
-+ 67e:	0905                	add	s2,s2,1
-+ 680:	00094583          	lbu	a1,0(s2)
-+ 684:	f9f5                	bnez	a1,678 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-- 68a:	8bce                	mv	s7,s3
-+ 686:	8bce                	mv	s7,s3
-       state = 0;
-- 68c:	4981                	li	s3,0
-- 68e:	bbcd                	j	480 <vprintf+0x4a>
-+ 688:	4981                	li	s3,0
-+ 68a:	bbd5                	j	47e <vprintf+0x4c>
-           s = "(null)";
-- 690:	00000917          	auipc	s2,0x0
-- 694:	24890913          	addi	s2,s2,584 # 8d8 <malloc+0x13c>
-+ 68c:	00000917          	auipc	s2,0x0
-+ 690:	22c90913          	add	s2,s2,556 # 8b8 <malloc+0x11e>
-         for(; *s; s++)
-- 698:	02800593          	li	a1,40
-- 69c:	b7c5                	j	67c <vprintf+0x246>
-+ 694:	02800593          	li	a1,40
-+ 698:	b7c5                	j	678 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-- 69e:	8bce                	mv	s7,s3
-+ 69a:	8bce                	mv	s7,s3
-       state = 0;
-- 6a0:	4981                	li	s3,0
-- 6a2:	bbf9                	j	480 <vprintf+0x4a>
-- 6a4:	64a6                	ld	s1,72(sp)
-- 6a6:	79e2                	ld	s3,56(sp)
-- 6a8:	7a42                	ld	s4,48(sp)
-- 6aa:	7aa2                	ld	s5,40(sp)
-- 6ac:	7b02                	ld	s6,32(sp)
-- 6ae:	6be2                	ld	s7,24(sp)
-- 6b0:	6c42                	ld	s8,16(sp)
-- 6b2:	6ca2                	ld	s9,8(sp)
-+ 69c:	4981                	li	s3,0
-+ 69e:	b3c5                	j	47e <vprintf+0x4c>
-     }
-   }
- }
-- 6b4:	60e6                	ld	ra,88(sp)
-- 6b6:	6446                	ld	s0,80(sp)
-- 6b8:	6906                	ld	s2,64(sp)
-- 6ba:	6125                	addi	sp,sp,96
-- 6bc:	8082                	ret
--
--00000000000006be <fprintf>:
-+ 6a0:	60e6                	ld	ra,88(sp)
-+ 6a2:	6446                	ld	s0,80(sp)
-+ 6a4:	64a6                	ld	s1,72(sp)
-+ 6a6:	6906                	ld	s2,64(sp)
-+ 6a8:	79e2                	ld	s3,56(sp)
-+ 6aa:	7a42                	ld	s4,48(sp)
-+ 6ac:	7aa2                	ld	s5,40(sp)
-+ 6ae:	7b02                	ld	s6,32(sp)
-+ 6b0:	6be2                	ld	s7,24(sp)
-+ 6b2:	6c42                	ld	s8,16(sp)
-+ 6b4:	6ca2                	ld	s9,8(sp)
-+ 6b6:	6d02                	ld	s10,0(sp)
-+ 6b8:	6125                	add	sp,sp,96
-+ 6ba:	8082                	ret
-+
-+00000000000006bc <fprintf>:
- 
- void
- fprintf(int fd, const char *fmt, ...)
- {
-- 6be:	715d                	addi	sp,sp,-80
-- 6c0:	ec06                	sd	ra,24(sp)
-- 6c2:	e822                	sd	s0,16(sp)
-- 6c4:	1000                	addi	s0,sp,32
-- 6c6:	e010                	sd	a2,0(s0)
-- 6c8:	e414                	sd	a3,8(s0)
-- 6ca:	e818                	sd	a4,16(s0)
-- 6cc:	ec1c                	sd	a5,24(s0)
-- 6ce:	03043023          	sd	a6,32(s0)
-- 6d2:	03143423          	sd	a7,40(s0)
-+ 6bc:	715d                	add	sp,sp,-80
-+ 6be:	ec06                	sd	ra,24(sp)
-+ 6c0:	e822                	sd	s0,16(sp)
-+ 6c2:	1000                	add	s0,sp,32
-+ 6c4:	e010                	sd	a2,0(s0)
-+ 6c6:	e414                	sd	a3,8(s0)
-+ 6c8:	e818                	sd	a4,16(s0)
-+ 6ca:	ec1c                	sd	a5,24(s0)
-+ 6cc:	03043023          	sd	a6,32(s0)
-+ 6d0:	03143423          	sd	a7,40(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 6d6:	fe843423          	sd	s0,-24(s0)
-+ 6d4:	fe843423          	sd	s0,-24(s0)
-   vprintf(fd, fmt, ap);
-- 6da:	8622                	mv	a2,s0
-- 6dc:	d5bff0ef          	jal	436 <vprintf>
-+ 6d8:	8622                	mv	a2,s0
-+ 6da:	d59ff0ef          	jal	432 <vprintf>
- }
-- 6e0:	60e2                	ld	ra,24(sp)
-- 6e2:	6442                	ld	s0,16(sp)
-- 6e4:	6161                	addi	sp,sp,80
-- 6e6:	8082                	ret
-+ 6de:	60e2                	ld	ra,24(sp)
-+ 6e0:	6442                	ld	s0,16(sp)
-+ 6e2:	6161                	add	sp,sp,80
-+ 6e4:	8082                	ret
- 
--00000000000006e8 <printf>:
-+00000000000006e6 <printf>:
- 
- void
- printf(const char *fmt, ...)
- {
-- 6e8:	711d                	addi	sp,sp,-96
-- 6ea:	ec06                	sd	ra,24(sp)
-- 6ec:	e822                	sd	s0,16(sp)
-- 6ee:	1000                	addi	s0,sp,32
-- 6f0:	e40c                	sd	a1,8(s0)
-- 6f2:	e810                	sd	a2,16(s0)
-- 6f4:	ec14                	sd	a3,24(s0)
-- 6f6:	f018                	sd	a4,32(s0)
-- 6f8:	f41c                	sd	a5,40(s0)
-- 6fa:	03043823          	sd	a6,48(s0)
-- 6fe:	03143c23          	sd	a7,56(s0)
-+ 6e6:	711d                	add	sp,sp,-96
-+ 6e8:	ec06                	sd	ra,24(sp)
-+ 6ea:	e822                	sd	s0,16(sp)
-+ 6ec:	1000                	add	s0,sp,32
-+ 6ee:	e40c                	sd	a1,8(s0)
-+ 6f0:	e810                	sd	a2,16(s0)
-+ 6f2:	ec14                	sd	a3,24(s0)
-+ 6f4:	f018                	sd	a4,32(s0)
-+ 6f6:	f41c                	sd	a5,40(s0)
-+ 6f8:	03043823          	sd	a6,48(s0)
-+ 6fc:	03143c23          	sd	a7,56(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 702:	00840613          	addi	a2,s0,8
-- 706:	fec43423          	sd	a2,-24(s0)
-+ 700:	00840613          	add	a2,s0,8
-+ 704:	fec43423          	sd	a2,-24(s0)
-   vprintf(1, fmt, ap);
-- 70a:	85aa                	mv	a1,a0
-- 70c:	4505                	li	a0,1
-- 70e:	d29ff0ef          	jal	436 <vprintf>
-+ 708:	85aa                	mv	a1,a0
-+ 70a:	4505                	li	a0,1
-+ 70c:	d27ff0ef          	jal	432 <vprintf>
- }
-- 712:	60e2                	ld	ra,24(sp)
-- 714:	6442                	ld	s0,16(sp)
-- 716:	6125                	addi	sp,sp,96
-- 718:	8082                	ret
-+ 710:	60e2                	ld	ra,24(sp)
-+ 712:	6442                	ld	s0,16(sp)
-+ 714:	6125                	add	sp,sp,96
-+ 716:	8082                	ret
- 
--000000000000071a <free>:
-+0000000000000718 <free>:
- static Header base;
- static Header *freep;
- 
- void
- free(void *ap)
- {
-- 71a:	1141                	addi	sp,sp,-16
-- 71c:	e422                	sd	s0,8(sp)
-- 71e:	0800                	addi	s0,sp,16
-+ 718:	1141                	add	sp,sp,-16
-+ 71a:	e422                	sd	s0,8(sp)
-+ 71c:	0800                	add	s0,sp,16
-   Header *bp, *p;
- 
-   bp = (Header*)ap - 1;
-- 720:	ff050693          	addi	a3,a0,-16
-+ 71e:	ff050693          	add	a3,a0,-16
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 724:	00001797          	auipc	a5,0x1
-- 728:	8dc7b783          	ld	a5,-1828(a5) # 1000 <freep>
-- 72c:	a02d                	j	756 <free+0x3c>
-+ 722:	00001797          	auipc	a5,0x1
-+ 726:	8de7b783          	ld	a5,-1826(a5) # 1000 <freep>
-+ 72a:	a02d                	j	754 <free+0x3c>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-       break;
-   if(bp + bp->s.size == p->s.ptr){
-     bp->s.size += p->s.ptr->s.size;
-- 72e:	4618                	lw	a4,8(a2)
-- 730:	9f2d                	addw	a4,a4,a1
-- 732:	fee52c23          	sw	a4,-8(a0)
-+ 72c:	4618                	lw	a4,8(a2)
-+ 72e:	9f2d                	addw	a4,a4,a1
-+ 730:	fee52c23          	sw	a4,-8(a0)
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 736:	6398                	ld	a4,0(a5)
-- 738:	6310                	ld	a2,0(a4)
-- 73a:	a83d                	j	778 <free+0x5e>
-+ 734:	6398                	ld	a4,0(a5)
-+ 736:	6310                	ld	a2,0(a4)
-+ 738:	a83d                	j	776 <free+0x5e>
-   } else
-     bp->s.ptr = p->s.ptr;
-   if(p + p->s.size == bp){
-     p->s.size += bp->s.size;
-- 73c:	ff852703          	lw	a4,-8(a0)
-- 740:	9f31                	addw	a4,a4,a2
-- 742:	c798                	sw	a4,8(a5)
-+ 73a:	ff852703          	lw	a4,-8(a0)
-+ 73e:	9f31                	addw	a4,a4,a2
-+ 740:	c798                	sw	a4,8(a5)
-     p->s.ptr = bp->s.ptr;
-- 744:	ff053683          	ld	a3,-16(a0)
-- 748:	a091                	j	78c <free+0x72>
-+ 742:	ff053683          	ld	a3,-16(a0)
-+ 746:	a091                	j	78a <free+0x72>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 74a:	6398                	ld	a4,0(a5)
-- 74c:	00e7e463          	bltu	a5,a4,754 <free+0x3a>
-- 750:	00e6ea63          	bltu	a3,a4,764 <free+0x4a>
-+ 748:	6398                	ld	a4,0(a5)
-+ 74a:	00e7e463          	bltu	a5,a4,752 <free+0x3a>
-+ 74e:	00e6ea63          	bltu	a3,a4,762 <free+0x4a>
- {
-- 754:	87ba                	mv	a5,a4
-+ 752:	87ba                	mv	a5,a4
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 756:	fed7fae3          	bgeu	a5,a3,74a <free+0x30>
-- 75a:	6398                	ld	a4,0(a5)
-- 75c:	00e6e463          	bltu	a3,a4,764 <free+0x4a>
-+ 754:	fed7fae3          	bgeu	a5,a3,748 <free+0x30>
-+ 758:	6398                	ld	a4,0(a5)
-+ 75a:	00e6e463          	bltu	a3,a4,762 <free+0x4a>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 760:	fee7eae3          	bltu	a5,a4,754 <free+0x3a>
-+ 75e:	fee7eae3          	bltu	a5,a4,752 <free+0x3a>
-   if(bp + bp->s.size == p->s.ptr){
-- 764:	ff852583          	lw	a1,-8(a0)
-- 768:	6390                	ld	a2,0(a5)
-- 76a:	02059813          	slli	a6,a1,0x20
-- 76e:	01c85713          	srli	a4,a6,0x1c
-- 772:	9736                	add	a4,a4,a3
-- 774:	fae60de3          	beq	a2,a4,72e <free+0x14>
-+ 762:	ff852583          	lw	a1,-8(a0)
-+ 766:	6390                	ld	a2,0(a5)
-+ 768:	02059813          	sll	a6,a1,0x20
-+ 76c:	01c85713          	srl	a4,a6,0x1c
-+ 770:	9736                	add	a4,a4,a3
-+ 772:	fae60de3          	beq	a2,a4,72c <free+0x14>
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 778:	fec53823          	sd	a2,-16(a0)
-+ 776:	fec53823          	sd	a2,-16(a0)
-   if(p + p->s.size == bp){
-- 77c:	4790                	lw	a2,8(a5)
-- 77e:	02061593          	slli	a1,a2,0x20
-- 782:	01c5d713          	srli	a4,a1,0x1c
-- 786:	973e                	add	a4,a4,a5
-- 788:	fae68ae3          	beq	a3,a4,73c <free+0x22>
-+ 77a:	4790                	lw	a2,8(a5)
-+ 77c:	02061593          	sll	a1,a2,0x20
-+ 780:	01c5d713          	srl	a4,a1,0x1c
-+ 784:	973e                	add	a4,a4,a5
-+ 786:	fae68ae3          	beq	a3,a4,73a <free+0x22>
-     p->s.ptr = bp->s.ptr;
-- 78c:	e394                	sd	a3,0(a5)
-+ 78a:	e394                	sd	a3,0(a5)
-   } else
-     p->s.ptr = bp;
-   freep = p;
-- 78e:	00001717          	auipc	a4,0x1
-- 792:	86f73923          	sd	a5,-1934(a4) # 1000 <freep>
-+ 78c:	00001717          	auipc	a4,0x1
-+ 790:	86f73a23          	sd	a5,-1932(a4) # 1000 <freep>
- }
-- 796:	6422                	ld	s0,8(sp)
-- 798:	0141                	addi	sp,sp,16
-- 79a:	8082                	ret
-+ 794:	6422                	ld	s0,8(sp)
-+ 796:	0141                	add	sp,sp,16
-+ 798:	8082                	ret
- 
--000000000000079c <malloc>:
-+000000000000079a <malloc>:
-   return freep;
- }
- 
- void*
- malloc(uint nbytes)
- {
-- 79c:	7139                	addi	sp,sp,-64
-- 79e:	fc06                	sd	ra,56(sp)
-- 7a0:	f822                	sd	s0,48(sp)
-- 7a2:	f426                	sd	s1,40(sp)
-+ 79a:	7139                	add	sp,sp,-64
-+ 79c:	fc06                	sd	ra,56(sp)
-+ 79e:	f822                	sd	s0,48(sp)
-+ 7a0:	f426                	sd	s1,40(sp)
-+ 7a2:	f04a                	sd	s2,32(sp)
-  7a4:	ec4e                	sd	s3,24(sp)
-- 7a6:	0080                	addi	s0,sp,64
-+ 7a6:	e852                	sd	s4,16(sp)
-+ 7a8:	e456                	sd	s5,8(sp)
-+ 7aa:	e05a                	sd	s6,0(sp)
-+ 7ac:	0080                	add	s0,sp,64
-   Header *p, *prevp;
-   uint nunits;
- 
-   nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;
-- 7a8:	02051493          	slli	s1,a0,0x20
-- 7ac:	9081                	srli	s1,s1,0x20
-- 7ae:	04bd                	addi	s1,s1,15
-- 7b0:	8091                	srli	s1,s1,0x4
-- 7b2:	0014899b          	addiw	s3,s1,1
-- 7b6:	0485                	addi	s1,s1,1
-+ 7ae:	02051493          	sll	s1,a0,0x20
-+ 7b2:	9081                	srl	s1,s1,0x20
-+ 7b4:	04bd                	add	s1,s1,15
-+ 7b6:	8091                	srl	s1,s1,0x4
-+ 7b8:	0014899b          	addw	s3,s1,1
-+ 7bc:	0485                	add	s1,s1,1
-   if((prevp = freep) == 0){
-- 7b8:	00001517          	auipc	a0,0x1
-- 7bc:	84853503          	ld	a0,-1976(a0) # 1000 <freep>
-- 7c0:	c915                	beqz	a0,7f4 <malloc+0x58>
-+ 7be:	00001517          	auipc	a0,0x1
-+ 7c2:	84253503          	ld	a0,-1982(a0) # 1000 <freep>
-+ 7c6:	c515                	beqz	a0,7f2 <malloc+0x58>
-     base.s.ptr = freep = prevp = &base;
-     base.s.size = 0;
-   }
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 7c2:	611c                	ld	a5,0(a0)
-+ 7c8:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 7c4:	4798                	lw	a4,8(a5)
-- 7c6:	08977a63          	bgeu	a4,s1,85a <malloc+0xbe>
-- 7ca:	f04a                	sd	s2,32(sp)
-- 7cc:	e852                	sd	s4,16(sp)
-- 7ce:	e456                	sd	s5,8(sp)
-- 7d0:	e05a                	sd	s6,0(sp)
-+ 7ca:	4798                	lw	a4,8(a5)
-+ 7cc:	02977f63          	bgeu	a4,s1,80a <malloc+0x70>
-   if(nu < 4096)
-- 7d2:	8a4e                	mv	s4,s3
-- 7d4:	0009871b          	sext.w	a4,s3
-- 7d8:	6685                	lui	a3,0x1
-- 7da:	00d77363          	bgeu	a4,a3,7e0 <malloc+0x44>
-- 7de:	6a05                	lui	s4,0x1
-- 7e0:	000a0b1b          	sext.w	s6,s4
-+ 7d0:	8a4e                	mv	s4,s3
-+ 7d2:	0009871b          	sext.w	a4,s3
-+ 7d6:	6685                	lui	a3,0x1
-+ 7d8:	00d77363          	bgeu	a4,a3,7de <malloc+0x44>
-+ 7dc:	6a05                	lui	s4,0x1
-+ 7de:	000a0b1b          	sext.w	s6,s4
-   p = sbrk(nu * sizeof(Header));
-- 7e4:	004a1a1b          	slliw	s4,s4,0x4
-+ 7e2:	004a1a1b          	sllw	s4,s4,0x4
-         p->s.size = nunits;
-       }
-       freep = prevp;
-       return (void*)(p + 1);
-     }
-     if(p == freep)
-- 7e8:	00001917          	auipc	s2,0x1
-- 7ec:	81890913          	addi	s2,s2,-2024 # 1000 <freep>
-+ 7e6:	00001917          	auipc	s2,0x1
-+ 7ea:	81a90913          	add	s2,s2,-2022 # 1000 <freep>
-   if(p == (char*)-1)
-- 7f0:	5afd                	li	s5,-1
-- 7f2:	a081                	j	832 <malloc+0x96>
-- 7f4:	f04a                	sd	s2,32(sp)
-- 7f6:	e852                	sd	s4,16(sp)
-- 7f8:	e456                	sd	s5,8(sp)
-- 7fa:	e05a                	sd	s6,0(sp)
-+ 7ee:	5afd                	li	s5,-1
-+ 7f0:	a885                	j	860 <malloc+0xc6>
-     base.s.ptr = freep = prevp = &base;
-- 7fc:	00001797          	auipc	a5,0x1
-- 800:	81478793          	addi	a5,a5,-2028 # 1010 <base>
-- 804:	00000717          	auipc	a4,0x0
-- 808:	7ef73e23          	sd	a5,2044(a4) # 1000 <freep>
-- 80c:	e39c                	sd	a5,0(a5)
-+ 7f2:	00001797          	auipc	a5,0x1
-+ 7f6:	81e78793          	add	a5,a5,-2018 # 1010 <base>
-+ 7fa:	00001717          	auipc	a4,0x1
-+ 7fe:	80f73323          	sd	a5,-2042(a4) # 1000 <freep>
-+ 802:	e39c                	sd	a5,0(a5)
-     base.s.size = 0;
-- 80e:	0007a423          	sw	zero,8(a5)
-+ 804:	0007a423          	sw	zero,8(a5)
-     if(p->s.size >= nunits){
-- 812:	b7c1                	j	7d2 <malloc+0x36>
-+ 808:	b7e1                	j	7d0 <malloc+0x36>
-+      if(p->s.size == nunits)
-+ 80a:	02e48c63          	beq	s1,a4,842 <malloc+0xa8>
-+        p->s.size -= nunits;
-+ 80e:	4137073b          	subw	a4,a4,s3
-+ 812:	c798                	sw	a4,8(a5)
-+        p += p->s.size;
-+ 814:	02071693          	sll	a3,a4,0x20
-+ 818:	01c6d713          	srl	a4,a3,0x1c
-+ 81c:	97ba                	add	a5,a5,a4
-+        p->s.size = nunits;
-+ 81e:	0137a423          	sw	s3,8(a5)
-+      freep = prevp;
-+ 822:	00000717          	auipc	a4,0x0
-+ 826:	7ca73f23          	sd	a0,2014(a4) # 1000 <freep>
-+      return (void*)(p + 1);
-+ 82a:	01078513          	add	a0,a5,16
-+      if((p = morecore(nunits)) == 0)
-+        return 0;
-+  }
-+}
-+ 82e:	70e2                	ld	ra,56(sp)
-+ 830:	7442                	ld	s0,48(sp)
-+ 832:	74a2                	ld	s1,40(sp)
-+ 834:	7902                	ld	s2,32(sp)
-+ 836:	69e2                	ld	s3,24(sp)
-+ 838:	6a42                	ld	s4,16(sp)
-+ 83a:	6aa2                	ld	s5,8(sp)
-+ 83c:	6b02                	ld	s6,0(sp)
-+ 83e:	6121                	add	sp,sp,64
-+ 840:	8082                	ret
-         prevp->s.ptr = p->s.ptr;
-- 814:	6398                	ld	a4,0(a5)
-- 816:	e118                	sd	a4,0(a0)
-- 818:	a8a9                	j	872 <malloc+0xd6>
-+ 842:	6398                	ld	a4,0(a5)
-+ 844:	e118                	sd	a4,0(a0)
-+ 846:	bff1                	j	822 <malloc+0x88>
-   hp->s.size = nu;
-- 81a:	01652423          	sw	s6,8(a0)
-+ 848:	01652423          	sw	s6,8(a0)
-   free((void*)(hp + 1));
-- 81e:	0541                	addi	a0,a0,16
-- 820:	efbff0ef          	jal	71a <free>
-+ 84c:	0541                	add	a0,a0,16
-+ 84e:	ecbff0ef          	jal	718 <free>
-   return freep;
-- 824:	00093503          	ld	a0,0(s2)
-+ 852:	00093503          	ld	a0,0(s2)
-       if((p = morecore(nunits)) == 0)
-- 828:	c12d                	beqz	a0,88a <malloc+0xee>
-+ 856:	dd61                	beqz	a0,82e <malloc+0x94>
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 82a:	611c                	ld	a5,0(a0)
-+ 858:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 82c:	4798                	lw	a4,8(a5)
-- 82e:	02977263          	bgeu	a4,s1,852 <malloc+0xb6>
-+ 85a:	4798                	lw	a4,8(a5)
-+ 85c:	fa9777e3          	bgeu	a4,s1,80a <malloc+0x70>
-     if(p == freep)
-- 832:	00093703          	ld	a4,0(s2)
-- 836:	853e                	mv	a0,a5
-- 838:	fef719e3          	bne	a4,a5,82a <malloc+0x8e>
-+ 860:	00093703          	ld	a4,0(s2)
-+ 864:	853e                	mv	a0,a5
-+ 866:	fef719e3          	bne	a4,a5,858 <malloc+0xbe>
-   p = sbrk(nu * sizeof(Header));
-- 83c:	8552                	mv	a0,s4
-- 83e:	b1bff0ef          	jal	358 <sbrk>
-+ 86a:	8552                	mv	a0,s4
-+ 86c:	ae9ff0ef          	jal	354 <sbrk>
-   if(p == (char*)-1)
-- 842:	fd551ce3          	bne	a0,s5,81a <malloc+0x7e>
-+ 870:	fd551ce3          	bne	a0,s5,848 <malloc+0xae>
-         return 0;
-- 846:	4501                	li	a0,0
-- 848:	7902                	ld	s2,32(sp)
-- 84a:	6a42                	ld	s4,16(sp)
-- 84c:	6aa2                	ld	s5,8(sp)
-- 84e:	6b02                	ld	s6,0(sp)
-- 850:	a03d                	j	87e <malloc+0xe2>
-- 852:	7902                	ld	s2,32(sp)
-- 854:	6a42                	ld	s4,16(sp)
-- 856:	6aa2                	ld	s5,8(sp)
-- 858:	6b02                	ld	s6,0(sp)
--      if(p->s.size == nunits)
-- 85a:	fae48de3          	beq	s1,a4,814 <malloc+0x78>
--        p->s.size -= nunits;
-- 85e:	4137073b          	subw	a4,a4,s3
-- 862:	c798                	sw	a4,8(a5)
--        p += p->s.size;
-- 864:	02071693          	slli	a3,a4,0x20
-- 868:	01c6d713          	srli	a4,a3,0x1c
-- 86c:	97ba                	add	a5,a5,a4
--        p->s.size = nunits;
-- 86e:	0137a423          	sw	s3,8(a5)
--      freep = prevp;
-- 872:	00000717          	auipc	a4,0x0
-- 876:	78a73723          	sd	a0,1934(a4) # 1000 <freep>
--      return (void*)(p + 1);
-- 87a:	01078513          	addi	a0,a5,16
--  }
--}
-- 87e:	70e2                	ld	ra,56(sp)
-- 880:	7442                	ld	s0,48(sp)
-- 882:	74a2                	ld	s1,40(sp)
-- 884:	69e2                	ld	s3,24(sp)
-- 886:	6121                	addi	sp,sp,64
-- 888:	8082                	ret
-- 88a:	7902                	ld	s2,32(sp)
-- 88c:	6a42                	ld	s4,16(sp)
-- 88e:	6aa2                	ld	s5,8(sp)
-- 890:	6b02                	ld	s6,0(sp)
-- 892:	b7f5                	j	87e <malloc+0xe2>
-+ 874:	4501                	li	a0,0
-+ 876:	bf65                	j	82e <malloc+0x94>
-diff --git a/Assignments/Assignment-6/xv6/user/rm.d b/Assignments/Assignment-6/xv6/user/rm.d
-index 8eedab3..bc40001 100644
---- a/Assignments/Assignment-6/xv6/user/rm.d
-+++ b/Assignments/Assignment-6/xv6/user/rm.d
-@@ -1,3 +1 @@
--user/rm.o: user/rm.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/stat.h user/user.h
-+user/rm.o: user/rm.c kernel/types.h kernel/stat.h user/user.h
-diff --git a/Assignments/Assignment-6/xv6/user/rm.o b/Assignments/Assignment-6/xv6/user/rm.o
-index 78b35081..f2033bf 100644
-Binary files a/Assignments/Assignment-6/xv6/user/rm.o and b/Assignments/Assignment-6/xv6/user/rm.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/rm.sym b/Assignments/Assignment-6/xv6/user/rm.sym
-index db28e77..4cb971d 100644
---- a/Assignments/Assignment-6/xv6/user/rm.sym
-+++ b/Assignments/Assignment-6/xv6/user/rm.sym
-@@ -1,6 +1,5 @@
- 0000000000000000 .text
--0000000000000898 .rodata
--00000000000008f8 .eh_frame
-+0000000000000878 .rodata
- 0000000000001000 .data
- 0000000000001000 .bss
- 0000000000000000 .debug_info
-@@ -11,53 +10,54 @@
- 0000000000000000 .debug_str
- 0000000000000000 .comment
- 0000000000000000 .riscv.attributes
-+0000000000000000 .debug_frame
- 0000000000000000 .debug_ranges
- 0000000000000000 rm.c
- 0000000000000000 ulib.c
- 0000000000000000 usys.o
- 0000000000000000 printf.c
--0000000000000370 putc
--000000000000038e printint
--00000000000008e0 digits
-+000000000000036c putc
-+000000000000038a printint
-+00000000000008c0 digits
- 0000000000000000 umalloc.c
- 0000000000001000 freep
- 0000000000001010 base
--0000000000000078 strcpy
--00000000000006e8 printf
--0000000000000222 memmove
--0000000000000318 mknod
--0000000000000130 gets
--0000000000000350 getpid
--00000000000002b4 memcpy
--000000000000079c malloc
--0000000000000360 sleep
--00000000000002e0 pipe
--00000000000002f0 write
--0000000000000328 fstat
--00000000000006be fprintf
--0000000000000300 kill
--0000000000000436 vprintf
--0000000000000340 chdir
--0000000000000308 exec
--00000000000002d8 wait
--00000000000002e8 read
--0000000000000320 unlink
--000000000000027a memcmp
--00000000000002c8 fork
--0000000000000358 sbrk
--0000000000000368 uptime
--00000000000000ea memset
-+0000000000000074 strcpy
-+00000000000006e6 printf
-+000000000000021e memmove
-+0000000000000314 mknod
-+000000000000012c gets
-+000000000000034c getpid
-+00000000000002b0 memcpy
-+000000000000079a malloc
-+000000000000035c sleep
-+00000000000002dc pipe
-+00000000000002ec write
-+0000000000000324 fstat
-+00000000000006bc fprintf
-+00000000000002fc kill
-+0000000000000432 vprintf
-+000000000000033c chdir
-+0000000000000304 exec
-+00000000000002d4 wait
-+00000000000002e4 read
-+000000000000031c unlink
-+0000000000000276 memcmp
-+00000000000002c4 fork
-+0000000000000354 sbrk
-+0000000000000364 uptime
-+00000000000000e6 memset
- 0000000000000000 main
--0000000000000094 strcmp
--0000000000000348 dup
--00000000000001a0 stat
--0000000000000330 link
--00000000000002d0 exit
--0000000000000066 start
--00000000000001da atoi
--00000000000000c0 strlen
--0000000000000310 open
--000000000000010c strchr
--0000000000000338 mkdir
--00000000000002f8 close
--000000000000071a free
-+0000000000000090 strcmp
-+0000000000000344 dup
-+000000000000019c stat
-+000000000000032c link
-+00000000000002cc exit
-+0000000000000062 start
-+00000000000001d6 atoi
-+00000000000000bc strlen
-+000000000000030c open
-+0000000000000108 strchr
-+0000000000000334 mkdir
-+00000000000002f4 close
-+0000000000000718 free
-diff --git a/Assignments/Assignment-6/xv6/user/sh.asm b/Assignments/Assignment-6/xv6/user/sh.asm
-index 05b4fbf..0f06bbe 100644
---- a/Assignments/Assignment-6/xv6/user/sh.asm
-+++ b/Assignments/Assignment-6/xv6/user/sh.asm
-@@ -11,29 +11,29 @@ Disassembly of section .text:
- int
- getcmd(char *buf, int nbuf)
- {
--       0:	1101                	addi	sp,sp,-32
-+       0:	1101                	add	sp,sp,-32
-        2:	ec06                	sd	ra,24(sp)
-        4:	e822                	sd	s0,16(sp)
-        6:	e426                	sd	s1,8(sp)
-        8:	e04a                	sd	s2,0(sp)
--       a:	1000                	addi	s0,sp,32
-+       a:	1000                	add	s0,sp,32
-        c:	84aa                	mv	s1,a0
-        e:	892e                	mv	s2,a1
-   write(2, "$ ", 2);
-       10:	4609                	li	a2,2
-       12:	00001597          	auipc	a1,0x1
--      16:	1ae58593          	addi	a1,a1,430 # 11c0 <malloc+0xf8>
-+      16:	19e58593          	add	a1,a1,414 # 11b0 <malloc+0xe0>
-       1a:	4509                	li	a0,2
--      1c:	401000ef          	jal	c1c <write>
-+      1c:	407000ef          	jal	c22 <write>
-   memset(buf, 0, nbuf);
-       20:	864a                	mv	a2,s2
-       22:	4581                	li	a1,0
-       24:	8526                	mv	a0,s1
--      26:	1f1000ef          	jal	a16 <memset>
-+      26:	1f7000ef          	jal	a1c <memset>
-   gets(buf, nbuf);
-       2a:	85ca                	mv	a1,s2
-       2c:	8526                	mv	a0,s1
--      2e:	22f000ef          	jal	a5c <gets>
-+      2e:	235000ef          	jal	a62 <gets>
-   if(buf[0] == 0) /* EOF */
-       32:	0004c503          	lbu	a0,0(s1)
-       36:	00153513          	seqz	a0,a0
-@@ -45,7 +45,7 @@ getcmd(char *buf, int nbuf)
-       40:	6442                	ld	s0,16(sp)
-       42:	64a2                	ld	s1,8(sp)
-       44:	6902                	ld	s2,0(sp)
--      46:	6105                	addi	sp,sp,32
-+      46:	6105                	add	sp,sp,32
-       48:	8082                	ret
- 
- 000000000000004a <panic>:
-@@ -55,19 +55,19 @@ getcmd(char *buf, int nbuf)
- void
- panic(char *s)
- {
--      4a:	1141                	addi	sp,sp,-16
-+      4a:	1141                	add	sp,sp,-16
-       4c:	e406                	sd	ra,8(sp)
-       4e:	e022                	sd	s0,0(sp)
--      50:	0800                	addi	s0,sp,16
-+      50:	0800                	add	s0,sp,16
-       52:	862a                	mv	a2,a0
-   fprintf(2, "%s\n", s);
-       54:	00001597          	auipc	a1,0x1
--      58:	17c58593          	addi	a1,a1,380 # 11d0 <malloc+0x108>
-+      58:	16458593          	add	a1,a1,356 # 11b8 <malloc+0xe8>
-       5c:	4509                	li	a0,2
--      5e:	78d000ef          	jal	fea <fprintf>
-+      5e:	795000ef          	jal	ff2 <fprintf>
-   exit(1);
-       62:	4505                	li	a0,1
--      64:	399000ef          	jal	bfc <exit>
-+      64:	39f000ef          	jal	c02 <exit>
- 
- 0000000000000068 <fork1>:
- }
-@@ -75,14 +75,14 @@ panic(char *s)
- int
- fork1(void)
- {
--      68:	1141                	addi	sp,sp,-16
-+      68:	1141                	add	sp,sp,-16
-       6a:	e406                	sd	ra,8(sp)
-       6c:	e022                	sd	s0,0(sp)
--      6e:	0800                	addi	s0,sp,16
-+      6e:	0800                	add	s0,sp,16
-   int pid;
- 
-   pid = fork();
--      70:	385000ef          	jal	bf4 <fork>
-+      70:	38b000ef          	jal	bfa <fork>
-   if(pid == -1)
-       74:	57fd                	li	a5,-1
-       76:	00f50663          	beq	a0,a5,82 <fork1+0x1a>
-@@ -91,2633 +91,2630 @@ fork1(void)
- }
-       7a:	60a2                	ld	ra,8(sp)
-       7c:	6402                	ld	s0,0(sp)
--      7e:	0141                	addi	sp,sp,16
-+      7e:	0141                	add	sp,sp,16
-       80:	8082                	ret
-     panic("fork");
-       82:	00001517          	auipc	a0,0x1
--      86:	15650513          	addi	a0,a0,342 # 11d8 <malloc+0x110>
-+      86:	13e50513          	add	a0,a0,318 # 11c0 <malloc+0xf0>
-       8a:	fc1ff0ef          	jal	4a <panic>
- 
- 000000000000008e <runcmd>:
- {
--      8e:	7179                	addi	sp,sp,-48
-+      8e:	7179                	add	sp,sp,-48
-       90:	f406                	sd	ra,40(sp)
-       92:	f022                	sd	s0,32(sp)
--      94:	1800                	addi	s0,sp,48
-+      94:	ec26                	sd	s1,24(sp)
-+      96:	1800                	add	s0,sp,48
-   if(cmd == 0)
--      96:	c115                	beqz	a0,ba <runcmd+0x2c>
--      98:	ec26                	sd	s1,24(sp)
-+      98:	c10d                	beqz	a0,ba <runcmd+0x2c>
-       9a:	84aa                	mv	s1,a0
-   switch(cmd->type){
-       9c:	4118                	lw	a4,0(a0)
-       9e:	4795                	li	a5,5
--      a0:	02e7e163          	bltu	a5,a4,c2 <runcmd+0x34>
-+      a0:	02e7e063          	bltu	a5,a4,c0 <runcmd+0x32>
-       a4:	00056783          	lwu	a5,0(a0)
--      a8:	078a                	slli	a5,a5,0x2
-+      a8:	078a                	sll	a5,a5,0x2
-       aa:	00001717          	auipc	a4,0x1
--      ae:	22e70713          	addi	a4,a4,558 # 12d8 <malloc+0x210>
-+      ae:	21670713          	add	a4,a4,534 # 12c0 <malloc+0x1f0>
-       b2:	97ba                	add	a5,a5,a4
-       b4:	439c                	lw	a5,0(a5)
-       b6:	97ba                	add	a5,a5,a4
-       b8:	8782                	jr	a5
--      ba:	ec26                	sd	s1,24(sp)
-     exit(1);
--      bc:	4505                	li	a0,1
--      be:	33f000ef          	jal	bfc <exit>
-+      ba:	4505                	li	a0,1
-+      bc:	347000ef          	jal	c02 <exit>
-     panic("runcmd");
--      c2:	00001517          	auipc	a0,0x1
--      c6:	11e50513          	addi	a0,a0,286 # 11e0 <malloc+0x118>
--      ca:	f81ff0ef          	jal	4a <panic>
-+      c0:	00001517          	auipc	a0,0x1
-+      c4:	10850513          	add	a0,a0,264 # 11c8 <malloc+0xf8>
-+      c8:	f83ff0ef          	jal	4a <panic>
-     if(ecmd->argv[0] == 0)
--      ce:	6508                	ld	a0,8(a0)
--      d0:	c105                	beqz	a0,f0 <runcmd+0x62>
-+      cc:	6508                	ld	a0,8(a0)
-+      ce:	c105                	beqz	a0,ee <runcmd+0x60>
-     exec(ecmd->argv[0], ecmd->argv);
--      d2:	00848593          	addi	a1,s1,8
--      d6:	35f000ef          	jal	c34 <exec>
-+      d0:	00848593          	add	a1,s1,8
-+      d4:	367000ef          	jal	c3a <exec>
-     fprintf(2, "exec %s failed\n", ecmd->argv[0]);
--      da:	6490                	ld	a2,8(s1)
--      dc:	00001597          	auipc	a1,0x1
--      e0:	10c58593          	addi	a1,a1,268 # 11e8 <malloc+0x120>
--      e4:	4509                	li	a0,2
--      e6:	705000ef          	jal	fea <fprintf>
-+      d8:	6490                	ld	a2,8(s1)
-+      da:	00001597          	auipc	a1,0x1
-+      de:	0f658593          	add	a1,a1,246 # 11d0 <malloc+0x100>
-+      e2:	4509                	li	a0,2
-+      e4:	70f000ef          	jal	ff2 <fprintf>
-   exit(0);
--      ea:	4501                	li	a0,0
--      ec:	311000ef          	jal	bfc <exit>
-+      e8:	4501                	li	a0,0
-+      ea:	319000ef          	jal	c02 <exit>
-       exit(1);
--      f0:	4505                	li	a0,1
--      f2:	30b000ef          	jal	bfc <exit>
-+      ee:	4505                	li	a0,1
-+      f0:	313000ef          	jal	c02 <exit>
-     close(rcmd->fd);
--      f6:	5148                	lw	a0,36(a0)
--      f8:	32d000ef          	jal	c24 <close>
-+      f4:	5148                	lw	a0,36(a0)
-+      f6:	335000ef          	jal	c2a <close>
-     if(open(rcmd->file, rcmd->mode) < 0){
--      fc:	508c                	lw	a1,32(s1)
--      fe:	6888                	ld	a0,16(s1)
--     100:	33d000ef          	jal	c3c <open>
--     104:	00054563          	bltz	a0,10e <runcmd+0x80>
-+      fa:	508c                	lw	a1,32(s1)
-+      fc:	6888                	ld	a0,16(s1)
-+      fe:	345000ef          	jal	c42 <open>
-+     102:	00054563          	bltz	a0,10c <runcmd+0x7e>
-     runcmd(rcmd->cmd);
--     108:	6488                	ld	a0,8(s1)
--     10a:	f85ff0ef          	jal	8e <runcmd>
-+     106:	6488                	ld	a0,8(s1)
-+     108:	f87ff0ef          	jal	8e <runcmd>
-       fprintf(2, "open %s failed\n", rcmd->file);
--     10e:	6890                	ld	a2,16(s1)
--     110:	00001597          	auipc	a1,0x1
--     114:	0e858593          	addi	a1,a1,232 # 11f8 <malloc+0x130>
--     118:	4509                	li	a0,2
--     11a:	6d1000ef          	jal	fea <fprintf>
-+     10c:	6890                	ld	a2,16(s1)
-+     10e:	00001597          	auipc	a1,0x1
-+     112:	0d258593          	add	a1,a1,210 # 11e0 <malloc+0x110>
-+     116:	4509                	li	a0,2
-+     118:	6db000ef          	jal	ff2 <fprintf>
-       exit(1);
--     11e:	4505                	li	a0,1
--     120:	2dd000ef          	jal	bfc <exit>
-+     11c:	4505                	li	a0,1
-+     11e:	2e5000ef          	jal	c02 <exit>
-     if(fork1() == 0)
--     124:	f45ff0ef          	jal	68 <fork1>
--     128:	e501                	bnez	a0,130 <runcmd+0xa2>
-+     122:	f47ff0ef          	jal	68 <fork1>
-+     126:	e501                	bnez	a0,12e <runcmd+0xa0>
-       runcmd(lcmd->left);
--     12a:	6488                	ld	a0,8(s1)
--     12c:	f63ff0ef          	jal	8e <runcmd>
-+     128:	6488                	ld	a0,8(s1)
-+     12a:	f65ff0ef          	jal	8e <runcmd>
-     wait(0);
--     130:	4501                	li	a0,0
--     132:	2d3000ef          	jal	c04 <wait>
-+     12e:	4501                	li	a0,0
-+     130:	2db000ef          	jal	c0a <wait>
-     runcmd(lcmd->right);
--     136:	6888                	ld	a0,16(s1)
--     138:	f57ff0ef          	jal	8e <runcmd>
-+     134:	6888                	ld	a0,16(s1)
-+     136:	f59ff0ef          	jal	8e <runcmd>
-     if(pipe(p) < 0)
--     13c:	fd840513          	addi	a0,s0,-40
--     140:	2cd000ef          	jal	c0c <pipe>
--     144:	02054763          	bltz	a0,172 <runcmd+0xe4>
-+     13a:	fd840513          	add	a0,s0,-40
-+     13e:	2d5000ef          	jal	c12 <pipe>
-+     142:	02054763          	bltz	a0,170 <runcmd+0xe2>
-     if(fork1() == 0){
--     148:	f21ff0ef          	jal	68 <fork1>
--     14c:	e90d                	bnez	a0,17e <runcmd+0xf0>
-+     146:	f23ff0ef          	jal	68 <fork1>
-+     14a:	e90d                	bnez	a0,17c <runcmd+0xee>
-       close(1);
--     14e:	4505                	li	a0,1
--     150:	2d5000ef          	jal	c24 <close>
-+     14c:	4505                	li	a0,1
-+     14e:	2dd000ef          	jal	c2a <close>
-       dup(p[1]);
--     154:	fdc42503          	lw	a0,-36(s0)
--     158:	31d000ef          	jal	c74 <dup>
-+     152:	fdc42503          	lw	a0,-36(s0)
-+     156:	325000ef          	jal	c7a <dup>
-       close(p[0]);
--     15c:	fd842503          	lw	a0,-40(s0)
--     160:	2c5000ef          	jal	c24 <close>
-+     15a:	fd842503          	lw	a0,-40(s0)
-+     15e:	2cd000ef          	jal	c2a <close>
-       close(p[1]);
--     164:	fdc42503          	lw	a0,-36(s0)
--     168:	2bd000ef          	jal	c24 <close>
-+     162:	fdc42503          	lw	a0,-36(s0)
-+     166:	2c5000ef          	jal	c2a <close>
-       runcmd(pcmd->left);
--     16c:	6488                	ld	a0,8(s1)
--     16e:	f21ff0ef          	jal	8e <runcmd>
-+     16a:	6488                	ld	a0,8(s1)
-+     16c:	f23ff0ef          	jal	8e <runcmd>
-       panic("pipe");
--     172:	00001517          	auipc	a0,0x1
--     176:	09650513          	addi	a0,a0,150 # 1208 <malloc+0x140>
--     17a:	ed1ff0ef          	jal	4a <panic>
-+     170:	00001517          	auipc	a0,0x1
-+     174:	08050513          	add	a0,a0,128 # 11f0 <malloc+0x120>
-+     178:	ed3ff0ef          	jal	4a <panic>
-     if(fork1() == 0){
--     17e:	eebff0ef          	jal	68 <fork1>
--     182:	e115                	bnez	a0,1a6 <runcmd+0x118>
-+     17c:	eedff0ef          	jal	68 <fork1>
-+     180:	e115                	bnez	a0,1a4 <runcmd+0x116>
-       close(0);
--     184:	2a1000ef          	jal	c24 <close>
-+     182:	2a9000ef          	jal	c2a <close>
-       dup(p[0]);
--     188:	fd842503          	lw	a0,-40(s0)
--     18c:	2e9000ef          	jal	c74 <dup>
-+     186:	fd842503          	lw	a0,-40(s0)
-+     18a:	2f1000ef          	jal	c7a <dup>
-       close(p[0]);
--     190:	fd842503          	lw	a0,-40(s0)
--     194:	291000ef          	jal	c24 <close>
-+     18e:	fd842503          	lw	a0,-40(s0)
-+     192:	299000ef          	jal	c2a <close>
-       close(p[1]);
--     198:	fdc42503          	lw	a0,-36(s0)
--     19c:	289000ef          	jal	c24 <close>
-+     196:	fdc42503          	lw	a0,-36(s0)
-+     19a:	291000ef          	jal	c2a <close>
-       runcmd(pcmd->right);
--     1a0:	6888                	ld	a0,16(s1)
--     1a2:	eedff0ef          	jal	8e <runcmd>
-+     19e:	6888                	ld	a0,16(s1)
-+     1a0:	eefff0ef          	jal	8e <runcmd>
-     close(p[0]);
--     1a6:	fd842503          	lw	a0,-40(s0)
--     1aa:	27b000ef          	jal	c24 <close>
-+     1a4:	fd842503          	lw	a0,-40(s0)
-+     1a8:	283000ef          	jal	c2a <close>
-     close(p[1]);
--     1ae:	fdc42503          	lw	a0,-36(s0)
--     1b2:	273000ef          	jal	c24 <close>
-+     1ac:	fdc42503          	lw	a0,-36(s0)
-+     1b0:	27b000ef          	jal	c2a <close>
-     wait(0);
--     1b6:	4501                	li	a0,0
--     1b8:	24d000ef          	jal	c04 <wait>
-+     1b4:	4501                	li	a0,0
-+     1b6:	255000ef          	jal	c0a <wait>
-     wait(0);
--     1bc:	4501                	li	a0,0
--     1be:	247000ef          	jal	c04 <wait>
-+     1ba:	4501                	li	a0,0
-+     1bc:	24f000ef          	jal	c0a <wait>
-     break;
--     1c2:	b725                	j	ea <runcmd+0x5c>
-+     1c0:	b725                	j	e8 <runcmd+0x5a>
-     if(fork1() == 0)
--     1c4:	ea5ff0ef          	jal	68 <fork1>
--     1c8:	f20511e3          	bnez	a0,ea <runcmd+0x5c>
-+     1c2:	ea7ff0ef          	jal	68 <fork1>
-+     1c6:	f20511e3          	bnez	a0,e8 <runcmd+0x5a>
-       runcmd(bcmd->cmd);
--     1cc:	6488                	ld	a0,8(s1)
--     1ce:	ec1ff0ef          	jal	8e <runcmd>
-+     1ca:	6488                	ld	a0,8(s1)
-+     1cc:	ec3ff0ef          	jal	8e <runcmd>
- 
--00000000000001d2 <execcmd>:
-+00000000000001d0 <execcmd>:
- /*PAGEBREAK! */
- /* Constructors */
- 
- struct cmd*
- execcmd(void)
- {
--     1d2:	1101                	addi	sp,sp,-32
--     1d4:	ec06                	sd	ra,24(sp)
--     1d6:	e822                	sd	s0,16(sp)
--     1d8:	e426                	sd	s1,8(sp)
--     1da:	1000                	addi	s0,sp,32
-+     1d0:	1101                	add	sp,sp,-32
-+     1d2:	ec06                	sd	ra,24(sp)
-+     1d4:	e822                	sd	s0,16(sp)
-+     1d6:	e426                	sd	s1,8(sp)
-+     1d8:	1000                	add	s0,sp,32
-   struct execcmd *cmd;
- 
-   cmd = malloc(sizeof(*cmd));
--     1dc:	0a800513          	li	a0,168
--     1e0:	6e9000ef          	jal	10c8 <malloc>
--     1e4:	84aa                	mv	s1,a0
-+     1da:	0a800513          	li	a0,168
-+     1de:	6f3000ef          	jal	10d0 <malloc>
-+     1e2:	84aa                	mv	s1,a0
-   memset(cmd, 0, sizeof(*cmd));
--     1e6:	0a800613          	li	a2,168
--     1ea:	4581                	li	a1,0
--     1ec:	02b000ef          	jal	a16 <memset>
-+     1e4:	0a800613          	li	a2,168
-+     1e8:	4581                	li	a1,0
-+     1ea:	033000ef          	jal	a1c <memset>
-   cmd->type = EXEC;
--     1f0:	4785                	li	a5,1
--     1f2:	c09c                	sw	a5,0(s1)
-+     1ee:	4785                	li	a5,1
-+     1f0:	c09c                	sw	a5,0(s1)
-   return (struct cmd*)cmd;
- }
--     1f4:	8526                	mv	a0,s1
--     1f6:	60e2                	ld	ra,24(sp)
--     1f8:	6442                	ld	s0,16(sp)
--     1fa:	64a2                	ld	s1,8(sp)
--     1fc:	6105                	addi	sp,sp,32
--     1fe:	8082                	ret
-+     1f2:	8526                	mv	a0,s1
-+     1f4:	60e2                	ld	ra,24(sp)
-+     1f6:	6442                	ld	s0,16(sp)
-+     1f8:	64a2                	ld	s1,8(sp)
-+     1fa:	6105                	add	sp,sp,32
-+     1fc:	8082                	ret
- 
--0000000000000200 <redircmd>:
-+00000000000001fe <redircmd>:
- 
- struct cmd*
- redircmd(struct cmd *subcmd, char *file, char *efile, int mode, int fd)
- {
--     200:	7139                	addi	sp,sp,-64
--     202:	fc06                	sd	ra,56(sp)
--     204:	f822                	sd	s0,48(sp)
--     206:	f426                	sd	s1,40(sp)
--     208:	f04a                	sd	s2,32(sp)
--     20a:	ec4e                	sd	s3,24(sp)
--     20c:	e852                	sd	s4,16(sp)
--     20e:	e456                	sd	s5,8(sp)
--     210:	e05a                	sd	s6,0(sp)
--     212:	0080                	addi	s0,sp,64
--     214:	8b2a                	mv	s6,a0
--     216:	8aae                	mv	s5,a1
--     218:	8a32                	mv	s4,a2
--     21a:	89b6                	mv	s3,a3
--     21c:	893a                	mv	s2,a4
-+     1fe:	7139                	add	sp,sp,-64
-+     200:	fc06                	sd	ra,56(sp)
-+     202:	f822                	sd	s0,48(sp)
-+     204:	f426                	sd	s1,40(sp)
-+     206:	f04a                	sd	s2,32(sp)
-+     208:	ec4e                	sd	s3,24(sp)
-+     20a:	e852                	sd	s4,16(sp)
-+     20c:	e456                	sd	s5,8(sp)
-+     20e:	e05a                	sd	s6,0(sp)
-+     210:	0080                	add	s0,sp,64
-+     212:	8b2a                	mv	s6,a0
-+     214:	8aae                	mv	s5,a1
-+     216:	8a32                	mv	s4,a2
-+     218:	89b6                	mv	s3,a3
-+     21a:	893a                	mv	s2,a4
-   struct redircmd *cmd;
- 
-   cmd = malloc(sizeof(*cmd));
--     21e:	02800513          	li	a0,40
--     222:	6a7000ef          	jal	10c8 <malloc>
--     226:	84aa                	mv	s1,a0
-+     21c:	02800513          	li	a0,40
-+     220:	6b1000ef          	jal	10d0 <malloc>
-+     224:	84aa                	mv	s1,a0
-   memset(cmd, 0, sizeof(*cmd));
--     228:	02800613          	li	a2,40
--     22c:	4581                	li	a1,0
--     22e:	7e8000ef          	jal	a16 <memset>
-+     226:	02800613          	li	a2,40
-+     22a:	4581                	li	a1,0
-+     22c:	7f0000ef          	jal	a1c <memset>
-   cmd->type = REDIR;
--     232:	4789                	li	a5,2
--     234:	c09c                	sw	a5,0(s1)
-+     230:	4789                	li	a5,2
-+     232:	c09c                	sw	a5,0(s1)
-   cmd->cmd = subcmd;
--     236:	0164b423          	sd	s6,8(s1)
-+     234:	0164b423          	sd	s6,8(s1)
-   cmd->file = file;
--     23a:	0154b823          	sd	s5,16(s1)
-+     238:	0154b823          	sd	s5,16(s1)
-   cmd->efile = efile;
--     23e:	0144bc23          	sd	s4,24(s1)
-+     23c:	0144bc23          	sd	s4,24(s1)
-   cmd->mode = mode;
--     242:	0334a023          	sw	s3,32(s1)
-+     240:	0334a023          	sw	s3,32(s1)
-   cmd->fd = fd;
--     246:	0324a223          	sw	s2,36(s1)
-+     244:	0324a223          	sw	s2,36(s1)
-   return (struct cmd*)cmd;
- }
--     24a:	8526                	mv	a0,s1
--     24c:	70e2                	ld	ra,56(sp)
--     24e:	7442                	ld	s0,48(sp)
--     250:	74a2                	ld	s1,40(sp)
--     252:	7902                	ld	s2,32(sp)
--     254:	69e2                	ld	s3,24(sp)
--     256:	6a42                	ld	s4,16(sp)
--     258:	6aa2                	ld	s5,8(sp)
--     25a:	6b02                	ld	s6,0(sp)
--     25c:	6121                	addi	sp,sp,64
--     25e:	8082                	ret
--
--0000000000000260 <pipecmd>:
-+     248:	8526                	mv	a0,s1
-+     24a:	70e2                	ld	ra,56(sp)
-+     24c:	7442                	ld	s0,48(sp)
-+     24e:	74a2                	ld	s1,40(sp)
-+     250:	7902                	ld	s2,32(sp)
-+     252:	69e2                	ld	s3,24(sp)
-+     254:	6a42                	ld	s4,16(sp)
-+     256:	6aa2                	ld	s5,8(sp)
-+     258:	6b02                	ld	s6,0(sp)
-+     25a:	6121                	add	sp,sp,64
-+     25c:	8082                	ret
-+
-+000000000000025e <pipecmd>:
- 
- struct cmd*
- pipecmd(struct cmd *left, struct cmd *right)
- {
--     260:	7179                	addi	sp,sp,-48
--     262:	f406                	sd	ra,40(sp)
--     264:	f022                	sd	s0,32(sp)
--     266:	ec26                	sd	s1,24(sp)
--     268:	e84a                	sd	s2,16(sp)
--     26a:	e44e                	sd	s3,8(sp)
--     26c:	1800                	addi	s0,sp,48
--     26e:	89aa                	mv	s3,a0
--     270:	892e                	mv	s2,a1
-+     25e:	7179                	add	sp,sp,-48
-+     260:	f406                	sd	ra,40(sp)
-+     262:	f022                	sd	s0,32(sp)
-+     264:	ec26                	sd	s1,24(sp)
-+     266:	e84a                	sd	s2,16(sp)
-+     268:	e44e                	sd	s3,8(sp)
-+     26a:	1800                	add	s0,sp,48
-+     26c:	89aa                	mv	s3,a0
-+     26e:	892e                	mv	s2,a1
-   struct pipecmd *cmd;
- 
-   cmd = malloc(sizeof(*cmd));
--     272:	4561                	li	a0,24
--     274:	655000ef          	jal	10c8 <malloc>
--     278:	84aa                	mv	s1,a0
-+     270:	4561                	li	a0,24
-+     272:	65f000ef          	jal	10d0 <malloc>
-+     276:	84aa                	mv	s1,a0
-   memset(cmd, 0, sizeof(*cmd));
--     27a:	4661                	li	a2,24
--     27c:	4581                	li	a1,0
--     27e:	798000ef          	jal	a16 <memset>
-+     278:	4661                	li	a2,24
-+     27a:	4581                	li	a1,0
-+     27c:	7a0000ef          	jal	a1c <memset>
-   cmd->type = PIPE;
--     282:	478d                	li	a5,3
--     284:	c09c                	sw	a5,0(s1)
-+     280:	478d                	li	a5,3
-+     282:	c09c                	sw	a5,0(s1)
-   cmd->left = left;
--     286:	0134b423          	sd	s3,8(s1)
-+     284:	0134b423          	sd	s3,8(s1)
-   cmd->right = right;
--     28a:	0124b823          	sd	s2,16(s1)
-+     288:	0124b823          	sd	s2,16(s1)
-   return (struct cmd*)cmd;
- }
--     28e:	8526                	mv	a0,s1
--     290:	70a2                	ld	ra,40(sp)
--     292:	7402                	ld	s0,32(sp)
--     294:	64e2                	ld	s1,24(sp)
--     296:	6942                	ld	s2,16(sp)
--     298:	69a2                	ld	s3,8(sp)
--     29a:	6145                	addi	sp,sp,48
--     29c:	8082                	ret
-+     28c:	8526                	mv	a0,s1
-+     28e:	70a2                	ld	ra,40(sp)
-+     290:	7402                	ld	s0,32(sp)
-+     292:	64e2                	ld	s1,24(sp)
-+     294:	6942                	ld	s2,16(sp)
-+     296:	69a2                	ld	s3,8(sp)
-+     298:	6145                	add	sp,sp,48
-+     29a:	8082                	ret
- 
--000000000000029e <listcmd>:
-+000000000000029c <listcmd>:
- 
- struct cmd*
- listcmd(struct cmd *left, struct cmd *right)
- {
--     29e:	7179                	addi	sp,sp,-48
--     2a0:	f406                	sd	ra,40(sp)
--     2a2:	f022                	sd	s0,32(sp)
--     2a4:	ec26                	sd	s1,24(sp)
--     2a6:	e84a                	sd	s2,16(sp)
--     2a8:	e44e                	sd	s3,8(sp)
--     2aa:	1800                	addi	s0,sp,48
--     2ac:	89aa                	mv	s3,a0
--     2ae:	892e                	mv	s2,a1
-+     29c:	7179                	add	sp,sp,-48
-+     29e:	f406                	sd	ra,40(sp)
-+     2a0:	f022                	sd	s0,32(sp)
-+     2a2:	ec26                	sd	s1,24(sp)
-+     2a4:	e84a                	sd	s2,16(sp)
-+     2a6:	e44e                	sd	s3,8(sp)
-+     2a8:	1800                	add	s0,sp,48
-+     2aa:	89aa                	mv	s3,a0
-+     2ac:	892e                	mv	s2,a1
-   struct listcmd *cmd;
- 
-   cmd = malloc(sizeof(*cmd));
--     2b0:	4561                	li	a0,24
--     2b2:	617000ef          	jal	10c8 <malloc>
--     2b6:	84aa                	mv	s1,a0
-+     2ae:	4561                	li	a0,24
-+     2b0:	621000ef          	jal	10d0 <malloc>
-+     2b4:	84aa                	mv	s1,a0
-   memset(cmd, 0, sizeof(*cmd));
--     2b8:	4661                	li	a2,24
--     2ba:	4581                	li	a1,0
--     2bc:	75a000ef          	jal	a16 <memset>
-+     2b6:	4661                	li	a2,24
-+     2b8:	4581                	li	a1,0
-+     2ba:	762000ef          	jal	a1c <memset>
-   cmd->type = LIST;
--     2c0:	4791                	li	a5,4
--     2c2:	c09c                	sw	a5,0(s1)
-+     2be:	4791                	li	a5,4
-+     2c0:	c09c                	sw	a5,0(s1)
-   cmd->left = left;
--     2c4:	0134b423          	sd	s3,8(s1)
-+     2c2:	0134b423          	sd	s3,8(s1)
-   cmd->right = right;
--     2c8:	0124b823          	sd	s2,16(s1)
-+     2c6:	0124b823          	sd	s2,16(s1)
-   return (struct cmd*)cmd;
- }
--     2cc:	8526                	mv	a0,s1
--     2ce:	70a2                	ld	ra,40(sp)
--     2d0:	7402                	ld	s0,32(sp)
--     2d2:	64e2                	ld	s1,24(sp)
--     2d4:	6942                	ld	s2,16(sp)
--     2d6:	69a2                	ld	s3,8(sp)
--     2d8:	6145                	addi	sp,sp,48
--     2da:	8082                	ret
-+     2ca:	8526                	mv	a0,s1
-+     2cc:	70a2                	ld	ra,40(sp)
-+     2ce:	7402                	ld	s0,32(sp)
-+     2d0:	64e2                	ld	s1,24(sp)
-+     2d2:	6942                	ld	s2,16(sp)
-+     2d4:	69a2                	ld	s3,8(sp)
-+     2d6:	6145                	add	sp,sp,48
-+     2d8:	8082                	ret
- 
--00000000000002dc <backcmd>:
-+00000000000002da <backcmd>:
- 
- struct cmd*
- backcmd(struct cmd *subcmd)
- {
--     2dc:	1101                	addi	sp,sp,-32
--     2de:	ec06                	sd	ra,24(sp)
--     2e0:	e822                	sd	s0,16(sp)
--     2e2:	e426                	sd	s1,8(sp)
--     2e4:	e04a                	sd	s2,0(sp)
--     2e6:	1000                	addi	s0,sp,32
--     2e8:	892a                	mv	s2,a0
-+     2da:	1101                	add	sp,sp,-32
-+     2dc:	ec06                	sd	ra,24(sp)
-+     2de:	e822                	sd	s0,16(sp)
-+     2e0:	e426                	sd	s1,8(sp)
-+     2e2:	e04a                	sd	s2,0(sp)
-+     2e4:	1000                	add	s0,sp,32
-+     2e6:	892a                	mv	s2,a0
-   struct backcmd *cmd;
- 
-   cmd = malloc(sizeof(*cmd));
--     2ea:	4541                	li	a0,16
--     2ec:	5dd000ef          	jal	10c8 <malloc>
--     2f0:	84aa                	mv	s1,a0
-+     2e8:	4541                	li	a0,16
-+     2ea:	5e7000ef          	jal	10d0 <malloc>
-+     2ee:	84aa                	mv	s1,a0
-   memset(cmd, 0, sizeof(*cmd));
--     2f2:	4641                	li	a2,16
--     2f4:	4581                	li	a1,0
--     2f6:	720000ef          	jal	a16 <memset>
-+     2f0:	4641                	li	a2,16
-+     2f2:	4581                	li	a1,0
-+     2f4:	728000ef          	jal	a1c <memset>
-   cmd->type = BACK;
--     2fa:	4795                	li	a5,5
--     2fc:	c09c                	sw	a5,0(s1)
-+     2f8:	4795                	li	a5,5
-+     2fa:	c09c                	sw	a5,0(s1)
-   cmd->cmd = subcmd;
--     2fe:	0124b423          	sd	s2,8(s1)
-+     2fc:	0124b423          	sd	s2,8(s1)
-   return (struct cmd*)cmd;
- }
--     302:	8526                	mv	a0,s1
--     304:	60e2                	ld	ra,24(sp)
--     306:	6442                	ld	s0,16(sp)
--     308:	64a2                	ld	s1,8(sp)
--     30a:	6902                	ld	s2,0(sp)
--     30c:	6105                	addi	sp,sp,32
--     30e:	8082                	ret
--
--0000000000000310 <gettoken>:
-+     300:	8526                	mv	a0,s1
-+     302:	60e2                	ld	ra,24(sp)
-+     304:	6442                	ld	s0,16(sp)
-+     306:	64a2                	ld	s1,8(sp)
-+     308:	6902                	ld	s2,0(sp)
-+     30a:	6105                	add	sp,sp,32
-+     30c:	8082                	ret
-+
-+000000000000030e <gettoken>:
- char whitespace[] = " \t\r\n\v";
- char symbols[] = "<|>&;()";
- 
- int
- gettoken(char **ps, char *es, char **q, char **eq)
- {
--     310:	7139                	addi	sp,sp,-64
--     312:	fc06                	sd	ra,56(sp)
--     314:	f822                	sd	s0,48(sp)
--     316:	f426                	sd	s1,40(sp)
--     318:	f04a                	sd	s2,32(sp)
--     31a:	ec4e                	sd	s3,24(sp)
--     31c:	e852                	sd	s4,16(sp)
--     31e:	e456                	sd	s5,8(sp)
--     320:	e05a                	sd	s6,0(sp)
--     322:	0080                	addi	s0,sp,64
--     324:	8a2a                	mv	s4,a0
--     326:	892e                	mv	s2,a1
--     328:	8ab2                	mv	s5,a2
--     32a:	8b36                	mv	s6,a3
-+     30e:	7139                	add	sp,sp,-64
-+     310:	fc06                	sd	ra,56(sp)
-+     312:	f822                	sd	s0,48(sp)
-+     314:	f426                	sd	s1,40(sp)
-+     316:	f04a                	sd	s2,32(sp)
-+     318:	ec4e                	sd	s3,24(sp)
-+     31a:	e852                	sd	s4,16(sp)
-+     31c:	e456                	sd	s5,8(sp)
-+     31e:	e05a                	sd	s6,0(sp)
-+     320:	0080                	add	s0,sp,64
-+     322:	8a2a                	mv	s4,a0
-+     324:	892e                	mv	s2,a1
-+     326:	8ab2                	mv	s5,a2
-+     328:	8b36                	mv	s6,a3
-   char *s;
-   int ret;
- 
-   s = *ps;
--     32c:	6104                	ld	s1,0(a0)
-+     32a:	6104                	ld	s1,0(a0)
-   while(s < es && strchr(whitespace, *s))
--     32e:	00002997          	auipc	s3,0x2
--     332:	cda98993          	addi	s3,s3,-806 # 2008 <whitespace>
--     336:	00b4fc63          	bgeu	s1,a1,34e <gettoken+0x3e>
--     33a:	0004c583          	lbu	a1,0(s1)
--     33e:	854e                	mv	a0,s3
--     340:	6f8000ef          	jal	a38 <strchr>
--     344:	c509                	beqz	a0,34e <gettoken+0x3e>
-+     32c:	00002997          	auipc	s3,0x2
-+     330:	cdc98993          	add	s3,s3,-804 # 2008 <whitespace>
-+     334:	00b4fc63          	bgeu	s1,a1,34c <gettoken+0x3e>
-+     338:	0004c583          	lbu	a1,0(s1)
-+     33c:	854e                	mv	a0,s3
-+     33e:	700000ef          	jal	a3e <strchr>
-+     342:	c509                	beqz	a0,34c <gettoken+0x3e>
-     s++;
--     346:	0485                	addi	s1,s1,1
-+     344:	0485                	add	s1,s1,1
-   while(s < es && strchr(whitespace, *s))
--     348:	fe9919e3          	bne	s2,s1,33a <gettoken+0x2a>
--     34c:	84ca                	mv	s1,s2
-+     346:	fe9919e3          	bne	s2,s1,338 <gettoken+0x2a>
-+    s++;
-+     34a:	84ca                	mv	s1,s2
-   if(q)
--     34e:	000a8463          	beqz	s5,356 <gettoken+0x46>
-+     34c:	000a8463          	beqz	s5,354 <gettoken+0x46>
-     *q = s;
--     352:	009ab023          	sd	s1,0(s5)
-+     350:	009ab023          	sd	s1,0(s5)
-   ret = *s;
--     356:	0004c783          	lbu	a5,0(s1)
--     35a:	00078a9b          	sext.w	s5,a5
-+     354:	0004c783          	lbu	a5,0(s1)
-+     358:	00078a9b          	sext.w	s5,a5
-   switch(*s){
--     35e:	03c00713          	li	a4,60
--     362:	06f76463          	bltu	a4,a5,3ca <gettoken+0xba>
--     366:	03a00713          	li	a4,58
--     36a:	00f76e63          	bltu	a4,a5,386 <gettoken+0x76>
--     36e:	cf89                	beqz	a5,388 <gettoken+0x78>
--     370:	02600713          	li	a4,38
--     374:	00e78963          	beq	a5,a4,386 <gettoken+0x76>
--     378:	fd87879b          	addiw	a5,a5,-40
--     37c:	0ff7f793          	zext.b	a5,a5
--     380:	4705                	li	a4,1
--     382:	06f76b63          	bltu	a4,a5,3f8 <gettoken+0xe8>
-+     35c:	03c00713          	li	a4,60
-+     360:	06f76463          	bltu	a4,a5,3c8 <gettoken+0xba>
-+     364:	03a00713          	li	a4,58
-+     368:	00f76e63          	bltu	a4,a5,384 <gettoken+0x76>
-+     36c:	cf89                	beqz	a5,386 <gettoken+0x78>
-+     36e:	02600713          	li	a4,38
-+     372:	00e78963          	beq	a5,a4,384 <gettoken+0x76>
-+     376:	fd87879b          	addw	a5,a5,-40
-+     37a:	0ff7f793          	zext.b	a5,a5
-+     37e:	4705                	li	a4,1
-+     380:	06f76b63          	bltu	a4,a5,3f6 <gettoken+0xe8>
-   case '(':
-   case ')':
-   case ';':
-   case '&':
-   case '<':
-     s++;
--     386:	0485                	addi	s1,s1,1
-+     384:	0485                	add	s1,s1,1
-     ret = 'a';
-     while(s < es && !strchr(whitespace, *s) && !strchr(symbols, *s))
-       s++;
-     break;
-   }
-   if(eq)
--     388:	000b0463          	beqz	s6,390 <gettoken+0x80>
-+     386:	000b0463          	beqz	s6,38e <gettoken+0x80>
-     *eq = s;
--     38c:	009b3023          	sd	s1,0(s6)
-+     38a:	009b3023          	sd	s1,0(s6)
- 
-   while(s < es && strchr(whitespace, *s))
--     390:	00002997          	auipc	s3,0x2
--     394:	c7898993          	addi	s3,s3,-904 # 2008 <whitespace>
--     398:	0124fc63          	bgeu	s1,s2,3b0 <gettoken+0xa0>
--     39c:	0004c583          	lbu	a1,0(s1)
--     3a0:	854e                	mv	a0,s3
--     3a2:	696000ef          	jal	a38 <strchr>
--     3a6:	c509                	beqz	a0,3b0 <gettoken+0xa0>
-+     38e:	00002997          	auipc	s3,0x2
-+     392:	c7a98993          	add	s3,s3,-902 # 2008 <whitespace>
-+     396:	0124fc63          	bgeu	s1,s2,3ae <gettoken+0xa0>
-+     39a:	0004c583          	lbu	a1,0(s1)
-+     39e:	854e                	mv	a0,s3
-+     3a0:	69e000ef          	jal	a3e <strchr>
-+     3a4:	c509                	beqz	a0,3ae <gettoken+0xa0>
-     s++;
--     3a8:	0485                	addi	s1,s1,1
-+     3a6:	0485                	add	s1,s1,1
-   while(s < es && strchr(whitespace, *s))
--     3aa:	fe9919e3          	bne	s2,s1,39c <gettoken+0x8c>
--     3ae:	84ca                	mv	s1,s2
-+     3a8:	fe9919e3          	bne	s2,s1,39a <gettoken+0x8c>
-+    s++;
-+     3ac:	84ca                	mv	s1,s2
-   *ps = s;
--     3b0:	009a3023          	sd	s1,0(s4)
-+     3ae:	009a3023          	sd	s1,0(s4)
-   return ret;
- }
--     3b4:	8556                	mv	a0,s5
--     3b6:	70e2                	ld	ra,56(sp)
--     3b8:	7442                	ld	s0,48(sp)
--     3ba:	74a2                	ld	s1,40(sp)
--     3bc:	7902                	ld	s2,32(sp)
--     3be:	69e2                	ld	s3,24(sp)
--     3c0:	6a42                	ld	s4,16(sp)
--     3c2:	6aa2                	ld	s5,8(sp)
--     3c4:	6b02                	ld	s6,0(sp)
--     3c6:	6121                	addi	sp,sp,64
--     3c8:	8082                	ret
-+     3b2:	8556                	mv	a0,s5
-+     3b4:	70e2                	ld	ra,56(sp)
-+     3b6:	7442                	ld	s0,48(sp)
-+     3b8:	74a2                	ld	s1,40(sp)
-+     3ba:	7902                	ld	s2,32(sp)
-+     3bc:	69e2                	ld	s3,24(sp)
-+     3be:	6a42                	ld	s4,16(sp)
-+     3c0:	6aa2                	ld	s5,8(sp)
-+     3c2:	6b02                	ld	s6,0(sp)
-+     3c4:	6121                	add	sp,sp,64
-+     3c6:	8082                	ret
-   switch(*s){
--     3ca:	03e00713          	li	a4,62
--     3ce:	02e79163          	bne	a5,a4,3f0 <gettoken+0xe0>
-+     3c8:	03e00713          	li	a4,62
-+     3cc:	02e79163          	bne	a5,a4,3ee <gettoken+0xe0>
-     s++;
--     3d2:	00148693          	addi	a3,s1,1
-+     3d0:	00148693          	add	a3,s1,1
-     if(*s == '>'){
--     3d6:	0014c703          	lbu	a4,1(s1)
--     3da:	03e00793          	li	a5,62
-+     3d4:	0014c703          	lbu	a4,1(s1)
-+     3d8:	03e00793          	li	a5,62
-       s++;
--     3de:	0489                	addi	s1,s1,2
-+     3dc:	0489                	add	s1,s1,2
-       ret = '+';
--     3e0:	02b00a93          	li	s5,43
-+     3de:	02b00a93          	li	s5,43
-     if(*s == '>'){
--     3e4:	faf702e3          	beq	a4,a5,388 <gettoken+0x78>
-+     3e2:	faf702e3          	beq	a4,a5,386 <gettoken+0x78>
-     s++;
--     3e8:	84b6                	mv	s1,a3
-+     3e6:	84b6                	mv	s1,a3
-   ret = *s;
--     3ea:	03e00a93          	li	s5,62
--     3ee:	bf69                	j	388 <gettoken+0x78>
-+     3e8:	03e00a93          	li	s5,62
-+     3ec:	bf69                	j	386 <gettoken+0x78>
-   switch(*s){
--     3f0:	07c00713          	li	a4,124
--     3f4:	f8e789e3          	beq	a5,a4,386 <gettoken+0x76>
-+     3ee:	07c00713          	li	a4,124
-+     3f2:	f8e789e3          	beq	a5,a4,384 <gettoken+0x76>
-     while(s < es && !strchr(whitespace, *s) && !strchr(symbols, *s))
--     3f8:	00002997          	auipc	s3,0x2
--     3fc:	c1098993          	addi	s3,s3,-1008 # 2008 <whitespace>
--     400:	00002a97          	auipc	s5,0x2
--     404:	c00a8a93          	addi	s5,s5,-1024 # 2000 <symbols>
--     408:	0324fd63          	bgeu	s1,s2,442 <gettoken+0x132>
--     40c:	0004c583          	lbu	a1,0(s1)
--     410:	854e                	mv	a0,s3
--     412:	626000ef          	jal	a38 <strchr>
--     416:	e11d                	bnez	a0,43c <gettoken+0x12c>
--     418:	0004c583          	lbu	a1,0(s1)
--     41c:	8556                	mv	a0,s5
--     41e:	61a000ef          	jal	a38 <strchr>
--     422:	e911                	bnez	a0,436 <gettoken+0x126>
-+     3f6:	00002997          	auipc	s3,0x2
-+     3fa:	c1298993          	add	s3,s3,-1006 # 2008 <whitespace>
-+     3fe:	00002a97          	auipc	s5,0x2
-+     402:	c02a8a93          	add	s5,s5,-1022 # 2000 <symbols>
-+     406:	0324fd63          	bgeu	s1,s2,440 <gettoken+0x132>
-+     40a:	0004c583          	lbu	a1,0(s1)
-+     40e:	854e                	mv	a0,s3
-+     410:	62e000ef          	jal	a3e <strchr>
-+     414:	e11d                	bnez	a0,43a <gettoken+0x12c>
-+     416:	0004c583          	lbu	a1,0(s1)
-+     41a:	8556                	mv	a0,s5
-+     41c:	622000ef          	jal	a3e <strchr>
-+     420:	e911                	bnez	a0,434 <gettoken+0x126>
-       s++;
--     424:	0485                	addi	s1,s1,1
-+     422:	0485                	add	s1,s1,1
-     while(s < es && !strchr(whitespace, *s) && !strchr(symbols, *s))
--     426:	fe9913e3          	bne	s2,s1,40c <gettoken+0xfc>
--  if(eq)
--     42a:	84ca                	mv	s1,s2
-+     424:	fe9913e3          	bne	s2,s1,40a <gettoken+0xfc>
-+      s++;
-+     428:	84ca                	mv	s1,s2
-     ret = 'a';
--     42c:	06100a93          	li	s5,97
-+     42a:	06100a93          	li	s5,97
-   if(eq)
--     430:	f40b1ee3          	bnez	s6,38c <gettoken+0x7c>
--     434:	bfb5                	j	3b0 <gettoken+0xa0>
-+     42e:	f40b1ee3          	bnez	s6,38a <gettoken+0x7c>
-+     432:	bfb5                	j	3ae <gettoken+0xa0>
-     ret = 'a';
--     436:	06100a93          	li	s5,97
--     43a:	b7b9                	j	388 <gettoken+0x78>
--     43c:	06100a93          	li	s5,97
--     440:	b7a1                	j	388 <gettoken+0x78>
--     442:	06100a93          	li	s5,97
-+     434:	06100a93          	li	s5,97
-+     438:	b7b9                	j	386 <gettoken+0x78>
-+     43a:	06100a93          	li	s5,97
-+     43e:	b7a1                	j	386 <gettoken+0x78>
-+     440:	06100a93          	li	s5,97
-   if(eq)
--     446:	f40b13e3          	bnez	s6,38c <gettoken+0x7c>
--     44a:	b79d                	j	3b0 <gettoken+0xa0>
-+     444:	f40b13e3          	bnez	s6,38a <gettoken+0x7c>
-+     448:	b79d                	j	3ae <gettoken+0xa0>
- 
--000000000000044c <peek>:
-+000000000000044a <peek>:
- 
- int
- peek(char **ps, char *es, char *toks)
- {
--     44c:	7139                	addi	sp,sp,-64
--     44e:	fc06                	sd	ra,56(sp)
--     450:	f822                	sd	s0,48(sp)
--     452:	f426                	sd	s1,40(sp)
--     454:	f04a                	sd	s2,32(sp)
--     456:	ec4e                	sd	s3,24(sp)
--     458:	e852                	sd	s4,16(sp)
--     45a:	e456                	sd	s5,8(sp)
--     45c:	0080                	addi	s0,sp,64
--     45e:	8a2a                	mv	s4,a0
--     460:	892e                	mv	s2,a1
--     462:	8ab2                	mv	s5,a2
-+     44a:	7139                	add	sp,sp,-64
-+     44c:	fc06                	sd	ra,56(sp)
-+     44e:	f822                	sd	s0,48(sp)
-+     450:	f426                	sd	s1,40(sp)
-+     452:	f04a                	sd	s2,32(sp)
-+     454:	ec4e                	sd	s3,24(sp)
-+     456:	e852                	sd	s4,16(sp)
-+     458:	e456                	sd	s5,8(sp)
-+     45a:	0080                	add	s0,sp,64
-+     45c:	8a2a                	mv	s4,a0
-+     45e:	892e                	mv	s2,a1
-+     460:	8ab2                	mv	s5,a2
-   char *s;
- 
-   s = *ps;
--     464:	6104                	ld	s1,0(a0)
-+     462:	6104                	ld	s1,0(a0)
-   while(s < es && strchr(whitespace, *s))
--     466:	00002997          	auipc	s3,0x2
--     46a:	ba298993          	addi	s3,s3,-1118 # 2008 <whitespace>
--     46e:	00b4fc63          	bgeu	s1,a1,486 <peek+0x3a>
--     472:	0004c583          	lbu	a1,0(s1)
--     476:	854e                	mv	a0,s3
--     478:	5c0000ef          	jal	a38 <strchr>
--     47c:	c509                	beqz	a0,486 <peek+0x3a>
-+     464:	00002997          	auipc	s3,0x2
-+     468:	ba498993          	add	s3,s3,-1116 # 2008 <whitespace>
-+     46c:	00b4fc63          	bgeu	s1,a1,484 <peek+0x3a>
-+     470:	0004c583          	lbu	a1,0(s1)
-+     474:	854e                	mv	a0,s3
-+     476:	5c8000ef          	jal	a3e <strchr>
-+     47a:	c509                	beqz	a0,484 <peek+0x3a>
-     s++;
--     47e:	0485                	addi	s1,s1,1
-+     47c:	0485                	add	s1,s1,1
-   while(s < es && strchr(whitespace, *s))
--     480:	fe9919e3          	bne	s2,s1,472 <peek+0x26>
--     484:	84ca                	mv	s1,s2
-+     47e:	fe9919e3          	bne	s2,s1,470 <peek+0x26>
-+    s++;
-+     482:	84ca                	mv	s1,s2
-   *ps = s;
--     486:	009a3023          	sd	s1,0(s4)
-+     484:	009a3023          	sd	s1,0(s4)
-   return *s && strchr(toks, *s);
--     48a:	0004c583          	lbu	a1,0(s1)
--     48e:	4501                	li	a0,0
--     490:	e991                	bnez	a1,4a4 <peek+0x58>
-+     488:	0004c583          	lbu	a1,0(s1)
-+     48c:	4501                	li	a0,0
-+     48e:	e991                	bnez	a1,4a2 <peek+0x58>
- }
--     492:	70e2                	ld	ra,56(sp)
--     494:	7442                	ld	s0,48(sp)
--     496:	74a2                	ld	s1,40(sp)
--     498:	7902                	ld	s2,32(sp)
--     49a:	69e2                	ld	s3,24(sp)
--     49c:	6a42                	ld	s4,16(sp)
--     49e:	6aa2                	ld	s5,8(sp)
--     4a0:	6121                	addi	sp,sp,64
--     4a2:	8082                	ret
-+     490:	70e2                	ld	ra,56(sp)
-+     492:	7442                	ld	s0,48(sp)
-+     494:	74a2                	ld	s1,40(sp)
-+     496:	7902                	ld	s2,32(sp)
-+     498:	69e2                	ld	s3,24(sp)
-+     49a:	6a42                	ld	s4,16(sp)
-+     49c:	6aa2                	ld	s5,8(sp)
-+     49e:	6121                	add	sp,sp,64
-+     4a0:	8082                	ret
-   return *s && strchr(toks, *s);
--     4a4:	8556                	mv	a0,s5
--     4a6:	592000ef          	jal	a38 <strchr>
--     4aa:	00a03533          	snez	a0,a0
--     4ae:	b7d5                	j	492 <peek+0x46>
-+     4a2:	8556                	mv	a0,s5
-+     4a4:	59a000ef          	jal	a3e <strchr>
-+     4a8:	00a03533          	snez	a0,a0
-+     4ac:	b7d5                	j	490 <peek+0x46>
- 
--00000000000004b0 <parseredirs>:
-+00000000000004ae <parseredirs>:
-   return cmd;
- }
- 
- struct cmd*
- parseredirs(struct cmd *cmd, char **ps, char *es)
- {
--     4b0:	711d                	addi	sp,sp,-96
--     4b2:	ec86                	sd	ra,88(sp)
--     4b4:	e8a2                	sd	s0,80(sp)
--     4b6:	e4a6                	sd	s1,72(sp)
--     4b8:	e0ca                	sd	s2,64(sp)
--     4ba:	fc4e                	sd	s3,56(sp)
--     4bc:	f852                	sd	s4,48(sp)
--     4be:	f456                	sd	s5,40(sp)
--     4c0:	f05a                	sd	s6,32(sp)
--     4c2:	ec5e                	sd	s7,24(sp)
--     4c4:	1080                	addi	s0,sp,96
--     4c6:	8a2a                	mv	s4,a0
--     4c8:	89ae                	mv	s3,a1
--     4ca:	8932                	mv	s2,a2
-+     4ae:	7159                	add	sp,sp,-112
-+     4b0:	f486                	sd	ra,104(sp)
-+     4b2:	f0a2                	sd	s0,96(sp)
-+     4b4:	eca6                	sd	s1,88(sp)
-+     4b6:	e8ca                	sd	s2,80(sp)
-+     4b8:	e4ce                	sd	s3,72(sp)
-+     4ba:	e0d2                	sd	s4,64(sp)
-+     4bc:	fc56                	sd	s5,56(sp)
-+     4be:	f85a                	sd	s6,48(sp)
-+     4c0:	f45e                	sd	s7,40(sp)
-+     4c2:	f062                	sd	s8,32(sp)
-+     4c4:	ec66                	sd	s9,24(sp)
-+     4c6:	1880                	add	s0,sp,112
-+     4c8:	8a2a                	mv	s4,a0
-+     4ca:	89ae                	mv	s3,a1
-+     4cc:	8932                	mv	s2,a2
-   int tok;
-   char *q, *eq;
- 
-   while(peek(ps, es, "<>")){
--     4cc:	00001a97          	auipc	s5,0x1
--     4d0:	d64a8a93          	addi	s5,s5,-668 # 1230 <malloc+0x168>
-+     4ce:	00001b97          	auipc	s7,0x1
-+     4d2:	d4ab8b93          	add	s7,s7,-694 # 1218 <malloc+0x148>
-     tok = gettoken(ps, es, 0, 0);
-     if(gettoken(ps, es, &q, &eq) != 'a')
--     4d4:	06100b13          	li	s6,97
-+     4d6:	06100c13          	li	s8,97
-       panic("missing file for redirection");
-     switch(tok){
--     4d8:	03c00b93          	li	s7,60
-+     4da:	03c00c93          	li	s9,60
-   while(peek(ps, es, "<>")){
--     4dc:	a00d                	j	4fe <parseredirs+0x4e>
-+     4de:	a00d                	j	500 <parseredirs+0x52>
-       panic("missing file for redirection");
--     4de:	00001517          	auipc	a0,0x1
--     4e2:	d3250513          	addi	a0,a0,-718 # 1210 <malloc+0x148>
--     4e6:	b65ff0ef          	jal	4a <panic>
-+     4e0:	00001517          	auipc	a0,0x1
-+     4e4:	d1850513          	add	a0,a0,-744 # 11f8 <malloc+0x128>
-+     4e8:	b63ff0ef          	jal	4a <panic>
-     case '<':
-       cmd = redircmd(cmd, q, eq, O_RDONLY, 0);
--     4ea:	4701                	li	a4,0
--     4ec:	4681                	li	a3,0
--     4ee:	fa043603          	ld	a2,-96(s0)
--     4f2:	fa843583          	ld	a1,-88(s0)
--     4f6:	8552                	mv	a0,s4
--     4f8:	d09ff0ef          	jal	200 <redircmd>
--     4fc:	8a2a                	mv	s4,a0
-+     4ec:	4701                	li	a4,0
-+     4ee:	4681                	li	a3,0
-+     4f0:	f9043603          	ld	a2,-112(s0)
-+     4f4:	f9843583          	ld	a1,-104(s0)
-+     4f8:	8552                	mv	a0,s4
-+     4fa:	d05ff0ef          	jal	1fe <redircmd>
-+     4fe:	8a2a                	mv	s4,a0
-+    switch(tok){
-+     500:	03e00b13          	li	s6,62
-+     504:	02b00a93          	li	s5,43
-   while(peek(ps, es, "<>")){
--     4fe:	8656                	mv	a2,s5
--     500:	85ca                	mv	a1,s2
--     502:	854e                	mv	a0,s3
--     504:	f49ff0ef          	jal	44c <peek>
--     508:	c525                	beqz	a0,570 <parseredirs+0xc0>
-+     508:	865e                	mv	a2,s7
-+     50a:	85ca                	mv	a1,s2
-+     50c:	854e                	mv	a0,s3
-+     50e:	f3dff0ef          	jal	44a <peek>
-+     512:	c125                	beqz	a0,572 <parseredirs+0xc4>
-     tok = gettoken(ps, es, 0, 0);
--     50a:	4681                	li	a3,0
--     50c:	4601                	li	a2,0
--     50e:	85ca                	mv	a1,s2
--     510:	854e                	mv	a0,s3
--     512:	dffff0ef          	jal	310 <gettoken>
--     516:	84aa                	mv	s1,a0
-+     514:	4681                	li	a3,0
-+     516:	4601                	li	a2,0
-+     518:	85ca                	mv	a1,s2
-+     51a:	854e                	mv	a0,s3
-+     51c:	df3ff0ef          	jal	30e <gettoken>
-+     520:	84aa                	mv	s1,a0
-     if(gettoken(ps, es, &q, &eq) != 'a')
--     518:	fa040693          	addi	a3,s0,-96
--     51c:	fa840613          	addi	a2,s0,-88
--     520:	85ca                	mv	a1,s2
--     522:	854e                	mv	a0,s3
--     524:	dedff0ef          	jal	310 <gettoken>
--     528:	fb651be3          	bne	a0,s6,4de <parseredirs+0x2e>
-+     522:	f9040693          	add	a3,s0,-112
-+     526:	f9840613          	add	a2,s0,-104
-+     52a:	85ca                	mv	a1,s2
-+     52c:	854e                	mv	a0,s3
-+     52e:	de1ff0ef          	jal	30e <gettoken>
-+     532:	fb8517e3          	bne	a0,s8,4e0 <parseredirs+0x32>
-     switch(tok){
--     52c:	fb748fe3          	beq	s1,s7,4ea <parseredirs+0x3a>
--     530:	03e00793          	li	a5,62
--     534:	02f48263          	beq	s1,a5,558 <parseredirs+0xa8>
--     538:	02b00793          	li	a5,43
--     53c:	fcf491e3          	bne	s1,a5,4fe <parseredirs+0x4e>
-+     536:	fb948be3          	beq	s1,s9,4ec <parseredirs+0x3e>
-+     53a:	03648063          	beq	s1,s6,55a <parseredirs+0xac>
-+     53e:	fd5495e3          	bne	s1,s5,508 <parseredirs+0x5a>
-       break;
-     case '>':
-       cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE|O_TRUNC, 1);
-       break;
-     case '+':  /* >> */
-       cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE, 1);
--     540:	4705                	li	a4,1
--     542:	20100693          	li	a3,513
--     546:	fa043603          	ld	a2,-96(s0)
--     54a:	fa843583          	ld	a1,-88(s0)
--     54e:	8552                	mv	a0,s4
--     550:	cb1ff0ef          	jal	200 <redircmd>
--     554:	8a2a                	mv	s4,a0
-+     542:	4705                	li	a4,1
-+     544:	20100693          	li	a3,513
-+     548:	f9043603          	ld	a2,-112(s0)
-+     54c:	f9843583          	ld	a1,-104(s0)
-+     550:	8552                	mv	a0,s4
-+     552:	cadff0ef          	jal	1fe <redircmd>
-+     556:	8a2a                	mv	s4,a0
-       break;
--     556:	b765                	j	4fe <parseredirs+0x4e>
-+     558:	b765                	j	500 <parseredirs+0x52>
-       cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE|O_TRUNC, 1);
--     558:	4705                	li	a4,1
--     55a:	60100693          	li	a3,1537
--     55e:	fa043603          	ld	a2,-96(s0)
--     562:	fa843583          	ld	a1,-88(s0)
--     566:	8552                	mv	a0,s4
--     568:	c99ff0ef          	jal	200 <redircmd>
--     56c:	8a2a                	mv	s4,a0
-+     55a:	4705                	li	a4,1
-+     55c:	60100693          	li	a3,1537
-+     560:	f9043603          	ld	a2,-112(s0)
-+     564:	f9843583          	ld	a1,-104(s0)
-+     568:	8552                	mv	a0,s4
-+     56a:	c95ff0ef          	jal	1fe <redircmd>
-+     56e:	8a2a                	mv	s4,a0
-       break;
--     56e:	bf41                	j	4fe <parseredirs+0x4e>
-+     570:	bf41                	j	500 <parseredirs+0x52>
-     }
-   }
-   return cmd;
- }
--     570:	8552                	mv	a0,s4
--     572:	60e6                	ld	ra,88(sp)
--     574:	6446                	ld	s0,80(sp)
--     576:	64a6                	ld	s1,72(sp)
--     578:	6906                	ld	s2,64(sp)
--     57a:	79e2                	ld	s3,56(sp)
--     57c:	7a42                	ld	s4,48(sp)
--     57e:	7aa2                	ld	s5,40(sp)
--     580:	7b02                	ld	s6,32(sp)
--     582:	6be2                	ld	s7,24(sp)
--     584:	6125                	addi	sp,sp,96
--     586:	8082                	ret
--
--0000000000000588 <parseexec>:
-+     572:	8552                	mv	a0,s4
-+     574:	70a6                	ld	ra,104(sp)
-+     576:	7406                	ld	s0,96(sp)
-+     578:	64e6                	ld	s1,88(sp)
-+     57a:	6946                	ld	s2,80(sp)
-+     57c:	69a6                	ld	s3,72(sp)
-+     57e:	6a06                	ld	s4,64(sp)
-+     580:	7ae2                	ld	s5,56(sp)
-+     582:	7b42                	ld	s6,48(sp)
-+     584:	7ba2                	ld	s7,40(sp)
-+     586:	7c02                	ld	s8,32(sp)
-+     588:	6ce2                	ld	s9,24(sp)
-+     58a:	6165                	add	sp,sp,112
-+     58c:	8082                	ret
-+
-+000000000000058e <parseexec>:
-   return cmd;
- }
- 
- struct cmd*
- parseexec(char **ps, char *es)
- {
--     588:	7159                	addi	sp,sp,-112
--     58a:	f486                	sd	ra,104(sp)
--     58c:	f0a2                	sd	s0,96(sp)
--     58e:	eca6                	sd	s1,88(sp)
--     590:	e0d2                	sd	s4,64(sp)
--     592:	fc56                	sd	s5,56(sp)
--     594:	1880                	addi	s0,sp,112
--     596:	8a2a                	mv	s4,a0
--     598:	8aae                	mv	s5,a1
-+     58e:	7159                	add	sp,sp,-112
-+     590:	f486                	sd	ra,104(sp)
-+     592:	f0a2                	sd	s0,96(sp)
-+     594:	eca6                	sd	s1,88(sp)
-+     596:	e8ca                	sd	s2,80(sp)
-+     598:	e4ce                	sd	s3,72(sp)
-+     59a:	e0d2                	sd	s4,64(sp)
-+     59c:	fc56                	sd	s5,56(sp)
-+     59e:	f85a                	sd	s6,48(sp)
-+     5a0:	f45e                	sd	s7,40(sp)
-+     5a2:	f062                	sd	s8,32(sp)
-+     5a4:	ec66                	sd	s9,24(sp)
-+     5a6:	1880                	add	s0,sp,112
-+     5a8:	8a2a                	mv	s4,a0
-+     5aa:	8aae                	mv	s5,a1
-   char *q, *eq;
-   int tok, argc;
-   struct execcmd *cmd;
-   struct cmd *ret;
- 
-   if(peek(ps, es, "("))
--     59a:	00001617          	auipc	a2,0x1
--     59e:	c9e60613          	addi	a2,a2,-866 # 1238 <malloc+0x170>
--     5a2:	eabff0ef          	jal	44c <peek>
--     5a6:	e915                	bnez	a0,5da <parseexec+0x52>
--     5a8:	e8ca                	sd	s2,80(sp)
--     5aa:	e4ce                	sd	s3,72(sp)
--     5ac:	f85a                	sd	s6,48(sp)
--     5ae:	f45e                	sd	s7,40(sp)
--     5b0:	f062                	sd	s8,32(sp)
--     5b2:	ec66                	sd	s9,24(sp)
--     5b4:	89aa                	mv	s3,a0
-+     5ac:	00001617          	auipc	a2,0x1
-+     5b0:	c7460613          	add	a2,a2,-908 # 1220 <malloc+0x150>
-+     5b4:	e97ff0ef          	jal	44a <peek>
-+     5b8:	e505                	bnez	a0,5e0 <parseexec+0x52>
-+     5ba:	89aa                	mv	s3,a0
-     return parseblock(ps, es);
- 
-   ret = execcmd();
--     5b6:	c1dff0ef          	jal	1d2 <execcmd>
--     5ba:	8c2a                	mv	s8,a0
-+     5bc:	c15ff0ef          	jal	1d0 <execcmd>
-+     5c0:	8c2a                	mv	s8,a0
-   cmd = (struct execcmd*)ret;
- 
-   argc = 0;
-   ret = parseredirs(ret, ps, es);
--     5bc:	8656                	mv	a2,s5
--     5be:	85d2                	mv	a1,s4
--     5c0:	ef1ff0ef          	jal	4b0 <parseredirs>
--     5c4:	84aa                	mv	s1,a0
-+     5c2:	8656                	mv	a2,s5
-+     5c4:	85d2                	mv	a1,s4
-+     5c6:	ee9ff0ef          	jal	4ae <parseredirs>
-+     5ca:	84aa                	mv	s1,a0
-   while(!peek(ps, es, "|)&;")){
--     5c6:	008c0913          	addi	s2,s8,8
--     5ca:	00001b17          	auipc	s6,0x1
--     5ce:	c8eb0b13          	addi	s6,s6,-882 # 1258 <malloc+0x190>
-+     5cc:	008c0913          	add	s2,s8,8
-+     5d0:	00001b17          	auipc	s6,0x1
-+     5d4:	c70b0b13          	add	s6,s6,-912 # 1240 <malloc+0x170>
-     if((tok=gettoken(ps, es, &q, &eq)) == 0)
-       break;
-     if(tok != 'a')
--     5d2:	06100c93          	li	s9,97
-+     5d8:	06100c93          	li	s9,97
-       panic("syntax");
-     cmd->argv[argc] = q;
-     cmd->eargv[argc] = eq;
-     argc++;
-     if(argc >= MAXARGS)
--     5d6:	4ba9                	li	s7,10
-+     5dc:	4ba9                	li	s7,10
-   while(!peek(ps, es, "|)&;")){
--     5d8:	a815                	j	60c <parseexec+0x84>
-+     5de:	a081                	j	61e <parseexec+0x90>
-     return parseblock(ps, es);
--     5da:	85d6                	mv	a1,s5
--     5dc:	8552                	mv	a0,s4
--     5de:	170000ef          	jal	74e <parseblock>
--     5e2:	84aa                	mv	s1,a0
-+     5e0:	85d6                	mv	a1,s5
-+     5e2:	8552                	mv	a0,s4
-+     5e4:	170000ef          	jal	754 <parseblock>
-+     5e8:	84aa                	mv	s1,a0
-     ret = parseredirs(ret, ps, es);
-   }
-   cmd->argv[argc] = 0;
-   cmd->eargv[argc] = 0;
-   return ret;
- }
--     5e4:	8526                	mv	a0,s1
--     5e6:	70a6                	ld	ra,104(sp)
--     5e8:	7406                	ld	s0,96(sp)
--     5ea:	64e6                	ld	s1,88(sp)
--     5ec:	6a06                	ld	s4,64(sp)
--     5ee:	7ae2                	ld	s5,56(sp)
--     5f0:	6165                	addi	sp,sp,112
--     5f2:	8082                	ret
-+     5ea:	8526                	mv	a0,s1
-+     5ec:	70a6                	ld	ra,104(sp)
-+     5ee:	7406                	ld	s0,96(sp)
-+     5f0:	64e6                	ld	s1,88(sp)
-+     5f2:	6946                	ld	s2,80(sp)
-+     5f4:	69a6                	ld	s3,72(sp)
-+     5f6:	6a06                	ld	s4,64(sp)
-+     5f8:	7ae2                	ld	s5,56(sp)
-+     5fa:	7b42                	ld	s6,48(sp)
-+     5fc:	7ba2                	ld	s7,40(sp)
-+     5fe:	7c02                	ld	s8,32(sp)
-+     600:	6ce2                	ld	s9,24(sp)
-+     602:	6165                	add	sp,sp,112
-+     604:	8082                	ret
-       panic("syntax");
--     5f4:	00001517          	auipc	a0,0x1
--     5f8:	c4c50513          	addi	a0,a0,-948 # 1240 <malloc+0x178>
--     5fc:	a4fff0ef          	jal	4a <panic>
-+     606:	00001517          	auipc	a0,0x1
-+     60a:	c2250513          	add	a0,a0,-990 # 1228 <malloc+0x158>
-+     60e:	a3dff0ef          	jal	4a <panic>
-     ret = parseredirs(ret, ps, es);
--     600:	8656                	mv	a2,s5
--     602:	85d2                	mv	a1,s4
--     604:	8526                	mv	a0,s1
--     606:	eabff0ef          	jal	4b0 <parseredirs>
--     60a:	84aa                	mv	s1,a0
-+     612:	8656                	mv	a2,s5
-+     614:	85d2                	mv	a1,s4
-+     616:	8526                	mv	a0,s1
-+     618:	e97ff0ef          	jal	4ae <parseredirs>
-+     61c:	84aa                	mv	s1,a0
-   while(!peek(ps, es, "|)&;")){
--     60c:	865a                	mv	a2,s6
--     60e:	85d6                	mv	a1,s5
--     610:	8552                	mv	a0,s4
--     612:	e3bff0ef          	jal	44c <peek>
--     616:	ed15                	bnez	a0,652 <parseexec+0xca>
--    if((tok=gettoken(ps, es, &q, &eq)) == 0)
--     618:	f9040693          	addi	a3,s0,-112
--     61c:	f9840613          	addi	a2,s0,-104
-+     61e:	865a                	mv	a2,s6
-      620:	85d6                	mv	a1,s5
-      622:	8552                	mv	a0,s4
--     624:	cedff0ef          	jal	310 <gettoken>
--     628:	c50d                	beqz	a0,652 <parseexec+0xca>
-+     624:	e27ff0ef          	jal	44a <peek>
-+     628:	ed15                	bnez	a0,664 <parseexec+0xd6>
-+    if((tok=gettoken(ps, es, &q, &eq)) == 0)
-+     62a:	f9040693          	add	a3,s0,-112
-+     62e:	f9840613          	add	a2,s0,-104
-+     632:	85d6                	mv	a1,s5
-+     634:	8552                	mv	a0,s4
-+     636:	cd9ff0ef          	jal	30e <gettoken>
-+     63a:	c50d                	beqz	a0,664 <parseexec+0xd6>
-     if(tok != 'a')
--     62a:	fd9515e3          	bne	a0,s9,5f4 <parseexec+0x6c>
-+     63c:	fd9515e3          	bne	a0,s9,606 <parseexec+0x78>
-     cmd->argv[argc] = q;
--     62e:	f9843783          	ld	a5,-104(s0)
--     632:	00f93023          	sd	a5,0(s2)
-+     640:	f9843783          	ld	a5,-104(s0)
-+     644:	00f93023          	sd	a5,0(s2)
-     cmd->eargv[argc] = eq;
--     636:	f9043783          	ld	a5,-112(s0)
--     63a:	04f93823          	sd	a5,80(s2)
-+     648:	f9043783          	ld	a5,-112(s0)
-+     64c:	04f93823          	sd	a5,80(s2)
-     argc++;
--     63e:	2985                	addiw	s3,s3,1
-+     650:	2985                	addw	s3,s3,1
-     if(argc >= MAXARGS)
--     640:	0921                	addi	s2,s2,8
--     642:	fb799fe3          	bne	s3,s7,600 <parseexec+0x78>
-+     652:	0921                	add	s2,s2,8
-+     654:	fb799fe3          	bne	s3,s7,612 <parseexec+0x84>
-       panic("too many args");
--     646:	00001517          	auipc	a0,0x1
--     64a:	c0250513          	addi	a0,a0,-1022 # 1248 <malloc+0x180>
--     64e:	9fdff0ef          	jal	4a <panic>
-+     658:	00001517          	auipc	a0,0x1
-+     65c:	bd850513          	add	a0,a0,-1064 # 1230 <malloc+0x160>
-+     660:	9ebff0ef          	jal	4a <panic>
-   cmd->argv[argc] = 0;
--     652:	098e                	slli	s3,s3,0x3
--     654:	9c4e                	add	s8,s8,s3
--     656:	000c3423          	sd	zero,8(s8)
-+     664:	098e                	sll	s3,s3,0x3
-+     666:	9c4e                	add	s8,s8,s3
-+     668:	000c3423          	sd	zero,8(s8)
-   cmd->eargv[argc] = 0;
--     65a:	040c3c23          	sd	zero,88(s8)
--     65e:	6946                	ld	s2,80(sp)
--     660:	69a6                	ld	s3,72(sp)
--     662:	7b42                	ld	s6,48(sp)
--     664:	7ba2                	ld	s7,40(sp)
--     666:	7c02                	ld	s8,32(sp)
--     668:	6ce2                	ld	s9,24(sp)
-+     66c:	040c3c23          	sd	zero,88(s8)
-   return ret;
--     66a:	bfad                	j	5e4 <parseexec+0x5c>
-+     670:	bfad                	j	5ea <parseexec+0x5c>
- 
--000000000000066c <parsepipe>:
-+0000000000000672 <parsepipe>:
- {
--     66c:	7179                	addi	sp,sp,-48
--     66e:	f406                	sd	ra,40(sp)
--     670:	f022                	sd	s0,32(sp)
--     672:	ec26                	sd	s1,24(sp)
--     674:	e84a                	sd	s2,16(sp)
--     676:	e44e                	sd	s3,8(sp)
--     678:	1800                	addi	s0,sp,48
--     67a:	892a                	mv	s2,a0
--     67c:	89ae                	mv	s3,a1
-+     672:	7179                	add	sp,sp,-48
-+     674:	f406                	sd	ra,40(sp)
-+     676:	f022                	sd	s0,32(sp)
-+     678:	ec26                	sd	s1,24(sp)
-+     67a:	e84a                	sd	s2,16(sp)
-+     67c:	e44e                	sd	s3,8(sp)
-+     67e:	1800                	add	s0,sp,48
-+     680:	892a                	mv	s2,a0
-+     682:	89ae                	mv	s3,a1
-   cmd = parseexec(ps, es);
--     67e:	f0bff0ef          	jal	588 <parseexec>
--     682:	84aa                	mv	s1,a0
-+     684:	f0bff0ef          	jal	58e <parseexec>
-+     688:	84aa                	mv	s1,a0
-   if(peek(ps, es, "|")){
--     684:	00001617          	auipc	a2,0x1
--     688:	bdc60613          	addi	a2,a2,-1060 # 1260 <malloc+0x198>
--     68c:	85ce                	mv	a1,s3
--     68e:	854a                	mv	a0,s2
--     690:	dbdff0ef          	jal	44c <peek>
--     694:	e909                	bnez	a0,6a6 <parsepipe+0x3a>
-+     68a:	00001617          	auipc	a2,0x1
-+     68e:	bbe60613          	add	a2,a2,-1090 # 1248 <malloc+0x178>
-+     692:	85ce                	mv	a1,s3
-+     694:	854a                	mv	a0,s2
-+     696:	db5ff0ef          	jal	44a <peek>
-+     69a:	e909                	bnez	a0,6ac <parsepipe+0x3a>
- }
--     696:	8526                	mv	a0,s1
--     698:	70a2                	ld	ra,40(sp)
--     69a:	7402                	ld	s0,32(sp)
--     69c:	64e2                	ld	s1,24(sp)
--     69e:	6942                	ld	s2,16(sp)
--     6a0:	69a2                	ld	s3,8(sp)
--     6a2:	6145                	addi	sp,sp,48
--     6a4:	8082                	ret
-+     69c:	8526                	mv	a0,s1
-+     69e:	70a2                	ld	ra,40(sp)
-+     6a0:	7402                	ld	s0,32(sp)
-+     6a2:	64e2                	ld	s1,24(sp)
-+     6a4:	6942                	ld	s2,16(sp)
-+     6a6:	69a2                	ld	s3,8(sp)
-+     6a8:	6145                	add	sp,sp,48
-+     6aa:	8082                	ret
-     gettoken(ps, es, 0, 0);
--     6a6:	4681                	li	a3,0
--     6a8:	4601                	li	a2,0
--     6aa:	85ce                	mv	a1,s3
--     6ac:	854a                	mv	a0,s2
--     6ae:	c63ff0ef          	jal	310 <gettoken>
-+     6ac:	4681                	li	a3,0
-+     6ae:	4601                	li	a2,0
-+     6b0:	85ce                	mv	a1,s3
-+     6b2:	854a                	mv	a0,s2
-+     6b4:	c5bff0ef          	jal	30e <gettoken>
-     cmd = pipecmd(cmd, parsepipe(ps, es));
--     6b2:	85ce                	mv	a1,s3
--     6b4:	854a                	mv	a0,s2
--     6b6:	fb7ff0ef          	jal	66c <parsepipe>
--     6ba:	85aa                	mv	a1,a0
--     6bc:	8526                	mv	a0,s1
--     6be:	ba3ff0ef          	jal	260 <pipecmd>
--     6c2:	84aa                	mv	s1,a0
-+     6b8:	85ce                	mv	a1,s3
-+     6ba:	854a                	mv	a0,s2
-+     6bc:	fb7ff0ef          	jal	672 <parsepipe>
-+     6c0:	85aa                	mv	a1,a0
-+     6c2:	8526                	mv	a0,s1
-+     6c4:	b9bff0ef          	jal	25e <pipecmd>
-+     6c8:	84aa                	mv	s1,a0
-   return cmd;
--     6c4:	bfc9                	j	696 <parsepipe+0x2a>
-+     6ca:	bfc9                	j	69c <parsepipe+0x2a>
- 
--00000000000006c6 <parseline>:
-+00000000000006cc <parseline>:
- {
--     6c6:	7179                	addi	sp,sp,-48
--     6c8:	f406                	sd	ra,40(sp)
--     6ca:	f022                	sd	s0,32(sp)
--     6cc:	ec26                	sd	s1,24(sp)
--     6ce:	e84a                	sd	s2,16(sp)
--     6d0:	e44e                	sd	s3,8(sp)
--     6d2:	e052                	sd	s4,0(sp)
--     6d4:	1800                	addi	s0,sp,48
--     6d6:	892a                	mv	s2,a0
--     6d8:	89ae                	mv	s3,a1
-+     6cc:	7179                	add	sp,sp,-48
-+     6ce:	f406                	sd	ra,40(sp)
-+     6d0:	f022                	sd	s0,32(sp)
-+     6d2:	ec26                	sd	s1,24(sp)
-+     6d4:	e84a                	sd	s2,16(sp)
-+     6d6:	e44e                	sd	s3,8(sp)
-+     6d8:	e052                	sd	s4,0(sp)
-+     6da:	1800                	add	s0,sp,48
-+     6dc:	892a                	mv	s2,a0
-+     6de:	89ae                	mv	s3,a1
-   cmd = parsepipe(ps, es);
--     6da:	f93ff0ef          	jal	66c <parsepipe>
--     6de:	84aa                	mv	s1,a0
-+     6e0:	f93ff0ef          	jal	672 <parsepipe>
-+     6e4:	84aa                	mv	s1,a0
-   while(peek(ps, es, "&")){
--     6e0:	00001a17          	auipc	s4,0x1
--     6e4:	b88a0a13          	addi	s4,s4,-1144 # 1268 <malloc+0x1a0>
--     6e8:	a819                	j	6fe <parseline+0x38>
-+     6e6:	00001a17          	auipc	s4,0x1
-+     6ea:	b6aa0a13          	add	s4,s4,-1174 # 1250 <malloc+0x180>
-+     6ee:	a819                	j	704 <parseline+0x38>
-     gettoken(ps, es, 0, 0);
--     6ea:	4681                	li	a3,0
--     6ec:	4601                	li	a2,0
--     6ee:	85ce                	mv	a1,s3
--     6f0:	854a                	mv	a0,s2
--     6f2:	c1fff0ef          	jal	310 <gettoken>
-+     6f0:	4681                	li	a3,0
-+     6f2:	4601                	li	a2,0
-+     6f4:	85ce                	mv	a1,s3
-+     6f6:	854a                	mv	a0,s2
-+     6f8:	c17ff0ef          	jal	30e <gettoken>
-     cmd = backcmd(cmd);
--     6f6:	8526                	mv	a0,s1
--     6f8:	be5ff0ef          	jal	2dc <backcmd>
--     6fc:	84aa                	mv	s1,a0
-+     6fc:	8526                	mv	a0,s1
-+     6fe:	bddff0ef          	jal	2da <backcmd>
-+     702:	84aa                	mv	s1,a0
-   while(peek(ps, es, "&")){
--     6fe:	8652                	mv	a2,s4
--     700:	85ce                	mv	a1,s3
--     702:	854a                	mv	a0,s2
--     704:	d49ff0ef          	jal	44c <peek>
--     708:	f16d                	bnez	a0,6ea <parseline+0x24>
-+     704:	8652                	mv	a2,s4
-+     706:	85ce                	mv	a1,s3
-+     708:	854a                	mv	a0,s2
-+     70a:	d41ff0ef          	jal	44a <peek>
-+     70e:	f16d                	bnez	a0,6f0 <parseline+0x24>
-   if(peek(ps, es, ";")){
--     70a:	00001617          	auipc	a2,0x1
--     70e:	b6660613          	addi	a2,a2,-1178 # 1270 <malloc+0x1a8>
--     712:	85ce                	mv	a1,s3
--     714:	854a                	mv	a0,s2
--     716:	d37ff0ef          	jal	44c <peek>
--     71a:	e911                	bnez	a0,72e <parseline+0x68>
-+     710:	00001617          	auipc	a2,0x1
-+     714:	b4860613          	add	a2,a2,-1208 # 1258 <malloc+0x188>
-+     718:	85ce                	mv	a1,s3
-+     71a:	854a                	mv	a0,s2
-+     71c:	d2fff0ef          	jal	44a <peek>
-+     720:	e911                	bnez	a0,734 <parseline+0x68>
- }
--     71c:	8526                	mv	a0,s1
--     71e:	70a2                	ld	ra,40(sp)
--     720:	7402                	ld	s0,32(sp)
--     722:	64e2                	ld	s1,24(sp)
--     724:	6942                	ld	s2,16(sp)
--     726:	69a2                	ld	s3,8(sp)
--     728:	6a02                	ld	s4,0(sp)
--     72a:	6145                	addi	sp,sp,48
--     72c:	8082                	ret
-+     722:	8526                	mv	a0,s1
-+     724:	70a2                	ld	ra,40(sp)
-+     726:	7402                	ld	s0,32(sp)
-+     728:	64e2                	ld	s1,24(sp)
-+     72a:	6942                	ld	s2,16(sp)
-+     72c:	69a2                	ld	s3,8(sp)
-+     72e:	6a02                	ld	s4,0(sp)
-+     730:	6145                	add	sp,sp,48
-+     732:	8082                	ret
-     gettoken(ps, es, 0, 0);
--     72e:	4681                	li	a3,0
--     730:	4601                	li	a2,0
--     732:	85ce                	mv	a1,s3
--     734:	854a                	mv	a0,s2
--     736:	bdbff0ef          	jal	310 <gettoken>
-+     734:	4681                	li	a3,0
-+     736:	4601                	li	a2,0
-+     738:	85ce                	mv	a1,s3
-+     73a:	854a                	mv	a0,s2
-+     73c:	bd3ff0ef          	jal	30e <gettoken>
-     cmd = listcmd(cmd, parseline(ps, es));
--     73a:	85ce                	mv	a1,s3
--     73c:	854a                	mv	a0,s2
--     73e:	f89ff0ef          	jal	6c6 <parseline>
--     742:	85aa                	mv	a1,a0
--     744:	8526                	mv	a0,s1
--     746:	b59ff0ef          	jal	29e <listcmd>
--     74a:	84aa                	mv	s1,a0
-+     740:	85ce                	mv	a1,s3
-+     742:	854a                	mv	a0,s2
-+     744:	f89ff0ef          	jal	6cc <parseline>
-+     748:	85aa                	mv	a1,a0
-+     74a:	8526                	mv	a0,s1
-+     74c:	b51ff0ef          	jal	29c <listcmd>
-+     750:	84aa                	mv	s1,a0
-   return cmd;
--     74c:	bfc1                	j	71c <parseline+0x56>
-+     752:	bfc1                	j	722 <parseline+0x56>
- 
--000000000000074e <parseblock>:
-+0000000000000754 <parseblock>:
- {
--     74e:	7179                	addi	sp,sp,-48
--     750:	f406                	sd	ra,40(sp)
--     752:	f022                	sd	s0,32(sp)
--     754:	ec26                	sd	s1,24(sp)
--     756:	e84a                	sd	s2,16(sp)
--     758:	e44e                	sd	s3,8(sp)
--     75a:	1800                	addi	s0,sp,48
--     75c:	84aa                	mv	s1,a0
--     75e:	892e                	mv	s2,a1
-+     754:	7179                	add	sp,sp,-48
-+     756:	f406                	sd	ra,40(sp)
-+     758:	f022                	sd	s0,32(sp)
-+     75a:	ec26                	sd	s1,24(sp)
-+     75c:	e84a                	sd	s2,16(sp)
-+     75e:	e44e                	sd	s3,8(sp)
-+     760:	1800                	add	s0,sp,48
-+     762:	84aa                	mv	s1,a0
-+     764:	892e                	mv	s2,a1
-   if(!peek(ps, es, "("))
--     760:	00001617          	auipc	a2,0x1
--     764:	ad860613          	addi	a2,a2,-1320 # 1238 <malloc+0x170>
--     768:	ce5ff0ef          	jal	44c <peek>
--     76c:	c539                	beqz	a0,7ba <parseblock+0x6c>
-+     766:	00001617          	auipc	a2,0x1
-+     76a:	aba60613          	add	a2,a2,-1350 # 1220 <malloc+0x150>
-+     76e:	cddff0ef          	jal	44a <peek>
-+     772:	c539                	beqz	a0,7c0 <parseblock+0x6c>
-   gettoken(ps, es, 0, 0);
--     76e:	4681                	li	a3,0
--     770:	4601                	li	a2,0
--     772:	85ca                	mv	a1,s2
--     774:	8526                	mv	a0,s1
--     776:	b9bff0ef          	jal	310 <gettoken>
-+     774:	4681                	li	a3,0
-+     776:	4601                	li	a2,0
-+     778:	85ca                	mv	a1,s2
-+     77a:	8526                	mv	a0,s1
-+     77c:	b93ff0ef          	jal	30e <gettoken>
-   cmd = parseline(ps, es);
--     77a:	85ca                	mv	a1,s2
--     77c:	8526                	mv	a0,s1
--     77e:	f49ff0ef          	jal	6c6 <parseline>
--     782:	89aa                	mv	s3,a0
-+     780:	85ca                	mv	a1,s2
-+     782:	8526                	mv	a0,s1
-+     784:	f49ff0ef          	jal	6cc <parseline>
-+     788:	89aa                	mv	s3,a0
-   if(!peek(ps, es, ")"))
--     784:	00001617          	auipc	a2,0x1
--     788:	b0460613          	addi	a2,a2,-1276 # 1288 <malloc+0x1c0>
--     78c:	85ca                	mv	a1,s2
--     78e:	8526                	mv	a0,s1
--     790:	cbdff0ef          	jal	44c <peek>
--     794:	c90d                	beqz	a0,7c6 <parseblock+0x78>
-+     78a:	00001617          	auipc	a2,0x1
-+     78e:	ae660613          	add	a2,a2,-1306 # 1270 <malloc+0x1a0>
-+     792:	85ca                	mv	a1,s2
-+     794:	8526                	mv	a0,s1
-+     796:	cb5ff0ef          	jal	44a <peek>
-+     79a:	c90d                	beqz	a0,7cc <parseblock+0x78>
-   gettoken(ps, es, 0, 0);
--     796:	4681                	li	a3,0
--     798:	4601                	li	a2,0
--     79a:	85ca                	mv	a1,s2
--     79c:	8526                	mv	a0,s1
--     79e:	b73ff0ef          	jal	310 <gettoken>
-+     79c:	4681                	li	a3,0
-+     79e:	4601                	li	a2,0
-+     7a0:	85ca                	mv	a1,s2
-+     7a2:	8526                	mv	a0,s1
-+     7a4:	b6bff0ef          	jal	30e <gettoken>
-   cmd = parseredirs(cmd, ps, es);
--     7a2:	864a                	mv	a2,s2
--     7a4:	85a6                	mv	a1,s1
--     7a6:	854e                	mv	a0,s3
--     7a8:	d09ff0ef          	jal	4b0 <parseredirs>
-+     7a8:	864a                	mv	a2,s2
-+     7aa:	85a6                	mv	a1,s1
-+     7ac:	854e                	mv	a0,s3
-+     7ae:	d01ff0ef          	jal	4ae <parseredirs>
- }
--     7ac:	70a2                	ld	ra,40(sp)
--     7ae:	7402                	ld	s0,32(sp)
--     7b0:	64e2                	ld	s1,24(sp)
--     7b2:	6942                	ld	s2,16(sp)
--     7b4:	69a2                	ld	s3,8(sp)
--     7b6:	6145                	addi	sp,sp,48
--     7b8:	8082                	ret
-+     7b2:	70a2                	ld	ra,40(sp)
-+     7b4:	7402                	ld	s0,32(sp)
-+     7b6:	64e2                	ld	s1,24(sp)
-+     7b8:	6942                	ld	s2,16(sp)
-+     7ba:	69a2                	ld	s3,8(sp)
-+     7bc:	6145                	add	sp,sp,48
-+     7be:	8082                	ret
-     panic("parseblock");
--     7ba:	00001517          	auipc	a0,0x1
--     7be:	abe50513          	addi	a0,a0,-1346 # 1278 <malloc+0x1b0>
--     7c2:	889ff0ef          	jal	4a <panic>
-+     7c0:	00001517          	auipc	a0,0x1
-+     7c4:	aa050513          	add	a0,a0,-1376 # 1260 <malloc+0x190>
-+     7c8:	883ff0ef          	jal	4a <panic>
-     panic("syntax - missing )");
--     7c6:	00001517          	auipc	a0,0x1
--     7ca:	aca50513          	addi	a0,a0,-1334 # 1290 <malloc+0x1c8>
--     7ce:	87dff0ef          	jal	4a <panic>
-+     7cc:	00001517          	auipc	a0,0x1
-+     7d0:	aac50513          	add	a0,a0,-1364 # 1278 <malloc+0x1a8>
-+     7d4:	877ff0ef          	jal	4a <panic>
- 
--00000000000007d2 <nulterminate>:
-+00000000000007d8 <nulterminate>:
- 
- /* NUL-terminate all the counted strings. */
- struct cmd*
- nulterminate(struct cmd *cmd)
- {
--     7d2:	1101                	addi	sp,sp,-32
--     7d4:	ec06                	sd	ra,24(sp)
--     7d6:	e822                	sd	s0,16(sp)
--     7d8:	e426                	sd	s1,8(sp)
--     7da:	1000                	addi	s0,sp,32
--     7dc:	84aa                	mv	s1,a0
-+     7d8:	1101                	add	sp,sp,-32
-+     7da:	ec06                	sd	ra,24(sp)
-+     7dc:	e822                	sd	s0,16(sp)
-+     7de:	e426                	sd	s1,8(sp)
-+     7e0:	1000                	add	s0,sp,32
-+     7e2:	84aa                	mv	s1,a0
-   struct execcmd *ecmd;
-   struct listcmd *lcmd;
-   struct pipecmd *pcmd;
-   struct redircmd *rcmd;
- 
-   if(cmd == 0)
--     7de:	c131                	beqz	a0,822 <nulterminate+0x50>
-+     7e4:	c131                	beqz	a0,828 <nulterminate+0x50>
-     return 0;
- 
-   switch(cmd->type){
--     7e0:	4118                	lw	a4,0(a0)
--     7e2:	4795                	li	a5,5
--     7e4:	02e7ef63          	bltu	a5,a4,822 <nulterminate+0x50>
--     7e8:	00056783          	lwu	a5,0(a0)
--     7ec:	078a                	slli	a5,a5,0x2
--     7ee:	00001717          	auipc	a4,0x1
--     7f2:	b0270713          	addi	a4,a4,-1278 # 12f0 <malloc+0x228>
--     7f6:	97ba                	add	a5,a5,a4
--     7f8:	439c                	lw	a5,0(a5)
--     7fa:	97ba                	add	a5,a5,a4
--     7fc:	8782                	jr	a5
-+     7e6:	4118                	lw	a4,0(a0)
-+     7e8:	4795                	li	a5,5
-+     7ea:	02e7ef63          	bltu	a5,a4,828 <nulterminate+0x50>
-+     7ee:	00056783          	lwu	a5,0(a0)
-+     7f2:	078a                	sll	a5,a5,0x2
-+     7f4:	00001717          	auipc	a4,0x1
-+     7f8:	ae470713          	add	a4,a4,-1308 # 12d8 <malloc+0x208>
-+     7fc:	97ba                	add	a5,a5,a4
-+     7fe:	439c                	lw	a5,0(a5)
-+     800:	97ba                	add	a5,a5,a4
-+     802:	8782                	jr	a5
-   case EXEC:
-     ecmd = (struct execcmd*)cmd;
-     for(i=0; ecmd->argv[i]; i++)
--     7fe:	651c                	ld	a5,8(a0)
--     800:	c38d                	beqz	a5,822 <nulterminate+0x50>
--     802:	01050793          	addi	a5,a0,16
-+     804:	651c                	ld	a5,8(a0)
-+     806:	c38d                	beqz	a5,828 <nulterminate+0x50>
-+     808:	01050793          	add	a5,a0,16
-       *ecmd->eargv[i] = 0;
--     806:	67b8                	ld	a4,72(a5)
--     808:	00070023          	sb	zero,0(a4)
-+     80c:	67b8                	ld	a4,72(a5)
-+     80e:	00070023          	sb	zero,0(a4)
-     for(i=0; ecmd->argv[i]; i++)
--     80c:	07a1                	addi	a5,a5,8
--     80e:	ff87b703          	ld	a4,-8(a5)
--     812:	fb75                	bnez	a4,806 <nulterminate+0x34>
--     814:	a039                	j	822 <nulterminate+0x50>
-+     812:	07a1                	add	a5,a5,8
-+     814:	ff87b703          	ld	a4,-8(a5)
-+     818:	fb75                	bnez	a4,80c <nulterminate+0x34>
-+     81a:	a039                	j	828 <nulterminate+0x50>
-     break;
- 
-   case REDIR:
-     rcmd = (struct redircmd*)cmd;
-     nulterminate(rcmd->cmd);
--     816:	6508                	ld	a0,8(a0)
--     818:	fbbff0ef          	jal	7d2 <nulterminate>
-+     81c:	6508                	ld	a0,8(a0)
-+     81e:	fbbff0ef          	jal	7d8 <nulterminate>
-     *rcmd->efile = 0;
--     81c:	6c9c                	ld	a5,24(s1)
--     81e:	00078023          	sb	zero,0(a5)
-+     822:	6c9c                	ld	a5,24(s1)
-+     824:	00078023          	sb	zero,0(a5)
-     bcmd = (struct backcmd*)cmd;
-     nulterminate(bcmd->cmd);
-     break;
-   }
-   return cmd;
- }
--     822:	8526                	mv	a0,s1
--     824:	60e2                	ld	ra,24(sp)
--     826:	6442                	ld	s0,16(sp)
--     828:	64a2                	ld	s1,8(sp)
--     82a:	6105                	addi	sp,sp,32
--     82c:	8082                	ret
-+     828:	8526                	mv	a0,s1
-+     82a:	60e2                	ld	ra,24(sp)
-+     82c:	6442                	ld	s0,16(sp)
-+     82e:	64a2                	ld	s1,8(sp)
-+     830:	6105                	add	sp,sp,32
-+     832:	8082                	ret
-     nulterminate(pcmd->left);
--     82e:	6508                	ld	a0,8(a0)
--     830:	fa3ff0ef          	jal	7d2 <nulterminate>
-+     834:	6508                	ld	a0,8(a0)
-+     836:	fa3ff0ef          	jal	7d8 <nulterminate>
-     nulterminate(pcmd->right);
--     834:	6888                	ld	a0,16(s1)
--     836:	f9dff0ef          	jal	7d2 <nulterminate>
-+     83a:	6888                	ld	a0,16(s1)
-+     83c:	f9dff0ef          	jal	7d8 <nulterminate>
-     break;
--     83a:	b7e5                	j	822 <nulterminate+0x50>
-+     840:	b7e5                	j	828 <nulterminate+0x50>
-     nulterminate(lcmd->left);
--     83c:	6508                	ld	a0,8(a0)
--     83e:	f95ff0ef          	jal	7d2 <nulterminate>
-+     842:	6508                	ld	a0,8(a0)
-+     844:	f95ff0ef          	jal	7d8 <nulterminate>
-     nulterminate(lcmd->right);
--     842:	6888                	ld	a0,16(s1)
--     844:	f8fff0ef          	jal	7d2 <nulterminate>
-+     848:	6888                	ld	a0,16(s1)
-+     84a:	f8fff0ef          	jal	7d8 <nulterminate>
-     break;
--     848:	bfe9                	j	822 <nulterminate+0x50>
-+     84e:	bfe9                	j	828 <nulterminate+0x50>
-     nulterminate(bcmd->cmd);
--     84a:	6508                	ld	a0,8(a0)
--     84c:	f87ff0ef          	jal	7d2 <nulterminate>
-+     850:	6508                	ld	a0,8(a0)
-+     852:	f87ff0ef          	jal	7d8 <nulterminate>
-     break;
--     850:	bfc9                	j	822 <nulterminate+0x50>
-+     856:	bfc9                	j	828 <nulterminate+0x50>
- 
--0000000000000852 <parsecmd>:
-+0000000000000858 <parsecmd>:
- {
--     852:	7179                	addi	sp,sp,-48
--     854:	f406                	sd	ra,40(sp)
--     856:	f022                	sd	s0,32(sp)
--     858:	ec26                	sd	s1,24(sp)
--     85a:	e84a                	sd	s2,16(sp)
--     85c:	1800                	addi	s0,sp,48
--     85e:	fca43c23          	sd	a0,-40(s0)
-+     858:	7179                	add	sp,sp,-48
-+     85a:	f406                	sd	ra,40(sp)
-+     85c:	f022                	sd	s0,32(sp)
-+     85e:	ec26                	sd	s1,24(sp)
-+     860:	e84a                	sd	s2,16(sp)
-+     862:	1800                	add	s0,sp,48
-+     864:	fca43c23          	sd	a0,-40(s0)
-   es = s + strlen(s);
--     862:	84aa                	mv	s1,a0
--     864:	188000ef          	jal	9ec <strlen>
--     868:	1502                	slli	a0,a0,0x20
--     86a:	9101                	srli	a0,a0,0x20
--     86c:	94aa                	add	s1,s1,a0
-+     868:	84aa                	mv	s1,a0
-+     86a:	188000ef          	jal	9f2 <strlen>
-+     86e:	1502                	sll	a0,a0,0x20
-+     870:	9101                	srl	a0,a0,0x20
-+     872:	94aa                	add	s1,s1,a0
-   cmd = parseline(&s, es);
--     86e:	85a6                	mv	a1,s1
--     870:	fd840513          	addi	a0,s0,-40
--     874:	e53ff0ef          	jal	6c6 <parseline>
--     878:	892a                	mv	s2,a0
-+     874:	85a6                	mv	a1,s1
-+     876:	fd840513          	add	a0,s0,-40
-+     87a:	e53ff0ef          	jal	6cc <parseline>
-+     87e:	892a                	mv	s2,a0
-   peek(&s, es, "");
--     87a:	00001617          	auipc	a2,0x1
--     87e:	94e60613          	addi	a2,a2,-1714 # 11c8 <malloc+0x100>
--     882:	85a6                	mv	a1,s1
--     884:	fd840513          	addi	a0,s0,-40
--     888:	bc5ff0ef          	jal	44c <peek>
-+     880:	00001617          	auipc	a2,0x1
-+     884:	a1060613          	add	a2,a2,-1520 # 1290 <malloc+0x1c0>
-+     888:	85a6                	mv	a1,s1
-+     88a:	fd840513          	add	a0,s0,-40
-+     88e:	bbdff0ef          	jal	44a <peek>
-   if(s != es){
--     88c:	fd843603          	ld	a2,-40(s0)
--     890:	00961c63          	bne	a2,s1,8a8 <parsecmd+0x56>
-+     892:	fd843603          	ld	a2,-40(s0)
-+     896:	00961c63          	bne	a2,s1,8ae <parsecmd+0x56>
-   nulterminate(cmd);
--     894:	854a                	mv	a0,s2
--     896:	f3dff0ef          	jal	7d2 <nulterminate>
--}
-      89a:	854a                	mv	a0,s2
--     89c:	70a2                	ld	ra,40(sp)
--     89e:	7402                	ld	s0,32(sp)
--     8a0:	64e2                	ld	s1,24(sp)
--     8a2:	6942                	ld	s2,16(sp)
--     8a4:	6145                	addi	sp,sp,48
--     8a6:	8082                	ret
-+     89c:	f3dff0ef          	jal	7d8 <nulterminate>
-+}
-+     8a0:	854a                	mv	a0,s2
-+     8a2:	70a2                	ld	ra,40(sp)
-+     8a4:	7402                	ld	s0,32(sp)
-+     8a6:	64e2                	ld	s1,24(sp)
-+     8a8:	6942                	ld	s2,16(sp)
-+     8aa:	6145                	add	sp,sp,48
-+     8ac:	8082                	ret
-     fprintf(2, "leftovers: %s\n", s);
--     8a8:	00001597          	auipc	a1,0x1
--     8ac:	a0058593          	addi	a1,a1,-1536 # 12a8 <malloc+0x1e0>
--     8b0:	4509                	li	a0,2
--     8b2:	738000ef          	jal	fea <fprintf>
-+     8ae:	00001597          	auipc	a1,0x1
-+     8b2:	9ea58593          	add	a1,a1,-1558 # 1298 <malloc+0x1c8>
-+     8b6:	4509                	li	a0,2
-+     8b8:	73a000ef          	jal	ff2 <fprintf>
-     panic("syntax");
--     8b6:	00001517          	auipc	a0,0x1
--     8ba:	98a50513          	addi	a0,a0,-1654 # 1240 <malloc+0x178>
--     8be:	f8cff0ef          	jal	4a <panic>
-+     8bc:	00001517          	auipc	a0,0x1
-+     8c0:	96c50513          	add	a0,a0,-1684 # 1228 <malloc+0x158>
-+     8c4:	f86ff0ef          	jal	4a <panic>
- 
--00000000000008c2 <main>:
-+00000000000008c8 <main>:
- {
--     8c2:	7179                	addi	sp,sp,-48
--     8c4:	f406                	sd	ra,40(sp)
--     8c6:	f022                	sd	s0,32(sp)
--     8c8:	ec26                	sd	s1,24(sp)
--     8ca:	e84a                	sd	s2,16(sp)
--     8cc:	e44e                	sd	s3,8(sp)
--     8ce:	e052                	sd	s4,0(sp)
--     8d0:	1800                	addi	s0,sp,48
-+     8c8:	7179                	add	sp,sp,-48
-+     8ca:	f406                	sd	ra,40(sp)
-+     8cc:	f022                	sd	s0,32(sp)
-+     8ce:	ec26                	sd	s1,24(sp)
-+     8d0:	e84a                	sd	s2,16(sp)
-+     8d2:	e44e                	sd	s3,8(sp)
-+     8d4:	e052                	sd	s4,0(sp)
-+     8d6:	1800                	add	s0,sp,48
-   while((fd = open("console", O_RDWR)) >= 0){
--     8d2:	00001497          	auipc	s1,0x1
--     8d6:	9e648493          	addi	s1,s1,-1562 # 12b8 <malloc+0x1f0>
--     8da:	4589                	li	a1,2
--     8dc:	8526                	mv	a0,s1
--     8de:	35e000ef          	jal	c3c <open>
--     8e2:	00054763          	bltz	a0,8f0 <main+0x2e>
-+     8d8:	00001497          	auipc	s1,0x1
-+     8dc:	9d048493          	add	s1,s1,-1584 # 12a8 <malloc+0x1d8>
-+     8e0:	4589                	li	a1,2
-+     8e2:	8526                	mv	a0,s1
-+     8e4:	35e000ef          	jal	c42 <open>
-+     8e8:	00054763          	bltz	a0,8f6 <main+0x2e>
-     if(fd >= 3){
--     8e6:	4789                	li	a5,2
--     8e8:	fea7d9e3          	bge	a5,a0,8da <main+0x18>
-+     8ec:	4789                	li	a5,2
-+     8ee:	fea7d9e3          	bge	a5,a0,8e0 <main+0x18>
-       close(fd);
--     8ec:	338000ef          	jal	c24 <close>
-+     8f2:	338000ef          	jal	c2a <close>
-   while(getcmd(buf, sizeof(buf)) >= 0){
--     8f0:	00001497          	auipc	s1,0x1
--     8f4:	73048493          	addi	s1,s1,1840 # 2020 <buf.0>
-+     8f6:	00001497          	auipc	s1,0x1
-+     8fa:	72a48493          	add	s1,s1,1834 # 2020 <buf.0>
-     if(buf[0] == 'c' && buf[1] == 'd' && buf[2] == ' '){
--     8f8:	06300913          	li	s2,99
--     8fc:	02000993          	li	s3,32
--     900:	a039                	j	90e <main+0x4c>
-+     8fe:	06300913          	li	s2,99
-+     902:	02000993          	li	s3,32
-+     906:	a039                	j	914 <main+0x4c>
-     if(fork1() == 0)
--     902:	f66ff0ef          	jal	68 <fork1>
--     906:	c93d                	beqz	a0,97c <main+0xba>
-+     908:	f60ff0ef          	jal	68 <fork1>
-+     90c:	c93d                	beqz	a0,982 <main+0xba>
-     wait(0);
--     908:	4501                	li	a0,0
--     90a:	2fa000ef          	jal	c04 <wait>
-+     90e:	4501                	li	a0,0
-+     910:	2fa000ef          	jal	c0a <wait>
-   while(getcmd(buf, sizeof(buf)) >= 0){
--     90e:	06400593          	li	a1,100
--     912:	8526                	mv	a0,s1
--     914:	eecff0ef          	jal	0 <getcmd>
--     918:	06054a63          	bltz	a0,98c <main+0xca>
-+     914:	06400593          	li	a1,100
-+     918:	8526                	mv	a0,s1
-+     91a:	ee6ff0ef          	jal	0 <getcmd>
-+     91e:	06054a63          	bltz	a0,992 <main+0xca>
-     if(buf[0] == 'c' && buf[1] == 'd' && buf[2] == ' '){
--     91c:	0004c783          	lbu	a5,0(s1)
--     920:	ff2791e3          	bne	a5,s2,902 <main+0x40>
--     924:	0014c703          	lbu	a4,1(s1)
--     928:	06400793          	li	a5,100
--     92c:	fcf71be3          	bne	a4,a5,902 <main+0x40>
--     930:	0024c783          	lbu	a5,2(s1)
--     934:	fd3797e3          	bne	a5,s3,902 <main+0x40>
-+     922:	0004c783          	lbu	a5,0(s1)
-+     926:	ff2791e3          	bne	a5,s2,908 <main+0x40>
-+     92a:	0014c703          	lbu	a4,1(s1)
-+     92e:	06400793          	li	a5,100
-+     932:	fcf71be3          	bne	a4,a5,908 <main+0x40>
-+     936:	0024c783          	lbu	a5,2(s1)
-+     93a:	fd3797e3          	bne	a5,s3,908 <main+0x40>
-       buf[strlen(buf)-1] = 0;  /* chop \n */
--     938:	00001a17          	auipc	s4,0x1
--     93c:	6e8a0a13          	addi	s4,s4,1768 # 2020 <buf.0>
--     940:	8552                	mv	a0,s4
--     942:	0aa000ef          	jal	9ec <strlen>
--     946:	fff5079b          	addiw	a5,a0,-1
--     94a:	1782                	slli	a5,a5,0x20
--     94c:	9381                	srli	a5,a5,0x20
--     94e:	9a3e                	add	s4,s4,a5
--     950:	000a0023          	sb	zero,0(s4)
-+     93e:	00001a17          	auipc	s4,0x1
-+     942:	6e2a0a13          	add	s4,s4,1762 # 2020 <buf.0>
-+     946:	8552                	mv	a0,s4
-+     948:	0aa000ef          	jal	9f2 <strlen>
-+     94c:	fff5079b          	addw	a5,a0,-1
-+     950:	1782                	sll	a5,a5,0x20
-+     952:	9381                	srl	a5,a5,0x20
-+     954:	9a3e                	add	s4,s4,a5
-+     956:	000a0023          	sb	zero,0(s4)
-       if(chdir(buf+3) < 0)
--     954:	00001517          	auipc	a0,0x1
--     958:	6cf50513          	addi	a0,a0,1743 # 2023 <buf.0+0x3>
--     95c:	310000ef          	jal	c6c <chdir>
--     960:	fa0557e3          	bgez	a0,90e <main+0x4c>
-+     95a:	00001517          	auipc	a0,0x1
-+     95e:	6c950513          	add	a0,a0,1737 # 2023 <buf.0+0x3>
-+     962:	310000ef          	jal	c72 <chdir>
-+     966:	fa0557e3          	bgez	a0,914 <main+0x4c>
-         fprintf(2, "cannot cd %s\n", buf+3);
--     964:	00001617          	auipc	a2,0x1
--     968:	6bf60613          	addi	a2,a2,1727 # 2023 <buf.0+0x3>
--     96c:	00001597          	auipc	a1,0x1
--     970:	95458593          	addi	a1,a1,-1708 # 12c0 <malloc+0x1f8>
--     974:	4509                	li	a0,2
--     976:	674000ef          	jal	fea <fprintf>
--     97a:	bf51                	j	90e <main+0x4c>
-+     96a:	00001617          	auipc	a2,0x1
-+     96e:	6b960613          	add	a2,a2,1721 # 2023 <buf.0+0x3>
-+     972:	00001597          	auipc	a1,0x1
-+     976:	93e58593          	add	a1,a1,-1730 # 12b0 <malloc+0x1e0>
-+     97a:	4509                	li	a0,2
-+     97c:	676000ef          	jal	ff2 <fprintf>
-+     980:	bf51                	j	914 <main+0x4c>
-       runcmd(parsecmd(buf));
--     97c:	00001517          	auipc	a0,0x1
--     980:	6a450513          	addi	a0,a0,1700 # 2020 <buf.0>
--     984:	ecfff0ef          	jal	852 <parsecmd>
--     988:	f06ff0ef          	jal	8e <runcmd>
-+     982:	00001517          	auipc	a0,0x1
-+     986:	69e50513          	add	a0,a0,1694 # 2020 <buf.0>
-+     98a:	ecfff0ef          	jal	858 <parsecmd>
-+     98e:	f00ff0ef          	jal	8e <runcmd>
-   exit(0);
--     98c:	4501                	li	a0,0
--     98e:	26e000ef          	jal	bfc <exit>
-+     992:	4501                	li	a0,0
-+     994:	26e000ef          	jal	c02 <exit>
- 
--0000000000000992 <start>:
-+0000000000000998 <start>:
- /* */
- /* wrapper so that it's OK if main() does not call exit(). */
- /* */
- void
- start()
- {
--     992:	1141                	addi	sp,sp,-16
--     994:	e406                	sd	ra,8(sp)
--     996:	e022                	sd	s0,0(sp)
--     998:	0800                	addi	s0,sp,16
-+     998:	1141                	add	sp,sp,-16
-+     99a:	e406                	sd	ra,8(sp)
-+     99c:	e022                	sd	s0,0(sp)
-+     99e:	0800                	add	s0,sp,16
-   extern int main();
-   main();
--     99a:	f29ff0ef          	jal	8c2 <main>
-+     9a0:	f29ff0ef          	jal	8c8 <main>
-   exit(0);
--     99e:	4501                	li	a0,0
--     9a0:	25c000ef          	jal	bfc <exit>
-+     9a4:	4501                	li	a0,0
-+     9a6:	25c000ef          	jal	c02 <exit>
- 
--00000000000009a4 <strcpy>:
-+00000000000009aa <strcpy>:
- }
- 
- char*
- strcpy(char *s, const char *t)
- {
--     9a4:	1141                	addi	sp,sp,-16
--     9a6:	e422                	sd	s0,8(sp)
--     9a8:	0800                	addi	s0,sp,16
-+     9aa:	1141                	add	sp,sp,-16
-+     9ac:	e422                	sd	s0,8(sp)
-+     9ae:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
--     9aa:	87aa                	mv	a5,a0
--     9ac:	0585                	addi	a1,a1,1
--     9ae:	0785                	addi	a5,a5,1
--     9b0:	fff5c703          	lbu	a4,-1(a1)
--     9b4:	fee78fa3          	sb	a4,-1(a5)
--     9b8:	fb75                	bnez	a4,9ac <strcpy+0x8>
-+     9b0:	87aa                	mv	a5,a0
-+     9b2:	0585                	add	a1,a1,1
-+     9b4:	0785                	add	a5,a5,1
-+     9b6:	fff5c703          	lbu	a4,-1(a1)
-+     9ba:	fee78fa3          	sb	a4,-1(a5)
-+     9be:	fb75                	bnez	a4,9b2 <strcpy+0x8>
-     ;
-   return os;
- }
--     9ba:	6422                	ld	s0,8(sp)
--     9bc:	0141                	addi	sp,sp,16
--     9be:	8082                	ret
-+     9c0:	6422                	ld	s0,8(sp)
-+     9c2:	0141                	add	sp,sp,16
-+     9c4:	8082                	ret
- 
--00000000000009c0 <strcmp>:
-+00000000000009c6 <strcmp>:
- 
- int
- strcmp(const char *p, const char *q)
- {
--     9c0:	1141                	addi	sp,sp,-16
--     9c2:	e422                	sd	s0,8(sp)
--     9c4:	0800                	addi	s0,sp,16
-+     9c6:	1141                	add	sp,sp,-16
-+     9c8:	e422                	sd	s0,8(sp)
-+     9ca:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
--     9c6:	00054783          	lbu	a5,0(a0)
--     9ca:	cb91                	beqz	a5,9de <strcmp+0x1e>
--     9cc:	0005c703          	lbu	a4,0(a1)
--     9d0:	00f71763          	bne	a4,a5,9de <strcmp+0x1e>
-+     9cc:	00054783          	lbu	a5,0(a0)
-+     9d0:	cb91                	beqz	a5,9e4 <strcmp+0x1e>
-+     9d2:	0005c703          	lbu	a4,0(a1)
-+     9d6:	00f71763          	bne	a4,a5,9e4 <strcmp+0x1e>
-     p++, q++;
--     9d4:	0505                	addi	a0,a0,1
--     9d6:	0585                	addi	a1,a1,1
-+     9da:	0505                	add	a0,a0,1
-+     9dc:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
--     9d8:	00054783          	lbu	a5,0(a0)
--     9dc:	fbe5                	bnez	a5,9cc <strcmp+0xc>
-+     9de:	00054783          	lbu	a5,0(a0)
-+     9e2:	fbe5                	bnez	a5,9d2 <strcmp+0xc>
-   return (uchar)*p - (uchar)*q;
--     9de:	0005c503          	lbu	a0,0(a1)
-+     9e4:	0005c503          	lbu	a0,0(a1)
- }
--     9e2:	40a7853b          	subw	a0,a5,a0
--     9e6:	6422                	ld	s0,8(sp)
--     9e8:	0141                	addi	sp,sp,16
--     9ea:	8082                	ret
-+     9e8:	40a7853b          	subw	a0,a5,a0
-+     9ec:	6422                	ld	s0,8(sp)
-+     9ee:	0141                	add	sp,sp,16
-+     9f0:	8082                	ret
- 
--00000000000009ec <strlen>:
-+00000000000009f2 <strlen>:
- 
- uint
- strlen(const char *s)
- {
--     9ec:	1141                	addi	sp,sp,-16
--     9ee:	e422                	sd	s0,8(sp)
--     9f0:	0800                	addi	s0,sp,16
-+     9f2:	1141                	add	sp,sp,-16
-+     9f4:	e422                	sd	s0,8(sp)
-+     9f6:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
--     9f2:	00054783          	lbu	a5,0(a0)
--     9f6:	cf91                	beqz	a5,a12 <strlen+0x26>
--     9f8:	0505                	addi	a0,a0,1
--     9fa:	87aa                	mv	a5,a0
--     9fc:	86be                	mv	a3,a5
--     9fe:	0785                	addi	a5,a5,1
--     a00:	fff7c703          	lbu	a4,-1(a5)
--     a04:	ff65                	bnez	a4,9fc <strlen+0x10>
--     a06:	40a6853b          	subw	a0,a3,a0
--     a0a:	2505                	addiw	a0,a0,1
-+     9f8:	00054783          	lbu	a5,0(a0)
-+     9fc:	cf91                	beqz	a5,a18 <strlen+0x26>
-+     9fe:	0505                	add	a0,a0,1
-+     a00:	87aa                	mv	a5,a0
-+     a02:	86be                	mv	a3,a5
-+     a04:	0785                	add	a5,a5,1
-+     a06:	fff7c703          	lbu	a4,-1(a5)
-+     a0a:	ff65                	bnez	a4,a02 <strlen+0x10>
-+     a0c:	40a6853b          	subw	a0,a3,a0
-+     a10:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
--     a0c:	6422                	ld	s0,8(sp)
--     a0e:	0141                	addi	sp,sp,16
--     a10:	8082                	ret
-+     a12:	6422                	ld	s0,8(sp)
-+     a14:	0141                	add	sp,sp,16
-+     a16:	8082                	ret
-   for(n = 0; s[n]; n++)
--     a12:	4501                	li	a0,0
--     a14:	bfe5                	j	a0c <strlen+0x20>
-+     a18:	4501                	li	a0,0
-+     a1a:	bfe5                	j	a12 <strlen+0x20>
- 
--0000000000000a16 <memset>:
-+0000000000000a1c <memset>:
- 
- void*
- memset(void *dst, int c, uint n)
- {
--     a16:	1141                	addi	sp,sp,-16
--     a18:	e422                	sd	s0,8(sp)
--     a1a:	0800                	addi	s0,sp,16
-+     a1c:	1141                	add	sp,sp,-16
-+     a1e:	e422                	sd	s0,8(sp)
-+     a20:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
--     a1c:	ca19                	beqz	a2,a32 <memset+0x1c>
--     a1e:	87aa                	mv	a5,a0
--     a20:	1602                	slli	a2,a2,0x20
--     a22:	9201                	srli	a2,a2,0x20
--     a24:	00a60733          	add	a4,a2,a0
-+     a22:	ca19                	beqz	a2,a38 <memset+0x1c>
-+     a24:	87aa                	mv	a5,a0
-+     a26:	1602                	sll	a2,a2,0x20
-+     a28:	9201                	srl	a2,a2,0x20
-+     a2a:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
--     a28:	00b78023          	sb	a1,0(a5)
-+     a2e:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
--     a2c:	0785                	addi	a5,a5,1
--     a2e:	fee79de3          	bne	a5,a4,a28 <memset+0x12>
-+     a32:	0785                	add	a5,a5,1
-+     a34:	fee79de3          	bne	a5,a4,a2e <memset+0x12>
-   }
-   return dst;
- }
--     a32:	6422                	ld	s0,8(sp)
--     a34:	0141                	addi	sp,sp,16
--     a36:	8082                	ret
-+     a38:	6422                	ld	s0,8(sp)
-+     a3a:	0141                	add	sp,sp,16
-+     a3c:	8082                	ret
- 
--0000000000000a38 <strchr>:
-+0000000000000a3e <strchr>:
- 
- char*
- strchr(const char *s, char c)
- {
--     a38:	1141                	addi	sp,sp,-16
--     a3a:	e422                	sd	s0,8(sp)
--     a3c:	0800                	addi	s0,sp,16
-+     a3e:	1141                	add	sp,sp,-16
-+     a40:	e422                	sd	s0,8(sp)
-+     a42:	0800                	add	s0,sp,16
-   for(; *s; s++)
--     a3e:	00054783          	lbu	a5,0(a0)
--     a42:	cb99                	beqz	a5,a58 <strchr+0x20>
-+     a44:	00054783          	lbu	a5,0(a0)
-+     a48:	cb99                	beqz	a5,a5e <strchr+0x20>
-     if(*s == c)
--     a44:	00f58763          	beq	a1,a5,a52 <strchr+0x1a>
-+     a4a:	00f58763          	beq	a1,a5,a58 <strchr+0x1a>
-   for(; *s; s++)
--     a48:	0505                	addi	a0,a0,1
--     a4a:	00054783          	lbu	a5,0(a0)
--     a4e:	fbfd                	bnez	a5,a44 <strchr+0xc>
-+     a4e:	0505                	add	a0,a0,1
-+     a50:	00054783          	lbu	a5,0(a0)
-+     a54:	fbfd                	bnez	a5,a4a <strchr+0xc>
-       return (char*)s;
-   return 0;
--     a50:	4501                	li	a0,0
-+     a56:	4501                	li	a0,0
- }
--     a52:	6422                	ld	s0,8(sp)
--     a54:	0141                	addi	sp,sp,16
--     a56:	8082                	ret
-+     a58:	6422                	ld	s0,8(sp)
-+     a5a:	0141                	add	sp,sp,16
-+     a5c:	8082                	ret
-   return 0;
--     a58:	4501                	li	a0,0
--     a5a:	bfe5                	j	a52 <strchr+0x1a>
-+     a5e:	4501                	li	a0,0
-+     a60:	bfe5                	j	a58 <strchr+0x1a>
- 
--0000000000000a5c <gets>:
-+0000000000000a62 <gets>:
- 
- char*
- gets(char *buf, int max)
- {
--     a5c:	711d                	addi	sp,sp,-96
--     a5e:	ec86                	sd	ra,88(sp)
--     a60:	e8a2                	sd	s0,80(sp)
--     a62:	e4a6                	sd	s1,72(sp)
--     a64:	e0ca                	sd	s2,64(sp)
--     a66:	fc4e                	sd	s3,56(sp)
--     a68:	f852                	sd	s4,48(sp)
--     a6a:	f456                	sd	s5,40(sp)
--     a6c:	f05a                	sd	s6,32(sp)
--     a6e:	ec5e                	sd	s7,24(sp)
--     a70:	1080                	addi	s0,sp,96
--     a72:	8baa                	mv	s7,a0
--     a74:	8a2e                	mv	s4,a1
-+     a62:	711d                	add	sp,sp,-96
-+     a64:	ec86                	sd	ra,88(sp)
-+     a66:	e8a2                	sd	s0,80(sp)
-+     a68:	e4a6                	sd	s1,72(sp)
-+     a6a:	e0ca                	sd	s2,64(sp)
-+     a6c:	fc4e                	sd	s3,56(sp)
-+     a6e:	f852                	sd	s4,48(sp)
-+     a70:	f456                	sd	s5,40(sp)
-+     a72:	f05a                	sd	s6,32(sp)
-+     a74:	ec5e                	sd	s7,24(sp)
-+     a76:	1080                	add	s0,sp,96
-+     a78:	8baa                	mv	s7,a0
-+     a7a:	8a2e                	mv	s4,a1
-   int i, cc;
-   char c;
- 
-   for(i=0; i+1 < max; ){
--     a76:	892a                	mv	s2,a0
--     a78:	4481                	li	s1,0
-+     a7c:	892a                	mv	s2,a0
-+     a7e:	4481                	li	s1,0
-     cc = read(0, &c, 1);
-     if(cc < 1)
-       break;
-     buf[i++] = c;
-     if(c == '\n' || c == '\r')
--     a7a:	4aa9                	li	s5,10
--     a7c:	4b35                	li	s6,13
-+     a80:	4aa9                	li	s5,10
-+     a82:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
--     a7e:	89a6                	mv	s3,s1
--     a80:	2485                	addiw	s1,s1,1
--     a82:	0344d663          	bge	s1,s4,aae <gets+0x52>
-+     a84:	89a6                	mv	s3,s1
-+     a86:	2485                	addw	s1,s1,1
-+     a88:	0344d663          	bge	s1,s4,ab4 <gets+0x52>
-     cc = read(0, &c, 1);
--     a86:	4605                	li	a2,1
--     a88:	faf40593          	addi	a1,s0,-81
--     a8c:	4501                	li	a0,0
--     a8e:	186000ef          	jal	c14 <read>
-+     a8c:	4605                	li	a2,1
-+     a8e:	faf40593          	add	a1,s0,-81
-+     a92:	4501                	li	a0,0
-+     a94:	186000ef          	jal	c1a <read>
-     if(cc < 1)
--     a92:	00a05e63          	blez	a0,aae <gets+0x52>
-+     a98:	00a05e63          	blez	a0,ab4 <gets+0x52>
-     buf[i++] = c;
--     a96:	faf44783          	lbu	a5,-81(s0)
--     a9a:	00f90023          	sb	a5,0(s2)
-+     a9c:	faf44783          	lbu	a5,-81(s0)
-+     aa0:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
--     a9e:	01578763          	beq	a5,s5,aac <gets+0x50>
--     aa2:	0905                	addi	s2,s2,1
--     aa4:	fd679de3          	bne	a5,s6,a7e <gets+0x22>
--    buf[i++] = c;
--     aa8:	89a6                	mv	s3,s1
--     aaa:	a011                	j	aae <gets+0x52>
--     aac:	89a6                	mv	s3,s1
-+     aa4:	01578763          	beq	a5,s5,ab2 <gets+0x50>
-+     aa8:	0905                	add	s2,s2,1
-+     aaa:	fd679de3          	bne	a5,s6,a84 <gets+0x22>
-+  for(i=0; i+1 < max; ){
-+     aae:	89a6                	mv	s3,s1
-+     ab0:	a011                	j	ab4 <gets+0x52>
-+     ab2:	89a6                	mv	s3,s1
-       break;
-   }
-   buf[i] = '\0';
--     aae:	99de                	add	s3,s3,s7
--     ab0:	00098023          	sb	zero,0(s3)
-+     ab4:	99de                	add	s3,s3,s7
-+     ab6:	00098023          	sb	zero,0(s3)
-   return buf;
- }
--     ab4:	855e                	mv	a0,s7
--     ab6:	60e6                	ld	ra,88(sp)
--     ab8:	6446                	ld	s0,80(sp)
--     aba:	64a6                	ld	s1,72(sp)
--     abc:	6906                	ld	s2,64(sp)
--     abe:	79e2                	ld	s3,56(sp)
--     ac0:	7a42                	ld	s4,48(sp)
--     ac2:	7aa2                	ld	s5,40(sp)
--     ac4:	7b02                	ld	s6,32(sp)
--     ac6:	6be2                	ld	s7,24(sp)
--     ac8:	6125                	addi	sp,sp,96
--     aca:	8082                	ret
--
--0000000000000acc <stat>:
-+     aba:	855e                	mv	a0,s7
-+     abc:	60e6                	ld	ra,88(sp)
-+     abe:	6446                	ld	s0,80(sp)
-+     ac0:	64a6                	ld	s1,72(sp)
-+     ac2:	6906                	ld	s2,64(sp)
-+     ac4:	79e2                	ld	s3,56(sp)
-+     ac6:	7a42                	ld	s4,48(sp)
-+     ac8:	7aa2                	ld	s5,40(sp)
-+     aca:	7b02                	ld	s6,32(sp)
-+     acc:	6be2                	ld	s7,24(sp)
-+     ace:	6125                	add	sp,sp,96
-+     ad0:	8082                	ret
-+
-+0000000000000ad2 <stat>:
- 
- int
- stat(const char *n, struct stat *st)
- {
--     acc:	1101                	addi	sp,sp,-32
--     ace:	ec06                	sd	ra,24(sp)
--     ad0:	e822                	sd	s0,16(sp)
--     ad2:	e04a                	sd	s2,0(sp)
--     ad4:	1000                	addi	s0,sp,32
--     ad6:	892e                	mv	s2,a1
-+     ad2:	1101                	add	sp,sp,-32
-+     ad4:	ec06                	sd	ra,24(sp)
-+     ad6:	e822                	sd	s0,16(sp)
-+     ad8:	e426                	sd	s1,8(sp)
-+     ada:	e04a                	sd	s2,0(sp)
-+     adc:	1000                	add	s0,sp,32
-+     ade:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
--     ad8:	4581                	li	a1,0
--     ada:	162000ef          	jal	c3c <open>
-+     ae0:	4581                	li	a1,0
-+     ae2:	160000ef          	jal	c42 <open>
-   if(fd < 0)
--     ade:	02054263          	bltz	a0,b02 <stat+0x36>
--     ae2:	e426                	sd	s1,8(sp)
--     ae4:	84aa                	mv	s1,a0
-+     ae6:	02054163          	bltz	a0,b08 <stat+0x36>
-+     aea:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
--     ae6:	85ca                	mv	a1,s2
--     ae8:	16c000ef          	jal	c54 <fstat>
--     aec:	892a                	mv	s2,a0
-+     aec:	85ca                	mv	a1,s2
-+     aee:	16c000ef          	jal	c5a <fstat>
-+     af2:	892a                	mv	s2,a0
-   close(fd);
--     aee:	8526                	mv	a0,s1
--     af0:	134000ef          	jal	c24 <close>
-+     af4:	8526                	mv	a0,s1
-+     af6:	134000ef          	jal	c2a <close>
-   return r;
--     af4:	64a2                	ld	s1,8(sp)
- }
--     af6:	854a                	mv	a0,s2
--     af8:	60e2                	ld	ra,24(sp)
--     afa:	6442                	ld	s0,16(sp)
--     afc:	6902                	ld	s2,0(sp)
--     afe:	6105                	addi	sp,sp,32
--     b00:	8082                	ret
-+     afa:	854a                	mv	a0,s2
-+     afc:	60e2                	ld	ra,24(sp)
-+     afe:	6442                	ld	s0,16(sp)
-+     b00:	64a2                	ld	s1,8(sp)
-+     b02:	6902                	ld	s2,0(sp)
-+     b04:	6105                	add	sp,sp,32
-+     b06:	8082                	ret
-     return -1;
--     b02:	597d                	li	s2,-1
--     b04:	bfcd                	j	af6 <stat+0x2a>
-+     b08:	597d                	li	s2,-1
-+     b0a:	bfc5                	j	afa <stat+0x28>
- 
--0000000000000b06 <atoi>:
-+0000000000000b0c <atoi>:
- 
- int
- atoi(const char *s)
- {
--     b06:	1141                	addi	sp,sp,-16
--     b08:	e422                	sd	s0,8(sp)
--     b0a:	0800                	addi	s0,sp,16
-+     b0c:	1141                	add	sp,sp,-16
-+     b0e:	e422                	sd	s0,8(sp)
-+     b10:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
--     b0c:	00054683          	lbu	a3,0(a0)
--     b10:	fd06879b          	addiw	a5,a3,-48
--     b14:	0ff7f793          	zext.b	a5,a5
--     b18:	4625                	li	a2,9
--     b1a:	02f66863          	bltu	a2,a5,b4a <atoi+0x44>
--     b1e:	872a                	mv	a4,a0
-+     b12:	00054683          	lbu	a3,0(a0)
-+     b16:	fd06879b          	addw	a5,a3,-48
-+     b1a:	0ff7f793          	zext.b	a5,a5
-+     b1e:	4625                	li	a2,9
-+     b20:	02f66863          	bltu	a2,a5,b50 <atoi+0x44>
-+     b24:	872a                	mv	a4,a0
-   n = 0;
--     b20:	4501                	li	a0,0
-+     b26:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
--     b22:	0705                	addi	a4,a4,1
--     b24:	0025179b          	slliw	a5,a0,0x2
--     b28:	9fa9                	addw	a5,a5,a0
--     b2a:	0017979b          	slliw	a5,a5,0x1
--     b2e:	9fb5                	addw	a5,a5,a3
--     b30:	fd07851b          	addiw	a0,a5,-48
-+     b28:	0705                	add	a4,a4,1
-+     b2a:	0025179b          	sllw	a5,a0,0x2
-+     b2e:	9fa9                	addw	a5,a5,a0
-+     b30:	0017979b          	sllw	a5,a5,0x1
-+     b34:	9fb5                	addw	a5,a5,a3
-+     b36:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
--     b34:	00074683          	lbu	a3,0(a4)
--     b38:	fd06879b          	addiw	a5,a3,-48
--     b3c:	0ff7f793          	zext.b	a5,a5
--     b40:	fef671e3          	bgeu	a2,a5,b22 <atoi+0x1c>
-+     b3a:	00074683          	lbu	a3,0(a4)
-+     b3e:	fd06879b          	addw	a5,a3,-48
-+     b42:	0ff7f793          	zext.b	a5,a5
-+     b46:	fef671e3          	bgeu	a2,a5,b28 <atoi+0x1c>
-   return n;
- }
--     b44:	6422                	ld	s0,8(sp)
--     b46:	0141                	addi	sp,sp,16
--     b48:	8082                	ret
-+     b4a:	6422                	ld	s0,8(sp)
-+     b4c:	0141                	add	sp,sp,16
-+     b4e:	8082                	ret
-   n = 0;
--     b4a:	4501                	li	a0,0
--     b4c:	bfe5                	j	b44 <atoi+0x3e>
-+     b50:	4501                	li	a0,0
-+     b52:	bfe5                	j	b4a <atoi+0x3e>
- 
--0000000000000b4e <memmove>:
-+0000000000000b54 <memmove>:
- 
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
--     b4e:	1141                	addi	sp,sp,-16
--     b50:	e422                	sd	s0,8(sp)
--     b52:	0800                	addi	s0,sp,16
-+     b54:	1141                	add	sp,sp,-16
-+     b56:	e422                	sd	s0,8(sp)
-+     b58:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-   dst = vdst;
-   src = vsrc;
-   if (src > dst) {
--     b54:	02b57463          	bgeu	a0,a1,b7c <memmove+0x2e>
-+     b5a:	02b57463          	bgeu	a0,a1,b82 <memmove+0x2e>
-     while(n-- > 0)
--     b58:	00c05f63          	blez	a2,b76 <memmove+0x28>
--     b5c:	1602                	slli	a2,a2,0x20
--     b5e:	9201                	srli	a2,a2,0x20
--     b60:	00c507b3          	add	a5,a0,a2
-+     b5e:	00c05f63          	blez	a2,b7c <memmove+0x28>
-+     b62:	1602                	sll	a2,a2,0x20
-+     b64:	9201                	srl	a2,a2,0x20
-+     b66:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
--     b64:	872a                	mv	a4,a0
-+     b6a:	872a                	mv	a4,a0
-       *dst++ = *src++;
--     b66:	0585                	addi	a1,a1,1
--     b68:	0705                	addi	a4,a4,1
--     b6a:	fff5c683          	lbu	a3,-1(a1)
--     b6e:	fed70fa3          	sb	a3,-1(a4)
-+     b6c:	0585                	add	a1,a1,1
-+     b6e:	0705                	add	a4,a4,1
-+     b70:	fff5c683          	lbu	a3,-1(a1)
-+     b74:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
--     b72:	fef71ae3          	bne	a4,a5,b66 <memmove+0x18>
-+     b78:	fee79ae3          	bne	a5,a4,b6c <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-   }
-   return vdst;
- }
--     b76:	6422                	ld	s0,8(sp)
--     b78:	0141                	addi	sp,sp,16
--     b7a:	8082                	ret
-+     b7c:	6422                	ld	s0,8(sp)
-+     b7e:	0141                	add	sp,sp,16
-+     b80:	8082                	ret
-     dst += n;
--     b7c:	00c50733          	add	a4,a0,a2
-+     b82:	00c50733          	add	a4,a0,a2
-     src += n;
--     b80:	95b2                	add	a1,a1,a2
-+     b86:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
--     b82:	fec05ae3          	blez	a2,b76 <memmove+0x28>
--     b86:	fff6079b          	addiw	a5,a2,-1
--     b8a:	1782                	slli	a5,a5,0x20
--     b8c:	9381                	srli	a5,a5,0x20
--     b8e:	fff7c793          	not	a5,a5
--     b92:	97ba                	add	a5,a5,a4
-+     b88:	fec05ae3          	blez	a2,b7c <memmove+0x28>
-+     b8c:	fff6079b          	addw	a5,a2,-1
-+     b90:	1782                	sll	a5,a5,0x20
-+     b92:	9381                	srl	a5,a5,0x20
-+     b94:	fff7c793          	not	a5,a5
-+     b98:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
--     b94:	15fd                	addi	a1,a1,-1
--     b96:	177d                	addi	a4,a4,-1
--     b98:	0005c683          	lbu	a3,0(a1)
--     b9c:	00d70023          	sb	a3,0(a4)
-+     b9a:	15fd                	add	a1,a1,-1
-+     b9c:	177d                	add	a4,a4,-1
-+     b9e:	0005c683          	lbu	a3,0(a1)
-+     ba2:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
--     ba0:	fee79ae3          	bne	a5,a4,b94 <memmove+0x46>
--     ba4:	bfc9                	j	b76 <memmove+0x28>
-+     ba6:	fee79ae3          	bne	a5,a4,b9a <memmove+0x46>
-+     baa:	bfc9                	j	b7c <memmove+0x28>
- 
--0000000000000ba6 <memcmp>:
-+0000000000000bac <memcmp>:
- 
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
--     ba6:	1141                	addi	sp,sp,-16
--     ba8:	e422                	sd	s0,8(sp)
--     baa:	0800                	addi	s0,sp,16
-+     bac:	1141                	add	sp,sp,-16
-+     bae:	e422                	sd	s0,8(sp)
-+     bb0:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
--     bac:	ca05                	beqz	a2,bdc <memcmp+0x36>
--     bae:	fff6069b          	addiw	a3,a2,-1
--     bb2:	1682                	slli	a3,a3,0x20
--     bb4:	9281                	srli	a3,a3,0x20
--     bb6:	0685                	addi	a3,a3,1
--     bb8:	96aa                	add	a3,a3,a0
-+     bb2:	ca05                	beqz	a2,be2 <memcmp+0x36>
-+     bb4:	fff6069b          	addw	a3,a2,-1
-+     bb8:	1682                	sll	a3,a3,0x20
-+     bba:	9281                	srl	a3,a3,0x20
-+     bbc:	0685                	add	a3,a3,1
-+     bbe:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
--     bba:	00054783          	lbu	a5,0(a0)
--     bbe:	0005c703          	lbu	a4,0(a1)
--     bc2:	00e79863          	bne	a5,a4,bd2 <memcmp+0x2c>
-+     bc0:	00054783          	lbu	a5,0(a0)
-+     bc4:	0005c703          	lbu	a4,0(a1)
-+     bc8:	00e79863          	bne	a5,a4,bd8 <memcmp+0x2c>
-       return *p1 - *p2;
-     }
-     p1++;
--     bc6:	0505                	addi	a0,a0,1
-+     bcc:	0505                	add	a0,a0,1
-     p2++;
--     bc8:	0585                	addi	a1,a1,1
-+     bce:	0585                	add	a1,a1,1
-   while (n-- > 0) {
--     bca:	fed518e3          	bne	a0,a3,bba <memcmp+0x14>
-+     bd0:	fed518e3          	bne	a0,a3,bc0 <memcmp+0x14>
-   }
-   return 0;
--     bce:	4501                	li	a0,0
--     bd0:	a019                	j	bd6 <memcmp+0x30>
-+     bd4:	4501                	li	a0,0
-+     bd6:	a019                	j	bdc <memcmp+0x30>
-       return *p1 - *p2;
--     bd2:	40e7853b          	subw	a0,a5,a4
-+     bd8:	40e7853b          	subw	a0,a5,a4
- }
--     bd6:	6422                	ld	s0,8(sp)
--     bd8:	0141                	addi	sp,sp,16
--     bda:	8082                	ret
-+     bdc:	6422                	ld	s0,8(sp)
-+     bde:	0141                	add	sp,sp,16
-+     be0:	8082                	ret
-   return 0;
--     bdc:	4501                	li	a0,0
--     bde:	bfe5                	j	bd6 <memcmp+0x30>
-+     be2:	4501                	li	a0,0
-+     be4:	bfe5                	j	bdc <memcmp+0x30>
- 
--0000000000000be0 <memcpy>:
-+0000000000000be6 <memcpy>:
- 
- void *
- memcpy(void *dst, const void *src, uint n)
- {
--     be0:	1141                	addi	sp,sp,-16
--     be2:	e406                	sd	ra,8(sp)
--     be4:	e022                	sd	s0,0(sp)
--     be6:	0800                	addi	s0,sp,16
-+     be6:	1141                	add	sp,sp,-16
-+     be8:	e406                	sd	ra,8(sp)
-+     bea:	e022                	sd	s0,0(sp)
-+     bec:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
--     be8:	f67ff0ef          	jal	b4e <memmove>
-+     bee:	f67ff0ef          	jal	b54 <memmove>
- }
--     bec:	60a2                	ld	ra,8(sp)
--     bee:	6402                	ld	s0,0(sp)
--     bf0:	0141                	addi	sp,sp,16
--     bf2:	8082                	ret
-+     bf2:	60a2                	ld	ra,8(sp)
-+     bf4:	6402                	ld	s0,0(sp)
-+     bf6:	0141                	add	sp,sp,16
-+     bf8:	8082                	ret
- 
--0000000000000bf4 <fork>:
-+0000000000000bfa <fork>:
- # generated by usys.pl - do not edit
- #include "kernel/syscall.h"
- .global fork
- fork:
-  li a7, SYS_fork
--     bf4:	4885                	li	a7,1
-+     bfa:	4885                	li	a7,1
-  ecall
--     bf6:	00000073          	ecall
-+     bfc:	00000073          	ecall
-  ret
--     bfa:	8082                	ret
-+     c00:	8082                	ret
- 
--0000000000000bfc <exit>:
-+0000000000000c02 <exit>:
- .global exit
- exit:
-  li a7, SYS_exit
--     bfc:	4889                	li	a7,2
-+     c02:	4889                	li	a7,2
-  ecall
--     bfe:	00000073          	ecall
-+     c04:	00000073          	ecall
-  ret
--     c02:	8082                	ret
-+     c08:	8082                	ret
- 
--0000000000000c04 <wait>:
-+0000000000000c0a <wait>:
- .global wait
- wait:
-  li a7, SYS_wait
--     c04:	488d                	li	a7,3
-+     c0a:	488d                	li	a7,3
-  ecall
--     c06:	00000073          	ecall
-+     c0c:	00000073          	ecall
-  ret
--     c0a:	8082                	ret
-+     c10:	8082                	ret
- 
--0000000000000c0c <pipe>:
-+0000000000000c12 <pipe>:
- .global pipe
- pipe:
-  li a7, SYS_pipe
--     c0c:	4891                	li	a7,4
-+     c12:	4891                	li	a7,4
-  ecall
--     c0e:	00000073          	ecall
-+     c14:	00000073          	ecall
-  ret
--     c12:	8082                	ret
-+     c18:	8082                	ret
- 
--0000000000000c14 <read>:
-+0000000000000c1a <read>:
- .global read
- read:
-  li a7, SYS_read
--     c14:	4895                	li	a7,5
-+     c1a:	4895                	li	a7,5
-  ecall
--     c16:	00000073          	ecall
-+     c1c:	00000073          	ecall
-  ret
--     c1a:	8082                	ret
-+     c20:	8082                	ret
- 
--0000000000000c1c <write>:
-+0000000000000c22 <write>:
- .global write
- write:
-  li a7, SYS_write
--     c1c:	48c1                	li	a7,16
-+     c22:	48c1                	li	a7,16
-  ecall
--     c1e:	00000073          	ecall
-+     c24:	00000073          	ecall
-  ret
--     c22:	8082                	ret
-+     c28:	8082                	ret
- 
--0000000000000c24 <close>:
-+0000000000000c2a <close>:
- .global close
- close:
-  li a7, SYS_close
--     c24:	48d5                	li	a7,21
-+     c2a:	48d5                	li	a7,21
-  ecall
--     c26:	00000073          	ecall
-+     c2c:	00000073          	ecall
-  ret
--     c2a:	8082                	ret
-+     c30:	8082                	ret
- 
--0000000000000c2c <kill>:
-+0000000000000c32 <kill>:
- .global kill
- kill:
-  li a7, SYS_kill
--     c2c:	4899                	li	a7,6
-+     c32:	4899                	li	a7,6
-  ecall
--     c2e:	00000073          	ecall
-+     c34:	00000073          	ecall
-  ret
--     c32:	8082                	ret
-+     c38:	8082                	ret
- 
--0000000000000c34 <exec>:
-+0000000000000c3a <exec>:
- .global exec
- exec:
-  li a7, SYS_exec
--     c34:	489d                	li	a7,7
-+     c3a:	489d                	li	a7,7
-  ecall
--     c36:	00000073          	ecall
-+     c3c:	00000073          	ecall
-  ret
--     c3a:	8082                	ret
-+     c40:	8082                	ret
- 
--0000000000000c3c <open>:
-+0000000000000c42 <open>:
- .global open
- open:
-  li a7, SYS_open
--     c3c:	48bd                	li	a7,15
-+     c42:	48bd                	li	a7,15
-  ecall
--     c3e:	00000073          	ecall
-+     c44:	00000073          	ecall
-  ret
--     c42:	8082                	ret
-+     c48:	8082                	ret
- 
--0000000000000c44 <mknod>:
-+0000000000000c4a <mknod>:
- .global mknod
- mknod:
-  li a7, SYS_mknod
--     c44:	48c5                	li	a7,17
-+     c4a:	48c5                	li	a7,17
-  ecall
--     c46:	00000073          	ecall
-+     c4c:	00000073          	ecall
-  ret
--     c4a:	8082                	ret
-+     c50:	8082                	ret
- 
--0000000000000c4c <unlink>:
-+0000000000000c52 <unlink>:
- .global unlink
- unlink:
-  li a7, SYS_unlink
--     c4c:	48c9                	li	a7,18
-+     c52:	48c9                	li	a7,18
-  ecall
--     c4e:	00000073          	ecall
-+     c54:	00000073          	ecall
-  ret
--     c52:	8082                	ret
-+     c58:	8082                	ret
- 
--0000000000000c54 <fstat>:
-+0000000000000c5a <fstat>:
- .global fstat
- fstat:
-  li a7, SYS_fstat
--     c54:	48a1                	li	a7,8
-+     c5a:	48a1                	li	a7,8
-  ecall
--     c56:	00000073          	ecall
-+     c5c:	00000073          	ecall
-  ret
--     c5a:	8082                	ret
-+     c60:	8082                	ret
- 
--0000000000000c5c <link>:
-+0000000000000c62 <link>:
- .global link
- link:
-  li a7, SYS_link
--     c5c:	48cd                	li	a7,19
-+     c62:	48cd                	li	a7,19
-  ecall
--     c5e:	00000073          	ecall
-+     c64:	00000073          	ecall
-  ret
--     c62:	8082                	ret
-+     c68:	8082                	ret
- 
--0000000000000c64 <mkdir>:
-+0000000000000c6a <mkdir>:
- .global mkdir
- mkdir:
-  li a7, SYS_mkdir
--     c64:	48d1                	li	a7,20
-+     c6a:	48d1                	li	a7,20
-  ecall
--     c66:	00000073          	ecall
-+     c6c:	00000073          	ecall
-  ret
--     c6a:	8082                	ret
-+     c70:	8082                	ret
- 
--0000000000000c6c <chdir>:
-+0000000000000c72 <chdir>:
- .global chdir
- chdir:
-  li a7, SYS_chdir
--     c6c:	48a5                	li	a7,9
-+     c72:	48a5                	li	a7,9
-  ecall
--     c6e:	00000073          	ecall
-+     c74:	00000073          	ecall
-  ret
--     c72:	8082                	ret
-+     c78:	8082                	ret
- 
--0000000000000c74 <dup>:
-+0000000000000c7a <dup>:
- .global dup
- dup:
-  li a7, SYS_dup
--     c74:	48a9                	li	a7,10
-+     c7a:	48a9                	li	a7,10
-  ecall
--     c76:	00000073          	ecall
-+     c7c:	00000073          	ecall
-  ret
--     c7a:	8082                	ret
-+     c80:	8082                	ret
- 
--0000000000000c7c <getpid>:
-+0000000000000c82 <getpid>:
- .global getpid
- getpid:
-  li a7, SYS_getpid
--     c7c:	48ad                	li	a7,11
-+     c82:	48ad                	li	a7,11
-  ecall
--     c7e:	00000073          	ecall
-+     c84:	00000073          	ecall
-  ret
--     c82:	8082                	ret
-+     c88:	8082                	ret
- 
--0000000000000c84 <sbrk>:
-+0000000000000c8a <sbrk>:
- .global sbrk
- sbrk:
-  li a7, SYS_sbrk
--     c84:	48b1                	li	a7,12
-+     c8a:	48b1                	li	a7,12
-  ecall
--     c86:	00000073          	ecall
-+     c8c:	00000073          	ecall
-  ret
--     c8a:	8082                	ret
-+     c90:	8082                	ret
- 
--0000000000000c8c <sleep>:
-+0000000000000c92 <sleep>:
- .global sleep
- sleep:
-  li a7, SYS_sleep
--     c8c:	48b5                	li	a7,13
-+     c92:	48b5                	li	a7,13
-  ecall
--     c8e:	00000073          	ecall
-+     c94:	00000073          	ecall
-  ret
--     c92:	8082                	ret
-+     c98:	8082                	ret
- 
--0000000000000c94 <uptime>:
-+0000000000000c9a <uptime>:
- .global uptime
- uptime:
-  li a7, SYS_uptime
--     c94:	48b9                	li	a7,14
-+     c9a:	48b9                	li	a7,14
-  ecall
--     c96:	00000073          	ecall
-+     c9c:	00000073          	ecall
-  ret
--     c9a:	8082                	ret
-+     ca0:	8082                	ret
- 
--0000000000000c9c <putc>:
-+0000000000000ca2 <putc>:
- 
- static char digits[] = "0123456789ABCDEF";
- 
- static void
- putc(int fd, char c)
- {
--     c9c:	1101                	addi	sp,sp,-32
--     c9e:	ec06                	sd	ra,24(sp)
--     ca0:	e822                	sd	s0,16(sp)
--     ca2:	1000                	addi	s0,sp,32
--     ca4:	feb407a3          	sb	a1,-17(s0)
-+     ca2:	1101                	add	sp,sp,-32
-+     ca4:	ec06                	sd	ra,24(sp)
-+     ca6:	e822                	sd	s0,16(sp)
-+     ca8:	1000                	add	s0,sp,32
-+     caa:	feb407a3          	sb	a1,-17(s0)
-   write(fd, &c, 1);
--     ca8:	4605                	li	a2,1
--     caa:	fef40593          	addi	a1,s0,-17
--     cae:	f6fff0ef          	jal	c1c <write>
-+     cae:	4605                	li	a2,1
-+     cb0:	fef40593          	add	a1,s0,-17
-+     cb4:	f6fff0ef          	jal	c22 <write>
- }
--     cb2:	60e2                	ld	ra,24(sp)
--     cb4:	6442                	ld	s0,16(sp)
--     cb6:	6105                	addi	sp,sp,32
--     cb8:	8082                	ret
-+     cb8:	60e2                	ld	ra,24(sp)
-+     cba:	6442                	ld	s0,16(sp)
-+     cbc:	6105                	add	sp,sp,32
-+     cbe:	8082                	ret
- 
--0000000000000cba <printint>:
-+0000000000000cc0 <printint>:
- 
- static void
- printint(int fd, int xx, int base, int sgn)
- {
--     cba:	7139                	addi	sp,sp,-64
--     cbc:	fc06                	sd	ra,56(sp)
--     cbe:	f822                	sd	s0,48(sp)
--     cc0:	f426                	sd	s1,40(sp)
--     cc2:	0080                	addi	s0,sp,64
--     cc4:	84aa                	mv	s1,a0
-+     cc0:	7139                	add	sp,sp,-64
-+     cc2:	fc06                	sd	ra,56(sp)
-+     cc4:	f822                	sd	s0,48(sp)
-+     cc6:	f426                	sd	s1,40(sp)
-+     cc8:	f04a                	sd	s2,32(sp)
-+     cca:	ec4e                	sd	s3,24(sp)
-+     ccc:	0080                	add	s0,sp,64
-+     cce:	84aa                	mv	s1,a0
-   char buf[16];
-   int i, neg;
-   uint x;
- 
-   neg = 0;
-   if(sgn && xx < 0){
--     cc6:	c299                	beqz	a3,ccc <printint+0x12>
--     cc8:	0805c963          	bltz	a1,d5a <printint+0xa0>
-+     cd0:	c299                	beqz	a3,cd6 <printint+0x16>
-+     cd2:	0805c763          	bltz	a1,d60 <printint+0xa0>
-     neg = 1;
-     x = -xx;
-   } else {
-     x = xx;
--     ccc:	2581                	sext.w	a1,a1
-+     cd6:	2581                	sext.w	a1,a1
-   neg = 0;
--     cce:	4881                	li	a7,0
--     cd0:	fc040693          	addi	a3,s0,-64
-+     cd8:	4881                	li	a7,0
-+     cda:	fc040693          	add	a3,s0,-64
-   }
- 
-   i = 0;
--     cd4:	4701                	li	a4,0
-+     cde:	4701                	li	a4,0
-   do{
-     buf[i++] = digits[x % base];
--     cd6:	2601                	sext.w	a2,a2
--     cd8:	00000517          	auipc	a0,0x0
--     cdc:	63050513          	addi	a0,a0,1584 # 1308 <digits>
--     ce0:	883a                	mv	a6,a4
--     ce2:	2705                	addiw	a4,a4,1
--     ce4:	02c5f7bb          	remuw	a5,a1,a2
--     ce8:	1782                	slli	a5,a5,0x20
--     cea:	9381                	srli	a5,a5,0x20
--     cec:	97aa                	add	a5,a5,a0
--     cee:	0007c783          	lbu	a5,0(a5)
--     cf2:	00f68023          	sb	a5,0(a3)
-+     ce0:	2601                	sext.w	a2,a2
-+     ce2:	00000517          	auipc	a0,0x0
-+     ce6:	61650513          	add	a0,a0,1558 # 12f8 <digits>
-+     cea:	883a                	mv	a6,a4
-+     cec:	2705                	addw	a4,a4,1
-+     cee:	02c5f7bb          	remuw	a5,a1,a2
-+     cf2:	1782                	sll	a5,a5,0x20
-+     cf4:	9381                	srl	a5,a5,0x20
-+     cf6:	97aa                	add	a5,a5,a0
-+     cf8:	0007c783          	lbu	a5,0(a5)
-+     cfc:	00f68023          	sb	a5,0(a3)
-   }while((x /= base) != 0);
--     cf6:	0005879b          	sext.w	a5,a1
--     cfa:	02c5d5bb          	divuw	a1,a1,a2
--     cfe:	0685                	addi	a3,a3,1
--     d00:	fec7f0e3          	bgeu	a5,a2,ce0 <printint+0x26>
-+     d00:	0005879b          	sext.w	a5,a1
-+     d04:	02c5d5bb          	divuw	a1,a1,a2
-+     d08:	0685                	add	a3,a3,1
-+     d0a:	fec7f0e3          	bgeu	a5,a2,cea <printint+0x2a>
-   if(neg)
--     d04:	00088c63          	beqz	a7,d1c <printint+0x62>
-+     d0e:	00088c63          	beqz	a7,d26 <printint+0x66>
-     buf[i++] = '-';
--     d08:	fd070793          	addi	a5,a4,-48
--     d0c:	00878733          	add	a4,a5,s0
--     d10:	02d00793          	li	a5,45
--     d14:	fef70823          	sb	a5,-16(a4)
--     d18:	0028071b          	addiw	a4,a6,2
-+     d12:	fd070793          	add	a5,a4,-48
-+     d16:	00878733          	add	a4,a5,s0
-+     d1a:	02d00793          	li	a5,45
-+     d1e:	fef70823          	sb	a5,-16(a4)
-+     d22:	0028071b          	addw	a4,a6,2
- 
-   while(--i >= 0)
--     d1c:	02e05a63          	blez	a4,d50 <printint+0x96>
--     d20:	f04a                	sd	s2,32(sp)
--     d22:	ec4e                	sd	s3,24(sp)
--     d24:	fc040793          	addi	a5,s0,-64
--     d28:	00e78933          	add	s2,a5,a4
--     d2c:	fff78993          	addi	s3,a5,-1
--     d30:	99ba                	add	s3,s3,a4
--     d32:	377d                	addiw	a4,a4,-1
--     d34:	1702                	slli	a4,a4,0x20
--     d36:	9301                	srli	a4,a4,0x20
--     d38:	40e989b3          	sub	s3,s3,a4
-+     d26:	02e05663          	blez	a4,d52 <printint+0x92>
-+     d2a:	fc040793          	add	a5,s0,-64
-+     d2e:	00e78933          	add	s2,a5,a4
-+     d32:	fff78993          	add	s3,a5,-1
-+     d36:	99ba                	add	s3,s3,a4
-+     d38:	377d                	addw	a4,a4,-1
-+     d3a:	1702                	sll	a4,a4,0x20
-+     d3c:	9301                	srl	a4,a4,0x20
-+     d3e:	40e989b3          	sub	s3,s3,a4
-     putc(fd, buf[i]);
--     d3c:	fff94583          	lbu	a1,-1(s2)
--     d40:	8526                	mv	a0,s1
--     d42:	f5bff0ef          	jal	c9c <putc>
-+     d42:	fff94583          	lbu	a1,-1(s2)
-+     d46:	8526                	mv	a0,s1
-+     d48:	f5bff0ef          	jal	ca2 <putc>
-   while(--i >= 0)
--     d46:	197d                	addi	s2,s2,-1
--     d48:	ff391ae3          	bne	s2,s3,d3c <printint+0x82>
--     d4c:	7902                	ld	s2,32(sp)
--     d4e:	69e2                	ld	s3,24(sp)
-+     d4c:	197d                	add	s2,s2,-1
-+     d4e:	ff391ae3          	bne	s2,s3,d42 <printint+0x82>
- }
--     d50:	70e2                	ld	ra,56(sp)
--     d52:	7442                	ld	s0,48(sp)
--     d54:	74a2                	ld	s1,40(sp)
--     d56:	6121                	addi	sp,sp,64
--     d58:	8082                	ret
-+     d52:	70e2                	ld	ra,56(sp)
-+     d54:	7442                	ld	s0,48(sp)
-+     d56:	74a2                	ld	s1,40(sp)
-+     d58:	7902                	ld	s2,32(sp)
-+     d5a:	69e2                	ld	s3,24(sp)
-+     d5c:	6121                	add	sp,sp,64
-+     d5e:	8082                	ret
-     x = -xx;
--     d5a:	40b005bb          	negw	a1,a1
-+     d60:	40b005bb          	negw	a1,a1
-     neg = 1;
--     d5e:	4885                	li	a7,1
-+     d64:	4885                	li	a7,1
-     x = -xx;
--     d60:	bf85                	j	cd0 <printint+0x16>
-+     d66:	bf95                	j	cda <printint+0x1a>
- 
--0000000000000d62 <vprintf>:
-+0000000000000d68 <vprintf>:
- }
- 
- /* Print to the given fd. Only understands %d, %x, %p, %s. */
- void
- vprintf(int fd, const char *fmt, va_list ap)
- {
--     d62:	711d                	addi	sp,sp,-96
--     d64:	ec86                	sd	ra,88(sp)
--     d66:	e8a2                	sd	s0,80(sp)
--     d68:	e0ca                	sd	s2,64(sp)
--     d6a:	1080                	addi	s0,sp,96
-+     d68:	711d                	add	sp,sp,-96
-+     d6a:	ec86                	sd	ra,88(sp)
-+     d6c:	e8a2                	sd	s0,80(sp)
-+     d6e:	e4a6                	sd	s1,72(sp)
-+     d70:	e0ca                	sd	s2,64(sp)
-+     d72:	fc4e                	sd	s3,56(sp)
-+     d74:	f852                	sd	s4,48(sp)
-+     d76:	f456                	sd	s5,40(sp)
-+     d78:	f05a                	sd	s6,32(sp)
-+     d7a:	ec5e                	sd	s7,24(sp)
-+     d7c:	e862                	sd	s8,16(sp)
-+     d7e:	e466                	sd	s9,8(sp)
-+     d80:	e06a                	sd	s10,0(sp)
-+     d82:	1080                	add	s0,sp,96
-   char *s;
-   int c0, c1, c2, i, state;
- 
-   state = 0;
-   for(i = 0; fmt[i]; i++){
--     d6c:	0005c903          	lbu	s2,0(a1)
--     d70:	26090863          	beqz	s2,fe0 <vprintf+0x27e>
--     d74:	e4a6                	sd	s1,72(sp)
--     d76:	fc4e                	sd	s3,56(sp)
--     d78:	f852                	sd	s4,48(sp)
--     d7a:	f456                	sd	s5,40(sp)
--     d7c:	f05a                	sd	s6,32(sp)
--     d7e:	ec5e                	sd	s7,24(sp)
--     d80:	e862                	sd	s8,16(sp)
--     d82:	e466                	sd	s9,8(sp)
--     d84:	8b2a                	mv	s6,a0
--     d86:	8a2e                	mv	s4,a1
--     d88:	8bb2                	mv	s7,a2
-+     d84:	0005c903          	lbu	s2,0(a1)
-+     d88:	24090763          	beqz	s2,fd6 <vprintf+0x26e>
-+     d8c:	8b2a                	mv	s6,a0
-+     d8e:	8a2e                	mv	s4,a1
-+     d90:	8bb2                	mv	s7,a2
-   state = 0;
--     d8a:	4981                	li	s3,0
-+     d92:	4981                	li	s3,0
-   for(i = 0; fmt[i]; i++){
--     d8c:	4481                	li	s1,0
--     d8e:	4701                	li	a4,0
-+     d94:	4481                	li	s1,0
-+     d96:	4701                	li	a4,0
-       if(c0 == '%'){
-         state = '%';
-       } else {
-         putc(fd, c0);
-       }
-     } else if(state == '%'){
--     d90:	02500a93          	li	s5,37
-+     d98:	02500a93          	li	s5,37
-       c1 = c2 = 0;
-       if(c0) c1 = fmt[i+1] & 0xff;
-       if(c1) c2 = fmt[i+2] & 0xff;
-       if(c0 == 'd'){
--     d94:	06400c13          	li	s8,100
-+     d9c:	06400c13          	li	s8,100
-         printint(fd, va_arg(ap, int), 10, 1);
-       } else if(c0 == 'l' && c1 == 'd'){
--     d98:	06c00c93          	li	s9,108
--     d9c:	a005                	j	dbc <vprintf+0x5a>
-+     da0:	06c00c93          	li	s9,108
-+     da4:	a005                	j	dc4 <vprintf+0x5c>
-         putc(fd, c0);
--     d9e:	85ca                	mv	a1,s2
--     da0:	855a                	mv	a0,s6
--     da2:	efbff0ef          	jal	c9c <putc>
--     da6:	a019                	j	dac <vprintf+0x4a>
-+     da6:	85ca                	mv	a1,s2
-+     da8:	855a                	mv	a0,s6
-+     daa:	ef9ff0ef          	jal	ca2 <putc>
-+     dae:	a019                	j	db4 <vprintf+0x4c>
-     } else if(state == '%'){
--     da8:	03598263          	beq	s3,s5,dcc <vprintf+0x6a>
-+     db0:	03598263          	beq	s3,s5,dd4 <vprintf+0x6c>
-   for(i = 0; fmt[i]; i++){
--     dac:	2485                	addiw	s1,s1,1
--     dae:	8726                	mv	a4,s1
--     db0:	009a07b3          	add	a5,s4,s1
--     db4:	0007c903          	lbu	s2,0(a5)
--     db8:	20090c63          	beqz	s2,fd0 <vprintf+0x26e>
-+     db4:	2485                	addw	s1,s1,1
-+     db6:	8726                	mv	a4,s1
-+     db8:	009a07b3          	add	a5,s4,s1
-+     dbc:	0007c903          	lbu	s2,0(a5)
-+     dc0:	20090b63          	beqz	s2,fd6 <vprintf+0x26e>
-     c0 = fmt[i] & 0xff;
--     dbc:	0009079b          	sext.w	a5,s2
-+     dc4:	0009079b          	sext.w	a5,s2
-     if(state == 0){
--     dc0:	fe0994e3          	bnez	s3,da8 <vprintf+0x46>
-+     dc8:	fe0994e3          	bnez	s3,db0 <vprintf+0x48>
-       if(c0 == '%'){
--     dc4:	fd579de3          	bne	a5,s5,d9e <vprintf+0x3c>
-+     dcc:	fd579de3          	bne	a5,s5,da6 <vprintf+0x3e>
-         state = '%';
--     dc8:	89be                	mv	s3,a5
--     dca:	b7cd                	j	dac <vprintf+0x4a>
-+     dd0:	89be                	mv	s3,a5
-+     dd2:	b7cd                	j	db4 <vprintf+0x4c>
-       if(c0) c1 = fmt[i+1] & 0xff;
--     dcc:	00ea06b3          	add	a3,s4,a4
--     dd0:	0016c683          	lbu	a3,1(a3)
-+     dd4:	c7c9                	beqz	a5,e5e <vprintf+0xf6>
-+     dd6:	00ea06b3          	add	a3,s4,a4
-+     dda:	0016c683          	lbu	a3,1(a3)
-       c1 = c2 = 0;
--     dd4:	8636                	mv	a2,a3
-+     dde:	8636                	mv	a2,a3
-       if(c1) c2 = fmt[i+2] & 0xff;
--     dd6:	c681                	beqz	a3,dde <vprintf+0x7c>
--     dd8:	9752                	add	a4,a4,s4
--     dda:	00274603          	lbu	a2,2(a4)
-+     de0:	c681                	beqz	a3,de8 <vprintf+0x80>
-+     de2:	9752                	add	a4,a4,s4
-+     de4:	00274603          	lbu	a2,2(a4)
-       if(c0 == 'd'){
--     dde:	03878f63          	beq	a5,s8,e1c <vprintf+0xba>
-+     de8:	03878f63          	beq	a5,s8,e26 <vprintf+0xbe>
-       } else if(c0 == 'l' && c1 == 'd'){
--     de2:	05978963          	beq	a5,s9,e34 <vprintf+0xd2>
-+     dec:	05978963          	beq	a5,s9,e3e <vprintf+0xd6>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 2;
-       } else if(c0 == 'u'){
--     de6:	07500713          	li	a4,117
--     dea:	0ee78363          	beq	a5,a4,ed0 <vprintf+0x16e>
-+     df0:	07500713          	li	a4,117
-+     df4:	0ee78363          	beq	a5,a4,eda <vprintf+0x172>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 2;
-       } else if(c0 == 'x'){
--     dee:	07800713          	li	a4,120
--     df2:	12e78563          	beq	a5,a4,f1c <vprintf+0x1ba>
-+     df8:	07800713          	li	a4,120
-+     dfc:	12e78563          	beq	a5,a4,f26 <vprintf+0x1be>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 2;
-       } else if(c0 == 'p'){
--     df6:	07000713          	li	a4,112
--     dfa:	14e78a63          	beq	a5,a4,f4e <vprintf+0x1ec>
-+     e00:	07000713          	li	a4,112
-+     e04:	14e78a63          	beq	a5,a4,f58 <vprintf+0x1f0>
-         printptr(fd, va_arg(ap, uint64));
-       } else if(c0 == 's'){
--     dfe:	07300713          	li	a4,115
--     e02:	18e78a63          	beq	a5,a4,f96 <vprintf+0x234>
-+     e08:	07300713          	li	a4,115
-+     e0c:	18e78863          	beq	a5,a4,f9c <vprintf+0x234>
-         if((s = va_arg(ap, char*)) == 0)
-           s = "(null)";
-         for(; *s; s++)
-           putc(fd, *s);
-       } else if(c0 == '%'){
--     e06:	02500713          	li	a4,37
--     e0a:	04e79563          	bne	a5,a4,e54 <vprintf+0xf2>
-+     e10:	02500713          	li	a4,37
-+     e14:	04e79563          	bne	a5,a4,e5e <vprintf+0xf6>
-         putc(fd, '%');
--     e0e:	02500593          	li	a1,37
--     e12:	855a                	mv	a0,s6
--     e14:	e89ff0ef          	jal	c9c <putc>
-+     e18:	02500593          	li	a1,37
-+     e1c:	855a                	mv	a0,s6
-+     e1e:	e85ff0ef          	jal	ca2 <putc>
-         /* Unknown % sequence.  Print it to draw attention. */
-         putc(fd, '%');
-         putc(fd, c);
-       }
- #endif
-       state = 0;
--     e18:	4981                	li	s3,0
--     e1a:	bf49                	j	dac <vprintf+0x4a>
-+     e22:	4981                	li	s3,0
-+     e24:	bf41                	j	db4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 1);
--     e1c:	008b8913          	addi	s2,s7,8
--     e20:	4685                	li	a3,1
--     e22:	4629                	li	a2,10
--     e24:	000ba583          	lw	a1,0(s7)
--     e28:	855a                	mv	a0,s6
--     e2a:	e91ff0ef          	jal	cba <printint>
--     e2e:	8bca                	mv	s7,s2
-+     e26:	008b8913          	add	s2,s7,8
-+     e2a:	4685                	li	a3,1
-+     e2c:	4629                	li	a2,10
-+     e2e:	000ba583          	lw	a1,0(s7)
-+     e32:	855a                	mv	a0,s6
-+     e34:	e8dff0ef          	jal	cc0 <printint>
-+     e38:	8bca                	mv	s7,s2
-       state = 0;
--     e30:	4981                	li	s3,0
--     e32:	bfad                	j	dac <vprintf+0x4a>
-+     e3a:	4981                	li	s3,0
-+     e3c:	bfa5                	j	db4 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'd'){
--     e34:	06400793          	li	a5,100
--     e38:	02f68963          	beq	a3,a5,e6a <vprintf+0x108>
-+     e3e:	06400793          	li	a5,100
-+     e42:	02f68963          	beq	a3,a5,e74 <vprintf+0x10c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
--     e3c:	06c00793          	li	a5,108
--     e40:	04f68263          	beq	a3,a5,e84 <vprintf+0x122>
-+     e46:	06c00793          	li	a5,108
-+     e4a:	04f68263          	beq	a3,a5,e8e <vprintf+0x126>
-       } else if(c0 == 'l' && c1 == 'u'){
--     e44:	07500793          	li	a5,117
--     e48:	0af68063          	beq	a3,a5,ee8 <vprintf+0x186>
-+     e4e:	07500793          	li	a5,117
-+     e52:	0af68063          	beq	a3,a5,ef2 <vprintf+0x18a>
-       } else if(c0 == 'l' && c1 == 'x'){
--     e4c:	07800793          	li	a5,120
--     e50:	0ef68263          	beq	a3,a5,f34 <vprintf+0x1d2>
-+     e56:	07800793          	li	a5,120
-+     e5a:	0ef68263          	beq	a3,a5,f3e <vprintf+0x1d6>
-         putc(fd, '%');
--     e54:	02500593          	li	a1,37
--     e58:	855a                	mv	a0,s6
--     e5a:	e43ff0ef          	jal	c9c <putc>
-+     e5e:	02500593          	li	a1,37
-+     e62:	855a                	mv	a0,s6
-+     e64:	e3fff0ef          	jal	ca2 <putc>
-         putc(fd, c0);
--     e5e:	85ca                	mv	a1,s2
--     e60:	855a                	mv	a0,s6
--     e62:	e3bff0ef          	jal	c9c <putc>
-+     e68:	85ca                	mv	a1,s2
-+     e6a:	855a                	mv	a0,s6
-+     e6c:	e37ff0ef          	jal	ca2 <putc>
-       state = 0;
--     e66:	4981                	li	s3,0
--     e68:	b791                	j	dac <vprintf+0x4a>
-+     e70:	4981                	li	s3,0
-+     e72:	b789                	j	db4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
--     e6a:	008b8913          	addi	s2,s7,8
--     e6e:	4685                	li	a3,1
--     e70:	4629                	li	a2,10
--     e72:	000ba583          	lw	a1,0(s7)
--     e76:	855a                	mv	a0,s6
--     e78:	e43ff0ef          	jal	cba <printint>
-+     e74:	008b8913          	add	s2,s7,8
-+     e78:	4685                	li	a3,1
-+     e7a:	4629                	li	a2,10
-+     e7c:	000ba583          	lw	a1,0(s7)
-+     e80:	855a                	mv	a0,s6
-+     e82:	e3fff0ef          	jal	cc0 <printint>
-         i += 1;
--     e7c:	2485                	addiw	s1,s1,1
-+     e86:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 1);
--     e7e:	8bca                	mv	s7,s2
-+     e88:	8bca                	mv	s7,s2
-       state = 0;
--     e80:	4981                	li	s3,0
-+     e8a:	4981                	li	s3,0
-         i += 1;
--     e82:	b72d                	j	dac <vprintf+0x4a>
-+     e8c:	b725                	j	db4 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
--     e84:	06400793          	li	a5,100
--     e88:	02f60763          	beq	a2,a5,eb6 <vprintf+0x154>
-+     e8e:	06400793          	li	a5,100
-+     e92:	02f60763          	beq	a2,a5,ec0 <vprintf+0x158>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
--     e8c:	07500793          	li	a5,117
--     e90:	06f60963          	beq	a2,a5,f02 <vprintf+0x1a0>
-+     e96:	07500793          	li	a5,117
-+     e9a:	06f60963          	beq	a2,a5,f0c <vprintf+0x1a4>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
--     e94:	07800793          	li	a5,120
--     e98:	faf61ee3          	bne	a2,a5,e54 <vprintf+0xf2>
-+     e9e:	07800793          	li	a5,120
-+     ea2:	faf61ee3          	bne	a2,a5,e5e <vprintf+0xf6>
-         printint(fd, va_arg(ap, uint64), 16, 0);
--     e9c:	008b8913          	addi	s2,s7,8
--     ea0:	4681                	li	a3,0
--     ea2:	4641                	li	a2,16
--     ea4:	000ba583          	lw	a1,0(s7)
--     ea8:	855a                	mv	a0,s6
--     eaa:	e11ff0ef          	jal	cba <printint>
-+     ea6:	008b8913          	add	s2,s7,8
-+     eaa:	4681                	li	a3,0
-+     eac:	4641                	li	a2,16
-+     eae:	000ba583          	lw	a1,0(s7)
-+     eb2:	855a                	mv	a0,s6
-+     eb4:	e0dff0ef          	jal	cc0 <printint>
-         i += 2;
--     eae:	2489                	addiw	s1,s1,2
-+     eb8:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 16, 0);
--     eb0:	8bca                	mv	s7,s2
-+     eba:	8bca                	mv	s7,s2
-       state = 0;
--     eb2:	4981                	li	s3,0
-+     ebc:	4981                	li	s3,0
-         i += 2;
--     eb4:	bde5                	j	dac <vprintf+0x4a>
-+     ebe:	bddd                	j	db4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
--     eb6:	008b8913          	addi	s2,s7,8
--     eba:	4685                	li	a3,1
--     ebc:	4629                	li	a2,10
--     ebe:	000ba583          	lw	a1,0(s7)
--     ec2:	855a                	mv	a0,s6
--     ec4:	df7ff0ef          	jal	cba <printint>
-+     ec0:	008b8913          	add	s2,s7,8
-+     ec4:	4685                	li	a3,1
-+     ec6:	4629                	li	a2,10
-+     ec8:	000ba583          	lw	a1,0(s7)
-+     ecc:	855a                	mv	a0,s6
-+     ece:	df3ff0ef          	jal	cc0 <printint>
-         i += 2;
--     ec8:	2489                	addiw	s1,s1,2
-+     ed2:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 1);
--     eca:	8bca                	mv	s7,s2
-+     ed4:	8bca                	mv	s7,s2
-       state = 0;
--     ecc:	4981                	li	s3,0
-+     ed6:	4981                	li	s3,0
-         i += 2;
--     ece:	bdf9                	j	dac <vprintf+0x4a>
-+     ed8:	bdf1                	j	db4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 0);
--     ed0:	008b8913          	addi	s2,s7,8
--     ed4:	4681                	li	a3,0
--     ed6:	4629                	li	a2,10
--     ed8:	000ba583          	lw	a1,0(s7)
--     edc:	855a                	mv	a0,s6
--     ede:	dddff0ef          	jal	cba <printint>
--     ee2:	8bca                	mv	s7,s2
-+     eda:	008b8913          	add	s2,s7,8
-+     ede:	4681                	li	a3,0
-+     ee0:	4629                	li	a2,10
-+     ee2:	000ba583          	lw	a1,0(s7)
-+     ee6:	855a                	mv	a0,s6
-+     ee8:	dd9ff0ef          	jal	cc0 <printint>
-+     eec:	8bca                	mv	s7,s2
-       state = 0;
--     ee4:	4981                	li	s3,0
--     ee6:	b5d9                	j	dac <vprintf+0x4a>
-+     eee:	4981                	li	s3,0
-+     ef0:	b5d1                	j	db4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
--     ee8:	008b8913          	addi	s2,s7,8
--     eec:	4681                	li	a3,0
--     eee:	4629                	li	a2,10
--     ef0:	000ba583          	lw	a1,0(s7)
--     ef4:	855a                	mv	a0,s6
--     ef6:	dc5ff0ef          	jal	cba <printint>
-+     ef2:	008b8913          	add	s2,s7,8
-+     ef6:	4681                	li	a3,0
-+     ef8:	4629                	li	a2,10
-+     efa:	000ba583          	lw	a1,0(s7)
-+     efe:	855a                	mv	a0,s6
-+     f00:	dc1ff0ef          	jal	cc0 <printint>
-         i += 1;
--     efa:	2485                	addiw	s1,s1,1
-+     f04:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 0);
--     efc:	8bca                	mv	s7,s2
-+     f06:	8bca                	mv	s7,s2
-       state = 0;
--     efe:	4981                	li	s3,0
-+     f08:	4981                	li	s3,0
-         i += 1;
--     f00:	b575                	j	dac <vprintf+0x4a>
-+     f0a:	b56d                	j	db4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
--     f02:	008b8913          	addi	s2,s7,8
--     f06:	4681                	li	a3,0
--     f08:	4629                	li	a2,10
--     f0a:	000ba583          	lw	a1,0(s7)
--     f0e:	855a                	mv	a0,s6
--     f10:	dabff0ef          	jal	cba <printint>
-+     f0c:	008b8913          	add	s2,s7,8
-+     f10:	4681                	li	a3,0
-+     f12:	4629                	li	a2,10
-+     f14:	000ba583          	lw	a1,0(s7)
-+     f18:	855a                	mv	a0,s6
-+     f1a:	da7ff0ef          	jal	cc0 <printint>
-         i += 2;
--     f14:	2489                	addiw	s1,s1,2
-+     f1e:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 0);
--     f16:	8bca                	mv	s7,s2
-+     f20:	8bca                	mv	s7,s2
-       state = 0;
--     f18:	4981                	li	s3,0
-+     f22:	4981                	li	s3,0
-         i += 2;
--     f1a:	bd49                	j	dac <vprintf+0x4a>
-+     f24:	bd41                	j	db4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 16, 0);
--     f1c:	008b8913          	addi	s2,s7,8
--     f20:	4681                	li	a3,0
--     f22:	4641                	li	a2,16
--     f24:	000ba583          	lw	a1,0(s7)
--     f28:	855a                	mv	a0,s6
--     f2a:	d91ff0ef          	jal	cba <printint>
--     f2e:	8bca                	mv	s7,s2
-+     f26:	008b8913          	add	s2,s7,8
-+     f2a:	4681                	li	a3,0
-+     f2c:	4641                	li	a2,16
-+     f2e:	000ba583          	lw	a1,0(s7)
-+     f32:	855a                	mv	a0,s6
-+     f34:	d8dff0ef          	jal	cc0 <printint>
-+     f38:	8bca                	mv	s7,s2
-       state = 0;
--     f30:	4981                	li	s3,0
--     f32:	bdad                	j	dac <vprintf+0x4a>
-+     f3a:	4981                	li	s3,0
-+     f3c:	bda5                	j	db4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 16, 0);
--     f34:	008b8913          	addi	s2,s7,8
--     f38:	4681                	li	a3,0
--     f3a:	4641                	li	a2,16
--     f3c:	000ba583          	lw	a1,0(s7)
--     f40:	855a                	mv	a0,s6
--     f42:	d79ff0ef          	jal	cba <printint>
-+     f3e:	008b8913          	add	s2,s7,8
-+     f42:	4681                	li	a3,0
-+     f44:	4641                	li	a2,16
-+     f46:	000ba583          	lw	a1,0(s7)
-+     f4a:	855a                	mv	a0,s6
-+     f4c:	d75ff0ef          	jal	cc0 <printint>
-         i += 1;
--     f46:	2485                	addiw	s1,s1,1
-+     f50:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 16, 0);
--     f48:	8bca                	mv	s7,s2
-+     f52:	8bca                	mv	s7,s2
-       state = 0;
--     f4a:	4981                	li	s3,0
-+     f54:	4981                	li	s3,0
-         i += 1;
--     f4c:	b585                	j	dac <vprintf+0x4a>
--     f4e:	e06a                	sd	s10,0(sp)
-+     f56:	bdb9                	j	db4 <vprintf+0x4c>
-         printptr(fd, va_arg(ap, uint64));
--     f50:	008b8d13          	addi	s10,s7,8
--     f54:	000bb983          	ld	s3,0(s7)
-+     f58:	008b8d13          	add	s10,s7,8
-+     f5c:	000bb983          	ld	s3,0(s7)
-   putc(fd, '0');
--     f58:	03000593          	li	a1,48
--     f5c:	855a                	mv	a0,s6
--     f5e:	d3fff0ef          	jal	c9c <putc>
-+     f60:	03000593          	li	a1,48
-+     f64:	855a                	mv	a0,s6
-+     f66:	d3dff0ef          	jal	ca2 <putc>
-   putc(fd, 'x');
--     f62:	07800593          	li	a1,120
--     f66:	855a                	mv	a0,s6
--     f68:	d35ff0ef          	jal	c9c <putc>
--     f6c:	4941                	li	s2,16
-+     f6a:	07800593          	li	a1,120
-+     f6e:	855a                	mv	a0,s6
-+     f70:	d33ff0ef          	jal	ca2 <putc>
-+     f74:	4941                	li	s2,16
-     putc(fd, digits[x >> (sizeof(uint64) * 8 - 4)]);
--     f6e:	00000b97          	auipc	s7,0x0
--     f72:	39ab8b93          	addi	s7,s7,922 # 1308 <digits>
--     f76:	03c9d793          	srli	a5,s3,0x3c
--     f7a:	97de                	add	a5,a5,s7
--     f7c:	0007c583          	lbu	a1,0(a5)
--     f80:	855a                	mv	a0,s6
--     f82:	d1bff0ef          	jal	c9c <putc>
-+     f76:	00000b97          	auipc	s7,0x0
-+     f7a:	382b8b93          	add	s7,s7,898 # 12f8 <digits>
-+     f7e:	03c9d793          	srl	a5,s3,0x3c
-+     f82:	97de                	add	a5,a5,s7
-+     f84:	0007c583          	lbu	a1,0(a5)
-+     f88:	855a                	mv	a0,s6
-+     f8a:	d19ff0ef          	jal	ca2 <putc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
--     f86:	0992                	slli	s3,s3,0x4
--     f88:	397d                	addiw	s2,s2,-1
--     f8a:	fe0916e3          	bnez	s2,f76 <vprintf+0x214>
-+     f8e:	0992                	sll	s3,s3,0x4
-+     f90:	397d                	addw	s2,s2,-1
-+     f92:	fe0916e3          	bnez	s2,f7e <vprintf+0x216>
-         printptr(fd, va_arg(ap, uint64));
--     f8e:	8bea                	mv	s7,s10
-+     f96:	8bea                	mv	s7,s10
-       state = 0;
--     f90:	4981                	li	s3,0
--     f92:	6d02                	ld	s10,0(sp)
--     f94:	bd21                	j	dac <vprintf+0x4a>
-+     f98:	4981                	li	s3,0
-+     f9a:	bd29                	j	db4 <vprintf+0x4c>
-         if((s = va_arg(ap, char*)) == 0)
--     f96:	008b8993          	addi	s3,s7,8
--     f9a:	000bb903          	ld	s2,0(s7)
--     f9e:	00090f63          	beqz	s2,fbc <vprintf+0x25a>
-+     f9c:	008b8993          	add	s3,s7,8
-+     fa0:	000bb903          	ld	s2,0(s7)
-+     fa4:	00090f63          	beqz	s2,fc2 <vprintf+0x25a>
-         for(; *s; s++)
--     fa2:	00094583          	lbu	a1,0(s2)
--     fa6:	c195                	beqz	a1,fca <vprintf+0x268>
-+     fa8:	00094583          	lbu	a1,0(s2)
-+     fac:	c195                	beqz	a1,fd0 <vprintf+0x268>
-           putc(fd, *s);
--     fa8:	855a                	mv	a0,s6
--     faa:	cf3ff0ef          	jal	c9c <putc>
-+     fae:	855a                	mv	a0,s6
-+     fb0:	cf3ff0ef          	jal	ca2 <putc>
-         for(; *s; s++)
--     fae:	0905                	addi	s2,s2,1
--     fb0:	00094583          	lbu	a1,0(s2)
--     fb4:	f9f5                	bnez	a1,fa8 <vprintf+0x246>
-+     fb4:	0905                	add	s2,s2,1
-+     fb6:	00094583          	lbu	a1,0(s2)
-+     fba:	f9f5                	bnez	a1,fae <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
--     fb6:	8bce                	mv	s7,s3
-+     fbc:	8bce                	mv	s7,s3
-       state = 0;
--     fb8:	4981                	li	s3,0
--     fba:	bbcd                	j	dac <vprintf+0x4a>
-+     fbe:	4981                	li	s3,0
-+     fc0:	bbd5                	j	db4 <vprintf+0x4c>
-           s = "(null)";
--     fbc:	00000917          	auipc	s2,0x0
--     fc0:	31490913          	addi	s2,s2,788 # 12d0 <malloc+0x208>
-+     fc2:	00000917          	auipc	s2,0x0
-+     fc6:	32e90913          	add	s2,s2,814 # 12f0 <malloc+0x220>
-         for(; *s; s++)
--     fc4:	02800593          	li	a1,40
--     fc8:	b7c5                	j	fa8 <vprintf+0x246>
-+     fca:	02800593          	li	a1,40
-+     fce:	b7c5                	j	fae <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
--     fca:	8bce                	mv	s7,s3
-+     fd0:	8bce                	mv	s7,s3
-       state = 0;
--     fcc:	4981                	li	s3,0
--     fce:	bbf9                	j	dac <vprintf+0x4a>
--     fd0:	64a6                	ld	s1,72(sp)
--     fd2:	79e2                	ld	s3,56(sp)
--     fd4:	7a42                	ld	s4,48(sp)
--     fd6:	7aa2                	ld	s5,40(sp)
--     fd8:	7b02                	ld	s6,32(sp)
--     fda:	6be2                	ld	s7,24(sp)
--     fdc:	6c42                	ld	s8,16(sp)
--     fde:	6ca2                	ld	s9,8(sp)
-+     fd2:	4981                	li	s3,0
-+     fd4:	b3c5                	j	db4 <vprintf+0x4c>
-     }
-   }
- }
--     fe0:	60e6                	ld	ra,88(sp)
--     fe2:	6446                	ld	s0,80(sp)
--     fe4:	6906                	ld	s2,64(sp)
--     fe6:	6125                	addi	sp,sp,96
--     fe8:	8082                	ret
--
--0000000000000fea <fprintf>:
-+     fd6:	60e6                	ld	ra,88(sp)
-+     fd8:	6446                	ld	s0,80(sp)
-+     fda:	64a6                	ld	s1,72(sp)
-+     fdc:	6906                	ld	s2,64(sp)
-+     fde:	79e2                	ld	s3,56(sp)
-+     fe0:	7a42                	ld	s4,48(sp)
-+     fe2:	7aa2                	ld	s5,40(sp)
-+     fe4:	7b02                	ld	s6,32(sp)
-+     fe6:	6be2                	ld	s7,24(sp)
-+     fe8:	6c42                	ld	s8,16(sp)
-+     fea:	6ca2                	ld	s9,8(sp)
-+     fec:	6d02                	ld	s10,0(sp)
-+     fee:	6125                	add	sp,sp,96
-+     ff0:	8082                	ret
-+
-+0000000000000ff2 <fprintf>:
- 
- void
- fprintf(int fd, const char *fmt, ...)
- {
--     fea:	715d                	addi	sp,sp,-80
--     fec:	ec06                	sd	ra,24(sp)
--     fee:	e822                	sd	s0,16(sp)
--     ff0:	1000                	addi	s0,sp,32
--     ff2:	e010                	sd	a2,0(s0)
--     ff4:	e414                	sd	a3,8(s0)
--     ff6:	e818                	sd	a4,16(s0)
--     ff8:	ec1c                	sd	a5,24(s0)
--     ffa:	03043023          	sd	a6,32(s0)
--     ffe:	03143423          	sd	a7,40(s0)
-+     ff2:	715d                	add	sp,sp,-80
-+     ff4:	ec06                	sd	ra,24(sp)
-+     ff6:	e822                	sd	s0,16(sp)
-+     ff8:	1000                	add	s0,sp,32
-+     ffa:	e010                	sd	a2,0(s0)
-+     ffc:	e414                	sd	a3,8(s0)
-+     ffe:	e818                	sd	a4,16(s0)
-+    1000:	ec1c                	sd	a5,24(s0)
-+    1002:	03043023          	sd	a6,32(s0)
-+    1006:	03143423          	sd	a7,40(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
--    1002:	fe843423          	sd	s0,-24(s0)
-+    100a:	fe843423          	sd	s0,-24(s0)
-   vprintf(fd, fmt, ap);
--    1006:	8622                	mv	a2,s0
--    1008:	d5bff0ef          	jal	d62 <vprintf>
-+    100e:	8622                	mv	a2,s0
-+    1010:	d59ff0ef          	jal	d68 <vprintf>
- }
--    100c:	60e2                	ld	ra,24(sp)
--    100e:	6442                	ld	s0,16(sp)
--    1010:	6161                	addi	sp,sp,80
--    1012:	8082                	ret
-+    1014:	60e2                	ld	ra,24(sp)
-+    1016:	6442                	ld	s0,16(sp)
-+    1018:	6161                	add	sp,sp,80
-+    101a:	8082                	ret
- 
--0000000000001014 <printf>:
-+000000000000101c <printf>:
- 
- void
- printf(const char *fmt, ...)
- {
--    1014:	711d                	addi	sp,sp,-96
--    1016:	ec06                	sd	ra,24(sp)
--    1018:	e822                	sd	s0,16(sp)
--    101a:	1000                	addi	s0,sp,32
--    101c:	e40c                	sd	a1,8(s0)
--    101e:	e810                	sd	a2,16(s0)
--    1020:	ec14                	sd	a3,24(s0)
--    1022:	f018                	sd	a4,32(s0)
--    1024:	f41c                	sd	a5,40(s0)
--    1026:	03043823          	sd	a6,48(s0)
--    102a:	03143c23          	sd	a7,56(s0)
-+    101c:	711d                	add	sp,sp,-96
-+    101e:	ec06                	sd	ra,24(sp)
-+    1020:	e822                	sd	s0,16(sp)
-+    1022:	1000                	add	s0,sp,32
-+    1024:	e40c                	sd	a1,8(s0)
-+    1026:	e810                	sd	a2,16(s0)
-+    1028:	ec14                	sd	a3,24(s0)
-+    102a:	f018                	sd	a4,32(s0)
-+    102c:	f41c                	sd	a5,40(s0)
-+    102e:	03043823          	sd	a6,48(s0)
-+    1032:	03143c23          	sd	a7,56(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
--    102e:	00840613          	addi	a2,s0,8
--    1032:	fec43423          	sd	a2,-24(s0)
-+    1036:	00840613          	add	a2,s0,8
-+    103a:	fec43423          	sd	a2,-24(s0)
-   vprintf(1, fmt, ap);
--    1036:	85aa                	mv	a1,a0
--    1038:	4505                	li	a0,1
--    103a:	d29ff0ef          	jal	d62 <vprintf>
-+    103e:	85aa                	mv	a1,a0
-+    1040:	4505                	li	a0,1
-+    1042:	d27ff0ef          	jal	d68 <vprintf>
- }
--    103e:	60e2                	ld	ra,24(sp)
--    1040:	6442                	ld	s0,16(sp)
--    1042:	6125                	addi	sp,sp,96
--    1044:	8082                	ret
-+    1046:	60e2                	ld	ra,24(sp)
-+    1048:	6442                	ld	s0,16(sp)
-+    104a:	6125                	add	sp,sp,96
-+    104c:	8082                	ret
- 
--0000000000001046 <free>:
-+000000000000104e <free>:
- static Header base;
- static Header *freep;
- 
- void
- free(void *ap)
- {
--    1046:	1141                	addi	sp,sp,-16
--    1048:	e422                	sd	s0,8(sp)
--    104a:	0800                	addi	s0,sp,16
-+    104e:	1141                	add	sp,sp,-16
-+    1050:	e422                	sd	s0,8(sp)
-+    1052:	0800                	add	s0,sp,16
-   Header *bp, *p;
- 
-   bp = (Header*)ap - 1;
--    104c:	ff050693          	addi	a3,a0,-16
-+    1054:	ff050693          	add	a3,a0,-16
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
--    1050:	00001797          	auipc	a5,0x1
--    1054:	fc07b783          	ld	a5,-64(a5) # 2010 <freep>
--    1058:	a02d                	j	1082 <free+0x3c>
-+    1058:	00001797          	auipc	a5,0x1
-+    105c:	fb87b783          	ld	a5,-72(a5) # 2010 <freep>
-+    1060:	a02d                	j	108a <free+0x3c>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-       break;
-   if(bp + bp->s.size == p->s.ptr){
-     bp->s.size += p->s.ptr->s.size;
--    105a:	4618                	lw	a4,8(a2)
--    105c:	9f2d                	addw	a4,a4,a1
--    105e:	fee52c23          	sw	a4,-8(a0)
-+    1062:	4618                	lw	a4,8(a2)
-+    1064:	9f2d                	addw	a4,a4,a1
-+    1066:	fee52c23          	sw	a4,-8(a0)
-     bp->s.ptr = p->s.ptr->s.ptr;
--    1062:	6398                	ld	a4,0(a5)
--    1064:	6310                	ld	a2,0(a4)
--    1066:	a83d                	j	10a4 <free+0x5e>
-+    106a:	6398                	ld	a4,0(a5)
-+    106c:	6310                	ld	a2,0(a4)
-+    106e:	a83d                	j	10ac <free+0x5e>
-   } else
-     bp->s.ptr = p->s.ptr;
-   if(p + p->s.size == bp){
-     p->s.size += bp->s.size;
--    1068:	ff852703          	lw	a4,-8(a0)
--    106c:	9f31                	addw	a4,a4,a2
--    106e:	c798                	sw	a4,8(a5)
-+    1070:	ff852703          	lw	a4,-8(a0)
-+    1074:	9f31                	addw	a4,a4,a2
-+    1076:	c798                	sw	a4,8(a5)
-     p->s.ptr = bp->s.ptr;
--    1070:	ff053683          	ld	a3,-16(a0)
--    1074:	a091                	j	10b8 <free+0x72>
-+    1078:	ff053683          	ld	a3,-16(a0)
-+    107c:	a091                	j	10c0 <free+0x72>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
--    1076:	6398                	ld	a4,0(a5)
--    1078:	00e7e463          	bltu	a5,a4,1080 <free+0x3a>
--    107c:	00e6ea63          	bltu	a3,a4,1090 <free+0x4a>
-+    107e:	6398                	ld	a4,0(a5)
-+    1080:	00e7e463          	bltu	a5,a4,1088 <free+0x3a>
-+    1084:	00e6ea63          	bltu	a3,a4,1098 <free+0x4a>
- {
--    1080:	87ba                	mv	a5,a4
-+    1088:	87ba                	mv	a5,a4
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
--    1082:	fed7fae3          	bgeu	a5,a3,1076 <free+0x30>
--    1086:	6398                	ld	a4,0(a5)
--    1088:	00e6e463          	bltu	a3,a4,1090 <free+0x4a>
-+    108a:	fed7fae3          	bgeu	a5,a3,107e <free+0x30>
-+    108e:	6398                	ld	a4,0(a5)
-+    1090:	00e6e463          	bltu	a3,a4,1098 <free+0x4a>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
--    108c:	fee7eae3          	bltu	a5,a4,1080 <free+0x3a>
-+    1094:	fee7eae3          	bltu	a5,a4,1088 <free+0x3a>
-   if(bp + bp->s.size == p->s.ptr){
--    1090:	ff852583          	lw	a1,-8(a0)
--    1094:	6390                	ld	a2,0(a5)
--    1096:	02059813          	slli	a6,a1,0x20
--    109a:	01c85713          	srli	a4,a6,0x1c
--    109e:	9736                	add	a4,a4,a3
--    10a0:	fae60de3          	beq	a2,a4,105a <free+0x14>
-+    1098:	ff852583          	lw	a1,-8(a0)
-+    109c:	6390                	ld	a2,0(a5)
-+    109e:	02059813          	sll	a6,a1,0x20
-+    10a2:	01c85713          	srl	a4,a6,0x1c
-+    10a6:	9736                	add	a4,a4,a3
-+    10a8:	fae60de3          	beq	a2,a4,1062 <free+0x14>
-     bp->s.ptr = p->s.ptr->s.ptr;
--    10a4:	fec53823          	sd	a2,-16(a0)
-+    10ac:	fec53823          	sd	a2,-16(a0)
-   if(p + p->s.size == bp){
--    10a8:	4790                	lw	a2,8(a5)
--    10aa:	02061593          	slli	a1,a2,0x20
--    10ae:	01c5d713          	srli	a4,a1,0x1c
--    10b2:	973e                	add	a4,a4,a5
--    10b4:	fae68ae3          	beq	a3,a4,1068 <free+0x22>
-+    10b0:	4790                	lw	a2,8(a5)
-+    10b2:	02061593          	sll	a1,a2,0x20
-+    10b6:	01c5d713          	srl	a4,a1,0x1c
-+    10ba:	973e                	add	a4,a4,a5
-+    10bc:	fae68ae3          	beq	a3,a4,1070 <free+0x22>
-     p->s.ptr = bp->s.ptr;
--    10b8:	e394                	sd	a3,0(a5)
-+    10c0:	e394                	sd	a3,0(a5)
-   } else
-     p->s.ptr = bp;
-   freep = p;
--    10ba:	00001717          	auipc	a4,0x1
--    10be:	f4f73b23          	sd	a5,-170(a4) # 2010 <freep>
-+    10c2:	00001717          	auipc	a4,0x1
-+    10c6:	f4f73723          	sd	a5,-178(a4) # 2010 <freep>
- }
--    10c2:	6422                	ld	s0,8(sp)
--    10c4:	0141                	addi	sp,sp,16
--    10c6:	8082                	ret
-+    10ca:	6422                	ld	s0,8(sp)
-+    10cc:	0141                	add	sp,sp,16
-+    10ce:	8082                	ret
- 
--00000000000010c8 <malloc>:
-+00000000000010d0 <malloc>:
-   return freep;
- }
- 
- void*
- malloc(uint nbytes)
- {
--    10c8:	7139                	addi	sp,sp,-64
--    10ca:	fc06                	sd	ra,56(sp)
--    10cc:	f822                	sd	s0,48(sp)
--    10ce:	f426                	sd	s1,40(sp)
--    10d0:	ec4e                	sd	s3,24(sp)
--    10d2:	0080                	addi	s0,sp,64
-+    10d0:	7139                	add	sp,sp,-64
-+    10d2:	fc06                	sd	ra,56(sp)
-+    10d4:	f822                	sd	s0,48(sp)
-+    10d6:	f426                	sd	s1,40(sp)
-+    10d8:	f04a                	sd	s2,32(sp)
-+    10da:	ec4e                	sd	s3,24(sp)
-+    10dc:	e852                	sd	s4,16(sp)
-+    10de:	e456                	sd	s5,8(sp)
-+    10e0:	e05a                	sd	s6,0(sp)
-+    10e2:	0080                	add	s0,sp,64
-   Header *p, *prevp;
-   uint nunits;
- 
-   nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;
--    10d4:	02051493          	slli	s1,a0,0x20
--    10d8:	9081                	srli	s1,s1,0x20
--    10da:	04bd                	addi	s1,s1,15
--    10dc:	8091                	srli	s1,s1,0x4
--    10de:	0014899b          	addiw	s3,s1,1
--    10e2:	0485                	addi	s1,s1,1
-+    10e4:	02051493          	sll	s1,a0,0x20
-+    10e8:	9081                	srl	s1,s1,0x20
-+    10ea:	04bd                	add	s1,s1,15
-+    10ec:	8091                	srl	s1,s1,0x4
-+    10ee:	0014899b          	addw	s3,s1,1
-+    10f2:	0485                	add	s1,s1,1
-   if((prevp = freep) == 0){
--    10e4:	00001517          	auipc	a0,0x1
--    10e8:	f2c53503          	ld	a0,-212(a0) # 2010 <freep>
--    10ec:	c915                	beqz	a0,1120 <malloc+0x58>
-+    10f4:	00001517          	auipc	a0,0x1
-+    10f8:	f1c53503          	ld	a0,-228(a0) # 2010 <freep>
-+    10fc:	c515                	beqz	a0,1128 <malloc+0x58>
-     base.s.ptr = freep = prevp = &base;
-     base.s.size = 0;
-   }
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
--    10ee:	611c                	ld	a5,0(a0)
-+    10fe:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
--    10f0:	4798                	lw	a4,8(a5)
--    10f2:	08977a63          	bgeu	a4,s1,1186 <malloc+0xbe>
--    10f6:	f04a                	sd	s2,32(sp)
--    10f8:	e852                	sd	s4,16(sp)
--    10fa:	e456                	sd	s5,8(sp)
--    10fc:	e05a                	sd	s6,0(sp)
-+    1100:	4798                	lw	a4,8(a5)
-+    1102:	02977f63          	bgeu	a4,s1,1140 <malloc+0x70>
-   if(nu < 4096)
--    10fe:	8a4e                	mv	s4,s3
--    1100:	0009871b          	sext.w	a4,s3
--    1104:	6685                	lui	a3,0x1
--    1106:	00d77363          	bgeu	a4,a3,110c <malloc+0x44>
--    110a:	6a05                	lui	s4,0x1
--    110c:	000a0b1b          	sext.w	s6,s4
-+    1106:	8a4e                	mv	s4,s3
-+    1108:	0009871b          	sext.w	a4,s3
-+    110c:	6685                	lui	a3,0x1
-+    110e:	00d77363          	bgeu	a4,a3,1114 <malloc+0x44>
-+    1112:	6a05                	lui	s4,0x1
-+    1114:	000a0b1b          	sext.w	s6,s4
-   p = sbrk(nu * sizeof(Header));
--    1110:	004a1a1b          	slliw	s4,s4,0x4
-+    1118:	004a1a1b          	sllw	s4,s4,0x4
-         p->s.size = nunits;
-       }
-       freep = prevp;
-       return (void*)(p + 1);
-     }
-     if(p == freep)
--    1114:	00001917          	auipc	s2,0x1
--    1118:	efc90913          	addi	s2,s2,-260 # 2010 <freep>
-+    111c:	00001917          	auipc	s2,0x1
-+    1120:	ef490913          	add	s2,s2,-268 # 2010 <freep>
-   if(p == (char*)-1)
--    111c:	5afd                	li	s5,-1
--    111e:	a081                	j	115e <malloc+0x96>
--    1120:	f04a                	sd	s2,32(sp)
--    1122:	e852                	sd	s4,16(sp)
--    1124:	e456                	sd	s5,8(sp)
--    1126:	e05a                	sd	s6,0(sp)
-+    1124:	5afd                	li	s5,-1
-+    1126:	a885                	j	1196 <malloc+0xc6>
-     base.s.ptr = freep = prevp = &base;
-     1128:	00001797          	auipc	a5,0x1
--    112c:	f6078793          	addi	a5,a5,-160 # 2088 <base>
-+    112c:	f6078793          	add	a5,a5,-160 # 2088 <base>
-     1130:	00001717          	auipc	a4,0x1
-     1134:	eef73023          	sd	a5,-288(a4) # 2010 <freep>
-     1138:	e39c                	sd	a5,0(a5)
-     base.s.size = 0;
-     113a:	0007a423          	sw	zero,8(a5)
-     if(p->s.size >= nunits){
--    113e:	b7c1                	j	10fe <malloc+0x36>
-+    113e:	b7e1                	j	1106 <malloc+0x36>
-+      if(p->s.size == nunits)
-+    1140:	02e48c63          	beq	s1,a4,1178 <malloc+0xa8>
-+        p->s.size -= nunits;
-+    1144:	4137073b          	subw	a4,a4,s3
-+    1148:	c798                	sw	a4,8(a5)
-+        p += p->s.size;
-+    114a:	02071693          	sll	a3,a4,0x20
-+    114e:	01c6d713          	srl	a4,a3,0x1c
-+    1152:	97ba                	add	a5,a5,a4
-+        p->s.size = nunits;
-+    1154:	0137a423          	sw	s3,8(a5)
-+      freep = prevp;
-+    1158:	00001717          	auipc	a4,0x1
-+    115c:	eaa73c23          	sd	a0,-328(a4) # 2010 <freep>
-+      return (void*)(p + 1);
-+    1160:	01078513          	add	a0,a5,16
-+      if((p = morecore(nunits)) == 0)
-+        return 0;
-+  }
-+}
-+    1164:	70e2                	ld	ra,56(sp)
-+    1166:	7442                	ld	s0,48(sp)
-+    1168:	74a2                	ld	s1,40(sp)
-+    116a:	7902                	ld	s2,32(sp)
-+    116c:	69e2                	ld	s3,24(sp)
-+    116e:	6a42                	ld	s4,16(sp)
-+    1170:	6aa2                	ld	s5,8(sp)
-+    1172:	6b02                	ld	s6,0(sp)
-+    1174:	6121                	add	sp,sp,64
-+    1176:	8082                	ret
-         prevp->s.ptr = p->s.ptr;
--    1140:	6398                	ld	a4,0(a5)
--    1142:	e118                	sd	a4,0(a0)
--    1144:	a8a9                	j	119e <malloc+0xd6>
-+    1178:	6398                	ld	a4,0(a5)
-+    117a:	e118                	sd	a4,0(a0)
-+    117c:	bff1                	j	1158 <malloc+0x88>
-   hp->s.size = nu;
--    1146:	01652423          	sw	s6,8(a0)
-+    117e:	01652423          	sw	s6,8(a0)
-   free((void*)(hp + 1));
--    114a:	0541                	addi	a0,a0,16
--    114c:	efbff0ef          	jal	1046 <free>
-+    1182:	0541                	add	a0,a0,16
-+    1184:	ecbff0ef          	jal	104e <free>
-   return freep;
--    1150:	00093503          	ld	a0,0(s2)
-+    1188:	00093503          	ld	a0,0(s2)
-       if((p = morecore(nunits)) == 0)
--    1154:	c12d                	beqz	a0,11b6 <malloc+0xee>
-+    118c:	dd61                	beqz	a0,1164 <malloc+0x94>
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
--    1156:	611c                	ld	a5,0(a0)
-+    118e:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
--    1158:	4798                	lw	a4,8(a5)
--    115a:	02977263          	bgeu	a4,s1,117e <malloc+0xb6>
-+    1190:	4798                	lw	a4,8(a5)
-+    1192:	fa9777e3          	bgeu	a4,s1,1140 <malloc+0x70>
-     if(p == freep)
--    115e:	00093703          	ld	a4,0(s2)
--    1162:	853e                	mv	a0,a5
--    1164:	fef719e3          	bne	a4,a5,1156 <malloc+0x8e>
-+    1196:	00093703          	ld	a4,0(s2)
-+    119a:	853e                	mv	a0,a5
-+    119c:	fef719e3          	bne	a4,a5,118e <malloc+0xbe>
-   p = sbrk(nu * sizeof(Header));
--    1168:	8552                	mv	a0,s4
--    116a:	b1bff0ef          	jal	c84 <sbrk>
-+    11a0:	8552                	mv	a0,s4
-+    11a2:	ae9ff0ef          	jal	c8a <sbrk>
-   if(p == (char*)-1)
--    116e:	fd551ce3          	bne	a0,s5,1146 <malloc+0x7e>
-+    11a6:	fd551ce3          	bne	a0,s5,117e <malloc+0xae>
-         return 0;
--    1172:	4501                	li	a0,0
--    1174:	7902                	ld	s2,32(sp)
--    1176:	6a42                	ld	s4,16(sp)
--    1178:	6aa2                	ld	s5,8(sp)
--    117a:	6b02                	ld	s6,0(sp)
--    117c:	a03d                	j	11aa <malloc+0xe2>
--    117e:	7902                	ld	s2,32(sp)
--    1180:	6a42                	ld	s4,16(sp)
--    1182:	6aa2                	ld	s5,8(sp)
--    1184:	6b02                	ld	s6,0(sp)
--      if(p->s.size == nunits)
--    1186:	fae48de3          	beq	s1,a4,1140 <malloc+0x78>
--        p->s.size -= nunits;
--    118a:	4137073b          	subw	a4,a4,s3
--    118e:	c798                	sw	a4,8(a5)
--        p += p->s.size;
--    1190:	02071693          	slli	a3,a4,0x20
--    1194:	01c6d713          	srli	a4,a3,0x1c
--    1198:	97ba                	add	a5,a5,a4
--        p->s.size = nunits;
--    119a:	0137a423          	sw	s3,8(a5)
--      freep = prevp;
--    119e:	00001717          	auipc	a4,0x1
--    11a2:	e6a73923          	sd	a0,-398(a4) # 2010 <freep>
--      return (void*)(p + 1);
--    11a6:	01078513          	addi	a0,a5,16
--  }
--}
--    11aa:	70e2                	ld	ra,56(sp)
--    11ac:	7442                	ld	s0,48(sp)
--    11ae:	74a2                	ld	s1,40(sp)
--    11b0:	69e2                	ld	s3,24(sp)
--    11b2:	6121                	addi	sp,sp,64
--    11b4:	8082                	ret
--    11b6:	7902                	ld	s2,32(sp)
--    11b8:	6a42                	ld	s4,16(sp)
--    11ba:	6aa2                	ld	s5,8(sp)
--    11bc:	6b02                	ld	s6,0(sp)
--    11be:	b7f5                	j	11aa <malloc+0xe2>
-+    11aa:	4501                	li	a0,0
-+    11ac:	bf65                	j	1164 <malloc+0x94>
-diff --git a/Assignments/Assignment-6/xv6/user/sh.d b/Assignments/Assignment-6/xv6/user/sh.d
-index e37ab34..d2c3f5e 100644
---- a/Assignments/Assignment-6/xv6/user/sh.d
-+++ b/Assignments/Assignment-6/xv6/user/sh.d
-@@ -1,3 +1 @@
--user/sh.o: user/sh.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h user/user.h kernel/fcntl.h
-+user/sh.o: user/sh.c kernel/types.h user/user.h kernel/fcntl.h
-diff --git a/Assignments/Assignment-6/xv6/user/sh.o b/Assignments/Assignment-6/xv6/user/sh.o
-index 6266d4d..6b0ae20 100644
-Binary files a/Assignments/Assignment-6/xv6/user/sh.o and b/Assignments/Assignment-6/xv6/user/sh.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/sh.sym b/Assignments/Assignment-6/xv6/user/sh.sym
-index 8c9f87c..ffb69bd 100644
---- a/Assignments/Assignment-6/xv6/user/sh.sym
-+++ b/Assignments/Assignment-6/xv6/user/sh.sym
-@@ -1,6 +1,5 @@
- 0000000000000000 .text
--00000000000011c0 .rodata
--0000000000001320 .eh_frame
-+00000000000011b0 .rodata
- 0000000000002000 .data
- 0000000000002010 .bss
- 0000000000000000 .debug_info
-@@ -11,74 +10,75 @@
- 0000000000000000 .debug_str
- 0000000000000000 .comment
- 0000000000000000 .riscv.attributes
-+0000000000000000 .debug_frame
- 0000000000000000 .debug_ranges
- 0000000000000000 sh.c
- 0000000000002020 buf.0
- 0000000000000000 ulib.c
- 0000000000000000 usys.o
- 0000000000000000 printf.c
--0000000000000c9c putc
--0000000000000cba printint
--0000000000001308 digits
-+0000000000000ca2 putc
-+0000000000000cc0 printint
-+00000000000012f8 digits
- 0000000000000000 umalloc.c
- 0000000000002010 freep
- 0000000000002088 base
--00000000000009a4 strcpy
--0000000000001014 printf
--0000000000000b4e memmove
--0000000000000c44 mknod
--00000000000001d2 execcmd
--0000000000000a5c gets
--0000000000000c7c getpid
--000000000000066c parsepipe
--0000000000000852 parsecmd
--0000000000000be0 memcpy
--00000000000002dc backcmd
--000000000000044c peek
--00000000000004b0 parseredirs
--0000000000000310 gettoken
--00000000000010c8 malloc
--0000000000000c8c sleep
-+00000000000009aa strcpy
-+000000000000101c printf
-+0000000000000b54 memmove
-+0000000000000c4a mknod
-+00000000000001d0 execcmd
-+0000000000000a62 gets
-+0000000000000c82 getpid
-+0000000000000672 parsepipe
-+0000000000000858 parsecmd
-+0000000000000be6 memcpy
-+00000000000002da backcmd
-+000000000000044a peek
-+00000000000004ae parseredirs
-+000000000000030e gettoken
-+00000000000010d0 malloc
-+0000000000000c92 sleep
- 0000000000002008 whitespace
- 0000000000000068 fork1
--00000000000007d2 nulterminate
--0000000000000c0c pipe
-+00000000000007d8 nulterminate
-+0000000000000c12 pipe
- 0000000000000000 getcmd
--0000000000000c1c write
--0000000000000c54 fstat
--0000000000000fea fprintf
--0000000000000c2c kill
--0000000000000d62 vprintf
--0000000000000c6c chdir
--00000000000006c6 parseline
-+0000000000000c22 write
-+0000000000000c5a fstat
-+0000000000000ff2 fprintf
-+0000000000000c32 kill
-+0000000000000d68 vprintf
-+0000000000000c72 chdir
-+00000000000006cc parseline
- 000000000000008e runcmd
--000000000000074e parseblock
--0000000000000c34 exec
--0000000000000c04 wait
-+0000000000000754 parseblock
-+0000000000000c3a exec
-+0000000000000c0a wait
- 0000000000002000 symbols
--0000000000000c14 read
--0000000000000588 parseexec
--0000000000000c4c unlink
-+0000000000000c1a read
-+000000000000058e parseexec
-+0000000000000c52 unlink
- 000000000000004a panic
--0000000000000ba6 memcmp
--0000000000000bf4 fork
--0000000000000c84 sbrk
--0000000000000c94 uptime
--0000000000000a16 memset
--00000000000008c2 main
--00000000000009c0 strcmp
--0000000000000c74 dup
--0000000000000260 pipecmd
--0000000000000200 redircmd
--0000000000000acc stat
--0000000000000c5c link
--0000000000000bfc exit
--0000000000000992 start
--0000000000000b06 atoi
--00000000000009ec strlen
--0000000000000c3c open
--0000000000000a38 strchr
--0000000000000c64 mkdir
--0000000000000c24 close
--000000000000029e listcmd
--0000000000001046 free
-+0000000000000bac memcmp
-+0000000000000bfa fork
-+0000000000000c8a sbrk
-+0000000000000c9a uptime
-+0000000000000a1c memset
-+00000000000008c8 main
-+00000000000009c6 strcmp
-+0000000000000c7a dup
-+000000000000025e pipecmd
-+00000000000001fe redircmd
-+0000000000000ad2 stat
-+0000000000000c62 link
-+0000000000000c02 exit
-+0000000000000998 start
-+0000000000000b0c atoi
-+00000000000009f2 strlen
-+0000000000000c42 open
-+0000000000000a3e strchr
-+0000000000000c6a mkdir
-+0000000000000c2a close
-+000000000000029c listcmd
-+000000000000104e free
-diff --git a/Assignments/Assignment-6/xv6/user/stressfs.asm b/Assignments/Assignment-6/xv6/user/stressfs.asm
-index f01908f..881c8fc 100644
---- a/Assignments/Assignment-6/xv6/user/stressfs.asm
-+++ b/Assignments/Assignment-6/xv6/user/stressfs.asm
-@@ -11,16 +11,16 @@ Disassembly of section .text:
- int
- main(int argc, char *argv[])
- {
--   0:	dd010113          	addi	sp,sp,-560
-+   0:	dd010113          	add	sp,sp,-560
-    4:	22113423          	sd	ra,552(sp)
-    8:	22813023          	sd	s0,544(sp)
-    c:	20913c23          	sd	s1,536(sp)
-   10:	21213823          	sd	s2,528(sp)
--  14:	1c00                	addi	s0,sp,560
-+  14:	1c00                	add	s0,sp,560
-   int fd, i;
-   char path[] = "stressfs0";
-   16:	00001797          	auipc	a5,0x1
--  1a:	92a78793          	addi	a5,a5,-1750 # 940 <malloc+0x132>
-+  1a:	90a78793          	add	a5,a5,-1782 # 920 <malloc+0x110>
-   1e:	6398                	ld	a4,0(a5)
-   20:	fce43823          	sd	a4,-48(s0)
-   24:	0087d783          	lhu	a5,8(a5)
-@@ -29,12 +29,12 @@ main(int argc, char *argv[])
- 
-   printf("stressfs starting\n");
-   2c:	00001517          	auipc	a0,0x1
--  30:	8e450513          	addi	a0,a0,-1820 # 910 <malloc+0x102>
--  34:	726000ef          	jal	75a <printf>
-+  30:	8c450513          	add	a0,a0,-1852 # 8f0 <malloc+0xe0>
-+  34:	728000ef          	jal	75c <printf>
-   memset(data, 'a', sizeof(data));
-   38:	20000613          	li	a2,512
-   3c:	06100593          	li	a1,97
--  40:	dd040513          	addi	a0,s0,-560
-+  40:	dd040513          	add	a0,s0,-560
-   44:	118000ef          	jal	15c <memset>
- 
-   for(i = 0; i < 4; i++)
-@@ -44,15 +44,15 @@ main(int argc, char *argv[])
-   4c:	2ee000ef          	jal	33a <fork>
-   50:	00a04563          	bgtz	a0,5a <main+0x5a>
-   for(i = 0; i < 4; i++)
--  54:	2485                	addiw	s1,s1,1
-+  54:	2485                	addw	s1,s1,1
-   56:	ff249be3          	bne	s1,s2,4c <main+0x4c>
-       break;
- 
-   printf("write %d\n", i);
-   5a:	85a6                	mv	a1,s1
-   5c:	00001517          	auipc	a0,0x1
--  60:	8cc50513          	addi	a0,a0,-1844 # 928 <malloc+0x11a>
--  64:	6f6000ef          	jal	75a <printf>
-+  60:	8ac50513          	add	a0,a0,-1876 # 908 <malloc+0xf8>
-+  64:	6f8000ef          	jal	75c <printf>
- 
-   path[8] += i;
-   68:	fd844783          	lbu	a5,-40(s0)
-@@ -60,7 +60,7 @@ main(int argc, char *argv[])
-   6e:	fcf40c23          	sb	a5,-40(s0)
-   fd = open(path, O_CREATE | O_RDWR);
-   72:	20200593          	li	a1,514
--  76:	fd040513          	addi	a0,s0,-48
-+  76:	fd040513          	add	a0,s0,-48
-   7a:	308000ef          	jal	382 <open>
-   7e:	892a                	mv	s2,a0
-   80:	44d1                	li	s1,20
-@@ -68,11 +68,11 @@ main(int argc, char *argv[])
- /*    printf(fd, "%d\n", i); */
-     write(fd, data, sizeof(data));
-   82:	20000613          	li	a2,512
--  86:	dd040593          	addi	a1,s0,-560
-+  86:	dd040593          	add	a1,s0,-560
-   8a:	854a                	mv	a0,s2
-   8c:	2d6000ef          	jal	362 <write>
-   for(i = 0; i < 20; i++)
--  90:	34fd                	addiw	s1,s1,-1
-+  90:	34fd                	addw	s1,s1,-1
-   92:	f8e5                	bnez	s1,82 <main+0x82>
-   close(fd);
-   94:	854a                	mv	a0,s2
-@@ -80,23 +80,23 @@ main(int argc, char *argv[])
- 
-   printf("read\n");
-   9a:	00001517          	auipc	a0,0x1
--  9e:	89e50513          	addi	a0,a0,-1890 # 938 <malloc+0x12a>
--  a2:	6b8000ef          	jal	75a <printf>
-+  9e:	87e50513          	add	a0,a0,-1922 # 918 <malloc+0x108>
-+  a2:	6ba000ef          	jal	75c <printf>
- 
-   fd = open(path, O_RDONLY);
-   a6:	4581                	li	a1,0
--  a8:	fd040513          	addi	a0,s0,-48
-+  a8:	fd040513          	add	a0,s0,-48
-   ac:	2d6000ef          	jal	382 <open>
-   b0:	892a                	mv	s2,a0
-   b2:	44d1                	li	s1,20
-   for (i = 0; i < 20; i++)
-     read(fd, data, sizeof(data));
-   b4:	20000613          	li	a2,512
--  b8:	dd040593          	addi	a1,s0,-560
-+  b8:	dd040593          	add	a1,s0,-560
-   bc:	854a                	mv	a0,s2
-   be:	29c000ef          	jal	35a <read>
-   for (i = 0; i < 20; i++)
--  c2:	34fd                	addiw	s1,s1,-1
-+  c2:	34fd                	addw	s1,s1,-1
-   c4:	f8e5                	bnez	s1,b4 <main+0xb4>
-   close(fd);
-   c6:	854a                	mv	a0,s2
-@@ -117,10 +117,10 @@ main(int argc, char *argv[])
- void
- start()
- {
--  d8:	1141                	addi	sp,sp,-16
-+  d8:	1141                	add	sp,sp,-16
-   da:	e406                	sd	ra,8(sp)
-   dc:	e022                	sd	s0,0(sp)
--  de:	0800                	addi	s0,sp,16
-+  de:	0800                	add	s0,sp,16
-   extern int main();
-   main();
-   e0:	f21ff0ef          	jal	0 <main>
-@@ -134,16 +134,16 @@ start()
- char*
- strcpy(char *s, const char *t)
- {
--  ea:	1141                	addi	sp,sp,-16
-+  ea:	1141                	add	sp,sp,-16
-   ec:	e422                	sd	s0,8(sp)
--  ee:	0800                	addi	s0,sp,16
-+  ee:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
-   f0:	87aa                	mv	a5,a0
--  f2:	0585                	addi	a1,a1,1
--  f4:	0785                	addi	a5,a5,1
-+  f2:	0585                	add	a1,a1,1
-+  f4:	0785                	add	a5,a5,1
-   f6:	fff5c703          	lbu	a4,-1(a1)
-   fa:	fee78fa3          	sb	a4,-1(a5)
-   fe:	fb75                	bnez	a4,f2 <strcpy+0x8>
-@@ -151,7 +151,7 @@ strcpy(char *s, const char *t)
-   return os;
- }
-  100:	6422                	ld	s0,8(sp)
-- 102:	0141                	addi	sp,sp,16
-+ 102:	0141                	add	sp,sp,16
-  104:	8082                	ret
- 
- 0000000000000106 <strcmp>:
-@@ -159,17 +159,17 @@ strcpy(char *s, const char *t)
- int
- strcmp(const char *p, const char *q)
- {
-- 106:	1141                	addi	sp,sp,-16
-+ 106:	1141                	add	sp,sp,-16
-  108:	e422                	sd	s0,8(sp)
-- 10a:	0800                	addi	s0,sp,16
-+ 10a:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
-  10c:	00054783          	lbu	a5,0(a0)
-  110:	cb91                	beqz	a5,124 <strcmp+0x1e>
-  112:	0005c703          	lbu	a4,0(a1)
-  116:	00f71763          	bne	a4,a5,124 <strcmp+0x1e>
-     p++, q++;
-- 11a:	0505                	addi	a0,a0,1
-- 11c:	0585                	addi	a1,a1,1
-+ 11a:	0505                	add	a0,a0,1
-+ 11c:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
-  11e:	00054783          	lbu	a5,0(a0)
-  122:	fbe5                	bnez	a5,112 <strcmp+0xc>
-@@ -178,7 +178,7 @@ strcmp(const char *p, const char *q)
- }
-  128:	40a7853b          	subw	a0,a5,a0
-  12c:	6422                	ld	s0,8(sp)
-- 12e:	0141                	addi	sp,sp,16
-+ 12e:	0141                	add	sp,sp,16
-  130:	8082                	ret
- 
- 0000000000000132 <strlen>:
-@@ -186,27 +186,27 @@ strcmp(const char *p, const char *q)
- uint
- strlen(const char *s)
- {
-- 132:	1141                	addi	sp,sp,-16
-+ 132:	1141                	add	sp,sp,-16
-  134:	e422                	sd	s0,8(sp)
-- 136:	0800                	addi	s0,sp,16
-+ 136:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
-  138:	00054783          	lbu	a5,0(a0)
-  13c:	cf91                	beqz	a5,158 <strlen+0x26>
-- 13e:	0505                	addi	a0,a0,1
-+ 13e:	0505                	add	a0,a0,1
-  140:	87aa                	mv	a5,a0
-  142:	86be                	mv	a3,a5
-- 144:	0785                	addi	a5,a5,1
-+ 144:	0785                	add	a5,a5,1
-  146:	fff7c703          	lbu	a4,-1(a5)
-  14a:	ff65                	bnez	a4,142 <strlen+0x10>
-  14c:	40a6853b          	subw	a0,a3,a0
-- 150:	2505                	addiw	a0,a0,1
-+ 150:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
-  152:	6422                	ld	s0,8(sp)
-- 154:	0141                	addi	sp,sp,16
-+ 154:	0141                	add	sp,sp,16
-  156:	8082                	ret
-   for(n = 0; s[n]; n++)
-  158:	4501                	li	a0,0
-@@ -217,27 +217,27 @@ strlen(const char *s)
- void*
- memset(void *dst, int c, uint n)
- {
-- 15c:	1141                	addi	sp,sp,-16
-+ 15c:	1141                	add	sp,sp,-16
-  15e:	e422                	sd	s0,8(sp)
-- 160:	0800                	addi	s0,sp,16
-+ 160:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
-  162:	ca19                	beqz	a2,178 <memset+0x1c>
-  164:	87aa                	mv	a5,a0
-- 166:	1602                	slli	a2,a2,0x20
-- 168:	9201                	srli	a2,a2,0x20
-+ 166:	1602                	sll	a2,a2,0x20
-+ 168:	9201                	srl	a2,a2,0x20
-  16a:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
-  16e:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
-- 172:	0785                	addi	a5,a5,1
-+ 172:	0785                	add	a5,a5,1
-  174:	fee79de3          	bne	a5,a4,16e <memset+0x12>
-   }
-   return dst;
- }
-  178:	6422                	ld	s0,8(sp)
-- 17a:	0141                	addi	sp,sp,16
-+ 17a:	0141                	add	sp,sp,16
-  17c:	8082                	ret
- 
- 000000000000017e <strchr>:
-@@ -245,16 +245,16 @@ memset(void *dst, int c, uint n)
- char*
- strchr(const char *s, char c)
- {
-- 17e:	1141                	addi	sp,sp,-16
-+ 17e:	1141                	add	sp,sp,-16
-  180:	e422                	sd	s0,8(sp)
-- 182:	0800                	addi	s0,sp,16
-+ 182:	0800                	add	s0,sp,16
-   for(; *s; s++)
-  184:	00054783          	lbu	a5,0(a0)
-  188:	cb99                	beqz	a5,19e <strchr+0x20>
-     if(*s == c)
-  18a:	00f58763          	beq	a1,a5,198 <strchr+0x1a>
-   for(; *s; s++)
-- 18e:	0505                	addi	a0,a0,1
-+ 18e:	0505                	add	a0,a0,1
-  190:	00054783          	lbu	a5,0(a0)
-  194:	fbfd                	bnez	a5,18a <strchr+0xc>
-       return (char*)s;
-@@ -262,7 +262,7 @@ strchr(const char *s, char c)
-  196:	4501                	li	a0,0
- }
-  198:	6422                	ld	s0,8(sp)
-- 19a:	0141                	addi	sp,sp,16
-+ 19a:	0141                	add	sp,sp,16
-  19c:	8082                	ret
-   return 0;
-  19e:	4501                	li	a0,0
-@@ -273,7 +273,7 @@ strchr(const char *s, char c)
- char*
- gets(char *buf, int max)
- {
-- 1a2:	711d                	addi	sp,sp,-96
-+ 1a2:	711d                	add	sp,sp,-96
-  1a4:	ec86                	sd	ra,88(sp)
-  1a6:	e8a2                	sd	s0,80(sp)
-  1a8:	e4a6                	sd	s1,72(sp)
-@@ -283,7 +283,7 @@ gets(char *buf, int max)
-  1b0:	f456                	sd	s5,40(sp)
-  1b2:	f05a                	sd	s6,32(sp)
-  1b4:	ec5e                	sd	s7,24(sp)
-- 1b6:	1080                	addi	s0,sp,96
-+ 1b6:	1080                	add	s0,sp,96
-  1b8:	8baa                	mv	s7,a0
-  1ba:	8a2e                	mv	s4,a1
-   int i, cc;
-@@ -301,11 +301,11 @@ gets(char *buf, int max)
-  1c2:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
-  1c4:	89a6                	mv	s3,s1
-- 1c6:	2485                	addiw	s1,s1,1
-+ 1c6:	2485                	addw	s1,s1,1
-  1c8:	0344d663          	bge	s1,s4,1f4 <gets+0x52>
-     cc = read(0, &c, 1);
-  1cc:	4605                	li	a2,1
-- 1ce:	faf40593          	addi	a1,s0,-81
-+ 1ce:	faf40593          	add	a1,s0,-81
-  1d2:	4501                	li	a0,0
-  1d4:	186000ef          	jal	35a <read>
-     if(cc < 1)
-@@ -315,9 +315,9 @@ gets(char *buf, int max)
-  1e0:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
-  1e4:	01578763          	beq	a5,s5,1f2 <gets+0x50>
-- 1e8:	0905                	addi	s2,s2,1
-+ 1e8:	0905                	add	s2,s2,1
-  1ea:	fd679de3          	bne	a5,s6,1c4 <gets+0x22>
--    buf[i++] = c;
-+  for(i=0; i+1 < max; ){
-  1ee:	89a6                	mv	s3,s1
-  1f0:	a011                	j	1f4 <gets+0x52>
-  1f2:	89a6                	mv	s3,s1
-@@ -338,7 +338,7 @@ gets(char *buf, int max)
-  208:	7aa2                	ld	s5,40(sp)
-  20a:	7b02                	ld	s6,32(sp)
-  20c:	6be2                	ld	s7,24(sp)
-- 20e:	6125                	addi	sp,sp,96
-+ 20e:	6125                	add	sp,sp,96
-  210:	8082                	ret
- 
- 0000000000000212 <stat>:
-@@ -346,21 +346,21 @@ gets(char *buf, int max)
- int
- stat(const char *n, struct stat *st)
- {
-- 212:	1101                	addi	sp,sp,-32
-+ 212:	1101                	add	sp,sp,-32
-  214:	ec06                	sd	ra,24(sp)
-  216:	e822                	sd	s0,16(sp)
-- 218:	e04a                	sd	s2,0(sp)
-- 21a:	1000                	addi	s0,sp,32
-- 21c:	892e                	mv	s2,a1
-+ 218:	e426                	sd	s1,8(sp)
-+ 21a:	e04a                	sd	s2,0(sp)
-+ 21c:	1000                	add	s0,sp,32
-+ 21e:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
-- 21e:	4581                	li	a1,0
-- 220:	162000ef          	jal	382 <open>
-+ 220:	4581                	li	a1,0
-+ 222:	160000ef          	jal	382 <open>
-   if(fd < 0)
-- 224:	02054263          	bltz	a0,248 <stat+0x36>
-- 228:	e426                	sd	s1,8(sp)
-+ 226:	02054163          	bltz	a0,248 <stat+0x36>
-  22a:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
-@@ -371,32 +371,32 @@ stat(const char *n, struct stat *st)
-  234:	8526                	mv	a0,s1
-  236:	134000ef          	jal	36a <close>
-   return r;
-- 23a:	64a2                	ld	s1,8(sp)
- }
-- 23c:	854a                	mv	a0,s2
-- 23e:	60e2                	ld	ra,24(sp)
-- 240:	6442                	ld	s0,16(sp)
-+ 23a:	854a                	mv	a0,s2
-+ 23c:	60e2                	ld	ra,24(sp)
-+ 23e:	6442                	ld	s0,16(sp)
-+ 240:	64a2                	ld	s1,8(sp)
-  242:	6902                	ld	s2,0(sp)
-- 244:	6105                	addi	sp,sp,32
-+ 244:	6105                	add	sp,sp,32
-  246:	8082                	ret
-     return -1;
-  248:	597d                	li	s2,-1
-- 24a:	bfcd                	j	23c <stat+0x2a>
-+ 24a:	bfc5                	j	23a <stat+0x28>
- 
- 000000000000024c <atoi>:
- 
- int
- atoi(const char *s)
- {
-- 24c:	1141                	addi	sp,sp,-16
-+ 24c:	1141                	add	sp,sp,-16
-  24e:	e422                	sd	s0,8(sp)
-- 250:	0800                	addi	s0,sp,16
-+ 250:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
-  252:	00054683          	lbu	a3,0(a0)
-- 256:	fd06879b          	addiw	a5,a3,-48
-+ 256:	fd06879b          	addw	a5,a3,-48
-  25a:	0ff7f793          	zext.b	a5,a5
-  25e:	4625                	li	a2,9
-  260:	02f66863          	bltu	a2,a5,290 <atoi+0x44>
-@@ -404,21 +404,21 @@ atoi(const char *s)
-   n = 0;
-  266:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
-- 268:	0705                	addi	a4,a4,1
-- 26a:	0025179b          	slliw	a5,a0,0x2
-+ 268:	0705                	add	a4,a4,1
-+ 26a:	0025179b          	sllw	a5,a0,0x2
-  26e:	9fa9                	addw	a5,a5,a0
-- 270:	0017979b          	slliw	a5,a5,0x1
-+ 270:	0017979b          	sllw	a5,a5,0x1
-  274:	9fb5                	addw	a5,a5,a3
-- 276:	fd07851b          	addiw	a0,a5,-48
-+ 276:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
-  27a:	00074683          	lbu	a3,0(a4)
-- 27e:	fd06879b          	addiw	a5,a3,-48
-+ 27e:	fd06879b          	addw	a5,a3,-48
-  282:	0ff7f793          	zext.b	a5,a5
-  286:	fef671e3          	bgeu	a2,a5,268 <atoi+0x1c>
-   return n;
- }
-  28a:	6422                	ld	s0,8(sp)
-- 28c:	0141                	addi	sp,sp,16
-+ 28c:	0141                	add	sp,sp,16
-  28e:	8082                	ret
-   n = 0;
-  290:	4501                	li	a0,0
-@@ -429,9 +429,9 @@ atoi(const char *s)
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
-- 294:	1141                	addi	sp,sp,-16
-+ 294:	1141                	add	sp,sp,-16
-  296:	e422                	sd	s0,8(sp)
-- 298:	0800                	addi	s0,sp,16
-+ 298:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-@@ -441,18 +441,18 @@ memmove(void *vdst, const void *vsrc, int n)
-  29a:	02b57463          	bgeu	a0,a1,2c2 <memmove+0x2e>
-     while(n-- > 0)
-  29e:	00c05f63          	blez	a2,2bc <memmove+0x28>
-- 2a2:	1602                	slli	a2,a2,0x20
-- 2a4:	9201                	srli	a2,a2,0x20
-+ 2a2:	1602                	sll	a2,a2,0x20
-+ 2a4:	9201                	srl	a2,a2,0x20
-  2a6:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
-  2aa:	872a                	mv	a4,a0
-       *dst++ = *src++;
-- 2ac:	0585                	addi	a1,a1,1
-- 2ae:	0705                	addi	a4,a4,1
-+ 2ac:	0585                	add	a1,a1,1
-+ 2ae:	0705                	add	a4,a4,1
-  2b0:	fff5c683          	lbu	a3,-1(a1)
-  2b4:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
-- 2b8:	fef71ae3          	bne	a4,a5,2ac <memmove+0x18>
-+ 2b8:	fee79ae3          	bne	a5,a4,2ac <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-@@ -460,7 +460,7 @@ memmove(void *vdst, const void *vsrc, int n)
-   return vdst;
- }
-  2bc:	6422                	ld	s0,8(sp)
-- 2be:	0141                	addi	sp,sp,16
-+ 2be:	0141                	add	sp,sp,16
-  2c0:	8082                	ret
-     dst += n;
-  2c2:	00c50733          	add	a4,a0,a2
-@@ -468,14 +468,14 @@ memmove(void *vdst, const void *vsrc, int n)
-  2c6:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
-  2c8:	fec05ae3          	blez	a2,2bc <memmove+0x28>
-- 2cc:	fff6079b          	addiw	a5,a2,-1
-- 2d0:	1782                	slli	a5,a5,0x20
-- 2d2:	9381                	srli	a5,a5,0x20
-+ 2cc:	fff6079b          	addw	a5,a2,-1
-+ 2d0:	1782                	sll	a5,a5,0x20
-+ 2d2:	9381                	srl	a5,a5,0x20
-  2d4:	fff7c793          	not	a5,a5
-  2d8:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
-- 2da:	15fd                	addi	a1,a1,-1
-- 2dc:	177d                	addi	a4,a4,-1
-+ 2da:	15fd                	add	a1,a1,-1
-+ 2dc:	177d                	add	a4,a4,-1
-  2de:	0005c683          	lbu	a3,0(a1)
-  2e2:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
-@@ -487,16 +487,16 @@ memmove(void *vdst, const void *vsrc, int n)
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
-- 2ec:	1141                	addi	sp,sp,-16
-+ 2ec:	1141                	add	sp,sp,-16
-  2ee:	e422                	sd	s0,8(sp)
-- 2f0:	0800                	addi	s0,sp,16
-+ 2f0:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
-  2f2:	ca05                	beqz	a2,322 <memcmp+0x36>
-- 2f4:	fff6069b          	addiw	a3,a2,-1
-- 2f8:	1682                	slli	a3,a3,0x20
-- 2fa:	9281                	srli	a3,a3,0x20
-- 2fc:	0685                	addi	a3,a3,1
-+ 2f4:	fff6069b          	addw	a3,a2,-1
-+ 2f8:	1682                	sll	a3,a3,0x20
-+ 2fa:	9281                	srl	a3,a3,0x20
-+ 2fc:	0685                	add	a3,a3,1
-  2fe:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
-  300:	00054783          	lbu	a5,0(a0)
-@@ -505,9 +505,9 @@ memcmp(const void *s1, const void *s2, uint n)
-       return *p1 - *p2;
-     }
-     p1++;
-- 30c:	0505                	addi	a0,a0,1
-+ 30c:	0505                	add	a0,a0,1
-     p2++;
-- 30e:	0585                	addi	a1,a1,1
-+ 30e:	0585                	add	a1,a1,1
-   while (n-- > 0) {
-  310:	fed518e3          	bne	a0,a3,300 <memcmp+0x14>
-   }
-@@ -518,7 +518,7 @@ memcmp(const void *s1, const void *s2, uint n)
-  318:	40e7853b          	subw	a0,a5,a4
- }
-  31c:	6422                	ld	s0,8(sp)
-- 31e:	0141                	addi	sp,sp,16
-+ 31e:	0141                	add	sp,sp,16
-  320:	8082                	ret
-   return 0;
-  322:	4501                	li	a0,0
-@@ -529,16 +529,16 @@ memcmp(const void *s1, const void *s2, uint n)
- void *
- memcpy(void *dst, const void *src, uint n)
- {
-- 326:	1141                	addi	sp,sp,-16
-+ 326:	1141                	add	sp,sp,-16
-  328:	e406                	sd	ra,8(sp)
-  32a:	e022                	sd	s0,0(sp)
-- 32c:	0800                	addi	s0,sp,16
-+ 32c:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
-  32e:	f67ff0ef          	jal	294 <memmove>
- }
-  332:	60a2                	ld	ra,8(sp)
-  334:	6402                	ld	s0,0(sp)
-- 336:	0141                	addi	sp,sp,16
-+ 336:	0141                	add	sp,sp,16
-  338:	8082                	ret
- 
- 000000000000033a <fork>:
-@@ -760,19 +760,19 @@ static char digits[] = "0123456789ABCDEF";
- static void
- putc(int fd, char c)
- {
-- 3e2:	1101                	addi	sp,sp,-32
-+ 3e2:	1101                	add	sp,sp,-32
-  3e4:	ec06                	sd	ra,24(sp)
-  3e6:	e822                	sd	s0,16(sp)
-- 3e8:	1000                	addi	s0,sp,32
-+ 3e8:	1000                	add	s0,sp,32
-  3ea:	feb407a3          	sb	a1,-17(s0)
-   write(fd, &c, 1);
-  3ee:	4605                	li	a2,1
-- 3f0:	fef40593          	addi	a1,s0,-17
-+ 3f0:	fef40593          	add	a1,s0,-17
-  3f4:	f6fff0ef          	jal	362 <write>
- }
-  3f8:	60e2                	ld	ra,24(sp)
-  3fa:	6442                	ld	s0,16(sp)
-- 3fc:	6105                	addi	sp,sp,32
-+ 3fc:	6105                	add	sp,sp,32
-  3fe:	8082                	ret
- 
- 0000000000000400 <printint>:
-@@ -780,92 +780,92 @@ putc(int fd, char c)
- static void
- printint(int fd, int xx, int base, int sgn)
- {
-- 400:	7139                	addi	sp,sp,-64
-+ 400:	7139                	add	sp,sp,-64
-  402:	fc06                	sd	ra,56(sp)
-  404:	f822                	sd	s0,48(sp)
-  406:	f426                	sd	s1,40(sp)
-- 408:	0080                	addi	s0,sp,64
-- 40a:	84aa                	mv	s1,a0
-+ 408:	f04a                	sd	s2,32(sp)
-+ 40a:	ec4e                	sd	s3,24(sp)
-+ 40c:	0080                	add	s0,sp,64
-+ 40e:	84aa                	mv	s1,a0
-   char buf[16];
-   int i, neg;
-   uint x;
- 
-   neg = 0;
-   if(sgn && xx < 0){
-- 40c:	c299                	beqz	a3,412 <printint+0x12>
-- 40e:	0805c963          	bltz	a1,4a0 <printint+0xa0>
-+ 410:	c299                	beqz	a3,416 <printint+0x16>
-+ 412:	0805c763          	bltz	a1,4a0 <printint+0xa0>
-     neg = 1;
-     x = -xx;
-   } else {
-     x = xx;
-- 412:	2581                	sext.w	a1,a1
-+ 416:	2581                	sext.w	a1,a1
-   neg = 0;
-- 414:	4881                	li	a7,0
-- 416:	fc040693          	addi	a3,s0,-64
-+ 418:	4881                	li	a7,0
-+ 41a:	fc040693          	add	a3,s0,-64
-   }
- 
-   i = 0;
-- 41a:	4701                	li	a4,0
-+ 41e:	4701                	li	a4,0
-   do{
-     buf[i++] = digits[x % base];
-- 41c:	2601                	sext.w	a2,a2
-- 41e:	00000517          	auipc	a0,0x0
-- 422:	53a50513          	addi	a0,a0,1338 # 958 <digits>
-- 426:	883a                	mv	a6,a4
-- 428:	2705                	addiw	a4,a4,1
-- 42a:	02c5f7bb          	remuw	a5,a1,a2
-- 42e:	1782                	slli	a5,a5,0x20
-- 430:	9381                	srli	a5,a5,0x20
-- 432:	97aa                	add	a5,a5,a0
-- 434:	0007c783          	lbu	a5,0(a5)
-- 438:	00f68023          	sb	a5,0(a3)
-+ 420:	2601                	sext.w	a2,a2
-+ 422:	00000517          	auipc	a0,0x0
-+ 426:	51650513          	add	a0,a0,1302 # 938 <digits>
-+ 42a:	883a                	mv	a6,a4
-+ 42c:	2705                	addw	a4,a4,1
-+ 42e:	02c5f7bb          	remuw	a5,a1,a2
-+ 432:	1782                	sll	a5,a5,0x20
-+ 434:	9381                	srl	a5,a5,0x20
-+ 436:	97aa                	add	a5,a5,a0
-+ 438:	0007c783          	lbu	a5,0(a5)
-+ 43c:	00f68023          	sb	a5,0(a3)
-   }while((x /= base) != 0);
-- 43c:	0005879b          	sext.w	a5,a1
-- 440:	02c5d5bb          	divuw	a1,a1,a2
-- 444:	0685                	addi	a3,a3,1
-- 446:	fec7f0e3          	bgeu	a5,a2,426 <printint+0x26>
-+ 440:	0005879b          	sext.w	a5,a1
-+ 444:	02c5d5bb          	divuw	a1,a1,a2
-+ 448:	0685                	add	a3,a3,1
-+ 44a:	fec7f0e3          	bgeu	a5,a2,42a <printint+0x2a>
-   if(neg)
-- 44a:	00088c63          	beqz	a7,462 <printint+0x62>
-+ 44e:	00088c63          	beqz	a7,466 <printint+0x66>
-     buf[i++] = '-';
-- 44e:	fd070793          	addi	a5,a4,-48
-- 452:	00878733          	add	a4,a5,s0
-- 456:	02d00793          	li	a5,45
-- 45a:	fef70823          	sb	a5,-16(a4)
-- 45e:	0028071b          	addiw	a4,a6,2
-+ 452:	fd070793          	add	a5,a4,-48
-+ 456:	00878733          	add	a4,a5,s0
-+ 45a:	02d00793          	li	a5,45
-+ 45e:	fef70823          	sb	a5,-16(a4)
-+ 462:	0028071b          	addw	a4,a6,2
- 
-   while(--i >= 0)
-- 462:	02e05a63          	blez	a4,496 <printint+0x96>
-- 466:	f04a                	sd	s2,32(sp)
-- 468:	ec4e                	sd	s3,24(sp)
-- 46a:	fc040793          	addi	a5,s0,-64
-+ 466:	02e05663          	blez	a4,492 <printint+0x92>
-+ 46a:	fc040793          	add	a5,s0,-64
-  46e:	00e78933          	add	s2,a5,a4
-- 472:	fff78993          	addi	s3,a5,-1
-+ 472:	fff78993          	add	s3,a5,-1
-  476:	99ba                	add	s3,s3,a4
-- 478:	377d                	addiw	a4,a4,-1
-- 47a:	1702                	slli	a4,a4,0x20
-- 47c:	9301                	srli	a4,a4,0x20
-+ 478:	377d                	addw	a4,a4,-1
-+ 47a:	1702                	sll	a4,a4,0x20
-+ 47c:	9301                	srl	a4,a4,0x20
-  47e:	40e989b3          	sub	s3,s3,a4
-     putc(fd, buf[i]);
-  482:	fff94583          	lbu	a1,-1(s2)
-  486:	8526                	mv	a0,s1
-  488:	f5bff0ef          	jal	3e2 <putc>
-   while(--i >= 0)
-- 48c:	197d                	addi	s2,s2,-1
-+ 48c:	197d                	add	s2,s2,-1
-  48e:	ff391ae3          	bne	s2,s3,482 <printint+0x82>
-- 492:	7902                	ld	s2,32(sp)
-- 494:	69e2                	ld	s3,24(sp)
- }
-- 496:	70e2                	ld	ra,56(sp)
-- 498:	7442                	ld	s0,48(sp)
-- 49a:	74a2                	ld	s1,40(sp)
-- 49c:	6121                	addi	sp,sp,64
-+ 492:	70e2                	ld	ra,56(sp)
-+ 494:	7442                	ld	s0,48(sp)
-+ 496:	74a2                	ld	s1,40(sp)
-+ 498:	7902                	ld	s2,32(sp)
-+ 49a:	69e2                	ld	s3,24(sp)
-+ 49c:	6121                	add	sp,sp,64
-  49e:	8082                	ret
-     x = -xx;
-  4a0:	40b005bb          	negw	a1,a1
-     neg = 1;
-  4a4:	4885                	li	a7,1
-     x = -xx;
-- 4a6:	bf85                	j	416 <printint+0x16>
-+ 4a6:	bf95                	j	41a <printint+0x1a>
- 
- 00000000000004a8 <vprintf>:
- }
-@@ -874,320 +874,320 @@ printint(int fd, int xx, int base, int sgn)
- void
- vprintf(int fd, const char *fmt, va_list ap)
- {
-- 4a8:	711d                	addi	sp,sp,-96
-+ 4a8:	711d                	add	sp,sp,-96
-  4aa:	ec86                	sd	ra,88(sp)
-  4ac:	e8a2                	sd	s0,80(sp)
-- 4ae:	e0ca                	sd	s2,64(sp)
-- 4b0:	1080                	addi	s0,sp,96
-+ 4ae:	e4a6                	sd	s1,72(sp)
-+ 4b0:	e0ca                	sd	s2,64(sp)
-+ 4b2:	fc4e                	sd	s3,56(sp)
-+ 4b4:	f852                	sd	s4,48(sp)
-+ 4b6:	f456                	sd	s5,40(sp)
-+ 4b8:	f05a                	sd	s6,32(sp)
-+ 4ba:	ec5e                	sd	s7,24(sp)
-+ 4bc:	e862                	sd	s8,16(sp)
-+ 4be:	e466                	sd	s9,8(sp)
-+ 4c0:	e06a                	sd	s10,0(sp)
-+ 4c2:	1080                	add	s0,sp,96
-   char *s;
-   int c0, c1, c2, i, state;
- 
-   state = 0;
-   for(i = 0; fmt[i]; i++){
-- 4b2:	0005c903          	lbu	s2,0(a1)
-- 4b6:	26090863          	beqz	s2,726 <vprintf+0x27e>
-- 4ba:	e4a6                	sd	s1,72(sp)
-- 4bc:	fc4e                	sd	s3,56(sp)
-- 4be:	f852                	sd	s4,48(sp)
-- 4c0:	f456                	sd	s5,40(sp)
-- 4c2:	f05a                	sd	s6,32(sp)
-- 4c4:	ec5e                	sd	s7,24(sp)
-- 4c6:	e862                	sd	s8,16(sp)
-- 4c8:	e466                	sd	s9,8(sp)
-- 4ca:	8b2a                	mv	s6,a0
-- 4cc:	8a2e                	mv	s4,a1
-- 4ce:	8bb2                	mv	s7,a2
-+ 4c4:	0005c903          	lbu	s2,0(a1)
-+ 4c8:	24090763          	beqz	s2,716 <vprintf+0x26e>
-+ 4cc:	8b2a                	mv	s6,a0
-+ 4ce:	8a2e                	mv	s4,a1
-+ 4d0:	8bb2                	mv	s7,a2
-   state = 0;
-- 4d0:	4981                	li	s3,0
-+ 4d2:	4981                	li	s3,0
-   for(i = 0; fmt[i]; i++){
-- 4d2:	4481                	li	s1,0
-- 4d4:	4701                	li	a4,0
-+ 4d4:	4481                	li	s1,0
-+ 4d6:	4701                	li	a4,0
-       if(c0 == '%'){
-         state = '%';
-       } else {
-         putc(fd, c0);
-       }
-     } else if(state == '%'){
-- 4d6:	02500a93          	li	s5,37
-+ 4d8:	02500a93          	li	s5,37
-       c1 = c2 = 0;
-       if(c0) c1 = fmt[i+1] & 0xff;
-       if(c1) c2 = fmt[i+2] & 0xff;
-       if(c0 == 'd'){
-- 4da:	06400c13          	li	s8,100
-+ 4dc:	06400c13          	li	s8,100
-         printint(fd, va_arg(ap, int), 10, 1);
-       } else if(c0 == 'l' && c1 == 'd'){
-- 4de:	06c00c93          	li	s9,108
-- 4e2:	a005                	j	502 <vprintf+0x5a>
-+ 4e0:	06c00c93          	li	s9,108
-+ 4e4:	a005                	j	504 <vprintf+0x5c>
-         putc(fd, c0);
-- 4e4:	85ca                	mv	a1,s2
-- 4e6:	855a                	mv	a0,s6
-- 4e8:	efbff0ef          	jal	3e2 <putc>
-- 4ec:	a019                	j	4f2 <vprintf+0x4a>
-+ 4e6:	85ca                	mv	a1,s2
-+ 4e8:	855a                	mv	a0,s6
-+ 4ea:	ef9ff0ef          	jal	3e2 <putc>
-+ 4ee:	a019                	j	4f4 <vprintf+0x4c>
-     } else if(state == '%'){
-- 4ee:	03598263          	beq	s3,s5,512 <vprintf+0x6a>
-+ 4f0:	03598263          	beq	s3,s5,514 <vprintf+0x6c>
-   for(i = 0; fmt[i]; i++){
-- 4f2:	2485                	addiw	s1,s1,1
-- 4f4:	8726                	mv	a4,s1
-- 4f6:	009a07b3          	add	a5,s4,s1
-- 4fa:	0007c903          	lbu	s2,0(a5)
-- 4fe:	20090c63          	beqz	s2,716 <vprintf+0x26e>
-+ 4f4:	2485                	addw	s1,s1,1
-+ 4f6:	8726                	mv	a4,s1
-+ 4f8:	009a07b3          	add	a5,s4,s1
-+ 4fc:	0007c903          	lbu	s2,0(a5)
-+ 500:	20090b63          	beqz	s2,716 <vprintf+0x26e>
-     c0 = fmt[i] & 0xff;
-- 502:	0009079b          	sext.w	a5,s2
-+ 504:	0009079b          	sext.w	a5,s2
-     if(state == 0){
-- 506:	fe0994e3          	bnez	s3,4ee <vprintf+0x46>
-+ 508:	fe0994e3          	bnez	s3,4f0 <vprintf+0x48>
-       if(c0 == '%'){
-- 50a:	fd579de3          	bne	a5,s5,4e4 <vprintf+0x3c>
-+ 50c:	fd579de3          	bne	a5,s5,4e6 <vprintf+0x3e>
-         state = '%';
-- 50e:	89be                	mv	s3,a5
-- 510:	b7cd                	j	4f2 <vprintf+0x4a>
-+ 510:	89be                	mv	s3,a5
-+ 512:	b7cd                	j	4f4 <vprintf+0x4c>
-       if(c0) c1 = fmt[i+1] & 0xff;
-- 512:	00ea06b3          	add	a3,s4,a4
-- 516:	0016c683          	lbu	a3,1(a3)
-+ 514:	c7c9                	beqz	a5,59e <vprintf+0xf6>
-+ 516:	00ea06b3          	add	a3,s4,a4
-+ 51a:	0016c683          	lbu	a3,1(a3)
-       c1 = c2 = 0;
-- 51a:	8636                	mv	a2,a3
-+ 51e:	8636                	mv	a2,a3
-       if(c1) c2 = fmt[i+2] & 0xff;
-- 51c:	c681                	beqz	a3,524 <vprintf+0x7c>
-- 51e:	9752                	add	a4,a4,s4
-- 520:	00274603          	lbu	a2,2(a4)
-+ 520:	c681                	beqz	a3,528 <vprintf+0x80>
-+ 522:	9752                	add	a4,a4,s4
-+ 524:	00274603          	lbu	a2,2(a4)
-       if(c0 == 'd'){
-- 524:	03878f63          	beq	a5,s8,562 <vprintf+0xba>
-+ 528:	03878f63          	beq	a5,s8,566 <vprintf+0xbe>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 528:	05978963          	beq	a5,s9,57a <vprintf+0xd2>
-+ 52c:	05978963          	beq	a5,s9,57e <vprintf+0xd6>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 2;
-       } else if(c0 == 'u'){
-- 52c:	07500713          	li	a4,117
-- 530:	0ee78363          	beq	a5,a4,616 <vprintf+0x16e>
-+ 530:	07500713          	li	a4,117
-+ 534:	0ee78363          	beq	a5,a4,61a <vprintf+0x172>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 2;
-       } else if(c0 == 'x'){
-- 534:	07800713          	li	a4,120
-- 538:	12e78563          	beq	a5,a4,662 <vprintf+0x1ba>
-+ 538:	07800713          	li	a4,120
-+ 53c:	12e78563          	beq	a5,a4,666 <vprintf+0x1be>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 2;
-       } else if(c0 == 'p'){
-- 53c:	07000713          	li	a4,112
-- 540:	14e78a63          	beq	a5,a4,694 <vprintf+0x1ec>
-+ 540:	07000713          	li	a4,112
-+ 544:	14e78a63          	beq	a5,a4,698 <vprintf+0x1f0>
-         printptr(fd, va_arg(ap, uint64));
-       } else if(c0 == 's'){
-- 544:	07300713          	li	a4,115
-- 548:	18e78a63          	beq	a5,a4,6dc <vprintf+0x234>
-+ 548:	07300713          	li	a4,115
-+ 54c:	18e78863          	beq	a5,a4,6dc <vprintf+0x234>
-         if((s = va_arg(ap, char*)) == 0)
-           s = "(null)";
-         for(; *s; s++)
-           putc(fd, *s);
-       } else if(c0 == '%'){
-- 54c:	02500713          	li	a4,37
-- 550:	04e79563          	bne	a5,a4,59a <vprintf+0xf2>
-+ 550:	02500713          	li	a4,37
-+ 554:	04e79563          	bne	a5,a4,59e <vprintf+0xf6>
-         putc(fd, '%');
-- 554:	02500593          	li	a1,37
-- 558:	855a                	mv	a0,s6
-- 55a:	e89ff0ef          	jal	3e2 <putc>
-+ 558:	02500593          	li	a1,37
-+ 55c:	855a                	mv	a0,s6
-+ 55e:	e85ff0ef          	jal	3e2 <putc>
-         /* Unknown % sequence.  Print it to draw attention. */
-         putc(fd, '%');
-         putc(fd, c);
-       }
- #endif
-       state = 0;
-- 55e:	4981                	li	s3,0
-- 560:	bf49                	j	4f2 <vprintf+0x4a>
-+ 562:	4981                	li	s3,0
-+ 564:	bf41                	j	4f4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 1);
-- 562:	008b8913          	addi	s2,s7,8
-- 566:	4685                	li	a3,1
-- 568:	4629                	li	a2,10
-- 56a:	000ba583          	lw	a1,0(s7)
-- 56e:	855a                	mv	a0,s6
-- 570:	e91ff0ef          	jal	400 <printint>
-- 574:	8bca                	mv	s7,s2
-+ 566:	008b8913          	add	s2,s7,8
-+ 56a:	4685                	li	a3,1
-+ 56c:	4629                	li	a2,10
-+ 56e:	000ba583          	lw	a1,0(s7)
-+ 572:	855a                	mv	a0,s6
-+ 574:	e8dff0ef          	jal	400 <printint>
-+ 578:	8bca                	mv	s7,s2
-       state = 0;
-- 576:	4981                	li	s3,0
-- 578:	bfad                	j	4f2 <vprintf+0x4a>
-+ 57a:	4981                	li	s3,0
-+ 57c:	bfa5                	j	4f4 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 57a:	06400793          	li	a5,100
-- 57e:	02f68963          	beq	a3,a5,5b0 <vprintf+0x108>
-+ 57e:	06400793          	li	a5,100
-+ 582:	02f68963          	beq	a3,a5,5b4 <vprintf+0x10c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 582:	06c00793          	li	a5,108
-- 586:	04f68263          	beq	a3,a5,5ca <vprintf+0x122>
-+ 586:	06c00793          	li	a5,108
-+ 58a:	04f68263          	beq	a3,a5,5ce <vprintf+0x126>
-       } else if(c0 == 'l' && c1 == 'u'){
-- 58a:	07500793          	li	a5,117
-- 58e:	0af68063          	beq	a3,a5,62e <vprintf+0x186>
-+ 58e:	07500793          	li	a5,117
-+ 592:	0af68063          	beq	a3,a5,632 <vprintf+0x18a>
-       } else if(c0 == 'l' && c1 == 'x'){
-- 592:	07800793          	li	a5,120
-- 596:	0ef68263          	beq	a3,a5,67a <vprintf+0x1d2>
-+ 596:	07800793          	li	a5,120
-+ 59a:	0ef68263          	beq	a3,a5,67e <vprintf+0x1d6>
-         putc(fd, '%');
-- 59a:	02500593          	li	a1,37
-- 59e:	855a                	mv	a0,s6
-- 5a0:	e43ff0ef          	jal	3e2 <putc>
-+ 59e:	02500593          	li	a1,37
-+ 5a2:	855a                	mv	a0,s6
-+ 5a4:	e3fff0ef          	jal	3e2 <putc>
-         putc(fd, c0);
-- 5a4:	85ca                	mv	a1,s2
-- 5a6:	855a                	mv	a0,s6
-- 5a8:	e3bff0ef          	jal	3e2 <putc>
-+ 5a8:	85ca                	mv	a1,s2
-+ 5aa:	855a                	mv	a0,s6
-+ 5ac:	e37ff0ef          	jal	3e2 <putc>
-       state = 0;
-- 5ac:	4981                	li	s3,0
-- 5ae:	b791                	j	4f2 <vprintf+0x4a>
-+ 5b0:	4981                	li	s3,0
-+ 5b2:	b789                	j	4f4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 5b0:	008b8913          	addi	s2,s7,8
-- 5b4:	4685                	li	a3,1
-- 5b6:	4629                	li	a2,10
-- 5b8:	000ba583          	lw	a1,0(s7)
-- 5bc:	855a                	mv	a0,s6
-- 5be:	e43ff0ef          	jal	400 <printint>
-+ 5b4:	008b8913          	add	s2,s7,8
-+ 5b8:	4685                	li	a3,1
-+ 5ba:	4629                	li	a2,10
-+ 5bc:	000ba583          	lw	a1,0(s7)
-+ 5c0:	855a                	mv	a0,s6
-+ 5c2:	e3fff0ef          	jal	400 <printint>
-         i += 1;
-- 5c2:	2485                	addiw	s1,s1,1
-+ 5c6:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 5c4:	8bca                	mv	s7,s2
-+ 5c8:	8bca                	mv	s7,s2
-       state = 0;
-- 5c6:	4981                	li	s3,0
-+ 5ca:	4981                	li	s3,0
-         i += 1;
-- 5c8:	b72d                	j	4f2 <vprintf+0x4a>
-+ 5cc:	b725                	j	4f4 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 5ca:	06400793          	li	a5,100
-- 5ce:	02f60763          	beq	a2,a5,5fc <vprintf+0x154>
-+ 5ce:	06400793          	li	a5,100
-+ 5d2:	02f60763          	beq	a2,a5,600 <vprintf+0x158>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-- 5d2:	07500793          	li	a5,117
-- 5d6:	06f60963          	beq	a2,a5,648 <vprintf+0x1a0>
-+ 5d6:	07500793          	li	a5,117
-+ 5da:	06f60963          	beq	a2,a5,64c <vprintf+0x1a4>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-- 5da:	07800793          	li	a5,120
-- 5de:	faf61ee3          	bne	a2,a5,59a <vprintf+0xf2>
-+ 5de:	07800793          	li	a5,120
-+ 5e2:	faf61ee3          	bne	a2,a5,59e <vprintf+0xf6>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 5e2:	008b8913          	addi	s2,s7,8
-- 5e6:	4681                	li	a3,0
-- 5e8:	4641                	li	a2,16
-- 5ea:	000ba583          	lw	a1,0(s7)
-- 5ee:	855a                	mv	a0,s6
-- 5f0:	e11ff0ef          	jal	400 <printint>
-+ 5e6:	008b8913          	add	s2,s7,8
-+ 5ea:	4681                	li	a3,0
-+ 5ec:	4641                	li	a2,16
-+ 5ee:	000ba583          	lw	a1,0(s7)
-+ 5f2:	855a                	mv	a0,s6
-+ 5f4:	e0dff0ef          	jal	400 <printint>
-         i += 2;
-- 5f4:	2489                	addiw	s1,s1,2
-+ 5f8:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 5f6:	8bca                	mv	s7,s2
-+ 5fa:	8bca                	mv	s7,s2
-       state = 0;
-- 5f8:	4981                	li	s3,0
-+ 5fc:	4981                	li	s3,0
-         i += 2;
-- 5fa:	bde5                	j	4f2 <vprintf+0x4a>
-+ 5fe:	bddd                	j	4f4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 5fc:	008b8913          	addi	s2,s7,8
-- 600:	4685                	li	a3,1
-- 602:	4629                	li	a2,10
-- 604:	000ba583          	lw	a1,0(s7)
-- 608:	855a                	mv	a0,s6
-- 60a:	df7ff0ef          	jal	400 <printint>
-+ 600:	008b8913          	add	s2,s7,8
-+ 604:	4685                	li	a3,1
-+ 606:	4629                	li	a2,10
-+ 608:	000ba583          	lw	a1,0(s7)
-+ 60c:	855a                	mv	a0,s6
-+ 60e:	df3ff0ef          	jal	400 <printint>
-         i += 2;
-- 60e:	2489                	addiw	s1,s1,2
-+ 612:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 610:	8bca                	mv	s7,s2
-+ 614:	8bca                	mv	s7,s2
-       state = 0;
-- 612:	4981                	li	s3,0
-+ 616:	4981                	li	s3,0
-         i += 2;
-- 614:	bdf9                	j	4f2 <vprintf+0x4a>
-+ 618:	bdf1                	j	4f4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 0);
-- 616:	008b8913          	addi	s2,s7,8
-- 61a:	4681                	li	a3,0
-- 61c:	4629                	li	a2,10
-- 61e:	000ba583          	lw	a1,0(s7)
-- 622:	855a                	mv	a0,s6
-- 624:	dddff0ef          	jal	400 <printint>
-- 628:	8bca                	mv	s7,s2
-+ 61a:	008b8913          	add	s2,s7,8
-+ 61e:	4681                	li	a3,0
-+ 620:	4629                	li	a2,10
-+ 622:	000ba583          	lw	a1,0(s7)
-+ 626:	855a                	mv	a0,s6
-+ 628:	dd9ff0ef          	jal	400 <printint>
-+ 62c:	8bca                	mv	s7,s2
-       state = 0;
-- 62a:	4981                	li	s3,0
-- 62c:	b5d9                	j	4f2 <vprintf+0x4a>
-+ 62e:	4981                	li	s3,0
-+ 630:	b5d1                	j	4f4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 62e:	008b8913          	addi	s2,s7,8
-- 632:	4681                	li	a3,0
-- 634:	4629                	li	a2,10
-- 636:	000ba583          	lw	a1,0(s7)
-- 63a:	855a                	mv	a0,s6
-- 63c:	dc5ff0ef          	jal	400 <printint>
-+ 632:	008b8913          	add	s2,s7,8
-+ 636:	4681                	li	a3,0
-+ 638:	4629                	li	a2,10
-+ 63a:	000ba583          	lw	a1,0(s7)
-+ 63e:	855a                	mv	a0,s6
-+ 640:	dc1ff0ef          	jal	400 <printint>
-         i += 1;
-- 640:	2485                	addiw	s1,s1,1
-+ 644:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 642:	8bca                	mv	s7,s2
-+ 646:	8bca                	mv	s7,s2
-       state = 0;
-- 644:	4981                	li	s3,0
-+ 648:	4981                	li	s3,0
-         i += 1;
-- 646:	b575                	j	4f2 <vprintf+0x4a>
-+ 64a:	b56d                	j	4f4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 648:	008b8913          	addi	s2,s7,8
-- 64c:	4681                	li	a3,0
-- 64e:	4629                	li	a2,10
-- 650:	000ba583          	lw	a1,0(s7)
-- 654:	855a                	mv	a0,s6
-- 656:	dabff0ef          	jal	400 <printint>
-+ 64c:	008b8913          	add	s2,s7,8
-+ 650:	4681                	li	a3,0
-+ 652:	4629                	li	a2,10
-+ 654:	000ba583          	lw	a1,0(s7)
-+ 658:	855a                	mv	a0,s6
-+ 65a:	da7ff0ef          	jal	400 <printint>
-         i += 2;
-- 65a:	2489                	addiw	s1,s1,2
-+ 65e:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 65c:	8bca                	mv	s7,s2
-+ 660:	8bca                	mv	s7,s2
-       state = 0;
-- 65e:	4981                	li	s3,0
-+ 662:	4981                	li	s3,0
-         i += 2;
-- 660:	bd49                	j	4f2 <vprintf+0x4a>
-+ 664:	bd41                	j	4f4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 16, 0);
-- 662:	008b8913          	addi	s2,s7,8
-- 666:	4681                	li	a3,0
-- 668:	4641                	li	a2,16
-- 66a:	000ba583          	lw	a1,0(s7)
-- 66e:	855a                	mv	a0,s6
-- 670:	d91ff0ef          	jal	400 <printint>
-- 674:	8bca                	mv	s7,s2
-+ 666:	008b8913          	add	s2,s7,8
-+ 66a:	4681                	li	a3,0
-+ 66c:	4641                	li	a2,16
-+ 66e:	000ba583          	lw	a1,0(s7)
-+ 672:	855a                	mv	a0,s6
-+ 674:	d8dff0ef          	jal	400 <printint>
-+ 678:	8bca                	mv	s7,s2
-       state = 0;
-- 676:	4981                	li	s3,0
-- 678:	bdad                	j	4f2 <vprintf+0x4a>
-+ 67a:	4981                	li	s3,0
-+ 67c:	bda5                	j	4f4 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 67a:	008b8913          	addi	s2,s7,8
-- 67e:	4681                	li	a3,0
-- 680:	4641                	li	a2,16
-- 682:	000ba583          	lw	a1,0(s7)
-- 686:	855a                	mv	a0,s6
-- 688:	d79ff0ef          	jal	400 <printint>
-+ 67e:	008b8913          	add	s2,s7,8
-+ 682:	4681                	li	a3,0
-+ 684:	4641                	li	a2,16
-+ 686:	000ba583          	lw	a1,0(s7)
-+ 68a:	855a                	mv	a0,s6
-+ 68c:	d75ff0ef          	jal	400 <printint>
-         i += 1;
-- 68c:	2485                	addiw	s1,s1,1
-+ 690:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 68e:	8bca                	mv	s7,s2
-+ 692:	8bca                	mv	s7,s2
-       state = 0;
-- 690:	4981                	li	s3,0
-+ 694:	4981                	li	s3,0
-         i += 1;
-- 692:	b585                	j	4f2 <vprintf+0x4a>
-- 694:	e06a                	sd	s10,0(sp)
-+ 696:	bdb9                	j	4f4 <vprintf+0x4c>
-         printptr(fd, va_arg(ap, uint64));
-- 696:	008b8d13          	addi	s10,s7,8
-- 69a:	000bb983          	ld	s3,0(s7)
-+ 698:	008b8d13          	add	s10,s7,8
-+ 69c:	000bb983          	ld	s3,0(s7)
-   putc(fd, '0');
-- 69e:	03000593          	li	a1,48
-- 6a2:	855a                	mv	a0,s6
-- 6a4:	d3fff0ef          	jal	3e2 <putc>
-+ 6a0:	03000593          	li	a1,48
-+ 6a4:	855a                	mv	a0,s6
-+ 6a6:	d3dff0ef          	jal	3e2 <putc>
-   putc(fd, 'x');
-- 6a8:	07800593          	li	a1,120
-- 6ac:	855a                	mv	a0,s6
-- 6ae:	d35ff0ef          	jal	3e2 <putc>
-- 6b2:	4941                	li	s2,16
-+ 6aa:	07800593          	li	a1,120
-+ 6ae:	855a                	mv	a0,s6
-+ 6b0:	d33ff0ef          	jal	3e2 <putc>
-+ 6b4:	4941                	li	s2,16
-     putc(fd, digits[x >> (sizeof(uint64) * 8 - 4)]);
-- 6b4:	00000b97          	auipc	s7,0x0
-- 6b8:	2a4b8b93          	addi	s7,s7,676 # 958 <digits>
-- 6bc:	03c9d793          	srli	a5,s3,0x3c
-- 6c0:	97de                	add	a5,a5,s7
-- 6c2:	0007c583          	lbu	a1,0(a5)
-- 6c6:	855a                	mv	a0,s6
-- 6c8:	d1bff0ef          	jal	3e2 <putc>
-+ 6b6:	00000b97          	auipc	s7,0x0
-+ 6ba:	282b8b93          	add	s7,s7,642 # 938 <digits>
-+ 6be:	03c9d793          	srl	a5,s3,0x3c
-+ 6c2:	97de                	add	a5,a5,s7
-+ 6c4:	0007c583          	lbu	a1,0(a5)
-+ 6c8:	855a                	mv	a0,s6
-+ 6ca:	d19ff0ef          	jal	3e2 <putc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
-- 6cc:	0992                	slli	s3,s3,0x4
-- 6ce:	397d                	addiw	s2,s2,-1
-- 6d0:	fe0916e3          	bnez	s2,6bc <vprintf+0x214>
-+ 6ce:	0992                	sll	s3,s3,0x4
-+ 6d0:	397d                	addw	s2,s2,-1
-+ 6d2:	fe0916e3          	bnez	s2,6be <vprintf+0x216>
-         printptr(fd, va_arg(ap, uint64));
-- 6d4:	8bea                	mv	s7,s10
-+ 6d6:	8bea                	mv	s7,s10
-       state = 0;
-- 6d6:	4981                	li	s3,0
-- 6d8:	6d02                	ld	s10,0(sp)
-- 6da:	bd21                	j	4f2 <vprintf+0x4a>
-+ 6d8:	4981                	li	s3,0
-+ 6da:	bd29                	j	4f4 <vprintf+0x4c>
-         if((s = va_arg(ap, char*)) == 0)
-- 6dc:	008b8993          	addi	s3,s7,8
-+ 6dc:	008b8993          	add	s3,s7,8
-  6e0:	000bb903          	ld	s2,0(s7)
-  6e4:	00090f63          	beqz	s2,702 <vprintf+0x25a>
-         for(; *s; s++)
-@@ -1197,17 +1197,17 @@ vprintf(int fd, const char *fmt, va_list ap)
-  6ee:	855a                	mv	a0,s6
-  6f0:	cf3ff0ef          	jal	3e2 <putc>
-         for(; *s; s++)
-- 6f4:	0905                	addi	s2,s2,1
-+ 6f4:	0905                	add	s2,s2,1
-  6f6:	00094583          	lbu	a1,0(s2)
-  6fa:	f9f5                	bnez	a1,6ee <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-  6fc:	8bce                	mv	s7,s3
-       state = 0;
-  6fe:	4981                	li	s3,0
-- 700:	bbcd                	j	4f2 <vprintf+0x4a>
-+ 700:	bbd5                	j	4f4 <vprintf+0x4c>
-           s = "(null)";
-  702:	00000917          	auipc	s2,0x0
-- 706:	24e90913          	addi	s2,s2,590 # 950 <malloc+0x142>
-+ 706:	22e90913          	add	s2,s2,558 # 930 <malloc+0x120>
-         for(; *s; s++)
-  70a:	02800593          	li	a1,40
-  70e:	b7c5                	j	6ee <vprintf+0x246>
-@@ -1215,298 +1215,288 @@ vprintf(int fd, const char *fmt, va_list ap)
-  710:	8bce                	mv	s7,s3
-       state = 0;
-  712:	4981                	li	s3,0
-- 714:	bbf9                	j	4f2 <vprintf+0x4a>
-- 716:	64a6                	ld	s1,72(sp)
-- 718:	79e2                	ld	s3,56(sp)
-- 71a:	7a42                	ld	s4,48(sp)
-- 71c:	7aa2                	ld	s5,40(sp)
-- 71e:	7b02                	ld	s6,32(sp)
-- 720:	6be2                	ld	s7,24(sp)
-- 722:	6c42                	ld	s8,16(sp)
-- 724:	6ca2                	ld	s9,8(sp)
-+ 714:	b3c5                	j	4f4 <vprintf+0x4c>
-     }
-   }
- }
-- 726:	60e6                	ld	ra,88(sp)
-- 728:	6446                	ld	s0,80(sp)
-- 72a:	6906                	ld	s2,64(sp)
-- 72c:	6125                	addi	sp,sp,96
-- 72e:	8082                	ret
--
--0000000000000730 <fprintf>:
-+ 716:	60e6                	ld	ra,88(sp)
-+ 718:	6446                	ld	s0,80(sp)
-+ 71a:	64a6                	ld	s1,72(sp)
-+ 71c:	6906                	ld	s2,64(sp)
-+ 71e:	79e2                	ld	s3,56(sp)
-+ 720:	7a42                	ld	s4,48(sp)
-+ 722:	7aa2                	ld	s5,40(sp)
-+ 724:	7b02                	ld	s6,32(sp)
-+ 726:	6be2                	ld	s7,24(sp)
-+ 728:	6c42                	ld	s8,16(sp)
-+ 72a:	6ca2                	ld	s9,8(sp)
-+ 72c:	6d02                	ld	s10,0(sp)
-+ 72e:	6125                	add	sp,sp,96
-+ 730:	8082                	ret
-+
-+0000000000000732 <fprintf>:
- 
- void
- fprintf(int fd, const char *fmt, ...)
- {
-- 730:	715d                	addi	sp,sp,-80
-- 732:	ec06                	sd	ra,24(sp)
-- 734:	e822                	sd	s0,16(sp)
-- 736:	1000                	addi	s0,sp,32
-- 738:	e010                	sd	a2,0(s0)
-- 73a:	e414                	sd	a3,8(s0)
-- 73c:	e818                	sd	a4,16(s0)
-- 73e:	ec1c                	sd	a5,24(s0)
-- 740:	03043023          	sd	a6,32(s0)
-- 744:	03143423          	sd	a7,40(s0)
-+ 732:	715d                	add	sp,sp,-80
-+ 734:	ec06                	sd	ra,24(sp)
-+ 736:	e822                	sd	s0,16(sp)
-+ 738:	1000                	add	s0,sp,32
-+ 73a:	e010                	sd	a2,0(s0)
-+ 73c:	e414                	sd	a3,8(s0)
-+ 73e:	e818                	sd	a4,16(s0)
-+ 740:	ec1c                	sd	a5,24(s0)
-+ 742:	03043023          	sd	a6,32(s0)
-+ 746:	03143423          	sd	a7,40(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 748:	fe843423          	sd	s0,-24(s0)
-+ 74a:	fe843423          	sd	s0,-24(s0)
-   vprintf(fd, fmt, ap);
-- 74c:	8622                	mv	a2,s0
-- 74e:	d5bff0ef          	jal	4a8 <vprintf>
-+ 74e:	8622                	mv	a2,s0
-+ 750:	d59ff0ef          	jal	4a8 <vprintf>
- }
-- 752:	60e2                	ld	ra,24(sp)
-- 754:	6442                	ld	s0,16(sp)
-- 756:	6161                	addi	sp,sp,80
-- 758:	8082                	ret
-+ 754:	60e2                	ld	ra,24(sp)
-+ 756:	6442                	ld	s0,16(sp)
-+ 758:	6161                	add	sp,sp,80
-+ 75a:	8082                	ret
- 
--000000000000075a <printf>:
-+000000000000075c <printf>:
- 
- void
- printf(const char *fmt, ...)
- {
-- 75a:	711d                	addi	sp,sp,-96
-- 75c:	ec06                	sd	ra,24(sp)
-- 75e:	e822                	sd	s0,16(sp)
-- 760:	1000                	addi	s0,sp,32
-- 762:	e40c                	sd	a1,8(s0)
-- 764:	e810                	sd	a2,16(s0)
-- 766:	ec14                	sd	a3,24(s0)
-- 768:	f018                	sd	a4,32(s0)
-- 76a:	f41c                	sd	a5,40(s0)
-- 76c:	03043823          	sd	a6,48(s0)
-- 770:	03143c23          	sd	a7,56(s0)
-+ 75c:	711d                	add	sp,sp,-96
-+ 75e:	ec06                	sd	ra,24(sp)
-+ 760:	e822                	sd	s0,16(sp)
-+ 762:	1000                	add	s0,sp,32
-+ 764:	e40c                	sd	a1,8(s0)
-+ 766:	e810                	sd	a2,16(s0)
-+ 768:	ec14                	sd	a3,24(s0)
-+ 76a:	f018                	sd	a4,32(s0)
-+ 76c:	f41c                	sd	a5,40(s0)
-+ 76e:	03043823          	sd	a6,48(s0)
-+ 772:	03143c23          	sd	a7,56(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 774:	00840613          	addi	a2,s0,8
-- 778:	fec43423          	sd	a2,-24(s0)
-+ 776:	00840613          	add	a2,s0,8
-+ 77a:	fec43423          	sd	a2,-24(s0)
-   vprintf(1, fmt, ap);
-- 77c:	85aa                	mv	a1,a0
-- 77e:	4505                	li	a0,1
-- 780:	d29ff0ef          	jal	4a8 <vprintf>
-+ 77e:	85aa                	mv	a1,a0
-+ 780:	4505                	li	a0,1
-+ 782:	d27ff0ef          	jal	4a8 <vprintf>
- }
-- 784:	60e2                	ld	ra,24(sp)
-- 786:	6442                	ld	s0,16(sp)
-- 788:	6125                	addi	sp,sp,96
-- 78a:	8082                	ret
-+ 786:	60e2                	ld	ra,24(sp)
-+ 788:	6442                	ld	s0,16(sp)
-+ 78a:	6125                	add	sp,sp,96
-+ 78c:	8082                	ret
- 
--000000000000078c <free>:
-+000000000000078e <free>:
- static Header base;
- static Header *freep;
- 
- void
- free(void *ap)
- {
-- 78c:	1141                	addi	sp,sp,-16
-- 78e:	e422                	sd	s0,8(sp)
-- 790:	0800                	addi	s0,sp,16
-+ 78e:	1141                	add	sp,sp,-16
-+ 790:	e422                	sd	s0,8(sp)
-+ 792:	0800                	add	s0,sp,16
-   Header *bp, *p;
- 
-   bp = (Header*)ap - 1;
-- 792:	ff050693          	addi	a3,a0,-16
-+ 794:	ff050693          	add	a3,a0,-16
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 796:	00001797          	auipc	a5,0x1
-- 79a:	86a7b783          	ld	a5,-1942(a5) # 1000 <freep>
-- 79e:	a02d                	j	7c8 <free+0x3c>
-+ 798:	00001797          	auipc	a5,0x1
-+ 79c:	8687b783          	ld	a5,-1944(a5) # 1000 <freep>
-+ 7a0:	a02d                	j	7ca <free+0x3c>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-       break;
-   if(bp + bp->s.size == p->s.ptr){
-     bp->s.size += p->s.ptr->s.size;
-- 7a0:	4618                	lw	a4,8(a2)
-- 7a2:	9f2d                	addw	a4,a4,a1
-- 7a4:	fee52c23          	sw	a4,-8(a0)
-+ 7a2:	4618                	lw	a4,8(a2)
-+ 7a4:	9f2d                	addw	a4,a4,a1
-+ 7a6:	fee52c23          	sw	a4,-8(a0)
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 7a8:	6398                	ld	a4,0(a5)
-- 7aa:	6310                	ld	a2,0(a4)
-- 7ac:	a83d                	j	7ea <free+0x5e>
-+ 7aa:	6398                	ld	a4,0(a5)
-+ 7ac:	6310                	ld	a2,0(a4)
-+ 7ae:	a83d                	j	7ec <free+0x5e>
-   } else
-     bp->s.ptr = p->s.ptr;
-   if(p + p->s.size == bp){
-     p->s.size += bp->s.size;
-- 7ae:	ff852703          	lw	a4,-8(a0)
-- 7b2:	9f31                	addw	a4,a4,a2
-- 7b4:	c798                	sw	a4,8(a5)
-+ 7b0:	ff852703          	lw	a4,-8(a0)
-+ 7b4:	9f31                	addw	a4,a4,a2
-+ 7b6:	c798                	sw	a4,8(a5)
-     p->s.ptr = bp->s.ptr;
-- 7b6:	ff053683          	ld	a3,-16(a0)
-- 7ba:	a091                	j	7fe <free+0x72>
-+ 7b8:	ff053683          	ld	a3,-16(a0)
-+ 7bc:	a091                	j	800 <free+0x72>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 7bc:	6398                	ld	a4,0(a5)
-- 7be:	00e7e463          	bltu	a5,a4,7c6 <free+0x3a>
-- 7c2:	00e6ea63          	bltu	a3,a4,7d6 <free+0x4a>
-+ 7be:	6398                	ld	a4,0(a5)
-+ 7c0:	00e7e463          	bltu	a5,a4,7c8 <free+0x3a>
-+ 7c4:	00e6ea63          	bltu	a3,a4,7d8 <free+0x4a>
- {
-- 7c6:	87ba                	mv	a5,a4
-+ 7c8:	87ba                	mv	a5,a4
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 7c8:	fed7fae3          	bgeu	a5,a3,7bc <free+0x30>
-- 7cc:	6398                	ld	a4,0(a5)
-- 7ce:	00e6e463          	bltu	a3,a4,7d6 <free+0x4a>
-+ 7ca:	fed7fae3          	bgeu	a5,a3,7be <free+0x30>
-+ 7ce:	6398                	ld	a4,0(a5)
-+ 7d0:	00e6e463          	bltu	a3,a4,7d8 <free+0x4a>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 7d2:	fee7eae3          	bltu	a5,a4,7c6 <free+0x3a>
-+ 7d4:	fee7eae3          	bltu	a5,a4,7c8 <free+0x3a>
-   if(bp + bp->s.size == p->s.ptr){
-- 7d6:	ff852583          	lw	a1,-8(a0)
-- 7da:	6390                	ld	a2,0(a5)
-- 7dc:	02059813          	slli	a6,a1,0x20
-- 7e0:	01c85713          	srli	a4,a6,0x1c
-- 7e4:	9736                	add	a4,a4,a3
-- 7e6:	fae60de3          	beq	a2,a4,7a0 <free+0x14>
-+ 7d8:	ff852583          	lw	a1,-8(a0)
-+ 7dc:	6390                	ld	a2,0(a5)
-+ 7de:	02059813          	sll	a6,a1,0x20
-+ 7e2:	01c85713          	srl	a4,a6,0x1c
-+ 7e6:	9736                	add	a4,a4,a3
-+ 7e8:	fae60de3          	beq	a2,a4,7a2 <free+0x14>
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 7ea:	fec53823          	sd	a2,-16(a0)
-+ 7ec:	fec53823          	sd	a2,-16(a0)
-   if(p + p->s.size == bp){
-- 7ee:	4790                	lw	a2,8(a5)
-- 7f0:	02061593          	slli	a1,a2,0x20
-- 7f4:	01c5d713          	srli	a4,a1,0x1c
-- 7f8:	973e                	add	a4,a4,a5
-- 7fa:	fae68ae3          	beq	a3,a4,7ae <free+0x22>
-+ 7f0:	4790                	lw	a2,8(a5)
-+ 7f2:	02061593          	sll	a1,a2,0x20
-+ 7f6:	01c5d713          	srl	a4,a1,0x1c
-+ 7fa:	973e                	add	a4,a4,a5
-+ 7fc:	fae68ae3          	beq	a3,a4,7b0 <free+0x22>
-     p->s.ptr = bp->s.ptr;
-- 7fe:	e394                	sd	a3,0(a5)
-+ 800:	e394                	sd	a3,0(a5)
-   } else
-     p->s.ptr = bp;
-   freep = p;
-- 800:	00001717          	auipc	a4,0x1
-- 804:	80f73023          	sd	a5,-2048(a4) # 1000 <freep>
-+ 802:	00000717          	auipc	a4,0x0
-+ 806:	7ef73f23          	sd	a5,2046(a4) # 1000 <freep>
- }
-- 808:	6422                	ld	s0,8(sp)
-- 80a:	0141                	addi	sp,sp,16
-- 80c:	8082                	ret
-+ 80a:	6422                	ld	s0,8(sp)
-+ 80c:	0141                	add	sp,sp,16
-+ 80e:	8082                	ret
- 
--000000000000080e <malloc>:
-+0000000000000810 <malloc>:
-   return freep;
- }
- 
- void*
- malloc(uint nbytes)
- {
-- 80e:	7139                	addi	sp,sp,-64
-- 810:	fc06                	sd	ra,56(sp)
-- 812:	f822                	sd	s0,48(sp)
-- 814:	f426                	sd	s1,40(sp)
-- 816:	ec4e                	sd	s3,24(sp)
-- 818:	0080                	addi	s0,sp,64
-+ 810:	7139                	add	sp,sp,-64
-+ 812:	fc06                	sd	ra,56(sp)
-+ 814:	f822                	sd	s0,48(sp)
-+ 816:	f426                	sd	s1,40(sp)
-+ 818:	f04a                	sd	s2,32(sp)
-+ 81a:	ec4e                	sd	s3,24(sp)
-+ 81c:	e852                	sd	s4,16(sp)
-+ 81e:	e456                	sd	s5,8(sp)
-+ 820:	e05a                	sd	s6,0(sp)
-+ 822:	0080                	add	s0,sp,64
-   Header *p, *prevp;
-   uint nunits;
- 
-   nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;
-- 81a:	02051493          	slli	s1,a0,0x20
-- 81e:	9081                	srli	s1,s1,0x20
-- 820:	04bd                	addi	s1,s1,15
-- 822:	8091                	srli	s1,s1,0x4
-- 824:	0014899b          	addiw	s3,s1,1
-- 828:	0485                	addi	s1,s1,1
-+ 824:	02051493          	sll	s1,a0,0x20
-+ 828:	9081                	srl	s1,s1,0x20
-+ 82a:	04bd                	add	s1,s1,15
-+ 82c:	8091                	srl	s1,s1,0x4
-+ 82e:	0014899b          	addw	s3,s1,1
-+ 832:	0485                	add	s1,s1,1
-   if((prevp = freep) == 0){
-- 82a:	00000517          	auipc	a0,0x0
-- 82e:	7d653503          	ld	a0,2006(a0) # 1000 <freep>
-- 832:	c915                	beqz	a0,866 <malloc+0x58>
-+ 834:	00000517          	auipc	a0,0x0
-+ 838:	7cc53503          	ld	a0,1996(a0) # 1000 <freep>
-+ 83c:	c515                	beqz	a0,868 <malloc+0x58>
-     base.s.ptr = freep = prevp = &base;
-     base.s.size = 0;
-   }
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 834:	611c                	ld	a5,0(a0)
-+ 83e:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 836:	4798                	lw	a4,8(a5)
-- 838:	08977a63          	bgeu	a4,s1,8cc <malloc+0xbe>
-- 83c:	f04a                	sd	s2,32(sp)
-- 83e:	e852                	sd	s4,16(sp)
-- 840:	e456                	sd	s5,8(sp)
-- 842:	e05a                	sd	s6,0(sp)
-+ 840:	4798                	lw	a4,8(a5)
-+ 842:	02977f63          	bgeu	a4,s1,880 <malloc+0x70>
-   if(nu < 4096)
-- 844:	8a4e                	mv	s4,s3
-- 846:	0009871b          	sext.w	a4,s3
-- 84a:	6685                	lui	a3,0x1
-- 84c:	00d77363          	bgeu	a4,a3,852 <malloc+0x44>
-- 850:	6a05                	lui	s4,0x1
-- 852:	000a0b1b          	sext.w	s6,s4
-+ 846:	8a4e                	mv	s4,s3
-+ 848:	0009871b          	sext.w	a4,s3
-+ 84c:	6685                	lui	a3,0x1
-+ 84e:	00d77363          	bgeu	a4,a3,854 <malloc+0x44>
-+ 852:	6a05                	lui	s4,0x1
-+ 854:	000a0b1b          	sext.w	s6,s4
-   p = sbrk(nu * sizeof(Header));
-- 856:	004a1a1b          	slliw	s4,s4,0x4
-+ 858:	004a1a1b          	sllw	s4,s4,0x4
-         p->s.size = nunits;
-       }
-       freep = prevp;
-       return (void*)(p + 1);
-     }
-     if(p == freep)
-- 85a:	00000917          	auipc	s2,0x0
-- 85e:	7a690913          	addi	s2,s2,1958 # 1000 <freep>
-+ 85c:	00000917          	auipc	s2,0x0
-+ 860:	7a490913          	add	s2,s2,1956 # 1000 <freep>
-   if(p == (char*)-1)
-- 862:	5afd                	li	s5,-1
-- 864:	a081                	j	8a4 <malloc+0x96>
-- 866:	f04a                	sd	s2,32(sp)
-- 868:	e852                	sd	s4,16(sp)
-- 86a:	e456                	sd	s5,8(sp)
-- 86c:	e05a                	sd	s6,0(sp)
-+ 864:	5afd                	li	s5,-1
-+ 866:	a885                	j	8d6 <malloc+0xc6>
-     base.s.ptr = freep = prevp = &base;
-- 86e:	00000797          	auipc	a5,0x0
-- 872:	7a278793          	addi	a5,a5,1954 # 1010 <base>
-- 876:	00000717          	auipc	a4,0x0
-- 87a:	78f73523          	sd	a5,1930(a4) # 1000 <freep>
-- 87e:	e39c                	sd	a5,0(a5)
-+ 868:	00000797          	auipc	a5,0x0
-+ 86c:	7a878793          	add	a5,a5,1960 # 1010 <base>
-+ 870:	00000717          	auipc	a4,0x0
-+ 874:	78f73823          	sd	a5,1936(a4) # 1000 <freep>
-+ 878:	e39c                	sd	a5,0(a5)
-     base.s.size = 0;
-- 880:	0007a423          	sw	zero,8(a5)
-+ 87a:	0007a423          	sw	zero,8(a5)
-     if(p->s.size >= nunits){
-- 884:	b7c1                	j	844 <malloc+0x36>
-+ 87e:	b7e1                	j	846 <malloc+0x36>
-+      if(p->s.size == nunits)
-+ 880:	02e48c63          	beq	s1,a4,8b8 <malloc+0xa8>
-+        p->s.size -= nunits;
-+ 884:	4137073b          	subw	a4,a4,s3
-+ 888:	c798                	sw	a4,8(a5)
-+        p += p->s.size;
-+ 88a:	02071693          	sll	a3,a4,0x20
-+ 88e:	01c6d713          	srl	a4,a3,0x1c
-+ 892:	97ba                	add	a5,a5,a4
-+        p->s.size = nunits;
-+ 894:	0137a423          	sw	s3,8(a5)
-+      freep = prevp;
-+ 898:	00000717          	auipc	a4,0x0
-+ 89c:	76a73423          	sd	a0,1896(a4) # 1000 <freep>
-+      return (void*)(p + 1);
-+ 8a0:	01078513          	add	a0,a5,16
-+      if((p = morecore(nunits)) == 0)
-+        return 0;
-+  }
-+}
-+ 8a4:	70e2                	ld	ra,56(sp)
-+ 8a6:	7442                	ld	s0,48(sp)
-+ 8a8:	74a2                	ld	s1,40(sp)
-+ 8aa:	7902                	ld	s2,32(sp)
-+ 8ac:	69e2                	ld	s3,24(sp)
-+ 8ae:	6a42                	ld	s4,16(sp)
-+ 8b0:	6aa2                	ld	s5,8(sp)
-+ 8b2:	6b02                	ld	s6,0(sp)
-+ 8b4:	6121                	add	sp,sp,64
-+ 8b6:	8082                	ret
-         prevp->s.ptr = p->s.ptr;
-- 886:	6398                	ld	a4,0(a5)
-- 888:	e118                	sd	a4,0(a0)
-- 88a:	a8a9                	j	8e4 <malloc+0xd6>
-+ 8b8:	6398                	ld	a4,0(a5)
-+ 8ba:	e118                	sd	a4,0(a0)
-+ 8bc:	bff1                	j	898 <malloc+0x88>
-   hp->s.size = nu;
-- 88c:	01652423          	sw	s6,8(a0)
-+ 8be:	01652423          	sw	s6,8(a0)
-   free((void*)(hp + 1));
-- 890:	0541                	addi	a0,a0,16
-- 892:	efbff0ef          	jal	78c <free>
-+ 8c2:	0541                	add	a0,a0,16
-+ 8c4:	ecbff0ef          	jal	78e <free>
-   return freep;
-- 896:	00093503          	ld	a0,0(s2)
-+ 8c8:	00093503          	ld	a0,0(s2)
-       if((p = morecore(nunits)) == 0)
-- 89a:	c12d                	beqz	a0,8fc <malloc+0xee>
-+ 8cc:	dd61                	beqz	a0,8a4 <malloc+0x94>
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 89c:	611c                	ld	a5,0(a0)
-+ 8ce:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 89e:	4798                	lw	a4,8(a5)
-- 8a0:	02977263          	bgeu	a4,s1,8c4 <malloc+0xb6>
-+ 8d0:	4798                	lw	a4,8(a5)
-+ 8d2:	fa9777e3          	bgeu	a4,s1,880 <malloc+0x70>
-     if(p == freep)
-- 8a4:	00093703          	ld	a4,0(s2)
-- 8a8:	853e                	mv	a0,a5
-- 8aa:	fef719e3          	bne	a4,a5,89c <malloc+0x8e>
-+ 8d6:	00093703          	ld	a4,0(s2)
-+ 8da:	853e                	mv	a0,a5
-+ 8dc:	fef719e3          	bne	a4,a5,8ce <malloc+0xbe>
-   p = sbrk(nu * sizeof(Header));
-- 8ae:	8552                	mv	a0,s4
-- 8b0:	b1bff0ef          	jal	3ca <sbrk>
-+ 8e0:	8552                	mv	a0,s4
-+ 8e2:	ae9ff0ef          	jal	3ca <sbrk>
-   if(p == (char*)-1)
-- 8b4:	fd551ce3          	bne	a0,s5,88c <malloc+0x7e>
-+ 8e6:	fd551ce3          	bne	a0,s5,8be <malloc+0xae>
-         return 0;
-- 8b8:	4501                	li	a0,0
-- 8ba:	7902                	ld	s2,32(sp)
-- 8bc:	6a42                	ld	s4,16(sp)
-- 8be:	6aa2                	ld	s5,8(sp)
-- 8c0:	6b02                	ld	s6,0(sp)
-- 8c2:	a03d                	j	8f0 <malloc+0xe2>
-- 8c4:	7902                	ld	s2,32(sp)
-- 8c6:	6a42                	ld	s4,16(sp)
-- 8c8:	6aa2                	ld	s5,8(sp)
-- 8ca:	6b02                	ld	s6,0(sp)
--      if(p->s.size == nunits)
-- 8cc:	fae48de3          	beq	s1,a4,886 <malloc+0x78>
--        p->s.size -= nunits;
-- 8d0:	4137073b          	subw	a4,a4,s3
-- 8d4:	c798                	sw	a4,8(a5)
--        p += p->s.size;
-- 8d6:	02071693          	slli	a3,a4,0x20
-- 8da:	01c6d713          	srli	a4,a3,0x1c
-- 8de:	97ba                	add	a5,a5,a4
--        p->s.size = nunits;
-- 8e0:	0137a423          	sw	s3,8(a5)
--      freep = prevp;
-- 8e4:	00000717          	auipc	a4,0x0
-- 8e8:	70a73e23          	sd	a0,1820(a4) # 1000 <freep>
--      return (void*)(p + 1);
-- 8ec:	01078513          	addi	a0,a5,16
--  }
--}
-- 8f0:	70e2                	ld	ra,56(sp)
-- 8f2:	7442                	ld	s0,48(sp)
-- 8f4:	74a2                	ld	s1,40(sp)
-- 8f6:	69e2                	ld	s3,24(sp)
-- 8f8:	6121                	addi	sp,sp,64
-- 8fa:	8082                	ret
-- 8fc:	7902                	ld	s2,32(sp)
-- 8fe:	6a42                	ld	s4,16(sp)
-- 900:	6aa2                	ld	s5,8(sp)
-- 902:	6b02                	ld	s6,0(sp)
-- 904:	b7f5                	j	8f0 <malloc+0xe2>
-+ 8ea:	4501                	li	a0,0
-+ 8ec:	bf65                	j	8a4 <malloc+0x94>
-diff --git a/Assignments/Assignment-6/xv6/user/stressfs.d b/Assignments/Assignment-6/xv6/user/stressfs.d
-index 6fe298c..027fba3 100644
---- a/Assignments/Assignment-6/xv6/user/stressfs.d
-+++ b/Assignments/Assignment-6/xv6/user/stressfs.d
-@@ -1,3 +1,2 @@
--user/stressfs.o: user/stressfs.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/stat.h user/user.h kernel/fs.h kernel/fcntl.h
-+user/stressfs.o: user/stressfs.c kernel/types.h kernel/stat.h user/user.h \
-+ kernel/fs.h kernel/fcntl.h
-diff --git a/Assignments/Assignment-6/xv6/user/stressfs.o b/Assignments/Assignment-6/xv6/user/stressfs.o
-index d3bf38b..773ee65 100644
-Binary files a/Assignments/Assignment-6/xv6/user/stressfs.o and b/Assignments/Assignment-6/xv6/user/stressfs.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/stressfs.sym b/Assignments/Assignment-6/xv6/user/stressfs.sym
-index 8b202d6..7bacc27 100644
---- a/Assignments/Assignment-6/xv6/user/stressfs.sym
-+++ b/Assignments/Assignment-6/xv6/user/stressfs.sym
-@@ -1,6 +1,5 @@
- 0000000000000000 .text
--0000000000000908 .rodata
--0000000000000970 .eh_frame
-+00000000000008f0 .rodata
- 0000000000001000 .data
- 0000000000001000 .bss
- 0000000000000000 .debug_info
-@@ -11,6 +10,7 @@
- 0000000000000000 .debug_str
- 0000000000000000 .comment
- 0000000000000000 .riscv.attributes
-+0000000000000000 .debug_frame
- 0000000000000000 .debug_ranges
- 0000000000000000 stressfs.c
- 0000000000000000 ulib.c
-@@ -18,23 +18,23 @@
- 0000000000000000 printf.c
- 00000000000003e2 putc
- 0000000000000400 printint
--0000000000000958 digits
-+0000000000000938 digits
- 0000000000000000 umalloc.c
- 0000000000001000 freep
- 0000000000001010 base
- 00000000000000ea strcpy
--000000000000075a printf
-+000000000000075c printf
- 0000000000000294 memmove
- 000000000000038a mknod
- 00000000000001a2 gets
- 00000000000003c2 getpid
- 0000000000000326 memcpy
--000000000000080e malloc
-+0000000000000810 malloc
- 00000000000003d2 sleep
- 0000000000000352 pipe
- 0000000000000362 write
- 000000000000039a fstat
--0000000000000730 fprintf
-+0000000000000732 fprintf
- 0000000000000372 kill
- 00000000000004a8 vprintf
- 00000000000003b2 chdir
-@@ -60,4 +60,4 @@
- 000000000000017e strchr
- 00000000000003aa mkdir
- 000000000000036a close
--000000000000078c free
-+000000000000078e free
-diff --git a/Assignments/Assignment-6/xv6/user/ulib.d b/Assignments/Assignment-6/xv6/user/ulib.d
-index e574235..66a6059 100644
---- a/Assignments/Assignment-6/xv6/user/ulib.d
-+++ b/Assignments/Assignment-6/xv6/user/ulib.d
-@@ -1,3 +1,2 @@
--user/ulib.o: user/ulib.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/stat.h kernel/fcntl.h user/user.h
-+user/ulib.o: user/ulib.c kernel/types.h kernel/stat.h kernel/fcntl.h \
-+ user/user.h
-diff --git a/Assignments/Assignment-6/xv6/user/ulib.o b/Assignments/Assignment-6/xv6/user/ulib.o
-index cc93716..368e68b 100644
-Binary files a/Assignments/Assignment-6/xv6/user/ulib.o and b/Assignments/Assignment-6/xv6/user/ulib.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/umalloc.d b/Assignments/Assignment-6/xv6/user/umalloc.d
-index 64f77d8..b03b5c2 100644
---- a/Assignments/Assignment-6/xv6/user/umalloc.d
-+++ b/Assignments/Assignment-6/xv6/user/umalloc.d
-@@ -1,3 +1,2 @@
--user/umalloc.o: user/umalloc.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/stat.h user/user.h kernel/param.h
-+user/umalloc.o: user/umalloc.c kernel/types.h kernel/stat.h user/user.h \
-+ kernel/param.h
-diff --git a/Assignments/Assignment-6/xv6/user/umalloc.o b/Assignments/Assignment-6/xv6/user/umalloc.o
-index 6dfd44f..6d44ed5 100644
-Binary files a/Assignments/Assignment-6/xv6/user/umalloc.o and b/Assignments/Assignment-6/xv6/user/umalloc.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/usertests.asm b/Assignments/Assignment-6/xv6/user/usertests.asm
-index f07b66f..10f8b12 100644
---- a/Assignments/Assignment-6/xv6/user/usertests.asm
-+++ b/Assignments/Assignment-6/xv6/user/usertests.asm
-@@ -11,16 +11,16 @@ Disassembly of section .text:
- void
- copyinstr1(char *s)
- {
--       0:	711d                	addi	sp,sp,-96
-+       0:	711d                	add	sp,sp,-96
-        2:	ec86                	sd	ra,88(sp)
-        4:	e8a2                	sd	s0,80(sp)
-        6:	e4a6                	sd	s1,72(sp)
-        8:	e0ca                	sd	s2,64(sp)
-        a:	fc4e                	sd	s3,56(sp)
--       c:	1080                	addi	s0,sp,96
-+       c:	1080                	add	s0,sp,96
-   uint64 addrs[] = { 0x80000000LL, 0x3fffffe000, 0x3ffffff000, 0x4000000000,
-        e:	00007797          	auipc	a5,0x7
--      12:	3da78793          	addi	a5,a5,986 # 73e8 <malloc+0x249c>
-+      12:	34278793          	add	a5,a5,834 # 7350 <malloc+0x2478>
-       16:	638c                	ld	a1,0(a5)
-       18:	6790                	ld	a2,8(a5)
-       1a:	6b94                	ld	a3,16(a5)
-@@ -34,19 +34,19 @@ copyinstr1(char *s)
-                      0xffffffffffffffff };
- 
-   for(int ai = 0; ai < sizeof(addrs)/sizeof(addrs[0]); ai++){
--      34:	fa840493          	addi	s1,s0,-88
--      38:	fd040993          	addi	s3,s0,-48
-+      34:	fa840493          	add	s1,s0,-88
-+      38:	fd040993          	add	s3,s0,-48
-     uint64 addr = addrs[ai];
- 
-     int fd = open((char *)addr, O_CREATE|O_WRONLY);
-       3c:	0004b903          	ld	s2,0(s1)
-       40:	20100593          	li	a1,513
-       44:	854a                	mv	a0,s2
--      46:	27b040ef          	jal	4ac0 <open>
-+      46:	205040ef          	jal	4a4a <open>
-     if(fd >= 0){
-       4a:	00055c63          	bgez	a0,62 <copyinstr1+0x62>
-   for(int ai = 0; ai < sizeof(addrs)/sizeof(addrs[0]); ai++){
--      4e:	04a1                	addi	s1,s1,8
-+      4e:	04a1                	add	s1,s1,8
-       50:	ff3496e3          	bne	s1,s3,3c <copyinstr1+0x3c>
-       printf("open(%p) returned %d, not -1\n", (void*)addr, fd);
-       exit(1);
-@@ -58,17 +58,17 @@ copyinstr1(char *s)
-       58:	64a6                	ld	s1,72(sp)
-       5a:	6906                	ld	s2,64(sp)
-       5c:	79e2                	ld	s3,56(sp)
--      5e:	6125                	addi	sp,sp,96
-+      5e:	6125                	add	sp,sp,96
-       60:	8082                	ret
-       printf("open(%p) returned %d, not -1\n", (void*)addr, fd);
-       62:	862a                	mv	a2,a0
-       64:	85ca                	mv	a1,s2
-       66:	00005517          	auipc	a0,0x5
--      6a:	fea50513          	addi	a0,a0,-22 # 5050 <malloc+0x104>
--      6e:	62b040ef          	jal	4e98 <printf>
-+      6a:	f5a50513          	add	a0,a0,-166 # 4fc0 <malloc+0xe8>
-+      6e:	5b7040ef          	jal	4e24 <printf>
-       exit(1);
-       72:	4505                	li	a0,1
--      74:	20d040ef          	jal	4a80 <exit>
-+      74:	197040ef          	jal	4a0a <exit>
- 
- 0000000000000078 <bsstest>:
- void
-@@ -77,154 +77,154 @@ bsstest(char *s)
-   int i;
- 
-   for(i = 0; i < sizeof(uninit); i++){
--      78:	0000a797          	auipc	a5,0xa
--      7c:	4f078793          	addi	a5,a5,1264 # a568 <uninit>
--      80:	0000d697          	auipc	a3,0xd
--      84:	bf868693          	addi	a3,a3,-1032 # cc78 <buf>
-+      78:	00009797          	auipc	a5,0x9
-+      7c:	4f078793          	add	a5,a5,1264 # 9568 <uninit>
-+      80:	0000c697          	auipc	a3,0xc
-+      84:	bf868693          	add	a3,a3,-1032 # bc78 <buf>
-     if(uninit[i] != '\0'){
-       88:	0007c703          	lbu	a4,0(a5)
-       8c:	e709                	bnez	a4,96 <bsstest+0x1e>
-   for(i = 0; i < sizeof(uninit); i++){
--      8e:	0785                	addi	a5,a5,1
-+      8e:	0785                	add	a5,a5,1
-       90:	fed79ce3          	bne	a5,a3,88 <bsstest+0x10>
-       94:	8082                	ret
- {
--      96:	1141                	addi	sp,sp,-16
-+      96:	1141                	add	sp,sp,-16
-       98:	e406                	sd	ra,8(sp)
-       9a:	e022                	sd	s0,0(sp)
--      9c:	0800                	addi	s0,sp,16
-+      9c:	0800                	add	s0,sp,16
-       printf("%s: bss test failed\n", s);
-       9e:	85aa                	mv	a1,a0
-       a0:	00005517          	auipc	a0,0x5
--      a4:	fd050513          	addi	a0,a0,-48 # 5070 <malloc+0x124>
--      a8:	5f1040ef          	jal	4e98 <printf>
-+      a4:	f4050513          	add	a0,a0,-192 # 4fe0 <malloc+0x108>
-+      a8:	57d040ef          	jal	4e24 <printf>
-       exit(1);
-       ac:	4505                	li	a0,1
--      ae:	1d3040ef          	jal	4a80 <exit>
-+      ae:	15d040ef          	jal	4a0a <exit>
- 
- 00000000000000b2 <opentest>:
- {
--      b2:	1101                	addi	sp,sp,-32
-+      b2:	1101                	add	sp,sp,-32
-       b4:	ec06                	sd	ra,24(sp)
-       b6:	e822                	sd	s0,16(sp)
-       b8:	e426                	sd	s1,8(sp)
--      ba:	1000                	addi	s0,sp,32
-+      ba:	1000                	add	s0,sp,32
-       bc:	84aa                	mv	s1,a0
-   fd = open("echo", 0);
-       be:	4581                	li	a1,0
-       c0:	00005517          	auipc	a0,0x5
--      c4:	fc850513          	addi	a0,a0,-56 # 5088 <malloc+0x13c>
--      c8:	1f9040ef          	jal	4ac0 <open>
-+      c4:	f3850513          	add	a0,a0,-200 # 4ff8 <malloc+0x120>
-+      c8:	183040ef          	jal	4a4a <open>
-   if(fd < 0){
-       cc:	02054263          	bltz	a0,f0 <opentest+0x3e>
-   close(fd);
--      d0:	1d9040ef          	jal	4aa8 <close>
-+      d0:	163040ef          	jal	4a32 <close>
-   fd = open("doesnotexist", 0);
-       d4:	4581                	li	a1,0
-       d6:	00005517          	auipc	a0,0x5
--      da:	fd250513          	addi	a0,a0,-46 # 50a8 <malloc+0x15c>
--      de:	1e3040ef          	jal	4ac0 <open>
-+      da:	f4250513          	add	a0,a0,-190 # 5018 <malloc+0x140>
-+      de:	16d040ef          	jal	4a4a <open>
-   if(fd >= 0){
-       e2:	02055163          	bgez	a0,104 <opentest+0x52>
- }
-       e6:	60e2                	ld	ra,24(sp)
-       e8:	6442                	ld	s0,16(sp)
-       ea:	64a2                	ld	s1,8(sp)
--      ec:	6105                	addi	sp,sp,32
-+      ec:	6105                	add	sp,sp,32
-       ee:	8082                	ret
-     printf("%s: open echo failed!\n", s);
-       f0:	85a6                	mv	a1,s1
-       f2:	00005517          	auipc	a0,0x5
--      f6:	f9e50513          	addi	a0,a0,-98 # 5090 <malloc+0x144>
--      fa:	59f040ef          	jal	4e98 <printf>
-+      f6:	f0e50513          	add	a0,a0,-242 # 5000 <malloc+0x128>
-+      fa:	52b040ef          	jal	4e24 <printf>
-     exit(1);
-       fe:	4505                	li	a0,1
--     100:	181040ef          	jal	4a80 <exit>
-+     100:	10b040ef          	jal	4a0a <exit>
-     printf("%s: open doesnotexist succeeded!\n", s);
-      104:	85a6                	mv	a1,s1
-      106:	00005517          	auipc	a0,0x5
--     10a:	fb250513          	addi	a0,a0,-78 # 50b8 <malloc+0x16c>
--     10e:	58b040ef          	jal	4e98 <printf>
-+     10a:	f2250513          	add	a0,a0,-222 # 5028 <malloc+0x150>
-+     10e:	517040ef          	jal	4e24 <printf>
-     exit(1);
-      112:	4505                	li	a0,1
--     114:	16d040ef          	jal	4a80 <exit>
-+     114:	0f7040ef          	jal	4a0a <exit>
- 
- 0000000000000118 <truncate2>:
- {
--     118:	7179                	addi	sp,sp,-48
-+     118:	7179                	add	sp,sp,-48
-      11a:	f406                	sd	ra,40(sp)
-      11c:	f022                	sd	s0,32(sp)
-      11e:	ec26                	sd	s1,24(sp)
-      120:	e84a                	sd	s2,16(sp)
-      122:	e44e                	sd	s3,8(sp)
--     124:	1800                	addi	s0,sp,48
-+     124:	1800                	add	s0,sp,48
-      126:	89aa                	mv	s3,a0
-   unlink("truncfile");
-      128:	00005517          	auipc	a0,0x5
--     12c:	fb850513          	addi	a0,a0,-72 # 50e0 <malloc+0x194>
--     130:	1a1040ef          	jal	4ad0 <unlink>
-+     12c:	f2850513          	add	a0,a0,-216 # 5050 <malloc+0x178>
-+     130:	12b040ef          	jal	4a5a <unlink>
-   int fd1 = open("truncfile", O_CREATE|O_TRUNC|O_WRONLY);
-      134:	60100593          	li	a1,1537
-      138:	00005517          	auipc	a0,0x5
--     13c:	fa850513          	addi	a0,a0,-88 # 50e0 <malloc+0x194>
--     140:	181040ef          	jal	4ac0 <open>
-+     13c:	f1850513          	add	a0,a0,-232 # 5050 <malloc+0x178>
-+     140:	10b040ef          	jal	4a4a <open>
-      144:	84aa                	mv	s1,a0
-   write(fd1, "abcd", 4);
-      146:	4611                	li	a2,4
-      148:	00005597          	auipc	a1,0x5
--     14c:	fa858593          	addi	a1,a1,-88 # 50f0 <malloc+0x1a4>
--     150:	151040ef          	jal	4aa0 <write>
-+     14c:	f1858593          	add	a1,a1,-232 # 5060 <malloc+0x188>
-+     150:	0db040ef          	jal	4a2a <write>
-   int fd2 = open("truncfile", O_TRUNC|O_WRONLY);
-      154:	40100593          	li	a1,1025
-      158:	00005517          	auipc	a0,0x5
--     15c:	f8850513          	addi	a0,a0,-120 # 50e0 <malloc+0x194>
--     160:	161040ef          	jal	4ac0 <open>
-+     15c:	ef850513          	add	a0,a0,-264 # 5050 <malloc+0x178>
-+     160:	0eb040ef          	jal	4a4a <open>
-      164:	892a                	mv	s2,a0
-   int n = write(fd1, "x", 1);
-      166:	4605                	li	a2,1
-      168:	00005597          	auipc	a1,0x5
--     16c:	f9058593          	addi	a1,a1,-112 # 50f8 <malloc+0x1ac>
-+     16c:	f0058593          	add	a1,a1,-256 # 5068 <malloc+0x190>
-      170:	8526                	mv	a0,s1
--     172:	12f040ef          	jal	4aa0 <write>
-+     172:	0b9040ef          	jal	4a2a <write>
-   if(n != -1){
-      176:	57fd                	li	a5,-1
-      178:	02f51563          	bne	a0,a5,1a2 <truncate2+0x8a>
-   unlink("truncfile");
-      17c:	00005517          	auipc	a0,0x5
--     180:	f6450513          	addi	a0,a0,-156 # 50e0 <malloc+0x194>
--     184:	14d040ef          	jal	4ad0 <unlink>
-+     180:	ed450513          	add	a0,a0,-300 # 5050 <malloc+0x178>
-+     184:	0d7040ef          	jal	4a5a <unlink>
-   close(fd1);
-      188:	8526                	mv	a0,s1
--     18a:	11f040ef          	jal	4aa8 <close>
-+     18a:	0a9040ef          	jal	4a32 <close>
-   close(fd2);
-      18e:	854a                	mv	a0,s2
--     190:	119040ef          	jal	4aa8 <close>
-+     190:	0a3040ef          	jal	4a32 <close>
- }
-      194:	70a2                	ld	ra,40(sp)
-      196:	7402                	ld	s0,32(sp)
-      198:	64e2                	ld	s1,24(sp)
-      19a:	6942                	ld	s2,16(sp)
-      19c:	69a2                	ld	s3,8(sp)
--     19e:	6145                	addi	sp,sp,48
-+     19e:	6145                	add	sp,sp,48
-      1a0:	8082                	ret
-     printf("%s: write returned %d, expected -1\n", s, n);
-      1a2:	862a                	mv	a2,a0
-      1a4:	85ce                	mv	a1,s3
-      1a6:	00005517          	auipc	a0,0x5
--     1aa:	f5a50513          	addi	a0,a0,-166 # 5100 <malloc+0x1b4>
--     1ae:	4eb040ef          	jal	4e98 <printf>
-+     1aa:	eca50513          	add	a0,a0,-310 # 5070 <malloc+0x198>
-+     1ae:	477040ef          	jal	4e24 <printf>
-     exit(1);
-      1b2:	4505                	li	a0,1
--     1b4:	0cd040ef          	jal	4a80 <exit>
-+     1b4:	057040ef          	jal	4a0a <exit>
- 
- 00000000000001b8 <createtest>:
- {
--     1b8:	7179                	addi	sp,sp,-48
-+     1b8:	7179                	add	sp,sp,-48
-      1ba:	f406                	sd	ra,40(sp)
-      1bc:	f022                	sd	s0,32(sp)
-      1be:	ec26                	sd	s1,24(sp)
-      1c0:	e84a                	sd	s2,16(sp)
--     1c2:	1800                	addi	s0,sp,48
-+     1c2:	1800                	add	s0,sp,48
-   name[0] = 'a';
-      1c4:	06100793          	li	a5,97
-      1c8:	fcf40c23          	sb	a5,-40(s0)
-@@ -237,12 +237,12 @@ bsstest(char *s)
-      1d8:	fc940ca3          	sb	s1,-39(s0)
-     fd = open(name, O_CREATE|O_RDWR);
-      1dc:	20200593          	li	a1,514
--     1e0:	fd840513          	addi	a0,s0,-40
--     1e4:	0dd040ef          	jal	4ac0 <open>
-+     1e0:	fd840513          	add	a0,s0,-40
-+     1e4:	067040ef          	jal	4a4a <open>
-     close(fd);
--     1e8:	0c1040ef          	jal	4aa8 <close>
-+     1e8:	04b040ef          	jal	4a32 <close>
-   for(i = 0; i < N; i++){
--     1ec:	2485                	addiw	s1,s1,1
-+     1ec:	2485                	addw	s1,s1,1
-      1ee:	0ff4f493          	zext.b	s1,s1
-      1f2:	ff2493e3          	bne	s1,s2,1d8 <createtest+0x20>
-   name[0] = 'a';
-@@ -256,10 +256,10 @@ bsstest(char *s)
-     name[1] = '0' + i;
-      20a:	fc940ca3          	sb	s1,-39(s0)
-     unlink(name);
--     20e:	fd840513          	addi	a0,s0,-40
--     212:	0bf040ef          	jal	4ad0 <unlink>
-+     20e:	fd840513          	add	a0,s0,-40
-+     212:	049040ef          	jal	4a5a <unlink>
-   for(i = 0; i < N; i++){
--     216:	2485                	addiw	s1,s1,1
-+     216:	2485                	addw	s1,s1,1
-      218:	0ff4f493          	zext.b	s1,s1
-      21c:	ff2497e3          	bne	s1,s2,20a <createtest+0x52>
- }
-@@ -267,12 +267,12 @@ bsstest(char *s)
-      222:	7402                	ld	s0,32(sp)
-      224:	64e2                	ld	s1,24(sp)
-      226:	6942                	ld	s2,16(sp)
--     228:	6145                	addi	sp,sp,48
-+     228:	6145                	add	sp,sp,48
-      22a:	8082                	ret
- 
- 000000000000022c <bigwrite>:
- {
--     22c:	715d                	addi	sp,sp,-80
-+     22c:	715d                	add	sp,sp,-80
-      22e:	e486                	sd	ra,72(sp)
-      230:	e0a2                	sd	s0,64(sp)
-      232:	fc26                	sd	s1,56(sp)
-@@ -282,34 +282,34 @@ bsstest(char *s)
-      23a:	ec56                	sd	s5,24(sp)
-      23c:	e85a                	sd	s6,16(sp)
-      23e:	e45e                	sd	s7,8(sp)
--     240:	0880                	addi	s0,sp,80
-+     240:	0880                	add	s0,sp,80
-      242:	8baa                	mv	s7,a0
-   unlink("bigwrite");
-      244:	00005517          	auipc	a0,0x5
--     248:	ee450513          	addi	a0,a0,-284 # 5128 <malloc+0x1dc>
--     24c:	085040ef          	jal	4ad0 <unlink>
-+     248:	e5450513          	add	a0,a0,-428 # 5098 <malloc+0x1c0>
-+     24c:	00f040ef          	jal	4a5a <unlink>
-   for(sz = 499; sz < (MAXOPBLOCKS+2)*BSIZE; sz += 471){
-      250:	1f300493          	li	s1,499
-     fd = open("bigwrite", O_CREATE | O_RDWR);
-      254:	00005a97          	auipc	s5,0x5
--     258:	ed4a8a93          	addi	s5,s5,-300 # 5128 <malloc+0x1dc>
-+     258:	e44a8a93          	add	s5,s5,-444 # 5098 <malloc+0x1c0>
-       int cc = write(fd, buf, sz);
--     25c:	0000da17          	auipc	s4,0xd
--     260:	a1ca0a13          	addi	s4,s4,-1508 # cc78 <buf>
-+     25c:	0000ca17          	auipc	s4,0xc
-+     260:	a1ca0a13          	add	s4,s4,-1508 # bc78 <buf>
-   for(sz = 499; sz < (MAXOPBLOCKS+2)*BSIZE; sz += 471){
-      264:	6b0d                	lui	s6,0x3
--     266:	1c9b0b13          	addi	s6,s6,457 # 31c9 <subdir+0x5ed>
-+     266:	1c9b0b13          	add	s6,s6,457 # 31c9 <rmdot+0x53>
-     fd = open("bigwrite", O_CREATE | O_RDWR);
-      26a:	20200593          	li	a1,514
-      26e:	8556                	mv	a0,s5
--     270:	051040ef          	jal	4ac0 <open>
-+     270:	7da040ef          	jal	4a4a <open>
-      274:	892a                	mv	s2,a0
-     if(fd < 0){
-      276:	04054563          	bltz	a0,2c0 <bigwrite+0x94>
-       int cc = write(fd, buf, sz);
-      27a:	8626                	mv	a2,s1
-      27c:	85d2                	mv	a1,s4
--     27e:	023040ef          	jal	4aa0 <write>
-+     27e:	7ac040ef          	jal	4a2a <write>
-      282:	89aa                	mv	s3,a0
-       if(cc != sz){
-      284:	04a49863          	bne	s1,a0,2d4 <bigwrite+0xa8>
-@@ -317,17 +317,17 @@ bsstest(char *s)
-      288:	8626                	mv	a2,s1
-      28a:	85d2                	mv	a1,s4
-      28c:	854a                	mv	a0,s2
--     28e:	013040ef          	jal	4aa0 <write>
-+     28e:	79c040ef          	jal	4a2a <write>
-       if(cc != sz){
-      292:	04951263          	bne	a0,s1,2d6 <bigwrite+0xaa>
-     close(fd);
-      296:	854a                	mv	a0,s2
--     298:	011040ef          	jal	4aa8 <close>
-+     298:	79a040ef          	jal	4a32 <close>
-     unlink("bigwrite");
-      29c:	8556                	mv	a0,s5
--     29e:	033040ef          	jal	4ad0 <unlink>
-+     29e:	7bc040ef          	jal	4a5a <unlink>
-   for(sz = 499; sz < (MAXOPBLOCKS+2)*BSIZE; sz += 471){
--     2a2:	1d74849b          	addiw	s1,s1,471
-+     2a2:	1d74849b          	addw	s1,s1,471
-      2a6:	fd6492e3          	bne	s1,s6,26a <bigwrite+0x3e>
- }
-      2aa:	60a6                	ld	ra,72(sp)
-@@ -339,16 +339,16 @@ bsstest(char *s)
-      2b6:	6ae2                	ld	s5,24(sp)
-      2b8:	6b42                	ld	s6,16(sp)
-      2ba:	6ba2                	ld	s7,8(sp)
--     2bc:	6161                	addi	sp,sp,80
-+     2bc:	6161                	add	sp,sp,80
-      2be:	8082                	ret
-       printf("%s: cannot create bigwrite\n", s);
-      2c0:	85de                	mv	a1,s7
-      2c2:	00005517          	auipc	a0,0x5
--     2c6:	e7650513          	addi	a0,a0,-394 # 5138 <malloc+0x1ec>
--     2ca:	3cf040ef          	jal	4e98 <printf>
-+     2c6:	de650513          	add	a0,a0,-538 # 50a8 <malloc+0x1d0>
-+     2ca:	35b040ef          	jal	4e24 <printf>
-       exit(1);
-      2ce:	4505                	li	a0,1
--     2d0:	7b0040ef          	jal	4a80 <exit>
-+     2d0:	73a040ef          	jal	4a0a <exit>
-       if(cc != sz){
-      2d4:	89a6                	mv	s3,s1
-         printf("%s: write(%d) ret %d\n", s, sz, cc);
-@@ -356,11 +356,11 @@ bsstest(char *s)
-      2d8:	864e                	mv	a2,s3
-      2da:	85de                	mv	a1,s7
-      2dc:	00005517          	auipc	a0,0x5
--     2e0:	e7c50513          	addi	a0,a0,-388 # 5158 <malloc+0x20c>
--     2e4:	3b5040ef          	jal	4e98 <printf>
-+     2e0:	dec50513          	add	a0,a0,-532 # 50c8 <malloc+0x1f0>
-+     2e4:	341040ef          	jal	4e24 <printf>
-         exit(1);
-      2e8:	4505                	li	a0,1
--     2ea:	796040ef          	jal	4a80 <exit>
-+     2ea:	720040ef          	jal	4a0a <exit>
- 
- 00000000000002ee <badwrite>:
- /* file is deleted? if the kernel has this bug, it will panic: balloc: */
-@@ -369,59 +369,59 @@ bsstest(char *s)
- void
- badwrite(char *s)
- {
--     2ee:	7179                	addi	sp,sp,-48
-+     2ee:	7179                	add	sp,sp,-48
-      2f0:	f406                	sd	ra,40(sp)
-      2f2:	f022                	sd	s0,32(sp)
-      2f4:	ec26                	sd	s1,24(sp)
-      2f6:	e84a                	sd	s2,16(sp)
-      2f8:	e44e                	sd	s3,8(sp)
-      2fa:	e052                	sd	s4,0(sp)
--     2fc:	1800                	addi	s0,sp,48
-+     2fc:	1800                	add	s0,sp,48
-   int assumed_free = 600;
-   
-   unlink("junk");
-      2fe:	00005517          	auipc	a0,0x5
--     302:	e7250513          	addi	a0,a0,-398 # 5170 <malloc+0x224>
--     306:	7ca040ef          	jal	4ad0 <unlink>
-+     302:	de250513          	add	a0,a0,-542 # 50e0 <malloc+0x208>
-+     306:	754040ef          	jal	4a5a <unlink>
-      30a:	25800913          	li	s2,600
-   for(int i = 0; i < assumed_free; i++){
-     int fd = open("junk", O_CREATE|O_WRONLY);
-      30e:	00005997          	auipc	s3,0x5
--     312:	e6298993          	addi	s3,s3,-414 # 5170 <malloc+0x224>
-+     312:	dd298993          	add	s3,s3,-558 # 50e0 <malloc+0x208>
-     if(fd < 0){
-       printf("open junk failed\n");
-       exit(1);
-     }
-     write(fd, (char*)0xffffffffffL, 1);
-      316:	5a7d                	li	s4,-1
--     318:	018a5a13          	srli	s4,s4,0x18
-+     318:	018a5a13          	srl	s4,s4,0x18
-     int fd = open("junk", O_CREATE|O_WRONLY);
-      31c:	20100593          	li	a1,513
-      320:	854e                	mv	a0,s3
--     322:	79e040ef          	jal	4ac0 <open>
-+     322:	728040ef          	jal	4a4a <open>
-      326:	84aa                	mv	s1,a0
-     if(fd < 0){
-      328:	04054d63          	bltz	a0,382 <badwrite+0x94>
-     write(fd, (char*)0xffffffffffL, 1);
-      32c:	4605                	li	a2,1
-      32e:	85d2                	mv	a1,s4
--     330:	770040ef          	jal	4aa0 <write>
-+     330:	6fa040ef          	jal	4a2a <write>
-     close(fd);
-      334:	8526                	mv	a0,s1
--     336:	772040ef          	jal	4aa8 <close>
-+     336:	6fc040ef          	jal	4a32 <close>
-     unlink("junk");
-      33a:	854e                	mv	a0,s3
--     33c:	794040ef          	jal	4ad0 <unlink>
-+     33c:	71e040ef          	jal	4a5a <unlink>
-   for(int i = 0; i < assumed_free; i++){
--     340:	397d                	addiw	s2,s2,-1
-+     340:	397d                	addw	s2,s2,-1
-      342:	fc091de3          	bnez	s2,31c <badwrite+0x2e>
-   }
- 
-   int fd = open("junk", O_CREATE|O_WRONLY);
-      346:	20100593          	li	a1,513
-      34a:	00005517          	auipc	a0,0x5
--     34e:	e2650513          	addi	a0,a0,-474 # 5170 <malloc+0x224>
--     352:	76e040ef          	jal	4ac0 <open>
-+     34e:	d9650513          	add	a0,a0,-618 # 50e0 <malloc+0x208>
-+     352:	6f8040ef          	jal	4a4a <open>
-      356:	84aa                	mv	s1,a0
-   if(fd < 0){
-      358:	02054e63          	bltz	a0,394 <badwrite+0xa6>
-@@ -431,43 +431,43 @@ badwrite(char *s)
-   if(write(fd, "x", 1) != 1){
-      35c:	4605                	li	a2,1
-      35e:	00005597          	auipc	a1,0x5
--     362:	d9a58593          	addi	a1,a1,-614 # 50f8 <malloc+0x1ac>
--     366:	73a040ef          	jal	4aa0 <write>
-+     362:	d0a58593          	add	a1,a1,-758 # 5068 <malloc+0x190>
-+     366:	6c4040ef          	jal	4a2a <write>
-      36a:	4785                	li	a5,1
-      36c:	02f50d63          	beq	a0,a5,3a6 <badwrite+0xb8>
-     printf("write failed\n");
-      370:	00005517          	auipc	a0,0x5
--     374:	e2050513          	addi	a0,a0,-480 # 5190 <malloc+0x244>
--     378:	321040ef          	jal	4e98 <printf>
-+     374:	d9050513          	add	a0,a0,-624 # 5100 <malloc+0x228>
-+     378:	2ad040ef          	jal	4e24 <printf>
-     exit(1);
-      37c:	4505                	li	a0,1
--     37e:	702040ef          	jal	4a80 <exit>
-+     37e:	68c040ef          	jal	4a0a <exit>
-       printf("open junk failed\n");
-      382:	00005517          	auipc	a0,0x5
--     386:	df650513          	addi	a0,a0,-522 # 5178 <malloc+0x22c>
--     38a:	30f040ef          	jal	4e98 <printf>
-+     386:	d6650513          	add	a0,a0,-666 # 50e8 <malloc+0x210>
-+     38a:	29b040ef          	jal	4e24 <printf>
-       exit(1);
-      38e:	4505                	li	a0,1
--     390:	6f0040ef          	jal	4a80 <exit>
-+     390:	67a040ef          	jal	4a0a <exit>
-     printf("open junk failed\n");
-      394:	00005517          	auipc	a0,0x5
--     398:	de450513          	addi	a0,a0,-540 # 5178 <malloc+0x22c>
--     39c:	2fd040ef          	jal	4e98 <printf>
-+     398:	d5450513          	add	a0,a0,-684 # 50e8 <malloc+0x210>
-+     39c:	289040ef          	jal	4e24 <printf>
-     exit(1);
-      3a0:	4505                	li	a0,1
--     3a2:	6de040ef          	jal	4a80 <exit>
-+     3a2:	668040ef          	jal	4a0a <exit>
-   }
-   close(fd);
-      3a6:	8526                	mv	a0,s1
--     3a8:	700040ef          	jal	4aa8 <close>
-+     3a8:	68a040ef          	jal	4a32 <close>
-   unlink("junk");
-      3ac:	00005517          	auipc	a0,0x5
--     3b0:	dc450513          	addi	a0,a0,-572 # 5170 <malloc+0x224>
--     3b4:	71c040ef          	jal	4ad0 <unlink>
-+     3b0:	d3450513          	add	a0,a0,-716 # 50e0 <malloc+0x208>
-+     3b4:	6a6040ef          	jal	4a5a <unlink>
- 
-   exit(0);
-      3b8:	4501                	li	a0,0
--     3ba:	6c6040ef          	jal	4a80 <exit>
-+     3ba:	650040ef          	jal	4a0a <exit>
- 
- 00000000000003be <outofinodes>:
-   }
-@@ -476,13 +476,13 @@ badwrite(char *s)
- void
- outofinodes(char *s)
- {
--     3be:	715d                	addi	sp,sp,-80
-+     3be:	715d                	add	sp,sp,-80
-      3c0:	e486                	sd	ra,72(sp)
-      3c2:	e0a2                	sd	s0,64(sp)
-      3c4:	fc26                	sd	s1,56(sp)
-      3c6:	f84a                	sd	s2,48(sp)
-      3c8:	f44e                	sd	s3,40(sp)
--     3ca:	0880                	addi	s0,sp,80
-+     3ca:	0880                	add	s0,sp,80
-   int nzz = 32*32;
-   for(int i = 0; i < nzz; i++){
-      3cc:	4481                	li	s1,0
-@@ -496,35 +496,35 @@ outofinodes(char *s)
-     name[1] = 'z';
-      3da:	fb2408a3          	sb	s2,-79(s0)
-     name[2] = '0' + (i / 32);
--     3de:	41f4d71b          	sraiw	a4,s1,0x1f
--     3e2:	01b7571b          	srliw	a4,a4,0x1b
-+     3de:	41f4d71b          	sraw	a4,s1,0x1f
-+     3e2:	01b7571b          	srlw	a4,a4,0x1b
-      3e6:	009707bb          	addw	a5,a4,s1
--     3ea:	4057d69b          	sraiw	a3,a5,0x5
--     3ee:	0306869b          	addiw	a3,a3,48
-+     3ea:	4057d69b          	sraw	a3,a5,0x5
-+     3ee:	0306869b          	addw	a3,a3,48
-      3f2:	fad40923          	sb	a3,-78(s0)
-     name[3] = '0' + (i % 32);
--     3f6:	8bfd                	andi	a5,a5,31
-+     3f6:	8bfd                	and	a5,a5,31
-      3f8:	9f99                	subw	a5,a5,a4
--     3fa:	0307879b          	addiw	a5,a5,48
-+     3fa:	0307879b          	addw	a5,a5,48
-      3fe:	faf409a3          	sb	a5,-77(s0)
-     name[4] = '\0';
-      402:	fa040a23          	sb	zero,-76(s0)
-     unlink(name);
--     406:	fb040513          	addi	a0,s0,-80
--     40a:	6c6040ef          	jal	4ad0 <unlink>
-+     406:	fb040513          	add	a0,s0,-80
-+     40a:	650040ef          	jal	4a5a <unlink>
-     int fd = open(name, O_CREATE|O_RDWR|O_TRUNC);
-      40e:	60200593          	li	a1,1538
--     412:	fb040513          	addi	a0,s0,-80
--     416:	6aa040ef          	jal	4ac0 <open>
-+     412:	fb040513          	add	a0,s0,-80
-+     416:	634040ef          	jal	4a4a <open>
-     if(fd < 0){
-      41a:	00054763          	bltz	a0,428 <outofinodes+0x6a>
-       /* failure is eventually expected. */
-       break;
-     }
-     close(fd);
--     41e:	68a040ef          	jal	4aa8 <close>
-+     41e:	614040ef          	jal	4a32 <close>
-   for(int i = 0; i < nzz; i++){
--     422:	2485                	addiw	s1,s1,1
-+     422:	2485                	addw	s1,s1,1
-      424:	fb3499e3          	bne	s1,s3,3d6 <outofinodes+0x18>
-      428:	4481                	li	s1,0
-   }
-@@ -540,24 +540,24 @@ outofinodes(char *s)
-     name[1] = 'z';
-      436:	fb2408a3          	sb	s2,-79(s0)
-     name[2] = '0' + (i / 32);
--     43a:	41f4d71b          	sraiw	a4,s1,0x1f
--     43e:	01b7571b          	srliw	a4,a4,0x1b
-+     43a:	41f4d71b          	sraw	a4,s1,0x1f
-+     43e:	01b7571b          	srlw	a4,a4,0x1b
-      442:	009707bb          	addw	a5,a4,s1
--     446:	4057d69b          	sraiw	a3,a5,0x5
--     44a:	0306869b          	addiw	a3,a3,48
-+     446:	4057d69b          	sraw	a3,a5,0x5
-+     44a:	0306869b          	addw	a3,a3,48
-      44e:	fad40923          	sb	a3,-78(s0)
-     name[3] = '0' + (i % 32);
--     452:	8bfd                	andi	a5,a5,31
-+     452:	8bfd                	and	a5,a5,31
-      454:	9f99                	subw	a5,a5,a4
--     456:	0307879b          	addiw	a5,a5,48
-+     456:	0307879b          	addw	a5,a5,48
-      45a:	faf409a3          	sb	a5,-77(s0)
-     name[4] = '\0';
-      45e:	fa040a23          	sb	zero,-76(s0)
-     unlink(name);
--     462:	fb040513          	addi	a0,s0,-80
--     466:	66a040ef          	jal	4ad0 <unlink>
-+     462:	fb040513          	add	a0,s0,-80
-+     466:	5f4040ef          	jal	4a5a <unlink>
-   for(int i = 0; i < nzz; i++){
--     46a:	2485                	addiw	s1,s1,1
-+     46a:	2485                	addw	s1,s1,1
-      46c:	fd3493e3          	bne	s1,s3,432 <outofinodes+0x74>
-   }
- }
-@@ -566,12 +566,12 @@ outofinodes(char *s)
-      474:	74e2                	ld	s1,56(sp)
-      476:	7942                	ld	s2,48(sp)
-      478:	79a2                	ld	s3,40(sp)
--     47a:	6161                	addi	sp,sp,80
-+     47a:	6161                	add	sp,sp,80
-      47c:	8082                	ret
- 
- 000000000000047e <copyin>:
- {
--     47e:	7159                	addi	sp,sp,-112
-+     47e:	7159                	add	sp,sp,-112
-      480:	f486                	sd	ra,104(sp)
-      482:	f0a2                	sd	s0,96(sp)
-      484:	eca6                	sd	s1,88(sp)
-@@ -579,10 +579,10 @@ outofinodes(char *s)
-      488:	e4ce                	sd	s3,72(sp)
-      48a:	e0d2                	sd	s4,64(sp)
-      48c:	fc56                	sd	s5,56(sp)
--     48e:	1880                	addi	s0,sp,112
-+     48e:	1880                	add	s0,sp,112
-   uint64 addrs[] = { 0x80000000LL, 0x3fffffe000, 0x3ffffff000, 0x4000000000,
-      490:	00007797          	auipc	a5,0x7
--     494:	f5878793          	addi	a5,a5,-168 # 73e8 <malloc+0x249c>
-+     494:	ec078793          	add	a5,a5,-320 # 7350 <malloc+0x2478>
-      498:	638c                	ld	a1,0(a5)
-      49a:	6790                	ld	a2,8(a5)
-      49c:	6b94                	ld	a3,16(a5)
-@@ -594,58 +594,58 @@ outofinodes(char *s)
-      4ae:	fae43823          	sd	a4,-80(s0)
-      4b2:	faf43c23          	sd	a5,-72(s0)
-   for(int ai = 0; ai < sizeof(addrs)/sizeof(addrs[0]); ai++){
--     4b6:	f9840913          	addi	s2,s0,-104
--     4ba:	fc040a93          	addi	s5,s0,-64
-+     4b6:	f9840913          	add	s2,s0,-104
-+     4ba:	fc040a93          	add	s5,s0,-64
-     int fd = open("copyin1", O_CREATE|O_WRONLY);
-      4be:	00005a17          	auipc	s4,0x5
--     4c2:	ce2a0a13          	addi	s4,s4,-798 # 51a0 <malloc+0x254>
-+     4c2:	c52a0a13          	add	s4,s4,-942 # 5110 <malloc+0x238>
-     uint64 addr = addrs[ai];
-      4c6:	00093983          	ld	s3,0(s2)
-     int fd = open("copyin1", O_CREATE|O_WRONLY);
-      4ca:	20100593          	li	a1,513
-      4ce:	8552                	mv	a0,s4
--     4d0:	5f0040ef          	jal	4ac0 <open>
-+     4d0:	57a040ef          	jal	4a4a <open>
-      4d4:	84aa                	mv	s1,a0
-     if(fd < 0){
-      4d6:	06054763          	bltz	a0,544 <copyin+0xc6>
-     int n = write(fd, (void*)addr, 8192);
-      4da:	6609                	lui	a2,0x2
-      4dc:	85ce                	mv	a1,s3
--     4de:	5c2040ef          	jal	4aa0 <write>
-+     4de:	54c040ef          	jal	4a2a <write>
-     if(n >= 0){
-      4e2:	06055a63          	bgez	a0,556 <copyin+0xd8>
-     close(fd);
-      4e6:	8526                	mv	a0,s1
--     4e8:	5c0040ef          	jal	4aa8 <close>
-+     4e8:	54a040ef          	jal	4a32 <close>
-     unlink("copyin1");
-      4ec:	8552                	mv	a0,s4
--     4ee:	5e2040ef          	jal	4ad0 <unlink>
-+     4ee:	56c040ef          	jal	4a5a <unlink>
-     n = write(1, (char*)addr, 8192);
-      4f2:	6609                	lui	a2,0x2
-      4f4:	85ce                	mv	a1,s3
-      4f6:	4505                	li	a0,1
--     4f8:	5a8040ef          	jal	4aa0 <write>
-+     4f8:	532040ef          	jal	4a2a <write>
-     if(n > 0){
-      4fc:	06a04863          	bgtz	a0,56c <copyin+0xee>
-     if(pipe(fds) < 0){
--     500:	f9040513          	addi	a0,s0,-112
--     504:	58c040ef          	jal	4a90 <pipe>
-+     500:	f9040513          	add	a0,s0,-112
-+     504:	516040ef          	jal	4a1a <pipe>
-      508:	06054d63          	bltz	a0,582 <copyin+0x104>
-     n = write(fds[1], (char*)addr, 8192);
-      50c:	6609                	lui	a2,0x2
-      50e:	85ce                	mv	a1,s3
-      510:	f9442503          	lw	a0,-108(s0)
--     514:	58c040ef          	jal	4aa0 <write>
-+     514:	516040ef          	jal	4a2a <write>
-     if(n > 0){
-      518:	06a04e63          	bgtz	a0,594 <copyin+0x116>
-     close(fds[0]);
-      51c:	f9042503          	lw	a0,-112(s0)
--     520:	588040ef          	jal	4aa8 <close>
-+     520:	512040ef          	jal	4a32 <close>
-     close(fds[1]);
-      524:	f9442503          	lw	a0,-108(s0)
--     528:	580040ef          	jal	4aa8 <close>
-+     528:	50a040ef          	jal	4a32 <close>
-   for(int ai = 0; ai < sizeof(addrs)/sizeof(addrs[0]); ai++){
--     52c:	0921                	addi	s2,s2,8
-+     52c:	0921                	add	s2,s2,8
-      52e:	f9591ce3          	bne	s2,s5,4c6 <copyin+0x48>
- }
-      532:	70a6                	ld	ra,104(sp)
-@@ -655,53 +655,53 @@ outofinodes(char *s)
-      53a:	69a6                	ld	s3,72(sp)
-      53c:	6a06                	ld	s4,64(sp)
-      53e:	7ae2                	ld	s5,56(sp)
--     540:	6165                	addi	sp,sp,112
-+     540:	6165                	add	sp,sp,112
-      542:	8082                	ret
-       printf("open(copyin1) failed\n");
-      544:	00005517          	auipc	a0,0x5
--     548:	c6450513          	addi	a0,a0,-924 # 51a8 <malloc+0x25c>
--     54c:	14d040ef          	jal	4e98 <printf>
-+     548:	bd450513          	add	a0,a0,-1068 # 5118 <malloc+0x240>
-+     54c:	0d9040ef          	jal	4e24 <printf>
-       exit(1);
-      550:	4505                	li	a0,1
--     552:	52e040ef          	jal	4a80 <exit>
-+     552:	4b8040ef          	jal	4a0a <exit>
-       printf("write(fd, %p, 8192) returned %d, not -1\n", (void*)addr, n);
-      556:	862a                	mv	a2,a0
-      558:	85ce                	mv	a1,s3
-      55a:	00005517          	auipc	a0,0x5
--     55e:	c6650513          	addi	a0,a0,-922 # 51c0 <malloc+0x274>
--     562:	137040ef          	jal	4e98 <printf>
-+     55e:	bd650513          	add	a0,a0,-1066 # 5130 <malloc+0x258>
-+     562:	0c3040ef          	jal	4e24 <printf>
-       exit(1);
-      566:	4505                	li	a0,1
--     568:	518040ef          	jal	4a80 <exit>
-+     568:	4a2040ef          	jal	4a0a <exit>
-       printf("write(1, %p, 8192) returned %d, not -1 or 0\n", (void*)addr, n);
-      56c:	862a                	mv	a2,a0
-      56e:	85ce                	mv	a1,s3
-      570:	00005517          	auipc	a0,0x5
--     574:	c8050513          	addi	a0,a0,-896 # 51f0 <malloc+0x2a4>
--     578:	121040ef          	jal	4e98 <printf>
-+     574:	bf050513          	add	a0,a0,-1040 # 5160 <malloc+0x288>
-+     578:	0ad040ef          	jal	4e24 <printf>
-       exit(1);
-      57c:	4505                	li	a0,1
--     57e:	502040ef          	jal	4a80 <exit>
-+     57e:	48c040ef          	jal	4a0a <exit>
-       printf("pipe() failed\n");
-      582:	00005517          	auipc	a0,0x5
--     586:	c9e50513          	addi	a0,a0,-866 # 5220 <malloc+0x2d4>
--     58a:	10f040ef          	jal	4e98 <printf>
-+     586:	c0e50513          	add	a0,a0,-1010 # 5190 <malloc+0x2b8>
-+     58a:	09b040ef          	jal	4e24 <printf>
-       exit(1);
-      58e:	4505                	li	a0,1
--     590:	4f0040ef          	jal	4a80 <exit>
-+     590:	47a040ef          	jal	4a0a <exit>
-       printf("write(pipe, %p, 8192) returned %d, not -1 or 0\n", (void*)addr, n);
-      594:	862a                	mv	a2,a0
-      596:	85ce                	mv	a1,s3
-      598:	00005517          	auipc	a0,0x5
--     59c:	c9850513          	addi	a0,a0,-872 # 5230 <malloc+0x2e4>
--     5a0:	0f9040ef          	jal	4e98 <printf>
-+     59c:	c0850513          	add	a0,a0,-1016 # 51a0 <malloc+0x2c8>
-+     5a0:	085040ef          	jal	4e24 <printf>
-       exit(1);
-      5a4:	4505                	li	a0,1
--     5a6:	4da040ef          	jal	4a80 <exit>
-+     5a6:	464040ef          	jal	4a0a <exit>
- 
- 00000000000005aa <copyout>:
- {
--     5aa:	7119                	addi	sp,sp,-128
-+     5aa:	7119                	add	sp,sp,-128
-      5ac:	fc86                	sd	ra,120(sp)
-      5ae:	f8a2                	sd	s0,112(sp)
-      5b0:	f4a6                	sd	s1,104(sp)
-@@ -710,10 +710,10 @@ outofinodes(char *s)
-      5b6:	e8d2                	sd	s4,80(sp)
-      5b8:	e4d6                	sd	s5,72(sp)
-      5ba:	e0da                	sd	s6,64(sp)
--     5bc:	0100                	addi	s0,sp,128
-+     5bc:	0100                	add	s0,sp,128
-   uint64 addrs[] = { 0LL, 0x80000000LL, 0x3fffffe000, 0x3ffffff000, 0x4000000000,
-      5be:	00007797          	auipc	a5,0x7
--     5c2:	e2a78793          	addi	a5,a5,-470 # 73e8 <malloc+0x249c>
-+     5c2:	d9278793          	add	a5,a5,-622 # 7350 <malloc+0x2478>
-      5c6:	7788                	ld	a0,40(a5)
-      5c8:	7b8c                	ld	a1,48(a5)
-      5ca:	7f90                	ld	a2,56(a5)
-@@ -727,41 +727,41 @@ outofinodes(char *s)
-      5e2:	fae43823          	sd	a4,-80(s0)
-      5e6:	faf43c23          	sd	a5,-72(s0)
-   for(int ai = 0; ai < sizeof(addrs)/sizeof(addrs[0]); ai++){
--     5ea:	f9040913          	addi	s2,s0,-112
--     5ee:	fc040b13          	addi	s6,s0,-64
-+     5ea:	f9040913          	add	s2,s0,-112
-+     5ee:	fc040b13          	add	s6,s0,-64
-     int fd = open("README", 0);
-      5f2:	00005a17          	auipc	s4,0x5
--     5f6:	c6ea0a13          	addi	s4,s4,-914 # 5260 <malloc+0x314>
-+     5f6:	bdea0a13          	add	s4,s4,-1058 # 51d0 <malloc+0x2f8>
-     n = write(fds[1], "x", 1);
-      5fa:	00005a97          	auipc	s5,0x5
--     5fe:	afea8a93          	addi	s5,s5,-1282 # 50f8 <malloc+0x1ac>
-+     5fe:	a6ea8a93          	add	s5,s5,-1426 # 5068 <malloc+0x190>
-     uint64 addr = addrs[ai];
-      602:	00093983          	ld	s3,0(s2)
-     int fd = open("README", 0);
-      606:	4581                	li	a1,0
-      608:	8552                	mv	a0,s4
--     60a:	4b6040ef          	jal	4ac0 <open>
-+     60a:	440040ef          	jal	4a4a <open>
-      60e:	84aa                	mv	s1,a0
-     if(fd < 0){
-      610:	06054763          	bltz	a0,67e <copyout+0xd4>
-     int n = read(fd, (void*)addr, 8192);
-      614:	6609                	lui	a2,0x2
-      616:	85ce                	mv	a1,s3
--     618:	480040ef          	jal	4a98 <read>
-+     618:	40a040ef          	jal	4a22 <read>
-     if(n > 0){
-      61c:	06a04a63          	bgtz	a0,690 <copyout+0xe6>
-     close(fd);
-      620:	8526                	mv	a0,s1
--     622:	486040ef          	jal	4aa8 <close>
-+     622:	410040ef          	jal	4a32 <close>
-     if(pipe(fds) < 0){
--     626:	f8840513          	addi	a0,s0,-120
--     62a:	466040ef          	jal	4a90 <pipe>
-+     626:	f8840513          	add	a0,s0,-120
-+     62a:	3f0040ef          	jal	4a1a <pipe>
-      62e:	06054c63          	bltz	a0,6a6 <copyout+0xfc>
-     n = write(fds[1], "x", 1);
-      632:	4605                	li	a2,1
-      634:	85d6                	mv	a1,s5
-      636:	f8c42503          	lw	a0,-116(s0)
--     63a:	466040ef          	jal	4aa0 <write>
-+     63a:	3f0040ef          	jal	4a2a <write>
-     if(n != 1){
-      63e:	4785                	li	a5,1
-      640:	06f51c63          	bne	a0,a5,6b8 <copyout+0x10e>
-@@ -769,17 +769,17 @@ outofinodes(char *s)
-      644:	6609                	lui	a2,0x2
-      646:	85ce                	mv	a1,s3
-      648:	f8842503          	lw	a0,-120(s0)
--     64c:	44c040ef          	jal	4a98 <read>
-+     64c:	3d6040ef          	jal	4a22 <read>
-     if(n > 0){
-      650:	06a04d63          	bgtz	a0,6ca <copyout+0x120>
-     close(fds[0]);
-      654:	f8842503          	lw	a0,-120(s0)
--     658:	450040ef          	jal	4aa8 <close>
-+     658:	3da040ef          	jal	4a32 <close>
-     close(fds[1]);
-      65c:	f8c42503          	lw	a0,-116(s0)
--     660:	448040ef          	jal	4aa8 <close>
-+     660:	3d2040ef          	jal	4a32 <close>
-   for(int ai = 0; ai < sizeof(addrs)/sizeof(addrs[0]); ai++){
--     664:	0921                	addi	s2,s2,8
-+     664:	0921                	add	s2,s2,8
-      666:	f9691ee3          	bne	s2,s6,602 <copyout+0x58>
- }
-      66a:	70e6                	ld	ra,120(sp)
-@@ -790,51 +790,51 @@ outofinodes(char *s)
-      674:	6a46                	ld	s4,80(sp)
-      676:	6aa6                	ld	s5,72(sp)
-      678:	6b06                	ld	s6,64(sp)
--     67a:	6109                	addi	sp,sp,128
-+     67a:	6109                	add	sp,sp,128
-      67c:	8082                	ret
-       printf("open(README) failed\n");
-      67e:	00005517          	auipc	a0,0x5
--     682:	bea50513          	addi	a0,a0,-1046 # 5268 <malloc+0x31c>
--     686:	013040ef          	jal	4e98 <printf>
-+     682:	b5a50513          	add	a0,a0,-1190 # 51d8 <malloc+0x300>
-+     686:	79e040ef          	jal	4e24 <printf>
-       exit(1);
-      68a:	4505                	li	a0,1
--     68c:	3f4040ef          	jal	4a80 <exit>
-+     68c:	37e040ef          	jal	4a0a <exit>
-       printf("read(fd, %p, 8192) returned %d, not -1 or 0\n", (void*)addr, n);
-      690:	862a                	mv	a2,a0
-      692:	85ce                	mv	a1,s3
-      694:	00005517          	auipc	a0,0x5
--     698:	bec50513          	addi	a0,a0,-1044 # 5280 <malloc+0x334>
--     69c:	7fc040ef          	jal	4e98 <printf>
-+     698:	b5c50513          	add	a0,a0,-1188 # 51f0 <malloc+0x318>
-+     69c:	788040ef          	jal	4e24 <printf>
-       exit(1);
-      6a0:	4505                	li	a0,1
--     6a2:	3de040ef          	jal	4a80 <exit>
-+     6a2:	368040ef          	jal	4a0a <exit>
-       printf("pipe() failed\n");
-      6a6:	00005517          	auipc	a0,0x5
--     6aa:	b7a50513          	addi	a0,a0,-1158 # 5220 <malloc+0x2d4>
--     6ae:	7ea040ef          	jal	4e98 <printf>
-+     6aa:	aea50513          	add	a0,a0,-1302 # 5190 <malloc+0x2b8>
-+     6ae:	776040ef          	jal	4e24 <printf>
-       exit(1);
-      6b2:	4505                	li	a0,1
--     6b4:	3cc040ef          	jal	4a80 <exit>
-+     6b4:	356040ef          	jal	4a0a <exit>
-       printf("pipe write failed\n");
-      6b8:	00005517          	auipc	a0,0x5
--     6bc:	bf850513          	addi	a0,a0,-1032 # 52b0 <malloc+0x364>
--     6c0:	7d8040ef          	jal	4e98 <printf>
-+     6bc:	b6850513          	add	a0,a0,-1176 # 5220 <malloc+0x348>
-+     6c0:	764040ef          	jal	4e24 <printf>
-       exit(1);
-      6c4:	4505                	li	a0,1
--     6c6:	3ba040ef          	jal	4a80 <exit>
-+     6c6:	344040ef          	jal	4a0a <exit>
-       printf("read(pipe, %p, 8192) returned %d, not -1 or 0\n", (void*)addr, n);
-      6ca:	862a                	mv	a2,a0
-      6cc:	85ce                	mv	a1,s3
-      6ce:	00005517          	auipc	a0,0x5
--     6d2:	bfa50513          	addi	a0,a0,-1030 # 52c8 <malloc+0x37c>
--     6d6:	7c2040ef          	jal	4e98 <printf>
-+     6d2:	b6a50513          	add	a0,a0,-1174 # 5238 <malloc+0x360>
-+     6d6:	74e040ef          	jal	4e24 <printf>
-       exit(1);
-      6da:	4505                	li	a0,1
--     6dc:	3a4040ef          	jal	4a80 <exit>
-+     6dc:	32e040ef          	jal	4a0a <exit>
- 
- 00000000000006e0 <truncate1>:
- {
--     6e0:	711d                	addi	sp,sp,-96
-+     6e0:	711d                	add	sp,sp,-96
-      6e2:	ec86                	sd	ra,88(sp)
-      6e4:	e8a2                	sd	s0,80(sp)
-      6e6:	e4a6                	sd	s1,72(sp)
-@@ -842,101 +842,101 @@ outofinodes(char *s)
-      6ea:	fc4e                	sd	s3,56(sp)
-      6ec:	f852                	sd	s4,48(sp)
-      6ee:	f456                	sd	s5,40(sp)
--     6f0:	1080                	addi	s0,sp,96
-+     6f0:	1080                	add	s0,sp,96
-      6f2:	8aaa                	mv	s5,a0
-   unlink("truncfile");
-      6f4:	00005517          	auipc	a0,0x5
--     6f8:	9ec50513          	addi	a0,a0,-1556 # 50e0 <malloc+0x194>
--     6fc:	3d4040ef          	jal	4ad0 <unlink>
-+     6f8:	95c50513          	add	a0,a0,-1700 # 5050 <malloc+0x178>
-+     6fc:	35e040ef          	jal	4a5a <unlink>
-   int fd1 = open("truncfile", O_CREATE|O_WRONLY|O_TRUNC);
-      700:	60100593          	li	a1,1537
-      704:	00005517          	auipc	a0,0x5
--     708:	9dc50513          	addi	a0,a0,-1572 # 50e0 <malloc+0x194>
--     70c:	3b4040ef          	jal	4ac0 <open>
-+     708:	94c50513          	add	a0,a0,-1716 # 5050 <malloc+0x178>
-+     70c:	33e040ef          	jal	4a4a <open>
-      710:	84aa                	mv	s1,a0
-   write(fd1, "abcd", 4);
-      712:	4611                	li	a2,4
-      714:	00005597          	auipc	a1,0x5
--     718:	9dc58593          	addi	a1,a1,-1572 # 50f0 <malloc+0x1a4>
--     71c:	384040ef          	jal	4aa0 <write>
-+     718:	94c58593          	add	a1,a1,-1716 # 5060 <malloc+0x188>
-+     71c:	30e040ef          	jal	4a2a <write>
-   close(fd1);
-      720:	8526                	mv	a0,s1
--     722:	386040ef          	jal	4aa8 <close>
-+     722:	310040ef          	jal	4a32 <close>
-   int fd2 = open("truncfile", O_RDONLY);
-      726:	4581                	li	a1,0
-      728:	00005517          	auipc	a0,0x5
--     72c:	9b850513          	addi	a0,a0,-1608 # 50e0 <malloc+0x194>
--     730:	390040ef          	jal	4ac0 <open>
-+     72c:	92850513          	add	a0,a0,-1752 # 5050 <malloc+0x178>
-+     730:	31a040ef          	jal	4a4a <open>
-      734:	84aa                	mv	s1,a0
-   int n = read(fd2, buf, sizeof(buf));
-      736:	02000613          	li	a2,32
--     73a:	fa040593          	addi	a1,s0,-96
--     73e:	35a040ef          	jal	4a98 <read>
-+     73a:	fa040593          	add	a1,s0,-96
-+     73e:	2e4040ef          	jal	4a22 <read>
-   if(n != 4){
-      742:	4791                	li	a5,4
-      744:	0af51863          	bne	a0,a5,7f4 <truncate1+0x114>
-   fd1 = open("truncfile", O_WRONLY|O_TRUNC);
-      748:	40100593          	li	a1,1025
-      74c:	00005517          	auipc	a0,0x5
--     750:	99450513          	addi	a0,a0,-1644 # 50e0 <malloc+0x194>
--     754:	36c040ef          	jal	4ac0 <open>
-+     750:	90450513          	add	a0,a0,-1788 # 5050 <malloc+0x178>
-+     754:	2f6040ef          	jal	4a4a <open>
-      758:	89aa                	mv	s3,a0
-   int fd3 = open("truncfile", O_RDONLY);
-      75a:	4581                	li	a1,0
-      75c:	00005517          	auipc	a0,0x5
--     760:	98450513          	addi	a0,a0,-1660 # 50e0 <malloc+0x194>
--     764:	35c040ef          	jal	4ac0 <open>
-+     760:	8f450513          	add	a0,a0,-1804 # 5050 <malloc+0x178>
-+     764:	2e6040ef          	jal	4a4a <open>
-      768:	892a                	mv	s2,a0
-   n = read(fd3, buf, sizeof(buf));
-      76a:	02000613          	li	a2,32
--     76e:	fa040593          	addi	a1,s0,-96
--     772:	326040ef          	jal	4a98 <read>
-+     76e:	fa040593          	add	a1,s0,-96
-+     772:	2b0040ef          	jal	4a22 <read>
-      776:	8a2a                	mv	s4,a0
-   if(n != 0){
-      778:	e949                	bnez	a0,80a <truncate1+0x12a>
-   n = read(fd2, buf, sizeof(buf));
-      77a:	02000613          	li	a2,32
--     77e:	fa040593          	addi	a1,s0,-96
-+     77e:	fa040593          	add	a1,s0,-96
-      782:	8526                	mv	a0,s1
--     784:	314040ef          	jal	4a98 <read>
-+     784:	29e040ef          	jal	4a22 <read>
-      788:	8a2a                	mv	s4,a0
-   if(n != 0){
-      78a:	e155                	bnez	a0,82e <truncate1+0x14e>
-   write(fd1, "abcdef", 6);
-      78c:	4619                	li	a2,6
-      78e:	00005597          	auipc	a1,0x5
--     792:	bca58593          	addi	a1,a1,-1078 # 5358 <malloc+0x40c>
-+     792:	b3a58593          	add	a1,a1,-1222 # 52c8 <malloc+0x3f0>
-      796:	854e                	mv	a0,s3
--     798:	308040ef          	jal	4aa0 <write>
-+     798:	292040ef          	jal	4a2a <write>
-   n = read(fd3, buf, sizeof(buf));
-      79c:	02000613          	li	a2,32
--     7a0:	fa040593          	addi	a1,s0,-96
-+     7a0:	fa040593          	add	a1,s0,-96
-      7a4:	854a                	mv	a0,s2
--     7a6:	2f2040ef          	jal	4a98 <read>
-+     7a6:	27c040ef          	jal	4a22 <read>
-   if(n != 6){
-      7aa:	4799                	li	a5,6
-      7ac:	0af51363          	bne	a0,a5,852 <truncate1+0x172>
-   n = read(fd2, buf, sizeof(buf));
-      7b0:	02000613          	li	a2,32
--     7b4:	fa040593          	addi	a1,s0,-96
-+     7b4:	fa040593          	add	a1,s0,-96
-      7b8:	8526                	mv	a0,s1
--     7ba:	2de040ef          	jal	4a98 <read>
-+     7ba:	268040ef          	jal	4a22 <read>
-   if(n != 2){
-      7be:	4789                	li	a5,2
-      7c0:	0af51463          	bne	a0,a5,868 <truncate1+0x188>
-   unlink("truncfile");
-      7c4:	00005517          	auipc	a0,0x5
--     7c8:	91c50513          	addi	a0,a0,-1764 # 50e0 <malloc+0x194>
--     7cc:	304040ef          	jal	4ad0 <unlink>
-+     7c8:	88c50513          	add	a0,a0,-1908 # 5050 <malloc+0x178>
-+     7cc:	28e040ef          	jal	4a5a <unlink>
-   close(fd1);
-      7d0:	854e                	mv	a0,s3
--     7d2:	2d6040ef          	jal	4aa8 <close>
-+     7d2:	260040ef          	jal	4a32 <close>
-   close(fd2);
-      7d6:	8526                	mv	a0,s1
--     7d8:	2d0040ef          	jal	4aa8 <close>
-+     7d8:	25a040ef          	jal	4a32 <close>
-   close(fd3);
-      7dc:	854a                	mv	a0,s2
--     7de:	2ca040ef          	jal	4aa8 <close>
-+     7de:	254040ef          	jal	4a32 <close>
- }
-      7e2:	60e6                	ld	ra,88(sp)
-      7e4:	6446                	ld	s0,80(sp)
-@@ -945,67 +945,67 @@ outofinodes(char *s)
-      7ea:	79e2                	ld	s3,56(sp)
-      7ec:	7a42                	ld	s4,48(sp)
-      7ee:	7aa2                	ld	s5,40(sp)
--     7f0:	6125                	addi	sp,sp,96
-+     7f0:	6125                	add	sp,sp,96
-      7f2:	8082                	ret
-     printf("%s: read %d bytes, wanted 4\n", s, n);
-      7f4:	862a                	mv	a2,a0
-      7f6:	85d6                	mv	a1,s5
-      7f8:	00005517          	auipc	a0,0x5
--     7fc:	b0050513          	addi	a0,a0,-1280 # 52f8 <malloc+0x3ac>
--     800:	698040ef          	jal	4e98 <printf>
-+     7fc:	a7050513          	add	a0,a0,-1424 # 5268 <malloc+0x390>
-+     800:	624040ef          	jal	4e24 <printf>
-     exit(1);
-      804:	4505                	li	a0,1
--     806:	27a040ef          	jal	4a80 <exit>
-+     806:	204040ef          	jal	4a0a <exit>
-     printf("aaa fd3=%d\n", fd3);
-      80a:	85ca                	mv	a1,s2
-      80c:	00005517          	auipc	a0,0x5
--     810:	b0c50513          	addi	a0,a0,-1268 # 5318 <malloc+0x3cc>
--     814:	684040ef          	jal	4e98 <printf>
-+     810:	a7c50513          	add	a0,a0,-1412 # 5288 <malloc+0x3b0>
-+     814:	610040ef          	jal	4e24 <printf>
-     printf("%s: read %d bytes, wanted 0\n", s, n);
-      818:	8652                	mv	a2,s4
-      81a:	85d6                	mv	a1,s5
-      81c:	00005517          	auipc	a0,0x5
--     820:	b0c50513          	addi	a0,a0,-1268 # 5328 <malloc+0x3dc>
--     824:	674040ef          	jal	4e98 <printf>
-+     820:	a7c50513          	add	a0,a0,-1412 # 5298 <malloc+0x3c0>
-+     824:	600040ef          	jal	4e24 <printf>
-     exit(1);
-      828:	4505                	li	a0,1
--     82a:	256040ef          	jal	4a80 <exit>
-+     82a:	1e0040ef          	jal	4a0a <exit>
-     printf("bbb fd2=%d\n", fd2);
-      82e:	85a6                	mv	a1,s1
-      830:	00005517          	auipc	a0,0x5
--     834:	b1850513          	addi	a0,a0,-1256 # 5348 <malloc+0x3fc>
--     838:	660040ef          	jal	4e98 <printf>
-+     834:	a8850513          	add	a0,a0,-1400 # 52b8 <malloc+0x3e0>
-+     838:	5ec040ef          	jal	4e24 <printf>
-     printf("%s: read %d bytes, wanted 0\n", s, n);
-      83c:	8652                	mv	a2,s4
-      83e:	85d6                	mv	a1,s5
-      840:	00005517          	auipc	a0,0x5
--     844:	ae850513          	addi	a0,a0,-1304 # 5328 <malloc+0x3dc>
--     848:	650040ef          	jal	4e98 <printf>
-+     844:	a5850513          	add	a0,a0,-1448 # 5298 <malloc+0x3c0>
-+     848:	5dc040ef          	jal	4e24 <printf>
-     exit(1);
-      84c:	4505                	li	a0,1
--     84e:	232040ef          	jal	4a80 <exit>
-+     84e:	1bc040ef          	jal	4a0a <exit>
-     printf("%s: read %d bytes, wanted 6\n", s, n);
-      852:	862a                	mv	a2,a0
-      854:	85d6                	mv	a1,s5
-      856:	00005517          	auipc	a0,0x5
--     85a:	b0a50513          	addi	a0,a0,-1270 # 5360 <malloc+0x414>
--     85e:	63a040ef          	jal	4e98 <printf>
-+     85a:	a7a50513          	add	a0,a0,-1414 # 52d0 <malloc+0x3f8>
-+     85e:	5c6040ef          	jal	4e24 <printf>
-     exit(1);
-      862:	4505                	li	a0,1
--     864:	21c040ef          	jal	4a80 <exit>
-+     864:	1a6040ef          	jal	4a0a <exit>
-     printf("%s: read %d bytes, wanted 2\n", s, n);
-      868:	862a                	mv	a2,a0
-      86a:	85d6                	mv	a1,s5
-      86c:	00005517          	auipc	a0,0x5
--     870:	b1450513          	addi	a0,a0,-1260 # 5380 <malloc+0x434>
--     874:	624040ef          	jal	4e98 <printf>
-+     870:	a8450513          	add	a0,a0,-1404 # 52f0 <malloc+0x418>
-+     874:	5b0040ef          	jal	4e24 <printf>
-     exit(1);
-      878:	4505                	li	a0,1
--     87a:	206040ef          	jal	4a80 <exit>
-+     87a:	190040ef          	jal	4a0a <exit>
- 
- 000000000000087e <writetest>:
- {
--     87e:	7139                	addi	sp,sp,-64
-+     87e:	7139                	add	sp,sp,-64
-      880:	fc06                	sd	ra,56(sp)
-      882:	f822                	sd	s0,48(sp)
-      884:	f426                	sd	s1,40(sp)
-@@ -1014,68 +1014,68 @@ outofinodes(char *s)
-      88a:	e852                	sd	s4,16(sp)
-      88c:	e456                	sd	s5,8(sp)
-      88e:	e05a                	sd	s6,0(sp)
--     890:	0080                	addi	s0,sp,64
-+     890:	0080                	add	s0,sp,64
-      892:	8b2a                	mv	s6,a0
-   fd = open("small", O_CREATE|O_RDWR);
-      894:	20200593          	li	a1,514
-      898:	00005517          	auipc	a0,0x5
--     89c:	b0850513          	addi	a0,a0,-1272 # 53a0 <malloc+0x454>
--     8a0:	220040ef          	jal	4ac0 <open>
-+     89c:	a7850513          	add	a0,a0,-1416 # 5310 <malloc+0x438>
-+     8a0:	1aa040ef          	jal	4a4a <open>
-   if(fd < 0){
-      8a4:	08054f63          	bltz	a0,942 <writetest+0xc4>
-      8a8:	892a                	mv	s2,a0
-      8aa:	4481                	li	s1,0
-     if(write(fd, "aaaaaaaaaa", SZ) != SZ){
-      8ac:	00005997          	auipc	s3,0x5
--     8b0:	b1c98993          	addi	s3,s3,-1252 # 53c8 <malloc+0x47c>
-+     8b0:	a8c98993          	add	s3,s3,-1396 # 5338 <malloc+0x460>
-     if(write(fd, "bbbbbbbbbb", SZ) != SZ){
-      8b4:	00005a97          	auipc	s5,0x5
--     8b8:	b4ca8a93          	addi	s5,s5,-1204 # 5400 <malloc+0x4b4>
-+     8b8:	abca8a93          	add	s5,s5,-1348 # 5370 <malloc+0x498>
-   for(i = 0; i < N; i++){
-      8bc:	06400a13          	li	s4,100
-     if(write(fd, "aaaaaaaaaa", SZ) != SZ){
-      8c0:	4629                	li	a2,10
-      8c2:	85ce                	mv	a1,s3
-      8c4:	854a                	mv	a0,s2
--     8c6:	1da040ef          	jal	4aa0 <write>
-+     8c6:	164040ef          	jal	4a2a <write>
-      8ca:	47a9                	li	a5,10
-      8cc:	08f51563          	bne	a0,a5,956 <writetest+0xd8>
-     if(write(fd, "bbbbbbbbbb", SZ) != SZ){
-      8d0:	4629                	li	a2,10
-      8d2:	85d6                	mv	a1,s5
-      8d4:	854a                	mv	a0,s2
--     8d6:	1ca040ef          	jal	4aa0 <write>
-+     8d6:	154040ef          	jal	4a2a <write>
-      8da:	47a9                	li	a5,10
-      8dc:	08f51863          	bne	a0,a5,96c <writetest+0xee>
-   for(i = 0; i < N; i++){
--     8e0:	2485                	addiw	s1,s1,1
-+     8e0:	2485                	addw	s1,s1,1
-      8e2:	fd449fe3          	bne	s1,s4,8c0 <writetest+0x42>
-   close(fd);
-      8e6:	854a                	mv	a0,s2
--     8e8:	1c0040ef          	jal	4aa8 <close>
-+     8e8:	14a040ef          	jal	4a32 <close>
-   fd = open("small", O_RDONLY);
-      8ec:	4581                	li	a1,0
-      8ee:	00005517          	auipc	a0,0x5
--     8f2:	ab250513          	addi	a0,a0,-1358 # 53a0 <malloc+0x454>
--     8f6:	1ca040ef          	jal	4ac0 <open>
-+     8f2:	a2250513          	add	a0,a0,-1502 # 5310 <malloc+0x438>
-+     8f6:	154040ef          	jal	4a4a <open>
-      8fa:	84aa                	mv	s1,a0
-   if(fd < 0){
-      8fc:	08054363          	bltz	a0,982 <writetest+0x104>
-   i = read(fd, buf, N*SZ*2);
-      900:	7d000613          	li	a2,2000
--     904:	0000c597          	auipc	a1,0xc
--     908:	37458593          	addi	a1,a1,884 # cc78 <buf>
--     90c:	18c040ef          	jal	4a98 <read>
-+     904:	0000b597          	auipc	a1,0xb
-+     908:	37458593          	add	a1,a1,884 # bc78 <buf>
-+     90c:	116040ef          	jal	4a22 <read>
-   if(i != N*SZ*2){
-      910:	7d000793          	li	a5,2000
-      914:	08f51163          	bne	a0,a5,996 <writetest+0x118>
-   close(fd);
-      918:	8526                	mv	a0,s1
--     91a:	18e040ef          	jal	4aa8 <close>
-+     91a:	118040ef          	jal	4a32 <close>
-   if(unlink("small") < 0){
-      91e:	00005517          	auipc	a0,0x5
--     922:	a8250513          	addi	a0,a0,-1406 # 53a0 <malloc+0x454>
--     926:	1aa040ef          	jal	4ad0 <unlink>
-+     922:	9f250513          	add	a0,a0,-1550 # 5310 <malloc+0x438>
-+     926:	134040ef          	jal	4a5a <unlink>
-      92a:	08054063          	bltz	a0,9aa <writetest+0x12c>
- }
-      92e:	70e2                	ld	ra,56(sp)
-@@ -1086,62 +1086,62 @@ outofinodes(char *s)
-      938:	6a42                	ld	s4,16(sp)
-      93a:	6aa2                	ld	s5,8(sp)
-      93c:	6b02                	ld	s6,0(sp)
--     93e:	6121                	addi	sp,sp,64
-+     93e:	6121                	add	sp,sp,64
-      940:	8082                	ret
-     printf("%s: error: creat small failed!\n", s);
-      942:	85da                	mv	a1,s6
-      944:	00005517          	auipc	a0,0x5
--     948:	a6450513          	addi	a0,a0,-1436 # 53a8 <malloc+0x45c>
--     94c:	54c040ef          	jal	4e98 <printf>
-+     948:	9d450513          	add	a0,a0,-1580 # 5318 <malloc+0x440>
-+     94c:	4d8040ef          	jal	4e24 <printf>
-     exit(1);
-      950:	4505                	li	a0,1
--     952:	12e040ef          	jal	4a80 <exit>
-+     952:	0b8040ef          	jal	4a0a <exit>
-       printf("%s: error: write aa %d new file failed\n", s, i);
-      956:	8626                	mv	a2,s1
-      958:	85da                	mv	a1,s6
-      95a:	00005517          	auipc	a0,0x5
--     95e:	a7e50513          	addi	a0,a0,-1410 # 53d8 <malloc+0x48c>
--     962:	536040ef          	jal	4e98 <printf>
-+     95e:	9ee50513          	add	a0,a0,-1554 # 5348 <malloc+0x470>
-+     962:	4c2040ef          	jal	4e24 <printf>
-       exit(1);
-      966:	4505                	li	a0,1
--     968:	118040ef          	jal	4a80 <exit>
-+     968:	0a2040ef          	jal	4a0a <exit>
-       printf("%s: error: write bb %d new file failed\n", s, i);
-      96c:	8626                	mv	a2,s1
-      96e:	85da                	mv	a1,s6
-      970:	00005517          	auipc	a0,0x5
--     974:	aa050513          	addi	a0,a0,-1376 # 5410 <malloc+0x4c4>
--     978:	520040ef          	jal	4e98 <printf>
-+     974:	a1050513          	add	a0,a0,-1520 # 5380 <malloc+0x4a8>
-+     978:	4ac040ef          	jal	4e24 <printf>
-       exit(1);
-      97c:	4505                	li	a0,1
--     97e:	102040ef          	jal	4a80 <exit>
-+     97e:	08c040ef          	jal	4a0a <exit>
-     printf("%s: error: open small failed!\n", s);
-      982:	85da                	mv	a1,s6
-      984:	00005517          	auipc	a0,0x5
--     988:	ab450513          	addi	a0,a0,-1356 # 5438 <malloc+0x4ec>
--     98c:	50c040ef          	jal	4e98 <printf>
-+     988:	a2450513          	add	a0,a0,-1500 # 53a8 <malloc+0x4d0>
-+     98c:	498040ef          	jal	4e24 <printf>
-     exit(1);
-      990:	4505                	li	a0,1
--     992:	0ee040ef          	jal	4a80 <exit>
-+     992:	078040ef          	jal	4a0a <exit>
-     printf("%s: read failed\n", s);
-      996:	85da                	mv	a1,s6
-      998:	00005517          	auipc	a0,0x5
--     99c:	ac050513          	addi	a0,a0,-1344 # 5458 <malloc+0x50c>
--     9a0:	4f8040ef          	jal	4e98 <printf>
-+     99c:	a3050513          	add	a0,a0,-1488 # 53c8 <malloc+0x4f0>
-+     9a0:	484040ef          	jal	4e24 <printf>
-     exit(1);
-      9a4:	4505                	li	a0,1
--     9a6:	0da040ef          	jal	4a80 <exit>
-+     9a6:	064040ef          	jal	4a0a <exit>
-     printf("%s: unlink small failed\n", s);
-      9aa:	85da                	mv	a1,s6
-      9ac:	00005517          	auipc	a0,0x5
--     9b0:	ac450513          	addi	a0,a0,-1340 # 5470 <malloc+0x524>
--     9b4:	4e4040ef          	jal	4e98 <printf>
-+     9b0:	a3450513          	add	a0,a0,-1484 # 53e0 <malloc+0x508>
-+     9b4:	470040ef          	jal	4e24 <printf>
-     exit(1);
-      9b8:	4505                	li	a0,1
--     9ba:	0c6040ef          	jal	4a80 <exit>
-+     9ba:	050040ef          	jal	4a0a <exit>
- 
- 00000000000009be <writebig>:
- {
--     9be:	7139                	addi	sp,sp,-64
-+     9be:	7139                	add	sp,sp,-64
-      9c0:	fc06                	sd	ra,56(sp)
-      9c2:	f822                	sd	s0,48(sp)
-      9c4:	f426                	sd	s1,40(sp)
-@@ -1149,19 +1149,19 @@ outofinodes(char *s)
-      9c8:	ec4e                	sd	s3,24(sp)
-      9ca:	e852                	sd	s4,16(sp)
-      9cc:	e456                	sd	s5,8(sp)
--     9ce:	0080                	addi	s0,sp,64
-+     9ce:	0080                	add	s0,sp,64
-      9d0:	8aaa                	mv	s5,a0
-   fd = open("big", O_CREATE|O_RDWR);
-      9d2:	20200593          	li	a1,514
-      9d6:	00005517          	auipc	a0,0x5
--     9da:	aba50513          	addi	a0,a0,-1350 # 5490 <malloc+0x544>
--     9de:	0e2040ef          	jal	4ac0 <open>
-+     9da:	a2a50513          	add	a0,a0,-1494 # 5400 <malloc+0x528>
-+     9de:	06c040ef          	jal	4a4a <open>
-      9e2:	89aa                	mv	s3,a0
-   for(i = 0; i < MAXFILE; i++){
-      9e4:	4481                	li	s1,0
-     ((int*)buf)[0] = i;
--     9e6:	0000c917          	auipc	s2,0xc
--     9ea:	29290913          	addi	s2,s2,658 # cc78 <buf>
-+     9e6:	0000b917          	auipc	s2,0xb
-+     9ea:	29290913          	add	s2,s2,658 # bc78 <buf>
-   for(i = 0; i < MAXFILE; i++){
-      9ee:	10c00a13          	li	s4,268
-   if(fd < 0){
-@@ -1172,33 +1172,33 @@ outofinodes(char *s)
-      9fa:	40000613          	li	a2,1024
-      9fe:	85ca                	mv	a1,s2
-      a00:	854e                	mv	a0,s3
--     a02:	09e040ef          	jal	4aa0 <write>
-+     a02:	028040ef          	jal	4a2a <write>
-      a06:	40000793          	li	a5,1024
-      a0a:	06f51263          	bne	a0,a5,a6e <writebig+0xb0>
-   for(i = 0; i < MAXFILE; i++){
--     a0e:	2485                	addiw	s1,s1,1
-+     a0e:	2485                	addw	s1,s1,1
-      a10:	ff4493e3          	bne	s1,s4,9f6 <writebig+0x38>
-   close(fd);
-      a14:	854e                	mv	a0,s3
--     a16:	092040ef          	jal	4aa8 <close>
-+     a16:	01c040ef          	jal	4a32 <close>
-   fd = open("big", O_RDONLY);
-      a1a:	4581                	li	a1,0
-      a1c:	00005517          	auipc	a0,0x5
--     a20:	a7450513          	addi	a0,a0,-1420 # 5490 <malloc+0x544>
--     a24:	09c040ef          	jal	4ac0 <open>
-+     a20:	9e450513          	add	a0,a0,-1564 # 5400 <malloc+0x528>
-+     a24:	026040ef          	jal	4a4a <open>
-      a28:	89aa                	mv	s3,a0
-   n = 0;
-      a2a:	4481                	li	s1,0
-     i = read(fd, buf, BSIZE);
--     a2c:	0000c917          	auipc	s2,0xc
--     a30:	24c90913          	addi	s2,s2,588 # cc78 <buf>
-+     a2c:	0000b917          	auipc	s2,0xb
-+     a30:	24c90913          	add	s2,s2,588 # bc78 <buf>
-   if(fd < 0){
-      a34:	04054863          	bltz	a0,a84 <writebig+0xc6>
-     i = read(fd, buf, BSIZE);
-      a38:	40000613          	li	a2,1024
-      a3c:	85ca                	mv	a1,s2
-      a3e:	854e                	mv	a0,s3
--     a40:	058040ef          	jal	4a98 <read>
-+     a40:	7e3030ef          	jal	4a22 <read>
-     if(i == 0){
-      a44:	c931                	beqz	a0,a98 <writebig+0xda>
-     } else if(i != BSIZE){
-@@ -1208,44 +1208,44 @@ outofinodes(char *s)
-      a4e:	00092683          	lw	a3,0(s2)
-      a52:	0a969163          	bne	a3,s1,af4 <writebig+0x136>
-     n++;
--     a56:	2485                	addiw	s1,s1,1
-+     a56:	2485                	addw	s1,s1,1
-     i = read(fd, buf, BSIZE);
-      a58:	b7c5                	j	a38 <writebig+0x7a>
-     printf("%s: error: creat big failed!\n", s);
-      a5a:	85d6                	mv	a1,s5
-      a5c:	00005517          	auipc	a0,0x5
--     a60:	a3c50513          	addi	a0,a0,-1476 # 5498 <malloc+0x54c>
--     a64:	434040ef          	jal	4e98 <printf>
-+     a60:	9ac50513          	add	a0,a0,-1620 # 5408 <malloc+0x530>
-+     a64:	3c0040ef          	jal	4e24 <printf>
-     exit(1);
-      a68:	4505                	li	a0,1
--     a6a:	016040ef          	jal	4a80 <exit>
-+     a6a:	7a1030ef          	jal	4a0a <exit>
-       printf("%s: error: write big file failed i=%d\n", s, i);
-      a6e:	8626                	mv	a2,s1
-      a70:	85d6                	mv	a1,s5
-      a72:	00005517          	auipc	a0,0x5
--     a76:	a4650513          	addi	a0,a0,-1466 # 54b8 <malloc+0x56c>
--     a7a:	41e040ef          	jal	4e98 <printf>
-+     a76:	9b650513          	add	a0,a0,-1610 # 5428 <malloc+0x550>
-+     a7a:	3aa040ef          	jal	4e24 <printf>
-       exit(1);
-      a7e:	4505                	li	a0,1
--     a80:	000040ef          	jal	4a80 <exit>
-+     a80:	78b030ef          	jal	4a0a <exit>
-     printf("%s: error: open big failed!\n", s);
-      a84:	85d6                	mv	a1,s5
-      a86:	00005517          	auipc	a0,0x5
--     a8a:	a5a50513          	addi	a0,a0,-1446 # 54e0 <malloc+0x594>
--     a8e:	40a040ef          	jal	4e98 <printf>
-+     a8a:	9ca50513          	add	a0,a0,-1590 # 5450 <malloc+0x578>
-+     a8e:	396040ef          	jal	4e24 <printf>
-     exit(1);
-      a92:	4505                	li	a0,1
--     a94:	7ed030ef          	jal	4a80 <exit>
-+     a94:	777030ef          	jal	4a0a <exit>
-       if(n != MAXFILE){
-      a98:	10c00793          	li	a5,268
-      a9c:	02f49663          	bne	s1,a5,ac8 <writebig+0x10a>
-   close(fd);
-      aa0:	854e                	mv	a0,s3
--     aa2:	006040ef          	jal	4aa8 <close>
-+     aa2:	791030ef          	jal	4a32 <close>
-   if(unlink("big") < 0){
-      aa6:	00005517          	auipc	a0,0x5
--     aaa:	9ea50513          	addi	a0,a0,-1558 # 5490 <malloc+0x544>
--     aae:	022040ef          	jal	4ad0 <unlink>
-+     aaa:	95a50513          	add	a0,a0,-1702 # 5400 <malloc+0x528>
-+     aae:	7ad030ef          	jal	4a5a <unlink>
-      ab2:	04054c63          	bltz	a0,b0a <writebig+0x14c>
- }
-      ab6:	70e2                	ld	ra,56(sp)
-@@ -1255,359 +1255,359 @@ outofinodes(char *s)
-      abe:	69e2                	ld	s3,24(sp)
-      ac0:	6a42                	ld	s4,16(sp)
-      ac2:	6aa2                	ld	s5,8(sp)
--     ac4:	6121                	addi	sp,sp,64
-+     ac4:	6121                	add	sp,sp,64
-      ac6:	8082                	ret
-         printf("%s: read only %d blocks from big", s, n);
-      ac8:	8626                	mv	a2,s1
-      aca:	85d6                	mv	a1,s5
-      acc:	00005517          	auipc	a0,0x5
--     ad0:	a3450513          	addi	a0,a0,-1484 # 5500 <malloc+0x5b4>
--     ad4:	3c4040ef          	jal	4e98 <printf>
-+     ad0:	9a450513          	add	a0,a0,-1628 # 5470 <malloc+0x598>
-+     ad4:	350040ef          	jal	4e24 <printf>
-         exit(1);
-      ad8:	4505                	li	a0,1
--     ada:	7a7030ef          	jal	4a80 <exit>
-+     ada:	731030ef          	jal	4a0a <exit>
-       printf("%s: read failed %d\n", s, i);
-      ade:	862a                	mv	a2,a0
-      ae0:	85d6                	mv	a1,s5
-      ae2:	00005517          	auipc	a0,0x5
--     ae6:	a4650513          	addi	a0,a0,-1466 # 5528 <malloc+0x5dc>
--     aea:	3ae040ef          	jal	4e98 <printf>
-+     ae6:	9b650513          	add	a0,a0,-1610 # 5498 <malloc+0x5c0>
-+     aea:	33a040ef          	jal	4e24 <printf>
-       exit(1);
-      aee:	4505                	li	a0,1
--     af0:	791030ef          	jal	4a80 <exit>
-+     af0:	71b030ef          	jal	4a0a <exit>
-       printf("%s: read content of block %d is %d\n", s,
-      af4:	8626                	mv	a2,s1
-      af6:	85d6                	mv	a1,s5
-      af8:	00005517          	auipc	a0,0x5
--     afc:	a4850513          	addi	a0,a0,-1464 # 5540 <malloc+0x5f4>
--     b00:	398040ef          	jal	4e98 <printf>
-+     afc:	9b850513          	add	a0,a0,-1608 # 54b0 <malloc+0x5d8>
-+     b00:	324040ef          	jal	4e24 <printf>
-       exit(1);
-      b04:	4505                	li	a0,1
--     b06:	77b030ef          	jal	4a80 <exit>
-+     b06:	705030ef          	jal	4a0a <exit>
-     printf("%s: unlink big failed\n", s);
-      b0a:	85d6                	mv	a1,s5
-      b0c:	00005517          	auipc	a0,0x5
--     b10:	a5c50513          	addi	a0,a0,-1444 # 5568 <malloc+0x61c>
--     b14:	384040ef          	jal	4e98 <printf>
-+     b10:	9cc50513          	add	a0,a0,-1588 # 54d8 <malloc+0x600>
-+     b14:	310040ef          	jal	4e24 <printf>
-     exit(1);
-      b18:	4505                	li	a0,1
--     b1a:	767030ef          	jal	4a80 <exit>
-+     b1a:	6f1030ef          	jal	4a0a <exit>
- 
- 0000000000000b1e <unlinkread>:
- {
--     b1e:	7179                	addi	sp,sp,-48
-+     b1e:	7179                	add	sp,sp,-48
-      b20:	f406                	sd	ra,40(sp)
-      b22:	f022                	sd	s0,32(sp)
-      b24:	ec26                	sd	s1,24(sp)
-      b26:	e84a                	sd	s2,16(sp)
-      b28:	e44e                	sd	s3,8(sp)
--     b2a:	1800                	addi	s0,sp,48
-+     b2a:	1800                	add	s0,sp,48
-      b2c:	89aa                	mv	s3,a0
-   fd = open("unlinkread", O_CREATE | O_RDWR);
-      b2e:	20200593          	li	a1,514
-      b32:	00005517          	auipc	a0,0x5
--     b36:	a4e50513          	addi	a0,a0,-1458 # 5580 <malloc+0x634>
--     b3a:	787030ef          	jal	4ac0 <open>
-+     b36:	9be50513          	add	a0,a0,-1602 # 54f0 <malloc+0x618>
-+     b3a:	711030ef          	jal	4a4a <open>
-   if(fd < 0){
-      b3e:	0a054f63          	bltz	a0,bfc <unlinkread+0xde>
-      b42:	84aa                	mv	s1,a0
-   write(fd, "hello", SZ);
-      b44:	4615                	li	a2,5
-      b46:	00005597          	auipc	a1,0x5
--     b4a:	a6a58593          	addi	a1,a1,-1430 # 55b0 <malloc+0x664>
--     b4e:	753030ef          	jal	4aa0 <write>
-+     b4a:	9da58593          	add	a1,a1,-1574 # 5520 <malloc+0x648>
-+     b4e:	6dd030ef          	jal	4a2a <write>
-   close(fd);
-      b52:	8526                	mv	a0,s1
--     b54:	755030ef          	jal	4aa8 <close>
-+     b54:	6df030ef          	jal	4a32 <close>
-   fd = open("unlinkread", O_RDWR);
-      b58:	4589                	li	a1,2
-      b5a:	00005517          	auipc	a0,0x5
--     b5e:	a2650513          	addi	a0,a0,-1498 # 5580 <malloc+0x634>
--     b62:	75f030ef          	jal	4ac0 <open>
-+     b5e:	99650513          	add	a0,a0,-1642 # 54f0 <malloc+0x618>
-+     b62:	6e9030ef          	jal	4a4a <open>
-      b66:	84aa                	mv	s1,a0
-   if(fd < 0){
-      b68:	0a054463          	bltz	a0,c10 <unlinkread+0xf2>
-   if(unlink("unlinkread") != 0){
-      b6c:	00005517          	auipc	a0,0x5
--     b70:	a1450513          	addi	a0,a0,-1516 # 5580 <malloc+0x634>
--     b74:	75d030ef          	jal	4ad0 <unlink>
-+     b70:	98450513          	add	a0,a0,-1660 # 54f0 <malloc+0x618>
-+     b74:	6e7030ef          	jal	4a5a <unlink>
-      b78:	e555                	bnez	a0,c24 <unlinkread+0x106>
-   fd1 = open("unlinkread", O_CREATE | O_RDWR);
-      b7a:	20200593          	li	a1,514
-      b7e:	00005517          	auipc	a0,0x5
--     b82:	a0250513          	addi	a0,a0,-1534 # 5580 <malloc+0x634>
--     b86:	73b030ef          	jal	4ac0 <open>
-+     b82:	97250513          	add	a0,a0,-1678 # 54f0 <malloc+0x618>
-+     b86:	6c5030ef          	jal	4a4a <open>
-      b8a:	892a                	mv	s2,a0
-   write(fd1, "yyy", 3);
-      b8c:	460d                	li	a2,3
-      b8e:	00005597          	auipc	a1,0x5
--     b92:	a6a58593          	addi	a1,a1,-1430 # 55f8 <malloc+0x6ac>
--     b96:	70b030ef          	jal	4aa0 <write>
-+     b92:	9da58593          	add	a1,a1,-1574 # 5568 <malloc+0x690>
-+     b96:	695030ef          	jal	4a2a <write>
-   close(fd1);
-      b9a:	854a                	mv	a0,s2
--     b9c:	70d030ef          	jal	4aa8 <close>
-+     b9c:	697030ef          	jal	4a32 <close>
-   if(read(fd, buf, sizeof(buf)) != SZ){
-      ba0:	660d                	lui	a2,0x3
--     ba2:	0000c597          	auipc	a1,0xc
--     ba6:	0d658593          	addi	a1,a1,214 # cc78 <buf>
-+     ba2:	0000b597          	auipc	a1,0xb
-+     ba6:	0d658593          	add	a1,a1,214 # bc78 <buf>
-      baa:	8526                	mv	a0,s1
--     bac:	6ed030ef          	jal	4a98 <read>
-+     bac:	677030ef          	jal	4a22 <read>
-      bb0:	4795                	li	a5,5
-      bb2:	08f51363          	bne	a0,a5,c38 <unlinkread+0x11a>
-   if(buf[0] != 'h'){
--     bb6:	0000c717          	auipc	a4,0xc
--     bba:	0c274703          	lbu	a4,194(a4) # cc78 <buf>
-+     bb6:	0000b717          	auipc	a4,0xb
-+     bba:	0c274703          	lbu	a4,194(a4) # bc78 <buf>
-      bbe:	06800793          	li	a5,104
-      bc2:	08f71563          	bne	a4,a5,c4c <unlinkread+0x12e>
-   if(write(fd, buf, 10) != 10){
-      bc6:	4629                	li	a2,10
--     bc8:	0000c597          	auipc	a1,0xc
--     bcc:	0b058593          	addi	a1,a1,176 # cc78 <buf>
-+     bc8:	0000b597          	auipc	a1,0xb
-+     bcc:	0b058593          	add	a1,a1,176 # bc78 <buf>
-      bd0:	8526                	mv	a0,s1
--     bd2:	6cf030ef          	jal	4aa0 <write>
-+     bd2:	659030ef          	jal	4a2a <write>
-      bd6:	47a9                	li	a5,10
-      bd8:	08f51463          	bne	a0,a5,c60 <unlinkread+0x142>
-   close(fd);
-      bdc:	8526                	mv	a0,s1
--     bde:	6cb030ef          	jal	4aa8 <close>
-+     bde:	655030ef          	jal	4a32 <close>
-   unlink("unlinkread");
-      be2:	00005517          	auipc	a0,0x5
--     be6:	99e50513          	addi	a0,a0,-1634 # 5580 <malloc+0x634>
--     bea:	6e7030ef          	jal	4ad0 <unlink>
-+     be6:	90e50513          	add	a0,a0,-1778 # 54f0 <malloc+0x618>
-+     bea:	671030ef          	jal	4a5a <unlink>
- }
-      bee:	70a2                	ld	ra,40(sp)
-      bf0:	7402                	ld	s0,32(sp)
-      bf2:	64e2                	ld	s1,24(sp)
-      bf4:	6942                	ld	s2,16(sp)
-      bf6:	69a2                	ld	s3,8(sp)
--     bf8:	6145                	addi	sp,sp,48
-+     bf8:	6145                	add	sp,sp,48
-      bfa:	8082                	ret
-     printf("%s: create unlinkread failed\n", s);
-      bfc:	85ce                	mv	a1,s3
-      bfe:	00005517          	auipc	a0,0x5
--     c02:	99250513          	addi	a0,a0,-1646 # 5590 <malloc+0x644>
--     c06:	292040ef          	jal	4e98 <printf>
-+     c02:	90250513          	add	a0,a0,-1790 # 5500 <malloc+0x628>
-+     c06:	21e040ef          	jal	4e24 <printf>
-     exit(1);
-      c0a:	4505                	li	a0,1
--     c0c:	675030ef          	jal	4a80 <exit>
-+     c0c:	5ff030ef          	jal	4a0a <exit>
-     printf("%s: open unlinkread failed\n", s);
-      c10:	85ce                	mv	a1,s3
-      c12:	00005517          	auipc	a0,0x5
--     c16:	9a650513          	addi	a0,a0,-1626 # 55b8 <malloc+0x66c>
--     c1a:	27e040ef          	jal	4e98 <printf>
-+     c16:	91650513          	add	a0,a0,-1770 # 5528 <malloc+0x650>
-+     c1a:	20a040ef          	jal	4e24 <printf>
-     exit(1);
-      c1e:	4505                	li	a0,1
--     c20:	661030ef          	jal	4a80 <exit>
-+     c20:	5eb030ef          	jal	4a0a <exit>
-     printf("%s: unlink unlinkread failed\n", s);
-      c24:	85ce                	mv	a1,s3
-      c26:	00005517          	auipc	a0,0x5
--     c2a:	9b250513          	addi	a0,a0,-1614 # 55d8 <malloc+0x68c>
--     c2e:	26a040ef          	jal	4e98 <printf>
-+     c2a:	92250513          	add	a0,a0,-1758 # 5548 <malloc+0x670>
-+     c2e:	1f6040ef          	jal	4e24 <printf>
-     exit(1);
-      c32:	4505                	li	a0,1
--     c34:	64d030ef          	jal	4a80 <exit>
-+     c34:	5d7030ef          	jal	4a0a <exit>
-     printf("%s: unlinkread read failed", s);
-      c38:	85ce                	mv	a1,s3
-      c3a:	00005517          	auipc	a0,0x5
--     c3e:	9c650513          	addi	a0,a0,-1594 # 5600 <malloc+0x6b4>
--     c42:	256040ef          	jal	4e98 <printf>
-+     c3e:	93650513          	add	a0,a0,-1738 # 5570 <malloc+0x698>
-+     c42:	1e2040ef          	jal	4e24 <printf>
-     exit(1);
-      c46:	4505                	li	a0,1
--     c48:	639030ef          	jal	4a80 <exit>
-+     c48:	5c3030ef          	jal	4a0a <exit>
-     printf("%s: unlinkread wrong data\n", s);
-      c4c:	85ce                	mv	a1,s3
-      c4e:	00005517          	auipc	a0,0x5
--     c52:	9d250513          	addi	a0,a0,-1582 # 5620 <malloc+0x6d4>
--     c56:	242040ef          	jal	4e98 <printf>
-+     c52:	94250513          	add	a0,a0,-1726 # 5590 <malloc+0x6b8>
-+     c56:	1ce040ef          	jal	4e24 <printf>
-     exit(1);
-      c5a:	4505                	li	a0,1
--     c5c:	625030ef          	jal	4a80 <exit>
-+     c5c:	5af030ef          	jal	4a0a <exit>
-     printf("%s: unlinkread write failed\n", s);
-      c60:	85ce                	mv	a1,s3
-      c62:	00005517          	auipc	a0,0x5
--     c66:	9de50513          	addi	a0,a0,-1570 # 5640 <malloc+0x6f4>
--     c6a:	22e040ef          	jal	4e98 <printf>
-+     c66:	94e50513          	add	a0,a0,-1714 # 55b0 <malloc+0x6d8>
-+     c6a:	1ba040ef          	jal	4e24 <printf>
-     exit(1);
-      c6e:	4505                	li	a0,1
--     c70:	611030ef          	jal	4a80 <exit>
-+     c70:	59b030ef          	jal	4a0a <exit>
- 
- 0000000000000c74 <linktest>:
- {
--     c74:	1101                	addi	sp,sp,-32
-+     c74:	1101                	add	sp,sp,-32
-      c76:	ec06                	sd	ra,24(sp)
-      c78:	e822                	sd	s0,16(sp)
-      c7a:	e426                	sd	s1,8(sp)
-      c7c:	e04a                	sd	s2,0(sp)
--     c7e:	1000                	addi	s0,sp,32
-+     c7e:	1000                	add	s0,sp,32
-      c80:	892a                	mv	s2,a0
-   unlink("lf1");
-      c82:	00005517          	auipc	a0,0x5
--     c86:	9de50513          	addi	a0,a0,-1570 # 5660 <malloc+0x714>
--     c8a:	647030ef          	jal	4ad0 <unlink>
-+     c86:	94e50513          	add	a0,a0,-1714 # 55d0 <malloc+0x6f8>
-+     c8a:	5d1030ef          	jal	4a5a <unlink>
-   unlink("lf2");
-      c8e:	00005517          	auipc	a0,0x5
--     c92:	9da50513          	addi	a0,a0,-1574 # 5668 <malloc+0x71c>
--     c96:	63b030ef          	jal	4ad0 <unlink>
-+     c92:	94a50513          	add	a0,a0,-1718 # 55d8 <malloc+0x700>
-+     c96:	5c5030ef          	jal	4a5a <unlink>
-   fd = open("lf1", O_CREATE|O_RDWR);
-      c9a:	20200593          	li	a1,514
-      c9e:	00005517          	auipc	a0,0x5
--     ca2:	9c250513          	addi	a0,a0,-1598 # 5660 <malloc+0x714>
--     ca6:	61b030ef          	jal	4ac0 <open>
-+     ca2:	93250513          	add	a0,a0,-1742 # 55d0 <malloc+0x6f8>
-+     ca6:	5a5030ef          	jal	4a4a <open>
-   if(fd < 0){
-      caa:	0c054f63          	bltz	a0,d88 <linktest+0x114>
-      cae:	84aa                	mv	s1,a0
-   if(write(fd, "hello", SZ) != SZ){
-      cb0:	4615                	li	a2,5
-      cb2:	00005597          	auipc	a1,0x5
--     cb6:	8fe58593          	addi	a1,a1,-1794 # 55b0 <malloc+0x664>
--     cba:	5e7030ef          	jal	4aa0 <write>
-+     cb6:	86e58593          	add	a1,a1,-1938 # 5520 <malloc+0x648>
-+     cba:	571030ef          	jal	4a2a <write>
-      cbe:	4795                	li	a5,5
-      cc0:	0cf51e63          	bne	a0,a5,d9c <linktest+0x128>
-   close(fd);
-      cc4:	8526                	mv	a0,s1
--     cc6:	5e3030ef          	jal	4aa8 <close>
-+     cc6:	56d030ef          	jal	4a32 <close>
-   if(link("lf1", "lf2") < 0){
-      cca:	00005597          	auipc	a1,0x5
--     cce:	99e58593          	addi	a1,a1,-1634 # 5668 <malloc+0x71c>
-+     cce:	90e58593          	add	a1,a1,-1778 # 55d8 <malloc+0x700>
-      cd2:	00005517          	auipc	a0,0x5
--     cd6:	98e50513          	addi	a0,a0,-1650 # 5660 <malloc+0x714>
--     cda:	607030ef          	jal	4ae0 <link>
-+     cd6:	8fe50513          	add	a0,a0,-1794 # 55d0 <malloc+0x6f8>
-+     cda:	591030ef          	jal	4a6a <link>
-      cde:	0c054963          	bltz	a0,db0 <linktest+0x13c>
-   unlink("lf1");
-      ce2:	00005517          	auipc	a0,0x5
--     ce6:	97e50513          	addi	a0,a0,-1666 # 5660 <malloc+0x714>
--     cea:	5e7030ef          	jal	4ad0 <unlink>
-+     ce6:	8ee50513          	add	a0,a0,-1810 # 55d0 <malloc+0x6f8>
-+     cea:	571030ef          	jal	4a5a <unlink>
-   if(open("lf1", 0) >= 0){
-      cee:	4581                	li	a1,0
-      cf0:	00005517          	auipc	a0,0x5
--     cf4:	97050513          	addi	a0,a0,-1680 # 5660 <malloc+0x714>
--     cf8:	5c9030ef          	jal	4ac0 <open>
-+     cf4:	8e050513          	add	a0,a0,-1824 # 55d0 <malloc+0x6f8>
-+     cf8:	553030ef          	jal	4a4a <open>
-      cfc:	0c055463          	bgez	a0,dc4 <linktest+0x150>
-   fd = open("lf2", 0);
-      d00:	4581                	li	a1,0
-      d02:	00005517          	auipc	a0,0x5
--     d06:	96650513          	addi	a0,a0,-1690 # 5668 <malloc+0x71c>
--     d0a:	5b7030ef          	jal	4ac0 <open>
-+     d06:	8d650513          	add	a0,a0,-1834 # 55d8 <malloc+0x700>
-+     d0a:	541030ef          	jal	4a4a <open>
-      d0e:	84aa                	mv	s1,a0
-   if(fd < 0){
-      d10:	0c054463          	bltz	a0,dd8 <linktest+0x164>
-   if(read(fd, buf, sizeof(buf)) != SZ){
-      d14:	660d                	lui	a2,0x3
--     d16:	0000c597          	auipc	a1,0xc
--     d1a:	f6258593          	addi	a1,a1,-158 # cc78 <buf>
--     d1e:	57b030ef          	jal	4a98 <read>
-+     d16:	0000b597          	auipc	a1,0xb
-+     d1a:	f6258593          	add	a1,a1,-158 # bc78 <buf>
-+     d1e:	505030ef          	jal	4a22 <read>
-      d22:	4795                	li	a5,5
-      d24:	0cf51463          	bne	a0,a5,dec <linktest+0x178>
-   close(fd);
-      d28:	8526                	mv	a0,s1
--     d2a:	57f030ef          	jal	4aa8 <close>
-+     d2a:	509030ef          	jal	4a32 <close>
-   if(link("lf2", "lf2") >= 0){
-      d2e:	00005597          	auipc	a1,0x5
--     d32:	93a58593          	addi	a1,a1,-1734 # 5668 <malloc+0x71c>
-+     d32:	8aa58593          	add	a1,a1,-1878 # 55d8 <malloc+0x700>
-      d36:	852e                	mv	a0,a1
--     d38:	5a9030ef          	jal	4ae0 <link>
-+     d38:	533030ef          	jal	4a6a <link>
-      d3c:	0c055263          	bgez	a0,e00 <linktest+0x18c>
-   unlink("lf2");
-      d40:	00005517          	auipc	a0,0x5
--     d44:	92850513          	addi	a0,a0,-1752 # 5668 <malloc+0x71c>
--     d48:	589030ef          	jal	4ad0 <unlink>
-+     d44:	89850513          	add	a0,a0,-1896 # 55d8 <malloc+0x700>
-+     d48:	513030ef          	jal	4a5a <unlink>
-   if(link("lf2", "lf1") >= 0){
-      d4c:	00005597          	auipc	a1,0x5
--     d50:	91458593          	addi	a1,a1,-1772 # 5660 <malloc+0x714>
-+     d50:	88458593          	add	a1,a1,-1916 # 55d0 <malloc+0x6f8>
-      d54:	00005517          	auipc	a0,0x5
--     d58:	91450513          	addi	a0,a0,-1772 # 5668 <malloc+0x71c>
--     d5c:	585030ef          	jal	4ae0 <link>
-+     d58:	88450513          	add	a0,a0,-1916 # 55d8 <malloc+0x700>
-+     d5c:	50f030ef          	jal	4a6a <link>
-      d60:	0a055a63          	bgez	a0,e14 <linktest+0x1a0>
-   if(link(".", "lf1") >= 0){
-      d64:	00005597          	auipc	a1,0x5
--     d68:	8fc58593          	addi	a1,a1,-1796 # 5660 <malloc+0x714>
-+     d68:	86c58593          	add	a1,a1,-1940 # 55d0 <malloc+0x6f8>
-      d6c:	00005517          	auipc	a0,0x5
--     d70:	a0450513          	addi	a0,a0,-1532 # 5770 <malloc+0x824>
--     d74:	56d030ef          	jal	4ae0 <link>
-+     d70:	97450513          	add	a0,a0,-1676 # 56e0 <malloc+0x808>
-+     d74:	4f7030ef          	jal	4a6a <link>
-      d78:	0a055863          	bgez	a0,e28 <linktest+0x1b4>
- }
-      d7c:	60e2                	ld	ra,24(sp)
-      d7e:	6442                	ld	s0,16(sp)
-      d80:	64a2                	ld	s1,8(sp)
-      d82:	6902                	ld	s2,0(sp)
--     d84:	6105                	addi	sp,sp,32
-+     d84:	6105                	add	sp,sp,32
-      d86:	8082                	ret
-     printf("%s: create lf1 failed\n", s);
-      d88:	85ca                	mv	a1,s2
-      d8a:	00005517          	auipc	a0,0x5
--     d8e:	8e650513          	addi	a0,a0,-1818 # 5670 <malloc+0x724>
--     d92:	106040ef          	jal	4e98 <printf>
-+     d8e:	85650513          	add	a0,a0,-1962 # 55e0 <malloc+0x708>
-+     d92:	092040ef          	jal	4e24 <printf>
-     exit(1);
-      d96:	4505                	li	a0,1
--     d98:	4e9030ef          	jal	4a80 <exit>
-+     d98:	473030ef          	jal	4a0a <exit>
-     printf("%s: write lf1 failed\n", s);
-      d9c:	85ca                	mv	a1,s2
-      d9e:	00005517          	auipc	a0,0x5
--     da2:	8ea50513          	addi	a0,a0,-1814 # 5688 <malloc+0x73c>
--     da6:	0f2040ef          	jal	4e98 <printf>
-+     da2:	85a50513          	add	a0,a0,-1958 # 55f8 <malloc+0x720>
-+     da6:	07e040ef          	jal	4e24 <printf>
-     exit(1);
-      daa:	4505                	li	a0,1
--     dac:	4d5030ef          	jal	4a80 <exit>
-+     dac:	45f030ef          	jal	4a0a <exit>
-     printf("%s: link lf1 lf2 failed\n", s);
-      db0:	85ca                	mv	a1,s2
-      db2:	00005517          	auipc	a0,0x5
--     db6:	8ee50513          	addi	a0,a0,-1810 # 56a0 <malloc+0x754>
--     dba:	0de040ef          	jal	4e98 <printf>
-+     db6:	85e50513          	add	a0,a0,-1954 # 5610 <malloc+0x738>
-+     dba:	06a040ef          	jal	4e24 <printf>
-     exit(1);
-      dbe:	4505                	li	a0,1
--     dc0:	4c1030ef          	jal	4a80 <exit>
-+     dc0:	44b030ef          	jal	4a0a <exit>
-     printf("%s: unlinked lf1 but it is still there!\n", s);
-      dc4:	85ca                	mv	a1,s2
-      dc6:	00005517          	auipc	a0,0x5
--     dca:	8fa50513          	addi	a0,a0,-1798 # 56c0 <malloc+0x774>
--     dce:	0ca040ef          	jal	4e98 <printf>
-+     dca:	86a50513          	add	a0,a0,-1942 # 5630 <malloc+0x758>
-+     dce:	056040ef          	jal	4e24 <printf>
-     exit(1);
-      dd2:	4505                	li	a0,1
--     dd4:	4ad030ef          	jal	4a80 <exit>
-+     dd4:	437030ef          	jal	4a0a <exit>
-     printf("%s: open lf2 failed\n", s);
-      dd8:	85ca                	mv	a1,s2
-      dda:	00005517          	auipc	a0,0x5
--     dde:	91650513          	addi	a0,a0,-1770 # 56f0 <malloc+0x7a4>
--     de2:	0b6040ef          	jal	4e98 <printf>
-+     dde:	88650513          	add	a0,a0,-1914 # 5660 <malloc+0x788>
-+     de2:	042040ef          	jal	4e24 <printf>
-     exit(1);
-      de6:	4505                	li	a0,1
--     de8:	499030ef          	jal	4a80 <exit>
-+     de8:	423030ef          	jal	4a0a <exit>
-     printf("%s: read lf2 failed\n", s);
-      dec:	85ca                	mv	a1,s2
-      dee:	00005517          	auipc	a0,0x5
--     df2:	91a50513          	addi	a0,a0,-1766 # 5708 <malloc+0x7bc>
--     df6:	0a2040ef          	jal	4e98 <printf>
-+     df2:	88a50513          	add	a0,a0,-1910 # 5678 <malloc+0x7a0>
-+     df6:	02e040ef          	jal	4e24 <printf>
-     exit(1);
-      dfa:	4505                	li	a0,1
--     dfc:	485030ef          	jal	4a80 <exit>
-+     dfc:	40f030ef          	jal	4a0a <exit>
-     printf("%s: link lf2 lf2 succeeded! oops\n", s);
-      e00:	85ca                	mv	a1,s2
-      e02:	00005517          	auipc	a0,0x5
--     e06:	91e50513          	addi	a0,a0,-1762 # 5720 <malloc+0x7d4>
--     e0a:	08e040ef          	jal	4e98 <printf>
-+     e06:	88e50513          	add	a0,a0,-1906 # 5690 <malloc+0x7b8>
-+     e0a:	01a040ef          	jal	4e24 <printf>
-     exit(1);
-      e0e:	4505                	li	a0,1
--     e10:	471030ef          	jal	4a80 <exit>
-+     e10:	3fb030ef          	jal	4a0a <exit>
-     printf("%s: link non-existent succeeded! oops\n", s);
-      e14:	85ca                	mv	a1,s2
-      e16:	00005517          	auipc	a0,0x5
--     e1a:	93250513          	addi	a0,a0,-1742 # 5748 <malloc+0x7fc>
--     e1e:	07a040ef          	jal	4e98 <printf>
-+     e1a:	8a250513          	add	a0,a0,-1886 # 56b8 <malloc+0x7e0>
-+     e1e:	006040ef          	jal	4e24 <printf>
-     exit(1);
-      e22:	4505                	li	a0,1
--     e24:	45d030ef          	jal	4a80 <exit>
-+     e24:	3e7030ef          	jal	4a0a <exit>
-     printf("%s: link . lf1 succeeded! oops\n", s);
-      e28:	85ca                	mv	a1,s2
-      e2a:	00005517          	auipc	a0,0x5
--     e2e:	94e50513          	addi	a0,a0,-1714 # 5778 <malloc+0x82c>
--     e32:	066040ef          	jal	4e98 <printf>
-+     e2e:	8be50513          	add	a0,a0,-1858 # 56e8 <malloc+0x810>
-+     e32:	7f3030ef          	jal	4e24 <printf>
-     exit(1);
-      e36:	4505                	li	a0,1
--     e38:	449030ef          	jal	4a80 <exit>
-+     e38:	3d3030ef          	jal	4a0a <exit>
- 
- 0000000000000e3c <validatetest>:
- {
--     e3c:	7139                	addi	sp,sp,-64
-+     e3c:	7139                	add	sp,sp,-64
-      e3e:	fc06                	sd	ra,56(sp)
-      e40:	f822                	sd	s0,48(sp)
-      e42:	f426                	sd	s1,40(sp)
-@@ -1616,13 +1616,13 @@ outofinodes(char *s)
-      e48:	e852                	sd	s4,16(sp)
-      e4a:	e456                	sd	s5,8(sp)
-      e4c:	e05a                	sd	s6,0(sp)
--     e4e:	0080                	addi	s0,sp,64
-+     e4e:	0080                	add	s0,sp,64
-      e50:	8b2a                	mv	s6,a0
-   for(p = 0; p <= (uint)hi; p += PGSIZE){
-      e52:	4481                	li	s1,0
-     if(link("nosuchfile", (char*)p) != -1){
-      e54:	00005997          	auipc	s3,0x5
--     e58:	94498993          	addi	s3,s3,-1724 # 5798 <malloc+0x84c>
-+     e58:	8b498993          	add	s3,s3,-1868 # 5708 <malloc+0x830>
-      e5c:	597d                	li	s2,-1
-   for(p = 0; p <= (uint)hi; p += PGSIZE){
-      e5e:	6a85                	lui	s5,0x1
-@@ -1630,7 +1630,7 @@ outofinodes(char *s)
-     if(link("nosuchfile", (char*)p) != -1){
-      e64:	85a6                	mv	a1,s1
-      e66:	854e                	mv	a0,s3
--     e68:	479030ef          	jal	4ae0 <link>
-+     e68:	403030ef          	jal	4a6a <link>
-      e6c:	01251f63          	bne	a0,s2,e8a <validatetest+0x4e>
-   for(p = 0; p <= (uint)hi; p += PGSIZE){
-      e70:	94d6                	add	s1,s1,s5
-@@ -1644,20 +1644,20 @@ outofinodes(char *s)
-      e80:	6a42                	ld	s4,16(sp)
-      e82:	6aa2                	ld	s5,8(sp)
-      e84:	6b02                	ld	s6,0(sp)
--     e86:	6121                	addi	sp,sp,64
-+     e86:	6121                	add	sp,sp,64
-      e88:	8082                	ret
-       printf("%s: link should not succeed\n", s);
-      e8a:	85da                	mv	a1,s6
-      e8c:	00005517          	auipc	a0,0x5
--     e90:	91c50513          	addi	a0,a0,-1764 # 57a8 <malloc+0x85c>
--     e94:	004040ef          	jal	4e98 <printf>
-+     e90:	88c50513          	add	a0,a0,-1908 # 5718 <malloc+0x840>
-+     e94:	791030ef          	jal	4e24 <printf>
-       exit(1);
-      e98:	4505                	li	a0,1
--     e9a:	3e7030ef          	jal	4a80 <exit>
-+     e9a:	371030ef          	jal	4a0a <exit>
- 
- 0000000000000e9e <bigdir>:
- {
--     e9e:	715d                	addi	sp,sp,-80
-+     e9e:	715d                	add	sp,sp,-80
-      ea0:	e486                	sd	ra,72(sp)
-      ea2:	e0a2                	sd	s0,64(sp)
-      ea4:	fc26                	sd	s1,56(sp)
-@@ -1666,59 +1666,59 @@ outofinodes(char *s)
-      eaa:	f052                	sd	s4,32(sp)
-      eac:	ec56                	sd	s5,24(sp)
-      eae:	e85a                	sd	s6,16(sp)
--     eb0:	0880                	addi	s0,sp,80
-+     eb0:	0880                	add	s0,sp,80
-      eb2:	89aa                	mv	s3,a0
-   unlink("bd");
-      eb4:	00005517          	auipc	a0,0x5
--     eb8:	91450513          	addi	a0,a0,-1772 # 57c8 <malloc+0x87c>
--     ebc:	415030ef          	jal	4ad0 <unlink>
-+     eb8:	88450513          	add	a0,a0,-1916 # 5738 <malloc+0x860>
-+     ebc:	39f030ef          	jal	4a5a <unlink>
-   fd = open("bd", O_CREATE);
-      ec0:	20000593          	li	a1,512
-      ec4:	00005517          	auipc	a0,0x5
--     ec8:	90450513          	addi	a0,a0,-1788 # 57c8 <malloc+0x87c>
--     ecc:	3f5030ef          	jal	4ac0 <open>
-+     ec8:	87450513          	add	a0,a0,-1932 # 5738 <malloc+0x860>
-+     ecc:	37f030ef          	jal	4a4a <open>
-   if(fd < 0){
-      ed0:	0c054163          	bltz	a0,f92 <bigdir+0xf4>
-   close(fd);
--     ed4:	3d5030ef          	jal	4aa8 <close>
-+     ed4:	35f030ef          	jal	4a32 <close>
-   for(i = 0; i < N; i++){
-      ed8:	4901                	li	s2,0
-     name[0] = 'x';
-      eda:	07800a93          	li	s5,120
-     if(link("bd", name) != 0){
-      ede:	00005a17          	auipc	s4,0x5
--     ee2:	8eaa0a13          	addi	s4,s4,-1814 # 57c8 <malloc+0x87c>
-+     ee2:	85aa0a13          	add	s4,s4,-1958 # 5738 <malloc+0x860>
-   for(i = 0; i < N; i++){
-      ee6:	1f400b13          	li	s6,500
-     name[0] = 'x';
-      eea:	fb540823          	sb	s5,-80(s0)
-     name[1] = '0' + (i / 64);
--     eee:	41f9571b          	sraiw	a4,s2,0x1f
--     ef2:	01a7571b          	srliw	a4,a4,0x1a
-+     eee:	41f9571b          	sraw	a4,s2,0x1f
-+     ef2:	01a7571b          	srlw	a4,a4,0x1a
-      ef6:	012707bb          	addw	a5,a4,s2
--     efa:	4067d69b          	sraiw	a3,a5,0x6
--     efe:	0306869b          	addiw	a3,a3,48
-+     efa:	4067d69b          	sraw	a3,a5,0x6
-+     efe:	0306869b          	addw	a3,a3,48
-      f02:	fad408a3          	sb	a3,-79(s0)
-     name[2] = '0' + (i % 64);
--     f06:	03f7f793          	andi	a5,a5,63
-+     f06:	03f7f793          	and	a5,a5,63
-      f0a:	9f99                	subw	a5,a5,a4
--     f0c:	0307879b          	addiw	a5,a5,48
-+     f0c:	0307879b          	addw	a5,a5,48
-      f10:	faf40923          	sb	a5,-78(s0)
-     name[3] = '\0';
-      f14:	fa0409a3          	sb	zero,-77(s0)
-     if(link("bd", name) != 0){
--     f18:	fb040593          	addi	a1,s0,-80
-+     f18:	fb040593          	add	a1,s0,-80
-      f1c:	8552                	mv	a0,s4
--     f1e:	3c3030ef          	jal	4ae0 <link>
-+     f1e:	34d030ef          	jal	4a6a <link>
-      f22:	84aa                	mv	s1,a0
-      f24:	e149                	bnez	a0,fa6 <bigdir+0x108>
-   for(i = 0; i < N; i++){
--     f26:	2905                	addiw	s2,s2,1
-+     f26:	2905                	addw	s2,s2,1
-      f28:	fd6911e3          	bne	s2,s6,eea <bigdir+0x4c>
-   unlink("bd");
-      f2c:	00005517          	auipc	a0,0x5
--     f30:	89c50513          	addi	a0,a0,-1892 # 57c8 <malloc+0x87c>
--     f34:	39d030ef          	jal	4ad0 <unlink>
-+     f30:	80c50513          	add	a0,a0,-2036 # 5738 <malloc+0x860>
-+     f34:	327030ef          	jal	4a5a <unlink>
-     name[0] = 'x';
-      f38:	07800913          	li	s2,120
-   for(i = 0; i < N; i++){
-@@ -1726,25 +1726,25 @@ outofinodes(char *s)
-     name[0] = 'x';
-      f40:	fb240823          	sb	s2,-80(s0)
-     name[1] = '0' + (i / 64);
--     f44:	41f4d71b          	sraiw	a4,s1,0x1f
--     f48:	01a7571b          	srliw	a4,a4,0x1a
-+     f44:	41f4d71b          	sraw	a4,s1,0x1f
-+     f48:	01a7571b          	srlw	a4,a4,0x1a
-      f4c:	009707bb          	addw	a5,a4,s1
--     f50:	4067d69b          	sraiw	a3,a5,0x6
--     f54:	0306869b          	addiw	a3,a3,48
-+     f50:	4067d69b          	sraw	a3,a5,0x6
-+     f54:	0306869b          	addw	a3,a3,48
-      f58:	fad408a3          	sb	a3,-79(s0)
-     name[2] = '0' + (i % 64);
--     f5c:	03f7f793          	andi	a5,a5,63
-+     f5c:	03f7f793          	and	a5,a5,63
-      f60:	9f99                	subw	a5,a5,a4
--     f62:	0307879b          	addiw	a5,a5,48
-+     f62:	0307879b          	addw	a5,a5,48
-      f66:	faf40923          	sb	a5,-78(s0)
-     name[3] = '\0';
-      f6a:	fa0409a3          	sb	zero,-77(s0)
-     if(unlink(name) != 0){
--     f6e:	fb040513          	addi	a0,s0,-80
--     f72:	35f030ef          	jal	4ad0 <unlink>
-+     f6e:	fb040513          	add	a0,s0,-80
-+     f72:	2e9030ef          	jal	4a5a <unlink>
-      f76:	e529                	bnez	a0,fc0 <bigdir+0x122>
-   for(i = 0; i < N; i++){
--     f78:	2485                	addiw	s1,s1,1
-+     f78:	2485                	addw	s1,s1,1
-      f7a:	fd4493e3          	bne	s1,s4,f40 <bigdir+0xa2>
- }
-      f7e:	60a6                	ld	ra,72(sp)
-@@ -1755,160 +1755,160 @@ outofinodes(char *s)
-      f88:	7a02                	ld	s4,32(sp)
-      f8a:	6ae2                	ld	s5,24(sp)
-      f8c:	6b42                	ld	s6,16(sp)
--     f8e:	6161                	addi	sp,sp,80
-+     f8e:	6161                	add	sp,sp,80
-      f90:	8082                	ret
-     printf("%s: bigdir create failed\n", s);
-      f92:	85ce                	mv	a1,s3
--     f94:	00005517          	auipc	a0,0x5
--     f98:	83c50513          	addi	a0,a0,-1988 # 57d0 <malloc+0x884>
--     f9c:	6fd030ef          	jal	4e98 <printf>
-+     f94:	00004517          	auipc	a0,0x4
-+     f98:	7ac50513          	add	a0,a0,1964 # 5740 <malloc+0x868>
-+     f9c:	689030ef          	jal	4e24 <printf>
-     exit(1);
-      fa0:	4505                	li	a0,1
--     fa2:	2df030ef          	jal	4a80 <exit>
-+     fa2:	269030ef          	jal	4a0a <exit>
-       printf("%s: bigdir i=%d link(bd, %s) failed\n", s, i, name);
--     fa6:	fb040693          	addi	a3,s0,-80
-+     fa6:	fb040693          	add	a3,s0,-80
-      faa:	864a                	mv	a2,s2
-      fac:	85ce                	mv	a1,s3
--     fae:	00005517          	auipc	a0,0x5
--     fb2:	84250513          	addi	a0,a0,-1982 # 57f0 <malloc+0x8a4>
--     fb6:	6e3030ef          	jal	4e98 <printf>
-+     fae:	00004517          	auipc	a0,0x4
-+     fb2:	7b250513          	add	a0,a0,1970 # 5760 <malloc+0x888>
-+     fb6:	66f030ef          	jal	4e24 <printf>
-       exit(1);
-      fba:	4505                	li	a0,1
--     fbc:	2c5030ef          	jal	4a80 <exit>
-+     fbc:	24f030ef          	jal	4a0a <exit>
-       printf("%s: bigdir unlink failed", s);
-      fc0:	85ce                	mv	a1,s3
--     fc2:	00005517          	auipc	a0,0x5
--     fc6:	85650513          	addi	a0,a0,-1962 # 5818 <malloc+0x8cc>
--     fca:	6cf030ef          	jal	4e98 <printf>
-+     fc2:	00004517          	auipc	a0,0x4
-+     fc6:	7c650513          	add	a0,a0,1990 # 5788 <malloc+0x8b0>
-+     fca:	65b030ef          	jal	4e24 <printf>
-       exit(1);
-      fce:	4505                	li	a0,1
--     fd0:	2b1030ef          	jal	4a80 <exit>
-+     fd0:	23b030ef          	jal	4a0a <exit>
- 
- 0000000000000fd4 <pgbug>:
- {
--     fd4:	7179                	addi	sp,sp,-48
-+     fd4:	7179                	add	sp,sp,-48
-      fd6:	f406                	sd	ra,40(sp)
-      fd8:	f022                	sd	s0,32(sp)
-      fda:	ec26                	sd	s1,24(sp)
--     fdc:	1800                	addi	s0,sp,48
-+     fdc:	1800                	add	s0,sp,48
-   argv[0] = 0;
-      fde:	fc043c23          	sd	zero,-40(s0)
-   exec(big, argv);
--     fe2:	00008497          	auipc	s1,0x8
--     fe6:	01e48493          	addi	s1,s1,30 # 9000 <big>
--     fea:	fd840593          	addi	a1,s0,-40
-+     fe2:	00007497          	auipc	s1,0x7
-+     fe6:	01e48493          	add	s1,s1,30 # 8000 <big>
-+     fea:	fd840593          	add	a1,s0,-40
-      fee:	6088                	ld	a0,0(s1)
--     ff0:	2c9030ef          	jal	4ab8 <exec>
-+     ff0:	253030ef          	jal	4a42 <exec>
-   pipe(big);
-      ff4:	6088                	ld	a0,0(s1)
--     ff6:	29b030ef          	jal	4a90 <pipe>
-+     ff6:	225030ef          	jal	4a1a <pipe>
-   exit(0);
-      ffa:	4501                	li	a0,0
--     ffc:	285030ef          	jal	4a80 <exit>
-+     ffc:	20f030ef          	jal	4a0a <exit>
- 
- 0000000000001000 <badarg>:
- {
--    1000:	7139                	addi	sp,sp,-64
-+    1000:	7139                	add	sp,sp,-64
-     1002:	fc06                	sd	ra,56(sp)
-     1004:	f822                	sd	s0,48(sp)
-     1006:	f426                	sd	s1,40(sp)
-     1008:	f04a                	sd	s2,32(sp)
-     100a:	ec4e                	sd	s3,24(sp)
--    100c:	0080                	addi	s0,sp,64
-+    100c:	0080                	add	s0,sp,64
-     100e:	64b1                	lui	s1,0xc
--    1010:	35048493          	addi	s1,s1,848 # c350 <uninit+0x1de8>
-+    1010:	35048493          	add	s1,s1,848 # c350 <buf+0x6d8>
-     argv[0] = (char*)0xffffffff;
-     1014:	597d                	li	s2,-1
--    1016:	02095913          	srli	s2,s2,0x20
-+    1016:	02095913          	srl	s2,s2,0x20
-     exec("echo", argv);
-     101a:	00004997          	auipc	s3,0x4
--    101e:	06e98993          	addi	s3,s3,110 # 5088 <malloc+0x13c>
-+    101e:	fde98993          	add	s3,s3,-34 # 4ff8 <malloc+0x120>
-     argv[0] = (char*)0xffffffff;
-     1022:	fd243023          	sd	s2,-64(s0)
-     argv[1] = 0;
-     1026:	fc043423          	sd	zero,-56(s0)
-     exec("echo", argv);
--    102a:	fc040593          	addi	a1,s0,-64
-+    102a:	fc040593          	add	a1,s0,-64
-     102e:	854e                	mv	a0,s3
--    1030:	289030ef          	jal	4ab8 <exec>
-+    1030:	213030ef          	jal	4a42 <exec>
-   for(int i = 0; i < 50000; i++){
--    1034:	34fd                	addiw	s1,s1,-1
-+    1034:	34fd                	addw	s1,s1,-1
-     1036:	f4f5                	bnez	s1,1022 <badarg+0x22>
-   exit(0);
-     1038:	4501                	li	a0,0
--    103a:	247030ef          	jal	4a80 <exit>
-+    103a:	1d1030ef          	jal	4a0a <exit>
- 
- 000000000000103e <copyinstr2>:
- {
--    103e:	7155                	addi	sp,sp,-208
-+    103e:	7155                	add	sp,sp,-208
-     1040:	e586                	sd	ra,200(sp)
-     1042:	e1a2                	sd	s0,192(sp)
--    1044:	0980                	addi	s0,sp,208
-+    1044:	0980                	add	s0,sp,208
-   for(int i = 0; i < MAXPATH; i++)
--    1046:	f6840793          	addi	a5,s0,-152
--    104a:	fe840693          	addi	a3,s0,-24
-+    1046:	f6840793          	add	a5,s0,-152
-+    104a:	fe840693          	add	a3,s0,-24
-     b[i] = 'x';
-     104e:	07800713          	li	a4,120
-     1052:	00e78023          	sb	a4,0(a5)
-   for(int i = 0; i < MAXPATH; i++)
--    1056:	0785                	addi	a5,a5,1
-+    1056:	0785                	add	a5,a5,1
-     1058:	fed79de3          	bne	a5,a3,1052 <copyinstr2+0x14>
-   b[MAXPATH] = '\0';
-     105c:	fe040423          	sb	zero,-24(s0)
-   int ret = unlink(b);
--    1060:	f6840513          	addi	a0,s0,-152
--    1064:	26d030ef          	jal	4ad0 <unlink>
-+    1060:	f6840513          	add	a0,s0,-152
-+    1064:	1f7030ef          	jal	4a5a <unlink>
-   if(ret != -1){
-     1068:	57fd                	li	a5,-1
-     106a:	0cf51263          	bne	a0,a5,112e <copyinstr2+0xf0>
-   int fd = open(b, O_CREATE | O_WRONLY);
-     106e:	20100593          	li	a1,513
--    1072:	f6840513          	addi	a0,s0,-152
--    1076:	24b030ef          	jal	4ac0 <open>
-+    1072:	f6840513          	add	a0,s0,-152
-+    1076:	1d5030ef          	jal	4a4a <open>
-   if(fd != -1){
-     107a:	57fd                	li	a5,-1
-     107c:	0cf51563          	bne	a0,a5,1146 <copyinstr2+0x108>
-   ret = link(b, b);
--    1080:	f6840593          	addi	a1,s0,-152
-+    1080:	f6840593          	add	a1,s0,-152
-     1084:	852e                	mv	a0,a1
--    1086:	25b030ef          	jal	4ae0 <link>
-+    1086:	1e5030ef          	jal	4a6a <link>
-   if(ret != -1){
-     108a:	57fd                	li	a5,-1
-     108c:	0cf51963          	bne	a0,a5,115e <copyinstr2+0x120>
-   char *args[] = { "xx", 0 };
-     1090:	00006797          	auipc	a5,0x6
--    1094:	8d878793          	addi	a5,a5,-1832 # 6968 <malloc+0x1a1c>
-+    1094:	84878793          	add	a5,a5,-1976 # 68d8 <malloc+0x1a00>
-     1098:	f4f43c23          	sd	a5,-168(s0)
-     109c:	f6043023          	sd	zero,-160(s0)
-   ret = exec(b, args);
--    10a0:	f5840593          	addi	a1,s0,-168
--    10a4:	f6840513          	addi	a0,s0,-152
--    10a8:	211030ef          	jal	4ab8 <exec>
-+    10a0:	f5840593          	add	a1,s0,-168
-+    10a4:	f6840513          	add	a0,s0,-152
-+    10a8:	19b030ef          	jal	4a42 <exec>
-   if(ret != -1){
-     10ac:	57fd                	li	a5,-1
-     10ae:	0cf51563          	bne	a0,a5,1178 <copyinstr2+0x13a>
-   int pid = fork();
--    10b2:	1c7030ef          	jal	4a78 <fork>
-+    10b2:	151030ef          	jal	4a02 <fork>
-   if(pid < 0){
-     10b6:	0c054d63          	bltz	a0,1190 <copyinstr2+0x152>
-   if(pid == 0){
-     10ba:	0e051863          	bnez	a0,11aa <copyinstr2+0x16c>
--    10be:	00008797          	auipc	a5,0x8
--    10c2:	4a278793          	addi	a5,a5,1186 # 9560 <big.0>
--    10c6:	00009697          	auipc	a3,0x9
--    10ca:	49a68693          	addi	a3,a3,1178 # a560 <big.0+0x1000>
-+    10be:	00007797          	auipc	a5,0x7
-+    10c2:	4a278793          	add	a5,a5,1186 # 8560 <big.0>
-+    10c6:	00008697          	auipc	a3,0x8
-+    10ca:	49a68693          	add	a3,a3,1178 # 9560 <big.0+0x1000>
-       big[i] = 'x';
-     10ce:	07800713          	li	a4,120
-     10d2:	00e78023          	sb	a4,0(a5)
-     for(int i = 0; i < PGSIZE; i++)
--    10d6:	0785                	addi	a5,a5,1
-+    10d6:	0785                	add	a5,a5,1
-     10d8:	fed79de3          	bne	a5,a3,10d2 <copyinstr2+0x94>
-     big[PGSIZE] = '\0';
--    10dc:	00009797          	auipc	a5,0x9
--    10e0:	48078223          	sb	zero,1156(a5) # a560 <big.0+0x1000>
-+    10dc:	00008797          	auipc	a5,0x8
-+    10e0:	48078223          	sb	zero,1156(a5) # 9560 <big.0+0x1000>
-     char *args2[] = { big, big, big, 0 };
-     10e4:	00006797          	auipc	a5,0x6
--    10e8:	30478793          	addi	a5,a5,772 # 73e8 <malloc+0x249c>
-+    10e8:	26c78793          	add	a5,a5,620 # 7350 <malloc+0x2478>
-     10ec:	6fb0                	ld	a2,88(a5)
-     10ee:	73b4                	ld	a3,96(a5)
-     10f0:	77b8                	ld	a4,104(a5)
-@@ -1918,73 +1918,73 @@ outofinodes(char *s)
-     10fc:	f4e43023          	sd	a4,-192(s0)
-     1100:	f4f43423          	sd	a5,-184(s0)
-     ret = exec("echo", args2);
--    1104:	f3040593          	addi	a1,s0,-208
-+    1104:	f3040593          	add	a1,s0,-208
-     1108:	00004517          	auipc	a0,0x4
--    110c:	f8050513          	addi	a0,a0,-128 # 5088 <malloc+0x13c>
--    1110:	1a9030ef          	jal	4ab8 <exec>
-+    110c:	ef050513          	add	a0,a0,-272 # 4ff8 <malloc+0x120>
-+    1110:	133030ef          	jal	4a42 <exec>
-     if(ret != -1){
-     1114:	57fd                	li	a5,-1
-     1116:	08f50663          	beq	a0,a5,11a2 <copyinstr2+0x164>
-       printf("exec(echo, BIG) returned %d, not -1\n", fd);
-     111a:	55fd                	li	a1,-1
-     111c:	00004517          	auipc	a0,0x4
--    1120:	7a450513          	addi	a0,a0,1956 # 58c0 <malloc+0x974>
--    1124:	575030ef          	jal	4e98 <printf>
-+    1120:	71450513          	add	a0,a0,1812 # 5830 <malloc+0x958>
-+    1124:	501030ef          	jal	4e24 <printf>
-       exit(1);
-     1128:	4505                	li	a0,1
--    112a:	157030ef          	jal	4a80 <exit>
-+    112a:	0e1030ef          	jal	4a0a <exit>
-     printf("unlink(%s) returned %d, not -1\n", b, ret);
-     112e:	862a                	mv	a2,a0
--    1130:	f6840593          	addi	a1,s0,-152
-+    1130:	f6840593          	add	a1,s0,-152
-     1134:	00004517          	auipc	a0,0x4
--    1138:	70450513          	addi	a0,a0,1796 # 5838 <malloc+0x8ec>
--    113c:	55d030ef          	jal	4e98 <printf>
-+    1138:	67450513          	add	a0,a0,1652 # 57a8 <malloc+0x8d0>
-+    113c:	4e9030ef          	jal	4e24 <printf>
-     exit(1);
-     1140:	4505                	li	a0,1
--    1142:	13f030ef          	jal	4a80 <exit>
-+    1142:	0c9030ef          	jal	4a0a <exit>
-     printf("open(%s) returned %d, not -1\n", b, fd);
-     1146:	862a                	mv	a2,a0
--    1148:	f6840593          	addi	a1,s0,-152
-+    1148:	f6840593          	add	a1,s0,-152
-     114c:	00004517          	auipc	a0,0x4
--    1150:	70c50513          	addi	a0,a0,1804 # 5858 <malloc+0x90c>
--    1154:	545030ef          	jal	4e98 <printf>
-+    1150:	67c50513          	add	a0,a0,1660 # 57c8 <malloc+0x8f0>
-+    1154:	4d1030ef          	jal	4e24 <printf>
-     exit(1);
-     1158:	4505                	li	a0,1
--    115a:	127030ef          	jal	4a80 <exit>
-+    115a:	0b1030ef          	jal	4a0a <exit>
-     printf("link(%s, %s) returned %d, not -1\n", b, b, ret);
-     115e:	86aa                	mv	a3,a0
--    1160:	f6840613          	addi	a2,s0,-152
-+    1160:	f6840613          	add	a2,s0,-152
-     1164:	85b2                	mv	a1,a2
-     1166:	00004517          	auipc	a0,0x4
--    116a:	71250513          	addi	a0,a0,1810 # 5878 <malloc+0x92c>
--    116e:	52b030ef          	jal	4e98 <printf>
-+    116a:	68250513          	add	a0,a0,1666 # 57e8 <malloc+0x910>
-+    116e:	4b7030ef          	jal	4e24 <printf>
-     exit(1);
-     1172:	4505                	li	a0,1
--    1174:	10d030ef          	jal	4a80 <exit>
-+    1174:	097030ef          	jal	4a0a <exit>
-     printf("exec(%s) returned %d, not -1\n", b, fd);
-     1178:	567d                	li	a2,-1
--    117a:	f6840593          	addi	a1,s0,-152
-+    117a:	f6840593          	add	a1,s0,-152
-     117e:	00004517          	auipc	a0,0x4
--    1182:	72250513          	addi	a0,a0,1826 # 58a0 <malloc+0x954>
--    1186:	513030ef          	jal	4e98 <printf>
-+    1182:	69250513          	add	a0,a0,1682 # 5810 <malloc+0x938>
-+    1186:	49f030ef          	jal	4e24 <printf>
-     exit(1);
-     118a:	4505                	li	a0,1
--    118c:	0f5030ef          	jal	4a80 <exit>
-+    118c:	07f030ef          	jal	4a0a <exit>
-     printf("fork failed\n");
-     1190:	00006517          	auipc	a0,0x6
--    1194:	cf850513          	addi	a0,a0,-776 # 6e88 <malloc+0x1f3c>
--    1198:	501030ef          	jal	4e98 <printf>
-+    1194:	c6850513          	add	a0,a0,-920 # 6df8 <malloc+0x1f20>
-+    1198:	48d030ef          	jal	4e24 <printf>
-     exit(1);
-     119c:	4505                	li	a0,1
--    119e:	0e3030ef          	jal	4a80 <exit>
-+    119e:	06d030ef          	jal	4a0a <exit>
-     exit(747); /* OK */
-     11a2:	2eb00513          	li	a0,747
--    11a6:	0db030ef          	jal	4a80 <exit>
-+    11a6:	065030ef          	jal	4a0a <exit>
-   int st = 0;
-     11aa:	f4042a23          	sw	zero,-172(s0)
-   wait(&st);
--    11ae:	f5440513          	addi	a0,s0,-172
--    11b2:	0d7030ef          	jal	4a88 <wait>
-+    11ae:	f5440513          	add	a0,s0,-172
-+    11b2:	061030ef          	jal	4a12 <wait>
-   if(st != 747){
-     11b6:	f5442703          	lw	a4,-172(s0)
-     11ba:	2eb00793          	li	a5,747
-@@ -1992,7583 +1992,7514 @@ outofinodes(char *s)
- }
-     11c2:	60ae                	ld	ra,200(sp)
-     11c4:	640e                	ld	s0,192(sp)
--    11c6:	6169                	addi	sp,sp,208
-+    11c6:	6169                	add	sp,sp,208
-     11c8:	8082                	ret
-     printf("exec(echo, BIG) succeeded, should have failed\n");
-     11ca:	00004517          	auipc	a0,0x4
--    11ce:	71e50513          	addi	a0,a0,1822 # 58e8 <malloc+0x99c>
--    11d2:	4c7030ef          	jal	4e98 <printf>
-+    11ce:	68e50513          	add	a0,a0,1678 # 5858 <malloc+0x980>
-+    11d2:	453030ef          	jal	4e24 <printf>
-     exit(1);
-     11d6:	4505                	li	a0,1
--    11d8:	0a9030ef          	jal	4a80 <exit>
-+    11d8:	033030ef          	jal	4a0a <exit>
- 
- 00000000000011dc <truncate3>:
- {
--    11dc:	7159                	addi	sp,sp,-112
-+    11dc:	7159                	add	sp,sp,-112
-     11de:	f486                	sd	ra,104(sp)
-     11e0:	f0a2                	sd	s0,96(sp)
--    11e2:	e8ca                	sd	s2,80(sp)
--    11e4:	1880                	addi	s0,sp,112
--    11e6:	892a                	mv	s2,a0
-+    11e2:	eca6                	sd	s1,88(sp)
-+    11e4:	e8ca                	sd	s2,80(sp)
-+    11e6:	e4ce                	sd	s3,72(sp)
-+    11e8:	e0d2                	sd	s4,64(sp)
-+    11ea:	fc56                	sd	s5,56(sp)
-+    11ec:	1880                	add	s0,sp,112
-+    11ee:	892a                	mv	s2,a0
-   close(open("truncfile", O_CREATE|O_TRUNC|O_WRONLY));
--    11e8:	60100593          	li	a1,1537
--    11ec:	00004517          	auipc	a0,0x4
--    11f0:	ef450513          	addi	a0,a0,-268 # 50e0 <malloc+0x194>
--    11f4:	0cd030ef          	jal	4ac0 <open>
--    11f8:	0b1030ef          	jal	4aa8 <close>
-+    11f0:	60100593          	li	a1,1537
-+    11f4:	00004517          	auipc	a0,0x4
-+    11f8:	e5c50513          	add	a0,a0,-420 # 5050 <malloc+0x178>
-+    11fc:	04f030ef          	jal	4a4a <open>
-+    1200:	033030ef          	jal	4a32 <close>
-   pid = fork();
--    11fc:	07d030ef          	jal	4a78 <fork>
-+    1204:	7fe030ef          	jal	4a02 <fork>
-   if(pid < 0){
--    1200:	06054663          	bltz	a0,126c <truncate3+0x90>
-+    1208:	06054263          	bltz	a0,126c <truncate3+0x90>
-   if(pid == 0){
--    1204:	e55d                	bnez	a0,12b2 <truncate3+0xd6>
--    1206:	eca6                	sd	s1,88(sp)
--    1208:	e4ce                	sd	s3,72(sp)
--    120a:	e0d2                	sd	s4,64(sp)
--    120c:	fc56                	sd	s5,56(sp)
-+    120c:	ed59                	bnez	a0,12aa <truncate3+0xce>
-     120e:	06400993          	li	s3,100
-       int fd = open("truncfile", O_WRONLY);
-     1212:	00004a17          	auipc	s4,0x4
--    1216:	ecea0a13          	addi	s4,s4,-306 # 50e0 <malloc+0x194>
-+    1216:	e3ea0a13          	add	s4,s4,-450 # 5050 <malloc+0x178>
-       int n = write(fd, "1234567890", 10);
-     121a:	00004a97          	auipc	s5,0x4
--    121e:	72ea8a93          	addi	s5,s5,1838 # 5948 <malloc+0x9fc>
-+    121e:	69ea8a93          	add	s5,s5,1694 # 58b8 <malloc+0x9e0>
-       int fd = open("truncfile", O_WRONLY);
-     1222:	4585                	li	a1,1
-     1224:	8552                	mv	a0,s4
--    1226:	09b030ef          	jal	4ac0 <open>
-+    1226:	025030ef          	jal	4a4a <open>
-     122a:	84aa                	mv	s1,a0
-       if(fd < 0){
--    122c:	04054e63          	bltz	a0,1288 <truncate3+0xac>
-+    122c:	04054a63          	bltz	a0,1280 <truncate3+0xa4>
-       int n = write(fd, "1234567890", 10);
-     1230:	4629                	li	a2,10
-     1232:	85d6                	mv	a1,s5
--    1234:	06d030ef          	jal	4aa0 <write>
-+    1234:	7f6030ef          	jal	4a2a <write>
-       if(n != 10){
-     1238:	47a9                	li	a5,10
--    123a:	06f51163          	bne	a0,a5,129c <truncate3+0xc0>
-+    123a:	04f51d63          	bne	a0,a5,1294 <truncate3+0xb8>
-       close(fd);
-     123e:	8526                	mv	a0,s1
--    1240:	069030ef          	jal	4aa8 <close>
-+    1240:	7f2030ef          	jal	4a32 <close>
-       fd = open("truncfile", O_RDONLY);
-     1244:	4581                	li	a1,0
-     1246:	8552                	mv	a0,s4
--    1248:	079030ef          	jal	4ac0 <open>
-+    1248:	003030ef          	jal	4a4a <open>
-     124c:	84aa                	mv	s1,a0
-       read(fd, buf, sizeof(buf));
-     124e:	02000613          	li	a2,32
--    1252:	f9840593          	addi	a1,s0,-104
--    1256:	043030ef          	jal	4a98 <read>
-+    1252:	f9840593          	add	a1,s0,-104
-+    1256:	7cc030ef          	jal	4a22 <read>
-       close(fd);
-     125a:	8526                	mv	a0,s1
--    125c:	04d030ef          	jal	4aa8 <close>
-+    125c:	7d6030ef          	jal	4a32 <close>
-     for(int i = 0; i < 100; i++){
--    1260:	39fd                	addiw	s3,s3,-1
-+    1260:	39fd                	addw	s3,s3,-1
-     1262:	fc0990e3          	bnez	s3,1222 <truncate3+0x46>
-     exit(0);
-     1266:	4501                	li	a0,0
--    1268:	019030ef          	jal	4a80 <exit>
--    126c:	eca6                	sd	s1,88(sp)
--    126e:	e4ce                	sd	s3,72(sp)
--    1270:	e0d2                	sd	s4,64(sp)
--    1272:	fc56                	sd	s5,56(sp)
-+    1268:	7a2030ef          	jal	4a0a <exit>
-     printf("%s: fork failed\n", s);
--    1274:	85ca                	mv	a1,s2
--    1276:	00004517          	auipc	a0,0x4
--    127a:	6a250513          	addi	a0,a0,1698 # 5918 <malloc+0x9cc>
--    127e:	41b030ef          	jal	4e98 <printf>
-+    126c:	85ca                	mv	a1,s2
-+    126e:	00004517          	auipc	a0,0x4
-+    1272:	61a50513          	add	a0,a0,1562 # 5888 <malloc+0x9b0>
-+    1276:	3af030ef          	jal	4e24 <printf>
-     exit(1);
--    1282:	4505                	li	a0,1
--    1284:	7fc030ef          	jal	4a80 <exit>
-+    127a:	4505                	li	a0,1
-+    127c:	78e030ef          	jal	4a0a <exit>
-         printf("%s: open failed\n", s);
--    1288:	85ca                	mv	a1,s2
--    128a:	00004517          	auipc	a0,0x4
--    128e:	6a650513          	addi	a0,a0,1702 # 5930 <malloc+0x9e4>
--    1292:	407030ef          	jal	4e98 <printf>
-+    1280:	85ca                	mv	a1,s2
-+    1282:	00004517          	auipc	a0,0x4
-+    1286:	61e50513          	add	a0,a0,1566 # 58a0 <malloc+0x9c8>
-+    128a:	39b030ef          	jal	4e24 <printf>
-         exit(1);
--    1296:	4505                	li	a0,1
--    1298:	7e8030ef          	jal	4a80 <exit>
-+    128e:	4505                	li	a0,1
-+    1290:	77a030ef          	jal	4a0a <exit>
-         printf("%s: write got %d, expected 10\n", s, n);
--    129c:	862a                	mv	a2,a0
--    129e:	85ca                	mv	a1,s2
--    12a0:	00004517          	auipc	a0,0x4
--    12a4:	6b850513          	addi	a0,a0,1720 # 5958 <malloc+0xa0c>
--    12a8:	3f1030ef          	jal	4e98 <printf>
-+    1294:	862a                	mv	a2,a0
-+    1296:	85ca                	mv	a1,s2
-+    1298:	00004517          	auipc	a0,0x4
-+    129c:	63050513          	add	a0,a0,1584 # 58c8 <malloc+0x9f0>
-+    12a0:	385030ef          	jal	4e24 <printf>
-         exit(1);
--    12ac:	4505                	li	a0,1
--    12ae:	7d2030ef          	jal	4a80 <exit>
--    12b2:	eca6                	sd	s1,88(sp)
--    12b4:	e4ce                	sd	s3,72(sp)
--    12b6:	e0d2                	sd	s4,64(sp)
--    12b8:	fc56                	sd	s5,56(sp)
--    12ba:	09600993          	li	s3,150
-+    12a4:	4505                	li	a0,1
-+    12a6:	764030ef          	jal	4a0a <exit>
-+    12aa:	09600993          	li	s3,150
-     int fd = open("truncfile", O_CREATE|O_WRONLY|O_TRUNC);
--    12be:	00004a17          	auipc	s4,0x4
--    12c2:	e22a0a13          	addi	s4,s4,-478 # 50e0 <malloc+0x194>
-+    12ae:	00004a17          	auipc	s4,0x4
-+    12b2:	da2a0a13          	add	s4,s4,-606 # 5050 <malloc+0x178>
-     int n = write(fd, "xxx", 3);
--    12c6:	00004a97          	auipc	s5,0x4
--    12ca:	6b2a8a93          	addi	s5,s5,1714 # 5978 <malloc+0xa2c>
-+    12b6:	00004a97          	auipc	s5,0x4
-+    12ba:	632a8a93          	add	s5,s5,1586 # 58e8 <malloc+0xa10>
-     int fd = open("truncfile", O_CREATE|O_WRONLY|O_TRUNC);
--    12ce:	60100593          	li	a1,1537
--    12d2:	8552                	mv	a0,s4
--    12d4:	7ec030ef          	jal	4ac0 <open>
--    12d8:	84aa                	mv	s1,a0
-+    12be:	60100593          	li	a1,1537
-+    12c2:	8552                	mv	a0,s4
-+    12c4:	786030ef          	jal	4a4a <open>
-+    12c8:	84aa                	mv	s1,a0
-     if(fd < 0){
--    12da:	02054d63          	bltz	a0,1314 <truncate3+0x138>
-+    12ca:	02054d63          	bltz	a0,1304 <truncate3+0x128>
-     int n = write(fd, "xxx", 3);
--    12de:	460d                	li	a2,3
--    12e0:	85d6                	mv	a1,s5
--    12e2:	7be030ef          	jal	4aa0 <write>
-+    12ce:	460d                	li	a2,3
-+    12d0:	85d6                	mv	a1,s5
-+    12d2:	758030ef          	jal	4a2a <write>
-     if(n != 3){
--    12e6:	478d                	li	a5,3
--    12e8:	04f51063          	bne	a0,a5,1328 <truncate3+0x14c>
-+    12d6:	478d                	li	a5,3
-+    12d8:	04f51063          	bne	a0,a5,1318 <truncate3+0x13c>
-     close(fd);
--    12ec:	8526                	mv	a0,s1
--    12ee:	7ba030ef          	jal	4aa8 <close>
-+    12dc:	8526                	mv	a0,s1
-+    12de:	754030ef          	jal	4a32 <close>
-   for(int i = 0; i < 150; i++){
--    12f2:	39fd                	addiw	s3,s3,-1
--    12f4:	fc099de3          	bnez	s3,12ce <truncate3+0xf2>
-+    12e2:	39fd                	addw	s3,s3,-1
-+    12e4:	fc099de3          	bnez	s3,12be <truncate3+0xe2>
-   wait(&xstatus);
--    12f8:	fbc40513          	addi	a0,s0,-68
--    12fc:	78c030ef          	jal	4a88 <wait>
-+    12e8:	fbc40513          	add	a0,s0,-68
-+    12ec:	726030ef          	jal	4a12 <wait>
-   unlink("truncfile");
--    1300:	00004517          	auipc	a0,0x4
--    1304:	de050513          	addi	a0,a0,-544 # 50e0 <malloc+0x194>
--    1308:	7c8030ef          	jal	4ad0 <unlink>
-+    12f0:	00004517          	auipc	a0,0x4
-+    12f4:	d6050513          	add	a0,a0,-672 # 5050 <malloc+0x178>
-+    12f8:	762030ef          	jal	4a5a <unlink>
-   exit(xstatus);
--    130c:	fbc42503          	lw	a0,-68(s0)
--    1310:	770030ef          	jal	4a80 <exit>
-+    12fc:	fbc42503          	lw	a0,-68(s0)
-+    1300:	70a030ef          	jal	4a0a <exit>
-       printf("%s: open failed\n", s);
--    1314:	85ca                	mv	a1,s2
--    1316:	00004517          	auipc	a0,0x4
--    131a:	61a50513          	addi	a0,a0,1562 # 5930 <malloc+0x9e4>
--    131e:	37b030ef          	jal	4e98 <printf>
-+    1304:	85ca                	mv	a1,s2
-+    1306:	00004517          	auipc	a0,0x4
-+    130a:	59a50513          	add	a0,a0,1434 # 58a0 <malloc+0x9c8>
-+    130e:	317030ef          	jal	4e24 <printf>
-       exit(1);
--    1322:	4505                	li	a0,1
--    1324:	75c030ef          	jal	4a80 <exit>
-+    1312:	4505                	li	a0,1
-+    1314:	6f6030ef          	jal	4a0a <exit>
-       printf("%s: write got %d, expected 3\n", s, n);
--    1328:	862a                	mv	a2,a0
--    132a:	85ca                	mv	a1,s2
--    132c:	00004517          	auipc	a0,0x4
--    1330:	65450513          	addi	a0,a0,1620 # 5980 <malloc+0xa34>
--    1334:	365030ef          	jal	4e98 <printf>
-+    1318:	862a                	mv	a2,a0
-+    131a:	85ca                	mv	a1,s2
-+    131c:	00004517          	auipc	a0,0x4
-+    1320:	5d450513          	add	a0,a0,1492 # 58f0 <malloc+0xa18>
-+    1324:	301030ef          	jal	4e24 <printf>
-       exit(1);
--    1338:	4505                	li	a0,1
--    133a:	746030ef          	jal	4a80 <exit>
-+    1328:	4505                	li	a0,1
-+    132a:	6e0030ef          	jal	4a0a <exit>
- 
--000000000000133e <exectest>:
-+000000000000132e <exectest>:
- {
--    133e:	715d                	addi	sp,sp,-80
--    1340:	e486                	sd	ra,72(sp)
--    1342:	e0a2                	sd	s0,64(sp)
--    1344:	f84a                	sd	s2,48(sp)
--    1346:	0880                	addi	s0,sp,80
--    1348:	892a                	mv	s2,a0
-+    132e:	715d                	add	sp,sp,-80
-+    1330:	e486                	sd	ra,72(sp)
-+    1332:	e0a2                	sd	s0,64(sp)
-+    1334:	fc26                	sd	s1,56(sp)
-+    1336:	f84a                	sd	s2,48(sp)
-+    1338:	0880                	add	s0,sp,80
-+    133a:	892a                	mv	s2,a0
-   char *echoargv[] = { "echo", "OK", 0 };
--    134a:	00004797          	auipc	a5,0x4
--    134e:	d3e78793          	addi	a5,a5,-706 # 5088 <malloc+0x13c>
--    1352:	fcf43023          	sd	a5,-64(s0)
--    1356:	00004797          	auipc	a5,0x4
--    135a:	64a78793          	addi	a5,a5,1610 # 59a0 <malloc+0xa54>
--    135e:	fcf43423          	sd	a5,-56(s0)
--    1362:	fc043823          	sd	zero,-48(s0)
-+    133c:	00004797          	auipc	a5,0x4
-+    1340:	cbc78793          	add	a5,a5,-836 # 4ff8 <malloc+0x120>
-+    1344:	fcf43023          	sd	a5,-64(s0)
-+    1348:	00004797          	auipc	a5,0x4
-+    134c:	5c878793          	add	a5,a5,1480 # 5910 <malloc+0xa38>
-+    1350:	fcf43423          	sd	a5,-56(s0)
-+    1354:	fc043823          	sd	zero,-48(s0)
-   unlink("echo-ok");
--    1366:	00004517          	auipc	a0,0x4
--    136a:	64250513          	addi	a0,a0,1602 # 59a8 <malloc+0xa5c>
--    136e:	762030ef          	jal	4ad0 <unlink>
-+    1358:	00004517          	auipc	a0,0x4
-+    135c:	5c050513          	add	a0,a0,1472 # 5918 <malloc+0xa40>
-+    1360:	6fa030ef          	jal	4a5a <unlink>
-   pid = fork();
--    1372:	706030ef          	jal	4a78 <fork>
-+    1364:	69e030ef          	jal	4a02 <fork>
-   if(pid < 0) {
--    1376:	02054f63          	bltz	a0,13b4 <exectest+0x76>
--    137a:	fc26                	sd	s1,56(sp)
--    137c:	84aa                	mv	s1,a0
-+    1368:	02054e63          	bltz	a0,13a4 <exectest+0x76>
-+    136c:	84aa                	mv	s1,a0
-   if(pid == 0) {
--    137e:	e935                	bnez	a0,13f2 <exectest+0xb4>
-+    136e:	e92d                	bnez	a0,13e0 <exectest+0xb2>
-     close(1);
--    1380:	4505                	li	a0,1
--    1382:	726030ef          	jal	4aa8 <close>
-+    1370:	4505                	li	a0,1
-+    1372:	6c0030ef          	jal	4a32 <close>
-     fd = open("echo-ok", O_CREATE|O_WRONLY);
--    1386:	20100593          	li	a1,513
--    138a:	00004517          	auipc	a0,0x4
--    138e:	61e50513          	addi	a0,a0,1566 # 59a8 <malloc+0xa5c>
--    1392:	72e030ef          	jal	4ac0 <open>
-+    1376:	20100593          	li	a1,513
-+    137a:	00004517          	auipc	a0,0x4
-+    137e:	59e50513          	add	a0,a0,1438 # 5918 <malloc+0xa40>
-+    1382:	6c8030ef          	jal	4a4a <open>
-     if(fd < 0) {
--    1396:	02054a63          	bltz	a0,13ca <exectest+0x8c>
-+    1386:	02054963          	bltz	a0,13b8 <exectest+0x8a>
-     if(fd != 1) {
--    139a:	4785                	li	a5,1
--    139c:	04f50163          	beq	a0,a5,13de <exectest+0xa0>
-+    138a:	4785                	li	a5,1
-+    138c:	04f50063          	beq	a0,a5,13cc <exectest+0x9e>
-       printf("%s: wrong fd\n", s);
--    13a0:	85ca                	mv	a1,s2
--    13a2:	00004517          	auipc	a0,0x4
--    13a6:	62650513          	addi	a0,a0,1574 # 59c8 <malloc+0xa7c>
--    13aa:	2ef030ef          	jal	4e98 <printf>
-+    1390:	85ca                	mv	a1,s2
-+    1392:	00004517          	auipc	a0,0x4
-+    1396:	5a650513          	add	a0,a0,1446 # 5938 <malloc+0xa60>
-+    139a:	28b030ef          	jal	4e24 <printf>
-       exit(1);
--    13ae:	4505                	li	a0,1
--    13b0:	6d0030ef          	jal	4a80 <exit>
--    13b4:	fc26                	sd	s1,56(sp)
-+    139e:	4505                	li	a0,1
-+    13a0:	66a030ef          	jal	4a0a <exit>
-      printf("%s: fork failed\n", s);
--    13b6:	85ca                	mv	a1,s2
--    13b8:	00004517          	auipc	a0,0x4
--    13bc:	56050513          	addi	a0,a0,1376 # 5918 <malloc+0x9cc>
--    13c0:	2d9030ef          	jal	4e98 <printf>
-+    13a4:	85ca                	mv	a1,s2
-+    13a6:	00004517          	auipc	a0,0x4
-+    13aa:	4e250513          	add	a0,a0,1250 # 5888 <malloc+0x9b0>
-+    13ae:	277030ef          	jal	4e24 <printf>
-      exit(1);
--    13c4:	4505                	li	a0,1
--    13c6:	6ba030ef          	jal	4a80 <exit>
-+    13b2:	4505                	li	a0,1
-+    13b4:	656030ef          	jal	4a0a <exit>
-       printf("%s: create failed\n", s);
--    13ca:	85ca                	mv	a1,s2
--    13cc:	00004517          	auipc	a0,0x4
--    13d0:	5e450513          	addi	a0,a0,1508 # 59b0 <malloc+0xa64>
--    13d4:	2c5030ef          	jal	4e98 <printf>
-+    13b8:	85ca                	mv	a1,s2
-+    13ba:	00004517          	auipc	a0,0x4
-+    13be:	56650513          	add	a0,a0,1382 # 5920 <malloc+0xa48>
-+    13c2:	263030ef          	jal	4e24 <printf>
-       exit(1);
--    13d8:	4505                	li	a0,1
--    13da:	6a6030ef          	jal	4a80 <exit>
-+    13c6:	4505                	li	a0,1
-+    13c8:	642030ef          	jal	4a0a <exit>
-     if(exec("echo", echoargv) < 0){
--    13de:	fc040593          	addi	a1,s0,-64
--    13e2:	00004517          	auipc	a0,0x4
--    13e6:	ca650513          	addi	a0,a0,-858 # 5088 <malloc+0x13c>
--    13ea:	6ce030ef          	jal	4ab8 <exec>
--    13ee:	00054d63          	bltz	a0,1408 <exectest+0xca>
-+    13cc:	fc040593          	add	a1,s0,-64
-+    13d0:	00004517          	auipc	a0,0x4
-+    13d4:	c2850513          	add	a0,a0,-984 # 4ff8 <malloc+0x120>
-+    13d8:	66a030ef          	jal	4a42 <exec>
-+    13dc:	00054d63          	bltz	a0,13f6 <exectest+0xc8>
-   if (wait(&xstatus) != pid) {
--    13f2:	fdc40513          	addi	a0,s0,-36
--    13f6:	692030ef          	jal	4a88 <wait>
--    13fa:	02951163          	bne	a0,s1,141c <exectest+0xde>
-+    13e0:	fdc40513          	add	a0,s0,-36
-+    13e4:	62e030ef          	jal	4a12 <wait>
-+    13e8:	02951163          	bne	a0,s1,140a <exectest+0xdc>
-   if(xstatus != 0)
--    13fe:	fdc42503          	lw	a0,-36(s0)
--    1402:	c50d                	beqz	a0,142c <exectest+0xee>
-+    13ec:	fdc42503          	lw	a0,-36(s0)
-+    13f0:	c50d                	beqz	a0,141a <exectest+0xec>
-     exit(xstatus);
--    1404:	67c030ef          	jal	4a80 <exit>
-+    13f2:	618030ef          	jal	4a0a <exit>
-       printf("%s: exec echo failed\n", s);
--    1408:	85ca                	mv	a1,s2
--    140a:	00004517          	auipc	a0,0x4
--    140e:	5ce50513          	addi	a0,a0,1486 # 59d8 <malloc+0xa8c>
--    1412:	287030ef          	jal	4e98 <printf>
-+    13f6:	85ca                	mv	a1,s2
-+    13f8:	00004517          	auipc	a0,0x4
-+    13fc:	55050513          	add	a0,a0,1360 # 5948 <malloc+0xa70>
-+    1400:	225030ef          	jal	4e24 <printf>
-       exit(1);
--    1416:	4505                	li	a0,1
--    1418:	668030ef          	jal	4a80 <exit>
-+    1404:	4505                	li	a0,1
-+    1406:	604030ef          	jal	4a0a <exit>
-     printf("%s: wait failed!\n", s);
--    141c:	85ca                	mv	a1,s2
--    141e:	00004517          	auipc	a0,0x4
--    1422:	5d250513          	addi	a0,a0,1490 # 59f0 <malloc+0xaa4>
--    1426:	273030ef          	jal	4e98 <printf>
--    142a:	bfd1                	j	13fe <exectest+0xc0>
-+    140a:	85ca                	mv	a1,s2
-+    140c:	00004517          	auipc	a0,0x4
-+    1410:	55450513          	add	a0,a0,1364 # 5960 <malloc+0xa88>
-+    1414:	211030ef          	jal	4e24 <printf>
-+    1418:	bfd1                	j	13ec <exectest+0xbe>
-   fd = open("echo-ok", O_RDONLY);
--    142c:	4581                	li	a1,0
--    142e:	00004517          	auipc	a0,0x4
--    1432:	57a50513          	addi	a0,a0,1402 # 59a8 <malloc+0xa5c>
--    1436:	68a030ef          	jal	4ac0 <open>
-+    141a:	4581                	li	a1,0
-+    141c:	00004517          	auipc	a0,0x4
-+    1420:	4fc50513          	add	a0,a0,1276 # 5918 <malloc+0xa40>
-+    1424:	626030ef          	jal	4a4a <open>
-   if(fd < 0) {
--    143a:	02054463          	bltz	a0,1462 <exectest+0x124>
-+    1428:	02054463          	bltz	a0,1450 <exectest+0x122>
-   if (read(fd, buf, 2) != 2) {
--    143e:	4609                	li	a2,2
--    1440:	fb840593          	addi	a1,s0,-72
--    1444:	654030ef          	jal	4a98 <read>
--    1448:	4789                	li	a5,2
--    144a:	02f50663          	beq	a0,a5,1476 <exectest+0x138>
-+    142c:	4609                	li	a2,2
-+    142e:	fb840593          	add	a1,s0,-72
-+    1432:	5f0030ef          	jal	4a22 <read>
-+    1436:	4789                	li	a5,2
-+    1438:	02f50663          	beq	a0,a5,1464 <exectest+0x136>
-     printf("%s: read failed\n", s);
--    144e:	85ca                	mv	a1,s2
--    1450:	00004517          	auipc	a0,0x4
--    1454:	00850513          	addi	a0,a0,8 # 5458 <malloc+0x50c>
--    1458:	241030ef          	jal	4e98 <printf>
-+    143c:	85ca                	mv	a1,s2
-+    143e:	00004517          	auipc	a0,0x4
-+    1442:	f8a50513          	add	a0,a0,-118 # 53c8 <malloc+0x4f0>
-+    1446:	1df030ef          	jal	4e24 <printf>
-     exit(1);
--    145c:	4505                	li	a0,1
--    145e:	622030ef          	jal	4a80 <exit>
-+    144a:	4505                	li	a0,1
-+    144c:	5be030ef          	jal	4a0a <exit>
-     printf("%s: open failed\n", s);
--    1462:	85ca                	mv	a1,s2
--    1464:	00004517          	auipc	a0,0x4
--    1468:	4cc50513          	addi	a0,a0,1228 # 5930 <malloc+0x9e4>
--    146c:	22d030ef          	jal	4e98 <printf>
-+    1450:	85ca                	mv	a1,s2
-+    1452:	00004517          	auipc	a0,0x4
-+    1456:	44e50513          	add	a0,a0,1102 # 58a0 <malloc+0x9c8>
-+    145a:	1cb030ef          	jal	4e24 <printf>
-     exit(1);
--    1470:	4505                	li	a0,1
--    1472:	60e030ef          	jal	4a80 <exit>
-+    145e:	4505                	li	a0,1
-+    1460:	5aa030ef          	jal	4a0a <exit>
-   unlink("echo-ok");
--    1476:	00004517          	auipc	a0,0x4
--    147a:	53250513          	addi	a0,a0,1330 # 59a8 <malloc+0xa5c>
--    147e:	652030ef          	jal	4ad0 <unlink>
-+    1464:	00004517          	auipc	a0,0x4
-+    1468:	4b450513          	add	a0,a0,1204 # 5918 <malloc+0xa40>
-+    146c:	5ee030ef          	jal	4a5a <unlink>
-   if(buf[0] == 'O' && buf[1] == 'K')
--    1482:	fb844703          	lbu	a4,-72(s0)
--    1486:	04f00793          	li	a5,79
--    148a:	00f71863          	bne	a4,a5,149a <exectest+0x15c>
--    148e:	fb944703          	lbu	a4,-71(s0)
--    1492:	04b00793          	li	a5,75
--    1496:	00f70c63          	beq	a4,a5,14ae <exectest+0x170>
-+    1470:	fb844703          	lbu	a4,-72(s0)
-+    1474:	04f00793          	li	a5,79
-+    1478:	00f71863          	bne	a4,a5,1488 <exectest+0x15a>
-+    147c:	fb944703          	lbu	a4,-71(s0)
-+    1480:	04b00793          	li	a5,75
-+    1484:	00f70c63          	beq	a4,a5,149c <exectest+0x16e>
-     printf("%s: wrong output\n", s);
--    149a:	85ca                	mv	a1,s2
--    149c:	00004517          	auipc	a0,0x4
--    14a0:	56c50513          	addi	a0,a0,1388 # 5a08 <malloc+0xabc>
--    14a4:	1f5030ef          	jal	4e98 <printf>
-+    1488:	85ca                	mv	a1,s2
-+    148a:	00004517          	auipc	a0,0x4
-+    148e:	4ee50513          	add	a0,a0,1262 # 5978 <malloc+0xaa0>
-+    1492:	193030ef          	jal	4e24 <printf>
-     exit(1);
--    14a8:	4505                	li	a0,1
--    14aa:	5d6030ef          	jal	4a80 <exit>
-+    1496:	4505                	li	a0,1
-+    1498:	572030ef          	jal	4a0a <exit>
-     exit(0);
--    14ae:	4501                	li	a0,0
--    14b0:	5d0030ef          	jal	4a80 <exit>
-+    149c:	4501                	li	a0,0
-+    149e:	56c030ef          	jal	4a0a <exit>
- 
--00000000000014b4 <pipe1>:
-+00000000000014a2 <pipe1>:
- {
--    14b4:	711d                	addi	sp,sp,-96
--    14b6:	ec86                	sd	ra,88(sp)
--    14b8:	e8a2                	sd	s0,80(sp)
--    14ba:	fc4e                	sd	s3,56(sp)
--    14bc:	1080                	addi	s0,sp,96
--    14be:	89aa                	mv	s3,a0
-+    14a2:	711d                	add	sp,sp,-96
-+    14a4:	ec86                	sd	ra,88(sp)
-+    14a6:	e8a2                	sd	s0,80(sp)
-+    14a8:	e4a6                	sd	s1,72(sp)
-+    14aa:	e0ca                	sd	s2,64(sp)
-+    14ac:	fc4e                	sd	s3,56(sp)
-+    14ae:	f852                	sd	s4,48(sp)
-+    14b0:	f456                	sd	s5,40(sp)
-+    14b2:	f05a                	sd	s6,32(sp)
-+    14b4:	ec5e                	sd	s7,24(sp)
-+    14b6:	1080                	add	s0,sp,96
-+    14b8:	892a                	mv	s2,a0
-   if(pipe(fds) != 0){
--    14c0:	fa840513          	addi	a0,s0,-88
--    14c4:	5cc030ef          	jal	4a90 <pipe>
--    14c8:	e92d                	bnez	a0,153a <pipe1+0x86>
--    14ca:	e4a6                	sd	s1,72(sp)
--    14cc:	f852                	sd	s4,48(sp)
--    14ce:	84aa                	mv	s1,a0
-+    14ba:	fa840513          	add	a0,s0,-88
-+    14be:	55c030ef          	jal	4a1a <pipe>
-+    14c2:	e52d                	bnez	a0,152c <pipe1+0x8a>
-+    14c4:	84aa                	mv	s1,a0
-   pid = fork();
--    14d0:	5a8030ef          	jal	4a78 <fork>
--    14d4:	8a2a                	mv	s4,a0
-+    14c6:	53c030ef          	jal	4a02 <fork>
-+    14ca:	8a2a                	mv	s4,a0
-   if(pid == 0){
--    14d6:	c151                	beqz	a0,155a <pipe1+0xa6>
-+    14cc:	c935                	beqz	a0,1540 <pipe1+0x9e>
-   } else if(pid > 0){
--    14d8:	14a05e63          	blez	a0,1634 <pipe1+0x180>
--    14dc:	e0ca                	sd	s2,64(sp)
--    14de:	f456                	sd	s5,40(sp)
-+    14ce:	14a05063          	blez	a0,160e <pipe1+0x16c>
-     close(fds[1]);
--    14e0:	fac42503          	lw	a0,-84(s0)
--    14e4:	5c4030ef          	jal	4aa8 <close>
-+    14d2:	fac42503          	lw	a0,-84(s0)
-+    14d6:	55c030ef          	jal	4a32 <close>
-     total = 0;
--    14e8:	8a26                	mv	s4,s1
-+    14da:	8a26                	mv	s4,s1
-     cc = 1;
--    14ea:	4905                	li	s2,1
-+    14dc:	4985                	li	s3,1
-     while((n = read(fds[0], buf, cc)) > 0){
--    14ec:	0000ba97          	auipc	s5,0xb
--    14f0:	78ca8a93          	addi	s5,s5,1932 # cc78 <buf>
--    14f4:	864a                	mv	a2,s2
--    14f6:	85d6                	mv	a1,s5
--    14f8:	fa842503          	lw	a0,-88(s0)
--    14fc:	59c030ef          	jal	4a98 <read>
--    1500:	0ea05a63          	blez	a0,15f4 <pipe1+0x140>
-+    14de:	0000aa97          	auipc	s5,0xa
-+    14e2:	79aa8a93          	add	s5,s5,1946 # bc78 <buf>
-+    14e6:	864e                	mv	a2,s3
-+    14e8:	85d6                	mv	a1,s5
-+    14ea:	fa842503          	lw	a0,-88(s0)
-+    14ee:	534030ef          	jal	4a22 <read>
-+    14f2:	0ea05263          	blez	a0,15d6 <pipe1+0x134>
-       for(i = 0; i < n; i++){
--    1504:	0000b717          	auipc	a4,0xb
--    1508:	77470713          	addi	a4,a4,1908 # cc78 <buf>
--    150c:	00a4863b          	addw	a2,s1,a0
-+    14f6:	0000a717          	auipc	a4,0xa
-+    14fa:	78270713          	add	a4,a4,1922 # bc78 <buf>
-+    14fe:	00a4863b          	addw	a2,s1,a0
-         if((buf[i] & 0xff) != (seq++ & 0xff)){
--    1510:	00074683          	lbu	a3,0(a4)
--    1514:	0ff4f793          	zext.b	a5,s1
--    1518:	2485                	addiw	s1,s1,1
--    151a:	0af69d63          	bne	a3,a5,15d4 <pipe1+0x120>
-+    1502:	00074683          	lbu	a3,0(a4)
-+    1506:	0ff4f793          	zext.b	a5,s1
-+    150a:	2485                	addw	s1,s1,1
-+    150c:	0af69363          	bne	a3,a5,15b2 <pipe1+0x110>
-       for(i = 0; i < n; i++){
--    151e:	0705                	addi	a4,a4,1
--    1520:	fec498e3          	bne	s1,a2,1510 <pipe1+0x5c>
-+    1510:	0705                	add	a4,a4,1
-+    1512:	fec498e3          	bne	s1,a2,1502 <pipe1+0x60>
-       total += n;
--    1524:	00aa0a3b          	addw	s4,s4,a0
-+    1516:	00aa0a3b          	addw	s4,s4,a0
-       cc = cc * 2;
--    1528:	0019179b          	slliw	a5,s2,0x1
--    152c:	0007891b          	sext.w	s2,a5
-+    151a:	0019979b          	sllw	a5,s3,0x1
-+    151e:	0007899b          	sext.w	s3,a5
-       if(cc > sizeof(buf))
--    1530:	670d                	lui	a4,0x3
--    1532:	fd2771e3          	bgeu	a4,s2,14f4 <pipe1+0x40>
-+    1522:	670d                	lui	a4,0x3
-+    1524:	fd3771e3          	bgeu	a4,s3,14e6 <pipe1+0x44>
-         cc = sizeof(buf);
--    1536:	690d                	lui	s2,0x3
--    1538:	bf75                	j	14f4 <pipe1+0x40>
--    153a:	e4a6                	sd	s1,72(sp)
--    153c:	e0ca                	sd	s2,64(sp)
--    153e:	f852                	sd	s4,48(sp)
--    1540:	f456                	sd	s5,40(sp)
--    1542:	f05a                	sd	s6,32(sp)
--    1544:	ec5e                	sd	s7,24(sp)
-+    1528:	698d                	lui	s3,0x3
-+    152a:	bf75                	j	14e6 <pipe1+0x44>
-     printf("%s: pipe() failed\n", s);
--    1546:	85ce                	mv	a1,s3
--    1548:	00004517          	auipc	a0,0x4
--    154c:	4d850513          	addi	a0,a0,1240 # 5a20 <malloc+0xad4>
--    1550:	149030ef          	jal	4e98 <printf>
--    exit(1);
--    1554:	4505                	li	a0,1
--    1556:	52a030ef          	jal	4a80 <exit>
--    155a:	e0ca                	sd	s2,64(sp)
--    155c:	f456                	sd	s5,40(sp)
--    155e:	f05a                	sd	s6,32(sp)
--    1560:	ec5e                	sd	s7,24(sp)
-+    152c:	85ca                	mv	a1,s2
-+    152e:	00004517          	auipc	a0,0x4
-+    1532:	46250513          	add	a0,a0,1122 # 5990 <malloc+0xab8>
-+    1536:	0ef030ef          	jal	4e24 <printf>
-+    exit(1);
-+    153a:	4505                	li	a0,1
-+    153c:	4ce030ef          	jal	4a0a <exit>
-     close(fds[0]);
--    1562:	fa842503          	lw	a0,-88(s0)
--    1566:	542030ef          	jal	4aa8 <close>
-+    1540:	fa842503          	lw	a0,-88(s0)
-+    1544:	4ee030ef          	jal	4a32 <close>
-     for(n = 0; n < N; n++){
--    156a:	0000bb17          	auipc	s6,0xb
--    156e:	70eb0b13          	addi	s6,s6,1806 # cc78 <buf>
--    1572:	416004bb          	negw	s1,s6
--    1576:	0ff4f493          	zext.b	s1,s1
--    157a:	409b0913          	addi	s2,s6,1033
-+    1548:	0000ab17          	auipc	s6,0xa
-+    154c:	730b0b13          	add	s6,s6,1840 # bc78 <buf>
-+    1550:	416004bb          	negw	s1,s6
-+    1554:	0ff4f493          	zext.b	s1,s1
-+    1558:	409b0993          	add	s3,s6,1033
-       if(write(fds[1], buf, SZ) != SZ){
--    157e:	8bda                	mv	s7,s6
-+    155c:	8bda                	mv	s7,s6
-     for(n = 0; n < N; n++){
--    1580:	6a85                	lui	s5,0x1
--    1582:	42da8a93          	addi	s5,s5,1069 # 142d <exectest+0xef>
-+    155e:	6a85                	lui	s5,0x1
-+    1560:	42da8a93          	add	s5,s5,1069 # 142d <exectest+0xff>
- {
--    1586:	87da                	mv	a5,s6
-+    1564:	87da                	mv	a5,s6
-         buf[i] = seq++;
--    1588:	0097873b          	addw	a4,a5,s1
--    158c:	00e78023          	sb	a4,0(a5)
-+    1566:	0097873b          	addw	a4,a5,s1
-+    156a:	00e78023          	sb	a4,0(a5)
-       for(i = 0; i < SZ; i++)
--    1590:	0785                	addi	a5,a5,1
--    1592:	ff279be3          	bne	a5,s2,1588 <pipe1+0xd4>
--    1596:	409a0a1b          	addiw	s4,s4,1033
-+    156e:	0785                	add	a5,a5,1
-+    1570:	fef99be3          	bne	s3,a5,1566 <pipe1+0xc4>
-+        buf[i] = seq++;
-+    1574:	409a0a1b          	addw	s4,s4,1033
-       if(write(fds[1], buf, SZ) != SZ){
--    159a:	40900613          	li	a2,1033
--    159e:	85de                	mv	a1,s7
--    15a0:	fac42503          	lw	a0,-84(s0)
--    15a4:	4fc030ef          	jal	4aa0 <write>
--    15a8:	40900793          	li	a5,1033
--    15ac:	00f51a63          	bne	a0,a5,15c0 <pipe1+0x10c>
-+    1578:	40900613          	li	a2,1033
-+    157c:	85de                	mv	a1,s7
-+    157e:	fac42503          	lw	a0,-84(s0)
-+    1582:	4a8030ef          	jal	4a2a <write>
-+    1586:	40900793          	li	a5,1033
-+    158a:	00f51a63          	bne	a0,a5,159e <pipe1+0xfc>
-     for(n = 0; n < N; n++){
--    15b0:	24a5                	addiw	s1,s1,9
--    15b2:	0ff4f493          	zext.b	s1,s1
--    15b6:	fd5a18e3          	bne	s4,s5,1586 <pipe1+0xd2>
-+    158e:	24a5                	addw	s1,s1,9
-+    1590:	0ff4f493          	zext.b	s1,s1
-+    1594:	fd5a18e3          	bne	s4,s5,1564 <pipe1+0xc2>
-     exit(0);
--    15ba:	4501                	li	a0,0
--    15bc:	4c4030ef          	jal	4a80 <exit>
-+    1598:	4501                	li	a0,0
-+    159a:	470030ef          	jal	4a0a <exit>
-         printf("%s: pipe1 oops 1\n", s);
--    15c0:	85ce                	mv	a1,s3
--    15c2:	00004517          	auipc	a0,0x4
--    15c6:	47650513          	addi	a0,a0,1142 # 5a38 <malloc+0xaec>
--    15ca:	0cf030ef          	jal	4e98 <printf>
-+    159e:	85ca                	mv	a1,s2
-+    15a0:	00004517          	auipc	a0,0x4
-+    15a4:	40850513          	add	a0,a0,1032 # 59a8 <malloc+0xad0>
-+    15a8:	07d030ef          	jal	4e24 <printf>
-         exit(1);
--    15ce:	4505                	li	a0,1
--    15d0:	4b0030ef          	jal	4a80 <exit>
-+    15ac:	4505                	li	a0,1
-+    15ae:	45c030ef          	jal	4a0a <exit>
-           printf("%s: pipe1 oops 2\n", s);
--    15d4:	85ce                	mv	a1,s3
--    15d6:	00004517          	auipc	a0,0x4
--    15da:	47a50513          	addi	a0,a0,1146 # 5a50 <malloc+0xb04>
--    15de:	0bb030ef          	jal	4e98 <printf>
--          return;
--    15e2:	64a6                	ld	s1,72(sp)
--    15e4:	6906                	ld	s2,64(sp)
--    15e6:	7a42                	ld	s4,48(sp)
--    15e8:	7aa2                	ld	s5,40(sp)
-+    15b2:	85ca                	mv	a1,s2
-+    15b4:	00004517          	auipc	a0,0x4
-+    15b8:	40c50513          	add	a0,a0,1036 # 59c0 <malloc+0xae8>
-+    15bc:	069030ef          	jal	4e24 <printf>
- }
--    15ea:	60e6                	ld	ra,88(sp)
--    15ec:	6446                	ld	s0,80(sp)
--    15ee:	79e2                	ld	s3,56(sp)
--    15f0:	6125                	addi	sp,sp,96
--    15f2:	8082                	ret
-+    15c0:	60e6                	ld	ra,88(sp)
-+    15c2:	6446                	ld	s0,80(sp)
-+    15c4:	64a6                	ld	s1,72(sp)
-+    15c6:	6906                	ld	s2,64(sp)
-+    15c8:	79e2                	ld	s3,56(sp)
-+    15ca:	7a42                	ld	s4,48(sp)
-+    15cc:	7aa2                	ld	s5,40(sp)
-+    15ce:	7b02                	ld	s6,32(sp)
-+    15d0:	6be2                	ld	s7,24(sp)
-+    15d2:	6125                	add	sp,sp,96
-+    15d4:	8082                	ret
-     if(total != N * SZ){
--    15f4:	6785                	lui	a5,0x1
--    15f6:	42d78793          	addi	a5,a5,1069 # 142d <exectest+0xef>
--    15fa:	00fa0f63          	beq	s4,a5,1618 <pipe1+0x164>
--    15fe:	f05a                	sd	s6,32(sp)
--    1600:	ec5e                	sd	s7,24(sp)
-+    15d6:	6785                	lui	a5,0x1
-+    15d8:	42d78793          	add	a5,a5,1069 # 142d <exectest+0xff>
-+    15dc:	00fa0d63          	beq	s4,a5,15f6 <pipe1+0x154>
-       printf("%s: pipe1 oops 3 total %d\n", s, total);
--    1602:	8652                	mv	a2,s4
--    1604:	85ce                	mv	a1,s3
--    1606:	00004517          	auipc	a0,0x4
--    160a:	46250513          	addi	a0,a0,1122 # 5a68 <malloc+0xb1c>
--    160e:	08b030ef          	jal	4e98 <printf>
-+    15e0:	8652                	mv	a2,s4
-+    15e2:	85ca                	mv	a1,s2
-+    15e4:	00004517          	auipc	a0,0x4
-+    15e8:	3f450513          	add	a0,a0,1012 # 59d8 <malloc+0xb00>
-+    15ec:	039030ef          	jal	4e24 <printf>
-       exit(1);
--    1612:	4505                	li	a0,1
--    1614:	46c030ef          	jal	4a80 <exit>
--    1618:	f05a                	sd	s6,32(sp)
--    161a:	ec5e                	sd	s7,24(sp)
-+    15f0:	4505                	li	a0,1
-+    15f2:	418030ef          	jal	4a0a <exit>
-     close(fds[0]);
--    161c:	fa842503          	lw	a0,-88(s0)
--    1620:	488030ef          	jal	4aa8 <close>
-+    15f6:	fa842503          	lw	a0,-88(s0)
-+    15fa:	438030ef          	jal	4a32 <close>
-     wait(&xstatus);
--    1624:	fa440513          	addi	a0,s0,-92
--    1628:	460030ef          	jal	4a88 <wait>
-+    15fe:	fa440513          	add	a0,s0,-92
-+    1602:	410030ef          	jal	4a12 <wait>
-     exit(xstatus);
--    162c:	fa442503          	lw	a0,-92(s0)
--    1630:	450030ef          	jal	4a80 <exit>
--    1634:	e0ca                	sd	s2,64(sp)
--    1636:	f456                	sd	s5,40(sp)
--    1638:	f05a                	sd	s6,32(sp)
--    163a:	ec5e                	sd	s7,24(sp)
-+    1606:	fa442503          	lw	a0,-92(s0)
-+    160a:	400030ef          	jal	4a0a <exit>
-     printf("%s: fork() failed\n", s);
--    163c:	85ce                	mv	a1,s3
--    163e:	00004517          	auipc	a0,0x4
--    1642:	44a50513          	addi	a0,a0,1098 # 5a88 <malloc+0xb3c>
--    1646:	053030ef          	jal	4e98 <printf>
-+    160e:	85ca                	mv	a1,s2
-+    1610:	00004517          	auipc	a0,0x4
-+    1614:	3e850513          	add	a0,a0,1000 # 59f8 <malloc+0xb20>
-+    1618:	00d030ef          	jal	4e24 <printf>
-     exit(1);
--    164a:	4505                	li	a0,1
--    164c:	434030ef          	jal	4a80 <exit>
-+    161c:	4505                	li	a0,1
-+    161e:	3ec030ef          	jal	4a0a <exit>
- 
--0000000000001650 <exitwait>:
-+0000000000001622 <exitwait>:
- {
--    1650:	7139                	addi	sp,sp,-64
--    1652:	fc06                	sd	ra,56(sp)
--    1654:	f822                	sd	s0,48(sp)
--    1656:	f426                	sd	s1,40(sp)
--    1658:	f04a                	sd	s2,32(sp)
--    165a:	ec4e                	sd	s3,24(sp)
--    165c:	e852                	sd	s4,16(sp)
--    165e:	0080                	addi	s0,sp,64
--    1660:	8a2a                	mv	s4,a0
-+    1622:	7139                	add	sp,sp,-64
-+    1624:	fc06                	sd	ra,56(sp)
-+    1626:	f822                	sd	s0,48(sp)
-+    1628:	f426                	sd	s1,40(sp)
-+    162a:	f04a                	sd	s2,32(sp)
-+    162c:	ec4e                	sd	s3,24(sp)
-+    162e:	e852                	sd	s4,16(sp)
-+    1630:	0080                	add	s0,sp,64
-+    1632:	8a2a                	mv	s4,a0
-   for(i = 0; i < 100; i++){
--    1662:	4901                	li	s2,0
--    1664:	06400993          	li	s3,100
-+    1634:	4901                	li	s2,0
-+    1636:	06400993          	li	s3,100
-     pid = fork();
--    1668:	410030ef          	jal	4a78 <fork>
--    166c:	84aa                	mv	s1,a0
-+    163a:	3c8030ef          	jal	4a02 <fork>
-+    163e:	84aa                	mv	s1,a0
-     if(pid < 0){
--    166e:	02054863          	bltz	a0,169e <exitwait+0x4e>
-+    1640:	02054863          	bltz	a0,1670 <exitwait+0x4e>
-     if(pid){
--    1672:	c525                	beqz	a0,16da <exitwait+0x8a>
-+    1644:	c525                	beqz	a0,16ac <exitwait+0x8a>
-       if(wait(&xstate) != pid){
--    1674:	fcc40513          	addi	a0,s0,-52
--    1678:	410030ef          	jal	4a88 <wait>
--    167c:	02951b63          	bne	a0,s1,16b2 <exitwait+0x62>
-+    1646:	fcc40513          	add	a0,s0,-52
-+    164a:	3c8030ef          	jal	4a12 <wait>
-+    164e:	02951b63          	bne	a0,s1,1684 <exitwait+0x62>
-       if(i != xstate) {
--    1680:	fcc42783          	lw	a5,-52(s0)
--    1684:	05279163          	bne	a5,s2,16c6 <exitwait+0x76>
-+    1652:	fcc42783          	lw	a5,-52(s0)
-+    1656:	05279163          	bne	a5,s2,1698 <exitwait+0x76>
-   for(i = 0; i < 100; i++){
--    1688:	2905                	addiw	s2,s2,1 # 3001 <subdir+0x425>
--    168a:	fd391fe3          	bne	s2,s3,1668 <exitwait+0x18>
-+    165a:	2905                	addw	s2,s2,1
-+    165c:	fd391fe3          	bne	s2,s3,163a <exitwait+0x18>
- }
--    168e:	70e2                	ld	ra,56(sp)
--    1690:	7442                	ld	s0,48(sp)
--    1692:	74a2                	ld	s1,40(sp)
--    1694:	7902                	ld	s2,32(sp)
--    1696:	69e2                	ld	s3,24(sp)
--    1698:	6a42                	ld	s4,16(sp)
--    169a:	6121                	addi	sp,sp,64
--    169c:	8082                	ret
-+    1660:	70e2                	ld	ra,56(sp)
-+    1662:	7442                	ld	s0,48(sp)
-+    1664:	74a2                	ld	s1,40(sp)
-+    1666:	7902                	ld	s2,32(sp)
-+    1668:	69e2                	ld	s3,24(sp)
-+    166a:	6a42                	ld	s4,16(sp)
-+    166c:	6121                	add	sp,sp,64
-+    166e:	8082                	ret
-       printf("%s: fork failed\n", s);
--    169e:	85d2                	mv	a1,s4
--    16a0:	00004517          	auipc	a0,0x4
--    16a4:	27850513          	addi	a0,a0,632 # 5918 <malloc+0x9cc>
--    16a8:	7f0030ef          	jal	4e98 <printf>
-+    1670:	85d2                	mv	a1,s4
-+    1672:	00004517          	auipc	a0,0x4
-+    1676:	21650513          	add	a0,a0,534 # 5888 <malloc+0x9b0>
-+    167a:	7aa030ef          	jal	4e24 <printf>
-       exit(1);
--    16ac:	4505                	li	a0,1
--    16ae:	3d2030ef          	jal	4a80 <exit>
-+    167e:	4505                	li	a0,1
-+    1680:	38a030ef          	jal	4a0a <exit>
-         printf("%s: wait wrong pid\n", s);
--    16b2:	85d2                	mv	a1,s4
--    16b4:	00004517          	auipc	a0,0x4
--    16b8:	3ec50513          	addi	a0,a0,1004 # 5aa0 <malloc+0xb54>
--    16bc:	7dc030ef          	jal	4e98 <printf>
-+    1684:	85d2                	mv	a1,s4
-+    1686:	00004517          	auipc	a0,0x4
-+    168a:	38a50513          	add	a0,a0,906 # 5a10 <malloc+0xb38>
-+    168e:	796030ef          	jal	4e24 <printf>
-         exit(1);
--    16c0:	4505                	li	a0,1
--    16c2:	3be030ef          	jal	4a80 <exit>
-+    1692:	4505                	li	a0,1
-+    1694:	376030ef          	jal	4a0a <exit>
-         printf("%s: wait wrong exit status\n", s);
--    16c6:	85d2                	mv	a1,s4
--    16c8:	00004517          	auipc	a0,0x4
--    16cc:	3f050513          	addi	a0,a0,1008 # 5ab8 <malloc+0xb6c>
--    16d0:	7c8030ef          	jal	4e98 <printf>
-+    1698:	85d2                	mv	a1,s4
-+    169a:	00004517          	auipc	a0,0x4
-+    169e:	38e50513          	add	a0,a0,910 # 5a28 <malloc+0xb50>
-+    16a2:	782030ef          	jal	4e24 <printf>
-         exit(1);
--    16d4:	4505                	li	a0,1
--    16d6:	3aa030ef          	jal	4a80 <exit>
-+    16a6:	4505                	li	a0,1
-+    16a8:	362030ef          	jal	4a0a <exit>
-       exit(i);
--    16da:	854a                	mv	a0,s2
--    16dc:	3a4030ef          	jal	4a80 <exit>
-+    16ac:	854a                	mv	a0,s2
-+    16ae:	35c030ef          	jal	4a0a <exit>
- 
--00000000000016e0 <twochildren>:
-+00000000000016b2 <twochildren>:
- {
--    16e0:	1101                	addi	sp,sp,-32
--    16e2:	ec06                	sd	ra,24(sp)
--    16e4:	e822                	sd	s0,16(sp)
--    16e6:	e426                	sd	s1,8(sp)
--    16e8:	e04a                	sd	s2,0(sp)
--    16ea:	1000                	addi	s0,sp,32
--    16ec:	892a                	mv	s2,a0
--    16ee:	3e800493          	li	s1,1000
-+    16b2:	1101                	add	sp,sp,-32
-+    16b4:	ec06                	sd	ra,24(sp)
-+    16b6:	e822                	sd	s0,16(sp)
-+    16b8:	e426                	sd	s1,8(sp)
-+    16ba:	e04a                	sd	s2,0(sp)
-+    16bc:	1000                	add	s0,sp,32
-+    16be:	892a                	mv	s2,a0
-+    16c0:	3e800493          	li	s1,1000
-     int pid1 = fork();
--    16f2:	386030ef          	jal	4a78 <fork>
-+    16c4:	33e030ef          	jal	4a02 <fork>
-     if(pid1 < 0){
--    16f6:	02054663          	bltz	a0,1722 <twochildren+0x42>
-+    16c8:	02054663          	bltz	a0,16f4 <twochildren+0x42>
-     if(pid1 == 0){
--    16fa:	cd15                	beqz	a0,1736 <twochildren+0x56>
-+    16cc:	cd15                	beqz	a0,1708 <twochildren+0x56>
-       int pid2 = fork();
--    16fc:	37c030ef          	jal	4a78 <fork>
-+    16ce:	334030ef          	jal	4a02 <fork>
-       if(pid2 < 0){
--    1700:	02054d63          	bltz	a0,173a <twochildren+0x5a>
-+    16d2:	02054d63          	bltz	a0,170c <twochildren+0x5a>
-       if(pid2 == 0){
--    1704:	c529                	beqz	a0,174e <twochildren+0x6e>
-+    16d6:	c529                	beqz	a0,1720 <twochildren+0x6e>
-         wait(0);
--    1706:	4501                	li	a0,0
--    1708:	380030ef          	jal	4a88 <wait>
-+    16d8:	4501                	li	a0,0
-+    16da:	338030ef          	jal	4a12 <wait>
-         wait(0);
--    170c:	4501                	li	a0,0
--    170e:	37a030ef          	jal	4a88 <wait>
-+    16de:	4501                	li	a0,0
-+    16e0:	332030ef          	jal	4a12 <wait>
-   for(int i = 0; i < 1000; i++){
--    1712:	34fd                	addiw	s1,s1,-1
--    1714:	fcf9                	bnez	s1,16f2 <twochildren+0x12>
-+    16e4:	34fd                	addw	s1,s1,-1
-+    16e6:	fcf9                	bnez	s1,16c4 <twochildren+0x12>
- }
--    1716:	60e2                	ld	ra,24(sp)
--    1718:	6442                	ld	s0,16(sp)
--    171a:	64a2                	ld	s1,8(sp)
--    171c:	6902                	ld	s2,0(sp)
--    171e:	6105                	addi	sp,sp,32
--    1720:	8082                	ret
-+    16e8:	60e2                	ld	ra,24(sp)
-+    16ea:	6442                	ld	s0,16(sp)
-+    16ec:	64a2                	ld	s1,8(sp)
-+    16ee:	6902                	ld	s2,0(sp)
-+    16f0:	6105                	add	sp,sp,32
-+    16f2:	8082                	ret
-       printf("%s: fork failed\n", s);
--    1722:	85ca                	mv	a1,s2
--    1724:	00004517          	auipc	a0,0x4
--    1728:	1f450513          	addi	a0,a0,500 # 5918 <malloc+0x9cc>
--    172c:	76c030ef          	jal	4e98 <printf>
-+    16f4:	85ca                	mv	a1,s2
-+    16f6:	00004517          	auipc	a0,0x4
-+    16fa:	19250513          	add	a0,a0,402 # 5888 <malloc+0x9b0>
-+    16fe:	726030ef          	jal	4e24 <printf>
-       exit(1);
--    1730:	4505                	li	a0,1
--    1732:	34e030ef          	jal	4a80 <exit>
-+    1702:	4505                	li	a0,1
-+    1704:	306030ef          	jal	4a0a <exit>
-       exit(0);
--    1736:	34a030ef          	jal	4a80 <exit>
-+    1708:	302030ef          	jal	4a0a <exit>
-         printf("%s: fork failed\n", s);
--    173a:	85ca                	mv	a1,s2
--    173c:	00004517          	auipc	a0,0x4
--    1740:	1dc50513          	addi	a0,a0,476 # 5918 <malloc+0x9cc>
--    1744:	754030ef          	jal	4e98 <printf>
-+    170c:	85ca                	mv	a1,s2
-+    170e:	00004517          	auipc	a0,0x4
-+    1712:	17a50513          	add	a0,a0,378 # 5888 <malloc+0x9b0>
-+    1716:	70e030ef          	jal	4e24 <printf>
-         exit(1);
--    1748:	4505                	li	a0,1
--    174a:	336030ef          	jal	4a80 <exit>
-+    171a:	4505                	li	a0,1
-+    171c:	2ee030ef          	jal	4a0a <exit>
-         exit(0);
--    174e:	332030ef          	jal	4a80 <exit>
-+    1720:	2ea030ef          	jal	4a0a <exit>
- 
--0000000000001752 <forkfork>:
-+0000000000001724 <forkfork>:
- {
--    1752:	7179                	addi	sp,sp,-48
--    1754:	f406                	sd	ra,40(sp)
--    1756:	f022                	sd	s0,32(sp)
--    1758:	ec26                	sd	s1,24(sp)
--    175a:	1800                	addi	s0,sp,48
--    175c:	84aa                	mv	s1,a0
-+    1724:	7179                	add	sp,sp,-48
-+    1726:	f406                	sd	ra,40(sp)
-+    1728:	f022                	sd	s0,32(sp)
-+    172a:	ec26                	sd	s1,24(sp)
-+    172c:	1800                	add	s0,sp,48
-+    172e:	84aa                	mv	s1,a0
-     int pid = fork();
--    175e:	31a030ef          	jal	4a78 <fork>
-+    1730:	2d2030ef          	jal	4a02 <fork>
-     if(pid < 0){
--    1762:	02054b63          	bltz	a0,1798 <forkfork+0x46>
-+    1734:	02054b63          	bltz	a0,176a <forkfork+0x46>
-     if(pid == 0){
--    1766:	c139                	beqz	a0,17ac <forkfork+0x5a>
-+    1738:	c139                	beqz	a0,177e <forkfork+0x5a>
-     int pid = fork();
--    1768:	310030ef          	jal	4a78 <fork>
-+    173a:	2c8030ef          	jal	4a02 <fork>
-     if(pid < 0){
--    176c:	02054663          	bltz	a0,1798 <forkfork+0x46>
-+    173e:	02054663          	bltz	a0,176a <forkfork+0x46>
-     if(pid == 0){
--    1770:	cd15                	beqz	a0,17ac <forkfork+0x5a>
-+    1742:	cd15                	beqz	a0,177e <forkfork+0x5a>
-     wait(&xstatus);
--    1772:	fdc40513          	addi	a0,s0,-36
--    1776:	312030ef          	jal	4a88 <wait>
-+    1744:	fdc40513          	add	a0,s0,-36
-+    1748:	2ca030ef          	jal	4a12 <wait>
-     if(xstatus != 0) {
--    177a:	fdc42783          	lw	a5,-36(s0)
--    177e:	ebb9                	bnez	a5,17d4 <forkfork+0x82>
-+    174c:	fdc42783          	lw	a5,-36(s0)
-+    1750:	ebb9                	bnez	a5,17a6 <forkfork+0x82>
-     wait(&xstatus);
--    1780:	fdc40513          	addi	a0,s0,-36
--    1784:	304030ef          	jal	4a88 <wait>
-+    1752:	fdc40513          	add	a0,s0,-36
-+    1756:	2bc030ef          	jal	4a12 <wait>
-     if(xstatus != 0) {
--    1788:	fdc42783          	lw	a5,-36(s0)
--    178c:	e7a1                	bnez	a5,17d4 <forkfork+0x82>
-+    175a:	fdc42783          	lw	a5,-36(s0)
-+    175e:	e7a1                	bnez	a5,17a6 <forkfork+0x82>
- }
--    178e:	70a2                	ld	ra,40(sp)
--    1790:	7402                	ld	s0,32(sp)
--    1792:	64e2                	ld	s1,24(sp)
--    1794:	6145                	addi	sp,sp,48
--    1796:	8082                	ret
-+    1760:	70a2                	ld	ra,40(sp)
-+    1762:	7402                	ld	s0,32(sp)
-+    1764:	64e2                	ld	s1,24(sp)
-+    1766:	6145                	add	sp,sp,48
-+    1768:	8082                	ret
-       printf("%s: fork failed", s);
--    1798:	85a6                	mv	a1,s1
--    179a:	00004517          	auipc	a0,0x4
--    179e:	33e50513          	addi	a0,a0,830 # 5ad8 <malloc+0xb8c>
--    17a2:	6f6030ef          	jal	4e98 <printf>
-+    176a:	85a6                	mv	a1,s1
-+    176c:	00004517          	auipc	a0,0x4
-+    1770:	2dc50513          	add	a0,a0,732 # 5a48 <malloc+0xb70>
-+    1774:	6b0030ef          	jal	4e24 <printf>
-       exit(1);
--    17a6:	4505                	li	a0,1
--    17a8:	2d8030ef          	jal	4a80 <exit>
-+    1778:	4505                	li	a0,1
-+    177a:	290030ef          	jal	4a0a <exit>
- {
--    17ac:	0c800493          	li	s1,200
-+    177e:	0c800493          	li	s1,200
-         int pid1 = fork();
--    17b0:	2c8030ef          	jal	4a78 <fork>
-+    1782:	280030ef          	jal	4a02 <fork>
-         if(pid1 < 0){
--    17b4:	00054b63          	bltz	a0,17ca <forkfork+0x78>
-+    1786:	00054b63          	bltz	a0,179c <forkfork+0x78>
-         if(pid1 == 0){
--    17b8:	cd01                	beqz	a0,17d0 <forkfork+0x7e>
-+    178a:	cd01                	beqz	a0,17a2 <forkfork+0x7e>
-         wait(0);
--    17ba:	4501                	li	a0,0
--    17bc:	2cc030ef          	jal	4a88 <wait>
-+    178c:	4501                	li	a0,0
-+    178e:	284030ef          	jal	4a12 <wait>
-       for(int j = 0; j < 200; j++){
--    17c0:	34fd                	addiw	s1,s1,-1
--    17c2:	f4fd                	bnez	s1,17b0 <forkfork+0x5e>
-+    1792:	34fd                	addw	s1,s1,-1
-+    1794:	f4fd                	bnez	s1,1782 <forkfork+0x5e>
-       exit(0);
--    17c4:	4501                	li	a0,0
--    17c6:	2ba030ef          	jal	4a80 <exit>
-+    1796:	4501                	li	a0,0
-+    1798:	272030ef          	jal	4a0a <exit>
-           exit(1);
--    17ca:	4505                	li	a0,1
--    17cc:	2b4030ef          	jal	4a80 <exit>
-+    179c:	4505                	li	a0,1
-+    179e:	26c030ef          	jal	4a0a <exit>
-           exit(0);
--    17d0:	2b0030ef          	jal	4a80 <exit>
-+    17a2:	268030ef          	jal	4a0a <exit>
-       printf("%s: fork in child failed", s);
--    17d4:	85a6                	mv	a1,s1
--    17d6:	00004517          	auipc	a0,0x4
--    17da:	31250513          	addi	a0,a0,786 # 5ae8 <malloc+0xb9c>
--    17de:	6ba030ef          	jal	4e98 <printf>
-+    17a6:	85a6                	mv	a1,s1
-+    17a8:	00004517          	auipc	a0,0x4
-+    17ac:	2b050513          	add	a0,a0,688 # 5a58 <malloc+0xb80>
-+    17b0:	674030ef          	jal	4e24 <printf>
-       exit(1);
--    17e2:	4505                	li	a0,1
--    17e4:	29c030ef          	jal	4a80 <exit>
-+    17b4:	4505                	li	a0,1
-+    17b6:	254030ef          	jal	4a0a <exit>
- 
--00000000000017e8 <reparent2>:
-+00000000000017ba <reparent2>:
- {
--    17e8:	1101                	addi	sp,sp,-32
--    17ea:	ec06                	sd	ra,24(sp)
--    17ec:	e822                	sd	s0,16(sp)
--    17ee:	e426                	sd	s1,8(sp)
--    17f0:	1000                	addi	s0,sp,32
--    17f2:	32000493          	li	s1,800
-+    17ba:	1101                	add	sp,sp,-32
-+    17bc:	ec06                	sd	ra,24(sp)
-+    17be:	e822                	sd	s0,16(sp)
-+    17c0:	e426                	sd	s1,8(sp)
-+    17c2:	1000                	add	s0,sp,32
-+    17c4:	32000493          	li	s1,800
-     int pid1 = fork();
--    17f6:	282030ef          	jal	4a78 <fork>
-+    17c8:	23a030ef          	jal	4a02 <fork>
-     if(pid1 < 0){
--    17fa:	00054b63          	bltz	a0,1810 <reparent2+0x28>
-+    17cc:	00054b63          	bltz	a0,17e2 <reparent2+0x28>
-     if(pid1 == 0){
--    17fe:	c115                	beqz	a0,1822 <reparent2+0x3a>
-+    17d0:	c115                	beqz	a0,17f4 <reparent2+0x3a>
-     wait(0);
--    1800:	4501                	li	a0,0
--    1802:	286030ef          	jal	4a88 <wait>
-+    17d2:	4501                	li	a0,0
-+    17d4:	23e030ef          	jal	4a12 <wait>
-   for(int i = 0; i < 800; i++){
--    1806:	34fd                	addiw	s1,s1,-1
--    1808:	f4fd                	bnez	s1,17f6 <reparent2+0xe>
-+    17d8:	34fd                	addw	s1,s1,-1
-+    17da:	f4fd                	bnez	s1,17c8 <reparent2+0xe>
-   exit(0);
--    180a:	4501                	li	a0,0
--    180c:	274030ef          	jal	4a80 <exit>
-+    17dc:	4501                	li	a0,0
-+    17de:	22c030ef          	jal	4a0a <exit>
-       printf("fork failed\n");
--    1810:	00005517          	auipc	a0,0x5
--    1814:	67850513          	addi	a0,a0,1656 # 6e88 <malloc+0x1f3c>
--    1818:	680030ef          	jal	4e98 <printf>
-+    17e2:	00005517          	auipc	a0,0x5
-+    17e6:	61650513          	add	a0,a0,1558 # 6df8 <malloc+0x1f20>
-+    17ea:	63a030ef          	jal	4e24 <printf>
-       exit(1);
--    181c:	4505                	li	a0,1
--    181e:	262030ef          	jal	4a80 <exit>
-+    17ee:	4505                	li	a0,1
-+    17f0:	21a030ef          	jal	4a0a <exit>
-       fork();
--    1822:	256030ef          	jal	4a78 <fork>
-+    17f4:	20e030ef          	jal	4a02 <fork>
-       fork();
--    1826:	252030ef          	jal	4a78 <fork>
-+    17f8:	20a030ef          	jal	4a02 <fork>
-       exit(0);
--    182a:	4501                	li	a0,0
--    182c:	254030ef          	jal	4a80 <exit>
-+    17fc:	4501                	li	a0,0
-+    17fe:	20c030ef          	jal	4a0a <exit>
- 
--0000000000001830 <createdelete>:
-+0000000000001802 <createdelete>:
- {
--    1830:	7175                	addi	sp,sp,-144
--    1832:	e506                	sd	ra,136(sp)
--    1834:	e122                	sd	s0,128(sp)
--    1836:	fca6                	sd	s1,120(sp)
--    1838:	f8ca                	sd	s2,112(sp)
--    183a:	f4ce                	sd	s3,104(sp)
--    183c:	f0d2                	sd	s4,96(sp)
--    183e:	ecd6                	sd	s5,88(sp)
--    1840:	e8da                	sd	s6,80(sp)
--    1842:	e4de                	sd	s7,72(sp)
--    1844:	e0e2                	sd	s8,64(sp)
--    1846:	fc66                	sd	s9,56(sp)
--    1848:	0900                	addi	s0,sp,144
--    184a:	8caa                	mv	s9,a0
-+    1802:	7175                	add	sp,sp,-144
-+    1804:	e506                	sd	ra,136(sp)
-+    1806:	e122                	sd	s0,128(sp)
-+    1808:	fca6                	sd	s1,120(sp)
-+    180a:	f8ca                	sd	s2,112(sp)
-+    180c:	f4ce                	sd	s3,104(sp)
-+    180e:	f0d2                	sd	s4,96(sp)
-+    1810:	ecd6                	sd	s5,88(sp)
-+    1812:	e8da                	sd	s6,80(sp)
-+    1814:	e4de                	sd	s7,72(sp)
-+    1816:	e0e2                	sd	s8,64(sp)
-+    1818:	fc66                	sd	s9,56(sp)
-+    181a:	0900                	add	s0,sp,144
-+    181c:	8caa                	mv	s9,a0
-   for(pi = 0; pi < NCHILD; pi++){
--    184c:	4901                	li	s2,0
--    184e:	4991                	li	s3,4
-+    181e:	4901                	li	s2,0
-+    1820:	4991                	li	s3,4
-     pid = fork();
--    1850:	228030ef          	jal	4a78 <fork>
--    1854:	84aa                	mv	s1,a0
-+    1822:	1e0030ef          	jal	4a02 <fork>
-+    1826:	84aa                	mv	s1,a0
-     if(pid < 0){
--    1856:	02054d63          	bltz	a0,1890 <createdelete+0x60>
-+    1828:	02054d63          	bltz	a0,1862 <createdelete+0x60>
-     if(pid == 0){
--    185a:	c529                	beqz	a0,18a4 <createdelete+0x74>
-+    182c:	c529                	beqz	a0,1876 <createdelete+0x74>
-   for(pi = 0; pi < NCHILD; pi++){
--    185c:	2905                	addiw	s2,s2,1
--    185e:	ff3919e3          	bne	s2,s3,1850 <createdelete+0x20>
--    1862:	4491                	li	s1,4
-+    182e:	2905                	addw	s2,s2,1
-+    1830:	ff3919e3          	bne	s2,s3,1822 <createdelete+0x20>
-+    1834:	4491                	li	s1,4
-     wait(&xstatus);
--    1864:	f7c40513          	addi	a0,s0,-132
--    1868:	220030ef          	jal	4a88 <wait>
-+    1836:	f7c40513          	add	a0,s0,-132
-+    183a:	1d8030ef          	jal	4a12 <wait>
-     if(xstatus != 0)
--    186c:	f7c42903          	lw	s2,-132(s0)
--    1870:	0a091e63          	bnez	s2,192c <createdelete+0xfc>
-+    183e:	f7c42903          	lw	s2,-132(s0)
-+    1842:	0a091e63          	bnez	s2,18fe <createdelete+0xfc>
-   for(pi = 0; pi < NCHILD; pi++){
--    1874:	34fd                	addiw	s1,s1,-1
--    1876:	f4fd                	bnez	s1,1864 <createdelete+0x34>
-+    1846:	34fd                	addw	s1,s1,-1
-+    1848:	f4fd                	bnez	s1,1836 <createdelete+0x34>
-   name[0] = name[1] = name[2] = 0;
--    1878:	f8040123          	sb	zero,-126(s0)
--    187c:	03000993          	li	s3,48
--    1880:	5a7d                	li	s4,-1
--    1882:	07000c13          	li	s8,112
--      if((i == 0 || i >= N/2) && fd < 0){
--    1886:	4b25                	li	s6,9
-+    184a:	f8040123          	sb	zero,-126(s0)
-+    184e:	03000993          	li	s3,48
-+    1852:	5a7d                	li	s4,-1
-+    1854:	07000c13          	li	s8,112
-       } else if((i >= 1 && i < N/2) && fd >= 0){
--    1888:	4ba1                	li	s7,8
-+    1858:	4b21                	li	s6,8
-+      if((i == 0 || i >= N/2) && fd < 0){
-+    185a:	4ba5                	li	s7,9
-     for(pi = 0; pi < NCHILD; pi++){
--    188a:	07400a93          	li	s5,116
--    188e:	aa39                	j	19ac <createdelete+0x17c>
-+    185c:	07400a93          	li	s5,116
-+    1860:	a20d                	j	1982 <createdelete+0x180>
-       printf("%s: fork failed\n", s);
--    1890:	85e6                	mv	a1,s9
--    1892:	00004517          	auipc	a0,0x4
--    1896:	08650513          	addi	a0,a0,134 # 5918 <malloc+0x9cc>
--    189a:	5fe030ef          	jal	4e98 <printf>
-+    1862:	85e6                	mv	a1,s9
-+    1864:	00004517          	auipc	a0,0x4
-+    1868:	02450513          	add	a0,a0,36 # 5888 <malloc+0x9b0>
-+    186c:	5b8030ef          	jal	4e24 <printf>
-       exit(1);
--    189e:	4505                	li	a0,1
--    18a0:	1e0030ef          	jal	4a80 <exit>
-+    1870:	4505                	li	a0,1
-+    1872:	198030ef          	jal	4a0a <exit>
-       name[0] = 'p' + pi;
--    18a4:	0709091b          	addiw	s2,s2,112
--    18a8:	f9240023          	sb	s2,-128(s0)
-+    1876:	0709091b          	addw	s2,s2,112
-+    187a:	f9240023          	sb	s2,-128(s0)
-       name[2] = '\0';
--    18ac:	f8040123          	sb	zero,-126(s0)
-+    187e:	f8040123          	sb	zero,-126(s0)
-       for(i = 0; i < N; i++){
--    18b0:	4951                	li	s2,20
--    18b2:	a831                	j	18ce <createdelete+0x9e>
-+    1882:	4951                	li	s2,20
-+    1884:	a831                	j	18a0 <createdelete+0x9e>
-           printf("%s: create failed\n", s);
--    18b4:	85e6                	mv	a1,s9
--    18b6:	00004517          	auipc	a0,0x4
--    18ba:	0fa50513          	addi	a0,a0,250 # 59b0 <malloc+0xa64>
--    18be:	5da030ef          	jal	4e98 <printf>
-+    1886:	85e6                	mv	a1,s9
-+    1888:	00004517          	auipc	a0,0x4
-+    188c:	09850513          	add	a0,a0,152 # 5920 <malloc+0xa48>
-+    1890:	594030ef          	jal	4e24 <printf>
-           exit(1);
--    18c2:	4505                	li	a0,1
--    18c4:	1bc030ef          	jal	4a80 <exit>
-+    1894:	4505                	li	a0,1
-+    1896:	174030ef          	jal	4a0a <exit>
-       for(i = 0; i < N; i++){
--    18c8:	2485                	addiw	s1,s1,1
--    18ca:	05248e63          	beq	s1,s2,1926 <createdelete+0xf6>
-+    189a:	2485                	addw	s1,s1,1
-+    189c:	05248e63          	beq	s1,s2,18f8 <createdelete+0xf6>
-         name[1] = '0' + i;
--    18ce:	0304879b          	addiw	a5,s1,48
--    18d2:	f8f400a3          	sb	a5,-127(s0)
-+    18a0:	0304879b          	addw	a5,s1,48
-+    18a4:	f8f400a3          	sb	a5,-127(s0)
-         fd = open(name, O_CREATE | O_RDWR);
--    18d6:	20200593          	li	a1,514
--    18da:	f8040513          	addi	a0,s0,-128
--    18de:	1e2030ef          	jal	4ac0 <open>
-+    18a8:	20200593          	li	a1,514
-+    18ac:	f8040513          	add	a0,s0,-128
-+    18b0:	19a030ef          	jal	4a4a <open>
-         if(fd < 0){
--    18e2:	fc0549e3          	bltz	a0,18b4 <createdelete+0x84>
-+    18b4:	fc0549e3          	bltz	a0,1886 <createdelete+0x84>
-         close(fd);
--    18e6:	1c2030ef          	jal	4aa8 <close>
-+    18b8:	17a030ef          	jal	4a32 <close>
-         if(i > 0 && (i % 2 ) == 0){
--    18ea:	10905063          	blez	s1,19ea <createdelete+0x1ba>
--    18ee:	0014f793          	andi	a5,s1,1
--    18f2:	fbf9                	bnez	a5,18c8 <createdelete+0x98>
-+    18bc:	fc905fe3          	blez	s1,189a <createdelete+0x98>
-+    18c0:	0014f793          	and	a5,s1,1
-+    18c4:	fbf9                	bnez	a5,189a <createdelete+0x98>
-           name[1] = '0' + (i / 2);
--    18f4:	01f4d79b          	srliw	a5,s1,0x1f
--    18f8:	9fa5                	addw	a5,a5,s1
--    18fa:	4017d79b          	sraiw	a5,a5,0x1
--    18fe:	0307879b          	addiw	a5,a5,48
--    1902:	f8f400a3          	sb	a5,-127(s0)
-+    18c6:	01f4d79b          	srlw	a5,s1,0x1f
-+    18ca:	9fa5                	addw	a5,a5,s1
-+    18cc:	4017d79b          	sraw	a5,a5,0x1
-+    18d0:	0307879b          	addw	a5,a5,48
-+    18d4:	f8f400a3          	sb	a5,-127(s0)
-           if(unlink(name) < 0){
--    1906:	f8040513          	addi	a0,s0,-128
--    190a:	1c6030ef          	jal	4ad0 <unlink>
--    190e:	fa055de3          	bgez	a0,18c8 <createdelete+0x98>
-+    18d8:	f8040513          	add	a0,s0,-128
-+    18dc:	17e030ef          	jal	4a5a <unlink>
-+    18e0:	fa055de3          	bgez	a0,189a <createdelete+0x98>
-             printf("%s: unlink failed\n", s);
--    1912:	85e6                	mv	a1,s9
--    1914:	00004517          	auipc	a0,0x4
--    1918:	1f450513          	addi	a0,a0,500 # 5b08 <malloc+0xbbc>
--    191c:	57c030ef          	jal	4e98 <printf>
-+    18e4:	85e6                	mv	a1,s9
-+    18e6:	00004517          	auipc	a0,0x4
-+    18ea:	19250513          	add	a0,a0,402 # 5a78 <malloc+0xba0>
-+    18ee:	536030ef          	jal	4e24 <printf>
-             exit(1);
--    1920:	4505                	li	a0,1
--    1922:	15e030ef          	jal	4a80 <exit>
-+    18f2:	4505                	li	a0,1
-+    18f4:	116030ef          	jal	4a0a <exit>
-       exit(0);
--    1926:	4501                	li	a0,0
--    1928:	158030ef          	jal	4a80 <exit>
-+    18f8:	4501                	li	a0,0
-+    18fa:	110030ef          	jal	4a0a <exit>
-       exit(1);
--    192c:	4505                	li	a0,1
--    192e:	152030ef          	jal	4a80 <exit>
-+    18fe:	4505                	li	a0,1
-+    1900:	10a030ef          	jal	4a0a <exit>
-         printf("%s: oops createdelete %s didn't exist\n", s, name);
--    1932:	f8040613          	addi	a2,s0,-128
--    1936:	85e6                	mv	a1,s9
--    1938:	00004517          	auipc	a0,0x4
--    193c:	1e850513          	addi	a0,a0,488 # 5b20 <malloc+0xbd4>
--    1940:	558030ef          	jal	4e98 <printf>
-+    1904:	f8040613          	add	a2,s0,-128
-+    1908:	85e6                	mv	a1,s9
-+    190a:	00004517          	auipc	a0,0x4
-+    190e:	18650513          	add	a0,a0,390 # 5a90 <malloc+0xbb8>
-+    1912:	512030ef          	jal	4e24 <printf>
-         exit(1);
--    1944:	4505                	li	a0,1
--    1946:	13a030ef          	jal	4a80 <exit>
-+    1916:	4505                	li	a0,1
-+    1918:	0f2030ef          	jal	4a0a <exit>
-       } else if((i >= 1 && i < N/2) && fd >= 0){
--    194a:	034bfb63          	bgeu	s7,s4,1980 <createdelete+0x150>
-+    191c:	034b7d63          	bgeu	s6,s4,1956 <createdelete+0x154>
-       if(fd >= 0)
--    194e:	02055663          	bgez	a0,197a <createdelete+0x14a>
-+    1920:	02055863          	bgez	a0,1950 <createdelete+0x14e>
-     for(pi = 0; pi < NCHILD; pi++){
--    1952:	2485                	addiw	s1,s1,1
--    1954:	0ff4f493          	zext.b	s1,s1
--    1958:	05548263          	beq	s1,s5,199c <createdelete+0x16c>
-+    1924:	2485                	addw	s1,s1,1
-+    1926:	0ff4f493          	zext.b	s1,s1
-+    192a:	05548463          	beq	s1,s5,1972 <createdelete+0x170>
-       name[0] = 'p' + pi;
--    195c:	f8940023          	sb	s1,-128(s0)
-+    192e:	f8940023          	sb	s1,-128(s0)
-       name[1] = '0' + i;
--    1960:	f93400a3          	sb	s3,-127(s0)
-+    1932:	f93400a3          	sb	s3,-127(s0)
-       fd = open(name, 0);
--    1964:	4581                	li	a1,0
--    1966:	f8040513          	addi	a0,s0,-128
--    196a:	156030ef          	jal	4ac0 <open>
-+    1936:	4581                	li	a1,0
-+    1938:	f8040513          	add	a0,s0,-128
-+    193c:	10e030ef          	jal	4a4a <open>
-       if((i == 0 || i >= N/2) && fd < 0){
--    196e:	00090463          	beqz	s2,1976 <createdelete+0x146>
--    1972:	fd2b5ce3          	bge	s6,s2,194a <createdelete+0x11a>
--    1976:	fa054ee3          	bltz	a0,1932 <createdelete+0x102>
-+    1940:	00090463          	beqz	s2,1948 <createdelete+0x146>
-+    1944:	fd2bdce3          	bge	s7,s2,191c <createdelete+0x11a>
-+    1948:	fa054ee3          	bltz	a0,1904 <createdelete+0x102>
-+      } else if((i >= 1 && i < N/2) && fd >= 0){
-+    194c:	014b7763          	bgeu	s6,s4,195a <createdelete+0x158>
-         close(fd);
--    197a:	12e030ef          	jal	4aa8 <close>
--    197e:	bfd1                	j	1952 <createdelete+0x122>
-+    1950:	0e2030ef          	jal	4a32 <close>
-+    1954:	bfc1                	j	1924 <createdelete+0x122>
-       } else if((i >= 1 && i < N/2) && fd >= 0){
--    1980:	fc0549e3          	bltz	a0,1952 <createdelete+0x122>
-+    1956:	fc0547e3          	bltz	a0,1924 <createdelete+0x122>
-         printf("%s: oops createdelete %s did exist\n", s, name);
--    1984:	f8040613          	addi	a2,s0,-128
--    1988:	85e6                	mv	a1,s9
--    198a:	00004517          	auipc	a0,0x4
--    198e:	1be50513          	addi	a0,a0,446 # 5b48 <malloc+0xbfc>
--    1992:	506030ef          	jal	4e98 <printf>
-+    195a:	f8040613          	add	a2,s0,-128
-+    195e:	85e6                	mv	a1,s9
-+    1960:	00004517          	auipc	a0,0x4
-+    1964:	15850513          	add	a0,a0,344 # 5ab8 <malloc+0xbe0>
-+    1968:	4bc030ef          	jal	4e24 <printf>
-         exit(1);
--    1996:	4505                	li	a0,1
--    1998:	0e8030ef          	jal	4a80 <exit>
-+    196c:	4505                	li	a0,1
-+    196e:	09c030ef          	jal	4a0a <exit>
-   for(i = 0; i < N; i++){
--    199c:	2905                	addiw	s2,s2,1
--    199e:	2a05                	addiw	s4,s4,1
--    19a0:	2985                	addiw	s3,s3,1
--    19a2:	0ff9f993          	zext.b	s3,s3
--    19a6:	47d1                	li	a5,20
--    19a8:	02f90863          	beq	s2,a5,19d8 <createdelete+0x1a8>
-+    1972:	2905                	addw	s2,s2,1
-+    1974:	2a05                	addw	s4,s4,1
-+    1976:	2985                	addw	s3,s3,1 # 3001 <subdir+0x479>
-+    1978:	0ff9f993          	zext.b	s3,s3
-+    197c:	47d1                	li	a5,20
-+    197e:	02f90863          	beq	s2,a5,19ae <createdelete+0x1ac>
-     for(pi = 0; pi < NCHILD; pi++){
--    19ac:	84e2                	mv	s1,s8
--    19ae:	b77d                	j	195c <createdelete+0x12c>
-+    1982:	84e2                	mv	s1,s8
-+    1984:	b76d                	j	192e <createdelete+0x12c>
-   for(i = 0; i < N; i++){
--    19b0:	2905                	addiw	s2,s2,1
--    19b2:	0ff97913          	zext.b	s2,s2
--    19b6:	03490c63          	beq	s2,s4,19ee <createdelete+0x1be>
-+    1986:	2905                	addw	s2,s2,1
-+    1988:	0ff97913          	zext.b	s2,s2
-+    198c:	03490a63          	beq	s2,s4,19c0 <createdelete+0x1be>
-   name[0] = name[1] = name[2] = 0;
--    19ba:	84d6                	mv	s1,s5
-+    1990:	84d6                	mv	s1,s5
-       name[0] = 'p' + pi;
--    19bc:	f8940023          	sb	s1,-128(s0)
-+    1992:	f8940023          	sb	s1,-128(s0)
-       name[1] = '0' + i;
--    19c0:	f92400a3          	sb	s2,-127(s0)
-+    1996:	f92400a3          	sb	s2,-127(s0)
-       unlink(name);
--    19c4:	f8040513          	addi	a0,s0,-128
--    19c8:	108030ef          	jal	4ad0 <unlink>
-+    199a:	f8040513          	add	a0,s0,-128
-+    199e:	0bc030ef          	jal	4a5a <unlink>
-     for(pi = 0; pi < NCHILD; pi++){
--    19cc:	2485                	addiw	s1,s1,1
--    19ce:	0ff4f493          	zext.b	s1,s1
--    19d2:	ff3495e3          	bne	s1,s3,19bc <createdelete+0x18c>
--    19d6:	bfe9                	j	19b0 <createdelete+0x180>
--    19d8:	03000913          	li	s2,48
-+    19a2:	2485                	addw	s1,s1,1
-+    19a4:	0ff4f493          	zext.b	s1,s1
-+    19a8:	ff3495e3          	bne	s1,s3,1992 <createdelete+0x190>
-+    19ac:	bfe9                	j	1986 <createdelete+0x184>
-+    19ae:	03000913          	li	s2,48
-   name[0] = name[1] = name[2] = 0;
--    19dc:	07000a93          	li	s5,112
-+    19b2:	07000a93          	li	s5,112
-     for(pi = 0; pi < NCHILD; pi++){
--    19e0:	07400993          	li	s3,116
-+    19b6:	07400993          	li	s3,116
-   for(i = 0; i < N; i++){
--    19e4:	04400a13          	li	s4,68
--    19e8:	bfc9                	j	19ba <createdelete+0x18a>
--      for(i = 0; i < N; i++){
--    19ea:	2485                	addiw	s1,s1,1
--    19ec:	b5cd                	j	18ce <createdelete+0x9e>
-+    19ba:	04400a13          	li	s4,68
-+    19be:	bfc9                	j	1990 <createdelete+0x18e>
- }
--    19ee:	60aa                	ld	ra,136(sp)
--    19f0:	640a                	ld	s0,128(sp)
--    19f2:	74e6                	ld	s1,120(sp)
--    19f4:	7946                	ld	s2,112(sp)
--    19f6:	79a6                	ld	s3,104(sp)
--    19f8:	7a06                	ld	s4,96(sp)
--    19fa:	6ae6                	ld	s5,88(sp)
--    19fc:	6b46                	ld	s6,80(sp)
--    19fe:	6ba6                	ld	s7,72(sp)
--    1a00:	6c06                	ld	s8,64(sp)
--    1a02:	7ce2                	ld	s9,56(sp)
--    1a04:	6149                	addi	sp,sp,144
--    1a06:	8082                	ret
--
--0000000000001a08 <linkunlink>:
-+    19c0:	60aa                	ld	ra,136(sp)
-+    19c2:	640a                	ld	s0,128(sp)
-+    19c4:	74e6                	ld	s1,120(sp)
-+    19c6:	7946                	ld	s2,112(sp)
-+    19c8:	79a6                	ld	s3,104(sp)
-+    19ca:	7a06                	ld	s4,96(sp)
-+    19cc:	6ae6                	ld	s5,88(sp)
-+    19ce:	6b46                	ld	s6,80(sp)
-+    19d0:	6ba6                	ld	s7,72(sp)
-+    19d2:	6c06                	ld	s8,64(sp)
-+    19d4:	7ce2                	ld	s9,56(sp)
-+    19d6:	6149                	add	sp,sp,144
-+    19d8:	8082                	ret
-+
-+00000000000019da <linkunlink>:
- {
--    1a08:	711d                	addi	sp,sp,-96
--    1a0a:	ec86                	sd	ra,88(sp)
--    1a0c:	e8a2                	sd	s0,80(sp)
--    1a0e:	e4a6                	sd	s1,72(sp)
--    1a10:	e0ca                	sd	s2,64(sp)
--    1a12:	fc4e                	sd	s3,56(sp)
--    1a14:	f852                	sd	s4,48(sp)
--    1a16:	f456                	sd	s5,40(sp)
--    1a18:	f05a                	sd	s6,32(sp)
--    1a1a:	ec5e                	sd	s7,24(sp)
--    1a1c:	e862                	sd	s8,16(sp)
--    1a1e:	e466                	sd	s9,8(sp)
--    1a20:	1080                	addi	s0,sp,96
--    1a22:	84aa                	mv	s1,a0
-+    19da:	711d                	add	sp,sp,-96
-+    19dc:	ec86                	sd	ra,88(sp)
-+    19de:	e8a2                	sd	s0,80(sp)
-+    19e0:	e4a6                	sd	s1,72(sp)
-+    19e2:	e0ca                	sd	s2,64(sp)
-+    19e4:	fc4e                	sd	s3,56(sp)
-+    19e6:	f852                	sd	s4,48(sp)
-+    19e8:	f456                	sd	s5,40(sp)
-+    19ea:	f05a                	sd	s6,32(sp)
-+    19ec:	ec5e                	sd	s7,24(sp)
-+    19ee:	e862                	sd	s8,16(sp)
-+    19f0:	e466                	sd	s9,8(sp)
-+    19f2:	1080                	add	s0,sp,96
-+    19f4:	84aa                	mv	s1,a0
-   unlink("x");
--    1a24:	00003517          	auipc	a0,0x3
--    1a28:	6d450513          	addi	a0,a0,1748 # 50f8 <malloc+0x1ac>
--    1a2c:	0a4030ef          	jal	4ad0 <unlink>
-+    19f6:	00003517          	auipc	a0,0x3
-+    19fa:	67250513          	add	a0,a0,1650 # 5068 <malloc+0x190>
-+    19fe:	05c030ef          	jal	4a5a <unlink>
-   pid = fork();
--    1a30:	048030ef          	jal	4a78 <fork>
-+    1a02:	000030ef          	jal	4a02 <fork>
-   if(pid < 0){
--    1a34:	02054b63          	bltz	a0,1a6a <linkunlink+0x62>
--    1a38:	8caa                	mv	s9,a0
-+    1a06:	02054b63          	bltz	a0,1a3c <linkunlink+0x62>
-+    1a0a:	8c2a                	mv	s8,a0
-   unsigned int x = (pid ? 1 : 97);
--    1a3a:	06100913          	li	s2,97
--    1a3e:	c111                	beqz	a0,1a42 <linkunlink+0x3a>
--    1a40:	4905                	li	s2,1
--    1a42:	06400493          	li	s1,100
-+    1a0c:	06100c93          	li	s9,97
-+    1a10:	c111                	beqz	a0,1a14 <linkunlink+0x3a>
-+    1a12:	4c85                	li	s9,1
-+    1a14:	06400493          	li	s1,100
-     x = x * 1103515245 + 12345;
--    1a46:	41c65a37          	lui	s4,0x41c65
--    1a4a:	e6da0a1b          	addiw	s4,s4,-403 # 41c64e6d <base+0x41c551f5>
--    1a4e:	698d                	lui	s3,0x3
--    1a50:	0399899b          	addiw	s3,s3,57 # 3039 <subdir+0x45d>
-+    1a18:	41c659b7          	lui	s3,0x41c65
-+    1a1c:	e6d9899b          	addw	s3,s3,-403 # 41c64e6d <base+0x41c561f5>
-+    1a20:	690d                	lui	s2,0x3
-+    1a22:	0399091b          	addw	s2,s2,57 # 3039 <subdir+0x4b1>
-     if((x % 3) == 0){
--    1a54:	4a8d                	li	s5,3
-+    1a26:	4a0d                	li	s4,3
-     } else if((x % 3) == 1){
--    1a56:	4b85                	li	s7,1
-+    1a28:	4b05                	li	s6,1
-       unlink("x");
--    1a58:	00003b17          	auipc	s6,0x3
--    1a5c:	6a0b0b13          	addi	s6,s6,1696 # 50f8 <malloc+0x1ac>
-+    1a2a:	00003a97          	auipc	s5,0x3
-+    1a2e:	63ea8a93          	add	s5,s5,1598 # 5068 <malloc+0x190>
-       link("cat", "x");
--    1a60:	00004c17          	auipc	s8,0x4
--    1a64:	110c0c13          	addi	s8,s8,272 # 5b70 <malloc+0xc24>
--    1a68:	a025                	j	1a90 <linkunlink+0x88>
-+    1a32:	00004b97          	auipc	s7,0x4
-+    1a36:	0aeb8b93          	add	s7,s7,174 # 5ae0 <malloc+0xc08>
-+    1a3a:	a025                	j	1a62 <linkunlink+0x88>
-     printf("%s: fork failed\n", s);
--    1a6a:	85a6                	mv	a1,s1
--    1a6c:	00004517          	auipc	a0,0x4
--    1a70:	eac50513          	addi	a0,a0,-340 # 5918 <malloc+0x9cc>
--    1a74:	424030ef          	jal	4e98 <printf>
-+    1a3c:	85a6                	mv	a1,s1
-+    1a3e:	00004517          	auipc	a0,0x4
-+    1a42:	e4a50513          	add	a0,a0,-438 # 5888 <malloc+0x9b0>
-+    1a46:	3de030ef          	jal	4e24 <printf>
-     exit(1);
--    1a78:	4505                	li	a0,1
--    1a7a:	006030ef          	jal	4a80 <exit>
-+    1a4a:	4505                	li	a0,1
-+    1a4c:	7bf020ef          	jal	4a0a <exit>
-       close(open("x", O_RDWR | O_CREATE));
--    1a7e:	20200593          	li	a1,514
--    1a82:	855a                	mv	a0,s6
--    1a84:	03c030ef          	jal	4ac0 <open>
--    1a88:	020030ef          	jal	4aa8 <close>
-+    1a50:	20200593          	li	a1,514
-+    1a54:	8556                	mv	a0,s5
-+    1a56:	7f5020ef          	jal	4a4a <open>
-+    1a5a:	7d9020ef          	jal	4a32 <close>
-   for(i = 0; i < 100; i++){
--    1a8c:	34fd                	addiw	s1,s1,-1
--    1a8e:	c495                	beqz	s1,1aba <linkunlink+0xb2>
-+    1a5e:	34fd                	addw	s1,s1,-1
-+    1a60:	c48d                	beqz	s1,1a8a <linkunlink+0xb0>
-     x = x * 1103515245 + 12345;
--    1a90:	034907bb          	mulw	a5,s2,s4
--    1a94:	013787bb          	addw	a5,a5,s3
--    1a98:	0007891b          	sext.w	s2,a5
-+    1a62:	033c87bb          	mulw	a5,s9,s3
-+    1a66:	012787bb          	addw	a5,a5,s2
-+    1a6a:	00078c9b          	sext.w	s9,a5
-     if((x % 3) == 0){
--    1a9c:	0357f7bb          	remuw	a5,a5,s5
--    1aa0:	2781                	sext.w	a5,a5
--    1aa2:	dff1                	beqz	a5,1a7e <linkunlink+0x76>
-+    1a6e:	0347f7bb          	remuw	a5,a5,s4
-+    1a72:	dff9                	beqz	a5,1a50 <linkunlink+0x76>
-     } else if((x % 3) == 1){
--    1aa4:	01778663          	beq	a5,s7,1ab0 <linkunlink+0xa8>
-+    1a74:	01678663          	beq	a5,s6,1a80 <linkunlink+0xa6>
-       unlink("x");
--    1aa8:	855a                	mv	a0,s6
--    1aaa:	026030ef          	jal	4ad0 <unlink>
--    1aae:	bff9                	j	1a8c <linkunlink+0x84>
-+    1a78:	8556                	mv	a0,s5
-+    1a7a:	7e1020ef          	jal	4a5a <unlink>
-+    1a7e:	b7c5                	j	1a5e <linkunlink+0x84>
-       link("cat", "x");
--    1ab0:	85da                	mv	a1,s6
--    1ab2:	8562                	mv	a0,s8
--    1ab4:	02c030ef          	jal	4ae0 <link>
--    1ab8:	bfd1                	j	1a8c <linkunlink+0x84>
-+    1a80:	85d6                	mv	a1,s5
-+    1a82:	855e                	mv	a0,s7
-+    1a84:	7e7020ef          	jal	4a6a <link>
-+    1a88:	bfd9                	j	1a5e <linkunlink+0x84>
-   if(pid)
--    1aba:	020c8263          	beqz	s9,1ade <linkunlink+0xd6>
-+    1a8a:	020c0263          	beqz	s8,1aae <linkunlink+0xd4>
-     wait(0);
--    1abe:	4501                	li	a0,0
--    1ac0:	7c9020ef          	jal	4a88 <wait>
-+    1a8e:	4501                	li	a0,0
-+    1a90:	783020ef          	jal	4a12 <wait>
- }
--    1ac4:	60e6                	ld	ra,88(sp)
--    1ac6:	6446                	ld	s0,80(sp)
--    1ac8:	64a6                	ld	s1,72(sp)
--    1aca:	6906                	ld	s2,64(sp)
--    1acc:	79e2                	ld	s3,56(sp)
--    1ace:	7a42                	ld	s4,48(sp)
--    1ad0:	7aa2                	ld	s5,40(sp)
--    1ad2:	7b02                	ld	s6,32(sp)
--    1ad4:	6be2                	ld	s7,24(sp)
--    1ad6:	6c42                	ld	s8,16(sp)
--    1ad8:	6ca2                	ld	s9,8(sp)
--    1ada:	6125                	addi	sp,sp,96
--    1adc:	8082                	ret
-+    1a94:	60e6                	ld	ra,88(sp)
-+    1a96:	6446                	ld	s0,80(sp)
-+    1a98:	64a6                	ld	s1,72(sp)
-+    1a9a:	6906                	ld	s2,64(sp)
-+    1a9c:	79e2                	ld	s3,56(sp)
-+    1a9e:	7a42                	ld	s4,48(sp)
-+    1aa0:	7aa2                	ld	s5,40(sp)
-+    1aa2:	7b02                	ld	s6,32(sp)
-+    1aa4:	6be2                	ld	s7,24(sp)
-+    1aa6:	6c42                	ld	s8,16(sp)
-+    1aa8:	6ca2                	ld	s9,8(sp)
-+    1aaa:	6125                	add	sp,sp,96
-+    1aac:	8082                	ret
-     exit(0);
--    1ade:	4501                	li	a0,0
--    1ae0:	7a1020ef          	jal	4a80 <exit>
-+    1aae:	4501                	li	a0,0
-+    1ab0:	75b020ef          	jal	4a0a <exit>
- 
--0000000000001ae4 <forktest>:
-+0000000000001ab4 <forktest>:
- {
--    1ae4:	7179                	addi	sp,sp,-48
--    1ae6:	f406                	sd	ra,40(sp)
--    1ae8:	f022                	sd	s0,32(sp)
--    1aea:	ec26                	sd	s1,24(sp)
--    1aec:	e84a                	sd	s2,16(sp)
--    1aee:	e44e                	sd	s3,8(sp)
--    1af0:	1800                	addi	s0,sp,48
--    1af2:	89aa                	mv	s3,a0
-+    1ab4:	7179                	add	sp,sp,-48
-+    1ab6:	f406                	sd	ra,40(sp)
-+    1ab8:	f022                	sd	s0,32(sp)
-+    1aba:	ec26                	sd	s1,24(sp)
-+    1abc:	e84a                	sd	s2,16(sp)
-+    1abe:	e44e                	sd	s3,8(sp)
-+    1ac0:	1800                	add	s0,sp,48
-+    1ac2:	89aa                	mv	s3,a0
-   for(n=0; n<N; n++){
--    1af4:	4481                	li	s1,0
--    1af6:	3e800913          	li	s2,1000
-+    1ac4:	4481                	li	s1,0
-+    1ac6:	3e800913          	li	s2,1000
-     pid = fork();
--    1afa:	77f020ef          	jal	4a78 <fork>
-+    1aca:	739020ef          	jal	4a02 <fork>
-     if(pid < 0)
--    1afe:	06054063          	bltz	a0,1b5e <forktest+0x7a>
-+    1ace:	02054263          	bltz	a0,1af2 <forktest+0x3e>
-     if(pid == 0)
--    1b02:	cd11                	beqz	a0,1b1e <forktest+0x3a>
-+    1ad2:	cd11                	beqz	a0,1aee <forktest+0x3a>
-   for(n=0; n<N; n++){
--    1b04:	2485                	addiw	s1,s1,1
--    1b06:	ff249ae3          	bne	s1,s2,1afa <forktest+0x16>
-+    1ad4:	2485                	addw	s1,s1,1
-+    1ad6:	ff249ae3          	bne	s1,s2,1aca <forktest+0x16>
-     printf("%s: fork claimed to work 1000 times!\n", s);
--    1b0a:	85ce                	mv	a1,s3
--    1b0c:	00004517          	auipc	a0,0x4
--    1b10:	0b450513          	addi	a0,a0,180 # 5bc0 <malloc+0xc74>
--    1b14:	384030ef          	jal	4e98 <printf>
-+    1ada:	85ce                	mv	a1,s3
-+    1adc:	00004517          	auipc	a0,0x4
-+    1ae0:	02450513          	add	a0,a0,36 # 5b00 <malloc+0xc28>
-+    1ae4:	340030ef          	jal	4e24 <printf>
-     exit(1);
--    1b18:	4505                	li	a0,1
--    1b1a:	767020ef          	jal	4a80 <exit>
-+    1ae8:	4505                	li	a0,1
-+    1aea:	721020ef          	jal	4a0a <exit>
-       exit(0);
--    1b1e:	763020ef          	jal	4a80 <exit>
--    printf("%s: no fork at all!\n", s);
--    1b22:	85ce                	mv	a1,s3
--    1b24:	00004517          	auipc	a0,0x4
--    1b28:	05450513          	addi	a0,a0,84 # 5b78 <malloc+0xc2c>
--    1b2c:	36c030ef          	jal	4e98 <printf>
--    exit(1);
--    1b30:	4505                	li	a0,1
--    1b32:	74f020ef          	jal	4a80 <exit>
--      printf("%s: wait stopped early\n", s);
--    1b36:	85ce                	mv	a1,s3
--    1b38:	00004517          	auipc	a0,0x4
--    1b3c:	05850513          	addi	a0,a0,88 # 5b90 <malloc+0xc44>
--    1b40:	358030ef          	jal	4e98 <printf>
--      exit(1);
--    1b44:	4505                	li	a0,1
--    1b46:	73b020ef          	jal	4a80 <exit>
--    printf("%s: wait got too many\n", s);
--    1b4a:	85ce                	mv	a1,s3
--    1b4c:	00004517          	auipc	a0,0x4
--    1b50:	05c50513          	addi	a0,a0,92 # 5ba8 <malloc+0xc5c>
--    1b54:	344030ef          	jal	4e98 <printf>
--    exit(1);
--    1b58:	4505                	li	a0,1
--    1b5a:	727020ef          	jal	4a80 <exit>
-+    1aee:	71d020ef          	jal	4a0a <exit>
-   if (n == 0) {
--    1b5e:	d0f1                	beqz	s1,1b22 <forktest+0x3e>
-+    1af2:	c89d                	beqz	s1,1b28 <forktest+0x74>
-+  if(n == N){
-+    1af4:	3e800793          	li	a5,1000
-+    1af8:	fef481e3          	beq	s1,a5,1ada <forktest+0x26>
-   for(; n > 0; n--){
--    1b60:	00905963          	blez	s1,1b72 <forktest+0x8e>
-+    1afc:	00905963          	blez	s1,1b0e <forktest+0x5a>
-     if(wait(0) < 0){
--    1b64:	4501                	li	a0,0
--    1b66:	723020ef          	jal	4a88 <wait>
--    1b6a:	fc0546e3          	bltz	a0,1b36 <forktest+0x52>
-+    1b00:	4501                	li	a0,0
-+    1b02:	711020ef          	jal	4a12 <wait>
-+    1b06:	02054b63          	bltz	a0,1b3c <forktest+0x88>
-   for(; n > 0; n--){
--    1b6e:	34fd                	addiw	s1,s1,-1
--    1b70:	f8f5                	bnez	s1,1b64 <forktest+0x80>
-+    1b0a:	34fd                	addw	s1,s1,-1
-+    1b0c:	f8f5                	bnez	s1,1b00 <forktest+0x4c>
-   if(wait(0) != -1){
--    1b72:	4501                	li	a0,0
--    1b74:	715020ef          	jal	4a88 <wait>
--    1b78:	57fd                	li	a5,-1
--    1b7a:	fcf518e3          	bne	a0,a5,1b4a <forktest+0x66>
-+    1b0e:	4501                	li	a0,0
-+    1b10:	703020ef          	jal	4a12 <wait>
-+    1b14:	57fd                	li	a5,-1
-+    1b16:	02f51d63          	bne	a0,a5,1b50 <forktest+0x9c>
- }
--    1b7e:	70a2                	ld	ra,40(sp)
--    1b80:	7402                	ld	s0,32(sp)
--    1b82:	64e2                	ld	s1,24(sp)
--    1b84:	6942                	ld	s2,16(sp)
--    1b86:	69a2                	ld	s3,8(sp)
--    1b88:	6145                	addi	sp,sp,48
--    1b8a:	8082                	ret
--
--0000000000001b8c <kernmem>:
-+    1b1a:	70a2                	ld	ra,40(sp)
-+    1b1c:	7402                	ld	s0,32(sp)
-+    1b1e:	64e2                	ld	s1,24(sp)
-+    1b20:	6942                	ld	s2,16(sp)
-+    1b22:	69a2                	ld	s3,8(sp)
-+    1b24:	6145                	add	sp,sp,48
-+    1b26:	8082                	ret
-+    printf("%s: no fork at all!\n", s);
-+    1b28:	85ce                	mv	a1,s3
-+    1b2a:	00004517          	auipc	a0,0x4
-+    1b2e:	fbe50513          	add	a0,a0,-66 # 5ae8 <malloc+0xc10>
-+    1b32:	2f2030ef          	jal	4e24 <printf>
-+    exit(1);
-+    1b36:	4505                	li	a0,1
-+    1b38:	6d3020ef          	jal	4a0a <exit>
-+      printf("%s: wait stopped early\n", s);
-+    1b3c:	85ce                	mv	a1,s3
-+    1b3e:	00004517          	auipc	a0,0x4
-+    1b42:	fea50513          	add	a0,a0,-22 # 5b28 <malloc+0xc50>
-+    1b46:	2de030ef          	jal	4e24 <printf>
-+      exit(1);
-+    1b4a:	4505                	li	a0,1
-+    1b4c:	6bf020ef          	jal	4a0a <exit>
-+    printf("%s: wait got too many\n", s);
-+    1b50:	85ce                	mv	a1,s3
-+    1b52:	00004517          	auipc	a0,0x4
-+    1b56:	fee50513          	add	a0,a0,-18 # 5b40 <malloc+0xc68>
-+    1b5a:	2ca030ef          	jal	4e24 <printf>
-+    exit(1);
-+    1b5e:	4505                	li	a0,1
-+    1b60:	6ab020ef          	jal	4a0a <exit>
-+
-+0000000000001b64 <kernmem>:
- {
--    1b8c:	715d                	addi	sp,sp,-80
--    1b8e:	e486                	sd	ra,72(sp)
--    1b90:	e0a2                	sd	s0,64(sp)
--    1b92:	fc26                	sd	s1,56(sp)
--    1b94:	f84a                	sd	s2,48(sp)
--    1b96:	f44e                	sd	s3,40(sp)
--    1b98:	f052                	sd	s4,32(sp)
--    1b9a:	ec56                	sd	s5,24(sp)
--    1b9c:	0880                	addi	s0,sp,80
--    1b9e:	8aaa                	mv	s5,a0
-+    1b64:	715d                	add	sp,sp,-80
-+    1b66:	e486                	sd	ra,72(sp)
-+    1b68:	e0a2                	sd	s0,64(sp)
-+    1b6a:	fc26                	sd	s1,56(sp)
-+    1b6c:	f84a                	sd	s2,48(sp)
-+    1b6e:	f44e                	sd	s3,40(sp)
-+    1b70:	f052                	sd	s4,32(sp)
-+    1b72:	ec56                	sd	s5,24(sp)
-+    1b74:	0880                	add	s0,sp,80
-+    1b76:	8a2a                	mv	s4,a0
-   for(a = (char*)(KERNBASE); a < (char*) (KERNBASE+2000000); a += 50000){
--    1ba0:	4485                	li	s1,1
--    1ba2:	04fe                	slli	s1,s1,0x1f
-+    1b78:	4485                	li	s1,1
-+    1b7a:	04fe                	sll	s1,s1,0x1f
-     if(xstatus != -1)  /* did kernel kill child? */
--    1ba4:	5a7d                	li	s4,-1
-+    1b7c:	5afd                	li	s5,-1
-   for(a = (char*)(KERNBASE); a < (char*) (KERNBASE+2000000); a += 50000){
--    1ba6:	69b1                	lui	s3,0xc
--    1ba8:	35098993          	addi	s3,s3,848 # c350 <uninit+0x1de8>
--    1bac:	1003d937          	lui	s2,0x1003d
--    1bb0:	090e                	slli	s2,s2,0x3
--    1bb2:	48090913          	addi	s2,s2,1152 # 1003d480 <base+0x1002d808>
-+    1b7e:	69b1                	lui	s3,0xc
-+    1b80:	35098993          	add	s3,s3,848 # c350 <buf+0x6d8>
-+    1b84:	1003d937          	lui	s2,0x1003d
-+    1b88:	090e                	sll	s2,s2,0x3
-+    1b8a:	48090913          	add	s2,s2,1152 # 1003d480 <base+0x1002e808>
-     pid = fork();
--    1bb6:	6c3020ef          	jal	4a78 <fork>
-+    1b8e:	675020ef          	jal	4a02 <fork>
-     if(pid < 0){
--    1bba:	02054763          	bltz	a0,1be8 <kernmem+0x5c>
-+    1b92:	02054763          	bltz	a0,1bc0 <kernmem+0x5c>
-     if(pid == 0){
--    1bbe:	cd1d                	beqz	a0,1bfc <kernmem+0x70>
-+    1b96:	cd1d                	beqz	a0,1bd4 <kernmem+0x70>
-     wait(&xstatus);
--    1bc0:	fbc40513          	addi	a0,s0,-68
--    1bc4:	6c5020ef          	jal	4a88 <wait>
-+    1b98:	fbc40513          	add	a0,s0,-68
-+    1b9c:	677020ef          	jal	4a12 <wait>
-     if(xstatus != -1)  /* did kernel kill child? */
--    1bc8:	fbc42783          	lw	a5,-68(s0)
--    1bcc:	05479563          	bne	a5,s4,1c16 <kernmem+0x8a>
-+    1ba0:	fbc42783          	lw	a5,-68(s0)
-+    1ba4:	05579563          	bne	a5,s5,1bee <kernmem+0x8a>
-   for(a = (char*)(KERNBASE); a < (char*) (KERNBASE+2000000); a += 50000){
--    1bd0:	94ce                	add	s1,s1,s3
--    1bd2:	ff2492e3          	bne	s1,s2,1bb6 <kernmem+0x2a>
-+    1ba8:	94ce                	add	s1,s1,s3
-+    1baa:	ff2492e3          	bne	s1,s2,1b8e <kernmem+0x2a>
- }
--    1bd6:	60a6                	ld	ra,72(sp)
--    1bd8:	6406                	ld	s0,64(sp)
--    1bda:	74e2                	ld	s1,56(sp)
--    1bdc:	7942                	ld	s2,48(sp)
--    1bde:	79a2                	ld	s3,40(sp)
--    1be0:	7a02                	ld	s4,32(sp)
--    1be2:	6ae2                	ld	s5,24(sp)
--    1be4:	6161                	addi	sp,sp,80
--    1be6:	8082                	ret
-+    1bae:	60a6                	ld	ra,72(sp)
-+    1bb0:	6406                	ld	s0,64(sp)
-+    1bb2:	74e2                	ld	s1,56(sp)
-+    1bb4:	7942                	ld	s2,48(sp)
-+    1bb6:	79a2                	ld	s3,40(sp)
-+    1bb8:	7a02                	ld	s4,32(sp)
-+    1bba:	6ae2                	ld	s5,24(sp)
-+    1bbc:	6161                	add	sp,sp,80
-+    1bbe:	8082                	ret
-       printf("%s: fork failed\n", s);
--    1be8:	85d6                	mv	a1,s5
--    1bea:	00004517          	auipc	a0,0x4
--    1bee:	d2e50513          	addi	a0,a0,-722 # 5918 <malloc+0x9cc>
--    1bf2:	2a6030ef          	jal	4e98 <printf>
-+    1bc0:	85d2                	mv	a1,s4
-+    1bc2:	00004517          	auipc	a0,0x4
-+    1bc6:	cc650513          	add	a0,a0,-826 # 5888 <malloc+0x9b0>
-+    1bca:	25a030ef          	jal	4e24 <printf>
-       exit(1);
--    1bf6:	4505                	li	a0,1
--    1bf8:	689020ef          	jal	4a80 <exit>
-+    1bce:	4505                	li	a0,1
-+    1bd0:	63b020ef          	jal	4a0a <exit>
-       printf("%s: oops could read %p = %x\n", s, a, *a);
--    1bfc:	0004c683          	lbu	a3,0(s1)
--    1c00:	8626                	mv	a2,s1
--    1c02:	85d6                	mv	a1,s5
--    1c04:	00004517          	auipc	a0,0x4
--    1c08:	fe450513          	addi	a0,a0,-28 # 5be8 <malloc+0xc9c>
--    1c0c:	28c030ef          	jal	4e98 <printf>
-+    1bd4:	0004c683          	lbu	a3,0(s1)
-+    1bd8:	8626                	mv	a2,s1
-+    1bda:	85d2                	mv	a1,s4
-+    1bdc:	00004517          	auipc	a0,0x4
-+    1be0:	f7c50513          	add	a0,a0,-132 # 5b58 <malloc+0xc80>
-+    1be4:	240030ef          	jal	4e24 <printf>
-       exit(1);
--    1c10:	4505                	li	a0,1
--    1c12:	66f020ef          	jal	4a80 <exit>
-+    1be8:	4505                	li	a0,1
-+    1bea:	621020ef          	jal	4a0a <exit>
-       exit(1);
--    1c16:	4505                	li	a0,1
--    1c18:	669020ef          	jal	4a80 <exit>
-+    1bee:	4505                	li	a0,1
-+    1bf0:	61b020ef          	jal	4a0a <exit>
- 
--0000000000001c1c <MAXVAplus>:
-+0000000000001bf4 <MAXVAplus>:
- {
--    1c1c:	7179                	addi	sp,sp,-48
--    1c1e:	f406                	sd	ra,40(sp)
--    1c20:	f022                	sd	s0,32(sp)
--    1c22:	1800                	addi	s0,sp,48
-+    1bf4:	7179                	add	sp,sp,-48
-+    1bf6:	f406                	sd	ra,40(sp)
-+    1bf8:	f022                	sd	s0,32(sp)
-+    1bfa:	ec26                	sd	s1,24(sp)
-+    1bfc:	e84a                	sd	s2,16(sp)
-+    1bfe:	1800                	add	s0,sp,48
-   volatile uint64 a = MAXVA;
--    1c24:	4785                	li	a5,1
--    1c26:	179a                	slli	a5,a5,0x26
--    1c28:	fcf43c23          	sd	a5,-40(s0)
-+    1c00:	4785                	li	a5,1
-+    1c02:	179a                	sll	a5,a5,0x26
-+    1c04:	fcf43c23          	sd	a5,-40(s0)
-   for( ; a != 0; a <<= 1){
--    1c2c:	fd843783          	ld	a5,-40(s0)
--    1c30:	cf85                	beqz	a5,1c68 <MAXVAplus+0x4c>
--    1c32:	ec26                	sd	s1,24(sp)
--    1c34:	e84a                	sd	s2,16(sp)
--    1c36:	892a                	mv	s2,a0
-+    1c08:	fd843783          	ld	a5,-40(s0)
-+    1c0c:	cb85                	beqz	a5,1c3c <MAXVAplus+0x48>
-+    1c0e:	892a                	mv	s2,a0
-     if(xstatus != -1)  /* did kernel kill child? */
--    1c38:	54fd                	li	s1,-1
-+    1c10:	54fd                	li	s1,-1
-     pid = fork();
--    1c3a:	63f020ef          	jal	4a78 <fork>
-+    1c12:	5f1020ef          	jal	4a02 <fork>
-     if(pid < 0){
--    1c3e:	02054963          	bltz	a0,1c70 <MAXVAplus+0x54>
-+    1c16:	02054963          	bltz	a0,1c48 <MAXVAplus+0x54>
-     if(pid == 0){
--    1c42:	c129                	beqz	a0,1c84 <MAXVAplus+0x68>
-+    1c1a:	c129                	beqz	a0,1c5c <MAXVAplus+0x68>
-     wait(&xstatus);
--    1c44:	fd440513          	addi	a0,s0,-44
--    1c48:	641020ef          	jal	4a88 <wait>
-+    1c1c:	fd440513          	add	a0,s0,-44
-+    1c20:	5f3020ef          	jal	4a12 <wait>
-     if(xstatus != -1)  /* did kernel kill child? */
--    1c4c:	fd442783          	lw	a5,-44(s0)
--    1c50:	04979c63          	bne	a5,s1,1ca8 <MAXVAplus+0x8c>
-+    1c24:	fd442783          	lw	a5,-44(s0)
-+    1c28:	04979c63          	bne	a5,s1,1c80 <MAXVAplus+0x8c>
-   for( ; a != 0; a <<= 1){
--    1c54:	fd843783          	ld	a5,-40(s0)
--    1c58:	0786                	slli	a5,a5,0x1
--    1c5a:	fcf43c23          	sd	a5,-40(s0)
--    1c5e:	fd843783          	ld	a5,-40(s0)
--    1c62:	ffe1                	bnez	a5,1c3a <MAXVAplus+0x1e>
--    1c64:	64e2                	ld	s1,24(sp)
--    1c66:	6942                	ld	s2,16(sp)
-+    1c2c:	fd843783          	ld	a5,-40(s0)
-+    1c30:	0786                	sll	a5,a5,0x1
-+    1c32:	fcf43c23          	sd	a5,-40(s0)
-+    1c36:	fd843783          	ld	a5,-40(s0)
-+    1c3a:	ffe1                	bnez	a5,1c12 <MAXVAplus+0x1e>
- }
--    1c68:	70a2                	ld	ra,40(sp)
--    1c6a:	7402                	ld	s0,32(sp)
--    1c6c:	6145                	addi	sp,sp,48
--    1c6e:	8082                	ret
-+    1c3c:	70a2                	ld	ra,40(sp)
-+    1c3e:	7402                	ld	s0,32(sp)
-+    1c40:	64e2                	ld	s1,24(sp)
-+    1c42:	6942                	ld	s2,16(sp)
-+    1c44:	6145                	add	sp,sp,48
-+    1c46:	8082                	ret
-       printf("%s: fork failed\n", s);
--    1c70:	85ca                	mv	a1,s2
--    1c72:	00004517          	auipc	a0,0x4
--    1c76:	ca650513          	addi	a0,a0,-858 # 5918 <malloc+0x9cc>
--    1c7a:	21e030ef          	jal	4e98 <printf>
-+    1c48:	85ca                	mv	a1,s2
-+    1c4a:	00004517          	auipc	a0,0x4
-+    1c4e:	c3e50513          	add	a0,a0,-962 # 5888 <malloc+0x9b0>
-+    1c52:	1d2030ef          	jal	4e24 <printf>
-       exit(1);
--    1c7e:	4505                	li	a0,1
--    1c80:	601020ef          	jal	4a80 <exit>
-+    1c56:	4505                	li	a0,1
-+    1c58:	5b3020ef          	jal	4a0a <exit>
-       *(char*)a = 99;
--    1c84:	fd843783          	ld	a5,-40(s0)
--    1c88:	06300713          	li	a4,99
--    1c8c:	00e78023          	sb	a4,0(a5)
-+    1c5c:	fd843783          	ld	a5,-40(s0)
-+    1c60:	06300713          	li	a4,99
-+    1c64:	00e78023          	sb	a4,0(a5)
-       printf("%s: oops wrote %p\n", s, (void*)a);
--    1c90:	fd843603          	ld	a2,-40(s0)
--    1c94:	85ca                	mv	a1,s2
--    1c96:	00004517          	auipc	a0,0x4
--    1c9a:	f7250513          	addi	a0,a0,-142 # 5c08 <malloc+0xcbc>
--    1c9e:	1fa030ef          	jal	4e98 <printf>
-+    1c68:	fd843603          	ld	a2,-40(s0)
-+    1c6c:	85ca                	mv	a1,s2
-+    1c6e:	00004517          	auipc	a0,0x4
-+    1c72:	f0a50513          	add	a0,a0,-246 # 5b78 <malloc+0xca0>
-+    1c76:	1ae030ef          	jal	4e24 <printf>
-       exit(1);
--    1ca2:	4505                	li	a0,1
--    1ca4:	5dd020ef          	jal	4a80 <exit>
-+    1c7a:	4505                	li	a0,1
-+    1c7c:	58f020ef          	jal	4a0a <exit>
-       exit(1);
--    1ca8:	4505                	li	a0,1
--    1caa:	5d7020ef          	jal	4a80 <exit>
-+    1c80:	4505                	li	a0,1
-+    1c82:	589020ef          	jal	4a0a <exit>
- 
--0000000000001cae <stacktest>:
-+0000000000001c86 <stacktest>:
- {
--    1cae:	7179                	addi	sp,sp,-48
--    1cb0:	f406                	sd	ra,40(sp)
--    1cb2:	f022                	sd	s0,32(sp)
--    1cb4:	ec26                	sd	s1,24(sp)
--    1cb6:	1800                	addi	s0,sp,48
--    1cb8:	84aa                	mv	s1,a0
-+    1c86:	7179                	add	sp,sp,-48
-+    1c88:	f406                	sd	ra,40(sp)
-+    1c8a:	f022                	sd	s0,32(sp)
-+    1c8c:	ec26                	sd	s1,24(sp)
-+    1c8e:	1800                	add	s0,sp,48
-+    1c90:	84aa                	mv	s1,a0
-   pid = fork();
--    1cba:	5bf020ef          	jal	4a78 <fork>
-+    1c92:	571020ef          	jal	4a02 <fork>
-   if(pid == 0) {
--    1cbe:	cd11                	beqz	a0,1cda <stacktest+0x2c>
-+    1c96:	cd11                	beqz	a0,1cb2 <stacktest+0x2c>
-   } else if(pid < 0){
--    1cc0:	02054c63          	bltz	a0,1cf8 <stacktest+0x4a>
-+    1c98:	02054c63          	bltz	a0,1cd0 <stacktest+0x4a>
-   wait(&xstatus);
--    1cc4:	fdc40513          	addi	a0,s0,-36
--    1cc8:	5c1020ef          	jal	4a88 <wait>
-+    1c9c:	fdc40513          	add	a0,s0,-36
-+    1ca0:	573020ef          	jal	4a12 <wait>
-   if(xstatus == -1)  /* kernel killed child? */
--    1ccc:	fdc42503          	lw	a0,-36(s0)
--    1cd0:	57fd                	li	a5,-1
--    1cd2:	02f50d63          	beq	a0,a5,1d0c <stacktest+0x5e>
-+    1ca4:	fdc42503          	lw	a0,-36(s0)
-+    1ca8:	57fd                	li	a5,-1
-+    1caa:	02f50d63          	beq	a0,a5,1ce4 <stacktest+0x5e>
-     exit(xstatus);
--    1cd6:	5ab020ef          	jal	4a80 <exit>
-+    1cae:	55d020ef          	jal	4a0a <exit>
- 
- static inline uint64
- r_sp()
- {
-   uint64 x;
-   asm volatile("mv %0, sp" : "=r" (x) );
--    1cda:	870a                	mv	a4,sp
-+    1cb2:	870a                	mv	a4,sp
-     printf("%s: stacktest: read below stack %d\n", s, *sp);
--    1cdc:	77fd                	lui	a5,0xfffff
--    1cde:	97ba                	add	a5,a5,a4
--    1ce0:	0007c603          	lbu	a2,0(a5) # fffffffffffff000 <base+0xfffffffffffef388>
--    1ce4:	85a6                	mv	a1,s1
--    1ce6:	00004517          	auipc	a0,0x4
--    1cea:	f3a50513          	addi	a0,a0,-198 # 5c20 <malloc+0xcd4>
--    1cee:	1aa030ef          	jal	4e98 <printf>
--    exit(1);
--    1cf2:	4505                	li	a0,1
--    1cf4:	58d020ef          	jal	4a80 <exit>
-+    1cb4:	77fd                	lui	a5,0xfffff
-+    1cb6:	97ba                	add	a5,a5,a4
-+    1cb8:	0007c603          	lbu	a2,0(a5) # fffffffffffff000 <base+0xffffffffffff0388>
-+    1cbc:	85a6                	mv	a1,s1
-+    1cbe:	00004517          	auipc	a0,0x4
-+    1cc2:	ed250513          	add	a0,a0,-302 # 5b90 <malloc+0xcb8>
-+    1cc6:	15e030ef          	jal	4e24 <printf>
-+    exit(1);
-+    1cca:	4505                	li	a0,1
-+    1ccc:	53f020ef          	jal	4a0a <exit>
-     printf("%s: fork failed\n", s);
--    1cf8:	85a6                	mv	a1,s1
--    1cfa:	00004517          	auipc	a0,0x4
--    1cfe:	c1e50513          	addi	a0,a0,-994 # 5918 <malloc+0x9cc>
--    1d02:	196030ef          	jal	4e98 <printf>
-+    1cd0:	85a6                	mv	a1,s1
-+    1cd2:	00004517          	auipc	a0,0x4
-+    1cd6:	bb650513          	add	a0,a0,-1098 # 5888 <malloc+0x9b0>
-+    1cda:	14a030ef          	jal	4e24 <printf>
-     exit(1);
--    1d06:	4505                	li	a0,1
--    1d08:	579020ef          	jal	4a80 <exit>
-+    1cde:	4505                	li	a0,1
-+    1ce0:	52b020ef          	jal	4a0a <exit>
-     exit(0);
--    1d0c:	4501                	li	a0,0
--    1d0e:	573020ef          	jal	4a80 <exit>
-+    1ce4:	4501                	li	a0,0
-+    1ce6:	525020ef          	jal	4a0a <exit>
- 
--0000000000001d12 <nowrite>:
-+0000000000001cea <nowrite>:
- {
--    1d12:	7159                	addi	sp,sp,-112
--    1d14:	f486                	sd	ra,104(sp)
--    1d16:	f0a2                	sd	s0,96(sp)
--    1d18:	eca6                	sd	s1,88(sp)
--    1d1a:	e8ca                	sd	s2,80(sp)
--    1d1c:	e4ce                	sd	s3,72(sp)
--    1d1e:	1880                	addi	s0,sp,112
--    1d20:	89aa                	mv	s3,a0
-+    1cea:	7159                	add	sp,sp,-112
-+    1cec:	f486                	sd	ra,104(sp)
-+    1cee:	f0a2                	sd	s0,96(sp)
-+    1cf0:	eca6                	sd	s1,88(sp)
-+    1cf2:	e8ca                	sd	s2,80(sp)
-+    1cf4:	e4ce                	sd	s3,72(sp)
-+    1cf6:	1880                	add	s0,sp,112
-+    1cf8:	89aa                	mv	s3,a0
-   uint64 addrs[] = { 0, 0x80000000LL, 0x3fffffe000, 0x3ffffff000, 0x4000000000,
--    1d22:	00005797          	auipc	a5,0x5
--    1d26:	6c678793          	addi	a5,a5,1734 # 73e8 <malloc+0x249c>
--    1d2a:	7788                	ld	a0,40(a5)
--    1d2c:	7b8c                	ld	a1,48(a5)
--    1d2e:	7f90                	ld	a2,56(a5)
--    1d30:	63b4                	ld	a3,64(a5)
--    1d32:	67b8                	ld	a4,72(a5)
--    1d34:	6bbc                	ld	a5,80(a5)
--    1d36:	f8a43c23          	sd	a0,-104(s0)
--    1d3a:	fab43023          	sd	a1,-96(s0)
--    1d3e:	fac43423          	sd	a2,-88(s0)
--    1d42:	fad43823          	sd	a3,-80(s0)
--    1d46:	fae43c23          	sd	a4,-72(s0)
--    1d4a:	fcf43023          	sd	a5,-64(s0)
-+    1cfa:	00005797          	auipc	a5,0x5
-+    1cfe:	65678793          	add	a5,a5,1622 # 7350 <malloc+0x2478>
-+    1d02:	7788                	ld	a0,40(a5)
-+    1d04:	7b8c                	ld	a1,48(a5)
-+    1d06:	7f90                	ld	a2,56(a5)
-+    1d08:	63b4                	ld	a3,64(a5)
-+    1d0a:	67b8                	ld	a4,72(a5)
-+    1d0c:	6bbc                	ld	a5,80(a5)
-+    1d0e:	f8a43c23          	sd	a0,-104(s0)
-+    1d12:	fab43023          	sd	a1,-96(s0)
-+    1d16:	fac43423          	sd	a2,-88(s0)
-+    1d1a:	fad43823          	sd	a3,-80(s0)
-+    1d1e:	fae43c23          	sd	a4,-72(s0)
-+    1d22:	fcf43023          	sd	a5,-64(s0)
-   for(int ai = 0; ai < sizeof(addrs)/sizeof(addrs[0]); ai++){
--    1d4e:	4481                	li	s1,0
--    1d50:	4919                	li	s2,6
-+    1d26:	4481                	li	s1,0
-+    1d28:	4919                	li	s2,6
-     pid = fork();
--    1d52:	527020ef          	jal	4a78 <fork>
-+    1d2a:	4d9020ef          	jal	4a02 <fork>
-     if(pid == 0) {
--    1d56:	c105                	beqz	a0,1d76 <nowrite+0x64>
-+    1d2e:	c105                	beqz	a0,1d4e <nowrite+0x64>
-     } else if(pid < 0){
--    1d58:	04054263          	bltz	a0,1d9c <nowrite+0x8a>
-+    1d30:	04054263          	bltz	a0,1d74 <nowrite+0x8a>
-     wait(&xstatus);
--    1d5c:	fcc40513          	addi	a0,s0,-52
--    1d60:	529020ef          	jal	4a88 <wait>
-+    1d34:	fcc40513          	add	a0,s0,-52
-+    1d38:	4db020ef          	jal	4a12 <wait>
-     if(xstatus == 0){
--    1d64:	fcc42783          	lw	a5,-52(s0)
--    1d68:	c7a1                	beqz	a5,1db0 <nowrite+0x9e>
-+    1d3c:	fcc42783          	lw	a5,-52(s0)
-+    1d40:	c7a1                	beqz	a5,1d88 <nowrite+0x9e>
-   for(int ai = 0; ai < sizeof(addrs)/sizeof(addrs[0]); ai++){
--    1d6a:	2485                	addiw	s1,s1,1
--    1d6c:	ff2493e3          	bne	s1,s2,1d52 <nowrite+0x40>
-+    1d42:	2485                	addw	s1,s1,1
-+    1d44:	ff2493e3          	bne	s1,s2,1d2a <nowrite+0x40>
-   exit(0);
--    1d70:	4501                	li	a0,0
--    1d72:	50f020ef          	jal	4a80 <exit>
-+    1d48:	4501                	li	a0,0
-+    1d4a:	4c1020ef          	jal	4a0a <exit>
-       volatile int *addr = (int *) addrs[ai];
--    1d76:	048e                	slli	s1,s1,0x3
--    1d78:	fd048793          	addi	a5,s1,-48
--    1d7c:	008784b3          	add	s1,a5,s0
--    1d80:	fc84b603          	ld	a2,-56(s1)
-+    1d4e:	048e                	sll	s1,s1,0x3
-+    1d50:	fd048793          	add	a5,s1,-48
-+    1d54:	008784b3          	add	s1,a5,s0
-+    1d58:	fc84b603          	ld	a2,-56(s1)
-       *addr = 10;
--    1d84:	47a9                	li	a5,10
--    1d86:	c21c                	sw	a5,0(a2)
-+    1d5c:	47a9                	li	a5,10
-+    1d5e:	c21c                	sw	a5,0(a2)
-       printf("%s: write to %p did not fail!\n", s, addr);
--    1d88:	85ce                	mv	a1,s3
--    1d8a:	00004517          	auipc	a0,0x4
--    1d8e:	ebe50513          	addi	a0,a0,-322 # 5c48 <malloc+0xcfc>
--    1d92:	106030ef          	jal	4e98 <printf>
-+    1d60:	85ce                	mv	a1,s3
-+    1d62:	00004517          	auipc	a0,0x4
-+    1d66:	e5650513          	add	a0,a0,-426 # 5bb8 <malloc+0xce0>
-+    1d6a:	0ba030ef          	jal	4e24 <printf>
-       exit(0);
--    1d96:	4501                	li	a0,0
--    1d98:	4e9020ef          	jal	4a80 <exit>
-+    1d6e:	4501                	li	a0,0
-+    1d70:	49b020ef          	jal	4a0a <exit>
-       printf("%s: fork failed\n", s);
--    1d9c:	85ce                	mv	a1,s3
--    1d9e:	00004517          	auipc	a0,0x4
--    1da2:	b7a50513          	addi	a0,a0,-1158 # 5918 <malloc+0x9cc>
--    1da6:	0f2030ef          	jal	4e98 <printf>
-+    1d74:	85ce                	mv	a1,s3
-+    1d76:	00004517          	auipc	a0,0x4
-+    1d7a:	b1250513          	add	a0,a0,-1262 # 5888 <malloc+0x9b0>
-+    1d7e:	0a6030ef          	jal	4e24 <printf>
-       exit(1);
--    1daa:	4505                	li	a0,1
--    1dac:	4d5020ef          	jal	4a80 <exit>
-+    1d82:	4505                	li	a0,1
-+    1d84:	487020ef          	jal	4a0a <exit>
-       exit(1);
--    1db0:	4505                	li	a0,1
--    1db2:	4cf020ef          	jal	4a80 <exit>
-+    1d88:	4505                	li	a0,1
-+    1d8a:	481020ef          	jal	4a0a <exit>
- 
--0000000000001db6 <manywrites>:
-+0000000000001d8e <manywrites>:
- {
--    1db6:	711d                	addi	sp,sp,-96
--    1db8:	ec86                	sd	ra,88(sp)
--    1dba:	e8a2                	sd	s0,80(sp)
--    1dbc:	e4a6                	sd	s1,72(sp)
--    1dbe:	e0ca                	sd	s2,64(sp)
--    1dc0:	fc4e                	sd	s3,56(sp)
--    1dc2:	f456                	sd	s5,40(sp)
--    1dc4:	1080                	addi	s0,sp,96
--    1dc6:	8aaa                	mv	s5,a0
-+    1d8e:	711d                	add	sp,sp,-96
-+    1d90:	ec86                	sd	ra,88(sp)
-+    1d92:	e8a2                	sd	s0,80(sp)
-+    1d94:	e4a6                	sd	s1,72(sp)
-+    1d96:	e0ca                	sd	s2,64(sp)
-+    1d98:	fc4e                	sd	s3,56(sp)
-+    1d9a:	f852                	sd	s4,48(sp)
-+    1d9c:	f456                	sd	s5,40(sp)
-+    1d9e:	f05a                	sd	s6,32(sp)
-+    1da0:	ec5e                	sd	s7,24(sp)
-+    1da2:	1080                	add	s0,sp,96
-+    1da4:	8aaa                	mv	s5,a0
-   for(int ci = 0; ci < nchildren; ci++){
--    1dc8:	4981                	li	s3,0
--    1dca:	4911                	li	s2,4
-+    1da6:	4981                	li	s3,0
-+    1da8:	4911                	li	s2,4
-     int pid = fork();
--    1dcc:	4ad020ef          	jal	4a78 <fork>
--    1dd0:	84aa                	mv	s1,a0
-+    1daa:	459020ef          	jal	4a02 <fork>
-+    1dae:	84aa                	mv	s1,a0
-     if(pid < 0){
--    1dd2:	02054963          	bltz	a0,1e04 <manywrites+0x4e>
-+    1db0:	02054563          	bltz	a0,1dda <manywrites+0x4c>
-     if(pid == 0){
--    1dd6:	c139                	beqz	a0,1e1c <manywrites+0x66>
-+    1db4:	cd05                	beqz	a0,1dec <manywrites+0x5e>
-   for(int ci = 0; ci < nchildren; ci++){
--    1dd8:	2985                	addiw	s3,s3,1
--    1dda:	ff2999e3          	bne	s3,s2,1dcc <manywrites+0x16>
--    1dde:	f852                	sd	s4,48(sp)
--    1de0:	f05a                	sd	s6,32(sp)
--    1de2:	ec5e                	sd	s7,24(sp)
--    1de4:	4491                	li	s1,4
-+    1db6:	2985                	addw	s3,s3,1
-+    1db8:	ff2999e3          	bne	s3,s2,1daa <manywrites+0x1c>
-+    1dbc:	4491                	li	s1,4
-     int st = 0;
--    1de6:	fa042423          	sw	zero,-88(s0)
-+    1dbe:	fa042423          	sw	zero,-88(s0)
-     wait(&st);
--    1dea:	fa840513          	addi	a0,s0,-88
--    1dee:	49b020ef          	jal	4a88 <wait>
-+    1dc2:	fa840513          	add	a0,s0,-88
-+    1dc6:	44d020ef          	jal	4a12 <wait>
-     if(st != 0)
--    1df2:	fa842503          	lw	a0,-88(s0)
--    1df6:	0c051863          	bnez	a0,1ec6 <manywrites+0x110>
-+    1dca:	fa842503          	lw	a0,-88(s0)
-+    1dce:	e169                	bnez	a0,1e90 <manywrites+0x102>
-   for(int ci = 0; ci < nchildren; ci++){
--    1dfa:	34fd                	addiw	s1,s1,-1
--    1dfc:	f4ed                	bnez	s1,1de6 <manywrites+0x30>
-+    1dd0:	34fd                	addw	s1,s1,-1
-+    1dd2:	f4f5                	bnez	s1,1dbe <manywrites+0x30>
-   exit(0);
--    1dfe:	4501                	li	a0,0
--    1e00:	481020ef          	jal	4a80 <exit>
--    1e04:	f852                	sd	s4,48(sp)
--    1e06:	f05a                	sd	s6,32(sp)
--    1e08:	ec5e                	sd	s7,24(sp)
-+    1dd4:	4501                	li	a0,0
-+    1dd6:	435020ef          	jal	4a0a <exit>
-       printf("fork failed\n");
--    1e0a:	00005517          	auipc	a0,0x5
--    1e0e:	07e50513          	addi	a0,a0,126 # 6e88 <malloc+0x1f3c>
--    1e12:	086030ef          	jal	4e98 <printf>
-+    1dda:	00005517          	auipc	a0,0x5
-+    1dde:	01e50513          	add	a0,a0,30 # 6df8 <malloc+0x1f20>
-+    1de2:	042030ef          	jal	4e24 <printf>
-       exit(1);
--    1e16:	4505                	li	a0,1
--    1e18:	469020ef          	jal	4a80 <exit>
--    1e1c:	f852                	sd	s4,48(sp)
--    1e1e:	f05a                	sd	s6,32(sp)
--    1e20:	ec5e                	sd	s7,24(sp)
-+    1de6:	4505                	li	a0,1
-+    1de8:	423020ef          	jal	4a0a <exit>
-       name[0] = 'b';
--    1e22:	06200793          	li	a5,98
--    1e26:	faf40423          	sb	a5,-88(s0)
-+    1dec:	06200793          	li	a5,98
-+    1df0:	faf40423          	sb	a5,-88(s0)
-       name[1] = 'a' + ci;
--    1e2a:	0619879b          	addiw	a5,s3,97
--    1e2e:	faf404a3          	sb	a5,-87(s0)
-+    1df4:	0619879b          	addw	a5,s3,97
-+    1df8:	faf404a3          	sb	a5,-87(s0)
-       name[2] = '\0';
--    1e32:	fa040523          	sb	zero,-86(s0)
-+    1dfc:	fa040523          	sb	zero,-86(s0)
-       unlink(name);
--    1e36:	fa840513          	addi	a0,s0,-88
--    1e3a:	497020ef          	jal	4ad0 <unlink>
--    1e3e:	4bf9                	li	s7,30
-+    1e00:	fa840513          	add	a0,s0,-88
-+    1e04:	457020ef          	jal	4a5a <unlink>
-+    1e08:	4bf9                	li	s7,30
-           int cc = write(fd, buf, sz);
--    1e40:	0000bb17          	auipc	s6,0xb
--    1e44:	e38b0b13          	addi	s6,s6,-456 # cc78 <buf>
-+    1e0a:	0000ab17          	auipc	s6,0xa
-+    1e0e:	e6eb0b13          	add	s6,s6,-402 # bc78 <buf>
-         for(int i = 0; i < ci+1; i++){
--    1e48:	8a26                	mv	s4,s1
--    1e4a:	0209c863          	bltz	s3,1e7a <manywrites+0xc4>
-+    1e12:	8a26                	mv	s4,s1
-+    1e14:	0209c863          	bltz	s3,1e44 <manywrites+0xb6>
-           int fd = open(name, O_CREATE | O_RDWR);
--    1e4e:	20200593          	li	a1,514
--    1e52:	fa840513          	addi	a0,s0,-88
--    1e56:	46b020ef          	jal	4ac0 <open>
--    1e5a:	892a                	mv	s2,a0
-+    1e18:	20200593          	li	a1,514
-+    1e1c:	fa840513          	add	a0,s0,-88
-+    1e20:	42b020ef          	jal	4a4a <open>
-+    1e24:	892a                	mv	s2,a0
-           if(fd < 0){
--    1e5c:	02054d63          	bltz	a0,1e96 <manywrites+0xe0>
-+    1e26:	02054d63          	bltz	a0,1e60 <manywrites+0xd2>
-           int cc = write(fd, buf, sz);
--    1e60:	660d                	lui	a2,0x3
--    1e62:	85da                	mv	a1,s6
--    1e64:	43d020ef          	jal	4aa0 <write>
-+    1e2a:	660d                	lui	a2,0x3
-+    1e2c:	85da                	mv	a1,s6
-+    1e2e:	3fd020ef          	jal	4a2a <write>
-           if(cc != sz){
--    1e68:	678d                	lui	a5,0x3
--    1e6a:	04f51263          	bne	a0,a5,1eae <manywrites+0xf8>
-+    1e32:	678d                	lui	a5,0x3
-+    1e34:	04f51263          	bne	a0,a5,1e78 <manywrites+0xea>
-           close(fd);
--    1e6e:	854a                	mv	a0,s2
--    1e70:	439020ef          	jal	4aa8 <close>
-+    1e38:	854a                	mv	a0,s2
-+    1e3a:	3f9020ef          	jal	4a32 <close>
-         for(int i = 0; i < ci+1; i++){
--    1e74:	2a05                	addiw	s4,s4,1
--    1e76:	fd49dce3          	bge	s3,s4,1e4e <manywrites+0x98>
-+    1e3e:	2a05                	addw	s4,s4,1
-+    1e40:	fd49dce3          	bge	s3,s4,1e18 <manywrites+0x8a>
-         unlink(name);
--    1e7a:	fa840513          	addi	a0,s0,-88
--    1e7e:	453020ef          	jal	4ad0 <unlink>
-+    1e44:	fa840513          	add	a0,s0,-88
-+    1e48:	413020ef          	jal	4a5a <unlink>
-       for(int iters = 0; iters < howmany; iters++){
--    1e82:	3bfd                	addiw	s7,s7,-1
--    1e84:	fc0b92e3          	bnez	s7,1e48 <manywrites+0x92>
-+    1e4c:	3bfd                	addw	s7,s7,-1
-+    1e4e:	fc0b92e3          	bnez	s7,1e12 <manywrites+0x84>
-       unlink(name);
--    1e88:	fa840513          	addi	a0,s0,-88
--    1e8c:	445020ef          	jal	4ad0 <unlink>
-+    1e52:	fa840513          	add	a0,s0,-88
-+    1e56:	405020ef          	jal	4a5a <unlink>
-       exit(0);
--    1e90:	4501                	li	a0,0
--    1e92:	3ef020ef          	jal	4a80 <exit>
-+    1e5a:	4501                	li	a0,0
-+    1e5c:	3af020ef          	jal	4a0a <exit>
-             printf("%s: cannot create %s\n", s, name);
--    1e96:	fa840613          	addi	a2,s0,-88
--    1e9a:	85d6                	mv	a1,s5
--    1e9c:	00004517          	auipc	a0,0x4
--    1ea0:	dcc50513          	addi	a0,a0,-564 # 5c68 <malloc+0xd1c>
--    1ea4:	7f5020ef          	jal	4e98 <printf>
-+    1e60:	fa840613          	add	a2,s0,-88
-+    1e64:	85d6                	mv	a1,s5
-+    1e66:	00004517          	auipc	a0,0x4
-+    1e6a:	d7250513          	add	a0,a0,-654 # 5bd8 <malloc+0xd00>
-+    1e6e:	7b7020ef          	jal	4e24 <printf>
-             exit(1);
--    1ea8:	4505                	li	a0,1
--    1eaa:	3d7020ef          	jal	4a80 <exit>
-+    1e72:	4505                	li	a0,1
-+    1e74:	397020ef          	jal	4a0a <exit>
-             printf("%s: write(%d) ret %d\n", s, sz, cc);
--    1eae:	86aa                	mv	a3,a0
--    1eb0:	660d                	lui	a2,0x3
--    1eb2:	85d6                	mv	a1,s5
--    1eb4:	00003517          	auipc	a0,0x3
--    1eb8:	2a450513          	addi	a0,a0,676 # 5158 <malloc+0x20c>
--    1ebc:	7dd020ef          	jal	4e98 <printf>
-+    1e78:	86aa                	mv	a3,a0
-+    1e7a:	660d                	lui	a2,0x3
-+    1e7c:	85d6                	mv	a1,s5
-+    1e7e:	00003517          	auipc	a0,0x3
-+    1e82:	24a50513          	add	a0,a0,586 # 50c8 <malloc+0x1f0>
-+    1e86:	79f020ef          	jal	4e24 <printf>
-             exit(1);
--    1ec0:	4505                	li	a0,1
--    1ec2:	3bf020ef          	jal	4a80 <exit>
-+    1e8a:	4505                	li	a0,1
-+    1e8c:	37f020ef          	jal	4a0a <exit>
-       exit(st);
--    1ec6:	3bb020ef          	jal	4a80 <exit>
-+    1e90:	37b020ef          	jal	4a0a <exit>
- 
--0000000000001eca <copyinstr3>:
-+0000000000001e94 <copyinstr3>:
- {
--    1eca:	7179                	addi	sp,sp,-48
--    1ecc:	f406                	sd	ra,40(sp)
--    1ece:	f022                	sd	s0,32(sp)
--    1ed0:	ec26                	sd	s1,24(sp)
--    1ed2:	1800                	addi	s0,sp,48
-+    1e94:	7179                	add	sp,sp,-48
-+    1e96:	f406                	sd	ra,40(sp)
-+    1e98:	f022                	sd	s0,32(sp)
-+    1e9a:	ec26                	sd	s1,24(sp)
-+    1e9c:	1800                	add	s0,sp,48
-   sbrk(8192);
--    1ed4:	6509                	lui	a0,0x2
--    1ed6:	433020ef          	jal	4b08 <sbrk>
-+    1e9e:	6509                	lui	a0,0x2
-+    1ea0:	3f3020ef          	jal	4a92 <sbrk>
-   uint64 top = (uint64) sbrk(0);
--    1eda:	4501                	li	a0,0
--    1edc:	42d020ef          	jal	4b08 <sbrk>
-+    1ea4:	4501                	li	a0,0
-+    1ea6:	3ed020ef          	jal	4a92 <sbrk>
-   if((top % PGSIZE) != 0){
--    1ee0:	03451793          	slli	a5,a0,0x34
--    1ee4:	e7bd                	bnez	a5,1f52 <copyinstr3+0x88>
-+    1eaa:	03451793          	sll	a5,a0,0x34
-+    1eae:	e7bd                	bnez	a5,1f1c <copyinstr3+0x88>
-   top = (uint64) sbrk(0);
--    1ee6:	4501                	li	a0,0
--    1ee8:	421020ef          	jal	4b08 <sbrk>
-+    1eb0:	4501                	li	a0,0
-+    1eb2:	3e1020ef          	jal	4a92 <sbrk>
-   if(top % PGSIZE){
--    1eec:	03451793          	slli	a5,a0,0x34
--    1ef0:	ebad                	bnez	a5,1f62 <copyinstr3+0x98>
-+    1eb6:	03451793          	sll	a5,a0,0x34
-+    1eba:	ebad                	bnez	a5,1f2c <copyinstr3+0x98>
-   char *b = (char *) (top - 1);
--    1ef2:	fff50493          	addi	s1,a0,-1 # 1fff <rwsbrk+0x31>
-+    1ebc:	fff50493          	add	s1,a0,-1 # 1fff <rwsbrk+0x67>
-   *b = 'x';
--    1ef6:	07800793          	li	a5,120
--    1efa:	fef50fa3          	sb	a5,-1(a0)
-+    1ec0:	07800793          	li	a5,120
-+    1ec4:	fef50fa3          	sb	a5,-1(a0)
-   int ret = unlink(b);
--    1efe:	8526                	mv	a0,s1
--    1f00:	3d1020ef          	jal	4ad0 <unlink>
-+    1ec8:	8526                	mv	a0,s1
-+    1eca:	391020ef          	jal	4a5a <unlink>
-   if(ret != -1){
--    1f04:	57fd                	li	a5,-1
--    1f06:	06f51763          	bne	a0,a5,1f74 <copyinstr3+0xaa>
-+    1ece:	57fd                	li	a5,-1
-+    1ed0:	06f51763          	bne	a0,a5,1f3e <copyinstr3+0xaa>
-   int fd = open(b, O_CREATE | O_WRONLY);
--    1f0a:	20100593          	li	a1,513
--    1f0e:	8526                	mv	a0,s1
--    1f10:	3b1020ef          	jal	4ac0 <open>
-+    1ed4:	20100593          	li	a1,513
-+    1ed8:	8526                	mv	a0,s1
-+    1eda:	371020ef          	jal	4a4a <open>
-   if(fd != -1){
--    1f14:	57fd                	li	a5,-1
--    1f16:	06f51a63          	bne	a0,a5,1f8a <copyinstr3+0xc0>
-+    1ede:	57fd                	li	a5,-1
-+    1ee0:	06f51a63          	bne	a0,a5,1f54 <copyinstr3+0xc0>
-   ret = link(b, b);
--    1f1a:	85a6                	mv	a1,s1
--    1f1c:	8526                	mv	a0,s1
--    1f1e:	3c3020ef          	jal	4ae0 <link>
-+    1ee4:	85a6                	mv	a1,s1
-+    1ee6:	8526                	mv	a0,s1
-+    1ee8:	383020ef          	jal	4a6a <link>
-   if(ret != -1){
--    1f22:	57fd                	li	a5,-1
--    1f24:	06f51e63          	bne	a0,a5,1fa0 <copyinstr3+0xd6>
-+    1eec:	57fd                	li	a5,-1
-+    1eee:	06f51e63          	bne	a0,a5,1f6a <copyinstr3+0xd6>
-   char *args[] = { "xx", 0 };
--    1f28:	00005797          	auipc	a5,0x5
--    1f2c:	a4078793          	addi	a5,a5,-1472 # 6968 <malloc+0x1a1c>
--    1f30:	fcf43823          	sd	a5,-48(s0)
--    1f34:	fc043c23          	sd	zero,-40(s0)
-+    1ef2:	00005797          	auipc	a5,0x5
-+    1ef6:	9e678793          	add	a5,a5,-1562 # 68d8 <malloc+0x1a00>
-+    1efa:	fcf43823          	sd	a5,-48(s0)
-+    1efe:	fc043c23          	sd	zero,-40(s0)
-   ret = exec(b, args);
--    1f38:	fd040593          	addi	a1,s0,-48
--    1f3c:	8526                	mv	a0,s1
--    1f3e:	37b020ef          	jal	4ab8 <exec>
-+    1f02:	fd040593          	add	a1,s0,-48
-+    1f06:	8526                	mv	a0,s1
-+    1f08:	33b020ef          	jal	4a42 <exec>
-   if(ret != -1){
--    1f42:	57fd                	li	a5,-1
--    1f44:	06f51a63          	bne	a0,a5,1fb8 <copyinstr3+0xee>
-+    1f0c:	57fd                	li	a5,-1
-+    1f0e:	06f51a63          	bne	a0,a5,1f82 <copyinstr3+0xee>
- }
--    1f48:	70a2                	ld	ra,40(sp)
--    1f4a:	7402                	ld	s0,32(sp)
--    1f4c:	64e2                	ld	s1,24(sp)
--    1f4e:	6145                	addi	sp,sp,48
--    1f50:	8082                	ret
-+    1f12:	70a2                	ld	ra,40(sp)
-+    1f14:	7402                	ld	s0,32(sp)
-+    1f16:	64e2                	ld	s1,24(sp)
-+    1f18:	6145                	add	sp,sp,48
-+    1f1a:	8082                	ret
-     sbrk(PGSIZE - (top % PGSIZE));
--    1f52:	0347d513          	srli	a0,a5,0x34
--    1f56:	6785                	lui	a5,0x1
--    1f58:	40a7853b          	subw	a0,a5,a0
--    1f5c:	3ad020ef          	jal	4b08 <sbrk>
--    1f60:	b759                	j	1ee6 <copyinstr3+0x1c>
-+    1f1c:	0347d513          	srl	a0,a5,0x34
-+    1f20:	6785                	lui	a5,0x1
-+    1f22:	40a7853b          	subw	a0,a5,a0
-+    1f26:	36d020ef          	jal	4a92 <sbrk>
-+    1f2a:	b759                	j	1eb0 <copyinstr3+0x1c>
-     printf("oops\n");
--    1f62:	00004517          	auipc	a0,0x4
--    1f66:	d1e50513          	addi	a0,a0,-738 # 5c80 <malloc+0xd34>
--    1f6a:	72f020ef          	jal	4e98 <printf>
-+    1f2c:	00004517          	auipc	a0,0x4
-+    1f30:	cc450513          	add	a0,a0,-828 # 5bf0 <malloc+0xd18>
-+    1f34:	6f1020ef          	jal	4e24 <printf>
-     exit(1);
--    1f6e:	4505                	li	a0,1
--    1f70:	311020ef          	jal	4a80 <exit>
-+    1f38:	4505                	li	a0,1
-+    1f3a:	2d1020ef          	jal	4a0a <exit>
-     printf("unlink(%s) returned %d, not -1\n", b, ret);
--    1f74:	862a                	mv	a2,a0
--    1f76:	85a6                	mv	a1,s1
--    1f78:	00004517          	auipc	a0,0x4
--    1f7c:	8c050513          	addi	a0,a0,-1856 # 5838 <malloc+0x8ec>
--    1f80:	719020ef          	jal	4e98 <printf>
--    exit(1);
--    1f84:	4505                	li	a0,1
--    1f86:	2fb020ef          	jal	4a80 <exit>
-+    1f3e:	862a                	mv	a2,a0
-+    1f40:	85a6                	mv	a1,s1
-+    1f42:	00004517          	auipc	a0,0x4
-+    1f46:	86650513          	add	a0,a0,-1946 # 57a8 <malloc+0x8d0>
-+    1f4a:	6db020ef          	jal	4e24 <printf>
-+    exit(1);
-+    1f4e:	4505                	li	a0,1
-+    1f50:	2bb020ef          	jal	4a0a <exit>
-     printf("open(%s) returned %d, not -1\n", b, fd);
--    1f8a:	862a                	mv	a2,a0
--    1f8c:	85a6                	mv	a1,s1
--    1f8e:	00004517          	auipc	a0,0x4
--    1f92:	8ca50513          	addi	a0,a0,-1846 # 5858 <malloc+0x90c>
--    1f96:	703020ef          	jal	4e98 <printf>
--    exit(1);
--    1f9a:	4505                	li	a0,1
--    1f9c:	2e5020ef          	jal	4a80 <exit>
-+    1f54:	862a                	mv	a2,a0
-+    1f56:	85a6                	mv	a1,s1
-+    1f58:	00004517          	auipc	a0,0x4
-+    1f5c:	87050513          	add	a0,a0,-1936 # 57c8 <malloc+0x8f0>
-+    1f60:	6c5020ef          	jal	4e24 <printf>
-+    exit(1);
-+    1f64:	4505                	li	a0,1
-+    1f66:	2a5020ef          	jal	4a0a <exit>
-     printf("link(%s, %s) returned %d, not -1\n", b, b, ret);
--    1fa0:	86aa                	mv	a3,a0
--    1fa2:	8626                	mv	a2,s1
--    1fa4:	85a6                	mv	a1,s1
--    1fa6:	00004517          	auipc	a0,0x4
--    1faa:	8d250513          	addi	a0,a0,-1838 # 5878 <malloc+0x92c>
--    1fae:	6eb020ef          	jal	4e98 <printf>
--    exit(1);
--    1fb2:	4505                	li	a0,1
--    1fb4:	2cd020ef          	jal	4a80 <exit>
-+    1f6a:	86aa                	mv	a3,a0
-+    1f6c:	8626                	mv	a2,s1
-+    1f6e:	85a6                	mv	a1,s1
-+    1f70:	00004517          	auipc	a0,0x4
-+    1f74:	87850513          	add	a0,a0,-1928 # 57e8 <malloc+0x910>
-+    1f78:	6ad020ef          	jal	4e24 <printf>
-+    exit(1);
-+    1f7c:	4505                	li	a0,1
-+    1f7e:	28d020ef          	jal	4a0a <exit>
-     printf("exec(%s) returned %d, not -1\n", b, fd);
--    1fb8:	567d                	li	a2,-1
--    1fba:	85a6                	mv	a1,s1
--    1fbc:	00004517          	auipc	a0,0x4
--    1fc0:	8e450513          	addi	a0,a0,-1820 # 58a0 <malloc+0x954>
--    1fc4:	6d5020ef          	jal	4e98 <printf>
-+    1f82:	567d                	li	a2,-1
-+    1f84:	85a6                	mv	a1,s1
-+    1f86:	00004517          	auipc	a0,0x4
-+    1f8a:	88a50513          	add	a0,a0,-1910 # 5810 <malloc+0x938>
-+    1f8e:	697020ef          	jal	4e24 <printf>
-     exit(1);
--    1fc8:	4505                	li	a0,1
--    1fca:	2b7020ef          	jal	4a80 <exit>
-+    1f92:	4505                	li	a0,1
-+    1f94:	277020ef          	jal	4a0a <exit>
- 
--0000000000001fce <rwsbrk>:
-+0000000000001f98 <rwsbrk>:
- {
--    1fce:	1101                	addi	sp,sp,-32
--    1fd0:	ec06                	sd	ra,24(sp)
--    1fd2:	e822                	sd	s0,16(sp)
--    1fd4:	1000                	addi	s0,sp,32
-+    1f98:	1101                	add	sp,sp,-32
-+    1f9a:	ec06                	sd	ra,24(sp)
-+    1f9c:	e822                	sd	s0,16(sp)
-+    1f9e:	e426                	sd	s1,8(sp)
-+    1fa0:	e04a                	sd	s2,0(sp)
-+    1fa2:	1000                	add	s0,sp,32
-   uint64 a = (uint64) sbrk(8192);
--    1fd6:	6509                	lui	a0,0x2
--    1fd8:	331020ef          	jal	4b08 <sbrk>
-+    1fa4:	6509                	lui	a0,0x2
-+    1fa6:	2ed020ef          	jal	4a92 <sbrk>
-   if(a == 0xffffffffffffffffLL) {
--    1fdc:	57fd                	li	a5,-1
--    1fde:	04f50a63          	beq	a0,a5,2032 <rwsbrk+0x64>
--    1fe2:	e426                	sd	s1,8(sp)
--    1fe4:	84aa                	mv	s1,a0
-+    1faa:	57fd                	li	a5,-1
-+    1fac:	04f50863          	beq	a0,a5,1ffc <rwsbrk+0x64>
-+    1fb0:	84aa                	mv	s1,a0
-   if ((uint64) sbrk(-8192) ==  0xffffffffffffffffLL) {
--    1fe6:	7579                	lui	a0,0xffffe
--    1fe8:	321020ef          	jal	4b08 <sbrk>
--    1fec:	57fd                	li	a5,-1
--    1fee:	04f50d63          	beq	a0,a5,2048 <rwsbrk+0x7a>
--    1ff2:	e04a                	sd	s2,0(sp)
-+    1fb2:	7579                	lui	a0,0xffffe
-+    1fb4:	2df020ef          	jal	4a92 <sbrk>
-+    1fb8:	57fd                	li	a5,-1
-+    1fba:	04f50a63          	beq	a0,a5,200e <rwsbrk+0x76>
-   fd = open("rwsbrk", O_CREATE|O_WRONLY);
--    1ff4:	20100593          	li	a1,513
--    1ff8:	00004517          	auipc	a0,0x4
--    1ffc:	cc850513          	addi	a0,a0,-824 # 5cc0 <malloc+0xd74>
--    2000:	2c1020ef          	jal	4ac0 <open>
--    2004:	892a                	mv	s2,a0
-+    1fbe:	20100593          	li	a1,513
-+    1fc2:	00004517          	auipc	a0,0x4
-+    1fc6:	c6e50513          	add	a0,a0,-914 # 5c30 <malloc+0xd58>
-+    1fca:	281020ef          	jal	4a4a <open>
-+    1fce:	892a                	mv	s2,a0
-   if(fd < 0){
--    2006:	04054b63          	bltz	a0,205c <rwsbrk+0x8e>
-+    1fd0:	04054863          	bltz	a0,2020 <rwsbrk+0x88>
-   n = write(fd, (void*)(a+4096), 1024);
--    200a:	6785                	lui	a5,0x1
--    200c:	94be                	add	s1,s1,a5
--    200e:	40000613          	li	a2,1024
--    2012:	85a6                	mv	a1,s1
--    2014:	28d020ef          	jal	4aa0 <write>
--    2018:	862a                	mv	a2,a0
-+    1fd4:	6785                	lui	a5,0x1
-+    1fd6:	94be                	add	s1,s1,a5
-+    1fd8:	40000613          	li	a2,1024
-+    1fdc:	85a6                	mv	a1,s1
-+    1fde:	24d020ef          	jal	4a2a <write>
-+    1fe2:	862a                	mv	a2,a0
-   if(n >= 0){
--    201a:	04054a63          	bltz	a0,206e <rwsbrk+0xa0>
-+    1fe4:	04054763          	bltz	a0,2032 <rwsbrk+0x9a>
-     printf("write(fd, %p, 1024) returned %d, not -1\n", (void*)a+4096, n);
--    201e:	85a6                	mv	a1,s1
--    2020:	00004517          	auipc	a0,0x4
--    2024:	cc050513          	addi	a0,a0,-832 # 5ce0 <malloc+0xd94>
--    2028:	671020ef          	jal	4e98 <printf>
-+    1fe8:	85a6                	mv	a1,s1
-+    1fea:	00004517          	auipc	a0,0x4
-+    1fee:	c6650513          	add	a0,a0,-922 # 5c50 <malloc+0xd78>
-+    1ff2:	633020ef          	jal	4e24 <printf>
-     exit(1);
--    202c:	4505                	li	a0,1
--    202e:	253020ef          	jal	4a80 <exit>
--    2032:	e426                	sd	s1,8(sp)
--    2034:	e04a                	sd	s2,0(sp)
-+    1ff6:	4505                	li	a0,1
-+    1ff8:	213020ef          	jal	4a0a <exit>
-     printf("sbrk(rwsbrk) failed\n");
--    2036:	00004517          	auipc	a0,0x4
--    203a:	c5250513          	addi	a0,a0,-942 # 5c88 <malloc+0xd3c>
--    203e:	65b020ef          	jal	4e98 <printf>
-+    1ffc:	00004517          	auipc	a0,0x4
-+    2000:	bfc50513          	add	a0,a0,-1028 # 5bf8 <malloc+0xd20>
-+    2004:	621020ef          	jal	4e24 <printf>
-     exit(1);
--    2042:	4505                	li	a0,1
--    2044:	23d020ef          	jal	4a80 <exit>
--    2048:	e04a                	sd	s2,0(sp)
-+    2008:	4505                	li	a0,1
-+    200a:	201020ef          	jal	4a0a <exit>
-     printf("sbrk(rwsbrk) shrink failed\n");
--    204a:	00004517          	auipc	a0,0x4
--    204e:	c5650513          	addi	a0,a0,-938 # 5ca0 <malloc+0xd54>
--    2052:	647020ef          	jal	4e98 <printf>
-+    200e:	00004517          	auipc	a0,0x4
-+    2012:	c0250513          	add	a0,a0,-1022 # 5c10 <malloc+0xd38>
-+    2016:	60f020ef          	jal	4e24 <printf>
-     exit(1);
--    2056:	4505                	li	a0,1
--    2058:	229020ef          	jal	4a80 <exit>
-+    201a:	4505                	li	a0,1
-+    201c:	1ef020ef          	jal	4a0a <exit>
-     printf("open(rwsbrk) failed\n");
--    205c:	00004517          	auipc	a0,0x4
--    2060:	c6c50513          	addi	a0,a0,-916 # 5cc8 <malloc+0xd7c>
--    2064:	635020ef          	jal	4e98 <printf>
-+    2020:	00004517          	auipc	a0,0x4
-+    2024:	c1850513          	add	a0,a0,-1000 # 5c38 <malloc+0xd60>
-+    2028:	5fd020ef          	jal	4e24 <printf>
-     exit(1);
--    2068:	4505                	li	a0,1
--    206a:	217020ef          	jal	4a80 <exit>
-+    202c:	4505                	li	a0,1
-+    202e:	1dd020ef          	jal	4a0a <exit>
-   close(fd);
--    206e:	854a                	mv	a0,s2
--    2070:	239020ef          	jal	4aa8 <close>
-+    2032:	854a                	mv	a0,s2
-+    2034:	1ff020ef          	jal	4a32 <close>
-   unlink("rwsbrk");
--    2074:	00004517          	auipc	a0,0x4
--    2078:	c4c50513          	addi	a0,a0,-948 # 5cc0 <malloc+0xd74>
--    207c:	255020ef          	jal	4ad0 <unlink>
-+    2038:	00004517          	auipc	a0,0x4
-+    203c:	bf850513          	add	a0,a0,-1032 # 5c30 <malloc+0xd58>
-+    2040:	21b020ef          	jal	4a5a <unlink>
-   fd = open("README", O_RDONLY);
--    2080:	4581                	li	a1,0
--    2082:	00003517          	auipc	a0,0x3
--    2086:	1de50513          	addi	a0,a0,478 # 5260 <malloc+0x314>
--    208a:	237020ef          	jal	4ac0 <open>
--    208e:	892a                	mv	s2,a0
-+    2044:	4581                	li	a1,0
-+    2046:	00003517          	auipc	a0,0x3
-+    204a:	18a50513          	add	a0,a0,394 # 51d0 <malloc+0x2f8>
-+    204e:	1fd020ef          	jal	4a4a <open>
-+    2052:	892a                	mv	s2,a0
-   if(fd < 0){
--    2090:	02054363          	bltz	a0,20b6 <rwsbrk+0xe8>
-+    2054:	02054363          	bltz	a0,207a <rwsbrk+0xe2>
-   n = read(fd, (void*)(a+4096), 10);
--    2094:	4629                	li	a2,10
--    2096:	85a6                	mv	a1,s1
--    2098:	201020ef          	jal	4a98 <read>
--    209c:	862a                	mv	a2,a0
-+    2058:	4629                	li	a2,10
-+    205a:	85a6                	mv	a1,s1
-+    205c:	1c7020ef          	jal	4a22 <read>
-+    2060:	862a                	mv	a2,a0
-   if(n >= 0){
--    209e:	02054563          	bltz	a0,20c8 <rwsbrk+0xfa>
-+    2062:	02054563          	bltz	a0,208c <rwsbrk+0xf4>
-     printf("read(fd, %p, 10) returned %d, not -1\n", (void*)a+4096, n);
--    20a2:	85a6                	mv	a1,s1
--    20a4:	00004517          	auipc	a0,0x4
--    20a8:	c6c50513          	addi	a0,a0,-916 # 5d10 <malloc+0xdc4>
--    20ac:	5ed020ef          	jal	4e98 <printf>
-+    2066:	85a6                	mv	a1,s1
-+    2068:	00004517          	auipc	a0,0x4
-+    206c:	c1850513          	add	a0,a0,-1000 # 5c80 <malloc+0xda8>
-+    2070:	5b5020ef          	jal	4e24 <printf>
-     exit(1);
--    20b0:	4505                	li	a0,1
--    20b2:	1cf020ef          	jal	4a80 <exit>
-+    2074:	4505                	li	a0,1
-+    2076:	195020ef          	jal	4a0a <exit>
-     printf("open(rwsbrk) failed\n");
--    20b6:	00004517          	auipc	a0,0x4
--    20ba:	c1250513          	addi	a0,a0,-1006 # 5cc8 <malloc+0xd7c>
--    20be:	5db020ef          	jal	4e98 <printf>
-+    207a:	00004517          	auipc	a0,0x4
-+    207e:	bbe50513          	add	a0,a0,-1090 # 5c38 <malloc+0xd60>
-+    2082:	5a3020ef          	jal	4e24 <printf>
-     exit(1);
--    20c2:	4505                	li	a0,1
--    20c4:	1bd020ef          	jal	4a80 <exit>
-+    2086:	4505                	li	a0,1
-+    2088:	183020ef          	jal	4a0a <exit>
-   close(fd);
--    20c8:	854a                	mv	a0,s2
--    20ca:	1df020ef          	jal	4aa8 <close>
-+    208c:	854a                	mv	a0,s2
-+    208e:	1a5020ef          	jal	4a32 <close>
-   exit(0);
--    20ce:	4501                	li	a0,0
--    20d0:	1b1020ef          	jal	4a80 <exit>
-+    2092:	4501                	li	a0,0
-+    2094:	177020ef          	jal	4a0a <exit>
- 
--00000000000020d4 <sbrkbasic>:
-+0000000000002098 <sbrkbasic>:
- {
--    20d4:	7139                	addi	sp,sp,-64
--    20d6:	fc06                	sd	ra,56(sp)
--    20d8:	f822                	sd	s0,48(sp)
--    20da:	ec4e                	sd	s3,24(sp)
--    20dc:	0080                	addi	s0,sp,64
--    20de:	89aa                	mv	s3,a0
-+    2098:	7139                	add	sp,sp,-64
-+    209a:	fc06                	sd	ra,56(sp)
-+    209c:	f822                	sd	s0,48(sp)
-+    209e:	f426                	sd	s1,40(sp)
-+    20a0:	f04a                	sd	s2,32(sp)
-+    20a2:	ec4e                	sd	s3,24(sp)
-+    20a4:	e852                	sd	s4,16(sp)
-+    20a6:	0080                	add	s0,sp,64
-+    20a8:	8a2a                	mv	s4,a0
-   pid = fork();
--    20e0:	199020ef          	jal	4a78 <fork>
-+    20aa:	159020ef          	jal	4a02 <fork>
-   if(pid < 0){
--    20e4:	02054b63          	bltz	a0,211a <sbrkbasic+0x46>
-+    20ae:	02054863          	bltz	a0,20de <sbrkbasic+0x46>
-   if(pid == 0){
--    20e8:	e939                	bnez	a0,213e <sbrkbasic+0x6a>
-+    20b2:	e131                	bnez	a0,20f6 <sbrkbasic+0x5e>
-     a = sbrk(TOOMUCH);
--    20ea:	40000537          	lui	a0,0x40000
--    20ee:	21b020ef          	jal	4b08 <sbrk>
-+    20b4:	40000537          	lui	a0,0x40000
-+    20b8:	1db020ef          	jal	4a92 <sbrk>
-     if(a == (char*)0xffffffffffffffffL){
--    20f2:	57fd                	li	a5,-1
--    20f4:	02f50f63          	beq	a0,a5,2132 <sbrkbasic+0x5e>
--    20f8:	f426                	sd	s1,40(sp)
--    20fa:	f04a                	sd	s2,32(sp)
--    20fc:	e852                	sd	s4,16(sp)
-+    20bc:	57fd                	li	a5,-1
-+    20be:	02f50963          	beq	a0,a5,20f0 <sbrkbasic+0x58>
-     for(b = a; b < a+TOOMUCH; b += 4096){
--    20fe:	400007b7          	lui	a5,0x40000
--    2102:	97aa                	add	a5,a5,a0
-+    20c2:	400007b7          	lui	a5,0x40000
-+    20c6:	97aa                	add	a5,a5,a0
-       *b = 99;
--    2104:	06300693          	li	a3,99
-+    20c8:	06300693          	li	a3,99
-     for(b = a; b < a+TOOMUCH; b += 4096){
--    2108:	6705                	lui	a4,0x1
-+    20cc:	6705                	lui	a4,0x1
-       *b = 99;
--    210a:	00d50023          	sb	a3,0(a0) # 40000000 <base+0x3fff0388>
-+    20ce:	00d50023          	sb	a3,0(a0) # 40000000 <base+0x3fff1388>
-     for(b = a; b < a+TOOMUCH; b += 4096){
--    210e:	953a                	add	a0,a0,a4
--    2110:	fef51de3          	bne	a0,a5,210a <sbrkbasic+0x36>
--    exit(1);
--    2114:	4505                	li	a0,1
--    2116:	16b020ef          	jal	4a80 <exit>
--    211a:	f426                	sd	s1,40(sp)
--    211c:	f04a                	sd	s2,32(sp)
--    211e:	e852                	sd	s4,16(sp)
-+    20d2:	953a                	add	a0,a0,a4
-+    20d4:	fef51de3          	bne	a0,a5,20ce <sbrkbasic+0x36>
-+    exit(1);
-+    20d8:	4505                	li	a0,1
-+    20da:	131020ef          	jal	4a0a <exit>
-     printf("fork failed in sbrkbasic\n");
--    2120:	00004517          	auipc	a0,0x4
--    2124:	c1850513          	addi	a0,a0,-1000 # 5d38 <malloc+0xdec>
--    2128:	571020ef          	jal	4e98 <printf>
--    exit(1);
--    212c:	4505                	li	a0,1
--    212e:	153020ef          	jal	4a80 <exit>
--    2132:	f426                	sd	s1,40(sp)
--    2134:	f04a                	sd	s2,32(sp)
--    2136:	e852                	sd	s4,16(sp)
-+    20de:	00004517          	auipc	a0,0x4
-+    20e2:	bca50513          	add	a0,a0,-1078 # 5ca8 <malloc+0xdd0>
-+    20e6:	53f020ef          	jal	4e24 <printf>
-+    exit(1);
-+    20ea:	4505                	li	a0,1
-+    20ec:	11f020ef          	jal	4a0a <exit>
-       exit(0);
--    2138:	4501                	li	a0,0
--    213a:	147020ef          	jal	4a80 <exit>
-+    20f0:	4501                	li	a0,0
-+    20f2:	119020ef          	jal	4a0a <exit>
-   wait(&xstatus);
--    213e:	fcc40513          	addi	a0,s0,-52
--    2142:	147020ef          	jal	4a88 <wait>
-+    20f6:	fcc40513          	add	a0,s0,-52
-+    20fa:	119020ef          	jal	4a12 <wait>
-   if(xstatus == 1){
--    2146:	fcc42703          	lw	a4,-52(s0)
--    214a:	4785                	li	a5,1
--    214c:	00f70e63          	beq	a4,a5,2168 <sbrkbasic+0x94>
--    2150:	f426                	sd	s1,40(sp)
--    2152:	f04a                	sd	s2,32(sp)
--    2154:	e852                	sd	s4,16(sp)
-+    20fe:	fcc42703          	lw	a4,-52(s0)
-+    2102:	4785                	li	a5,1
-+    2104:	00f70b63          	beq	a4,a5,211a <sbrkbasic+0x82>
-   a = sbrk(0);
--    2156:	4501                	li	a0,0
--    2158:	1b1020ef          	jal	4b08 <sbrk>
--    215c:	84aa                	mv	s1,a0
-+    2108:	4501                	li	a0,0
-+    210a:	189020ef          	jal	4a92 <sbrk>
-+    210e:	84aa                	mv	s1,a0
-   for(i = 0; i < 5000; i++){
--    215e:	4901                	li	s2,0
--    2160:	6a05                	lui	s4,0x1
--    2162:	388a0a13          	addi	s4,s4,904 # 1388 <exectest+0x4a>
--    2166:	a839                	j	2184 <sbrkbasic+0xb0>
--    2168:	f426                	sd	s1,40(sp)
--    216a:	f04a                	sd	s2,32(sp)
--    216c:	e852                	sd	s4,16(sp)
-+    2110:	4901                	li	s2,0
-+    2112:	6985                	lui	s3,0x1
-+    2114:	38898993          	add	s3,s3,904 # 1388 <exectest+0x5a>
-+    2118:	a821                	j	2130 <sbrkbasic+0x98>
-     printf("%s: too much memory allocated!\n", s);
--    216e:	85ce                	mv	a1,s3
--    2170:	00004517          	auipc	a0,0x4
--    2174:	be850513          	addi	a0,a0,-1048 # 5d58 <malloc+0xe0c>
--    2178:	521020ef          	jal	4e98 <printf>
--    exit(1);
--    217c:	4505                	li	a0,1
--    217e:	103020ef          	jal	4a80 <exit>
--    2182:	84be                	mv	s1,a5
-+    211a:	85d2                	mv	a1,s4
-+    211c:	00004517          	auipc	a0,0x4
-+    2120:	bac50513          	add	a0,a0,-1108 # 5cc8 <malloc+0xdf0>
-+    2124:	501020ef          	jal	4e24 <printf>
-+    exit(1);
-+    2128:	4505                	li	a0,1
-+    212a:	0e1020ef          	jal	4a0a <exit>
-+    a = b + 1;
-+    212e:	84be                	mv	s1,a5
-     b = sbrk(1);
--    2184:	4505                	li	a0,1
--    2186:	183020ef          	jal	4b08 <sbrk>
-+    2130:	4505                	li	a0,1
-+    2132:	161020ef          	jal	4a92 <sbrk>
-     if(b != a){
--    218a:	04951263          	bne	a0,s1,21ce <sbrkbasic+0xfa>
-+    2136:	04951263          	bne	a0,s1,217a <sbrkbasic+0xe2>
-     *b = 1;
--    218e:	4785                	li	a5,1
--    2190:	00f48023          	sb	a5,0(s1)
-+    213a:	4785                	li	a5,1
-+    213c:	00f48023          	sb	a5,0(s1)
-     a = b + 1;
--    2194:	00148793          	addi	a5,s1,1
-+    2140:	00148793          	add	a5,s1,1
-   for(i = 0; i < 5000; i++){
--    2198:	2905                	addiw	s2,s2,1
--    219a:	ff4914e3          	bne	s2,s4,2182 <sbrkbasic+0xae>
-+    2144:	2905                	addw	s2,s2,1
-+    2146:	ff3914e3          	bne	s2,s3,212e <sbrkbasic+0x96>
-   pid = fork();
--    219e:	0db020ef          	jal	4a78 <fork>
--    21a2:	892a                	mv	s2,a0
-+    214a:	0b9020ef          	jal	4a02 <fork>
-+    214e:	892a                	mv	s2,a0
-   if(pid < 0){
--    21a4:	04054263          	bltz	a0,21e8 <sbrkbasic+0x114>
-+    2150:	04054263          	bltz	a0,2194 <sbrkbasic+0xfc>
-   c = sbrk(1);
--    21a8:	4505                	li	a0,1
--    21aa:	15f020ef          	jal	4b08 <sbrk>
-+    2154:	4505                	li	a0,1
-+    2156:	13d020ef          	jal	4a92 <sbrk>
-   c = sbrk(1);
--    21ae:	4505                	li	a0,1
--    21b0:	159020ef          	jal	4b08 <sbrk>
-+    215a:	4505                	li	a0,1
-+    215c:	137020ef          	jal	4a92 <sbrk>
-   if(c != a + 1){
--    21b4:	0489                	addi	s1,s1,2
--    21b6:	04a48363          	beq	s1,a0,21fc <sbrkbasic+0x128>
-+    2160:	0489                	add	s1,s1,2
-+    2162:	04a48363          	beq	s1,a0,21a8 <sbrkbasic+0x110>
-     printf("%s: sbrk test failed post-fork\n", s);
--    21ba:	85ce                	mv	a1,s3
--    21bc:	00004517          	auipc	a0,0x4
--    21c0:	bfc50513          	addi	a0,a0,-1028 # 5db8 <malloc+0xe6c>
--    21c4:	4d5020ef          	jal	4e98 <printf>
-+    2166:	85d2                	mv	a1,s4
-+    2168:	00004517          	auipc	a0,0x4
-+    216c:	bc050513          	add	a0,a0,-1088 # 5d28 <malloc+0xe50>
-+    2170:	4b5020ef          	jal	4e24 <printf>
-     exit(1);
--    21c8:	4505                	li	a0,1
--    21ca:	0b7020ef          	jal	4a80 <exit>
-+    2174:	4505                	li	a0,1
-+    2176:	095020ef          	jal	4a0a <exit>
-       printf("%s: sbrk test failed %d %p %p\n", s, i, a, b);
--    21ce:	872a                	mv	a4,a0
--    21d0:	86a6                	mv	a3,s1
--    21d2:	864a                	mv	a2,s2
--    21d4:	85ce                	mv	a1,s3
--    21d6:	00004517          	auipc	a0,0x4
--    21da:	ba250513          	addi	a0,a0,-1118 # 5d78 <malloc+0xe2c>
--    21de:	4bb020ef          	jal	4e98 <printf>
-+    217a:	872a                	mv	a4,a0
-+    217c:	86a6                	mv	a3,s1
-+    217e:	864a                	mv	a2,s2
-+    2180:	85d2                	mv	a1,s4
-+    2182:	00004517          	auipc	a0,0x4
-+    2186:	b6650513          	add	a0,a0,-1178 # 5ce8 <malloc+0xe10>
-+    218a:	49b020ef          	jal	4e24 <printf>
-       exit(1);
--    21e2:	4505                	li	a0,1
--    21e4:	09d020ef          	jal	4a80 <exit>
-+    218e:	4505                	li	a0,1
-+    2190:	07b020ef          	jal	4a0a <exit>
-     printf("%s: sbrk test fork failed\n", s);
--    21e8:	85ce                	mv	a1,s3
--    21ea:	00004517          	auipc	a0,0x4
--    21ee:	bae50513          	addi	a0,a0,-1106 # 5d98 <malloc+0xe4c>
--    21f2:	4a7020ef          	jal	4e98 <printf>
-+    2194:	85d2                	mv	a1,s4
-+    2196:	00004517          	auipc	a0,0x4
-+    219a:	b7250513          	add	a0,a0,-1166 # 5d08 <malloc+0xe30>
-+    219e:	487020ef          	jal	4e24 <printf>
-     exit(1);
--    21f6:	4505                	li	a0,1
--    21f8:	089020ef          	jal	4a80 <exit>
-+    21a2:	4505                	li	a0,1
-+    21a4:	067020ef          	jal	4a0a <exit>
-   if(pid == 0)
--    21fc:	00091563          	bnez	s2,2206 <sbrkbasic+0x132>
-+    21a8:	00091563          	bnez	s2,21b2 <sbrkbasic+0x11a>
-     exit(0);
--    2200:	4501                	li	a0,0
--    2202:	07f020ef          	jal	4a80 <exit>
-+    21ac:	4501                	li	a0,0
-+    21ae:	05d020ef          	jal	4a0a <exit>
-   wait(&xstatus);
--    2206:	fcc40513          	addi	a0,s0,-52
--    220a:	07f020ef          	jal	4a88 <wait>
-+    21b2:	fcc40513          	add	a0,s0,-52
-+    21b6:	05d020ef          	jal	4a12 <wait>
-   exit(xstatus);
--    220e:	fcc42503          	lw	a0,-52(s0)
--    2212:	06f020ef          	jal	4a80 <exit>
-+    21ba:	fcc42503          	lw	a0,-52(s0)
-+    21be:	04d020ef          	jal	4a0a <exit>
- 
--0000000000002216 <sbrkmuch>:
-+00000000000021c2 <sbrkmuch>:
- {
--    2216:	7179                	addi	sp,sp,-48
--    2218:	f406                	sd	ra,40(sp)
--    221a:	f022                	sd	s0,32(sp)
--    221c:	ec26                	sd	s1,24(sp)
--    221e:	e84a                	sd	s2,16(sp)
--    2220:	e44e                	sd	s3,8(sp)
--    2222:	e052                	sd	s4,0(sp)
--    2224:	1800                	addi	s0,sp,48
--    2226:	89aa                	mv	s3,a0
-+    21c2:	7179                	add	sp,sp,-48
-+    21c4:	f406                	sd	ra,40(sp)
-+    21c6:	f022                	sd	s0,32(sp)
-+    21c8:	ec26                	sd	s1,24(sp)
-+    21ca:	e84a                	sd	s2,16(sp)
-+    21cc:	e44e                	sd	s3,8(sp)
-+    21ce:	e052                	sd	s4,0(sp)
-+    21d0:	1800                	add	s0,sp,48
-+    21d2:	89aa                	mv	s3,a0
-   oldbrk = sbrk(0);
--    2228:	4501                	li	a0,0
--    222a:	0df020ef          	jal	4b08 <sbrk>
--    222e:	892a                	mv	s2,a0
-+    21d4:	4501                	li	a0,0
-+    21d6:	0bd020ef          	jal	4a92 <sbrk>
-+    21da:	892a                	mv	s2,a0
-   a = sbrk(0);
--    2230:	4501                	li	a0,0
--    2232:	0d7020ef          	jal	4b08 <sbrk>
--    2236:	84aa                	mv	s1,a0
-+    21dc:	4501                	li	a0,0
-+    21de:	0b5020ef          	jal	4a92 <sbrk>
-+    21e2:	84aa                	mv	s1,a0
-   p = sbrk(amt);
--    2238:	06400537          	lui	a0,0x6400
--    223c:	9d05                	subw	a0,a0,s1
--    223e:	0cb020ef          	jal	4b08 <sbrk>
-+    21e4:	06400537          	lui	a0,0x6400
-+    21e8:	9d05                	subw	a0,a0,s1
-+    21ea:	0a9020ef          	jal	4a92 <sbrk>
-   if (p != a) {
--    2242:	0aa49463          	bne	s1,a0,22ea <sbrkmuch+0xd4>
-+    21ee:	0aa49463          	bne	s1,a0,2296 <sbrkmuch+0xd4>
-   char *eee = sbrk(0);
--    2246:	4501                	li	a0,0
--    2248:	0c1020ef          	jal	4b08 <sbrk>
--    224c:	87aa                	mv	a5,a0
-+    21f2:	4501                	li	a0,0
-+    21f4:	09f020ef          	jal	4a92 <sbrk>
-+    21f8:	87aa                	mv	a5,a0
-   for(char *pp = a; pp < eee; pp += 4096)
--    224e:	00a4f963          	bgeu	s1,a0,2260 <sbrkmuch+0x4a>
-+    21fa:	00a4f963          	bgeu	s1,a0,220c <sbrkmuch+0x4a>
-     *pp = 1;
--    2252:	4685                	li	a3,1
-+    21fe:	4685                	li	a3,1
-   for(char *pp = a; pp < eee; pp += 4096)
--    2254:	6705                	lui	a4,0x1
-+    2200:	6705                	lui	a4,0x1
-     *pp = 1;
--    2256:	00d48023          	sb	a3,0(s1)
-+    2202:	00d48023          	sb	a3,0(s1)
-   for(char *pp = a; pp < eee; pp += 4096)
--    225a:	94ba                	add	s1,s1,a4
--    225c:	fef4ede3          	bltu	s1,a5,2256 <sbrkmuch+0x40>
-+    2206:	94ba                	add	s1,s1,a4
-+    2208:	fef4ede3          	bltu	s1,a5,2202 <sbrkmuch+0x40>
-   *lastaddr = 99;
--    2260:	064007b7          	lui	a5,0x6400
--    2264:	06300713          	li	a4,99
--    2268:	fee78fa3          	sb	a4,-1(a5) # 63fffff <base+0x63f0387>
-+    220c:	064007b7          	lui	a5,0x6400
-+    2210:	06300713          	li	a4,99
-+    2214:	fee78fa3          	sb	a4,-1(a5) # 63fffff <base+0x63f1387>
-   a = sbrk(0);
--    226c:	4501                	li	a0,0
--    226e:	09b020ef          	jal	4b08 <sbrk>
--    2272:	84aa                	mv	s1,a0
-+    2218:	4501                	li	a0,0
-+    221a:	079020ef          	jal	4a92 <sbrk>
-+    221e:	84aa                	mv	s1,a0
-   c = sbrk(-PGSIZE);
--    2274:	757d                	lui	a0,0xfffff
--    2276:	093020ef          	jal	4b08 <sbrk>
-+    2220:	757d                	lui	a0,0xfffff
-+    2222:	071020ef          	jal	4a92 <sbrk>
-   if(c == (char*)0xffffffffffffffffL){
--    227a:	57fd                	li	a5,-1
--    227c:	08f50163          	beq	a0,a5,22fe <sbrkmuch+0xe8>
-+    2226:	57fd                	li	a5,-1
-+    2228:	08f50163          	beq	a0,a5,22aa <sbrkmuch+0xe8>
-   c = sbrk(0);
--    2280:	4501                	li	a0,0
--    2282:	087020ef          	jal	4b08 <sbrk>
-+    222c:	4501                	li	a0,0
-+    222e:	065020ef          	jal	4a92 <sbrk>
-   if(c != a - PGSIZE){
--    2286:	77fd                	lui	a5,0xfffff
--    2288:	97a6                	add	a5,a5,s1
--    228a:	08f51463          	bne	a0,a5,2312 <sbrkmuch+0xfc>
-+    2232:	77fd                	lui	a5,0xfffff
-+    2234:	97a6                	add	a5,a5,s1
-+    2236:	08f51463          	bne	a0,a5,22be <sbrkmuch+0xfc>
-   a = sbrk(0);
--    228e:	4501                	li	a0,0
--    2290:	079020ef          	jal	4b08 <sbrk>
--    2294:	84aa                	mv	s1,a0
-+    223a:	4501                	li	a0,0
-+    223c:	057020ef          	jal	4a92 <sbrk>
-+    2240:	84aa                	mv	s1,a0
-   c = sbrk(PGSIZE);
--    2296:	6505                	lui	a0,0x1
--    2298:	071020ef          	jal	4b08 <sbrk>
--    229c:	8a2a                	mv	s4,a0
-+    2242:	6505                	lui	a0,0x1
-+    2244:	04f020ef          	jal	4a92 <sbrk>
-+    2248:	8a2a                	mv	s4,a0
-   if(c != a || sbrk(0) != a + PGSIZE){
--    229e:	08a49663          	bne	s1,a0,232a <sbrkmuch+0x114>
--    22a2:	4501                	li	a0,0
--    22a4:	065020ef          	jal	4b08 <sbrk>
--    22a8:	6785                	lui	a5,0x1
--    22aa:	97a6                	add	a5,a5,s1
--    22ac:	06f51f63          	bne	a0,a5,232a <sbrkmuch+0x114>
-+    224a:	08a49663          	bne	s1,a0,22d6 <sbrkmuch+0x114>
-+    224e:	4501                	li	a0,0
-+    2250:	043020ef          	jal	4a92 <sbrk>
-+    2254:	6785                	lui	a5,0x1
-+    2256:	97a6                	add	a5,a5,s1
-+    2258:	06f51f63          	bne	a0,a5,22d6 <sbrkmuch+0x114>
-   if(*lastaddr == 99){
--    22b0:	064007b7          	lui	a5,0x6400
--    22b4:	fff7c703          	lbu	a4,-1(a5) # 63fffff <base+0x63f0387>
--    22b8:	06300793          	li	a5,99
--    22bc:	08f70363          	beq	a4,a5,2342 <sbrkmuch+0x12c>
-+    225c:	064007b7          	lui	a5,0x6400
-+    2260:	fff7c703          	lbu	a4,-1(a5) # 63fffff <base+0x63f1387>
-+    2264:	06300793          	li	a5,99
-+    2268:	08f70363          	beq	a4,a5,22ee <sbrkmuch+0x12c>
-   a = sbrk(0);
--    22c0:	4501                	li	a0,0
--    22c2:	047020ef          	jal	4b08 <sbrk>
--    22c6:	84aa                	mv	s1,a0
-+    226c:	4501                	li	a0,0
-+    226e:	025020ef          	jal	4a92 <sbrk>
-+    2272:	84aa                	mv	s1,a0
-   c = sbrk(-(sbrk(0) - oldbrk));
--    22c8:	4501                	li	a0,0
--    22ca:	03f020ef          	jal	4b08 <sbrk>
--    22ce:	40a9053b          	subw	a0,s2,a0
--    22d2:	037020ef          	jal	4b08 <sbrk>
-+    2274:	4501                	li	a0,0
-+    2276:	01d020ef          	jal	4a92 <sbrk>
-+    227a:	40a9053b          	subw	a0,s2,a0
-+    227e:	015020ef          	jal	4a92 <sbrk>
-   if(c != a){
--    22d6:	08a49063          	bne	s1,a0,2356 <sbrkmuch+0x140>
-+    2282:	08a49063          	bne	s1,a0,2302 <sbrkmuch+0x140>
- }
--    22da:	70a2                	ld	ra,40(sp)
--    22dc:	7402                	ld	s0,32(sp)
--    22de:	64e2                	ld	s1,24(sp)
--    22e0:	6942                	ld	s2,16(sp)
--    22e2:	69a2                	ld	s3,8(sp)
--    22e4:	6a02                	ld	s4,0(sp)
--    22e6:	6145                	addi	sp,sp,48
--    22e8:	8082                	ret
-+    2286:	70a2                	ld	ra,40(sp)
-+    2288:	7402                	ld	s0,32(sp)
-+    228a:	64e2                	ld	s1,24(sp)
-+    228c:	6942                	ld	s2,16(sp)
-+    228e:	69a2                	ld	s3,8(sp)
-+    2290:	6a02                	ld	s4,0(sp)
-+    2292:	6145                	add	sp,sp,48
-+    2294:	8082                	ret
-     printf("%s: sbrk test failed to grow big address space; enough phys mem?\n", s);
--    22ea:	85ce                	mv	a1,s3
--    22ec:	00004517          	auipc	a0,0x4
--    22f0:	aec50513          	addi	a0,a0,-1300 # 5dd8 <malloc+0xe8c>
--    22f4:	3a5020ef          	jal	4e98 <printf>
-+    2296:	85ce                	mv	a1,s3
-+    2298:	00004517          	auipc	a0,0x4
-+    229c:	ab050513          	add	a0,a0,-1360 # 5d48 <malloc+0xe70>
-+    22a0:	385020ef          	jal	4e24 <printf>
-     exit(1);
--    22f8:	4505                	li	a0,1
--    22fa:	786020ef          	jal	4a80 <exit>
-+    22a4:	4505                	li	a0,1
-+    22a6:	764020ef          	jal	4a0a <exit>
-     printf("%s: sbrk could not deallocate\n", s);
--    22fe:	85ce                	mv	a1,s3
--    2300:	00004517          	auipc	a0,0x4
--    2304:	b2050513          	addi	a0,a0,-1248 # 5e20 <malloc+0xed4>
--    2308:	391020ef          	jal	4e98 <printf>
-+    22aa:	85ce                	mv	a1,s3
-+    22ac:	00004517          	auipc	a0,0x4
-+    22b0:	ae450513          	add	a0,a0,-1308 # 5d90 <malloc+0xeb8>
-+    22b4:	371020ef          	jal	4e24 <printf>
-     exit(1);
--    230c:	4505                	li	a0,1
--    230e:	772020ef          	jal	4a80 <exit>
-+    22b8:	4505                	li	a0,1
-+    22ba:	750020ef          	jal	4a0a <exit>
-     printf("%s: sbrk deallocation produced wrong address, a %p c %p\n", s, a, c);
--    2312:	86aa                	mv	a3,a0
--    2314:	8626                	mv	a2,s1
--    2316:	85ce                	mv	a1,s3
--    2318:	00004517          	auipc	a0,0x4
--    231c:	b2850513          	addi	a0,a0,-1240 # 5e40 <malloc+0xef4>
--    2320:	379020ef          	jal	4e98 <printf>
--    exit(1);
--    2324:	4505                	li	a0,1
--    2326:	75a020ef          	jal	4a80 <exit>
-+    22be:	86aa                	mv	a3,a0
-+    22c0:	8626                	mv	a2,s1
-+    22c2:	85ce                	mv	a1,s3
-+    22c4:	00004517          	auipc	a0,0x4
-+    22c8:	aec50513          	add	a0,a0,-1300 # 5db0 <malloc+0xed8>
-+    22cc:	359020ef          	jal	4e24 <printf>
-+    exit(1);
-+    22d0:	4505                	li	a0,1
-+    22d2:	738020ef          	jal	4a0a <exit>
-     printf("%s: sbrk re-allocation failed, a %p c %p\n", s, a, c);
--    232a:	86d2                	mv	a3,s4
--    232c:	8626                	mv	a2,s1
--    232e:	85ce                	mv	a1,s3
--    2330:	00004517          	auipc	a0,0x4
--    2334:	b5050513          	addi	a0,a0,-1200 # 5e80 <malloc+0xf34>
--    2338:	361020ef          	jal	4e98 <printf>
--    exit(1);
--    233c:	4505                	li	a0,1
--    233e:	742020ef          	jal	4a80 <exit>
-+    22d6:	86d2                	mv	a3,s4
-+    22d8:	8626                	mv	a2,s1
-+    22da:	85ce                	mv	a1,s3
-+    22dc:	00004517          	auipc	a0,0x4
-+    22e0:	b1450513          	add	a0,a0,-1260 # 5df0 <malloc+0xf18>
-+    22e4:	341020ef          	jal	4e24 <printf>
-+    exit(1);
-+    22e8:	4505                	li	a0,1
-+    22ea:	720020ef          	jal	4a0a <exit>
-     printf("%s: sbrk de-allocation didn't really deallocate\n", s);
--    2342:	85ce                	mv	a1,s3
--    2344:	00004517          	auipc	a0,0x4
--    2348:	b6c50513          	addi	a0,a0,-1172 # 5eb0 <malloc+0xf64>
--    234c:	34d020ef          	jal	4e98 <printf>
-+    22ee:	85ce                	mv	a1,s3
-+    22f0:	00004517          	auipc	a0,0x4
-+    22f4:	b3050513          	add	a0,a0,-1232 # 5e20 <malloc+0xf48>
-+    22f8:	32d020ef          	jal	4e24 <printf>
-     exit(1);
--    2350:	4505                	li	a0,1
--    2352:	72e020ef          	jal	4a80 <exit>
-+    22fc:	4505                	li	a0,1
-+    22fe:	70c020ef          	jal	4a0a <exit>
-     printf("%s: sbrk downsize failed, a %p c %p\n", s, a, c);
--    2356:	86aa                	mv	a3,a0
--    2358:	8626                	mv	a2,s1
--    235a:	85ce                	mv	a1,s3
--    235c:	00004517          	auipc	a0,0x4
--    2360:	b8c50513          	addi	a0,a0,-1140 # 5ee8 <malloc+0xf9c>
--    2364:	335020ef          	jal	4e98 <printf>
-+    2302:	86aa                	mv	a3,a0
-+    2304:	8626                	mv	a2,s1
-+    2306:	85ce                	mv	a1,s3
-+    2308:	00004517          	auipc	a0,0x4
-+    230c:	b5050513          	add	a0,a0,-1200 # 5e58 <malloc+0xf80>
-+    2310:	315020ef          	jal	4e24 <printf>
-     exit(1);
--    2368:	4505                	li	a0,1
--    236a:	716020ef          	jal	4a80 <exit>
-+    2314:	4505                	li	a0,1
-+    2316:	6f4020ef          	jal	4a0a <exit>
- 
--000000000000236e <sbrkarg>:
-+000000000000231a <sbrkarg>:
- {
--    236e:	7179                	addi	sp,sp,-48
--    2370:	f406                	sd	ra,40(sp)
--    2372:	f022                	sd	s0,32(sp)
--    2374:	ec26                	sd	s1,24(sp)
--    2376:	e84a                	sd	s2,16(sp)
--    2378:	e44e                	sd	s3,8(sp)
--    237a:	1800                	addi	s0,sp,48
--    237c:	89aa                	mv	s3,a0
-+    231a:	7179                	add	sp,sp,-48
-+    231c:	f406                	sd	ra,40(sp)
-+    231e:	f022                	sd	s0,32(sp)
-+    2320:	ec26                	sd	s1,24(sp)
-+    2322:	e84a                	sd	s2,16(sp)
-+    2324:	e44e                	sd	s3,8(sp)
-+    2326:	1800                	add	s0,sp,48
-+    2328:	89aa                	mv	s3,a0
-   a = sbrk(PGSIZE);
--    237e:	6505                	lui	a0,0x1
--    2380:	788020ef          	jal	4b08 <sbrk>
--    2384:	892a                	mv	s2,a0
-+    232a:	6505                	lui	a0,0x1
-+    232c:	766020ef          	jal	4a92 <sbrk>
-+    2330:	892a                	mv	s2,a0
-   fd = open("sbrk", O_CREATE|O_WRONLY);
--    2386:	20100593          	li	a1,513
--    238a:	00004517          	auipc	a0,0x4
--    238e:	b8650513          	addi	a0,a0,-1146 # 5f10 <malloc+0xfc4>
--    2392:	72e020ef          	jal	4ac0 <open>
--    2396:	84aa                	mv	s1,a0
-+    2332:	20100593          	li	a1,513
-+    2336:	00004517          	auipc	a0,0x4
-+    233a:	b4a50513          	add	a0,a0,-1206 # 5e80 <malloc+0xfa8>
-+    233e:	70c020ef          	jal	4a4a <open>
-+    2342:	84aa                	mv	s1,a0
-   unlink("sbrk");
--    2398:	00004517          	auipc	a0,0x4
--    239c:	b7850513          	addi	a0,a0,-1160 # 5f10 <malloc+0xfc4>
--    23a0:	730020ef          	jal	4ad0 <unlink>
-+    2344:	00004517          	auipc	a0,0x4
-+    2348:	b3c50513          	add	a0,a0,-1220 # 5e80 <malloc+0xfa8>
-+    234c:	70e020ef          	jal	4a5a <unlink>
-   if(fd < 0)  {
--    23a4:	0204c963          	bltz	s1,23d6 <sbrkarg+0x68>
-+    2350:	0204c963          	bltz	s1,2382 <sbrkarg+0x68>
-   if ((n = write(fd, a, PGSIZE)) < 0) {
--    23a8:	6605                	lui	a2,0x1
--    23aa:	85ca                	mv	a1,s2
--    23ac:	8526                	mv	a0,s1
--    23ae:	6f2020ef          	jal	4aa0 <write>
--    23b2:	02054c63          	bltz	a0,23ea <sbrkarg+0x7c>
-+    2354:	6605                	lui	a2,0x1
-+    2356:	85ca                	mv	a1,s2
-+    2358:	8526                	mv	a0,s1
-+    235a:	6d0020ef          	jal	4a2a <write>
-+    235e:	02054c63          	bltz	a0,2396 <sbrkarg+0x7c>
-   close(fd);
--    23b6:	8526                	mv	a0,s1
--    23b8:	6f0020ef          	jal	4aa8 <close>
-+    2362:	8526                	mv	a0,s1
-+    2364:	6ce020ef          	jal	4a32 <close>
-   a = sbrk(PGSIZE);
--    23bc:	6505                	lui	a0,0x1
--    23be:	74a020ef          	jal	4b08 <sbrk>
-+    2368:	6505                	lui	a0,0x1
-+    236a:	728020ef          	jal	4a92 <sbrk>
-   if(pipe((int *) a) != 0){
--    23c2:	6ce020ef          	jal	4a90 <pipe>
--    23c6:	ed05                	bnez	a0,23fe <sbrkarg+0x90>
-+    236e:	6ac020ef          	jal	4a1a <pipe>
-+    2372:	ed05                	bnez	a0,23aa <sbrkarg+0x90>
- }
--    23c8:	70a2                	ld	ra,40(sp)
--    23ca:	7402                	ld	s0,32(sp)
--    23cc:	64e2                	ld	s1,24(sp)
--    23ce:	6942                	ld	s2,16(sp)
--    23d0:	69a2                	ld	s3,8(sp)
--    23d2:	6145                	addi	sp,sp,48
--    23d4:	8082                	ret
-+    2374:	70a2                	ld	ra,40(sp)
-+    2376:	7402                	ld	s0,32(sp)
-+    2378:	64e2                	ld	s1,24(sp)
-+    237a:	6942                	ld	s2,16(sp)
-+    237c:	69a2                	ld	s3,8(sp)
-+    237e:	6145                	add	sp,sp,48
-+    2380:	8082                	ret
-     printf("%s: open sbrk failed\n", s);
--    23d6:	85ce                	mv	a1,s3
--    23d8:	00004517          	auipc	a0,0x4
--    23dc:	b4050513          	addi	a0,a0,-1216 # 5f18 <malloc+0xfcc>
--    23e0:	2b9020ef          	jal	4e98 <printf>
-+    2382:	85ce                	mv	a1,s3
-+    2384:	00004517          	auipc	a0,0x4
-+    2388:	b0450513          	add	a0,a0,-1276 # 5e88 <malloc+0xfb0>
-+    238c:	299020ef          	jal	4e24 <printf>
-     exit(1);
--    23e4:	4505                	li	a0,1
--    23e6:	69a020ef          	jal	4a80 <exit>
-+    2390:	4505                	li	a0,1
-+    2392:	678020ef          	jal	4a0a <exit>
-     printf("%s: write sbrk failed\n", s);
--    23ea:	85ce                	mv	a1,s3
--    23ec:	00004517          	auipc	a0,0x4
--    23f0:	b4450513          	addi	a0,a0,-1212 # 5f30 <malloc+0xfe4>
--    23f4:	2a5020ef          	jal	4e98 <printf>
-+    2396:	85ce                	mv	a1,s3
-+    2398:	00004517          	auipc	a0,0x4
-+    239c:	b0850513          	add	a0,a0,-1272 # 5ea0 <malloc+0xfc8>
-+    23a0:	285020ef          	jal	4e24 <printf>
-     exit(1);
--    23f8:	4505                	li	a0,1
--    23fa:	686020ef          	jal	4a80 <exit>
-+    23a4:	4505                	li	a0,1
-+    23a6:	664020ef          	jal	4a0a <exit>
-     printf("%s: pipe() failed\n", s);
--    23fe:	85ce                	mv	a1,s3
--    2400:	00003517          	auipc	a0,0x3
--    2404:	62050513          	addi	a0,a0,1568 # 5a20 <malloc+0xad4>
--    2408:	291020ef          	jal	4e98 <printf>
-+    23aa:	85ce                	mv	a1,s3
-+    23ac:	00003517          	auipc	a0,0x3
-+    23b0:	5e450513          	add	a0,a0,1508 # 5990 <malloc+0xab8>
-+    23b4:	271020ef          	jal	4e24 <printf>
-     exit(1);
--    240c:	4505                	li	a0,1
--    240e:	672020ef          	jal	4a80 <exit>
-+    23b8:	4505                	li	a0,1
-+    23ba:	650020ef          	jal	4a0a <exit>
- 
--0000000000002412 <argptest>:
-+00000000000023be <argptest>:
- {
--    2412:	1101                	addi	sp,sp,-32
--    2414:	ec06                	sd	ra,24(sp)
--    2416:	e822                	sd	s0,16(sp)
--    2418:	e426                	sd	s1,8(sp)
--    241a:	e04a                	sd	s2,0(sp)
--    241c:	1000                	addi	s0,sp,32
--    241e:	892a                	mv	s2,a0
-+    23be:	1101                	add	sp,sp,-32
-+    23c0:	ec06                	sd	ra,24(sp)
-+    23c2:	e822                	sd	s0,16(sp)
-+    23c4:	e426                	sd	s1,8(sp)
-+    23c6:	e04a                	sd	s2,0(sp)
-+    23c8:	1000                	add	s0,sp,32
-+    23ca:	892a                	mv	s2,a0
-   fd = open("init", O_RDONLY);
--    2420:	4581                	li	a1,0
--    2422:	00004517          	auipc	a0,0x4
--    2426:	b2650513          	addi	a0,a0,-1242 # 5f48 <malloc+0xffc>
--    242a:	696020ef          	jal	4ac0 <open>
-+    23cc:	4581                	li	a1,0
-+    23ce:	00004517          	auipc	a0,0x4
-+    23d2:	aea50513          	add	a0,a0,-1302 # 5eb8 <malloc+0xfe0>
-+    23d6:	674020ef          	jal	4a4a <open>
-   if (fd < 0) {
--    242e:	02054563          	bltz	a0,2458 <argptest+0x46>
--    2432:	84aa                	mv	s1,a0
-+    23da:	02054563          	bltz	a0,2404 <argptest+0x46>
-+    23de:	84aa                	mv	s1,a0
-   read(fd, sbrk(0) - 1, -1);
--    2434:	4501                	li	a0,0
--    2436:	6d2020ef          	jal	4b08 <sbrk>
--    243a:	567d                	li	a2,-1
--    243c:	fff50593          	addi	a1,a0,-1
--    2440:	8526                	mv	a0,s1
--    2442:	656020ef          	jal	4a98 <read>
-+    23e0:	4501                	li	a0,0
-+    23e2:	6b0020ef          	jal	4a92 <sbrk>
-+    23e6:	567d                	li	a2,-1
-+    23e8:	fff50593          	add	a1,a0,-1
-+    23ec:	8526                	mv	a0,s1
-+    23ee:	634020ef          	jal	4a22 <read>
-   close(fd);
--    2446:	8526                	mv	a0,s1
--    2448:	660020ef          	jal	4aa8 <close>
-+    23f2:	8526                	mv	a0,s1
-+    23f4:	63e020ef          	jal	4a32 <close>
- }
--    244c:	60e2                	ld	ra,24(sp)
--    244e:	6442                	ld	s0,16(sp)
--    2450:	64a2                	ld	s1,8(sp)
--    2452:	6902                	ld	s2,0(sp)
--    2454:	6105                	addi	sp,sp,32
--    2456:	8082                	ret
-+    23f8:	60e2                	ld	ra,24(sp)
-+    23fa:	6442                	ld	s0,16(sp)
-+    23fc:	64a2                	ld	s1,8(sp)
-+    23fe:	6902                	ld	s2,0(sp)
-+    2400:	6105                	add	sp,sp,32
-+    2402:	8082                	ret
-     printf("%s: open failed\n", s);
--    2458:	85ca                	mv	a1,s2
--    245a:	00003517          	auipc	a0,0x3
--    245e:	4d650513          	addi	a0,a0,1238 # 5930 <malloc+0x9e4>
--    2462:	237020ef          	jal	4e98 <printf>
-+    2404:	85ca                	mv	a1,s2
-+    2406:	00003517          	auipc	a0,0x3
-+    240a:	49a50513          	add	a0,a0,1178 # 58a0 <malloc+0x9c8>
-+    240e:	217020ef          	jal	4e24 <printf>
-     exit(1);
--    2466:	4505                	li	a0,1
--    2468:	618020ef          	jal	4a80 <exit>
-+    2412:	4505                	li	a0,1
-+    2414:	5f6020ef          	jal	4a0a <exit>
- 
--000000000000246c <sbrkbugs>:
-+0000000000002418 <sbrkbugs>:
- {
--    246c:	1141                	addi	sp,sp,-16
--    246e:	e406                	sd	ra,8(sp)
--    2470:	e022                	sd	s0,0(sp)
--    2472:	0800                	addi	s0,sp,16
-+    2418:	1141                	add	sp,sp,-16
-+    241a:	e406                	sd	ra,8(sp)
-+    241c:	e022                	sd	s0,0(sp)
-+    241e:	0800                	add	s0,sp,16
-   int pid = fork();
--    2474:	604020ef          	jal	4a78 <fork>
-+    2420:	5e2020ef          	jal	4a02 <fork>
-   if(pid < 0){
--    2478:	00054c63          	bltz	a0,2490 <sbrkbugs+0x24>
-+    2424:	00054c63          	bltz	a0,243c <sbrkbugs+0x24>
-   if(pid == 0){
--    247c:	e11d                	bnez	a0,24a2 <sbrkbugs+0x36>
-+    2428:	e11d                	bnez	a0,244e <sbrkbugs+0x36>
-     int sz = (uint64) sbrk(0);
--    247e:	68a020ef          	jal	4b08 <sbrk>
-+    242a:	668020ef          	jal	4a92 <sbrk>
-     sbrk(-sz);
--    2482:	40a0053b          	negw	a0,a0
--    2486:	682020ef          	jal	4b08 <sbrk>
-+    242e:	40a0053b          	negw	a0,a0
-+    2432:	660020ef          	jal	4a92 <sbrk>
-     exit(0);
--    248a:	4501                	li	a0,0
--    248c:	5f4020ef          	jal	4a80 <exit>
-+    2436:	4501                	li	a0,0
-+    2438:	5d2020ef          	jal	4a0a <exit>
-     printf("fork failed\n");
--    2490:	00005517          	auipc	a0,0x5
--    2494:	9f850513          	addi	a0,a0,-1544 # 6e88 <malloc+0x1f3c>
--    2498:	201020ef          	jal	4e98 <printf>
-+    243c:	00005517          	auipc	a0,0x5
-+    2440:	9bc50513          	add	a0,a0,-1604 # 6df8 <malloc+0x1f20>
-+    2444:	1e1020ef          	jal	4e24 <printf>
-     exit(1);
--    249c:	4505                	li	a0,1
--    249e:	5e2020ef          	jal	4a80 <exit>
-+    2448:	4505                	li	a0,1
-+    244a:	5c0020ef          	jal	4a0a <exit>
-   wait(0);
--    24a2:	4501                	li	a0,0
--    24a4:	5e4020ef          	jal	4a88 <wait>
-+    244e:	4501                	li	a0,0
-+    2450:	5c2020ef          	jal	4a12 <wait>
-   pid = fork();
--    24a8:	5d0020ef          	jal	4a78 <fork>
-+    2454:	5ae020ef          	jal	4a02 <fork>
-   if(pid < 0){
--    24ac:	00054f63          	bltz	a0,24ca <sbrkbugs+0x5e>
-+    2458:	00054f63          	bltz	a0,2476 <sbrkbugs+0x5e>
-   if(pid == 0){
--    24b0:	e515                	bnez	a0,24dc <sbrkbugs+0x70>
-+    245c:	e515                	bnez	a0,2488 <sbrkbugs+0x70>
-     int sz = (uint64) sbrk(0);
--    24b2:	656020ef          	jal	4b08 <sbrk>
-+    245e:	634020ef          	jal	4a92 <sbrk>
-     sbrk(-(sz - 3500));
--    24b6:	6785                	lui	a5,0x1
--    24b8:	dac7879b          	addiw	a5,a5,-596 # dac <linktest+0x138>
--    24bc:	40a7853b          	subw	a0,a5,a0
--    24c0:	648020ef          	jal	4b08 <sbrk>
-+    2462:	6785                	lui	a5,0x1
-+    2464:	dac7879b          	addw	a5,a5,-596 # dac <linktest+0x138>
-+    2468:	40a7853b          	subw	a0,a5,a0
-+    246c:	626020ef          	jal	4a92 <sbrk>
-     exit(0);
--    24c4:	4501                	li	a0,0
--    24c6:	5ba020ef          	jal	4a80 <exit>
-+    2470:	4501                	li	a0,0
-+    2472:	598020ef          	jal	4a0a <exit>
-     printf("fork failed\n");
--    24ca:	00005517          	auipc	a0,0x5
--    24ce:	9be50513          	addi	a0,a0,-1602 # 6e88 <malloc+0x1f3c>
--    24d2:	1c7020ef          	jal	4e98 <printf>
-+    2476:	00005517          	auipc	a0,0x5
-+    247a:	98250513          	add	a0,a0,-1662 # 6df8 <malloc+0x1f20>
-+    247e:	1a7020ef          	jal	4e24 <printf>
-     exit(1);
--    24d6:	4505                	li	a0,1
--    24d8:	5a8020ef          	jal	4a80 <exit>
-+    2482:	4505                	li	a0,1
-+    2484:	586020ef          	jal	4a0a <exit>
-   wait(0);
--    24dc:	4501                	li	a0,0
--    24de:	5aa020ef          	jal	4a88 <wait>
-+    2488:	4501                	li	a0,0
-+    248a:	588020ef          	jal	4a12 <wait>
-   pid = fork();
--    24e2:	596020ef          	jal	4a78 <fork>
-+    248e:	574020ef          	jal	4a02 <fork>
-   if(pid < 0){
--    24e6:	02054263          	bltz	a0,250a <sbrkbugs+0x9e>
-+    2492:	02054263          	bltz	a0,24b6 <sbrkbugs+0x9e>
-   if(pid == 0){
--    24ea:	e90d                	bnez	a0,251c <sbrkbugs+0xb0>
-+    2496:	e90d                	bnez	a0,24c8 <sbrkbugs+0xb0>
-     sbrk((10*4096 + 2048) - (uint64)sbrk(0));
--    24ec:	61c020ef          	jal	4b08 <sbrk>
--    24f0:	67ad                	lui	a5,0xb
--    24f2:	8007879b          	addiw	a5,a5,-2048 # a800 <uninit+0x298>
--    24f6:	40a7853b          	subw	a0,a5,a0
--    24fa:	60e020ef          	jal	4b08 <sbrk>
-+    2498:	5fa020ef          	jal	4a92 <sbrk>
-+    249c:	67ad                	lui	a5,0xb
-+    249e:	8007879b          	addw	a5,a5,-2048 # a800 <uninit+0x1298>
-+    24a2:	40a7853b          	subw	a0,a5,a0
-+    24a6:	5ec020ef          	jal	4a92 <sbrk>
-     sbrk(-10);
--    24fe:	5559                	li	a0,-10
--    2500:	608020ef          	jal	4b08 <sbrk>
-+    24aa:	5559                	li	a0,-10
-+    24ac:	5e6020ef          	jal	4a92 <sbrk>
-     exit(0);
--    2504:	4501                	li	a0,0
--    2506:	57a020ef          	jal	4a80 <exit>
-+    24b0:	4501                	li	a0,0
-+    24b2:	558020ef          	jal	4a0a <exit>
-     printf("fork failed\n");
--    250a:	00005517          	auipc	a0,0x5
--    250e:	97e50513          	addi	a0,a0,-1666 # 6e88 <malloc+0x1f3c>
--    2512:	187020ef          	jal	4e98 <printf>
-+    24b6:	00005517          	auipc	a0,0x5
-+    24ba:	94250513          	add	a0,a0,-1726 # 6df8 <malloc+0x1f20>
-+    24be:	167020ef          	jal	4e24 <printf>
-     exit(1);
--    2516:	4505                	li	a0,1
--    2518:	568020ef          	jal	4a80 <exit>
-+    24c2:	4505                	li	a0,1
-+    24c4:	546020ef          	jal	4a0a <exit>
-   wait(0);
--    251c:	4501                	li	a0,0
--    251e:	56a020ef          	jal	4a88 <wait>
-+    24c8:	4501                	li	a0,0
-+    24ca:	548020ef          	jal	4a12 <wait>
-   exit(0);
--    2522:	4501                	li	a0,0
--    2524:	55c020ef          	jal	4a80 <exit>
-+    24ce:	4501                	li	a0,0
-+    24d0:	53a020ef          	jal	4a0a <exit>
- 
--0000000000002528 <sbrklast>:
-+00000000000024d4 <sbrklast>:
- {
--    2528:	7179                	addi	sp,sp,-48
--    252a:	f406                	sd	ra,40(sp)
--    252c:	f022                	sd	s0,32(sp)
--    252e:	ec26                	sd	s1,24(sp)
--    2530:	e84a                	sd	s2,16(sp)
--    2532:	e44e                	sd	s3,8(sp)
--    2534:	e052                	sd	s4,0(sp)
--    2536:	1800                	addi	s0,sp,48
-+    24d4:	7179                	add	sp,sp,-48
-+    24d6:	f406                	sd	ra,40(sp)
-+    24d8:	f022                	sd	s0,32(sp)
-+    24da:	ec26                	sd	s1,24(sp)
-+    24dc:	e84a                	sd	s2,16(sp)
-+    24de:	e44e                	sd	s3,8(sp)
-+    24e0:	e052                	sd	s4,0(sp)
-+    24e2:	1800                	add	s0,sp,48
-   uint64 top = (uint64) sbrk(0);
--    2538:	4501                	li	a0,0
--    253a:	5ce020ef          	jal	4b08 <sbrk>
-+    24e4:	4501                	li	a0,0
-+    24e6:	5ac020ef          	jal	4a92 <sbrk>
-   if((top % 4096) != 0)
--    253e:	03451793          	slli	a5,a0,0x34
--    2542:	ebad                	bnez	a5,25b4 <sbrklast+0x8c>
-+    24ea:	03451793          	sll	a5,a0,0x34
-+    24ee:	ebad                	bnez	a5,2560 <sbrklast+0x8c>
-   sbrk(4096);
--    2544:	6505                	lui	a0,0x1
--    2546:	5c2020ef          	jal	4b08 <sbrk>
-+    24f0:	6505                	lui	a0,0x1
-+    24f2:	5a0020ef          	jal	4a92 <sbrk>
-   sbrk(10);
--    254a:	4529                	li	a0,10
--    254c:	5bc020ef          	jal	4b08 <sbrk>
-+    24f6:	4529                	li	a0,10
-+    24f8:	59a020ef          	jal	4a92 <sbrk>
-   sbrk(-20);
--    2550:	5531                	li	a0,-20
--    2552:	5b6020ef          	jal	4b08 <sbrk>
-+    24fc:	5531                	li	a0,-20
-+    24fe:	594020ef          	jal	4a92 <sbrk>
-   top = (uint64) sbrk(0);
--    2556:	4501                	li	a0,0
--    2558:	5b0020ef          	jal	4b08 <sbrk>
--    255c:	84aa                	mv	s1,a0
-+    2502:	4501                	li	a0,0
-+    2504:	58e020ef          	jal	4a92 <sbrk>
-+    2508:	84aa                	mv	s1,a0
-   char *p = (char *) (top - 64);
--    255e:	fc050913          	addi	s2,a0,-64 # fc0 <bigdir+0x122>
-+    250a:	fc050913          	add	s2,a0,-64 # fc0 <bigdir+0x122>
-   p[0] = 'x';
--    2562:	07800a13          	li	s4,120
--    2566:	fd450023          	sb	s4,-64(a0)
-+    250e:	07800a13          	li	s4,120
-+    2512:	fd450023          	sb	s4,-64(a0)
-   p[1] = '\0';
--    256a:	fc0500a3          	sb	zero,-63(a0)
-+    2516:	fc0500a3          	sb	zero,-63(a0)
-   int fd = open(p, O_RDWR|O_CREATE);
--    256e:	20200593          	li	a1,514
--    2572:	854a                	mv	a0,s2
--    2574:	54c020ef          	jal	4ac0 <open>
--    2578:	89aa                	mv	s3,a0
-+    251a:	20200593          	li	a1,514
-+    251e:	854a                	mv	a0,s2
-+    2520:	52a020ef          	jal	4a4a <open>
-+    2524:	89aa                	mv	s3,a0
-   write(fd, p, 1);
--    257a:	4605                	li	a2,1
--    257c:	85ca                	mv	a1,s2
--    257e:	522020ef          	jal	4aa0 <write>
-+    2526:	4605                	li	a2,1
-+    2528:	85ca                	mv	a1,s2
-+    252a:	500020ef          	jal	4a2a <write>
-   close(fd);
--    2582:	854e                	mv	a0,s3
--    2584:	524020ef          	jal	4aa8 <close>
-+    252e:	854e                	mv	a0,s3
-+    2530:	502020ef          	jal	4a32 <close>
-   fd = open(p, O_RDWR);
--    2588:	4589                	li	a1,2
--    258a:	854a                	mv	a0,s2
--    258c:	534020ef          	jal	4ac0 <open>
-+    2534:	4589                	li	a1,2
-+    2536:	854a                	mv	a0,s2
-+    2538:	512020ef          	jal	4a4a <open>
-   p[0] = '\0';
--    2590:	fc048023          	sb	zero,-64(s1)
-+    253c:	fc048023          	sb	zero,-64(s1)
-   read(fd, p, 1);
--    2594:	4605                	li	a2,1
--    2596:	85ca                	mv	a1,s2
--    2598:	500020ef          	jal	4a98 <read>
-+    2540:	4605                	li	a2,1
-+    2542:	85ca                	mv	a1,s2
-+    2544:	4de020ef          	jal	4a22 <read>
-   if(p[0] != 'x')
--    259c:	fc04c783          	lbu	a5,-64(s1)
--    25a0:	03479263          	bne	a5,s4,25c4 <sbrklast+0x9c>
-+    2548:	fc04c783          	lbu	a5,-64(s1)
-+    254c:	03479263          	bne	a5,s4,2570 <sbrklast+0x9c>
- }
--    25a4:	70a2                	ld	ra,40(sp)
--    25a6:	7402                	ld	s0,32(sp)
--    25a8:	64e2                	ld	s1,24(sp)
--    25aa:	6942                	ld	s2,16(sp)
--    25ac:	69a2                	ld	s3,8(sp)
--    25ae:	6a02                	ld	s4,0(sp)
--    25b0:	6145                	addi	sp,sp,48
--    25b2:	8082                	ret
-+    2550:	70a2                	ld	ra,40(sp)
-+    2552:	7402                	ld	s0,32(sp)
-+    2554:	64e2                	ld	s1,24(sp)
-+    2556:	6942                	ld	s2,16(sp)
-+    2558:	69a2                	ld	s3,8(sp)
-+    255a:	6a02                	ld	s4,0(sp)
-+    255c:	6145                	add	sp,sp,48
-+    255e:	8082                	ret
-     sbrk(4096 - (top % 4096));
--    25b4:	0347d513          	srli	a0,a5,0x34
--    25b8:	6785                	lui	a5,0x1
--    25ba:	40a7853b          	subw	a0,a5,a0
--    25be:	54a020ef          	jal	4b08 <sbrk>
--    25c2:	b749                	j	2544 <sbrklast+0x1c>
-+    2560:	0347d513          	srl	a0,a5,0x34
-+    2564:	6785                	lui	a5,0x1
-+    2566:	40a7853b          	subw	a0,a5,a0
-+    256a:	528020ef          	jal	4a92 <sbrk>
-+    256e:	b749                	j	24f0 <sbrklast+0x1c>
-     exit(1);
--    25c4:	4505                	li	a0,1
--    25c6:	4ba020ef          	jal	4a80 <exit>
-+    2570:	4505                	li	a0,1
-+    2572:	498020ef          	jal	4a0a <exit>
- 
--00000000000025ca <sbrk8000>:
-+0000000000002576 <sbrk8000>:
- {
--    25ca:	1141                	addi	sp,sp,-16
--    25cc:	e406                	sd	ra,8(sp)
--    25ce:	e022                	sd	s0,0(sp)
--    25d0:	0800                	addi	s0,sp,16
-+    2576:	1141                	add	sp,sp,-16
-+    2578:	e406                	sd	ra,8(sp)
-+    257a:	e022                	sd	s0,0(sp)
-+    257c:	0800                	add	s0,sp,16
-   sbrk(0x80000004);
--    25d2:	80000537          	lui	a0,0x80000
--    25d6:	0511                	addi	a0,a0,4 # ffffffff80000004 <base+0xffffffff7fff038c>
--    25d8:	530020ef          	jal	4b08 <sbrk>
-+    257e:	80000537          	lui	a0,0x80000
-+    2582:	0511                	add	a0,a0,4 # ffffffff80000004 <base+0xffffffff7fff138c>
-+    2584:	50e020ef          	jal	4a92 <sbrk>
-   volatile char *top = sbrk(0);
--    25dc:	4501                	li	a0,0
--    25de:	52a020ef          	jal	4b08 <sbrk>
-+    2588:	4501                	li	a0,0
-+    258a:	508020ef          	jal	4a92 <sbrk>
-   *(top-1) = *(top-1) + 1;
--    25e2:	fff54783          	lbu	a5,-1(a0)
--    25e6:	2785                	addiw	a5,a5,1 # 1001 <badarg+0x1>
--    25e8:	0ff7f793          	zext.b	a5,a5
--    25ec:	fef50fa3          	sb	a5,-1(a0)
-+    258e:	fff54783          	lbu	a5,-1(a0)
-+    2592:	2785                	addw	a5,a5,1 # 1001 <badarg+0x1>
-+    2594:	0ff7f793          	zext.b	a5,a5
-+    2598:	fef50fa3          	sb	a5,-1(a0)
- }
--    25f0:	60a2                	ld	ra,8(sp)
--    25f2:	6402                	ld	s0,0(sp)
--    25f4:	0141                	addi	sp,sp,16
--    25f6:	8082                	ret
-+    259c:	60a2                	ld	ra,8(sp)
-+    259e:	6402                	ld	s0,0(sp)
-+    25a0:	0141                	add	sp,sp,16
-+    25a2:	8082                	ret
- 
--00000000000025f8 <execout>:
-+00000000000025a4 <execout>:
- {
--    25f8:	715d                	addi	sp,sp,-80
--    25fa:	e486                	sd	ra,72(sp)
--    25fc:	e0a2                	sd	s0,64(sp)
--    25fe:	fc26                	sd	s1,56(sp)
--    2600:	f84a                	sd	s2,48(sp)
--    2602:	f44e                	sd	s3,40(sp)
--    2604:	f052                	sd	s4,32(sp)
--    2606:	0880                	addi	s0,sp,80
-+    25a4:	715d                	add	sp,sp,-80
-+    25a6:	e486                	sd	ra,72(sp)
-+    25a8:	e0a2                	sd	s0,64(sp)
-+    25aa:	fc26                	sd	s1,56(sp)
-+    25ac:	f84a                	sd	s2,48(sp)
-+    25ae:	f44e                	sd	s3,40(sp)
-+    25b0:	f052                	sd	s4,32(sp)
-+    25b2:	0880                	add	s0,sp,80
-   for(int avail = 0; avail < 15; avail++){
--    2608:	4901                	li	s2,0
--    260a:	49bd                	li	s3,15
-+    25b4:	4901                	li	s2,0
-+    25b6:	49bd                	li	s3,15
-     int pid = fork();
--    260c:	46c020ef          	jal	4a78 <fork>
--    2610:	84aa                	mv	s1,a0
-+    25b8:	44a020ef          	jal	4a02 <fork>
-+    25bc:	84aa                	mv	s1,a0
-     if(pid < 0){
--    2612:	00054c63          	bltz	a0,262a <execout+0x32>
-+    25be:	00054c63          	bltz	a0,25d6 <execout+0x32>
-     } else if(pid == 0){
--    2616:	c11d                	beqz	a0,263c <execout+0x44>
-+    25c2:	c11d                	beqz	a0,25e8 <execout+0x44>
-       wait((int*)0);
--    2618:	4501                	li	a0,0
--    261a:	46e020ef          	jal	4a88 <wait>
-+    25c4:	4501                	li	a0,0
-+    25c6:	44c020ef          	jal	4a12 <wait>
-   for(int avail = 0; avail < 15; avail++){
--    261e:	2905                	addiw	s2,s2,1
--    2620:	ff3916e3          	bne	s2,s3,260c <execout+0x14>
-+    25ca:	2905                	addw	s2,s2,1
-+    25cc:	ff3916e3          	bne	s2,s3,25b8 <execout+0x14>
-   exit(0);
--    2624:	4501                	li	a0,0
--    2626:	45a020ef          	jal	4a80 <exit>
-+    25d0:	4501                	li	a0,0
-+    25d2:	438020ef          	jal	4a0a <exit>
-       printf("fork failed\n");
--    262a:	00005517          	auipc	a0,0x5
--    262e:	85e50513          	addi	a0,a0,-1954 # 6e88 <malloc+0x1f3c>
--    2632:	067020ef          	jal	4e98 <printf>
-+    25d6:	00005517          	auipc	a0,0x5
-+    25da:	82250513          	add	a0,a0,-2014 # 6df8 <malloc+0x1f20>
-+    25de:	047020ef          	jal	4e24 <printf>
-       exit(1);
--    2636:	4505                	li	a0,1
--    2638:	448020ef          	jal	4a80 <exit>
-+    25e2:	4505                	li	a0,1
-+    25e4:	426020ef          	jal	4a0a <exit>
-         if(a == 0xffffffffffffffffLL)
--    263c:	59fd                	li	s3,-1
-+    25e8:	59fd                	li	s3,-1
-         *(char*)(a + 4096 - 1) = 1;
--    263e:	4a05                	li	s4,1
-+    25ea:	4a05                	li	s4,1
-         uint64 a = (uint64) sbrk(4096);
--    2640:	6505                	lui	a0,0x1
--    2642:	4c6020ef          	jal	4b08 <sbrk>
-+    25ec:	6505                	lui	a0,0x1
-+    25ee:	4a4020ef          	jal	4a92 <sbrk>
-         if(a == 0xffffffffffffffffLL)
--    2646:	01350763          	beq	a0,s3,2654 <execout+0x5c>
-+    25f2:	01350763          	beq	a0,s3,2600 <execout+0x5c>
-         *(char*)(a + 4096 - 1) = 1;
--    264a:	6785                	lui	a5,0x1
--    264c:	97aa                	add	a5,a5,a0
--    264e:	ff478fa3          	sb	s4,-1(a5) # fff <pgbug+0x2b>
-+    25f6:	6785                	lui	a5,0x1
-+    25f8:	97aa                	add	a5,a5,a0
-+    25fa:	ff478fa3          	sb	s4,-1(a5) # fff <pgbug+0x2b>
-       while(1){
--    2652:	b7fd                	j	2640 <execout+0x48>
-+    25fe:	b7fd                	j	25ec <execout+0x48>
-       for(int i = 0; i < avail; i++)
--    2654:	01205863          	blez	s2,2664 <execout+0x6c>
-+    2600:	01205863          	blez	s2,2610 <execout+0x6c>
-         sbrk(-4096);
--    2658:	757d                	lui	a0,0xfffff
--    265a:	4ae020ef          	jal	4b08 <sbrk>
-+    2604:	757d                	lui	a0,0xfffff
-+    2606:	48c020ef          	jal	4a92 <sbrk>
-       for(int i = 0; i < avail; i++)
--    265e:	2485                	addiw	s1,s1,1
--    2660:	ff249ce3          	bne	s1,s2,2658 <execout+0x60>
-+    260a:	2485                	addw	s1,s1,1
-+    260c:	ff249ce3          	bne	s1,s2,2604 <execout+0x60>
-       close(1);
--    2664:	4505                	li	a0,1
--    2666:	442020ef          	jal	4aa8 <close>
-+    2610:	4505                	li	a0,1
-+    2612:	420020ef          	jal	4a32 <close>
-       char *args[] = { "echo", "x", 0 };
--    266a:	00003517          	auipc	a0,0x3
--    266e:	a1e50513          	addi	a0,a0,-1506 # 5088 <malloc+0x13c>
--    2672:	faa43c23          	sd	a0,-72(s0)
--    2676:	00003797          	auipc	a5,0x3
--    267a:	a8278793          	addi	a5,a5,-1406 # 50f8 <malloc+0x1ac>
--    267e:	fcf43023          	sd	a5,-64(s0)
--    2682:	fc043423          	sd	zero,-56(s0)
-+    2616:	00003517          	auipc	a0,0x3
-+    261a:	9e250513          	add	a0,a0,-1566 # 4ff8 <malloc+0x120>
-+    261e:	faa43c23          	sd	a0,-72(s0)
-+    2622:	00003797          	auipc	a5,0x3
-+    2626:	a4678793          	add	a5,a5,-1466 # 5068 <malloc+0x190>
-+    262a:	fcf43023          	sd	a5,-64(s0)
-+    262e:	fc043423          	sd	zero,-56(s0)
-       exec("echo", args);
--    2686:	fb840593          	addi	a1,s0,-72
--    268a:	42e020ef          	jal	4ab8 <exec>
-+    2632:	fb840593          	add	a1,s0,-72
-+    2636:	40c020ef          	jal	4a42 <exec>
-       exit(0);
--    268e:	4501                	li	a0,0
--    2690:	3f0020ef          	jal	4a80 <exit>
-+    263a:	4501                	li	a0,0
-+    263c:	3ce020ef          	jal	4a0a <exit>
- 
--0000000000002694 <fourteen>:
-+0000000000002640 <fourteen>:
- {
--    2694:	1101                	addi	sp,sp,-32
--    2696:	ec06                	sd	ra,24(sp)
--    2698:	e822                	sd	s0,16(sp)
--    269a:	e426                	sd	s1,8(sp)
--    269c:	1000                	addi	s0,sp,32
--    269e:	84aa                	mv	s1,a0
-+    2640:	1101                	add	sp,sp,-32
-+    2642:	ec06                	sd	ra,24(sp)
-+    2644:	e822                	sd	s0,16(sp)
-+    2646:	e426                	sd	s1,8(sp)
-+    2648:	1000                	add	s0,sp,32
-+    264a:	84aa                	mv	s1,a0
-   if(mkdir("12345678901234") != 0){
--    26a0:	00004517          	auipc	a0,0x4
--    26a4:	a8050513          	addi	a0,a0,-1408 # 6120 <malloc+0x11d4>
--    26a8:	440020ef          	jal	4ae8 <mkdir>
--    26ac:	e555                	bnez	a0,2758 <fourteen+0xc4>
-+    264c:	00004517          	auipc	a0,0x4
-+    2650:	a4450513          	add	a0,a0,-1468 # 6090 <malloc+0x11b8>
-+    2654:	41e020ef          	jal	4a72 <mkdir>
-+    2658:	e555                	bnez	a0,2704 <fourteen+0xc4>
-   if(mkdir("12345678901234/123456789012345") != 0){
--    26ae:	00004517          	auipc	a0,0x4
--    26b2:	8ca50513          	addi	a0,a0,-1846 # 5f78 <malloc+0x102c>
--    26b6:	432020ef          	jal	4ae8 <mkdir>
--    26ba:	e94d                	bnez	a0,276c <fourteen+0xd8>
-+    265a:	00004517          	auipc	a0,0x4
-+    265e:	88e50513          	add	a0,a0,-1906 # 5ee8 <malloc+0x1010>
-+    2662:	410020ef          	jal	4a72 <mkdir>
-+    2666:	e94d                	bnez	a0,2718 <fourteen+0xd8>
-   fd = open("123456789012345/123456789012345/123456789012345", O_CREATE);
--    26bc:	20000593          	li	a1,512
--    26c0:	00004517          	auipc	a0,0x4
--    26c4:	91050513          	addi	a0,a0,-1776 # 5fd0 <malloc+0x1084>
--    26c8:	3f8020ef          	jal	4ac0 <open>
-+    2668:	20000593          	li	a1,512
-+    266c:	00004517          	auipc	a0,0x4
-+    2670:	8d450513          	add	a0,a0,-1836 # 5f40 <malloc+0x1068>
-+    2674:	3d6020ef          	jal	4a4a <open>
-   if(fd < 0){
--    26cc:	0a054a63          	bltz	a0,2780 <fourteen+0xec>
-+    2678:	0a054a63          	bltz	a0,272c <fourteen+0xec>
-   close(fd);
--    26d0:	3d8020ef          	jal	4aa8 <close>
-+    267c:	3b6020ef          	jal	4a32 <close>
-   fd = open("12345678901234/12345678901234/12345678901234", 0);
--    26d4:	4581                	li	a1,0
--    26d6:	00004517          	auipc	a0,0x4
--    26da:	97250513          	addi	a0,a0,-1678 # 6048 <malloc+0x10fc>
--    26de:	3e2020ef          	jal	4ac0 <open>
-+    2680:	4581                	li	a1,0
-+    2682:	00004517          	auipc	a0,0x4
-+    2686:	93650513          	add	a0,a0,-1738 # 5fb8 <malloc+0x10e0>
-+    268a:	3c0020ef          	jal	4a4a <open>
-   if(fd < 0){
--    26e2:	0a054963          	bltz	a0,2794 <fourteen+0x100>
-+    268e:	0a054963          	bltz	a0,2740 <fourteen+0x100>
-   close(fd);
--    26e6:	3c2020ef          	jal	4aa8 <close>
-+    2692:	3a0020ef          	jal	4a32 <close>
-   if(mkdir("12345678901234/12345678901234") == 0){
--    26ea:	00004517          	auipc	a0,0x4
--    26ee:	9ce50513          	addi	a0,a0,-1586 # 60b8 <malloc+0x116c>
--    26f2:	3f6020ef          	jal	4ae8 <mkdir>
--    26f6:	c94d                	beqz	a0,27a8 <fourteen+0x114>
-+    2696:	00004517          	auipc	a0,0x4
-+    269a:	99250513          	add	a0,a0,-1646 # 6028 <malloc+0x1150>
-+    269e:	3d4020ef          	jal	4a72 <mkdir>
-+    26a2:	c94d                	beqz	a0,2754 <fourteen+0x114>
-   if(mkdir("123456789012345/12345678901234") == 0){
--    26f8:	00004517          	auipc	a0,0x4
--    26fc:	a1850513          	addi	a0,a0,-1512 # 6110 <malloc+0x11c4>
--    2700:	3e8020ef          	jal	4ae8 <mkdir>
--    2704:	cd45                	beqz	a0,27bc <fourteen+0x128>
-+    26a4:	00004517          	auipc	a0,0x4
-+    26a8:	9dc50513          	add	a0,a0,-1572 # 6080 <malloc+0x11a8>
-+    26ac:	3c6020ef          	jal	4a72 <mkdir>
-+    26b0:	cd45                	beqz	a0,2768 <fourteen+0x128>
-   unlink("123456789012345/12345678901234");
--    2706:	00004517          	auipc	a0,0x4
--    270a:	a0a50513          	addi	a0,a0,-1526 # 6110 <malloc+0x11c4>
--    270e:	3c2020ef          	jal	4ad0 <unlink>
-+    26b2:	00004517          	auipc	a0,0x4
-+    26b6:	9ce50513          	add	a0,a0,-1586 # 6080 <malloc+0x11a8>
-+    26ba:	3a0020ef          	jal	4a5a <unlink>
-   unlink("12345678901234/12345678901234");
--    2712:	00004517          	auipc	a0,0x4
--    2716:	9a650513          	addi	a0,a0,-1626 # 60b8 <malloc+0x116c>
--    271a:	3b6020ef          	jal	4ad0 <unlink>
-+    26be:	00004517          	auipc	a0,0x4
-+    26c2:	96a50513          	add	a0,a0,-1686 # 6028 <malloc+0x1150>
-+    26c6:	394020ef          	jal	4a5a <unlink>
-   unlink("12345678901234/12345678901234/12345678901234");
--    271e:	00004517          	auipc	a0,0x4
--    2722:	92a50513          	addi	a0,a0,-1750 # 6048 <malloc+0x10fc>
--    2726:	3aa020ef          	jal	4ad0 <unlink>
-+    26ca:	00004517          	auipc	a0,0x4
-+    26ce:	8ee50513          	add	a0,a0,-1810 # 5fb8 <malloc+0x10e0>
-+    26d2:	388020ef          	jal	4a5a <unlink>
-   unlink("123456789012345/123456789012345/123456789012345");
--    272a:	00004517          	auipc	a0,0x4
--    272e:	8a650513          	addi	a0,a0,-1882 # 5fd0 <malloc+0x1084>
--    2732:	39e020ef          	jal	4ad0 <unlink>
-+    26d6:	00004517          	auipc	a0,0x4
-+    26da:	86a50513          	add	a0,a0,-1942 # 5f40 <malloc+0x1068>
-+    26de:	37c020ef          	jal	4a5a <unlink>
-   unlink("12345678901234/123456789012345");
--    2736:	00004517          	auipc	a0,0x4
--    273a:	84250513          	addi	a0,a0,-1982 # 5f78 <malloc+0x102c>
--    273e:	392020ef          	jal	4ad0 <unlink>
-+    26e2:	00004517          	auipc	a0,0x4
-+    26e6:	80650513          	add	a0,a0,-2042 # 5ee8 <malloc+0x1010>
-+    26ea:	370020ef          	jal	4a5a <unlink>
-   unlink("12345678901234");
--    2742:	00004517          	auipc	a0,0x4
--    2746:	9de50513          	addi	a0,a0,-1570 # 6120 <malloc+0x11d4>
--    274a:	386020ef          	jal	4ad0 <unlink>
-+    26ee:	00004517          	auipc	a0,0x4
-+    26f2:	9a250513          	add	a0,a0,-1630 # 6090 <malloc+0x11b8>
-+    26f6:	364020ef          	jal	4a5a <unlink>
- }
--    274e:	60e2                	ld	ra,24(sp)
--    2750:	6442                	ld	s0,16(sp)
--    2752:	64a2                	ld	s1,8(sp)
--    2754:	6105                	addi	sp,sp,32
--    2756:	8082                	ret
-+    26fa:	60e2                	ld	ra,24(sp)
-+    26fc:	6442                	ld	s0,16(sp)
-+    26fe:	64a2                	ld	s1,8(sp)
-+    2700:	6105                	add	sp,sp,32
-+    2702:	8082                	ret
-     printf("%s: mkdir 12345678901234 failed\n", s);
--    2758:	85a6                	mv	a1,s1
--    275a:	00003517          	auipc	a0,0x3
--    275e:	7f650513          	addi	a0,a0,2038 # 5f50 <malloc+0x1004>
--    2762:	736020ef          	jal	4e98 <printf>
-+    2704:	85a6                	mv	a1,s1
-+    2706:	00003517          	auipc	a0,0x3
-+    270a:	7ba50513          	add	a0,a0,1978 # 5ec0 <malloc+0xfe8>
-+    270e:	716020ef          	jal	4e24 <printf>
-     exit(1);
--    2766:	4505                	li	a0,1
--    2768:	318020ef          	jal	4a80 <exit>
-+    2712:	4505                	li	a0,1
-+    2714:	2f6020ef          	jal	4a0a <exit>
-     printf("%s: mkdir 12345678901234/123456789012345 failed\n", s);
--    276c:	85a6                	mv	a1,s1
--    276e:	00004517          	auipc	a0,0x4
--    2772:	82a50513          	addi	a0,a0,-2006 # 5f98 <malloc+0x104c>
--    2776:	722020ef          	jal	4e98 <printf>
-+    2718:	85a6                	mv	a1,s1
-+    271a:	00003517          	auipc	a0,0x3
-+    271e:	7ee50513          	add	a0,a0,2030 # 5f08 <malloc+0x1030>
-+    2722:	702020ef          	jal	4e24 <printf>
-     exit(1);
--    277a:	4505                	li	a0,1
--    277c:	304020ef          	jal	4a80 <exit>
-+    2726:	4505                	li	a0,1
-+    2728:	2e2020ef          	jal	4a0a <exit>
-     printf("%s: create 123456789012345/123456789012345/123456789012345 failed\n", s);
--    2780:	85a6                	mv	a1,s1
--    2782:	00004517          	auipc	a0,0x4
--    2786:	87e50513          	addi	a0,a0,-1922 # 6000 <malloc+0x10b4>
--    278a:	70e020ef          	jal	4e98 <printf>
-+    272c:	85a6                	mv	a1,s1
-+    272e:	00004517          	auipc	a0,0x4
-+    2732:	84250513          	add	a0,a0,-1982 # 5f70 <malloc+0x1098>
-+    2736:	6ee020ef          	jal	4e24 <printf>
-     exit(1);
--    278e:	4505                	li	a0,1
--    2790:	2f0020ef          	jal	4a80 <exit>
-+    273a:	4505                	li	a0,1
-+    273c:	2ce020ef          	jal	4a0a <exit>
-     printf("%s: open 12345678901234/12345678901234/12345678901234 failed\n", s);
--    2794:	85a6                	mv	a1,s1
--    2796:	00004517          	auipc	a0,0x4
--    279a:	8e250513          	addi	a0,a0,-1822 # 6078 <malloc+0x112c>
--    279e:	6fa020ef          	jal	4e98 <printf>
-+    2740:	85a6                	mv	a1,s1
-+    2742:	00004517          	auipc	a0,0x4
-+    2746:	8a650513          	add	a0,a0,-1882 # 5fe8 <malloc+0x1110>
-+    274a:	6da020ef          	jal	4e24 <printf>
-     exit(1);
--    27a2:	4505                	li	a0,1
--    27a4:	2dc020ef          	jal	4a80 <exit>
-+    274e:	4505                	li	a0,1
-+    2750:	2ba020ef          	jal	4a0a <exit>
-     printf("%s: mkdir 12345678901234/12345678901234 succeeded!\n", s);
--    27a8:	85a6                	mv	a1,s1
--    27aa:	00004517          	auipc	a0,0x4
--    27ae:	92e50513          	addi	a0,a0,-1746 # 60d8 <malloc+0x118c>
--    27b2:	6e6020ef          	jal	4e98 <printf>
-+    2754:	85a6                	mv	a1,s1
-+    2756:	00004517          	auipc	a0,0x4
-+    275a:	8f250513          	add	a0,a0,-1806 # 6048 <malloc+0x1170>
-+    275e:	6c6020ef          	jal	4e24 <printf>
-     exit(1);
--    27b6:	4505                	li	a0,1
--    27b8:	2c8020ef          	jal	4a80 <exit>
-+    2762:	4505                	li	a0,1
-+    2764:	2a6020ef          	jal	4a0a <exit>
-     printf("%s: mkdir 12345678901234/123456789012345 succeeded!\n", s);
--    27bc:	85a6                	mv	a1,s1
--    27be:	00004517          	auipc	a0,0x4
--    27c2:	97250513          	addi	a0,a0,-1678 # 6130 <malloc+0x11e4>
--    27c6:	6d2020ef          	jal	4e98 <printf>
-+    2768:	85a6                	mv	a1,s1
-+    276a:	00004517          	auipc	a0,0x4
-+    276e:	93650513          	add	a0,a0,-1738 # 60a0 <malloc+0x11c8>
-+    2772:	6b2020ef          	jal	4e24 <printf>
-     exit(1);
--    27ca:	4505                	li	a0,1
--    27cc:	2b4020ef          	jal	4a80 <exit>
-+    2776:	4505                	li	a0,1
-+    2778:	292020ef          	jal	4a0a <exit>
- 
--00000000000027d0 <diskfull>:
-+000000000000277c <diskfull>:
- {
--    27d0:	b8010113          	addi	sp,sp,-1152
--    27d4:	46113c23          	sd	ra,1144(sp)
--    27d8:	46813823          	sd	s0,1136(sp)
--    27dc:	46913423          	sd	s1,1128(sp)
--    27e0:	47213023          	sd	s2,1120(sp)
--    27e4:	45313c23          	sd	s3,1112(sp)
--    27e8:	45413823          	sd	s4,1104(sp)
--    27ec:	45513423          	sd	s5,1096(sp)
--    27f0:	45613023          	sd	s6,1088(sp)
--    27f4:	43713c23          	sd	s7,1080(sp)
--    27f8:	43813823          	sd	s8,1072(sp)
--    27fc:	43913423          	sd	s9,1064(sp)
--    2800:	48010413          	addi	s0,sp,1152
--    2804:	8caa                	mv	s9,a0
-+    277c:	b8010113          	add	sp,sp,-1152
-+    2780:	46113c23          	sd	ra,1144(sp)
-+    2784:	46813823          	sd	s0,1136(sp)
-+    2788:	46913423          	sd	s1,1128(sp)
-+    278c:	47213023          	sd	s2,1120(sp)
-+    2790:	45313c23          	sd	s3,1112(sp)
-+    2794:	45413823          	sd	s4,1104(sp)
-+    2798:	45513423          	sd	s5,1096(sp)
-+    279c:	45613023          	sd	s6,1088(sp)
-+    27a0:	43713c23          	sd	s7,1080(sp)
-+    27a4:	43813823          	sd	s8,1072(sp)
-+    27a8:	43913423          	sd	s9,1064(sp)
-+    27ac:	48010413          	add	s0,sp,1152
-+    27b0:	8caa                	mv	s9,a0
-   unlink("diskfulldir");
--    2806:	00004517          	auipc	a0,0x4
--    280a:	96250513          	addi	a0,a0,-1694 # 6168 <malloc+0x121c>
--    280e:	2c2020ef          	jal	4ad0 <unlink>
--    2812:	03000993          	li	s3,48
-+    27b2:	00004517          	auipc	a0,0x4
-+    27b6:	92650513          	add	a0,a0,-1754 # 60d8 <malloc+0x1200>
-+    27ba:	2a0020ef          	jal	4a5a <unlink>
-+    27be:	03000993          	li	s3,48
-     name[0] = 'b';
--    2816:	06200b13          	li	s6,98
-+    27c2:	06200b13          	li	s6,98
-     name[1] = 'i';
--    281a:	06900a93          	li	s5,105
-+    27c6:	06900a93          	li	s5,105
-     name[2] = 'g';
--    281e:	06700a13          	li	s4,103
--    2822:	10c00b93          	li	s7,268
-+    27ca:	06700a13          	li	s4,103
-+    27ce:	10c00b93          	li	s7,268
-   for(fi = 0; done == 0 && '0' + fi < 0177; fi++){
--    2826:	07f00c13          	li	s8,127
--    282a:	aab9                	j	2988 <diskfull+0x1b8>
-+    27d2:	07f00c13          	li	s8,127
-+    27d6:	aab9                	j	2934 <diskfull+0x1b8>
-       printf("%s: could not create file %s\n", s, name);
--    282c:	b8040613          	addi	a2,s0,-1152
--    2830:	85e6                	mv	a1,s9
--    2832:	00004517          	auipc	a0,0x4
--    2836:	94650513          	addi	a0,a0,-1722 # 6178 <malloc+0x122c>
--    283a:	65e020ef          	jal	4e98 <printf>
-+    27d8:	b8040613          	add	a2,s0,-1152
-+    27dc:	85e6                	mv	a1,s9
-+    27de:	00004517          	auipc	a0,0x4
-+    27e2:	90a50513          	add	a0,a0,-1782 # 60e8 <malloc+0x1210>
-+    27e6:	63e020ef          	jal	4e24 <printf>
-       break;
--    283e:	a039                	j	284c <diskfull+0x7c>
-+    27ea:	a039                	j	27f8 <diskfull+0x7c>
-         close(fd);
--    2840:	854a                	mv	a0,s2
--    2842:	266020ef          	jal	4aa8 <close>
-+    27ec:	854a                	mv	a0,s2
-+    27ee:	244020ef          	jal	4a32 <close>
-     close(fd);
--    2846:	854a                	mv	a0,s2
--    2848:	260020ef          	jal	4aa8 <close>
-+    27f2:	854a                	mv	a0,s2
-+    27f4:	23e020ef          	jal	4a32 <close>
-   for(int i = 0; i < nzz; i++){
--    284c:	4481                	li	s1,0
-+    27f8:	4481                	li	s1,0
-     name[0] = 'z';
--    284e:	07a00913          	li	s2,122
-+    27fa:	07a00913          	li	s2,122
-   for(int i = 0; i < nzz; i++){
--    2852:	08000993          	li	s3,128
-+    27fe:	08000993          	li	s3,128
-     name[0] = 'z';
--    2856:	bb240023          	sb	s2,-1120(s0)
-+    2802:	bb240023          	sb	s2,-1120(s0)
-     name[1] = 'z';
--    285a:	bb2400a3          	sb	s2,-1119(s0)
-+    2806:	bb2400a3          	sb	s2,-1119(s0)
-     name[2] = '0' + (i / 32);
--    285e:	41f4d71b          	sraiw	a4,s1,0x1f
--    2862:	01b7571b          	srliw	a4,a4,0x1b
--    2866:	009707bb          	addw	a5,a4,s1
--    286a:	4057d69b          	sraiw	a3,a5,0x5
--    286e:	0306869b          	addiw	a3,a3,48
--    2872:	bad40123          	sb	a3,-1118(s0)
-+    280a:	41f4d71b          	sraw	a4,s1,0x1f
-+    280e:	01b7571b          	srlw	a4,a4,0x1b
-+    2812:	009707bb          	addw	a5,a4,s1
-+    2816:	4057d69b          	sraw	a3,a5,0x5
-+    281a:	0306869b          	addw	a3,a3,48
-+    281e:	bad40123          	sb	a3,-1118(s0)
-     name[3] = '0' + (i % 32);
--    2876:	8bfd                	andi	a5,a5,31
--    2878:	9f99                	subw	a5,a5,a4
--    287a:	0307879b          	addiw	a5,a5,48
--    287e:	baf401a3          	sb	a5,-1117(s0)
-+    2822:	8bfd                	and	a5,a5,31
-+    2824:	9f99                	subw	a5,a5,a4
-+    2826:	0307879b          	addw	a5,a5,48
-+    282a:	baf401a3          	sb	a5,-1117(s0)
-     name[4] = '\0';
--    2882:	ba040223          	sb	zero,-1116(s0)
-+    282e:	ba040223          	sb	zero,-1116(s0)
-     unlink(name);
--    2886:	ba040513          	addi	a0,s0,-1120
--    288a:	246020ef          	jal	4ad0 <unlink>
-+    2832:	ba040513          	add	a0,s0,-1120
-+    2836:	224020ef          	jal	4a5a <unlink>
-     int fd = open(name, O_CREATE|O_RDWR|O_TRUNC);
--    288e:	60200593          	li	a1,1538
--    2892:	ba040513          	addi	a0,s0,-1120
--    2896:	22a020ef          	jal	4ac0 <open>
-+    283a:	60200593          	li	a1,1538
-+    283e:	ba040513          	add	a0,s0,-1120
-+    2842:	208020ef          	jal	4a4a <open>
-     if(fd < 0)
--    289a:	00054763          	bltz	a0,28a8 <diskfull+0xd8>
-+    2846:	00054763          	bltz	a0,2854 <diskfull+0xd8>
-     close(fd);
--    289e:	20a020ef          	jal	4aa8 <close>
-+    284a:	1e8020ef          	jal	4a32 <close>
-   for(int i = 0; i < nzz; i++){
--    28a2:	2485                	addiw	s1,s1,1
--    28a4:	fb3499e3          	bne	s1,s3,2856 <diskfull+0x86>
-+    284e:	2485                	addw	s1,s1,1
-+    2850:	fb3499e3          	bne	s1,s3,2802 <diskfull+0x86>
-   if(mkdir("diskfulldir") == 0)
--    28a8:	00004517          	auipc	a0,0x4
--    28ac:	8c050513          	addi	a0,a0,-1856 # 6168 <malloc+0x121c>
--    28b0:	238020ef          	jal	4ae8 <mkdir>
--    28b4:	12050063          	beqz	a0,29d4 <diskfull+0x204>
-+    2854:	00004517          	auipc	a0,0x4
-+    2858:	88450513          	add	a0,a0,-1916 # 60d8 <malloc+0x1200>
-+    285c:	216020ef          	jal	4a72 <mkdir>
-+    2860:	12050063          	beqz	a0,2980 <diskfull+0x204>
-   unlink("diskfulldir");
--    28b8:	00004517          	auipc	a0,0x4
--    28bc:	8b050513          	addi	a0,a0,-1872 # 6168 <malloc+0x121c>
--    28c0:	210020ef          	jal	4ad0 <unlink>
-+    2864:	00004517          	auipc	a0,0x4
-+    2868:	87450513          	add	a0,a0,-1932 # 60d8 <malloc+0x1200>
-+    286c:	1ee020ef          	jal	4a5a <unlink>
-   for(int i = 0; i < nzz; i++){
--    28c4:	4481                	li	s1,0
-+    2870:	4481                	li	s1,0
-     name[0] = 'z';
--    28c6:	07a00913          	li	s2,122
-+    2872:	07a00913          	li	s2,122
-   for(int i = 0; i < nzz; i++){
--    28ca:	08000993          	li	s3,128
-+    2876:	08000993          	li	s3,128
-     name[0] = 'z';
--    28ce:	bb240023          	sb	s2,-1120(s0)
-+    287a:	bb240023          	sb	s2,-1120(s0)
-     name[1] = 'z';
--    28d2:	bb2400a3          	sb	s2,-1119(s0)
-+    287e:	bb2400a3          	sb	s2,-1119(s0)
-     name[2] = '0' + (i / 32);
--    28d6:	41f4d71b          	sraiw	a4,s1,0x1f
--    28da:	01b7571b          	srliw	a4,a4,0x1b
--    28de:	009707bb          	addw	a5,a4,s1
--    28e2:	4057d69b          	sraiw	a3,a5,0x5
--    28e6:	0306869b          	addiw	a3,a3,48
--    28ea:	bad40123          	sb	a3,-1118(s0)
-+    2882:	41f4d71b          	sraw	a4,s1,0x1f
-+    2886:	01b7571b          	srlw	a4,a4,0x1b
-+    288a:	009707bb          	addw	a5,a4,s1
-+    288e:	4057d69b          	sraw	a3,a5,0x5
-+    2892:	0306869b          	addw	a3,a3,48
-+    2896:	bad40123          	sb	a3,-1118(s0)
-     name[3] = '0' + (i % 32);
--    28ee:	8bfd                	andi	a5,a5,31
--    28f0:	9f99                	subw	a5,a5,a4
--    28f2:	0307879b          	addiw	a5,a5,48
--    28f6:	baf401a3          	sb	a5,-1117(s0)
-+    289a:	8bfd                	and	a5,a5,31
-+    289c:	9f99                	subw	a5,a5,a4
-+    289e:	0307879b          	addw	a5,a5,48
-+    28a2:	baf401a3          	sb	a5,-1117(s0)
-     name[4] = '\0';
--    28fa:	ba040223          	sb	zero,-1116(s0)
-+    28a6:	ba040223          	sb	zero,-1116(s0)
-     unlink(name);
--    28fe:	ba040513          	addi	a0,s0,-1120
--    2902:	1ce020ef          	jal	4ad0 <unlink>
-+    28aa:	ba040513          	add	a0,s0,-1120
-+    28ae:	1ac020ef          	jal	4a5a <unlink>
-   for(int i = 0; i < nzz; i++){
--    2906:	2485                	addiw	s1,s1,1
--    2908:	fd3493e3          	bne	s1,s3,28ce <diskfull+0xfe>
--    290c:	03000493          	li	s1,48
-+    28b2:	2485                	addw	s1,s1,1
-+    28b4:	fd3493e3          	bne	s1,s3,287a <diskfull+0xfe>
-+    28b8:	03000493          	li	s1,48
-     name[0] = 'b';
--    2910:	06200a93          	li	s5,98
-+    28bc:	06200a93          	li	s5,98
-     name[1] = 'i';
--    2914:	06900a13          	li	s4,105
-+    28c0:	06900a13          	li	s4,105
-     name[2] = 'g';
--    2918:	06700993          	li	s3,103
-+    28c4:	06700993          	li	s3,103
-   for(int i = 0; '0' + i < 0177; i++){
--    291c:	07f00913          	li	s2,127
-+    28c8:	07f00913          	li	s2,127
-     name[0] = 'b';
--    2920:	bb540023          	sb	s5,-1120(s0)
-+    28cc:	bb540023          	sb	s5,-1120(s0)
-     name[1] = 'i';
--    2924:	bb4400a3          	sb	s4,-1119(s0)
-+    28d0:	bb4400a3          	sb	s4,-1119(s0)
-     name[2] = 'g';
--    2928:	bb340123          	sb	s3,-1118(s0)
-+    28d4:	bb340123          	sb	s3,-1118(s0)
-     name[3] = '0' + i;
--    292c:	ba9401a3          	sb	s1,-1117(s0)
-+    28d8:	ba9401a3          	sb	s1,-1117(s0)
-     name[4] = '\0';
--    2930:	ba040223          	sb	zero,-1116(s0)
-+    28dc:	ba040223          	sb	zero,-1116(s0)
-     unlink(name);
--    2934:	ba040513          	addi	a0,s0,-1120
--    2938:	198020ef          	jal	4ad0 <unlink>
-+    28e0:	ba040513          	add	a0,s0,-1120
-+    28e4:	176020ef          	jal	4a5a <unlink>
-   for(int i = 0; '0' + i < 0177; i++){
--    293c:	2485                	addiw	s1,s1,1
--    293e:	0ff4f493          	zext.b	s1,s1
--    2942:	fd249fe3          	bne	s1,s2,2920 <diskfull+0x150>
-+    28e8:	2485                	addw	s1,s1,1
-+    28ea:	0ff4f493          	zext.b	s1,s1
-+    28ee:	fd249fe3          	bne	s1,s2,28cc <diskfull+0x150>
- }
--    2946:	47813083          	ld	ra,1144(sp)
--    294a:	47013403          	ld	s0,1136(sp)
--    294e:	46813483          	ld	s1,1128(sp)
--    2952:	46013903          	ld	s2,1120(sp)
--    2956:	45813983          	ld	s3,1112(sp)
--    295a:	45013a03          	ld	s4,1104(sp)
--    295e:	44813a83          	ld	s5,1096(sp)
--    2962:	44013b03          	ld	s6,1088(sp)
--    2966:	43813b83          	ld	s7,1080(sp)
--    296a:	43013c03          	ld	s8,1072(sp)
--    296e:	42813c83          	ld	s9,1064(sp)
--    2972:	48010113          	addi	sp,sp,1152
--    2976:	8082                	ret
-+    28f2:	47813083          	ld	ra,1144(sp)
-+    28f6:	47013403          	ld	s0,1136(sp)
-+    28fa:	46813483          	ld	s1,1128(sp)
-+    28fe:	46013903          	ld	s2,1120(sp)
-+    2902:	45813983          	ld	s3,1112(sp)
-+    2906:	45013a03          	ld	s4,1104(sp)
-+    290a:	44813a83          	ld	s5,1096(sp)
-+    290e:	44013b03          	ld	s6,1088(sp)
-+    2912:	43813b83          	ld	s7,1080(sp)
-+    2916:	43013c03          	ld	s8,1072(sp)
-+    291a:	42813c83          	ld	s9,1064(sp)
-+    291e:	48010113          	add	sp,sp,1152
-+    2922:	8082                	ret
-     close(fd);
--    2978:	854a                	mv	a0,s2
--    297a:	12e020ef          	jal	4aa8 <close>
-+    2924:	854a                	mv	a0,s2
-+    2926:	10c020ef          	jal	4a32 <close>
-   for(fi = 0; done == 0 && '0' + fi < 0177; fi++){
--    297e:	2985                	addiw	s3,s3,1
--    2980:	0ff9f993          	zext.b	s3,s3
--    2984:	ed8984e3          	beq	s3,s8,284c <diskfull+0x7c>
-+    292a:	2985                	addw	s3,s3,1
-+    292c:	0ff9f993          	zext.b	s3,s3
-+    2930:	ed8984e3          	beq	s3,s8,27f8 <diskfull+0x7c>
-     name[0] = 'b';
--    2988:	b9640023          	sb	s6,-1152(s0)
-+    2934:	b9640023          	sb	s6,-1152(s0)
-     name[1] = 'i';
--    298c:	b95400a3          	sb	s5,-1151(s0)
-+    2938:	b95400a3          	sb	s5,-1151(s0)
-     name[2] = 'g';
--    2990:	b9440123          	sb	s4,-1150(s0)
-+    293c:	b9440123          	sb	s4,-1150(s0)
-     name[3] = '0' + fi;
--    2994:	b93401a3          	sb	s3,-1149(s0)
-+    2940:	b93401a3          	sb	s3,-1149(s0)
-     name[4] = '\0';
--    2998:	b8040223          	sb	zero,-1148(s0)
-+    2944:	b8040223          	sb	zero,-1148(s0)
-     unlink(name);
--    299c:	b8040513          	addi	a0,s0,-1152
--    29a0:	130020ef          	jal	4ad0 <unlink>
-+    2948:	b8040513          	add	a0,s0,-1152
-+    294c:	10e020ef          	jal	4a5a <unlink>
-     int fd = open(name, O_CREATE|O_RDWR|O_TRUNC);
--    29a4:	60200593          	li	a1,1538
--    29a8:	b8040513          	addi	a0,s0,-1152
--    29ac:	114020ef          	jal	4ac0 <open>
--    29b0:	892a                	mv	s2,a0
-+    2950:	60200593          	li	a1,1538
-+    2954:	b8040513          	add	a0,s0,-1152
-+    2958:	0f2020ef          	jal	4a4a <open>
-+    295c:	892a                	mv	s2,a0
-     if(fd < 0){
--    29b2:	e6054de3          	bltz	a0,282c <diskfull+0x5c>
--    29b6:	84de                	mv	s1,s7
-+    295e:	e6054de3          	bltz	a0,27d8 <diskfull+0x5c>
-+    2962:	84de                	mv	s1,s7
-       if(write(fd, buf, BSIZE) != BSIZE){
--    29b8:	40000613          	li	a2,1024
--    29bc:	ba040593          	addi	a1,s0,-1120
--    29c0:	854a                	mv	a0,s2
--    29c2:	0de020ef          	jal	4aa0 <write>
--    29c6:	40000793          	li	a5,1024
--    29ca:	e6f51be3          	bne	a0,a5,2840 <diskfull+0x70>
-+    2964:	40000613          	li	a2,1024
-+    2968:	ba040593          	add	a1,s0,-1120
-+    296c:	854a                	mv	a0,s2
-+    296e:	0bc020ef          	jal	4a2a <write>
-+    2972:	40000793          	li	a5,1024
-+    2976:	e6f51be3          	bne	a0,a5,27ec <diskfull+0x70>
-     for(int i = 0; i < MAXFILE; i++){
--    29ce:	34fd                	addiw	s1,s1,-1
--    29d0:	f4e5                	bnez	s1,29b8 <diskfull+0x1e8>
--    29d2:	b75d                	j	2978 <diskfull+0x1a8>
-+    297a:	34fd                	addw	s1,s1,-1
-+    297c:	f4e5                	bnez	s1,2964 <diskfull+0x1e8>
-+    297e:	b75d                	j	2924 <diskfull+0x1a8>
-     printf("%s: mkdir(diskfulldir) unexpectedly succeeded!\n", s);
--    29d4:	85e6                	mv	a1,s9
--    29d6:	00003517          	auipc	a0,0x3
--    29da:	7c250513          	addi	a0,a0,1986 # 6198 <malloc+0x124c>
--    29de:	4ba020ef          	jal	4e98 <printf>
--    29e2:	bdd9                	j	28b8 <diskfull+0xe8>
-+    2980:	85e6                	mv	a1,s9
-+    2982:	00003517          	auipc	a0,0x3
-+    2986:	78650513          	add	a0,a0,1926 # 6108 <malloc+0x1230>
-+    298a:	49a020ef          	jal	4e24 <printf>
-+    298e:	bdd9                	j	2864 <diskfull+0xe8>
- 
--00000000000029e4 <iputtest>:
-+0000000000002990 <iputtest>:
- {
--    29e4:	1101                	addi	sp,sp,-32
--    29e6:	ec06                	sd	ra,24(sp)
--    29e8:	e822                	sd	s0,16(sp)
--    29ea:	e426                	sd	s1,8(sp)
--    29ec:	1000                	addi	s0,sp,32
--    29ee:	84aa                	mv	s1,a0
-+    2990:	1101                	add	sp,sp,-32
-+    2992:	ec06                	sd	ra,24(sp)
-+    2994:	e822                	sd	s0,16(sp)
-+    2996:	e426                	sd	s1,8(sp)
-+    2998:	1000                	add	s0,sp,32
-+    299a:	84aa                	mv	s1,a0
-   if(mkdir("iputdir") < 0){
--    29f0:	00003517          	auipc	a0,0x3
--    29f4:	7d850513          	addi	a0,a0,2008 # 61c8 <malloc+0x127c>
--    29f8:	0f0020ef          	jal	4ae8 <mkdir>
--    29fc:	02054f63          	bltz	a0,2a3a <iputtest+0x56>
-+    299c:	00003517          	auipc	a0,0x3
-+    29a0:	79c50513          	add	a0,a0,1948 # 6138 <malloc+0x1260>
-+    29a4:	0ce020ef          	jal	4a72 <mkdir>
-+    29a8:	02054f63          	bltz	a0,29e6 <iputtest+0x56>
-   if(chdir("iputdir") < 0){
--    2a00:	00003517          	auipc	a0,0x3
--    2a04:	7c850513          	addi	a0,a0,1992 # 61c8 <malloc+0x127c>
--    2a08:	0e8020ef          	jal	4af0 <chdir>
--    2a0c:	04054163          	bltz	a0,2a4e <iputtest+0x6a>
-+    29ac:	00003517          	auipc	a0,0x3
-+    29b0:	78c50513          	add	a0,a0,1932 # 6138 <malloc+0x1260>
-+    29b4:	0c6020ef          	jal	4a7a <chdir>
-+    29b8:	04054163          	bltz	a0,29fa <iputtest+0x6a>
-   if(unlink("../iputdir") < 0){
--    2a10:	00003517          	auipc	a0,0x3
--    2a14:	7f850513          	addi	a0,a0,2040 # 6208 <malloc+0x12bc>
--    2a18:	0b8020ef          	jal	4ad0 <unlink>
--    2a1c:	04054363          	bltz	a0,2a62 <iputtest+0x7e>
-+    29bc:	00003517          	auipc	a0,0x3
-+    29c0:	7bc50513          	add	a0,a0,1980 # 6178 <malloc+0x12a0>
-+    29c4:	096020ef          	jal	4a5a <unlink>
-+    29c8:	04054363          	bltz	a0,2a0e <iputtest+0x7e>
-   if(chdir("/") < 0){
--    2a20:	00004517          	auipc	a0,0x4
--    2a24:	81850513          	addi	a0,a0,-2024 # 6238 <malloc+0x12ec>
--    2a28:	0c8020ef          	jal	4af0 <chdir>
--    2a2c:	04054563          	bltz	a0,2a76 <iputtest+0x92>
-+    29cc:	00003517          	auipc	a0,0x3
-+    29d0:	7dc50513          	add	a0,a0,2012 # 61a8 <malloc+0x12d0>
-+    29d4:	0a6020ef          	jal	4a7a <chdir>
-+    29d8:	04054563          	bltz	a0,2a22 <iputtest+0x92>
- }
--    2a30:	60e2                	ld	ra,24(sp)
--    2a32:	6442                	ld	s0,16(sp)
--    2a34:	64a2                	ld	s1,8(sp)
--    2a36:	6105                	addi	sp,sp,32
--    2a38:	8082                	ret
-+    29dc:	60e2                	ld	ra,24(sp)
-+    29de:	6442                	ld	s0,16(sp)
-+    29e0:	64a2                	ld	s1,8(sp)
-+    29e2:	6105                	add	sp,sp,32
-+    29e4:	8082                	ret
-     printf("%s: mkdir failed\n", s);
--    2a3a:	85a6                	mv	a1,s1
--    2a3c:	00003517          	auipc	a0,0x3
--    2a40:	79450513          	addi	a0,a0,1940 # 61d0 <malloc+0x1284>
--    2a44:	454020ef          	jal	4e98 <printf>
-+    29e6:	85a6                	mv	a1,s1
-+    29e8:	00003517          	auipc	a0,0x3
-+    29ec:	75850513          	add	a0,a0,1880 # 6140 <malloc+0x1268>
-+    29f0:	434020ef          	jal	4e24 <printf>
-     exit(1);
--    2a48:	4505                	li	a0,1
--    2a4a:	036020ef          	jal	4a80 <exit>
-+    29f4:	4505                	li	a0,1
-+    29f6:	014020ef          	jal	4a0a <exit>
-     printf("%s: chdir iputdir failed\n", s);
--    2a4e:	85a6                	mv	a1,s1
--    2a50:	00003517          	auipc	a0,0x3
--    2a54:	79850513          	addi	a0,a0,1944 # 61e8 <malloc+0x129c>
--    2a58:	440020ef          	jal	4e98 <printf>
-+    29fa:	85a6                	mv	a1,s1
-+    29fc:	00003517          	auipc	a0,0x3
-+    2a00:	75c50513          	add	a0,a0,1884 # 6158 <malloc+0x1280>
-+    2a04:	420020ef          	jal	4e24 <printf>
-     exit(1);
--    2a5c:	4505                	li	a0,1
--    2a5e:	022020ef          	jal	4a80 <exit>
-+    2a08:	4505                	li	a0,1
-+    2a0a:	000020ef          	jal	4a0a <exit>
-     printf("%s: unlink ../iputdir failed\n", s);
--    2a62:	85a6                	mv	a1,s1
--    2a64:	00003517          	auipc	a0,0x3
--    2a68:	7b450513          	addi	a0,a0,1972 # 6218 <malloc+0x12cc>
--    2a6c:	42c020ef          	jal	4e98 <printf>
-+    2a0e:	85a6                	mv	a1,s1
-+    2a10:	00003517          	auipc	a0,0x3
-+    2a14:	77850513          	add	a0,a0,1912 # 6188 <malloc+0x12b0>
-+    2a18:	40c020ef          	jal	4e24 <printf>
-     exit(1);
--    2a70:	4505                	li	a0,1
--    2a72:	00e020ef          	jal	4a80 <exit>
-+    2a1c:	4505                	li	a0,1
-+    2a1e:	7ed010ef          	jal	4a0a <exit>
-     printf("%s: chdir / failed\n", s);
--    2a76:	85a6                	mv	a1,s1
--    2a78:	00003517          	auipc	a0,0x3
--    2a7c:	7c850513          	addi	a0,a0,1992 # 6240 <malloc+0x12f4>
--    2a80:	418020ef          	jal	4e98 <printf>
-+    2a22:	85a6                	mv	a1,s1
-+    2a24:	00003517          	auipc	a0,0x3
-+    2a28:	78c50513          	add	a0,a0,1932 # 61b0 <malloc+0x12d8>
-+    2a2c:	3f8020ef          	jal	4e24 <printf>
-     exit(1);
--    2a84:	4505                	li	a0,1
--    2a86:	7fb010ef          	jal	4a80 <exit>
-+    2a30:	4505                	li	a0,1
-+    2a32:	7d9010ef          	jal	4a0a <exit>
- 
--0000000000002a8a <exitiputtest>:
-+0000000000002a36 <exitiputtest>:
- {
--    2a8a:	7179                	addi	sp,sp,-48
--    2a8c:	f406                	sd	ra,40(sp)
--    2a8e:	f022                	sd	s0,32(sp)
--    2a90:	ec26                	sd	s1,24(sp)
--    2a92:	1800                	addi	s0,sp,48
--    2a94:	84aa                	mv	s1,a0
-+    2a36:	7179                	add	sp,sp,-48
-+    2a38:	f406                	sd	ra,40(sp)
-+    2a3a:	f022                	sd	s0,32(sp)
-+    2a3c:	ec26                	sd	s1,24(sp)
-+    2a3e:	1800                	add	s0,sp,48
-+    2a40:	84aa                	mv	s1,a0
-   pid = fork();
--    2a96:	7e3010ef          	jal	4a78 <fork>
-+    2a42:	7c1010ef          	jal	4a02 <fork>
-   if(pid < 0){
--    2a9a:	02054e63          	bltz	a0,2ad6 <exitiputtest+0x4c>
-+    2a46:	02054e63          	bltz	a0,2a82 <exitiputtest+0x4c>
-   if(pid == 0){
--    2a9e:	e541                	bnez	a0,2b26 <exitiputtest+0x9c>
-+    2a4a:	e541                	bnez	a0,2ad2 <exitiputtest+0x9c>
-     if(mkdir("iputdir") < 0){
--    2aa0:	00003517          	auipc	a0,0x3
--    2aa4:	72850513          	addi	a0,a0,1832 # 61c8 <malloc+0x127c>
--    2aa8:	040020ef          	jal	4ae8 <mkdir>
--    2aac:	02054f63          	bltz	a0,2aea <exitiputtest+0x60>
-+    2a4c:	00003517          	auipc	a0,0x3
-+    2a50:	6ec50513          	add	a0,a0,1772 # 6138 <malloc+0x1260>
-+    2a54:	01e020ef          	jal	4a72 <mkdir>
-+    2a58:	02054f63          	bltz	a0,2a96 <exitiputtest+0x60>
-     if(chdir("iputdir") < 0){
--    2ab0:	00003517          	auipc	a0,0x3
--    2ab4:	71850513          	addi	a0,a0,1816 # 61c8 <malloc+0x127c>
--    2ab8:	038020ef          	jal	4af0 <chdir>
--    2abc:	04054163          	bltz	a0,2afe <exitiputtest+0x74>
-+    2a5c:	00003517          	auipc	a0,0x3
-+    2a60:	6dc50513          	add	a0,a0,1756 # 6138 <malloc+0x1260>
-+    2a64:	016020ef          	jal	4a7a <chdir>
-+    2a68:	04054163          	bltz	a0,2aaa <exitiputtest+0x74>
-     if(unlink("../iputdir") < 0){
--    2ac0:	00003517          	auipc	a0,0x3
--    2ac4:	74850513          	addi	a0,a0,1864 # 6208 <malloc+0x12bc>
--    2ac8:	008020ef          	jal	4ad0 <unlink>
--    2acc:	04054363          	bltz	a0,2b12 <exitiputtest+0x88>
-+    2a6c:	00003517          	auipc	a0,0x3
-+    2a70:	70c50513          	add	a0,a0,1804 # 6178 <malloc+0x12a0>
-+    2a74:	7e7010ef          	jal	4a5a <unlink>
-+    2a78:	04054363          	bltz	a0,2abe <exitiputtest+0x88>
-     exit(0);
--    2ad0:	4501                	li	a0,0
--    2ad2:	7af010ef          	jal	4a80 <exit>
-+    2a7c:	4501                	li	a0,0
-+    2a7e:	78d010ef          	jal	4a0a <exit>
-     printf("%s: fork failed\n", s);
--    2ad6:	85a6                	mv	a1,s1
--    2ad8:	00003517          	auipc	a0,0x3
--    2adc:	e4050513          	addi	a0,a0,-448 # 5918 <malloc+0x9cc>
--    2ae0:	3b8020ef          	jal	4e98 <printf>
-+    2a82:	85a6                	mv	a1,s1
-+    2a84:	00003517          	auipc	a0,0x3
-+    2a88:	e0450513          	add	a0,a0,-508 # 5888 <malloc+0x9b0>
-+    2a8c:	398020ef          	jal	4e24 <printf>
-     exit(1);
--    2ae4:	4505                	li	a0,1
--    2ae6:	79b010ef          	jal	4a80 <exit>
-+    2a90:	4505                	li	a0,1
-+    2a92:	779010ef          	jal	4a0a <exit>
-       printf("%s: mkdir failed\n", s);
--    2aea:	85a6                	mv	a1,s1
--    2aec:	00003517          	auipc	a0,0x3
--    2af0:	6e450513          	addi	a0,a0,1764 # 61d0 <malloc+0x1284>
--    2af4:	3a4020ef          	jal	4e98 <printf>
-+    2a96:	85a6                	mv	a1,s1
-+    2a98:	00003517          	auipc	a0,0x3
-+    2a9c:	6a850513          	add	a0,a0,1704 # 6140 <malloc+0x1268>
-+    2aa0:	384020ef          	jal	4e24 <printf>
-       exit(1);
--    2af8:	4505                	li	a0,1
--    2afa:	787010ef          	jal	4a80 <exit>
-+    2aa4:	4505                	li	a0,1
-+    2aa6:	765010ef          	jal	4a0a <exit>
-       printf("%s: child chdir failed\n", s);
--    2afe:	85a6                	mv	a1,s1
--    2b00:	00003517          	auipc	a0,0x3
--    2b04:	75850513          	addi	a0,a0,1880 # 6258 <malloc+0x130c>
--    2b08:	390020ef          	jal	4e98 <printf>
-+    2aaa:	85a6                	mv	a1,s1
-+    2aac:	00003517          	auipc	a0,0x3
-+    2ab0:	71c50513          	add	a0,a0,1820 # 61c8 <malloc+0x12f0>
-+    2ab4:	370020ef          	jal	4e24 <printf>
-       exit(1);
--    2b0c:	4505                	li	a0,1
--    2b0e:	773010ef          	jal	4a80 <exit>
-+    2ab8:	4505                	li	a0,1
-+    2aba:	751010ef          	jal	4a0a <exit>
-       printf("%s: unlink ../iputdir failed\n", s);
--    2b12:	85a6                	mv	a1,s1
--    2b14:	00003517          	auipc	a0,0x3
--    2b18:	70450513          	addi	a0,a0,1796 # 6218 <malloc+0x12cc>
--    2b1c:	37c020ef          	jal	4e98 <printf>
-+    2abe:	85a6                	mv	a1,s1
-+    2ac0:	00003517          	auipc	a0,0x3
-+    2ac4:	6c850513          	add	a0,a0,1736 # 6188 <malloc+0x12b0>
-+    2ac8:	35c020ef          	jal	4e24 <printf>
-       exit(1);
--    2b20:	4505                	li	a0,1
--    2b22:	75f010ef          	jal	4a80 <exit>
-+    2acc:	4505                	li	a0,1
-+    2ace:	73d010ef          	jal	4a0a <exit>
-   wait(&xstatus);
--    2b26:	fdc40513          	addi	a0,s0,-36
--    2b2a:	75f010ef          	jal	4a88 <wait>
-+    2ad2:	fdc40513          	add	a0,s0,-36
-+    2ad6:	73d010ef          	jal	4a12 <wait>
-   exit(xstatus);
--    2b2e:	fdc42503          	lw	a0,-36(s0)
--    2b32:	74f010ef          	jal	4a80 <exit>
-+    2ada:	fdc42503          	lw	a0,-36(s0)
-+    2ade:	72d010ef          	jal	4a0a <exit>
- 
--0000000000002b36 <dirtest>:
-+0000000000002ae2 <dirtest>:
- {
--    2b36:	1101                	addi	sp,sp,-32
--    2b38:	ec06                	sd	ra,24(sp)
--    2b3a:	e822                	sd	s0,16(sp)
--    2b3c:	e426                	sd	s1,8(sp)
--    2b3e:	1000                	addi	s0,sp,32
--    2b40:	84aa                	mv	s1,a0
-+    2ae2:	1101                	add	sp,sp,-32
-+    2ae4:	ec06                	sd	ra,24(sp)
-+    2ae6:	e822                	sd	s0,16(sp)
-+    2ae8:	e426                	sd	s1,8(sp)
-+    2aea:	1000                	add	s0,sp,32
-+    2aec:	84aa                	mv	s1,a0
-   if(mkdir("dir0") < 0){
--    2b42:	00003517          	auipc	a0,0x3
--    2b46:	72e50513          	addi	a0,a0,1838 # 6270 <malloc+0x1324>
--    2b4a:	79f010ef          	jal	4ae8 <mkdir>
--    2b4e:	02054f63          	bltz	a0,2b8c <dirtest+0x56>
-+    2aee:	00003517          	auipc	a0,0x3
-+    2af2:	6f250513          	add	a0,a0,1778 # 61e0 <malloc+0x1308>
-+    2af6:	77d010ef          	jal	4a72 <mkdir>
-+    2afa:	02054f63          	bltz	a0,2b38 <dirtest+0x56>
-   if(chdir("dir0") < 0){
--    2b52:	00003517          	auipc	a0,0x3
--    2b56:	71e50513          	addi	a0,a0,1822 # 6270 <malloc+0x1324>
--    2b5a:	797010ef          	jal	4af0 <chdir>
--    2b5e:	04054163          	bltz	a0,2ba0 <dirtest+0x6a>
-+    2afe:	00003517          	auipc	a0,0x3
-+    2b02:	6e250513          	add	a0,a0,1762 # 61e0 <malloc+0x1308>
-+    2b06:	775010ef          	jal	4a7a <chdir>
-+    2b0a:	04054163          	bltz	a0,2b4c <dirtest+0x6a>
-   if(chdir("..") < 0){
--    2b62:	00003517          	auipc	a0,0x3
--    2b66:	72e50513          	addi	a0,a0,1838 # 6290 <malloc+0x1344>
--    2b6a:	787010ef          	jal	4af0 <chdir>
--    2b6e:	04054363          	bltz	a0,2bb4 <dirtest+0x7e>
-+    2b0e:	00003517          	auipc	a0,0x3
-+    2b12:	6f250513          	add	a0,a0,1778 # 6200 <malloc+0x1328>
-+    2b16:	765010ef          	jal	4a7a <chdir>
-+    2b1a:	04054363          	bltz	a0,2b60 <dirtest+0x7e>
-   if(unlink("dir0") < 0){
--    2b72:	00003517          	auipc	a0,0x3
--    2b76:	6fe50513          	addi	a0,a0,1790 # 6270 <malloc+0x1324>
--    2b7a:	757010ef          	jal	4ad0 <unlink>
--    2b7e:	04054563          	bltz	a0,2bc8 <dirtest+0x92>
-+    2b1e:	00003517          	auipc	a0,0x3
-+    2b22:	6c250513          	add	a0,a0,1730 # 61e0 <malloc+0x1308>
-+    2b26:	735010ef          	jal	4a5a <unlink>
-+    2b2a:	04054563          	bltz	a0,2b74 <dirtest+0x92>
- }
--    2b82:	60e2                	ld	ra,24(sp)
--    2b84:	6442                	ld	s0,16(sp)
--    2b86:	64a2                	ld	s1,8(sp)
--    2b88:	6105                	addi	sp,sp,32
--    2b8a:	8082                	ret
-+    2b2e:	60e2                	ld	ra,24(sp)
-+    2b30:	6442                	ld	s0,16(sp)
-+    2b32:	64a2                	ld	s1,8(sp)
-+    2b34:	6105                	add	sp,sp,32
-+    2b36:	8082                	ret
-     printf("%s: mkdir failed\n", s);
--    2b8c:	85a6                	mv	a1,s1
--    2b8e:	00003517          	auipc	a0,0x3
--    2b92:	64250513          	addi	a0,a0,1602 # 61d0 <malloc+0x1284>
--    2b96:	302020ef          	jal	4e98 <printf>
-+    2b38:	85a6                	mv	a1,s1
-+    2b3a:	00003517          	auipc	a0,0x3
-+    2b3e:	60650513          	add	a0,a0,1542 # 6140 <malloc+0x1268>
-+    2b42:	2e2020ef          	jal	4e24 <printf>
-     exit(1);
--    2b9a:	4505                	li	a0,1
--    2b9c:	6e5010ef          	jal	4a80 <exit>
-+    2b46:	4505                	li	a0,1
-+    2b48:	6c3010ef          	jal	4a0a <exit>
-     printf("%s: chdir dir0 failed\n", s);
--    2ba0:	85a6                	mv	a1,s1
--    2ba2:	00003517          	auipc	a0,0x3
--    2ba6:	6d650513          	addi	a0,a0,1750 # 6278 <malloc+0x132c>
--    2baa:	2ee020ef          	jal	4e98 <printf>
-+    2b4c:	85a6                	mv	a1,s1
-+    2b4e:	00003517          	auipc	a0,0x3
-+    2b52:	69a50513          	add	a0,a0,1690 # 61e8 <malloc+0x1310>
-+    2b56:	2ce020ef          	jal	4e24 <printf>
-     exit(1);
--    2bae:	4505                	li	a0,1
--    2bb0:	6d1010ef          	jal	4a80 <exit>
-+    2b5a:	4505                	li	a0,1
-+    2b5c:	6af010ef          	jal	4a0a <exit>
-     printf("%s: chdir .. failed\n", s);
--    2bb4:	85a6                	mv	a1,s1
--    2bb6:	00003517          	auipc	a0,0x3
--    2bba:	6e250513          	addi	a0,a0,1762 # 6298 <malloc+0x134c>
--    2bbe:	2da020ef          	jal	4e98 <printf>
-+    2b60:	85a6                	mv	a1,s1
-+    2b62:	00003517          	auipc	a0,0x3
-+    2b66:	6a650513          	add	a0,a0,1702 # 6208 <malloc+0x1330>
-+    2b6a:	2ba020ef          	jal	4e24 <printf>
-     exit(1);
--    2bc2:	4505                	li	a0,1
--    2bc4:	6bd010ef          	jal	4a80 <exit>
-+    2b6e:	4505                	li	a0,1
-+    2b70:	69b010ef          	jal	4a0a <exit>
-     printf("%s: unlink dir0 failed\n", s);
--    2bc8:	85a6                	mv	a1,s1
--    2bca:	00003517          	auipc	a0,0x3
--    2bce:	6e650513          	addi	a0,a0,1766 # 62b0 <malloc+0x1364>
--    2bd2:	2c6020ef          	jal	4e98 <printf>
-+    2b74:	85a6                	mv	a1,s1
-+    2b76:	00003517          	auipc	a0,0x3
-+    2b7a:	6aa50513          	add	a0,a0,1706 # 6220 <malloc+0x1348>
-+    2b7e:	2a6020ef          	jal	4e24 <printf>
-     exit(1);
--    2bd6:	4505                	li	a0,1
--    2bd8:	6a9010ef          	jal	4a80 <exit>
-+    2b82:	4505                	li	a0,1
-+    2b84:	687010ef          	jal	4a0a <exit>
- 
--0000000000002bdc <subdir>:
-+0000000000002b88 <subdir>:
- {
--    2bdc:	1101                	addi	sp,sp,-32
--    2bde:	ec06                	sd	ra,24(sp)
--    2be0:	e822                	sd	s0,16(sp)
--    2be2:	e426                	sd	s1,8(sp)
--    2be4:	e04a                	sd	s2,0(sp)
--    2be6:	1000                	addi	s0,sp,32
--    2be8:	892a                	mv	s2,a0
-+    2b88:	1101                	add	sp,sp,-32
-+    2b8a:	ec06                	sd	ra,24(sp)
-+    2b8c:	e822                	sd	s0,16(sp)
-+    2b8e:	e426                	sd	s1,8(sp)
-+    2b90:	e04a                	sd	s2,0(sp)
-+    2b92:	1000                	add	s0,sp,32
-+    2b94:	892a                	mv	s2,a0
-   unlink("ff");
--    2bea:	00004517          	auipc	a0,0x4
--    2bee:	80e50513          	addi	a0,a0,-2034 # 63f8 <malloc+0x14ac>
--    2bf2:	6df010ef          	jal	4ad0 <unlink>
-+    2b96:	00003517          	auipc	a0,0x3
-+    2b9a:	7d250513          	add	a0,a0,2002 # 6368 <malloc+0x1490>
-+    2b9e:	6bd010ef          	jal	4a5a <unlink>
-   if(mkdir("dd") != 0){
--    2bf6:	00003517          	auipc	a0,0x3
--    2bfa:	6d250513          	addi	a0,a0,1746 # 62c8 <malloc+0x137c>
--    2bfe:	6eb010ef          	jal	4ae8 <mkdir>
--    2c02:	2e051263          	bnez	a0,2ee6 <subdir+0x30a>
-+    2ba2:	00003517          	auipc	a0,0x3
-+    2ba6:	69650513          	add	a0,a0,1686 # 6238 <malloc+0x1360>
-+    2baa:	6c9010ef          	jal	4a72 <mkdir>
-+    2bae:	2e051263          	bnez	a0,2e92 <subdir+0x30a>
-   fd = open("dd/ff", O_CREATE | O_RDWR);
--    2c06:	20200593          	li	a1,514
--    2c0a:	00003517          	auipc	a0,0x3
--    2c0e:	6de50513          	addi	a0,a0,1758 # 62e8 <malloc+0x139c>
--    2c12:	6af010ef          	jal	4ac0 <open>
--    2c16:	84aa                	mv	s1,a0
-+    2bb2:	20200593          	li	a1,514
-+    2bb6:	00003517          	auipc	a0,0x3
-+    2bba:	6a250513          	add	a0,a0,1698 # 6258 <malloc+0x1380>
-+    2bbe:	68d010ef          	jal	4a4a <open>
-+    2bc2:	84aa                	mv	s1,a0
-   if(fd < 0){
--    2c18:	2e054163          	bltz	a0,2efa <subdir+0x31e>
-+    2bc4:	2e054163          	bltz	a0,2ea6 <subdir+0x31e>
-   write(fd, "ff", 2);
--    2c1c:	4609                	li	a2,2
--    2c1e:	00003597          	auipc	a1,0x3
--    2c22:	7da58593          	addi	a1,a1,2010 # 63f8 <malloc+0x14ac>
--    2c26:	67b010ef          	jal	4aa0 <write>
-+    2bc8:	4609                	li	a2,2
-+    2bca:	00003597          	auipc	a1,0x3
-+    2bce:	79e58593          	add	a1,a1,1950 # 6368 <malloc+0x1490>
-+    2bd2:	659010ef          	jal	4a2a <write>
-   close(fd);
--    2c2a:	8526                	mv	a0,s1
--    2c2c:	67d010ef          	jal	4aa8 <close>
-+    2bd6:	8526                	mv	a0,s1
-+    2bd8:	65b010ef          	jal	4a32 <close>
-   if(unlink("dd") >= 0){
--    2c30:	00003517          	auipc	a0,0x3
--    2c34:	69850513          	addi	a0,a0,1688 # 62c8 <malloc+0x137c>
--    2c38:	699010ef          	jal	4ad0 <unlink>
--    2c3c:	2c055963          	bgez	a0,2f0e <subdir+0x332>
-+    2bdc:	00003517          	auipc	a0,0x3
-+    2be0:	65c50513          	add	a0,a0,1628 # 6238 <malloc+0x1360>
-+    2be4:	677010ef          	jal	4a5a <unlink>
-+    2be8:	2c055963          	bgez	a0,2eba <subdir+0x332>
-   if(mkdir("/dd/dd") != 0){
--    2c40:	00003517          	auipc	a0,0x3
--    2c44:	70050513          	addi	a0,a0,1792 # 6340 <malloc+0x13f4>
--    2c48:	6a1010ef          	jal	4ae8 <mkdir>
--    2c4c:	2c051b63          	bnez	a0,2f22 <subdir+0x346>
-+    2bec:	00003517          	auipc	a0,0x3
-+    2bf0:	6c450513          	add	a0,a0,1732 # 62b0 <malloc+0x13d8>
-+    2bf4:	67f010ef          	jal	4a72 <mkdir>
-+    2bf8:	2c051b63          	bnez	a0,2ece <subdir+0x346>
-   fd = open("dd/dd/ff", O_CREATE | O_RDWR);
--    2c50:	20200593          	li	a1,514
--    2c54:	00003517          	auipc	a0,0x3
--    2c58:	71450513          	addi	a0,a0,1812 # 6368 <malloc+0x141c>
--    2c5c:	665010ef          	jal	4ac0 <open>
--    2c60:	84aa                	mv	s1,a0
-+    2bfc:	20200593          	li	a1,514
-+    2c00:	00003517          	auipc	a0,0x3
-+    2c04:	6d850513          	add	a0,a0,1752 # 62d8 <malloc+0x1400>
-+    2c08:	643010ef          	jal	4a4a <open>
-+    2c0c:	84aa                	mv	s1,a0
-   if(fd < 0){
--    2c62:	2c054a63          	bltz	a0,2f36 <subdir+0x35a>
-+    2c0e:	2c054a63          	bltz	a0,2ee2 <subdir+0x35a>
-   write(fd, "FF", 2);
--    2c66:	4609                	li	a2,2
--    2c68:	00003597          	auipc	a1,0x3
--    2c6c:	73058593          	addi	a1,a1,1840 # 6398 <malloc+0x144c>
--    2c70:	631010ef          	jal	4aa0 <write>
-+    2c12:	4609                	li	a2,2
-+    2c14:	00003597          	auipc	a1,0x3
-+    2c18:	6f458593          	add	a1,a1,1780 # 6308 <malloc+0x1430>
-+    2c1c:	60f010ef          	jal	4a2a <write>
-   close(fd);
--    2c74:	8526                	mv	a0,s1
--    2c76:	633010ef          	jal	4aa8 <close>
-+    2c20:	8526                	mv	a0,s1
-+    2c22:	611010ef          	jal	4a32 <close>
-   fd = open("dd/dd/../ff", 0);
--    2c7a:	4581                	li	a1,0
--    2c7c:	00003517          	auipc	a0,0x3
--    2c80:	72450513          	addi	a0,a0,1828 # 63a0 <malloc+0x1454>
--    2c84:	63d010ef          	jal	4ac0 <open>
--    2c88:	84aa                	mv	s1,a0
-+    2c26:	4581                	li	a1,0
-+    2c28:	00003517          	auipc	a0,0x3
-+    2c2c:	6e850513          	add	a0,a0,1768 # 6310 <malloc+0x1438>
-+    2c30:	61b010ef          	jal	4a4a <open>
-+    2c34:	84aa                	mv	s1,a0
-   if(fd < 0){
--    2c8a:	2c054063          	bltz	a0,2f4a <subdir+0x36e>
-+    2c36:	2c054063          	bltz	a0,2ef6 <subdir+0x36e>
-   cc = read(fd, buf, sizeof(buf));
--    2c8e:	660d                	lui	a2,0x3
--    2c90:	0000a597          	auipc	a1,0xa
--    2c94:	fe858593          	addi	a1,a1,-24 # cc78 <buf>
--    2c98:	601010ef          	jal	4a98 <read>
-+    2c3a:	660d                	lui	a2,0x3
-+    2c3c:	00009597          	auipc	a1,0x9
-+    2c40:	03c58593          	add	a1,a1,60 # bc78 <buf>
-+    2c44:	5df010ef          	jal	4a22 <read>
-   if(cc != 2 || buf[0] != 'f'){
--    2c9c:	4789                	li	a5,2
--    2c9e:	2cf51063          	bne	a0,a5,2f5e <subdir+0x382>
--    2ca2:	0000a717          	auipc	a4,0xa
--    2ca6:	fd674703          	lbu	a4,-42(a4) # cc78 <buf>
--    2caa:	06600793          	li	a5,102
--    2cae:	2af71863          	bne	a4,a5,2f5e <subdir+0x382>
-+    2c48:	4789                	li	a5,2
-+    2c4a:	2cf51063          	bne	a0,a5,2f0a <subdir+0x382>
-+    2c4e:	00009717          	auipc	a4,0x9
-+    2c52:	02a74703          	lbu	a4,42(a4) # bc78 <buf>
-+    2c56:	06600793          	li	a5,102
-+    2c5a:	2af71863          	bne	a4,a5,2f0a <subdir+0x382>
-   close(fd);
--    2cb2:	8526                	mv	a0,s1
--    2cb4:	5f5010ef          	jal	4aa8 <close>
-+    2c5e:	8526                	mv	a0,s1
-+    2c60:	5d3010ef          	jal	4a32 <close>
-   if(link("dd/dd/ff", "dd/dd/ffff") != 0){
--    2cb8:	00003597          	auipc	a1,0x3
--    2cbc:	73858593          	addi	a1,a1,1848 # 63f0 <malloc+0x14a4>
--    2cc0:	00003517          	auipc	a0,0x3
--    2cc4:	6a850513          	addi	a0,a0,1704 # 6368 <malloc+0x141c>
--    2cc8:	619010ef          	jal	4ae0 <link>
--    2ccc:	2a051363          	bnez	a0,2f72 <subdir+0x396>
-+    2c64:	00003597          	auipc	a1,0x3
-+    2c68:	6fc58593          	add	a1,a1,1788 # 6360 <malloc+0x1488>
-+    2c6c:	00003517          	auipc	a0,0x3
-+    2c70:	66c50513          	add	a0,a0,1644 # 62d8 <malloc+0x1400>
-+    2c74:	5f7010ef          	jal	4a6a <link>
-+    2c78:	2a051363          	bnez	a0,2f1e <subdir+0x396>
-   if(unlink("dd/dd/ff") != 0){
--    2cd0:	00003517          	auipc	a0,0x3
--    2cd4:	69850513          	addi	a0,a0,1688 # 6368 <malloc+0x141c>
--    2cd8:	5f9010ef          	jal	4ad0 <unlink>
--    2cdc:	2a051563          	bnez	a0,2f86 <subdir+0x3aa>
-+    2c7c:	00003517          	auipc	a0,0x3
-+    2c80:	65c50513          	add	a0,a0,1628 # 62d8 <malloc+0x1400>
-+    2c84:	5d7010ef          	jal	4a5a <unlink>
-+    2c88:	2a051563          	bnez	a0,2f32 <subdir+0x3aa>
-   if(open("dd/dd/ff", O_RDONLY) >= 0){
--    2ce0:	4581                	li	a1,0
--    2ce2:	00003517          	auipc	a0,0x3
--    2ce6:	68650513          	addi	a0,a0,1670 # 6368 <malloc+0x141c>
--    2cea:	5d7010ef          	jal	4ac0 <open>
--    2cee:	2a055663          	bgez	a0,2f9a <subdir+0x3be>
-+    2c8c:	4581                	li	a1,0
-+    2c8e:	00003517          	auipc	a0,0x3
-+    2c92:	64a50513          	add	a0,a0,1610 # 62d8 <malloc+0x1400>
-+    2c96:	5b5010ef          	jal	4a4a <open>
-+    2c9a:	2a055663          	bgez	a0,2f46 <subdir+0x3be>
-   if(chdir("dd") != 0){
--    2cf2:	00003517          	auipc	a0,0x3
--    2cf6:	5d650513          	addi	a0,a0,1494 # 62c8 <malloc+0x137c>
--    2cfa:	5f7010ef          	jal	4af0 <chdir>
--    2cfe:	2a051863          	bnez	a0,2fae <subdir+0x3d2>
-+    2c9e:	00003517          	auipc	a0,0x3
-+    2ca2:	59a50513          	add	a0,a0,1434 # 6238 <malloc+0x1360>
-+    2ca6:	5d5010ef          	jal	4a7a <chdir>
-+    2caa:	2a051863          	bnez	a0,2f5a <subdir+0x3d2>
-   if(chdir("dd/../../dd") != 0){
--    2d02:	00003517          	auipc	a0,0x3
--    2d06:	78650513          	addi	a0,a0,1926 # 6488 <malloc+0x153c>
--    2d0a:	5e7010ef          	jal	4af0 <chdir>
--    2d0e:	2a051a63          	bnez	a0,2fc2 <subdir+0x3e6>
-+    2cae:	00003517          	auipc	a0,0x3
-+    2cb2:	74a50513          	add	a0,a0,1866 # 63f8 <malloc+0x1520>
-+    2cb6:	5c5010ef          	jal	4a7a <chdir>
-+    2cba:	2a051a63          	bnez	a0,2f6e <subdir+0x3e6>
-   if(chdir("dd/../../../dd") != 0){
--    2d12:	00003517          	auipc	a0,0x3
--    2d16:	7a650513          	addi	a0,a0,1958 # 64b8 <malloc+0x156c>
--    2d1a:	5d7010ef          	jal	4af0 <chdir>
--    2d1e:	2a051c63          	bnez	a0,2fd6 <subdir+0x3fa>
-+    2cbe:	00003517          	auipc	a0,0x3
-+    2cc2:	76a50513          	add	a0,a0,1898 # 6428 <malloc+0x1550>
-+    2cc6:	5b5010ef          	jal	4a7a <chdir>
-+    2cca:	2a051c63          	bnez	a0,2f82 <subdir+0x3fa>
-   if(chdir("./..") != 0){
--    2d22:	00003517          	auipc	a0,0x3
--    2d26:	7ce50513          	addi	a0,a0,1998 # 64f0 <malloc+0x15a4>
--    2d2a:	5c7010ef          	jal	4af0 <chdir>
--    2d2e:	2a051e63          	bnez	a0,2fea <subdir+0x40e>
-+    2cce:	00003517          	auipc	a0,0x3
-+    2cd2:	79250513          	add	a0,a0,1938 # 6460 <malloc+0x1588>
-+    2cd6:	5a5010ef          	jal	4a7a <chdir>
-+    2cda:	2a051e63          	bnez	a0,2f96 <subdir+0x40e>
-   fd = open("dd/dd/ffff", 0);
--    2d32:	4581                	li	a1,0
--    2d34:	00003517          	auipc	a0,0x3
--    2d38:	6bc50513          	addi	a0,a0,1724 # 63f0 <malloc+0x14a4>
--    2d3c:	585010ef          	jal	4ac0 <open>
--    2d40:	84aa                	mv	s1,a0
-+    2cde:	4581                	li	a1,0
-+    2ce0:	00003517          	auipc	a0,0x3
-+    2ce4:	68050513          	add	a0,a0,1664 # 6360 <malloc+0x1488>
-+    2ce8:	563010ef          	jal	4a4a <open>
-+    2cec:	84aa                	mv	s1,a0
-   if(fd < 0){
--    2d42:	2a054e63          	bltz	a0,2ffe <subdir+0x422>
-+    2cee:	2a054e63          	bltz	a0,2faa <subdir+0x422>
-   if(read(fd, buf, sizeof(buf)) != 2){
--    2d46:	660d                	lui	a2,0x3
--    2d48:	0000a597          	auipc	a1,0xa
--    2d4c:	f3058593          	addi	a1,a1,-208 # cc78 <buf>
--    2d50:	549010ef          	jal	4a98 <read>
--    2d54:	4789                	li	a5,2
--    2d56:	2af51e63          	bne	a0,a5,3012 <subdir+0x436>
-+    2cf2:	660d                	lui	a2,0x3
-+    2cf4:	00009597          	auipc	a1,0x9
-+    2cf8:	f8458593          	add	a1,a1,-124 # bc78 <buf>
-+    2cfc:	527010ef          	jal	4a22 <read>
-+    2d00:	4789                	li	a5,2
-+    2d02:	2af51e63          	bne	a0,a5,2fbe <subdir+0x436>
-   close(fd);
--    2d5a:	8526                	mv	a0,s1
--    2d5c:	54d010ef          	jal	4aa8 <close>
-+    2d06:	8526                	mv	a0,s1
-+    2d08:	52b010ef          	jal	4a32 <close>
-   if(open("dd/dd/ff", O_RDONLY) >= 0){
--    2d60:	4581                	li	a1,0
--    2d62:	00003517          	auipc	a0,0x3
--    2d66:	60650513          	addi	a0,a0,1542 # 6368 <malloc+0x141c>
--    2d6a:	557010ef          	jal	4ac0 <open>
--    2d6e:	2a055c63          	bgez	a0,3026 <subdir+0x44a>
-+    2d0c:	4581                	li	a1,0
-+    2d0e:	00003517          	auipc	a0,0x3
-+    2d12:	5ca50513          	add	a0,a0,1482 # 62d8 <malloc+0x1400>
-+    2d16:	535010ef          	jal	4a4a <open>
-+    2d1a:	2a055c63          	bgez	a0,2fd2 <subdir+0x44a>
-   if(open("dd/ff/ff", O_CREATE|O_RDWR) >= 0){
--    2d72:	20200593          	li	a1,514
--    2d76:	00004517          	auipc	a0,0x4
--    2d7a:	80a50513          	addi	a0,a0,-2038 # 6580 <malloc+0x1634>
--    2d7e:	543010ef          	jal	4ac0 <open>
--    2d82:	2a055c63          	bgez	a0,303a <subdir+0x45e>
-+    2d1e:	20200593          	li	a1,514
-+    2d22:	00003517          	auipc	a0,0x3
-+    2d26:	7ce50513          	add	a0,a0,1998 # 64f0 <malloc+0x1618>
-+    2d2a:	521010ef          	jal	4a4a <open>
-+    2d2e:	2a055c63          	bgez	a0,2fe6 <subdir+0x45e>
-   if(open("dd/xx/ff", O_CREATE|O_RDWR) >= 0){
--    2d86:	20200593          	li	a1,514
--    2d8a:	00004517          	auipc	a0,0x4
--    2d8e:	82650513          	addi	a0,a0,-2010 # 65b0 <malloc+0x1664>
--    2d92:	52f010ef          	jal	4ac0 <open>
--    2d96:	2a055c63          	bgez	a0,304e <subdir+0x472>
-+    2d32:	20200593          	li	a1,514
-+    2d36:	00003517          	auipc	a0,0x3
-+    2d3a:	7ea50513          	add	a0,a0,2026 # 6520 <malloc+0x1648>
-+    2d3e:	50d010ef          	jal	4a4a <open>
-+    2d42:	2a055c63          	bgez	a0,2ffa <subdir+0x472>
-   if(open("dd", O_CREATE) >= 0){
--    2d9a:	20000593          	li	a1,512
--    2d9e:	00003517          	auipc	a0,0x3
--    2da2:	52a50513          	addi	a0,a0,1322 # 62c8 <malloc+0x137c>
--    2da6:	51b010ef          	jal	4ac0 <open>
--    2daa:	2a055c63          	bgez	a0,3062 <subdir+0x486>
-+    2d46:	20000593          	li	a1,512
-+    2d4a:	00003517          	auipc	a0,0x3
-+    2d4e:	4ee50513          	add	a0,a0,1262 # 6238 <malloc+0x1360>
-+    2d52:	4f9010ef          	jal	4a4a <open>
-+    2d56:	2a055c63          	bgez	a0,300e <subdir+0x486>
-   if(open("dd", O_RDWR) >= 0){
--    2dae:	4589                	li	a1,2
--    2db0:	00003517          	auipc	a0,0x3
--    2db4:	51850513          	addi	a0,a0,1304 # 62c8 <malloc+0x137c>
--    2db8:	509010ef          	jal	4ac0 <open>
--    2dbc:	2a055d63          	bgez	a0,3076 <subdir+0x49a>
-+    2d5a:	4589                	li	a1,2
-+    2d5c:	00003517          	auipc	a0,0x3
-+    2d60:	4dc50513          	add	a0,a0,1244 # 6238 <malloc+0x1360>
-+    2d64:	4e7010ef          	jal	4a4a <open>
-+    2d68:	2a055d63          	bgez	a0,3022 <subdir+0x49a>
-   if(open("dd", O_WRONLY) >= 0){
--    2dc0:	4585                	li	a1,1
--    2dc2:	00003517          	auipc	a0,0x3
--    2dc6:	50650513          	addi	a0,a0,1286 # 62c8 <malloc+0x137c>
--    2dca:	4f7010ef          	jal	4ac0 <open>
--    2dce:	2a055e63          	bgez	a0,308a <subdir+0x4ae>
-+    2d6c:	4585                	li	a1,1
-+    2d6e:	00003517          	auipc	a0,0x3
-+    2d72:	4ca50513          	add	a0,a0,1226 # 6238 <malloc+0x1360>
-+    2d76:	4d5010ef          	jal	4a4a <open>
-+    2d7a:	2a055e63          	bgez	a0,3036 <subdir+0x4ae>
-   if(link("dd/ff/ff", "dd/dd/xx") == 0){
--    2dd2:	00004597          	auipc	a1,0x4
--    2dd6:	86e58593          	addi	a1,a1,-1938 # 6640 <malloc+0x16f4>
--    2dda:	00003517          	auipc	a0,0x3
--    2dde:	7a650513          	addi	a0,a0,1958 # 6580 <malloc+0x1634>
--    2de2:	4ff010ef          	jal	4ae0 <link>
--    2de6:	2a050c63          	beqz	a0,309e <subdir+0x4c2>
-+    2d7e:	00004597          	auipc	a1,0x4
-+    2d82:	83258593          	add	a1,a1,-1998 # 65b0 <malloc+0x16d8>
-+    2d86:	00003517          	auipc	a0,0x3
-+    2d8a:	76a50513          	add	a0,a0,1898 # 64f0 <malloc+0x1618>
-+    2d8e:	4dd010ef          	jal	4a6a <link>
-+    2d92:	2a050c63          	beqz	a0,304a <subdir+0x4c2>
-   if(link("dd/xx/ff", "dd/dd/xx") == 0){
--    2dea:	00004597          	auipc	a1,0x4
--    2dee:	85658593          	addi	a1,a1,-1962 # 6640 <malloc+0x16f4>
--    2df2:	00003517          	auipc	a0,0x3
--    2df6:	7be50513          	addi	a0,a0,1982 # 65b0 <malloc+0x1664>
--    2dfa:	4e7010ef          	jal	4ae0 <link>
--    2dfe:	2a050a63          	beqz	a0,30b2 <subdir+0x4d6>
-+    2d96:	00004597          	auipc	a1,0x4
-+    2d9a:	81a58593          	add	a1,a1,-2022 # 65b0 <malloc+0x16d8>
-+    2d9e:	00003517          	auipc	a0,0x3
-+    2da2:	78250513          	add	a0,a0,1922 # 6520 <malloc+0x1648>
-+    2da6:	4c5010ef          	jal	4a6a <link>
-+    2daa:	2a050a63          	beqz	a0,305e <subdir+0x4d6>
-   if(link("dd/ff", "dd/dd/ffff") == 0){
--    2e02:	00003597          	auipc	a1,0x3
--    2e06:	5ee58593          	addi	a1,a1,1518 # 63f0 <malloc+0x14a4>
--    2e0a:	00003517          	auipc	a0,0x3
--    2e0e:	4de50513          	addi	a0,a0,1246 # 62e8 <malloc+0x139c>
--    2e12:	4cf010ef          	jal	4ae0 <link>
--    2e16:	2a050863          	beqz	a0,30c6 <subdir+0x4ea>
-+    2dae:	00003597          	auipc	a1,0x3
-+    2db2:	5b258593          	add	a1,a1,1458 # 6360 <malloc+0x1488>
-+    2db6:	00003517          	auipc	a0,0x3
-+    2dba:	4a250513          	add	a0,a0,1186 # 6258 <malloc+0x1380>
-+    2dbe:	4ad010ef          	jal	4a6a <link>
-+    2dc2:	2a050863          	beqz	a0,3072 <subdir+0x4ea>
-   if(mkdir("dd/ff/ff") == 0){
--    2e1a:	00003517          	auipc	a0,0x3
--    2e1e:	76650513          	addi	a0,a0,1894 # 6580 <malloc+0x1634>
--    2e22:	4c7010ef          	jal	4ae8 <mkdir>
--    2e26:	2a050a63          	beqz	a0,30da <subdir+0x4fe>
-+    2dc6:	00003517          	auipc	a0,0x3
-+    2dca:	72a50513          	add	a0,a0,1834 # 64f0 <malloc+0x1618>
-+    2dce:	4a5010ef          	jal	4a72 <mkdir>
-+    2dd2:	2a050a63          	beqz	a0,3086 <subdir+0x4fe>
-   if(mkdir("dd/xx/ff") == 0){
--    2e2a:	00003517          	auipc	a0,0x3
--    2e2e:	78650513          	addi	a0,a0,1926 # 65b0 <malloc+0x1664>
--    2e32:	4b7010ef          	jal	4ae8 <mkdir>
--    2e36:	2a050c63          	beqz	a0,30ee <subdir+0x512>
-+    2dd6:	00003517          	auipc	a0,0x3
-+    2dda:	74a50513          	add	a0,a0,1866 # 6520 <malloc+0x1648>
-+    2dde:	495010ef          	jal	4a72 <mkdir>
-+    2de2:	2a050c63          	beqz	a0,309a <subdir+0x512>
-   if(mkdir("dd/dd/ffff") == 0){
--    2e3a:	00003517          	auipc	a0,0x3
--    2e3e:	5b650513          	addi	a0,a0,1462 # 63f0 <malloc+0x14a4>
--    2e42:	4a7010ef          	jal	4ae8 <mkdir>
--    2e46:	2a050e63          	beqz	a0,3102 <subdir+0x526>
-+    2de6:	00003517          	auipc	a0,0x3
-+    2dea:	57a50513          	add	a0,a0,1402 # 6360 <malloc+0x1488>
-+    2dee:	485010ef          	jal	4a72 <mkdir>
-+    2df2:	2a050e63          	beqz	a0,30ae <subdir+0x526>
-   if(unlink("dd/xx/ff") == 0){
--    2e4a:	00003517          	auipc	a0,0x3
--    2e4e:	76650513          	addi	a0,a0,1894 # 65b0 <malloc+0x1664>
--    2e52:	47f010ef          	jal	4ad0 <unlink>
--    2e56:	2c050063          	beqz	a0,3116 <subdir+0x53a>
-+    2df6:	00003517          	auipc	a0,0x3
-+    2dfa:	72a50513          	add	a0,a0,1834 # 6520 <malloc+0x1648>
-+    2dfe:	45d010ef          	jal	4a5a <unlink>
-+    2e02:	2c050063          	beqz	a0,30c2 <subdir+0x53a>
-   if(unlink("dd/ff/ff") == 0){
--    2e5a:	00003517          	auipc	a0,0x3
--    2e5e:	72650513          	addi	a0,a0,1830 # 6580 <malloc+0x1634>
--    2e62:	46f010ef          	jal	4ad0 <unlink>
--    2e66:	2c050263          	beqz	a0,312a <subdir+0x54e>
-+    2e06:	00003517          	auipc	a0,0x3
-+    2e0a:	6ea50513          	add	a0,a0,1770 # 64f0 <malloc+0x1618>
-+    2e0e:	44d010ef          	jal	4a5a <unlink>
-+    2e12:	2c050263          	beqz	a0,30d6 <subdir+0x54e>
-   if(chdir("dd/ff") == 0){
--    2e6a:	00003517          	auipc	a0,0x3
--    2e6e:	47e50513          	addi	a0,a0,1150 # 62e8 <malloc+0x139c>
--    2e72:	47f010ef          	jal	4af0 <chdir>
--    2e76:	2c050463          	beqz	a0,313e <subdir+0x562>
-+    2e16:	00003517          	auipc	a0,0x3
-+    2e1a:	44250513          	add	a0,a0,1090 # 6258 <malloc+0x1380>
-+    2e1e:	45d010ef          	jal	4a7a <chdir>
-+    2e22:	2c050463          	beqz	a0,30ea <subdir+0x562>
-   if(chdir("dd/xx") == 0){
--    2e7a:	00004517          	auipc	a0,0x4
--    2e7e:	91650513          	addi	a0,a0,-1770 # 6790 <malloc+0x1844>
--    2e82:	46f010ef          	jal	4af0 <chdir>
--    2e86:	2c050663          	beqz	a0,3152 <subdir+0x576>
-+    2e26:	00004517          	auipc	a0,0x4
-+    2e2a:	8da50513          	add	a0,a0,-1830 # 6700 <malloc+0x1828>
-+    2e2e:	44d010ef          	jal	4a7a <chdir>
-+    2e32:	2c050663          	beqz	a0,30fe <subdir+0x576>
-   if(unlink("dd/dd/ffff") != 0){
--    2e8a:	00003517          	auipc	a0,0x3
--    2e8e:	56650513          	addi	a0,a0,1382 # 63f0 <malloc+0x14a4>
--    2e92:	43f010ef          	jal	4ad0 <unlink>
--    2e96:	2c051863          	bnez	a0,3166 <subdir+0x58a>
-+    2e36:	00003517          	auipc	a0,0x3
-+    2e3a:	52a50513          	add	a0,a0,1322 # 6360 <malloc+0x1488>
-+    2e3e:	41d010ef          	jal	4a5a <unlink>
-+    2e42:	2c051863          	bnez	a0,3112 <subdir+0x58a>
-   if(unlink("dd/ff") != 0){
--    2e9a:	00003517          	auipc	a0,0x3
--    2e9e:	44e50513          	addi	a0,a0,1102 # 62e8 <malloc+0x139c>
--    2ea2:	42f010ef          	jal	4ad0 <unlink>
--    2ea6:	2c051a63          	bnez	a0,317a <subdir+0x59e>
-+    2e46:	00003517          	auipc	a0,0x3
-+    2e4a:	41250513          	add	a0,a0,1042 # 6258 <malloc+0x1380>
-+    2e4e:	40d010ef          	jal	4a5a <unlink>
-+    2e52:	2c051a63          	bnez	a0,3126 <subdir+0x59e>
-   if(unlink("dd") == 0){
--    2eaa:	00003517          	auipc	a0,0x3
--    2eae:	41e50513          	addi	a0,a0,1054 # 62c8 <malloc+0x137c>
--    2eb2:	41f010ef          	jal	4ad0 <unlink>
--    2eb6:	2c050c63          	beqz	a0,318e <subdir+0x5b2>
-+    2e56:	00003517          	auipc	a0,0x3
-+    2e5a:	3e250513          	add	a0,a0,994 # 6238 <malloc+0x1360>
-+    2e5e:	3fd010ef          	jal	4a5a <unlink>
-+    2e62:	2c050c63          	beqz	a0,313a <subdir+0x5b2>
-   if(unlink("dd/dd") < 0){
--    2eba:	00004517          	auipc	a0,0x4
--    2ebe:	94650513          	addi	a0,a0,-1722 # 6800 <malloc+0x18b4>
--    2ec2:	40f010ef          	jal	4ad0 <unlink>
--    2ec6:	2c054e63          	bltz	a0,31a2 <subdir+0x5c6>
-+    2e66:	00004517          	auipc	a0,0x4
-+    2e6a:	90a50513          	add	a0,a0,-1782 # 6770 <malloc+0x1898>
-+    2e6e:	3ed010ef          	jal	4a5a <unlink>
-+    2e72:	2c054e63          	bltz	a0,314e <subdir+0x5c6>
-   if(unlink("dd") < 0){
--    2eca:	00003517          	auipc	a0,0x3
--    2ece:	3fe50513          	addi	a0,a0,1022 # 62c8 <malloc+0x137c>
--    2ed2:	3ff010ef          	jal	4ad0 <unlink>
--    2ed6:	2e054063          	bltz	a0,31b6 <subdir+0x5da>
-+    2e76:	00003517          	auipc	a0,0x3
-+    2e7a:	3c250513          	add	a0,a0,962 # 6238 <malloc+0x1360>
-+    2e7e:	3dd010ef          	jal	4a5a <unlink>
-+    2e82:	2e054063          	bltz	a0,3162 <subdir+0x5da>
- }
--    2eda:	60e2                	ld	ra,24(sp)
--    2edc:	6442                	ld	s0,16(sp)
--    2ede:	64a2                	ld	s1,8(sp)
--    2ee0:	6902                	ld	s2,0(sp)
--    2ee2:	6105                	addi	sp,sp,32
--    2ee4:	8082                	ret
-+    2e86:	60e2                	ld	ra,24(sp)
-+    2e88:	6442                	ld	s0,16(sp)
-+    2e8a:	64a2                	ld	s1,8(sp)
-+    2e8c:	6902                	ld	s2,0(sp)
-+    2e8e:	6105                	add	sp,sp,32
-+    2e90:	8082                	ret
-     printf("%s: mkdir dd failed\n", s);
--    2ee6:	85ca                	mv	a1,s2
--    2ee8:	00003517          	auipc	a0,0x3
--    2eec:	3e850513          	addi	a0,a0,1000 # 62d0 <malloc+0x1384>
--    2ef0:	7a9010ef          	jal	4e98 <printf>
-+    2e92:	85ca                	mv	a1,s2
-+    2e94:	00003517          	auipc	a0,0x3
-+    2e98:	3ac50513          	add	a0,a0,940 # 6240 <malloc+0x1368>
-+    2e9c:	789010ef          	jal	4e24 <printf>
-     exit(1);
--    2ef4:	4505                	li	a0,1
--    2ef6:	38b010ef          	jal	4a80 <exit>
-+    2ea0:	4505                	li	a0,1
-+    2ea2:	369010ef          	jal	4a0a <exit>
-     printf("%s: create dd/ff failed\n", s);
--    2efa:	85ca                	mv	a1,s2
--    2efc:	00003517          	auipc	a0,0x3
--    2f00:	3f450513          	addi	a0,a0,1012 # 62f0 <malloc+0x13a4>
--    2f04:	795010ef          	jal	4e98 <printf>
-+    2ea6:	85ca                	mv	a1,s2
-+    2ea8:	00003517          	auipc	a0,0x3
-+    2eac:	3b850513          	add	a0,a0,952 # 6260 <malloc+0x1388>
-+    2eb0:	775010ef          	jal	4e24 <printf>
-     exit(1);
--    2f08:	4505                	li	a0,1
--    2f0a:	377010ef          	jal	4a80 <exit>
-+    2eb4:	4505                	li	a0,1
-+    2eb6:	355010ef          	jal	4a0a <exit>
-     printf("%s: unlink dd (non-empty dir) succeeded!\n", s);
--    2f0e:	85ca                	mv	a1,s2
--    2f10:	00003517          	auipc	a0,0x3
--    2f14:	40050513          	addi	a0,a0,1024 # 6310 <malloc+0x13c4>
--    2f18:	781010ef          	jal	4e98 <printf>
-+    2eba:	85ca                	mv	a1,s2
-+    2ebc:	00003517          	auipc	a0,0x3
-+    2ec0:	3c450513          	add	a0,a0,964 # 6280 <malloc+0x13a8>
-+    2ec4:	761010ef          	jal	4e24 <printf>
-     exit(1);
--    2f1c:	4505                	li	a0,1
--    2f1e:	363010ef          	jal	4a80 <exit>
-+    2ec8:	4505                	li	a0,1
-+    2eca:	341010ef          	jal	4a0a <exit>
-     printf("%s: subdir mkdir dd/dd failed\n", s);
--    2f22:	85ca                	mv	a1,s2
--    2f24:	00003517          	auipc	a0,0x3
--    2f28:	42450513          	addi	a0,a0,1060 # 6348 <malloc+0x13fc>
--    2f2c:	76d010ef          	jal	4e98 <printf>
-+    2ece:	85ca                	mv	a1,s2
-+    2ed0:	00003517          	auipc	a0,0x3
-+    2ed4:	3e850513          	add	a0,a0,1000 # 62b8 <malloc+0x13e0>
-+    2ed8:	74d010ef          	jal	4e24 <printf>
-     exit(1);
--    2f30:	4505                	li	a0,1
--    2f32:	34f010ef          	jal	4a80 <exit>
-+    2edc:	4505                	li	a0,1
-+    2ede:	32d010ef          	jal	4a0a <exit>
-     printf("%s: create dd/dd/ff failed\n", s);
--    2f36:	85ca                	mv	a1,s2
--    2f38:	00003517          	auipc	a0,0x3
--    2f3c:	44050513          	addi	a0,a0,1088 # 6378 <malloc+0x142c>
--    2f40:	759010ef          	jal	4e98 <printf>
-+    2ee2:	85ca                	mv	a1,s2
-+    2ee4:	00003517          	auipc	a0,0x3
-+    2ee8:	40450513          	add	a0,a0,1028 # 62e8 <malloc+0x1410>
-+    2eec:	739010ef          	jal	4e24 <printf>
-     exit(1);
--    2f44:	4505                	li	a0,1
--    2f46:	33b010ef          	jal	4a80 <exit>
-+    2ef0:	4505                	li	a0,1
-+    2ef2:	319010ef          	jal	4a0a <exit>
-     printf("%s: open dd/dd/../ff failed\n", s);
--    2f4a:	85ca                	mv	a1,s2
--    2f4c:	00003517          	auipc	a0,0x3
--    2f50:	46450513          	addi	a0,a0,1124 # 63b0 <malloc+0x1464>
--    2f54:	745010ef          	jal	4e98 <printf>
-+    2ef6:	85ca                	mv	a1,s2
-+    2ef8:	00003517          	auipc	a0,0x3
-+    2efc:	42850513          	add	a0,a0,1064 # 6320 <malloc+0x1448>
-+    2f00:	725010ef          	jal	4e24 <printf>
-     exit(1);
--    2f58:	4505                	li	a0,1
--    2f5a:	327010ef          	jal	4a80 <exit>
-+    2f04:	4505                	li	a0,1
-+    2f06:	305010ef          	jal	4a0a <exit>
-     printf("%s: dd/dd/../ff wrong content\n", s);
--    2f5e:	85ca                	mv	a1,s2
--    2f60:	00003517          	auipc	a0,0x3
--    2f64:	47050513          	addi	a0,a0,1136 # 63d0 <malloc+0x1484>
--    2f68:	731010ef          	jal	4e98 <printf>
-+    2f0a:	85ca                	mv	a1,s2
-+    2f0c:	00003517          	auipc	a0,0x3
-+    2f10:	43450513          	add	a0,a0,1076 # 6340 <malloc+0x1468>
-+    2f14:	711010ef          	jal	4e24 <printf>
-     exit(1);
--    2f6c:	4505                	li	a0,1
--    2f6e:	313010ef          	jal	4a80 <exit>
-+    2f18:	4505                	li	a0,1
-+    2f1a:	2f1010ef          	jal	4a0a <exit>
-     printf("%s: link dd/dd/ff dd/dd/ffff failed\n", s);
--    2f72:	85ca                	mv	a1,s2
--    2f74:	00003517          	auipc	a0,0x3
--    2f78:	48c50513          	addi	a0,a0,1164 # 6400 <malloc+0x14b4>
--    2f7c:	71d010ef          	jal	4e98 <printf>
-+    2f1e:	85ca                	mv	a1,s2
-+    2f20:	00003517          	auipc	a0,0x3
-+    2f24:	45050513          	add	a0,a0,1104 # 6370 <malloc+0x1498>
-+    2f28:	6fd010ef          	jal	4e24 <printf>
-     exit(1);
--    2f80:	4505                	li	a0,1
--    2f82:	2ff010ef          	jal	4a80 <exit>
-+    2f2c:	4505                	li	a0,1
-+    2f2e:	2dd010ef          	jal	4a0a <exit>
-     printf("%s: unlink dd/dd/ff failed\n", s);
--    2f86:	85ca                	mv	a1,s2
--    2f88:	00003517          	auipc	a0,0x3
--    2f8c:	4a050513          	addi	a0,a0,1184 # 6428 <malloc+0x14dc>
--    2f90:	709010ef          	jal	4e98 <printf>
-+    2f32:	85ca                	mv	a1,s2
-+    2f34:	00003517          	auipc	a0,0x3
-+    2f38:	46450513          	add	a0,a0,1124 # 6398 <malloc+0x14c0>
-+    2f3c:	6e9010ef          	jal	4e24 <printf>
-     exit(1);
--    2f94:	4505                	li	a0,1
--    2f96:	2eb010ef          	jal	4a80 <exit>
-+    2f40:	4505                	li	a0,1
-+    2f42:	2c9010ef          	jal	4a0a <exit>
-     printf("%s: open (unlinked) dd/dd/ff succeeded\n", s);
--    2f9a:	85ca                	mv	a1,s2
--    2f9c:	00003517          	auipc	a0,0x3
--    2fa0:	4ac50513          	addi	a0,a0,1196 # 6448 <malloc+0x14fc>
--    2fa4:	6f5010ef          	jal	4e98 <printf>
-+    2f46:	85ca                	mv	a1,s2
-+    2f48:	00003517          	auipc	a0,0x3
-+    2f4c:	47050513          	add	a0,a0,1136 # 63b8 <malloc+0x14e0>
-+    2f50:	6d5010ef          	jal	4e24 <printf>
-     exit(1);
--    2fa8:	4505                	li	a0,1
--    2faa:	2d7010ef          	jal	4a80 <exit>
-+    2f54:	4505                	li	a0,1
-+    2f56:	2b5010ef          	jal	4a0a <exit>
-     printf("%s: chdir dd failed\n", s);
--    2fae:	85ca                	mv	a1,s2
--    2fb0:	00003517          	auipc	a0,0x3
--    2fb4:	4c050513          	addi	a0,a0,1216 # 6470 <malloc+0x1524>
--    2fb8:	6e1010ef          	jal	4e98 <printf>
-+    2f5a:	85ca                	mv	a1,s2
-+    2f5c:	00003517          	auipc	a0,0x3
-+    2f60:	48450513          	add	a0,a0,1156 # 63e0 <malloc+0x1508>
-+    2f64:	6c1010ef          	jal	4e24 <printf>
-     exit(1);
--    2fbc:	4505                	li	a0,1
--    2fbe:	2c3010ef          	jal	4a80 <exit>
-+    2f68:	4505                	li	a0,1
-+    2f6a:	2a1010ef          	jal	4a0a <exit>
-     printf("%s: chdir dd/../../dd failed\n", s);
--    2fc2:	85ca                	mv	a1,s2
--    2fc4:	00003517          	auipc	a0,0x3
--    2fc8:	4d450513          	addi	a0,a0,1236 # 6498 <malloc+0x154c>
--    2fcc:	6cd010ef          	jal	4e98 <printf>
-+    2f6e:	85ca                	mv	a1,s2
-+    2f70:	00003517          	auipc	a0,0x3
-+    2f74:	49850513          	add	a0,a0,1176 # 6408 <malloc+0x1530>
-+    2f78:	6ad010ef          	jal	4e24 <printf>
-     exit(1);
--    2fd0:	4505                	li	a0,1
--    2fd2:	2af010ef          	jal	4a80 <exit>
-+    2f7c:	4505                	li	a0,1
-+    2f7e:	28d010ef          	jal	4a0a <exit>
-     printf("%s: chdir dd/../../../dd failed\n", s);
--    2fd6:	85ca                	mv	a1,s2
--    2fd8:	00003517          	auipc	a0,0x3
--    2fdc:	4f050513          	addi	a0,a0,1264 # 64c8 <malloc+0x157c>
--    2fe0:	6b9010ef          	jal	4e98 <printf>
-+    2f82:	85ca                	mv	a1,s2
-+    2f84:	00003517          	auipc	a0,0x3
-+    2f88:	4b450513          	add	a0,a0,1204 # 6438 <malloc+0x1560>
-+    2f8c:	699010ef          	jal	4e24 <printf>
-     exit(1);
--    2fe4:	4505                	li	a0,1
--    2fe6:	29b010ef          	jal	4a80 <exit>
-+    2f90:	4505                	li	a0,1
-+    2f92:	279010ef          	jal	4a0a <exit>
-     printf("%s: chdir ./.. failed\n", s);
--    2fea:	85ca                	mv	a1,s2
--    2fec:	00003517          	auipc	a0,0x3
--    2ff0:	50c50513          	addi	a0,a0,1292 # 64f8 <malloc+0x15ac>
--    2ff4:	6a5010ef          	jal	4e98 <printf>
-+    2f96:	85ca                	mv	a1,s2
-+    2f98:	00003517          	auipc	a0,0x3
-+    2f9c:	4d050513          	add	a0,a0,1232 # 6468 <malloc+0x1590>
-+    2fa0:	685010ef          	jal	4e24 <printf>
-     exit(1);
--    2ff8:	4505                	li	a0,1
--    2ffa:	287010ef          	jal	4a80 <exit>
-+    2fa4:	4505                	li	a0,1
-+    2fa6:	265010ef          	jal	4a0a <exit>
-     printf("%s: open dd/dd/ffff failed\n", s);
--    2ffe:	85ca                	mv	a1,s2
--    3000:	00003517          	auipc	a0,0x3
--    3004:	51050513          	addi	a0,a0,1296 # 6510 <malloc+0x15c4>
--    3008:	691010ef          	jal	4e98 <printf>
-+    2faa:	85ca                	mv	a1,s2
-+    2fac:	00003517          	auipc	a0,0x3
-+    2fb0:	4d450513          	add	a0,a0,1236 # 6480 <malloc+0x15a8>
-+    2fb4:	671010ef          	jal	4e24 <printf>
-     exit(1);
--    300c:	4505                	li	a0,1
--    300e:	273010ef          	jal	4a80 <exit>
-+    2fb8:	4505                	li	a0,1
-+    2fba:	251010ef          	jal	4a0a <exit>
-     printf("%s: read dd/dd/ffff wrong len\n", s);
--    3012:	85ca                	mv	a1,s2
--    3014:	00003517          	auipc	a0,0x3
--    3018:	51c50513          	addi	a0,a0,1308 # 6530 <malloc+0x15e4>
--    301c:	67d010ef          	jal	4e98 <printf>
-+    2fbe:	85ca                	mv	a1,s2
-+    2fc0:	00003517          	auipc	a0,0x3
-+    2fc4:	4e050513          	add	a0,a0,1248 # 64a0 <malloc+0x15c8>
-+    2fc8:	65d010ef          	jal	4e24 <printf>
-     exit(1);
--    3020:	4505                	li	a0,1
--    3022:	25f010ef          	jal	4a80 <exit>
-+    2fcc:	4505                	li	a0,1
-+    2fce:	23d010ef          	jal	4a0a <exit>
-     printf("%s: open (unlinked) dd/dd/ff succeeded!\n", s);
--    3026:	85ca                	mv	a1,s2
--    3028:	00003517          	auipc	a0,0x3
--    302c:	52850513          	addi	a0,a0,1320 # 6550 <malloc+0x1604>
--    3030:	669010ef          	jal	4e98 <printf>
-+    2fd2:	85ca                	mv	a1,s2
-+    2fd4:	00003517          	auipc	a0,0x3
-+    2fd8:	4ec50513          	add	a0,a0,1260 # 64c0 <malloc+0x15e8>
-+    2fdc:	649010ef          	jal	4e24 <printf>
-     exit(1);
--    3034:	4505                	li	a0,1
--    3036:	24b010ef          	jal	4a80 <exit>
-+    2fe0:	4505                	li	a0,1
-+    2fe2:	229010ef          	jal	4a0a <exit>
-     printf("%s: create dd/ff/ff succeeded!\n", s);
--    303a:	85ca                	mv	a1,s2
--    303c:	00003517          	auipc	a0,0x3
--    3040:	55450513          	addi	a0,a0,1364 # 6590 <malloc+0x1644>
--    3044:	655010ef          	jal	4e98 <printf>
-+    2fe6:	85ca                	mv	a1,s2
-+    2fe8:	00003517          	auipc	a0,0x3
-+    2fec:	51850513          	add	a0,a0,1304 # 6500 <malloc+0x1628>
-+    2ff0:	635010ef          	jal	4e24 <printf>
-     exit(1);
--    3048:	4505                	li	a0,1
--    304a:	237010ef          	jal	4a80 <exit>
-+    2ff4:	4505                	li	a0,1
-+    2ff6:	215010ef          	jal	4a0a <exit>
-     printf("%s: create dd/xx/ff succeeded!\n", s);
--    304e:	85ca                	mv	a1,s2
--    3050:	00003517          	auipc	a0,0x3
--    3054:	57050513          	addi	a0,a0,1392 # 65c0 <malloc+0x1674>
--    3058:	641010ef          	jal	4e98 <printf>
-+    2ffa:	85ca                	mv	a1,s2
-+    2ffc:	00003517          	auipc	a0,0x3
-+    3000:	53450513          	add	a0,a0,1332 # 6530 <malloc+0x1658>
-+    3004:	621010ef          	jal	4e24 <printf>
-     exit(1);
--    305c:	4505                	li	a0,1
--    305e:	223010ef          	jal	4a80 <exit>
-+    3008:	4505                	li	a0,1
-+    300a:	201010ef          	jal	4a0a <exit>
-     printf("%s: create dd succeeded!\n", s);
--    3062:	85ca                	mv	a1,s2
--    3064:	00003517          	auipc	a0,0x3
--    3068:	57c50513          	addi	a0,a0,1404 # 65e0 <malloc+0x1694>
--    306c:	62d010ef          	jal	4e98 <printf>
-+    300e:	85ca                	mv	a1,s2
-+    3010:	00003517          	auipc	a0,0x3
-+    3014:	54050513          	add	a0,a0,1344 # 6550 <malloc+0x1678>
-+    3018:	60d010ef          	jal	4e24 <printf>
-     exit(1);
--    3070:	4505                	li	a0,1
--    3072:	20f010ef          	jal	4a80 <exit>
-+    301c:	4505                	li	a0,1
-+    301e:	1ed010ef          	jal	4a0a <exit>
-     printf("%s: open dd rdwr succeeded!\n", s);
--    3076:	85ca                	mv	a1,s2
--    3078:	00003517          	auipc	a0,0x3
--    307c:	58850513          	addi	a0,a0,1416 # 6600 <malloc+0x16b4>
--    3080:	619010ef          	jal	4e98 <printf>
-+    3022:	85ca                	mv	a1,s2
-+    3024:	00003517          	auipc	a0,0x3
-+    3028:	54c50513          	add	a0,a0,1356 # 6570 <malloc+0x1698>
-+    302c:	5f9010ef          	jal	4e24 <printf>
-     exit(1);
--    3084:	4505                	li	a0,1
--    3086:	1fb010ef          	jal	4a80 <exit>
-+    3030:	4505                	li	a0,1
-+    3032:	1d9010ef          	jal	4a0a <exit>
-     printf("%s: open dd wronly succeeded!\n", s);
--    308a:	85ca                	mv	a1,s2
--    308c:	00003517          	auipc	a0,0x3
--    3090:	59450513          	addi	a0,a0,1428 # 6620 <malloc+0x16d4>
--    3094:	605010ef          	jal	4e98 <printf>
-+    3036:	85ca                	mv	a1,s2
-+    3038:	00003517          	auipc	a0,0x3
-+    303c:	55850513          	add	a0,a0,1368 # 6590 <malloc+0x16b8>
-+    3040:	5e5010ef          	jal	4e24 <printf>
-     exit(1);
--    3098:	4505                	li	a0,1
--    309a:	1e7010ef          	jal	4a80 <exit>
-+    3044:	4505                	li	a0,1
-+    3046:	1c5010ef          	jal	4a0a <exit>
-     printf("%s: link dd/ff/ff dd/dd/xx succeeded!\n", s);
--    309e:	85ca                	mv	a1,s2
--    30a0:	00003517          	auipc	a0,0x3
--    30a4:	5b050513          	addi	a0,a0,1456 # 6650 <malloc+0x1704>
--    30a8:	5f1010ef          	jal	4e98 <printf>
-+    304a:	85ca                	mv	a1,s2
-+    304c:	00003517          	auipc	a0,0x3
-+    3050:	57450513          	add	a0,a0,1396 # 65c0 <malloc+0x16e8>
-+    3054:	5d1010ef          	jal	4e24 <printf>
-     exit(1);
--    30ac:	4505                	li	a0,1
--    30ae:	1d3010ef          	jal	4a80 <exit>
-+    3058:	4505                	li	a0,1
-+    305a:	1b1010ef          	jal	4a0a <exit>
-     printf("%s: link dd/xx/ff dd/dd/xx succeeded!\n", s);
--    30b2:	85ca                	mv	a1,s2
--    30b4:	00003517          	auipc	a0,0x3
--    30b8:	5c450513          	addi	a0,a0,1476 # 6678 <malloc+0x172c>
--    30bc:	5dd010ef          	jal	4e98 <printf>
-+    305e:	85ca                	mv	a1,s2
-+    3060:	00003517          	auipc	a0,0x3
-+    3064:	58850513          	add	a0,a0,1416 # 65e8 <malloc+0x1710>
-+    3068:	5bd010ef          	jal	4e24 <printf>
-     exit(1);
--    30c0:	4505                	li	a0,1
--    30c2:	1bf010ef          	jal	4a80 <exit>
-+    306c:	4505                	li	a0,1
-+    306e:	19d010ef          	jal	4a0a <exit>
-     printf("%s: link dd/ff dd/dd/ffff succeeded!\n", s);
--    30c6:	85ca                	mv	a1,s2
--    30c8:	00003517          	auipc	a0,0x3
--    30cc:	5d850513          	addi	a0,a0,1496 # 66a0 <malloc+0x1754>
--    30d0:	5c9010ef          	jal	4e98 <printf>
-+    3072:	85ca                	mv	a1,s2
-+    3074:	00003517          	auipc	a0,0x3
-+    3078:	59c50513          	add	a0,a0,1436 # 6610 <malloc+0x1738>
-+    307c:	5a9010ef          	jal	4e24 <printf>
-     exit(1);
--    30d4:	4505                	li	a0,1
--    30d6:	1ab010ef          	jal	4a80 <exit>
-+    3080:	4505                	li	a0,1
-+    3082:	189010ef          	jal	4a0a <exit>
-     printf("%s: mkdir dd/ff/ff succeeded!\n", s);
--    30da:	85ca                	mv	a1,s2
--    30dc:	00003517          	auipc	a0,0x3
--    30e0:	5ec50513          	addi	a0,a0,1516 # 66c8 <malloc+0x177c>
--    30e4:	5b5010ef          	jal	4e98 <printf>
-+    3086:	85ca                	mv	a1,s2
-+    3088:	00003517          	auipc	a0,0x3
-+    308c:	5b050513          	add	a0,a0,1456 # 6638 <malloc+0x1760>
-+    3090:	595010ef          	jal	4e24 <printf>
-     exit(1);
--    30e8:	4505                	li	a0,1
--    30ea:	197010ef          	jal	4a80 <exit>
-+    3094:	4505                	li	a0,1
-+    3096:	175010ef          	jal	4a0a <exit>
-     printf("%s: mkdir dd/xx/ff succeeded!\n", s);
--    30ee:	85ca                	mv	a1,s2
--    30f0:	00003517          	auipc	a0,0x3
--    30f4:	5f850513          	addi	a0,a0,1528 # 66e8 <malloc+0x179c>
--    30f8:	5a1010ef          	jal	4e98 <printf>
-+    309a:	85ca                	mv	a1,s2
-+    309c:	00003517          	auipc	a0,0x3
-+    30a0:	5bc50513          	add	a0,a0,1468 # 6658 <malloc+0x1780>
-+    30a4:	581010ef          	jal	4e24 <printf>
-     exit(1);
--    30fc:	4505                	li	a0,1
--    30fe:	183010ef          	jal	4a80 <exit>
-+    30a8:	4505                	li	a0,1
-+    30aa:	161010ef          	jal	4a0a <exit>
-     printf("%s: mkdir dd/dd/ffff succeeded!\n", s);
--    3102:	85ca                	mv	a1,s2
--    3104:	00003517          	auipc	a0,0x3
--    3108:	60450513          	addi	a0,a0,1540 # 6708 <malloc+0x17bc>
--    310c:	58d010ef          	jal	4e98 <printf>
-+    30ae:	85ca                	mv	a1,s2
-+    30b0:	00003517          	auipc	a0,0x3
-+    30b4:	5c850513          	add	a0,a0,1480 # 6678 <malloc+0x17a0>
-+    30b8:	56d010ef          	jal	4e24 <printf>
-     exit(1);
--    3110:	4505                	li	a0,1
--    3112:	16f010ef          	jal	4a80 <exit>
-+    30bc:	4505                	li	a0,1
-+    30be:	14d010ef          	jal	4a0a <exit>
-     printf("%s: unlink dd/xx/ff succeeded!\n", s);
--    3116:	85ca                	mv	a1,s2
--    3118:	00003517          	auipc	a0,0x3
--    311c:	61850513          	addi	a0,a0,1560 # 6730 <malloc+0x17e4>
--    3120:	579010ef          	jal	4e98 <printf>
-+    30c2:	85ca                	mv	a1,s2
-+    30c4:	00003517          	auipc	a0,0x3
-+    30c8:	5dc50513          	add	a0,a0,1500 # 66a0 <malloc+0x17c8>
-+    30cc:	559010ef          	jal	4e24 <printf>
-     exit(1);
--    3124:	4505                	li	a0,1
--    3126:	15b010ef          	jal	4a80 <exit>
-+    30d0:	4505                	li	a0,1
-+    30d2:	139010ef          	jal	4a0a <exit>
-     printf("%s: unlink dd/ff/ff succeeded!\n", s);
--    312a:	85ca                	mv	a1,s2
--    312c:	00003517          	auipc	a0,0x3
--    3130:	62450513          	addi	a0,a0,1572 # 6750 <malloc+0x1804>
--    3134:	565010ef          	jal	4e98 <printf>
-+    30d6:	85ca                	mv	a1,s2
-+    30d8:	00003517          	auipc	a0,0x3
-+    30dc:	5e850513          	add	a0,a0,1512 # 66c0 <malloc+0x17e8>
-+    30e0:	545010ef          	jal	4e24 <printf>
-     exit(1);
--    3138:	4505                	li	a0,1
--    313a:	147010ef          	jal	4a80 <exit>
-+    30e4:	4505                	li	a0,1
-+    30e6:	125010ef          	jal	4a0a <exit>
-     printf("%s: chdir dd/ff succeeded!\n", s);
--    313e:	85ca                	mv	a1,s2
--    3140:	00003517          	auipc	a0,0x3
--    3144:	63050513          	addi	a0,a0,1584 # 6770 <malloc+0x1824>
--    3148:	551010ef          	jal	4e98 <printf>
-+    30ea:	85ca                	mv	a1,s2
-+    30ec:	00003517          	auipc	a0,0x3
-+    30f0:	5f450513          	add	a0,a0,1524 # 66e0 <malloc+0x1808>
-+    30f4:	531010ef          	jal	4e24 <printf>
-     exit(1);
--    314c:	4505                	li	a0,1
--    314e:	133010ef          	jal	4a80 <exit>
-+    30f8:	4505                	li	a0,1
-+    30fa:	111010ef          	jal	4a0a <exit>
-     printf("%s: chdir dd/xx succeeded!\n", s);
--    3152:	85ca                	mv	a1,s2
--    3154:	00003517          	auipc	a0,0x3
--    3158:	64450513          	addi	a0,a0,1604 # 6798 <malloc+0x184c>
--    315c:	53d010ef          	jal	4e98 <printf>
-+    30fe:	85ca                	mv	a1,s2
-+    3100:	00003517          	auipc	a0,0x3
-+    3104:	60850513          	add	a0,a0,1544 # 6708 <malloc+0x1830>
-+    3108:	51d010ef          	jal	4e24 <printf>
-     exit(1);
--    3160:	4505                	li	a0,1
--    3162:	11f010ef          	jal	4a80 <exit>
-+    310c:	4505                	li	a0,1
-+    310e:	0fd010ef          	jal	4a0a <exit>
-     printf("%s: unlink dd/dd/ff failed\n", s);
--    3166:	85ca                	mv	a1,s2
--    3168:	00003517          	auipc	a0,0x3
--    316c:	2c050513          	addi	a0,a0,704 # 6428 <malloc+0x14dc>
--    3170:	529010ef          	jal	4e98 <printf>
-+    3112:	85ca                	mv	a1,s2
-+    3114:	00003517          	auipc	a0,0x3
-+    3118:	28450513          	add	a0,a0,644 # 6398 <malloc+0x14c0>
-+    311c:	509010ef          	jal	4e24 <printf>
-     exit(1);
--    3174:	4505                	li	a0,1
--    3176:	10b010ef          	jal	4a80 <exit>
-+    3120:	4505                	li	a0,1
-+    3122:	0e9010ef          	jal	4a0a <exit>
-     printf("%s: unlink dd/ff failed\n", s);
--    317a:	85ca                	mv	a1,s2
--    317c:	00003517          	auipc	a0,0x3
--    3180:	63c50513          	addi	a0,a0,1596 # 67b8 <malloc+0x186c>
--    3184:	515010ef          	jal	4e98 <printf>
-+    3126:	85ca                	mv	a1,s2
-+    3128:	00003517          	auipc	a0,0x3
-+    312c:	60050513          	add	a0,a0,1536 # 6728 <malloc+0x1850>
-+    3130:	4f5010ef          	jal	4e24 <printf>
-     exit(1);
--    3188:	4505                	li	a0,1
--    318a:	0f7010ef          	jal	4a80 <exit>
-+    3134:	4505                	li	a0,1
-+    3136:	0d5010ef          	jal	4a0a <exit>
-     printf("%s: unlink non-empty dd succeeded!\n", s);
--    318e:	85ca                	mv	a1,s2
--    3190:	00003517          	auipc	a0,0x3
--    3194:	64850513          	addi	a0,a0,1608 # 67d8 <malloc+0x188c>
--    3198:	501010ef          	jal	4e98 <printf>
-+    313a:	85ca                	mv	a1,s2
-+    313c:	00003517          	auipc	a0,0x3
-+    3140:	60c50513          	add	a0,a0,1548 # 6748 <malloc+0x1870>
-+    3144:	4e1010ef          	jal	4e24 <printf>
-     exit(1);
--    319c:	4505                	li	a0,1
--    319e:	0e3010ef          	jal	4a80 <exit>
-+    3148:	4505                	li	a0,1
-+    314a:	0c1010ef          	jal	4a0a <exit>
-     printf("%s: unlink dd/dd failed\n", s);
--    31a2:	85ca                	mv	a1,s2
--    31a4:	00003517          	auipc	a0,0x3
--    31a8:	66450513          	addi	a0,a0,1636 # 6808 <malloc+0x18bc>
--    31ac:	4ed010ef          	jal	4e98 <printf>
-+    314e:	85ca                	mv	a1,s2
-+    3150:	00003517          	auipc	a0,0x3
-+    3154:	62850513          	add	a0,a0,1576 # 6778 <malloc+0x18a0>
-+    3158:	4cd010ef          	jal	4e24 <printf>
-     exit(1);
--    31b0:	4505                	li	a0,1
--    31b2:	0cf010ef          	jal	4a80 <exit>
-+    315c:	4505                	li	a0,1
-+    315e:	0ad010ef          	jal	4a0a <exit>
-     printf("%s: unlink dd failed\n", s);
--    31b6:	85ca                	mv	a1,s2
--    31b8:	00003517          	auipc	a0,0x3
--    31bc:	67050513          	addi	a0,a0,1648 # 6828 <malloc+0x18dc>
--    31c0:	4d9010ef          	jal	4e98 <printf>
-+    3162:	85ca                	mv	a1,s2
-+    3164:	00003517          	auipc	a0,0x3
-+    3168:	63450513          	add	a0,a0,1588 # 6798 <malloc+0x18c0>
-+    316c:	4b9010ef          	jal	4e24 <printf>
-     exit(1);
--    31c4:	4505                	li	a0,1
--    31c6:	0bb010ef          	jal	4a80 <exit>
-+    3170:	4505                	li	a0,1
-+    3172:	099010ef          	jal	4a0a <exit>
- 
--00000000000031ca <rmdot>:
-+0000000000003176 <rmdot>:
- {
--    31ca:	1101                	addi	sp,sp,-32
--    31cc:	ec06                	sd	ra,24(sp)
--    31ce:	e822                	sd	s0,16(sp)
--    31d0:	e426                	sd	s1,8(sp)
--    31d2:	1000                	addi	s0,sp,32
--    31d4:	84aa                	mv	s1,a0
-+    3176:	1101                	add	sp,sp,-32
-+    3178:	ec06                	sd	ra,24(sp)
-+    317a:	e822                	sd	s0,16(sp)
-+    317c:	e426                	sd	s1,8(sp)
-+    317e:	1000                	add	s0,sp,32
-+    3180:	84aa                	mv	s1,a0
-   if(mkdir("dots") != 0){
--    31d6:	00003517          	auipc	a0,0x3
--    31da:	66a50513          	addi	a0,a0,1642 # 6840 <malloc+0x18f4>
--    31de:	10b010ef          	jal	4ae8 <mkdir>
--    31e2:	e53d                	bnez	a0,3250 <rmdot+0x86>
-+    3182:	00003517          	auipc	a0,0x3
-+    3186:	62e50513          	add	a0,a0,1582 # 67b0 <malloc+0x18d8>
-+    318a:	0e9010ef          	jal	4a72 <mkdir>
-+    318e:	e53d                	bnez	a0,31fc <rmdot+0x86>
-   if(chdir("dots") != 0){
--    31e4:	00003517          	auipc	a0,0x3
--    31e8:	65c50513          	addi	a0,a0,1628 # 6840 <malloc+0x18f4>
--    31ec:	105010ef          	jal	4af0 <chdir>
--    31f0:	e935                	bnez	a0,3264 <rmdot+0x9a>
-+    3190:	00003517          	auipc	a0,0x3
-+    3194:	62050513          	add	a0,a0,1568 # 67b0 <malloc+0x18d8>
-+    3198:	0e3010ef          	jal	4a7a <chdir>
-+    319c:	e935                	bnez	a0,3210 <rmdot+0x9a>
-   if(unlink(".") == 0){
--    31f2:	00002517          	auipc	a0,0x2
--    31f6:	57e50513          	addi	a0,a0,1406 # 5770 <malloc+0x824>
--    31fa:	0d7010ef          	jal	4ad0 <unlink>
--    31fe:	cd2d                	beqz	a0,3278 <rmdot+0xae>
-+    319e:	00002517          	auipc	a0,0x2
-+    31a2:	54250513          	add	a0,a0,1346 # 56e0 <malloc+0x808>
-+    31a6:	0b5010ef          	jal	4a5a <unlink>
-+    31aa:	cd2d                	beqz	a0,3224 <rmdot+0xae>
-   if(unlink("..") == 0){
--    3200:	00003517          	auipc	a0,0x3
--    3204:	09050513          	addi	a0,a0,144 # 6290 <malloc+0x1344>
--    3208:	0c9010ef          	jal	4ad0 <unlink>
--    320c:	c141                	beqz	a0,328c <rmdot+0xc2>
-+    31ac:	00003517          	auipc	a0,0x3
-+    31b0:	05450513          	add	a0,a0,84 # 6200 <malloc+0x1328>
-+    31b4:	0a7010ef          	jal	4a5a <unlink>
-+    31b8:	c141                	beqz	a0,3238 <rmdot+0xc2>
-   if(chdir("/") != 0){
--    320e:	00003517          	auipc	a0,0x3
--    3212:	02a50513          	addi	a0,a0,42 # 6238 <malloc+0x12ec>
--    3216:	0db010ef          	jal	4af0 <chdir>
--    321a:	e159                	bnez	a0,32a0 <rmdot+0xd6>
-+    31ba:	00003517          	auipc	a0,0x3
-+    31be:	fee50513          	add	a0,a0,-18 # 61a8 <malloc+0x12d0>
-+    31c2:	0b9010ef          	jal	4a7a <chdir>
-+    31c6:	e159                	bnez	a0,324c <rmdot+0xd6>
-   if(unlink("dots/.") == 0){
--    321c:	00003517          	auipc	a0,0x3
--    3220:	68c50513          	addi	a0,a0,1676 # 68a8 <malloc+0x195c>
--    3224:	0ad010ef          	jal	4ad0 <unlink>
--    3228:	c551                	beqz	a0,32b4 <rmdot+0xea>
-+    31c8:	00003517          	auipc	a0,0x3
-+    31cc:	65050513          	add	a0,a0,1616 # 6818 <malloc+0x1940>
-+    31d0:	08b010ef          	jal	4a5a <unlink>
-+    31d4:	c551                	beqz	a0,3260 <rmdot+0xea>
-   if(unlink("dots/..") == 0){
--    322a:	00003517          	auipc	a0,0x3
--    322e:	6a650513          	addi	a0,a0,1702 # 68d0 <malloc+0x1984>
--    3232:	09f010ef          	jal	4ad0 <unlink>
--    3236:	c949                	beqz	a0,32c8 <rmdot+0xfe>
-+    31d6:	00003517          	auipc	a0,0x3
-+    31da:	66a50513          	add	a0,a0,1642 # 6840 <malloc+0x1968>
-+    31de:	07d010ef          	jal	4a5a <unlink>
-+    31e2:	c949                	beqz	a0,3274 <rmdot+0xfe>
-   if(unlink("dots") != 0){
--    3238:	00003517          	auipc	a0,0x3
--    323c:	60850513          	addi	a0,a0,1544 # 6840 <malloc+0x18f4>
--    3240:	091010ef          	jal	4ad0 <unlink>
--    3244:	ed41                	bnez	a0,32dc <rmdot+0x112>
-+    31e4:	00003517          	auipc	a0,0x3
-+    31e8:	5cc50513          	add	a0,a0,1484 # 67b0 <malloc+0x18d8>
-+    31ec:	06f010ef          	jal	4a5a <unlink>
-+    31f0:	ed41                	bnez	a0,3288 <rmdot+0x112>
- }
--    3246:	60e2                	ld	ra,24(sp)
--    3248:	6442                	ld	s0,16(sp)
--    324a:	64a2                	ld	s1,8(sp)
--    324c:	6105                	addi	sp,sp,32
--    324e:	8082                	ret
-+    31f2:	60e2                	ld	ra,24(sp)
-+    31f4:	6442                	ld	s0,16(sp)
-+    31f6:	64a2                	ld	s1,8(sp)
-+    31f8:	6105                	add	sp,sp,32
-+    31fa:	8082                	ret
-     printf("%s: mkdir dots failed\n", s);
--    3250:	85a6                	mv	a1,s1
--    3252:	00003517          	auipc	a0,0x3
--    3256:	5f650513          	addi	a0,a0,1526 # 6848 <malloc+0x18fc>
--    325a:	43f010ef          	jal	4e98 <printf>
-+    31fc:	85a6                	mv	a1,s1
-+    31fe:	00003517          	auipc	a0,0x3
-+    3202:	5ba50513          	add	a0,a0,1466 # 67b8 <malloc+0x18e0>
-+    3206:	41f010ef          	jal	4e24 <printf>
-     exit(1);
--    325e:	4505                	li	a0,1
--    3260:	021010ef          	jal	4a80 <exit>
-+    320a:	4505                	li	a0,1
-+    320c:	7fe010ef          	jal	4a0a <exit>
-     printf("%s: chdir dots failed\n", s);
--    3264:	85a6                	mv	a1,s1
--    3266:	00003517          	auipc	a0,0x3
--    326a:	5fa50513          	addi	a0,a0,1530 # 6860 <malloc+0x1914>
--    326e:	42b010ef          	jal	4e98 <printf>
-+    3210:	85a6                	mv	a1,s1
-+    3212:	00003517          	auipc	a0,0x3
-+    3216:	5be50513          	add	a0,a0,1470 # 67d0 <malloc+0x18f8>
-+    321a:	40b010ef          	jal	4e24 <printf>
-     exit(1);
--    3272:	4505                	li	a0,1
--    3274:	00d010ef          	jal	4a80 <exit>
-+    321e:	4505                	li	a0,1
-+    3220:	7ea010ef          	jal	4a0a <exit>
-     printf("%s: rm . worked!\n", s);
--    3278:	85a6                	mv	a1,s1
--    327a:	00003517          	auipc	a0,0x3
--    327e:	5fe50513          	addi	a0,a0,1534 # 6878 <malloc+0x192c>
--    3282:	417010ef          	jal	4e98 <printf>
-+    3224:	85a6                	mv	a1,s1
-+    3226:	00003517          	auipc	a0,0x3
-+    322a:	5c250513          	add	a0,a0,1474 # 67e8 <malloc+0x1910>
-+    322e:	3f7010ef          	jal	4e24 <printf>
-     exit(1);
--    3286:	4505                	li	a0,1
--    3288:	7f8010ef          	jal	4a80 <exit>
-+    3232:	4505                	li	a0,1
-+    3234:	7d6010ef          	jal	4a0a <exit>
-     printf("%s: rm .. worked!\n", s);
--    328c:	85a6                	mv	a1,s1
--    328e:	00003517          	auipc	a0,0x3
--    3292:	60250513          	addi	a0,a0,1538 # 6890 <malloc+0x1944>
--    3296:	403010ef          	jal	4e98 <printf>
-+    3238:	85a6                	mv	a1,s1
-+    323a:	00003517          	auipc	a0,0x3
-+    323e:	5c650513          	add	a0,a0,1478 # 6800 <malloc+0x1928>
-+    3242:	3e3010ef          	jal	4e24 <printf>
-     exit(1);
--    329a:	4505                	li	a0,1
--    329c:	7e4010ef          	jal	4a80 <exit>
-+    3246:	4505                	li	a0,1
-+    3248:	7c2010ef          	jal	4a0a <exit>
-     printf("%s: chdir / failed\n", s);
--    32a0:	85a6                	mv	a1,s1
--    32a2:	00003517          	auipc	a0,0x3
--    32a6:	f9e50513          	addi	a0,a0,-98 # 6240 <malloc+0x12f4>
--    32aa:	3ef010ef          	jal	4e98 <printf>
-+    324c:	85a6                	mv	a1,s1
-+    324e:	00003517          	auipc	a0,0x3
-+    3252:	f6250513          	add	a0,a0,-158 # 61b0 <malloc+0x12d8>
-+    3256:	3cf010ef          	jal	4e24 <printf>
-     exit(1);
--    32ae:	4505                	li	a0,1
--    32b0:	7d0010ef          	jal	4a80 <exit>
-+    325a:	4505                	li	a0,1
-+    325c:	7ae010ef          	jal	4a0a <exit>
-     printf("%s: unlink dots/. worked!\n", s);
--    32b4:	85a6                	mv	a1,s1
--    32b6:	00003517          	auipc	a0,0x3
--    32ba:	5fa50513          	addi	a0,a0,1530 # 68b0 <malloc+0x1964>
--    32be:	3db010ef          	jal	4e98 <printf>
-+    3260:	85a6                	mv	a1,s1
-+    3262:	00003517          	auipc	a0,0x3
-+    3266:	5be50513          	add	a0,a0,1470 # 6820 <malloc+0x1948>
-+    326a:	3bb010ef          	jal	4e24 <printf>
-     exit(1);
--    32c2:	4505                	li	a0,1
--    32c4:	7bc010ef          	jal	4a80 <exit>
-+    326e:	4505                	li	a0,1
-+    3270:	79a010ef          	jal	4a0a <exit>
-     printf("%s: unlink dots/.. worked!\n", s);
--    32c8:	85a6                	mv	a1,s1
--    32ca:	00003517          	auipc	a0,0x3
--    32ce:	60e50513          	addi	a0,a0,1550 # 68d8 <malloc+0x198c>
--    32d2:	3c7010ef          	jal	4e98 <printf>
-+    3274:	85a6                	mv	a1,s1
-+    3276:	00003517          	auipc	a0,0x3
-+    327a:	5d250513          	add	a0,a0,1490 # 6848 <malloc+0x1970>
-+    327e:	3a7010ef          	jal	4e24 <printf>
-     exit(1);
--    32d6:	4505                	li	a0,1
--    32d8:	7a8010ef          	jal	4a80 <exit>
-+    3282:	4505                	li	a0,1
-+    3284:	786010ef          	jal	4a0a <exit>
-     printf("%s: unlink dots failed!\n", s);
--    32dc:	85a6                	mv	a1,s1
--    32de:	00003517          	auipc	a0,0x3
--    32e2:	61a50513          	addi	a0,a0,1562 # 68f8 <malloc+0x19ac>
--    32e6:	3b3010ef          	jal	4e98 <printf>
-+    3288:	85a6                	mv	a1,s1
-+    328a:	00003517          	auipc	a0,0x3
-+    328e:	5de50513          	add	a0,a0,1502 # 6868 <malloc+0x1990>
-+    3292:	393010ef          	jal	4e24 <printf>
-     exit(1);
--    32ea:	4505                	li	a0,1
--    32ec:	794010ef          	jal	4a80 <exit>
-+    3296:	4505                	li	a0,1
-+    3298:	772010ef          	jal	4a0a <exit>
- 
--00000000000032f0 <dirfile>:
-+000000000000329c <dirfile>:
- {
--    32f0:	1101                	addi	sp,sp,-32
--    32f2:	ec06                	sd	ra,24(sp)
--    32f4:	e822                	sd	s0,16(sp)
--    32f6:	e426                	sd	s1,8(sp)
--    32f8:	e04a                	sd	s2,0(sp)
--    32fa:	1000                	addi	s0,sp,32
--    32fc:	892a                	mv	s2,a0
-+    329c:	1101                	add	sp,sp,-32
-+    329e:	ec06                	sd	ra,24(sp)
-+    32a0:	e822                	sd	s0,16(sp)
-+    32a2:	e426                	sd	s1,8(sp)
-+    32a4:	e04a                	sd	s2,0(sp)
-+    32a6:	1000                	add	s0,sp,32
-+    32a8:	892a                	mv	s2,a0
-   fd = open("dirfile", O_CREATE);
--    32fe:	20000593          	li	a1,512
--    3302:	00003517          	auipc	a0,0x3
--    3306:	61650513          	addi	a0,a0,1558 # 6918 <malloc+0x19cc>
--    330a:	7b6010ef          	jal	4ac0 <open>
-+    32aa:	20000593          	li	a1,512
-+    32ae:	00003517          	auipc	a0,0x3
-+    32b2:	5da50513          	add	a0,a0,1498 # 6888 <malloc+0x19b0>
-+    32b6:	794010ef          	jal	4a4a <open>
-   if(fd < 0){
--    330e:	0c054563          	bltz	a0,33d8 <dirfile+0xe8>
-+    32ba:	0c054563          	bltz	a0,3384 <dirfile+0xe8>
-   close(fd);
--    3312:	796010ef          	jal	4aa8 <close>
-+    32be:	774010ef          	jal	4a32 <close>
-   if(chdir("dirfile") == 0){
--    3316:	00003517          	auipc	a0,0x3
--    331a:	60250513          	addi	a0,a0,1538 # 6918 <malloc+0x19cc>
--    331e:	7d2010ef          	jal	4af0 <chdir>
--    3322:	c569                	beqz	a0,33ec <dirfile+0xfc>
-+    32c2:	00003517          	auipc	a0,0x3
-+    32c6:	5c650513          	add	a0,a0,1478 # 6888 <malloc+0x19b0>
-+    32ca:	7b0010ef          	jal	4a7a <chdir>
-+    32ce:	c569                	beqz	a0,3398 <dirfile+0xfc>
-   fd = open("dirfile/xx", 0);
--    3324:	4581                	li	a1,0
--    3326:	00003517          	auipc	a0,0x3
--    332a:	63a50513          	addi	a0,a0,1594 # 6960 <malloc+0x1a14>
--    332e:	792010ef          	jal	4ac0 <open>
-+    32d0:	4581                	li	a1,0
-+    32d2:	00003517          	auipc	a0,0x3
-+    32d6:	5fe50513          	add	a0,a0,1534 # 68d0 <malloc+0x19f8>
-+    32da:	770010ef          	jal	4a4a <open>
-   if(fd >= 0){
--    3332:	0c055763          	bgez	a0,3400 <dirfile+0x110>
-+    32de:	0c055763          	bgez	a0,33ac <dirfile+0x110>
-   fd = open("dirfile/xx", O_CREATE);
--    3336:	20000593          	li	a1,512
--    333a:	00003517          	auipc	a0,0x3
--    333e:	62650513          	addi	a0,a0,1574 # 6960 <malloc+0x1a14>
--    3342:	77e010ef          	jal	4ac0 <open>
-+    32e2:	20000593          	li	a1,512
-+    32e6:	00003517          	auipc	a0,0x3
-+    32ea:	5ea50513          	add	a0,a0,1514 # 68d0 <malloc+0x19f8>
-+    32ee:	75c010ef          	jal	4a4a <open>
-   if(fd >= 0){
--    3346:	0c055763          	bgez	a0,3414 <dirfile+0x124>
-+    32f2:	0c055763          	bgez	a0,33c0 <dirfile+0x124>
-   if(mkdir("dirfile/xx") == 0){
--    334a:	00003517          	auipc	a0,0x3
--    334e:	61650513          	addi	a0,a0,1558 # 6960 <malloc+0x1a14>
--    3352:	796010ef          	jal	4ae8 <mkdir>
--    3356:	0c050963          	beqz	a0,3428 <dirfile+0x138>
-+    32f6:	00003517          	auipc	a0,0x3
-+    32fa:	5da50513          	add	a0,a0,1498 # 68d0 <malloc+0x19f8>
-+    32fe:	774010ef          	jal	4a72 <mkdir>
-+    3302:	0c050963          	beqz	a0,33d4 <dirfile+0x138>
-   if(unlink("dirfile/xx") == 0){
--    335a:	00003517          	auipc	a0,0x3
--    335e:	60650513          	addi	a0,a0,1542 # 6960 <malloc+0x1a14>
--    3362:	76e010ef          	jal	4ad0 <unlink>
--    3366:	0c050b63          	beqz	a0,343c <dirfile+0x14c>
-+    3306:	00003517          	auipc	a0,0x3
-+    330a:	5ca50513          	add	a0,a0,1482 # 68d0 <malloc+0x19f8>
-+    330e:	74c010ef          	jal	4a5a <unlink>
-+    3312:	0c050b63          	beqz	a0,33e8 <dirfile+0x14c>
-   if(link("README", "dirfile/xx") == 0){
--    336a:	00003597          	auipc	a1,0x3
--    336e:	5f658593          	addi	a1,a1,1526 # 6960 <malloc+0x1a14>
--    3372:	00002517          	auipc	a0,0x2
--    3376:	eee50513          	addi	a0,a0,-274 # 5260 <malloc+0x314>
--    337a:	766010ef          	jal	4ae0 <link>
--    337e:	0c050963          	beqz	a0,3450 <dirfile+0x160>
-+    3316:	00003597          	auipc	a1,0x3
-+    331a:	5ba58593          	add	a1,a1,1466 # 68d0 <malloc+0x19f8>
-+    331e:	00002517          	auipc	a0,0x2
-+    3322:	eb250513          	add	a0,a0,-334 # 51d0 <malloc+0x2f8>
-+    3326:	744010ef          	jal	4a6a <link>
-+    332a:	0c050963          	beqz	a0,33fc <dirfile+0x160>
-   if(unlink("dirfile") != 0){
--    3382:	00003517          	auipc	a0,0x3
--    3386:	59650513          	addi	a0,a0,1430 # 6918 <malloc+0x19cc>
--    338a:	746010ef          	jal	4ad0 <unlink>
--    338e:	0c051b63          	bnez	a0,3464 <dirfile+0x174>
-+    332e:	00003517          	auipc	a0,0x3
-+    3332:	55a50513          	add	a0,a0,1370 # 6888 <malloc+0x19b0>
-+    3336:	724010ef          	jal	4a5a <unlink>
-+    333a:	0c051b63          	bnez	a0,3410 <dirfile+0x174>
-   fd = open(".", O_RDWR);
--    3392:	4589                	li	a1,2
--    3394:	00002517          	auipc	a0,0x2
--    3398:	3dc50513          	addi	a0,a0,988 # 5770 <malloc+0x824>
--    339c:	724010ef          	jal	4ac0 <open>
-+    333e:	4589                	li	a1,2
-+    3340:	00002517          	auipc	a0,0x2
-+    3344:	3a050513          	add	a0,a0,928 # 56e0 <malloc+0x808>
-+    3348:	702010ef          	jal	4a4a <open>
-   if(fd >= 0){
--    33a0:	0c055c63          	bgez	a0,3478 <dirfile+0x188>
-+    334c:	0c055c63          	bgez	a0,3424 <dirfile+0x188>
-   fd = open(".", 0);
--    33a4:	4581                	li	a1,0
--    33a6:	00002517          	auipc	a0,0x2
--    33aa:	3ca50513          	addi	a0,a0,970 # 5770 <malloc+0x824>
--    33ae:	712010ef          	jal	4ac0 <open>
--    33b2:	84aa                	mv	s1,a0
-+    3350:	4581                	li	a1,0
-+    3352:	00002517          	auipc	a0,0x2
-+    3356:	38e50513          	add	a0,a0,910 # 56e0 <malloc+0x808>
-+    335a:	6f0010ef          	jal	4a4a <open>
-+    335e:	84aa                	mv	s1,a0
-   if(write(fd, "x", 1) > 0){
--    33b4:	4605                	li	a2,1
--    33b6:	00002597          	auipc	a1,0x2
--    33ba:	d4258593          	addi	a1,a1,-702 # 50f8 <malloc+0x1ac>
--    33be:	6e2010ef          	jal	4aa0 <write>
--    33c2:	0ca04563          	bgtz	a0,348c <dirfile+0x19c>
-+    3360:	4605                	li	a2,1
-+    3362:	00002597          	auipc	a1,0x2
-+    3366:	d0658593          	add	a1,a1,-762 # 5068 <malloc+0x190>
-+    336a:	6c0010ef          	jal	4a2a <write>
-+    336e:	0ca04563          	bgtz	a0,3438 <dirfile+0x19c>
-   close(fd);
--    33c6:	8526                	mv	a0,s1
--    33c8:	6e0010ef          	jal	4aa8 <close>
-+    3372:	8526                	mv	a0,s1
-+    3374:	6be010ef          	jal	4a32 <close>
- }
--    33cc:	60e2                	ld	ra,24(sp)
--    33ce:	6442                	ld	s0,16(sp)
--    33d0:	64a2                	ld	s1,8(sp)
--    33d2:	6902                	ld	s2,0(sp)
--    33d4:	6105                	addi	sp,sp,32
--    33d6:	8082                	ret
-+    3378:	60e2                	ld	ra,24(sp)
-+    337a:	6442                	ld	s0,16(sp)
-+    337c:	64a2                	ld	s1,8(sp)
-+    337e:	6902                	ld	s2,0(sp)
-+    3380:	6105                	add	sp,sp,32
-+    3382:	8082                	ret
-     printf("%s: create dirfile failed\n", s);
--    33d8:	85ca                	mv	a1,s2
--    33da:	00003517          	auipc	a0,0x3
--    33de:	54650513          	addi	a0,a0,1350 # 6920 <malloc+0x19d4>
--    33e2:	2b7010ef          	jal	4e98 <printf>
-+    3384:	85ca                	mv	a1,s2
-+    3386:	00003517          	auipc	a0,0x3
-+    338a:	50a50513          	add	a0,a0,1290 # 6890 <malloc+0x19b8>
-+    338e:	297010ef          	jal	4e24 <printf>
-     exit(1);
--    33e6:	4505                	li	a0,1
--    33e8:	698010ef          	jal	4a80 <exit>
-+    3392:	4505                	li	a0,1
-+    3394:	676010ef          	jal	4a0a <exit>
-     printf("%s: chdir dirfile succeeded!\n", s);
--    33ec:	85ca                	mv	a1,s2
--    33ee:	00003517          	auipc	a0,0x3
--    33f2:	55250513          	addi	a0,a0,1362 # 6940 <malloc+0x19f4>
--    33f6:	2a3010ef          	jal	4e98 <printf>
-+    3398:	85ca                	mv	a1,s2
-+    339a:	00003517          	auipc	a0,0x3
-+    339e:	51650513          	add	a0,a0,1302 # 68b0 <malloc+0x19d8>
-+    33a2:	283010ef          	jal	4e24 <printf>
-     exit(1);
--    33fa:	4505                	li	a0,1
--    33fc:	684010ef          	jal	4a80 <exit>
-+    33a6:	4505                	li	a0,1
-+    33a8:	662010ef          	jal	4a0a <exit>
-     printf("%s: create dirfile/xx succeeded!\n", s);
--    3400:	85ca                	mv	a1,s2
--    3402:	00003517          	auipc	a0,0x3
--    3406:	56e50513          	addi	a0,a0,1390 # 6970 <malloc+0x1a24>
--    340a:	28f010ef          	jal	4e98 <printf>
-+    33ac:	85ca                	mv	a1,s2
-+    33ae:	00003517          	auipc	a0,0x3
-+    33b2:	53250513          	add	a0,a0,1330 # 68e0 <malloc+0x1a08>
-+    33b6:	26f010ef          	jal	4e24 <printf>
-     exit(1);
--    340e:	4505                	li	a0,1
--    3410:	670010ef          	jal	4a80 <exit>
-+    33ba:	4505                	li	a0,1
-+    33bc:	64e010ef          	jal	4a0a <exit>
-     printf("%s: create dirfile/xx succeeded!\n", s);
--    3414:	85ca                	mv	a1,s2
--    3416:	00003517          	auipc	a0,0x3
--    341a:	55a50513          	addi	a0,a0,1370 # 6970 <malloc+0x1a24>
--    341e:	27b010ef          	jal	4e98 <printf>
-+    33c0:	85ca                	mv	a1,s2
-+    33c2:	00003517          	auipc	a0,0x3
-+    33c6:	51e50513          	add	a0,a0,1310 # 68e0 <malloc+0x1a08>
-+    33ca:	25b010ef          	jal	4e24 <printf>
-     exit(1);
--    3422:	4505                	li	a0,1
--    3424:	65c010ef          	jal	4a80 <exit>
-+    33ce:	4505                	li	a0,1
-+    33d0:	63a010ef          	jal	4a0a <exit>
-     printf("%s: mkdir dirfile/xx succeeded!\n", s);
--    3428:	85ca                	mv	a1,s2
--    342a:	00003517          	auipc	a0,0x3
--    342e:	56e50513          	addi	a0,a0,1390 # 6998 <malloc+0x1a4c>
--    3432:	267010ef          	jal	4e98 <printf>
-+    33d4:	85ca                	mv	a1,s2
-+    33d6:	00003517          	auipc	a0,0x3
-+    33da:	53250513          	add	a0,a0,1330 # 6908 <malloc+0x1a30>
-+    33de:	247010ef          	jal	4e24 <printf>
-     exit(1);
--    3436:	4505                	li	a0,1
--    3438:	648010ef          	jal	4a80 <exit>
-+    33e2:	4505                	li	a0,1
-+    33e4:	626010ef          	jal	4a0a <exit>
-     printf("%s: unlink dirfile/xx succeeded!\n", s);
--    343c:	85ca                	mv	a1,s2
--    343e:	00003517          	auipc	a0,0x3
--    3442:	58250513          	addi	a0,a0,1410 # 69c0 <malloc+0x1a74>
--    3446:	253010ef          	jal	4e98 <printf>
-+    33e8:	85ca                	mv	a1,s2
-+    33ea:	00003517          	auipc	a0,0x3
-+    33ee:	54650513          	add	a0,a0,1350 # 6930 <malloc+0x1a58>
-+    33f2:	233010ef          	jal	4e24 <printf>
-     exit(1);
--    344a:	4505                	li	a0,1
--    344c:	634010ef          	jal	4a80 <exit>
-+    33f6:	4505                	li	a0,1
-+    33f8:	612010ef          	jal	4a0a <exit>
-     printf("%s: link to dirfile/xx succeeded!\n", s);
--    3450:	85ca                	mv	a1,s2
--    3452:	00003517          	auipc	a0,0x3
--    3456:	59650513          	addi	a0,a0,1430 # 69e8 <malloc+0x1a9c>
--    345a:	23f010ef          	jal	4e98 <printf>
-+    33fc:	85ca                	mv	a1,s2
-+    33fe:	00003517          	auipc	a0,0x3
-+    3402:	55a50513          	add	a0,a0,1370 # 6958 <malloc+0x1a80>
-+    3406:	21f010ef          	jal	4e24 <printf>
-     exit(1);
--    345e:	4505                	li	a0,1
--    3460:	620010ef          	jal	4a80 <exit>
-+    340a:	4505                	li	a0,1
-+    340c:	5fe010ef          	jal	4a0a <exit>
-     printf("%s: unlink dirfile failed!\n", s);
--    3464:	85ca                	mv	a1,s2
--    3466:	00003517          	auipc	a0,0x3
--    346a:	5aa50513          	addi	a0,a0,1450 # 6a10 <malloc+0x1ac4>
--    346e:	22b010ef          	jal	4e98 <printf>
-+    3410:	85ca                	mv	a1,s2
-+    3412:	00003517          	auipc	a0,0x3
-+    3416:	56e50513          	add	a0,a0,1390 # 6980 <malloc+0x1aa8>
-+    341a:	20b010ef          	jal	4e24 <printf>
-     exit(1);
--    3472:	4505                	li	a0,1
--    3474:	60c010ef          	jal	4a80 <exit>
-+    341e:	4505                	li	a0,1
-+    3420:	5ea010ef          	jal	4a0a <exit>
-     printf("%s: open . for writing succeeded!\n", s);
--    3478:	85ca                	mv	a1,s2
--    347a:	00003517          	auipc	a0,0x3
--    347e:	5b650513          	addi	a0,a0,1462 # 6a30 <malloc+0x1ae4>
--    3482:	217010ef          	jal	4e98 <printf>
-+    3424:	85ca                	mv	a1,s2
-+    3426:	00003517          	auipc	a0,0x3
-+    342a:	57a50513          	add	a0,a0,1402 # 69a0 <malloc+0x1ac8>
-+    342e:	1f7010ef          	jal	4e24 <printf>
-     exit(1);
--    3486:	4505                	li	a0,1
--    3488:	5f8010ef          	jal	4a80 <exit>
-+    3432:	4505                	li	a0,1
-+    3434:	5d6010ef          	jal	4a0a <exit>
-     printf("%s: write . succeeded!\n", s);
--    348c:	85ca                	mv	a1,s2
--    348e:	00003517          	auipc	a0,0x3
--    3492:	5ca50513          	addi	a0,a0,1482 # 6a58 <malloc+0x1b0c>
--    3496:	203010ef          	jal	4e98 <printf>
-+    3438:	85ca                	mv	a1,s2
-+    343a:	00003517          	auipc	a0,0x3
-+    343e:	58e50513          	add	a0,a0,1422 # 69c8 <malloc+0x1af0>
-+    3442:	1e3010ef          	jal	4e24 <printf>
-     exit(1);
--    349a:	4505                	li	a0,1
--    349c:	5e4010ef          	jal	4a80 <exit>
-+    3446:	4505                	li	a0,1
-+    3448:	5c2010ef          	jal	4a0a <exit>
- 
--00000000000034a0 <iref>:
-+000000000000344c <iref>:
- {
--    34a0:	7139                	addi	sp,sp,-64
--    34a2:	fc06                	sd	ra,56(sp)
--    34a4:	f822                	sd	s0,48(sp)
--    34a6:	f426                	sd	s1,40(sp)
--    34a8:	f04a                	sd	s2,32(sp)
--    34aa:	ec4e                	sd	s3,24(sp)
--    34ac:	e852                	sd	s4,16(sp)
--    34ae:	e456                	sd	s5,8(sp)
--    34b0:	e05a                	sd	s6,0(sp)
--    34b2:	0080                	addi	s0,sp,64
--    34b4:	8b2a                	mv	s6,a0
--    34b6:	03300913          	li	s2,51
-+    344c:	7139                	add	sp,sp,-64
-+    344e:	fc06                	sd	ra,56(sp)
-+    3450:	f822                	sd	s0,48(sp)
-+    3452:	f426                	sd	s1,40(sp)
-+    3454:	f04a                	sd	s2,32(sp)
-+    3456:	ec4e                	sd	s3,24(sp)
-+    3458:	e852                	sd	s4,16(sp)
-+    345a:	e456                	sd	s5,8(sp)
-+    345c:	e05a                	sd	s6,0(sp)
-+    345e:	0080                	add	s0,sp,64
-+    3460:	8b2a                	mv	s6,a0
-+    3462:	03300913          	li	s2,51
-     if(mkdir("irefd") != 0){
--    34ba:	00003a17          	auipc	s4,0x3
--    34be:	5b6a0a13          	addi	s4,s4,1462 # 6a70 <malloc+0x1b24>
-+    3466:	00003a17          	auipc	s4,0x3
-+    346a:	57aa0a13          	add	s4,s4,1402 # 69e0 <malloc+0x1b08>
-     mkdir("");
--    34c2:	00003497          	auipc	s1,0x3
--    34c6:	0b648493          	addi	s1,s1,182 # 6578 <malloc+0x162c>
-+    346e:	00003497          	auipc	s1,0x3
-+    3472:	07a48493          	add	s1,s1,122 # 64e8 <malloc+0x1610>
-     link("README", "");
--    34ca:	00002a97          	auipc	s5,0x2
--    34ce:	d96a8a93          	addi	s5,s5,-618 # 5260 <malloc+0x314>
-+    3476:	00002a97          	auipc	s5,0x2
-+    347a:	d5aa8a93          	add	s5,s5,-678 # 51d0 <malloc+0x2f8>
-     fd = open("xx", O_CREATE);
--    34d2:	00003997          	auipc	s3,0x3
--    34d6:	49698993          	addi	s3,s3,1174 # 6968 <malloc+0x1a1c>
--    34da:	a835                	j	3516 <iref+0x76>
-+    347e:	00003997          	auipc	s3,0x3
-+    3482:	45a98993          	add	s3,s3,1114 # 68d8 <malloc+0x1a00>
-+    3486:	a835                	j	34c2 <iref+0x76>
-       printf("%s: mkdir irefd failed\n", s);
--    34dc:	85da                	mv	a1,s6
--    34de:	00003517          	auipc	a0,0x3
--    34e2:	59a50513          	addi	a0,a0,1434 # 6a78 <malloc+0x1b2c>
--    34e6:	1b3010ef          	jal	4e98 <printf>
-+    3488:	85da                	mv	a1,s6
-+    348a:	00003517          	auipc	a0,0x3
-+    348e:	55e50513          	add	a0,a0,1374 # 69e8 <malloc+0x1b10>
-+    3492:	193010ef          	jal	4e24 <printf>
-       exit(1);
--    34ea:	4505                	li	a0,1
--    34ec:	594010ef          	jal	4a80 <exit>
-+    3496:	4505                	li	a0,1
-+    3498:	572010ef          	jal	4a0a <exit>
-       printf("%s: chdir irefd failed\n", s);
--    34f0:	85da                	mv	a1,s6
--    34f2:	00003517          	auipc	a0,0x3
--    34f6:	59e50513          	addi	a0,a0,1438 # 6a90 <malloc+0x1b44>
--    34fa:	19f010ef          	jal	4e98 <printf>
-+    349c:	85da                	mv	a1,s6
-+    349e:	00003517          	auipc	a0,0x3
-+    34a2:	56250513          	add	a0,a0,1378 # 6a00 <malloc+0x1b28>
-+    34a6:	17f010ef          	jal	4e24 <printf>
-       exit(1);
--    34fe:	4505                	li	a0,1
--    3500:	580010ef          	jal	4a80 <exit>
-+    34aa:	4505                	li	a0,1
-+    34ac:	55e010ef          	jal	4a0a <exit>
-       close(fd);
--    3504:	5a4010ef          	jal	4aa8 <close>
--    3508:	a82d                	j	3542 <iref+0xa2>
-+    34b0:	582010ef          	jal	4a32 <close>
-+    34b4:	a82d                	j	34ee <iref+0xa2>
-     unlink("xx");
--    350a:	854e                	mv	a0,s3
--    350c:	5c4010ef          	jal	4ad0 <unlink>
-+    34b6:	854e                	mv	a0,s3
-+    34b8:	5a2010ef          	jal	4a5a <unlink>
-   for(i = 0; i < NINODE + 1; i++){
--    3510:	397d                	addiw	s2,s2,-1
--    3512:	04090263          	beqz	s2,3556 <iref+0xb6>
-+    34bc:	397d                	addw	s2,s2,-1
-+    34be:	04090263          	beqz	s2,3502 <iref+0xb6>
-     if(mkdir("irefd") != 0){
--    3516:	8552                	mv	a0,s4
--    3518:	5d0010ef          	jal	4ae8 <mkdir>
--    351c:	f161                	bnez	a0,34dc <iref+0x3c>
-+    34c2:	8552                	mv	a0,s4
-+    34c4:	5ae010ef          	jal	4a72 <mkdir>
-+    34c8:	f161                	bnez	a0,3488 <iref+0x3c>
-     if(chdir("irefd") != 0){
--    351e:	8552                	mv	a0,s4
--    3520:	5d0010ef          	jal	4af0 <chdir>
--    3524:	f571                	bnez	a0,34f0 <iref+0x50>
-+    34ca:	8552                	mv	a0,s4
-+    34cc:	5ae010ef          	jal	4a7a <chdir>
-+    34d0:	f571                	bnez	a0,349c <iref+0x50>
-     mkdir("");
--    3526:	8526                	mv	a0,s1
--    3528:	5c0010ef          	jal	4ae8 <mkdir>
-+    34d2:	8526                	mv	a0,s1
-+    34d4:	59e010ef          	jal	4a72 <mkdir>
-     link("README", "");
--    352c:	85a6                	mv	a1,s1
--    352e:	8556                	mv	a0,s5
--    3530:	5b0010ef          	jal	4ae0 <link>
-+    34d8:	85a6                	mv	a1,s1
-+    34da:	8556                	mv	a0,s5
-+    34dc:	58e010ef          	jal	4a6a <link>
-     fd = open("", O_CREATE);
--    3534:	20000593          	li	a1,512
--    3538:	8526                	mv	a0,s1
--    353a:	586010ef          	jal	4ac0 <open>
-+    34e0:	20000593          	li	a1,512
-+    34e4:	8526                	mv	a0,s1
-+    34e6:	564010ef          	jal	4a4a <open>
-     if(fd >= 0)
--    353e:	fc0553e3          	bgez	a0,3504 <iref+0x64>
-+    34ea:	fc0553e3          	bgez	a0,34b0 <iref+0x64>
-     fd = open("xx", O_CREATE);
--    3542:	20000593          	li	a1,512
--    3546:	854e                	mv	a0,s3
--    3548:	578010ef          	jal	4ac0 <open>
-+    34ee:	20000593          	li	a1,512
-+    34f2:	854e                	mv	a0,s3
-+    34f4:	556010ef          	jal	4a4a <open>
-     if(fd >= 0)
--    354c:	fa054fe3          	bltz	a0,350a <iref+0x6a>
-+    34f8:	fa054fe3          	bltz	a0,34b6 <iref+0x6a>
-       close(fd);
--    3550:	558010ef          	jal	4aa8 <close>
--    3554:	bf5d                	j	350a <iref+0x6a>
--    3556:	03300493          	li	s1,51
-+    34fc:	536010ef          	jal	4a32 <close>
-+    3500:	bf5d                	j	34b6 <iref+0x6a>
-+    3502:	03300493          	li	s1,51
-     chdir("..");
--    355a:	00003997          	auipc	s3,0x3
--    355e:	d3698993          	addi	s3,s3,-714 # 6290 <malloc+0x1344>
-+    3506:	00003997          	auipc	s3,0x3
-+    350a:	cfa98993          	add	s3,s3,-774 # 6200 <malloc+0x1328>
-     unlink("irefd");
--    3562:	00003917          	auipc	s2,0x3
--    3566:	50e90913          	addi	s2,s2,1294 # 6a70 <malloc+0x1b24>
-+    350e:	00003917          	auipc	s2,0x3
-+    3512:	4d290913          	add	s2,s2,1234 # 69e0 <malloc+0x1b08>
-     chdir("..");
--    356a:	854e                	mv	a0,s3
--    356c:	584010ef          	jal	4af0 <chdir>
-+    3516:	854e                	mv	a0,s3
-+    3518:	562010ef          	jal	4a7a <chdir>
-     unlink("irefd");
--    3570:	854a                	mv	a0,s2
--    3572:	55e010ef          	jal	4ad0 <unlink>
-+    351c:	854a                	mv	a0,s2
-+    351e:	53c010ef          	jal	4a5a <unlink>
-   for(i = 0; i < NINODE + 1; i++){
--    3576:	34fd                	addiw	s1,s1,-1
--    3578:	f8ed                	bnez	s1,356a <iref+0xca>
-+    3522:	34fd                	addw	s1,s1,-1
-+    3524:	f8ed                	bnez	s1,3516 <iref+0xca>
-   chdir("/");
--    357a:	00003517          	auipc	a0,0x3
--    357e:	cbe50513          	addi	a0,a0,-834 # 6238 <malloc+0x12ec>
--    3582:	56e010ef          	jal	4af0 <chdir>
-+    3526:	00003517          	auipc	a0,0x3
-+    352a:	c8250513          	add	a0,a0,-894 # 61a8 <malloc+0x12d0>
-+    352e:	54c010ef          	jal	4a7a <chdir>
- }
--    3586:	70e2                	ld	ra,56(sp)
--    3588:	7442                	ld	s0,48(sp)
--    358a:	74a2                	ld	s1,40(sp)
--    358c:	7902                	ld	s2,32(sp)
--    358e:	69e2                	ld	s3,24(sp)
--    3590:	6a42                	ld	s4,16(sp)
--    3592:	6aa2                	ld	s5,8(sp)
--    3594:	6b02                	ld	s6,0(sp)
--    3596:	6121                	addi	sp,sp,64
--    3598:	8082                	ret
--
--000000000000359a <openiputtest>:
-+    3532:	70e2                	ld	ra,56(sp)
-+    3534:	7442                	ld	s0,48(sp)
-+    3536:	74a2                	ld	s1,40(sp)
-+    3538:	7902                	ld	s2,32(sp)
-+    353a:	69e2                	ld	s3,24(sp)
-+    353c:	6a42                	ld	s4,16(sp)
-+    353e:	6aa2                	ld	s5,8(sp)
-+    3540:	6b02                	ld	s6,0(sp)
-+    3542:	6121                	add	sp,sp,64
-+    3544:	8082                	ret
-+
-+0000000000003546 <openiputtest>:
- {
--    359a:	7179                	addi	sp,sp,-48
--    359c:	f406                	sd	ra,40(sp)
--    359e:	f022                	sd	s0,32(sp)
--    35a0:	ec26                	sd	s1,24(sp)
--    35a2:	1800                	addi	s0,sp,48
--    35a4:	84aa                	mv	s1,a0
-+    3546:	7179                	add	sp,sp,-48
-+    3548:	f406                	sd	ra,40(sp)
-+    354a:	f022                	sd	s0,32(sp)
-+    354c:	ec26                	sd	s1,24(sp)
-+    354e:	1800                	add	s0,sp,48
-+    3550:	84aa                	mv	s1,a0
-   if(mkdir("oidir") < 0){
--    35a6:	00003517          	auipc	a0,0x3
--    35aa:	50250513          	addi	a0,a0,1282 # 6aa8 <malloc+0x1b5c>
--    35ae:	53a010ef          	jal	4ae8 <mkdir>
--    35b2:	02054a63          	bltz	a0,35e6 <openiputtest+0x4c>
-+    3552:	00003517          	auipc	a0,0x3
-+    3556:	4c650513          	add	a0,a0,1222 # 6a18 <malloc+0x1b40>
-+    355a:	518010ef          	jal	4a72 <mkdir>
-+    355e:	02054a63          	bltz	a0,3592 <openiputtest+0x4c>
-   pid = fork();
--    35b6:	4c2010ef          	jal	4a78 <fork>
-+    3562:	4a0010ef          	jal	4a02 <fork>
-   if(pid < 0){
--    35ba:	04054063          	bltz	a0,35fa <openiputtest+0x60>
-+    3566:	04054063          	bltz	a0,35a6 <openiputtest+0x60>
-   if(pid == 0){
--    35be:	e939                	bnez	a0,3614 <openiputtest+0x7a>
-+    356a:	e939                	bnez	a0,35c0 <openiputtest+0x7a>
-     int fd = open("oidir", O_RDWR);
--    35c0:	4589                	li	a1,2
--    35c2:	00003517          	auipc	a0,0x3
--    35c6:	4e650513          	addi	a0,a0,1254 # 6aa8 <malloc+0x1b5c>
--    35ca:	4f6010ef          	jal	4ac0 <open>
-+    356c:	4589                	li	a1,2
-+    356e:	00003517          	auipc	a0,0x3
-+    3572:	4aa50513          	add	a0,a0,1194 # 6a18 <malloc+0x1b40>
-+    3576:	4d4010ef          	jal	4a4a <open>
-     if(fd >= 0){
--    35ce:	04054063          	bltz	a0,360e <openiputtest+0x74>
-+    357a:	04054063          	bltz	a0,35ba <openiputtest+0x74>
-       printf("%s: open directory for write succeeded\n", s);
--    35d2:	85a6                	mv	a1,s1
--    35d4:	00003517          	auipc	a0,0x3
--    35d8:	4f450513          	addi	a0,a0,1268 # 6ac8 <malloc+0x1b7c>
--    35dc:	0bd010ef          	jal	4e98 <printf>
-+    357e:	85a6                	mv	a1,s1
-+    3580:	00003517          	auipc	a0,0x3
-+    3584:	4b850513          	add	a0,a0,1208 # 6a38 <malloc+0x1b60>
-+    3588:	09d010ef          	jal	4e24 <printf>
-       exit(1);
--    35e0:	4505                	li	a0,1
--    35e2:	49e010ef          	jal	4a80 <exit>
-+    358c:	4505                	li	a0,1
-+    358e:	47c010ef          	jal	4a0a <exit>
-     printf("%s: mkdir oidir failed\n", s);
--    35e6:	85a6                	mv	a1,s1
--    35e8:	00003517          	auipc	a0,0x3
--    35ec:	4c850513          	addi	a0,a0,1224 # 6ab0 <malloc+0x1b64>
--    35f0:	0a9010ef          	jal	4e98 <printf>
-+    3592:	85a6                	mv	a1,s1
-+    3594:	00003517          	auipc	a0,0x3
-+    3598:	48c50513          	add	a0,a0,1164 # 6a20 <malloc+0x1b48>
-+    359c:	089010ef          	jal	4e24 <printf>
-     exit(1);
--    35f4:	4505                	li	a0,1
--    35f6:	48a010ef          	jal	4a80 <exit>
-+    35a0:	4505                	li	a0,1
-+    35a2:	468010ef          	jal	4a0a <exit>
-     printf("%s: fork failed\n", s);
--    35fa:	85a6                	mv	a1,s1
--    35fc:	00002517          	auipc	a0,0x2
--    3600:	31c50513          	addi	a0,a0,796 # 5918 <malloc+0x9cc>
--    3604:	095010ef          	jal	4e98 <printf>
-+    35a6:	85a6                	mv	a1,s1
-+    35a8:	00002517          	auipc	a0,0x2
-+    35ac:	2e050513          	add	a0,a0,736 # 5888 <malloc+0x9b0>
-+    35b0:	075010ef          	jal	4e24 <printf>
-     exit(1);
--    3608:	4505                	li	a0,1
--    360a:	476010ef          	jal	4a80 <exit>
-+    35b4:	4505                	li	a0,1
-+    35b6:	454010ef          	jal	4a0a <exit>
-     exit(0);
--    360e:	4501                	li	a0,0
--    3610:	470010ef          	jal	4a80 <exit>
-+    35ba:	4501                	li	a0,0
-+    35bc:	44e010ef          	jal	4a0a <exit>
-   sleep(1);
--    3614:	4505                	li	a0,1
--    3616:	4fa010ef          	jal	4b10 <sleep>
-+    35c0:	4505                	li	a0,1
-+    35c2:	4d8010ef          	jal	4a9a <sleep>
-   if(unlink("oidir") != 0){
--    361a:	00003517          	auipc	a0,0x3
--    361e:	48e50513          	addi	a0,a0,1166 # 6aa8 <malloc+0x1b5c>
--    3622:	4ae010ef          	jal	4ad0 <unlink>
--    3626:	c919                	beqz	a0,363c <openiputtest+0xa2>
-+    35c6:	00003517          	auipc	a0,0x3
-+    35ca:	45250513          	add	a0,a0,1106 # 6a18 <malloc+0x1b40>
-+    35ce:	48c010ef          	jal	4a5a <unlink>
-+    35d2:	c919                	beqz	a0,35e8 <openiputtest+0xa2>
-     printf("%s: unlink failed\n", s);
--    3628:	85a6                	mv	a1,s1
--    362a:	00002517          	auipc	a0,0x2
--    362e:	4de50513          	addi	a0,a0,1246 # 5b08 <malloc+0xbbc>
--    3632:	067010ef          	jal	4e98 <printf>
-+    35d4:	85a6                	mv	a1,s1
-+    35d6:	00002517          	auipc	a0,0x2
-+    35da:	4a250513          	add	a0,a0,1186 # 5a78 <malloc+0xba0>
-+    35de:	047010ef          	jal	4e24 <printf>
-     exit(1);
--    3636:	4505                	li	a0,1
--    3638:	448010ef          	jal	4a80 <exit>
-+    35e2:	4505                	li	a0,1
-+    35e4:	426010ef          	jal	4a0a <exit>
-   wait(&xstatus);
--    363c:	fdc40513          	addi	a0,s0,-36
--    3640:	448010ef          	jal	4a88 <wait>
-+    35e8:	fdc40513          	add	a0,s0,-36
-+    35ec:	426010ef          	jal	4a12 <wait>
-   exit(xstatus);
--    3644:	fdc42503          	lw	a0,-36(s0)
--    3648:	438010ef          	jal	4a80 <exit>
-+    35f0:	fdc42503          	lw	a0,-36(s0)
-+    35f4:	416010ef          	jal	4a0a <exit>
- 
--000000000000364c <forkforkfork>:
-+00000000000035f8 <forkforkfork>:
- {
--    364c:	1101                	addi	sp,sp,-32
--    364e:	ec06                	sd	ra,24(sp)
--    3650:	e822                	sd	s0,16(sp)
--    3652:	e426                	sd	s1,8(sp)
--    3654:	1000                	addi	s0,sp,32
--    3656:	84aa                	mv	s1,a0
-+    35f8:	1101                	add	sp,sp,-32
-+    35fa:	ec06                	sd	ra,24(sp)
-+    35fc:	e822                	sd	s0,16(sp)
-+    35fe:	e426                	sd	s1,8(sp)
-+    3600:	1000                	add	s0,sp,32
-+    3602:	84aa                	mv	s1,a0
-   unlink("stopforking");
--    3658:	00003517          	auipc	a0,0x3
--    365c:	49850513          	addi	a0,a0,1176 # 6af0 <malloc+0x1ba4>
--    3660:	470010ef          	jal	4ad0 <unlink>
-+    3604:	00003517          	auipc	a0,0x3
-+    3608:	45c50513          	add	a0,a0,1116 # 6a60 <malloc+0x1b88>
-+    360c:	44e010ef          	jal	4a5a <unlink>
-   int pid = fork();
--    3664:	414010ef          	jal	4a78 <fork>
-+    3610:	3f2010ef          	jal	4a02 <fork>
-   if(pid < 0){
--    3668:	02054b63          	bltz	a0,369e <forkforkfork+0x52>
-+    3614:	02054b63          	bltz	a0,364a <forkforkfork+0x52>
-   if(pid == 0){
--    366c:	c139                	beqz	a0,36b2 <forkforkfork+0x66>
-+    3618:	c139                	beqz	a0,365e <forkforkfork+0x66>
-   sleep(20); /* two seconds */
--    366e:	4551                	li	a0,20
--    3670:	4a0010ef          	jal	4b10 <sleep>
-+    361a:	4551                	li	a0,20
-+    361c:	47e010ef          	jal	4a9a <sleep>
-   close(open("stopforking", O_CREATE|O_RDWR));
--    3674:	20200593          	li	a1,514
--    3678:	00003517          	auipc	a0,0x3
--    367c:	47850513          	addi	a0,a0,1144 # 6af0 <malloc+0x1ba4>
--    3680:	440010ef          	jal	4ac0 <open>
--    3684:	424010ef          	jal	4aa8 <close>
-+    3620:	20200593          	li	a1,514
-+    3624:	00003517          	auipc	a0,0x3
-+    3628:	43c50513          	add	a0,a0,1084 # 6a60 <malloc+0x1b88>
-+    362c:	41e010ef          	jal	4a4a <open>
-+    3630:	402010ef          	jal	4a32 <close>
-   wait(0);
--    3688:	4501                	li	a0,0
--    368a:	3fe010ef          	jal	4a88 <wait>
-+    3634:	4501                	li	a0,0
-+    3636:	3dc010ef          	jal	4a12 <wait>
-   sleep(10); /* one second */
--    368e:	4529                	li	a0,10
--    3690:	480010ef          	jal	4b10 <sleep>
-+    363a:	4529                	li	a0,10
-+    363c:	45e010ef          	jal	4a9a <sleep>
- }
--    3694:	60e2                	ld	ra,24(sp)
--    3696:	6442                	ld	s0,16(sp)
--    3698:	64a2                	ld	s1,8(sp)
--    369a:	6105                	addi	sp,sp,32
--    369c:	8082                	ret
-+    3640:	60e2                	ld	ra,24(sp)
-+    3642:	6442                	ld	s0,16(sp)
-+    3644:	64a2                	ld	s1,8(sp)
-+    3646:	6105                	add	sp,sp,32
-+    3648:	8082                	ret
-     printf("%s: fork failed", s);
--    369e:	85a6                	mv	a1,s1
--    36a0:	00002517          	auipc	a0,0x2
--    36a4:	43850513          	addi	a0,a0,1080 # 5ad8 <malloc+0xb8c>
--    36a8:	7f0010ef          	jal	4e98 <printf>
-+    364a:	85a6                	mv	a1,s1
-+    364c:	00002517          	auipc	a0,0x2
-+    3650:	3fc50513          	add	a0,a0,1020 # 5a48 <malloc+0xb70>
-+    3654:	7d0010ef          	jal	4e24 <printf>
-     exit(1);
--    36ac:	4505                	li	a0,1
--    36ae:	3d2010ef          	jal	4a80 <exit>
-+    3658:	4505                	li	a0,1
-+    365a:	3b0010ef          	jal	4a0a <exit>
-       int fd = open("stopforking", 0);
--    36b2:	00003497          	auipc	s1,0x3
--    36b6:	43e48493          	addi	s1,s1,1086 # 6af0 <malloc+0x1ba4>
--    36ba:	4581                	li	a1,0
--    36bc:	8526                	mv	a0,s1
--    36be:	402010ef          	jal	4ac0 <open>
-+    365e:	00003497          	auipc	s1,0x3
-+    3662:	40248493          	add	s1,s1,1026 # 6a60 <malloc+0x1b88>
-+    3666:	4581                	li	a1,0
-+    3668:	8526                	mv	a0,s1
-+    366a:	3e0010ef          	jal	4a4a <open>
-       if(fd >= 0){
--    36c2:	02055163          	bgez	a0,36e4 <forkforkfork+0x98>
-+    366e:	02055163          	bgez	a0,3690 <forkforkfork+0x98>
-       if(fork() < 0){
--    36c6:	3b2010ef          	jal	4a78 <fork>
--    36ca:	fe0558e3          	bgez	a0,36ba <forkforkfork+0x6e>
-+    3672:	390010ef          	jal	4a02 <fork>
-+    3676:	fe0558e3          	bgez	a0,3666 <forkforkfork+0x6e>
-         close(open("stopforking", O_CREATE|O_RDWR));
--    36ce:	20200593          	li	a1,514
--    36d2:	00003517          	auipc	a0,0x3
--    36d6:	41e50513          	addi	a0,a0,1054 # 6af0 <malloc+0x1ba4>
--    36da:	3e6010ef          	jal	4ac0 <open>
--    36de:	3ca010ef          	jal	4aa8 <close>
--    36e2:	bfe1                	j	36ba <forkforkfork+0x6e>
-+    367a:	20200593          	li	a1,514
-+    367e:	00003517          	auipc	a0,0x3
-+    3682:	3e250513          	add	a0,a0,994 # 6a60 <malloc+0x1b88>
-+    3686:	3c4010ef          	jal	4a4a <open>
-+    368a:	3a8010ef          	jal	4a32 <close>
-+    368e:	bfe1                	j	3666 <forkforkfork+0x6e>
-         exit(0);
--    36e4:	4501                	li	a0,0
--    36e6:	39a010ef          	jal	4a80 <exit>
-+    3690:	4501                	li	a0,0
-+    3692:	378010ef          	jal	4a0a <exit>
- 
--00000000000036ea <killstatus>:
-+0000000000003696 <killstatus>:
- {
--    36ea:	7139                	addi	sp,sp,-64
--    36ec:	fc06                	sd	ra,56(sp)
--    36ee:	f822                	sd	s0,48(sp)
--    36f0:	f426                	sd	s1,40(sp)
--    36f2:	f04a                	sd	s2,32(sp)
--    36f4:	ec4e                	sd	s3,24(sp)
--    36f6:	e852                	sd	s4,16(sp)
--    36f8:	0080                	addi	s0,sp,64
--    36fa:	8a2a                	mv	s4,a0
--    36fc:	06400913          	li	s2,100
-+    3696:	7139                	add	sp,sp,-64
-+    3698:	fc06                	sd	ra,56(sp)
-+    369a:	f822                	sd	s0,48(sp)
-+    369c:	f426                	sd	s1,40(sp)
-+    369e:	f04a                	sd	s2,32(sp)
-+    36a0:	ec4e                	sd	s3,24(sp)
-+    36a2:	e852                	sd	s4,16(sp)
-+    36a4:	0080                	add	s0,sp,64
-+    36a6:	8a2a                	mv	s4,a0
-+    36a8:	06400913          	li	s2,100
-     if(xst != -1) {
--    3700:	59fd                	li	s3,-1
-+    36ac:	59fd                	li	s3,-1
-     int pid1 = fork();
--    3702:	376010ef          	jal	4a78 <fork>
--    3706:	84aa                	mv	s1,a0
-+    36ae:	354010ef          	jal	4a02 <fork>
-+    36b2:	84aa                	mv	s1,a0
-     if(pid1 < 0){
--    3708:	02054763          	bltz	a0,3736 <killstatus+0x4c>
-+    36b4:	02054763          	bltz	a0,36e2 <killstatus+0x4c>
-     if(pid1 == 0){
--    370c:	cd1d                	beqz	a0,374a <killstatus+0x60>
-+    36b8:	cd1d                	beqz	a0,36f6 <killstatus+0x60>
-     sleep(1);
--    370e:	4505                	li	a0,1
--    3710:	400010ef          	jal	4b10 <sleep>
-+    36ba:	4505                	li	a0,1
-+    36bc:	3de010ef          	jal	4a9a <sleep>
-     kill(pid1);
--    3714:	8526                	mv	a0,s1
--    3716:	39a010ef          	jal	4ab0 <kill>
-+    36c0:	8526                	mv	a0,s1
-+    36c2:	378010ef          	jal	4a3a <kill>
-     wait(&xst);
--    371a:	fcc40513          	addi	a0,s0,-52
--    371e:	36a010ef          	jal	4a88 <wait>
-+    36c6:	fcc40513          	add	a0,s0,-52
-+    36ca:	348010ef          	jal	4a12 <wait>
-     if(xst != -1) {
--    3722:	fcc42783          	lw	a5,-52(s0)
--    3726:	03379563          	bne	a5,s3,3750 <killstatus+0x66>
-+    36ce:	fcc42783          	lw	a5,-52(s0)
-+    36d2:	03379563          	bne	a5,s3,36fc <killstatus+0x66>
-   for(int i = 0; i < 100; i++){
--    372a:	397d                	addiw	s2,s2,-1
--    372c:	fc091be3          	bnez	s2,3702 <killstatus+0x18>
-+    36d6:	397d                	addw	s2,s2,-1
-+    36d8:	fc091be3          	bnez	s2,36ae <killstatus+0x18>
-   exit(0);
--    3730:	4501                	li	a0,0
--    3732:	34e010ef          	jal	4a80 <exit>
-+    36dc:	4501                	li	a0,0
-+    36de:	32c010ef          	jal	4a0a <exit>
-       printf("%s: fork failed\n", s);
--    3736:	85d2                	mv	a1,s4
--    3738:	00002517          	auipc	a0,0x2
--    373c:	1e050513          	addi	a0,a0,480 # 5918 <malloc+0x9cc>
--    3740:	758010ef          	jal	4e98 <printf>
-+    36e2:	85d2                	mv	a1,s4
-+    36e4:	00002517          	auipc	a0,0x2
-+    36e8:	1a450513          	add	a0,a0,420 # 5888 <malloc+0x9b0>
-+    36ec:	738010ef          	jal	4e24 <printf>
-       exit(1);
--    3744:	4505                	li	a0,1
--    3746:	33a010ef          	jal	4a80 <exit>
-+    36f0:	4505                	li	a0,1
-+    36f2:	318010ef          	jal	4a0a <exit>
-         getpid();
--    374a:	3b6010ef          	jal	4b00 <getpid>
-+    36f6:	394010ef          	jal	4a8a <getpid>
-       while(1) {
--    374e:	bff5                	j	374a <killstatus+0x60>
-+    36fa:	bff5                	j	36f6 <killstatus+0x60>
-        printf("%s: status should be -1\n", s);
--    3750:	85d2                	mv	a1,s4
--    3752:	00003517          	auipc	a0,0x3
--    3756:	3ae50513          	addi	a0,a0,942 # 6b00 <malloc+0x1bb4>
--    375a:	73e010ef          	jal	4e98 <printf>
-+    36fc:	85d2                	mv	a1,s4
-+    36fe:	00003517          	auipc	a0,0x3
-+    3702:	37250513          	add	a0,a0,882 # 6a70 <malloc+0x1b98>
-+    3706:	71e010ef          	jal	4e24 <printf>
-        exit(1);
--    375e:	4505                	li	a0,1
--    3760:	320010ef          	jal	4a80 <exit>
-+    370a:	4505                	li	a0,1
-+    370c:	2fe010ef          	jal	4a0a <exit>
- 
--0000000000003764 <preempt>:
-+0000000000003710 <preempt>:
- {
--    3764:	7139                	addi	sp,sp,-64
--    3766:	fc06                	sd	ra,56(sp)
--    3768:	f822                	sd	s0,48(sp)
--    376a:	f426                	sd	s1,40(sp)
--    376c:	f04a                	sd	s2,32(sp)
--    376e:	ec4e                	sd	s3,24(sp)
--    3770:	e852                	sd	s4,16(sp)
--    3772:	0080                	addi	s0,sp,64
--    3774:	892a                	mv	s2,a0
-+    3710:	7139                	add	sp,sp,-64
-+    3712:	fc06                	sd	ra,56(sp)
-+    3714:	f822                	sd	s0,48(sp)
-+    3716:	f426                	sd	s1,40(sp)
-+    3718:	f04a                	sd	s2,32(sp)
-+    371a:	ec4e                	sd	s3,24(sp)
-+    371c:	e852                	sd	s4,16(sp)
-+    371e:	0080                	add	s0,sp,64
-+    3720:	892a                	mv	s2,a0
-   pid1 = fork();
--    3776:	302010ef          	jal	4a78 <fork>
-+    3722:	2e0010ef          	jal	4a02 <fork>
-   if(pid1 < 0) {
--    377a:	00054563          	bltz	a0,3784 <preempt+0x20>
--    377e:	84aa                	mv	s1,a0
-+    3726:	00054563          	bltz	a0,3730 <preempt+0x20>
-+    372a:	84aa                	mv	s1,a0
-   if(pid1 == 0)
--    3780:	ed01                	bnez	a0,3798 <preempt+0x34>
-+    372c:	ed01                	bnez	a0,3744 <preempt+0x34>
-     for(;;)
--    3782:	a001                	j	3782 <preempt+0x1e>
-+    372e:	a001                	j	372e <preempt+0x1e>
-     printf("%s: fork failed", s);
--    3784:	85ca                	mv	a1,s2
--    3786:	00002517          	auipc	a0,0x2
--    378a:	35250513          	addi	a0,a0,850 # 5ad8 <malloc+0xb8c>
--    378e:	70a010ef          	jal	4e98 <printf>
-+    3730:	85ca                	mv	a1,s2
-+    3732:	00002517          	auipc	a0,0x2
-+    3736:	31650513          	add	a0,a0,790 # 5a48 <malloc+0xb70>
-+    373a:	6ea010ef          	jal	4e24 <printf>
-     exit(1);
--    3792:	4505                	li	a0,1
--    3794:	2ec010ef          	jal	4a80 <exit>
-+    373e:	4505                	li	a0,1
-+    3740:	2ca010ef          	jal	4a0a <exit>
-   pid2 = fork();
--    3798:	2e0010ef          	jal	4a78 <fork>
--    379c:	89aa                	mv	s3,a0
-+    3744:	2be010ef          	jal	4a02 <fork>
-+    3748:	89aa                	mv	s3,a0
-   if(pid2 < 0) {
--    379e:	00054463          	bltz	a0,37a6 <preempt+0x42>
-+    374a:	00054463          	bltz	a0,3752 <preempt+0x42>
-   if(pid2 == 0)
--    37a2:	ed01                	bnez	a0,37ba <preempt+0x56>
-+    374e:	ed01                	bnez	a0,3766 <preempt+0x56>
-     for(;;)
--    37a4:	a001                	j	37a4 <preempt+0x40>
-+    3750:	a001                	j	3750 <preempt+0x40>
-     printf("%s: fork failed\n", s);
--    37a6:	85ca                	mv	a1,s2
--    37a8:	00002517          	auipc	a0,0x2
--    37ac:	17050513          	addi	a0,a0,368 # 5918 <malloc+0x9cc>
--    37b0:	6e8010ef          	jal	4e98 <printf>
-+    3752:	85ca                	mv	a1,s2
-+    3754:	00002517          	auipc	a0,0x2
-+    3758:	13450513          	add	a0,a0,308 # 5888 <malloc+0x9b0>
-+    375c:	6c8010ef          	jal	4e24 <printf>
-     exit(1);
--    37b4:	4505                	li	a0,1
--    37b6:	2ca010ef          	jal	4a80 <exit>
-+    3760:	4505                	li	a0,1
-+    3762:	2a8010ef          	jal	4a0a <exit>
-   pipe(pfds);
--    37ba:	fc840513          	addi	a0,s0,-56
--    37be:	2d2010ef          	jal	4a90 <pipe>
-+    3766:	fc840513          	add	a0,s0,-56
-+    376a:	2b0010ef          	jal	4a1a <pipe>
-   pid3 = fork();
--    37c2:	2b6010ef          	jal	4a78 <fork>
--    37c6:	8a2a                	mv	s4,a0
-+    376e:	294010ef          	jal	4a02 <fork>
-+    3772:	8a2a                	mv	s4,a0
-   if(pid3 < 0) {
--    37c8:	02054863          	bltz	a0,37f8 <preempt+0x94>
-+    3774:	02054863          	bltz	a0,37a4 <preempt+0x94>
-   if(pid3 == 0){
--    37cc:	e921                	bnez	a0,381c <preempt+0xb8>
-+    3778:	e921                	bnez	a0,37c8 <preempt+0xb8>
-     close(pfds[0]);
--    37ce:	fc842503          	lw	a0,-56(s0)
--    37d2:	2d6010ef          	jal	4aa8 <close>
-+    377a:	fc842503          	lw	a0,-56(s0)
-+    377e:	2b4010ef          	jal	4a32 <close>
-     if(write(pfds[1], "x", 1) != 1)
--    37d6:	4605                	li	a2,1
--    37d8:	00002597          	auipc	a1,0x2
--    37dc:	92058593          	addi	a1,a1,-1760 # 50f8 <malloc+0x1ac>
--    37e0:	fcc42503          	lw	a0,-52(s0)
--    37e4:	2bc010ef          	jal	4aa0 <write>
--    37e8:	4785                	li	a5,1
--    37ea:	02f51163          	bne	a0,a5,380c <preempt+0xa8>
-+    3782:	4605                	li	a2,1
-+    3784:	00002597          	auipc	a1,0x2
-+    3788:	8e458593          	add	a1,a1,-1820 # 5068 <malloc+0x190>
-+    378c:	fcc42503          	lw	a0,-52(s0)
-+    3790:	29a010ef          	jal	4a2a <write>
-+    3794:	4785                	li	a5,1
-+    3796:	02f51163          	bne	a0,a5,37b8 <preempt+0xa8>
-     close(pfds[1]);
--    37ee:	fcc42503          	lw	a0,-52(s0)
--    37f2:	2b6010ef          	jal	4aa8 <close>
-+    379a:	fcc42503          	lw	a0,-52(s0)
-+    379e:	294010ef          	jal	4a32 <close>
-     for(;;)
--    37f6:	a001                	j	37f6 <preempt+0x92>
-+    37a2:	a001                	j	37a2 <preempt+0x92>
-      printf("%s: fork failed\n", s);
--    37f8:	85ca                	mv	a1,s2
--    37fa:	00002517          	auipc	a0,0x2
--    37fe:	11e50513          	addi	a0,a0,286 # 5918 <malloc+0x9cc>
--    3802:	696010ef          	jal	4e98 <printf>
-+    37a4:	85ca                	mv	a1,s2
-+    37a6:	00002517          	auipc	a0,0x2
-+    37aa:	0e250513          	add	a0,a0,226 # 5888 <malloc+0x9b0>
-+    37ae:	676010ef          	jal	4e24 <printf>
-      exit(1);
--    3806:	4505                	li	a0,1
--    3808:	278010ef          	jal	4a80 <exit>
-+    37b2:	4505                	li	a0,1
-+    37b4:	256010ef          	jal	4a0a <exit>
-       printf("%s: preempt write error", s);
--    380c:	85ca                	mv	a1,s2
--    380e:	00003517          	auipc	a0,0x3
--    3812:	31250513          	addi	a0,a0,786 # 6b20 <malloc+0x1bd4>
--    3816:	682010ef          	jal	4e98 <printf>
--    381a:	bfd1                	j	37ee <preempt+0x8a>
-+    37b8:	85ca                	mv	a1,s2
-+    37ba:	00003517          	auipc	a0,0x3
-+    37be:	2d650513          	add	a0,a0,726 # 6a90 <malloc+0x1bb8>
-+    37c2:	662010ef          	jal	4e24 <printf>
-+    37c6:	bfd1                	j	379a <preempt+0x8a>
-   close(pfds[1]);
--    381c:	fcc42503          	lw	a0,-52(s0)
--    3820:	288010ef          	jal	4aa8 <close>
-+    37c8:	fcc42503          	lw	a0,-52(s0)
-+    37cc:	266010ef          	jal	4a32 <close>
-   if(read(pfds[0], buf, sizeof(buf)) != 1){
--    3824:	660d                	lui	a2,0x3
--    3826:	00009597          	auipc	a1,0x9
--    382a:	45258593          	addi	a1,a1,1106 # cc78 <buf>
--    382e:	fc842503          	lw	a0,-56(s0)
--    3832:	266010ef          	jal	4a98 <read>
--    3836:	4785                	li	a5,1
--    3838:	02f50163          	beq	a0,a5,385a <preempt+0xf6>
-+    37d0:	660d                	lui	a2,0x3
-+    37d2:	00008597          	auipc	a1,0x8
-+    37d6:	4a658593          	add	a1,a1,1190 # bc78 <buf>
-+    37da:	fc842503          	lw	a0,-56(s0)
-+    37de:	244010ef          	jal	4a22 <read>
-+    37e2:	4785                	li	a5,1
-+    37e4:	02f50163          	beq	a0,a5,3806 <preempt+0xf6>
-     printf("%s: preempt read error", s);
--    383c:	85ca                	mv	a1,s2
--    383e:	00003517          	auipc	a0,0x3
--    3842:	2fa50513          	addi	a0,a0,762 # 6b38 <malloc+0x1bec>
--    3846:	652010ef          	jal	4e98 <printf>
-+    37e8:	85ca                	mv	a1,s2
-+    37ea:	00003517          	auipc	a0,0x3
-+    37ee:	2be50513          	add	a0,a0,702 # 6aa8 <malloc+0x1bd0>
-+    37f2:	632010ef          	jal	4e24 <printf>
- }
--    384a:	70e2                	ld	ra,56(sp)
--    384c:	7442                	ld	s0,48(sp)
--    384e:	74a2                	ld	s1,40(sp)
--    3850:	7902                	ld	s2,32(sp)
--    3852:	69e2                	ld	s3,24(sp)
--    3854:	6a42                	ld	s4,16(sp)
--    3856:	6121                	addi	sp,sp,64
--    3858:	8082                	ret
-+    37f6:	70e2                	ld	ra,56(sp)
-+    37f8:	7442                	ld	s0,48(sp)
-+    37fa:	74a2                	ld	s1,40(sp)
-+    37fc:	7902                	ld	s2,32(sp)
-+    37fe:	69e2                	ld	s3,24(sp)
-+    3800:	6a42                	ld	s4,16(sp)
-+    3802:	6121                	add	sp,sp,64
-+    3804:	8082                	ret
-   close(pfds[0]);
--    385a:	fc842503          	lw	a0,-56(s0)
--    385e:	24a010ef          	jal	4aa8 <close>
-+    3806:	fc842503          	lw	a0,-56(s0)
-+    380a:	228010ef          	jal	4a32 <close>
-   printf("kill... ");
--    3862:	00003517          	auipc	a0,0x3
--    3866:	2ee50513          	addi	a0,a0,750 # 6b50 <malloc+0x1c04>
--    386a:	62e010ef          	jal	4e98 <printf>
-+    380e:	00003517          	auipc	a0,0x3
-+    3812:	2b250513          	add	a0,a0,690 # 6ac0 <malloc+0x1be8>
-+    3816:	60e010ef          	jal	4e24 <printf>
-   kill(pid1);
--    386e:	8526                	mv	a0,s1
--    3870:	240010ef          	jal	4ab0 <kill>
-+    381a:	8526                	mv	a0,s1
-+    381c:	21e010ef          	jal	4a3a <kill>
-   kill(pid2);
--    3874:	854e                	mv	a0,s3
--    3876:	23a010ef          	jal	4ab0 <kill>
-+    3820:	854e                	mv	a0,s3
-+    3822:	218010ef          	jal	4a3a <kill>
-   kill(pid3);
--    387a:	8552                	mv	a0,s4
--    387c:	234010ef          	jal	4ab0 <kill>
-+    3826:	8552                	mv	a0,s4
-+    3828:	212010ef          	jal	4a3a <kill>
-   printf("wait... ");
--    3880:	00003517          	auipc	a0,0x3
--    3884:	2e050513          	addi	a0,a0,736 # 6b60 <malloc+0x1c14>
--    3888:	610010ef          	jal	4e98 <printf>
-+    382c:	00003517          	auipc	a0,0x3
-+    3830:	2a450513          	add	a0,a0,676 # 6ad0 <malloc+0x1bf8>
-+    3834:	5f0010ef          	jal	4e24 <printf>
-   wait(0);
--    388c:	4501                	li	a0,0
--    388e:	1fa010ef          	jal	4a88 <wait>
-+    3838:	4501                	li	a0,0
-+    383a:	1d8010ef          	jal	4a12 <wait>
-   wait(0);
--    3892:	4501                	li	a0,0
--    3894:	1f4010ef          	jal	4a88 <wait>
-+    383e:	4501                	li	a0,0
-+    3840:	1d2010ef          	jal	4a12 <wait>
-   wait(0);
--    3898:	4501                	li	a0,0
--    389a:	1ee010ef          	jal	4a88 <wait>
--    389e:	b775                	j	384a <preempt+0xe6>
-+    3844:	4501                	li	a0,0
-+    3846:	1cc010ef          	jal	4a12 <wait>
-+    384a:	b775                	j	37f6 <preempt+0xe6>
- 
--00000000000038a0 <reparent>:
-+000000000000384c <reparent>:
- {
--    38a0:	7179                	addi	sp,sp,-48
--    38a2:	f406                	sd	ra,40(sp)
--    38a4:	f022                	sd	s0,32(sp)
--    38a6:	ec26                	sd	s1,24(sp)
--    38a8:	e84a                	sd	s2,16(sp)
--    38aa:	e44e                	sd	s3,8(sp)
--    38ac:	e052                	sd	s4,0(sp)
--    38ae:	1800                	addi	s0,sp,48
--    38b0:	89aa                	mv	s3,a0
-+    384c:	7179                	add	sp,sp,-48
-+    384e:	f406                	sd	ra,40(sp)
-+    3850:	f022                	sd	s0,32(sp)
-+    3852:	ec26                	sd	s1,24(sp)
-+    3854:	e84a                	sd	s2,16(sp)
-+    3856:	e44e                	sd	s3,8(sp)
-+    3858:	e052                	sd	s4,0(sp)
-+    385a:	1800                	add	s0,sp,48
-+    385c:	89aa                	mv	s3,a0
-   int master_pid = getpid();
--    38b2:	24e010ef          	jal	4b00 <getpid>
--    38b6:	8a2a                	mv	s4,a0
--    38b8:	0c800913          	li	s2,200
-+    385e:	22c010ef          	jal	4a8a <getpid>
-+    3862:	8a2a                	mv	s4,a0
-+    3864:	0c800913          	li	s2,200
-     int pid = fork();
--    38bc:	1bc010ef          	jal	4a78 <fork>
--    38c0:	84aa                	mv	s1,a0
-+    3868:	19a010ef          	jal	4a02 <fork>
-+    386c:	84aa                	mv	s1,a0
-     if(pid < 0){
--    38c2:	00054e63          	bltz	a0,38de <reparent+0x3e>
-+    386e:	00054e63          	bltz	a0,388a <reparent+0x3e>
-     if(pid){
--    38c6:	c121                	beqz	a0,3906 <reparent+0x66>
-+    3872:	c121                	beqz	a0,38b2 <reparent+0x66>
-       if(wait(0) != pid){
--    38c8:	4501                	li	a0,0
--    38ca:	1be010ef          	jal	4a88 <wait>
--    38ce:	02951263          	bne	a0,s1,38f2 <reparent+0x52>
-+    3874:	4501                	li	a0,0
-+    3876:	19c010ef          	jal	4a12 <wait>
-+    387a:	02951263          	bne	a0,s1,389e <reparent+0x52>
-   for(int i = 0; i < 200; i++){
--    38d2:	397d                	addiw	s2,s2,-1
--    38d4:	fe0914e3          	bnez	s2,38bc <reparent+0x1c>
-+    387e:	397d                	addw	s2,s2,-1
-+    3880:	fe0914e3          	bnez	s2,3868 <reparent+0x1c>
-   exit(0);
--    38d8:	4501                	li	a0,0
--    38da:	1a6010ef          	jal	4a80 <exit>
-+    3884:	4501                	li	a0,0
-+    3886:	184010ef          	jal	4a0a <exit>
-       printf("%s: fork failed\n", s);
--    38de:	85ce                	mv	a1,s3
--    38e0:	00002517          	auipc	a0,0x2
--    38e4:	03850513          	addi	a0,a0,56 # 5918 <malloc+0x9cc>
--    38e8:	5b0010ef          	jal	4e98 <printf>
-+    388a:	85ce                	mv	a1,s3
-+    388c:	00002517          	auipc	a0,0x2
-+    3890:	ffc50513          	add	a0,a0,-4 # 5888 <malloc+0x9b0>
-+    3894:	590010ef          	jal	4e24 <printf>
-       exit(1);
--    38ec:	4505                	li	a0,1
--    38ee:	192010ef          	jal	4a80 <exit>
-+    3898:	4505                	li	a0,1
-+    389a:	170010ef          	jal	4a0a <exit>
-         printf("%s: wait wrong pid\n", s);
--    38f2:	85ce                	mv	a1,s3
--    38f4:	00002517          	auipc	a0,0x2
--    38f8:	1ac50513          	addi	a0,a0,428 # 5aa0 <malloc+0xb54>
--    38fc:	59c010ef          	jal	4e98 <printf>
-+    389e:	85ce                	mv	a1,s3
-+    38a0:	00002517          	auipc	a0,0x2
-+    38a4:	17050513          	add	a0,a0,368 # 5a10 <malloc+0xb38>
-+    38a8:	57c010ef          	jal	4e24 <printf>
-         exit(1);
--    3900:	4505                	li	a0,1
--    3902:	17e010ef          	jal	4a80 <exit>
-+    38ac:	4505                	li	a0,1
-+    38ae:	15c010ef          	jal	4a0a <exit>
-       int pid2 = fork();
--    3906:	172010ef          	jal	4a78 <fork>
-+    38b2:	150010ef          	jal	4a02 <fork>
-       if(pid2 < 0){
--    390a:	00054563          	bltz	a0,3914 <reparent+0x74>
-+    38b6:	00054563          	bltz	a0,38c0 <reparent+0x74>
-       exit(0);
--    390e:	4501                	li	a0,0
--    3910:	170010ef          	jal	4a80 <exit>
-+    38ba:	4501                	li	a0,0
-+    38bc:	14e010ef          	jal	4a0a <exit>
-         kill(master_pid);
--    3914:	8552                	mv	a0,s4
--    3916:	19a010ef          	jal	4ab0 <kill>
-+    38c0:	8552                	mv	a0,s4
-+    38c2:	178010ef          	jal	4a3a <kill>
-         exit(1);
--    391a:	4505                	li	a0,1
--    391c:	164010ef          	jal	4a80 <exit>
-+    38c6:	4505                	li	a0,1
-+    38c8:	142010ef          	jal	4a0a <exit>
- 
--0000000000003920 <sbrkfail>:
-+00000000000038cc <sbrkfail>:
- {
--    3920:	7119                	addi	sp,sp,-128
--    3922:	fc86                	sd	ra,120(sp)
--    3924:	f8a2                	sd	s0,112(sp)
--    3926:	f4a6                	sd	s1,104(sp)
--    3928:	f0ca                	sd	s2,96(sp)
--    392a:	ecce                	sd	s3,88(sp)
--    392c:	e8d2                	sd	s4,80(sp)
--    392e:	e4d6                	sd	s5,72(sp)
--    3930:	0100                	addi	s0,sp,128
--    3932:	8aaa                	mv	s5,a0
-+    38cc:	7119                	add	sp,sp,-128
-+    38ce:	fc86                	sd	ra,120(sp)
-+    38d0:	f8a2                	sd	s0,112(sp)
-+    38d2:	f4a6                	sd	s1,104(sp)
-+    38d4:	f0ca                	sd	s2,96(sp)
-+    38d6:	ecce                	sd	s3,88(sp)
-+    38d8:	e8d2                	sd	s4,80(sp)
-+    38da:	e4d6                	sd	s5,72(sp)
-+    38dc:	0100                	add	s0,sp,128
-+    38de:	8aaa                	mv	s5,a0
-   if(pipe(fds) != 0){
--    3934:	fb040513          	addi	a0,s0,-80
--    3938:	158010ef          	jal	4a90 <pipe>
--    393c:	e901                	bnez	a0,394c <sbrkfail+0x2c>
--    393e:	f8040493          	addi	s1,s0,-128
--    3942:	fa840993          	addi	s3,s0,-88
--    3946:	8926                	mv	s2,s1
-+    38e0:	fb040513          	add	a0,s0,-80
-+    38e4:	136010ef          	jal	4a1a <pipe>
-+    38e8:	e901                	bnez	a0,38f8 <sbrkfail+0x2c>
-+    38ea:	f8040493          	add	s1,s0,-128
-+    38ee:	fa840993          	add	s3,s0,-88
-+    38f2:	8926                	mv	s2,s1
-     if(pids[i] != -1)
--    3948:	5a7d                	li	s4,-1
--    394a:	a0a1                	j	3992 <sbrkfail+0x72>
-+    38f4:	5a7d                	li	s4,-1
-+    38f6:	a0a1                	j	393e <sbrkfail+0x72>
-     printf("%s: pipe() failed\n", s);
--    394c:	85d6                	mv	a1,s5
--    394e:	00002517          	auipc	a0,0x2
--    3952:	0d250513          	addi	a0,a0,210 # 5a20 <malloc+0xad4>
--    3956:	542010ef          	jal	4e98 <printf>
-+    38f8:	85d6                	mv	a1,s5
-+    38fa:	00002517          	auipc	a0,0x2
-+    38fe:	09650513          	add	a0,a0,150 # 5990 <malloc+0xab8>
-+    3902:	522010ef          	jal	4e24 <printf>
-     exit(1);
--    395a:	4505                	li	a0,1
--    395c:	124010ef          	jal	4a80 <exit>
-+    3906:	4505                	li	a0,1
-+    3908:	102010ef          	jal	4a0a <exit>
-       sbrk(BIG - (uint64)sbrk(0));
--    3960:	1a8010ef          	jal	4b08 <sbrk>
--    3964:	064007b7          	lui	a5,0x6400
--    3968:	40a7853b          	subw	a0,a5,a0
--    396c:	19c010ef          	jal	4b08 <sbrk>
-+    390c:	186010ef          	jal	4a92 <sbrk>
-+    3910:	064007b7          	lui	a5,0x6400
-+    3914:	40a7853b          	subw	a0,a5,a0
-+    3918:	17a010ef          	jal	4a92 <sbrk>
-       write(fds[1], "x", 1);
--    3970:	4605                	li	a2,1
--    3972:	00001597          	auipc	a1,0x1
--    3976:	78658593          	addi	a1,a1,1926 # 50f8 <malloc+0x1ac>
--    397a:	fb442503          	lw	a0,-76(s0)
--    397e:	122010ef          	jal	4aa0 <write>
-+    391c:	4605                	li	a2,1
-+    391e:	00001597          	auipc	a1,0x1
-+    3922:	74a58593          	add	a1,a1,1866 # 5068 <malloc+0x190>
-+    3926:	fb442503          	lw	a0,-76(s0)
-+    392a:	100010ef          	jal	4a2a <write>
-       for(;;) sleep(1000);
--    3982:	3e800513          	li	a0,1000
--    3986:	18a010ef          	jal	4b10 <sleep>
--    398a:	bfe5                	j	3982 <sbrkfail+0x62>
-+    392e:	3e800513          	li	a0,1000
-+    3932:	168010ef          	jal	4a9a <sleep>
-+    3936:	bfe5                	j	392e <sbrkfail+0x62>
-   for(i = 0; i < sizeof(pids)/sizeof(pids[0]); i++){
--    398c:	0911                	addi	s2,s2,4
--    398e:	03390163          	beq	s2,s3,39b0 <sbrkfail+0x90>
-+    3938:	0911                	add	s2,s2,4
-+    393a:	03390163          	beq	s2,s3,395c <sbrkfail+0x90>
-     if((pids[i] = fork()) == 0){
--    3992:	0e6010ef          	jal	4a78 <fork>
--    3996:	00a92023          	sw	a0,0(s2)
--    399a:	d179                	beqz	a0,3960 <sbrkfail+0x40>
-+    393e:	0c4010ef          	jal	4a02 <fork>
-+    3942:	00a92023          	sw	a0,0(s2)
-+    3946:	d179                	beqz	a0,390c <sbrkfail+0x40>
-     if(pids[i] != -1)
--    399c:	ff4508e3          	beq	a0,s4,398c <sbrkfail+0x6c>
-+    3948:	ff4508e3          	beq	a0,s4,3938 <sbrkfail+0x6c>
-       read(fds[0], &scratch, 1);
--    39a0:	4605                	li	a2,1
--    39a2:	faf40593          	addi	a1,s0,-81
--    39a6:	fb042503          	lw	a0,-80(s0)
--    39aa:	0ee010ef          	jal	4a98 <read>
--    39ae:	bff9                	j	398c <sbrkfail+0x6c>
-+    394c:	4605                	li	a2,1
-+    394e:	faf40593          	add	a1,s0,-81
-+    3952:	fb042503          	lw	a0,-80(s0)
-+    3956:	0cc010ef          	jal	4a22 <read>
-+    395a:	bff9                	j	3938 <sbrkfail+0x6c>
-   c = sbrk(PGSIZE);
--    39b0:	6505                	lui	a0,0x1
--    39b2:	156010ef          	jal	4b08 <sbrk>
--    39b6:	8a2a                	mv	s4,a0
-+    395c:	6505                	lui	a0,0x1
-+    395e:	134010ef          	jal	4a92 <sbrk>
-+    3962:	8a2a                	mv	s4,a0
-     if(pids[i] == -1)
--    39b8:	597d                	li	s2,-1
--    39ba:	a021                	j	39c2 <sbrkfail+0xa2>
-+    3964:	597d                	li	s2,-1
-+    3966:	a021                	j	396e <sbrkfail+0xa2>
-   for(i = 0; i < sizeof(pids)/sizeof(pids[0]); i++){
--    39bc:	0491                	addi	s1,s1,4
--    39be:	01348b63          	beq	s1,s3,39d4 <sbrkfail+0xb4>
-+    3968:	0491                	add	s1,s1,4
-+    396a:	01348b63          	beq	s1,s3,3980 <sbrkfail+0xb4>
-     if(pids[i] == -1)
--    39c2:	4088                	lw	a0,0(s1)
--    39c4:	ff250ce3          	beq	a0,s2,39bc <sbrkfail+0x9c>
-+    396e:	4088                	lw	a0,0(s1)
-+    3970:	ff250ce3          	beq	a0,s2,3968 <sbrkfail+0x9c>
-     kill(pids[i]);
--    39c8:	0e8010ef          	jal	4ab0 <kill>
-+    3974:	0c6010ef          	jal	4a3a <kill>
-     wait(0);
--    39cc:	4501                	li	a0,0
--    39ce:	0ba010ef          	jal	4a88 <wait>
--    39d2:	b7ed                	j	39bc <sbrkfail+0x9c>
-+    3978:	4501                	li	a0,0
-+    397a:	098010ef          	jal	4a12 <wait>
-+    397e:	b7ed                	j	3968 <sbrkfail+0x9c>
-   if(c == (char*)0xffffffffffffffffL){
--    39d4:	57fd                	li	a5,-1
--    39d6:	02fa0d63          	beq	s4,a5,3a10 <sbrkfail+0xf0>
-+    3980:	57fd                	li	a5,-1
-+    3982:	02fa0d63          	beq	s4,a5,39bc <sbrkfail+0xf0>
-   pid = fork();
--    39da:	09e010ef          	jal	4a78 <fork>
--    39de:	84aa                	mv	s1,a0
-+    3986:	07c010ef          	jal	4a02 <fork>
-+    398a:	84aa                	mv	s1,a0
-   if(pid < 0){
--    39e0:	04054263          	bltz	a0,3a24 <sbrkfail+0x104>
-+    398c:	04054263          	bltz	a0,39d0 <sbrkfail+0x104>
-   if(pid == 0){
--    39e4:	c931                	beqz	a0,3a38 <sbrkfail+0x118>
-+    3990:	c931                	beqz	a0,39e4 <sbrkfail+0x118>
-   wait(&xstatus);
--    39e6:	fbc40513          	addi	a0,s0,-68
--    39ea:	09e010ef          	jal	4a88 <wait>
-+    3992:	fbc40513          	add	a0,s0,-68
-+    3996:	07c010ef          	jal	4a12 <wait>
-   if(xstatus != -1 && xstatus != 2)
--    39ee:	fbc42783          	lw	a5,-68(s0)
--    39f2:	577d                	li	a4,-1
--    39f4:	00e78563          	beq	a5,a4,39fe <sbrkfail+0xde>
--    39f8:	4709                	li	a4,2
--    39fa:	06e79d63          	bne	a5,a4,3a74 <sbrkfail+0x154>
-+    399a:	fbc42783          	lw	a5,-68(s0)
-+    399e:	577d                	li	a4,-1
-+    39a0:	00e78563          	beq	a5,a4,39aa <sbrkfail+0xde>
-+    39a4:	4709                	li	a4,2
-+    39a6:	06e79d63          	bne	a5,a4,3a20 <sbrkfail+0x154>
- }
--    39fe:	70e6                	ld	ra,120(sp)
--    3a00:	7446                	ld	s0,112(sp)
--    3a02:	74a6                	ld	s1,104(sp)
--    3a04:	7906                	ld	s2,96(sp)
--    3a06:	69e6                	ld	s3,88(sp)
--    3a08:	6a46                	ld	s4,80(sp)
--    3a0a:	6aa6                	ld	s5,72(sp)
--    3a0c:	6109                	addi	sp,sp,128
--    3a0e:	8082                	ret
-+    39aa:	70e6                	ld	ra,120(sp)
-+    39ac:	7446                	ld	s0,112(sp)
-+    39ae:	74a6                	ld	s1,104(sp)
-+    39b0:	7906                	ld	s2,96(sp)
-+    39b2:	69e6                	ld	s3,88(sp)
-+    39b4:	6a46                	ld	s4,80(sp)
-+    39b6:	6aa6                	ld	s5,72(sp)
-+    39b8:	6109                	add	sp,sp,128
-+    39ba:	8082                	ret
-     printf("%s: failed sbrk leaked memory\n", s);
--    3a10:	85d6                	mv	a1,s5
--    3a12:	00003517          	auipc	a0,0x3
--    3a16:	15e50513          	addi	a0,a0,350 # 6b70 <malloc+0x1c24>
--    3a1a:	47e010ef          	jal	4e98 <printf>
-+    39bc:	85d6                	mv	a1,s5
-+    39be:	00003517          	auipc	a0,0x3
-+    39c2:	12250513          	add	a0,a0,290 # 6ae0 <malloc+0x1c08>
-+    39c6:	45e010ef          	jal	4e24 <printf>
-     exit(1);
--    3a1e:	4505                	li	a0,1
--    3a20:	060010ef          	jal	4a80 <exit>
-+    39ca:	4505                	li	a0,1
-+    39cc:	03e010ef          	jal	4a0a <exit>
-     printf("%s: fork failed\n", s);
--    3a24:	85d6                	mv	a1,s5
--    3a26:	00002517          	auipc	a0,0x2
--    3a2a:	ef250513          	addi	a0,a0,-270 # 5918 <malloc+0x9cc>
--    3a2e:	46a010ef          	jal	4e98 <printf>
-+    39d0:	85d6                	mv	a1,s5
-+    39d2:	00002517          	auipc	a0,0x2
-+    39d6:	eb650513          	add	a0,a0,-330 # 5888 <malloc+0x9b0>
-+    39da:	44a010ef          	jal	4e24 <printf>
-     exit(1);
--    3a32:	4505                	li	a0,1
--    3a34:	04c010ef          	jal	4a80 <exit>
-+    39de:	4505                	li	a0,1
-+    39e0:	02a010ef          	jal	4a0a <exit>
-     a = sbrk(0);
--    3a38:	4501                	li	a0,0
--    3a3a:	0ce010ef          	jal	4b08 <sbrk>
--    3a3e:	892a                	mv	s2,a0
-+    39e4:	4501                	li	a0,0
-+    39e6:	0ac010ef          	jal	4a92 <sbrk>
-+    39ea:	892a                	mv	s2,a0
-     sbrk(10*BIG);
--    3a40:	3e800537          	lui	a0,0x3e800
--    3a44:	0c4010ef          	jal	4b08 <sbrk>
-+    39ec:	3e800537          	lui	a0,0x3e800
-+    39f0:	0a2010ef          	jal	4a92 <sbrk>
-     for (i = 0; i < 10*BIG; i += PGSIZE) {
--    3a48:	87ca                	mv	a5,s2
--    3a4a:	3e800737          	lui	a4,0x3e800
--    3a4e:	993a                	add	s2,s2,a4
--    3a50:	6705                	lui	a4,0x1
-+    39f4:	87ca                	mv	a5,s2
-+    39f6:	3e800737          	lui	a4,0x3e800
-+    39fa:	993a                	add	s2,s2,a4
-+    39fc:	6705                	lui	a4,0x1
-       n += *(a+i);
--    3a52:	0007c683          	lbu	a3,0(a5) # 6400000 <base+0x63f0388>
--    3a56:	9cb5                	addw	s1,s1,a3
-+    39fe:	0007c683          	lbu	a3,0(a5) # 6400000 <base+0x63f1388>
-+    3a02:	9cb5                	addw	s1,s1,a3
-     for (i = 0; i < 10*BIG; i += PGSIZE) {
--    3a58:	97ba                	add	a5,a5,a4
--    3a5a:	fef91ce3          	bne	s2,a5,3a52 <sbrkfail+0x132>
-+    3a04:	97ba                	add	a5,a5,a4
-+    3a06:	ff279ce3          	bne	a5,s2,39fe <sbrkfail+0x132>
-     printf("%s: allocate a lot of memory succeeded %d\n", s, n);
--    3a5e:	8626                	mv	a2,s1
--    3a60:	85d6                	mv	a1,s5
--    3a62:	00003517          	auipc	a0,0x3
--    3a66:	12e50513          	addi	a0,a0,302 # 6b90 <malloc+0x1c44>
--    3a6a:	42e010ef          	jal	4e98 <printf>
-+    3a0a:	8626                	mv	a2,s1
-+    3a0c:	85d6                	mv	a1,s5
-+    3a0e:	00003517          	auipc	a0,0x3
-+    3a12:	0f250513          	add	a0,a0,242 # 6b00 <malloc+0x1c28>
-+    3a16:	40e010ef          	jal	4e24 <printf>
-     exit(1);
--    3a6e:	4505                	li	a0,1
--    3a70:	010010ef          	jal	4a80 <exit>
-+    3a1a:	4505                	li	a0,1
-+    3a1c:	7ef000ef          	jal	4a0a <exit>
-     exit(1);
--    3a74:	4505                	li	a0,1
--    3a76:	00a010ef          	jal	4a80 <exit>
-+    3a20:	4505                	li	a0,1
-+    3a22:	7e9000ef          	jal	4a0a <exit>
- 
--0000000000003a7a <mem>:
-+0000000000003a26 <mem>:
- {
--    3a7a:	7139                	addi	sp,sp,-64
--    3a7c:	fc06                	sd	ra,56(sp)
--    3a7e:	f822                	sd	s0,48(sp)
--    3a80:	f426                	sd	s1,40(sp)
--    3a82:	f04a                	sd	s2,32(sp)
--    3a84:	ec4e                	sd	s3,24(sp)
--    3a86:	0080                	addi	s0,sp,64
--    3a88:	89aa                	mv	s3,a0
-+    3a26:	7139                	add	sp,sp,-64
-+    3a28:	fc06                	sd	ra,56(sp)
-+    3a2a:	f822                	sd	s0,48(sp)
-+    3a2c:	f426                	sd	s1,40(sp)
-+    3a2e:	f04a                	sd	s2,32(sp)
-+    3a30:	ec4e                	sd	s3,24(sp)
-+    3a32:	0080                	add	s0,sp,64
-+    3a34:	89aa                	mv	s3,a0
-   if((pid = fork()) == 0){
--    3a8a:	7ef000ef          	jal	4a78 <fork>
-+    3a36:	7cd000ef          	jal	4a02 <fork>
-     m1 = 0;
--    3a8e:	4481                	li	s1,0
-+    3a3a:	4481                	li	s1,0
-     while((m2 = malloc(10001)) != 0){
--    3a90:	6909                	lui	s2,0x2
--    3a92:	71190913          	addi	s2,s2,1809 # 2711 <fourteen+0x7d>
-+    3a3c:	6909                	lui	s2,0x2
-+    3a3e:	71190913          	add	s2,s2,1809 # 2711 <fourteen+0xd1>
-   if((pid = fork()) == 0){
--    3a96:	cd11                	beqz	a0,3ab2 <mem+0x38>
-+    3a42:	cd11                	beqz	a0,3a5e <mem+0x38>
-     wait(&xstatus);
--    3a98:	fcc40513          	addi	a0,s0,-52
--    3a9c:	7ed000ef          	jal	4a88 <wait>
-+    3a44:	fcc40513          	add	a0,s0,-52
-+    3a48:	7cb000ef          	jal	4a12 <wait>
-     if(xstatus == -1){
--    3aa0:	fcc42503          	lw	a0,-52(s0)
--    3aa4:	57fd                	li	a5,-1
--    3aa6:	04f50363          	beq	a0,a5,3aec <mem+0x72>
-+    3a4c:	fcc42503          	lw	a0,-52(s0)
-+    3a50:	57fd                	li	a5,-1
-+    3a52:	04f50363          	beq	a0,a5,3a98 <mem+0x72>
-     exit(xstatus);
--    3aaa:	7d7000ef          	jal	4a80 <exit>
-+    3a56:	7b5000ef          	jal	4a0a <exit>
-       *(char**)m2 = m1;
--    3aae:	e104                	sd	s1,0(a0)
-+    3a5a:	e104                	sd	s1,0(a0)
-       m1 = m2;
--    3ab0:	84aa                	mv	s1,a0
-+    3a5c:	84aa                	mv	s1,a0
-     while((m2 = malloc(10001)) != 0){
--    3ab2:	854a                	mv	a0,s2
--    3ab4:	498010ef          	jal	4f4c <malloc>
--    3ab8:	f97d                	bnez	a0,3aae <mem+0x34>
-+    3a5e:	854a                	mv	a0,s2
-+    3a60:	478010ef          	jal	4ed8 <malloc>
-+    3a64:	f97d                	bnez	a0,3a5a <mem+0x34>
-     while(m1){
--    3aba:	c491                	beqz	s1,3ac6 <mem+0x4c>
-+    3a66:	c491                	beqz	s1,3a72 <mem+0x4c>
-       m2 = *(char**)m1;
--    3abc:	8526                	mv	a0,s1
--    3abe:	6084                	ld	s1,0(s1)
-+    3a68:	8526                	mv	a0,s1
-+    3a6a:	6084                	ld	s1,0(s1)
-       free(m1);
--    3ac0:	40a010ef          	jal	4eca <free>
-+    3a6c:	3ea010ef          	jal	4e56 <free>
-     while(m1){
--    3ac4:	fce5                	bnez	s1,3abc <mem+0x42>
-+    3a70:	fce5                	bnez	s1,3a68 <mem+0x42>
-     m1 = malloc(1024*20);
--    3ac6:	6515                	lui	a0,0x5
--    3ac8:	484010ef          	jal	4f4c <malloc>
-+    3a72:	6515                	lui	a0,0x5
-+    3a74:	464010ef          	jal	4ed8 <malloc>
-     if(m1 == 0){
--    3acc:	c511                	beqz	a0,3ad8 <mem+0x5e>
-+    3a78:	c511                	beqz	a0,3a84 <mem+0x5e>
-     free(m1);
--    3ace:	3fc010ef          	jal	4eca <free>
-+    3a7a:	3dc010ef          	jal	4e56 <free>
-     exit(0);
--    3ad2:	4501                	li	a0,0
--    3ad4:	7ad000ef          	jal	4a80 <exit>
-+    3a7e:	4501                	li	a0,0
-+    3a80:	78b000ef          	jal	4a0a <exit>
-       printf("%s: couldn't allocate mem?!!\n", s);
--    3ad8:	85ce                	mv	a1,s3
--    3ada:	00003517          	auipc	a0,0x3
--    3ade:	0e650513          	addi	a0,a0,230 # 6bc0 <malloc+0x1c74>
--    3ae2:	3b6010ef          	jal	4e98 <printf>
-+    3a84:	85ce                	mv	a1,s3
-+    3a86:	00003517          	auipc	a0,0x3
-+    3a8a:	0aa50513          	add	a0,a0,170 # 6b30 <malloc+0x1c58>
-+    3a8e:	396010ef          	jal	4e24 <printf>
-       exit(1);
--    3ae6:	4505                	li	a0,1
--    3ae8:	799000ef          	jal	4a80 <exit>
-+    3a92:	4505                	li	a0,1
-+    3a94:	777000ef          	jal	4a0a <exit>
-       exit(0);
--    3aec:	4501                	li	a0,0
--    3aee:	793000ef          	jal	4a80 <exit>
-+    3a98:	4501                	li	a0,0
-+    3a9a:	771000ef          	jal	4a0a <exit>
- 
--0000000000003af2 <sharedfd>:
-+0000000000003a9e <sharedfd>:
- {
--    3af2:	7159                	addi	sp,sp,-112
--    3af4:	f486                	sd	ra,104(sp)
--    3af6:	f0a2                	sd	s0,96(sp)
--    3af8:	e0d2                	sd	s4,64(sp)
--    3afa:	1880                	addi	s0,sp,112
--    3afc:	8a2a                	mv	s4,a0
-+    3a9e:	7159                	add	sp,sp,-112
-+    3aa0:	f486                	sd	ra,104(sp)
-+    3aa2:	f0a2                	sd	s0,96(sp)
-+    3aa4:	eca6                	sd	s1,88(sp)
-+    3aa6:	e8ca                	sd	s2,80(sp)
-+    3aa8:	e4ce                	sd	s3,72(sp)
-+    3aaa:	e0d2                	sd	s4,64(sp)
-+    3aac:	fc56                	sd	s5,56(sp)
-+    3aae:	f85a                	sd	s6,48(sp)
-+    3ab0:	f45e                	sd	s7,40(sp)
-+    3ab2:	1880                	add	s0,sp,112
-+    3ab4:	8a2a                	mv	s4,a0
-   unlink("sharedfd");
--    3afe:	00003517          	auipc	a0,0x3
--    3b02:	0e250513          	addi	a0,a0,226 # 6be0 <malloc+0x1c94>
--    3b06:	7cb000ef          	jal	4ad0 <unlink>
-+    3ab6:	00003517          	auipc	a0,0x3
-+    3aba:	09a50513          	add	a0,a0,154 # 6b50 <malloc+0x1c78>
-+    3abe:	79d000ef          	jal	4a5a <unlink>
-   fd = open("sharedfd", O_CREATE|O_RDWR);
--    3b0a:	20200593          	li	a1,514
--    3b0e:	00003517          	auipc	a0,0x3
--    3b12:	0d250513          	addi	a0,a0,210 # 6be0 <malloc+0x1c94>
--    3b16:	7ab000ef          	jal	4ac0 <open>
-+    3ac2:	20200593          	li	a1,514
-+    3ac6:	00003517          	auipc	a0,0x3
-+    3aca:	08a50513          	add	a0,a0,138 # 6b50 <malloc+0x1c78>
-+    3ace:	77d000ef          	jal	4a4a <open>
-   if(fd < 0){
--    3b1a:	04054863          	bltz	a0,3b6a <sharedfd+0x78>
--    3b1e:	eca6                	sd	s1,88(sp)
--    3b20:	e8ca                	sd	s2,80(sp)
--    3b22:	e4ce                	sd	s3,72(sp)
--    3b24:	fc56                	sd	s5,56(sp)
--    3b26:	f85a                	sd	s6,48(sp)
--    3b28:	f45e                	sd	s7,40(sp)
--    3b2a:	892a                	mv	s2,a0
-+    3ad2:	04054263          	bltz	a0,3b16 <sharedfd+0x78>
-+    3ad6:	892a                	mv	s2,a0
-   pid = fork();
--    3b2c:	74d000ef          	jal	4a78 <fork>
--    3b30:	89aa                	mv	s3,a0
-+    3ad8:	72b000ef          	jal	4a02 <fork>
-+    3adc:	89aa                	mv	s3,a0
-   memset(buf, pid==0?'c':'p', sizeof(buf));
--    3b32:	07000593          	li	a1,112
--    3b36:	e119                	bnez	a0,3b3c <sharedfd+0x4a>
--    3b38:	06300593          	li	a1,99
--    3b3c:	4629                	li	a2,10
--    3b3e:	fa040513          	addi	a0,s0,-96
--    3b42:	559000ef          	jal	489a <memset>
--    3b46:	3e800493          	li	s1,1000
-+    3ade:	07000593          	li	a1,112
-+    3ae2:	e119                	bnez	a0,3ae8 <sharedfd+0x4a>
-+    3ae4:	06300593          	li	a1,99
-+    3ae8:	4629                	li	a2,10
-+    3aea:	fa040513          	add	a0,s0,-96
-+    3aee:	537000ef          	jal	4824 <memset>
-+    3af2:	3e800493          	li	s1,1000
-     if(write(fd, buf, sizeof(buf)) != sizeof(buf)){
--    3b4a:	4629                	li	a2,10
--    3b4c:	fa040593          	addi	a1,s0,-96
--    3b50:	854a                	mv	a0,s2
--    3b52:	74f000ef          	jal	4aa0 <write>
--    3b56:	47a9                	li	a5,10
--    3b58:	02f51963          	bne	a0,a5,3b8a <sharedfd+0x98>
-+    3af6:	4629                	li	a2,10
-+    3af8:	fa040593          	add	a1,s0,-96
-+    3afc:	854a                	mv	a0,s2
-+    3afe:	72d000ef          	jal	4a2a <write>
-+    3b02:	47a9                	li	a5,10
-+    3b04:	02f51363          	bne	a0,a5,3b2a <sharedfd+0x8c>
-   for(i = 0; i < N; i++){
--    3b5c:	34fd                	addiw	s1,s1,-1
--    3b5e:	f4f5                	bnez	s1,3b4a <sharedfd+0x58>
-+    3b08:	34fd                	addw	s1,s1,-1
-+    3b0a:	f4f5                	bnez	s1,3af6 <sharedfd+0x58>
-   if(pid == 0) {
--    3b60:	02099f63          	bnez	s3,3b9e <sharedfd+0xac>
-+    3b0c:	02099963          	bnez	s3,3b3e <sharedfd+0xa0>
-     exit(0);
--    3b64:	4501                	li	a0,0
--    3b66:	71b000ef          	jal	4a80 <exit>
--    3b6a:	eca6                	sd	s1,88(sp)
--    3b6c:	e8ca                	sd	s2,80(sp)
--    3b6e:	e4ce                	sd	s3,72(sp)
--    3b70:	fc56                	sd	s5,56(sp)
--    3b72:	f85a                	sd	s6,48(sp)
--    3b74:	f45e                	sd	s7,40(sp)
-+    3b10:	4501                	li	a0,0
-+    3b12:	6f9000ef          	jal	4a0a <exit>
-     printf("%s: cannot open sharedfd for writing", s);
--    3b76:	85d2                	mv	a1,s4
--    3b78:	00003517          	auipc	a0,0x3
--    3b7c:	07850513          	addi	a0,a0,120 # 6bf0 <malloc+0x1ca4>
--    3b80:	318010ef          	jal	4e98 <printf>
-+    3b16:	85d2                	mv	a1,s4
-+    3b18:	00003517          	auipc	a0,0x3
-+    3b1c:	04850513          	add	a0,a0,72 # 6b60 <malloc+0x1c88>
-+    3b20:	304010ef          	jal	4e24 <printf>
-     exit(1);
--    3b84:	4505                	li	a0,1
--    3b86:	6fb000ef          	jal	4a80 <exit>
-+    3b24:	4505                	li	a0,1
-+    3b26:	6e5000ef          	jal	4a0a <exit>
-       printf("%s: write sharedfd failed\n", s);
--    3b8a:	85d2                	mv	a1,s4
--    3b8c:	00003517          	auipc	a0,0x3
--    3b90:	08c50513          	addi	a0,a0,140 # 6c18 <malloc+0x1ccc>
--    3b94:	304010ef          	jal	4e98 <printf>
-+    3b2a:	85d2                	mv	a1,s4
-+    3b2c:	00003517          	auipc	a0,0x3
-+    3b30:	05c50513          	add	a0,a0,92 # 6b88 <malloc+0x1cb0>
-+    3b34:	2f0010ef          	jal	4e24 <printf>
-       exit(1);
--    3b98:	4505                	li	a0,1
--    3b9a:	6e7000ef          	jal	4a80 <exit>
-+    3b38:	4505                	li	a0,1
-+    3b3a:	6d1000ef          	jal	4a0a <exit>
-     wait(&xstatus);
--    3b9e:	f9c40513          	addi	a0,s0,-100
--    3ba2:	6e7000ef          	jal	4a88 <wait>
-+    3b3e:	f9c40513          	add	a0,s0,-100
-+    3b42:	6d1000ef          	jal	4a12 <wait>
-     if(xstatus != 0)
--    3ba6:	f9c42983          	lw	s3,-100(s0)
--    3baa:	00098563          	beqz	s3,3bb4 <sharedfd+0xc2>
-+    3b46:	f9c42983          	lw	s3,-100(s0)
-+    3b4a:	00098563          	beqz	s3,3b54 <sharedfd+0xb6>
-       exit(xstatus);
--    3bae:	854e                	mv	a0,s3
--    3bb0:	6d1000ef          	jal	4a80 <exit>
-+    3b4e:	854e                	mv	a0,s3
-+    3b50:	6bb000ef          	jal	4a0a <exit>
-   close(fd);
--    3bb4:	854a                	mv	a0,s2
--    3bb6:	6f3000ef          	jal	4aa8 <close>
-+    3b54:	854a                	mv	a0,s2
-+    3b56:	6dd000ef          	jal	4a32 <close>
-   fd = open("sharedfd", 0);
--    3bba:	4581                	li	a1,0
--    3bbc:	00003517          	auipc	a0,0x3
--    3bc0:	02450513          	addi	a0,a0,36 # 6be0 <malloc+0x1c94>
--    3bc4:	6fd000ef          	jal	4ac0 <open>
--    3bc8:	8baa                	mv	s7,a0
-+    3b5a:	4581                	li	a1,0
-+    3b5c:	00003517          	auipc	a0,0x3
-+    3b60:	ff450513          	add	a0,a0,-12 # 6b50 <malloc+0x1c78>
-+    3b64:	6e7000ef          	jal	4a4a <open>
-+    3b68:	8baa                	mv	s7,a0
-   nc = np = 0;
--    3bca:	8ace                	mv	s5,s3
-+    3b6a:	8ace                	mv	s5,s3
-   if(fd < 0){
--    3bcc:	02054363          	bltz	a0,3bf2 <sharedfd+0x100>
--    3bd0:	faa40913          	addi	s2,s0,-86
-+    3b6c:	02054363          	bltz	a0,3b92 <sharedfd+0xf4>
-+    3b70:	faa40913          	add	s2,s0,-86
-       if(buf[i] == 'c')
--    3bd4:	06300493          	li	s1,99
-+    3b74:	06300493          	li	s1,99
-       if(buf[i] == 'p')
--    3bd8:	07000b13          	li	s6,112
-+    3b78:	07000b13          	li	s6,112
-   while((n = read(fd, buf, sizeof(buf))) > 0){
--    3bdc:	4629                	li	a2,10
--    3bde:	fa040593          	addi	a1,s0,-96
--    3be2:	855e                	mv	a0,s7
--    3be4:	6b5000ef          	jal	4a98 <read>
--    3be8:	02a05b63          	blez	a0,3c1e <sharedfd+0x12c>
--    3bec:	fa040793          	addi	a5,s0,-96
--    3bf0:	a839                	j	3c0e <sharedfd+0x11c>
-+    3b7c:	4629                	li	a2,10
-+    3b7e:	fa040593          	add	a1,s0,-96
-+    3b82:	855e                	mv	a0,s7
-+    3b84:	69f000ef          	jal	4a22 <read>
-+    3b88:	02a05b63          	blez	a0,3bbe <sharedfd+0x120>
-+    3b8c:	fa040793          	add	a5,s0,-96
-+    3b90:	a839                	j	3bae <sharedfd+0x110>
-     printf("%s: cannot open sharedfd for reading\n", s);
--    3bf2:	85d2                	mv	a1,s4
--    3bf4:	00003517          	auipc	a0,0x3
--    3bf8:	04450513          	addi	a0,a0,68 # 6c38 <malloc+0x1cec>
--    3bfc:	29c010ef          	jal	4e98 <printf>
-+    3b92:	85d2                	mv	a1,s4
-+    3b94:	00003517          	auipc	a0,0x3
-+    3b98:	01450513          	add	a0,a0,20 # 6ba8 <malloc+0x1cd0>
-+    3b9c:	288010ef          	jal	4e24 <printf>
-     exit(1);
--    3c00:	4505                	li	a0,1
--    3c02:	67f000ef          	jal	4a80 <exit>
-+    3ba0:	4505                	li	a0,1
-+    3ba2:	669000ef          	jal	4a0a <exit>
-         nc++;
--    3c06:	2985                	addiw	s3,s3,1
-+    3ba6:	2985                	addw	s3,s3,1
-     for(i = 0; i < sizeof(buf); i++){
--    3c08:	0785                	addi	a5,a5,1
--    3c0a:	fd2789e3          	beq	a5,s2,3bdc <sharedfd+0xea>
-+    3ba8:	0785                	add	a5,a5,1
-+    3baa:	fd2789e3          	beq	a5,s2,3b7c <sharedfd+0xde>
-       if(buf[i] == 'c')
--    3c0e:	0007c703          	lbu	a4,0(a5)
--    3c12:	fe970ae3          	beq	a4,s1,3c06 <sharedfd+0x114>
-+    3bae:	0007c703          	lbu	a4,0(a5)
-+    3bb2:	fe970ae3          	beq	a4,s1,3ba6 <sharedfd+0x108>
-       if(buf[i] == 'p')
--    3c16:	ff6719e3          	bne	a4,s6,3c08 <sharedfd+0x116>
-+    3bb6:	ff6719e3          	bne	a4,s6,3ba8 <sharedfd+0x10a>
-         np++;
--    3c1a:	2a85                	addiw	s5,s5,1
--    3c1c:	b7f5                	j	3c08 <sharedfd+0x116>
-+    3bba:	2a85                	addw	s5,s5,1
-+    3bbc:	b7f5                	j	3ba8 <sharedfd+0x10a>
-   close(fd);
--    3c1e:	855e                	mv	a0,s7
--    3c20:	689000ef          	jal	4aa8 <close>
-+    3bbe:	855e                	mv	a0,s7
-+    3bc0:	673000ef          	jal	4a32 <close>
-   unlink("sharedfd");
--    3c24:	00003517          	auipc	a0,0x3
--    3c28:	fbc50513          	addi	a0,a0,-68 # 6be0 <malloc+0x1c94>
--    3c2c:	6a5000ef          	jal	4ad0 <unlink>
-+    3bc4:	00003517          	auipc	a0,0x3
-+    3bc8:	f8c50513          	add	a0,a0,-116 # 6b50 <malloc+0x1c78>
-+    3bcc:	68f000ef          	jal	4a5a <unlink>
-   if(nc == N*SZ && np == N*SZ){
--    3c30:	6789                	lui	a5,0x2
--    3c32:	71078793          	addi	a5,a5,1808 # 2710 <fourteen+0x7c>
--    3c36:	00f99763          	bne	s3,a5,3c44 <sharedfd+0x152>
--    3c3a:	6789                	lui	a5,0x2
--    3c3c:	71078793          	addi	a5,a5,1808 # 2710 <fourteen+0x7c>
--    3c40:	00fa8c63          	beq	s5,a5,3c58 <sharedfd+0x166>
-+    3bd0:	6789                	lui	a5,0x2
-+    3bd2:	71078793          	add	a5,a5,1808 # 2710 <fourteen+0xd0>
-+    3bd6:	00f99763          	bne	s3,a5,3be4 <sharedfd+0x146>
-+    3bda:	6789                	lui	a5,0x2
-+    3bdc:	71078793          	add	a5,a5,1808 # 2710 <fourteen+0xd0>
-+    3be0:	00fa8c63          	beq	s5,a5,3bf8 <sharedfd+0x15a>
-     printf("%s: nc/np test fails\n", s);
--    3c44:	85d2                	mv	a1,s4
--    3c46:	00003517          	auipc	a0,0x3
--    3c4a:	01a50513          	addi	a0,a0,26 # 6c60 <malloc+0x1d14>
--    3c4e:	24a010ef          	jal	4e98 <printf>
-+    3be4:	85d2                	mv	a1,s4
-+    3be6:	00003517          	auipc	a0,0x3
-+    3bea:	fea50513          	add	a0,a0,-22 # 6bd0 <malloc+0x1cf8>
-+    3bee:	236010ef          	jal	4e24 <printf>
-     exit(1);
--    3c52:	4505                	li	a0,1
--    3c54:	62d000ef          	jal	4a80 <exit>
-+    3bf2:	4505                	li	a0,1
-+    3bf4:	617000ef          	jal	4a0a <exit>
-     exit(0);
--    3c58:	4501                	li	a0,0
--    3c5a:	627000ef          	jal	4a80 <exit>
-+    3bf8:	4501                	li	a0,0
-+    3bfa:	611000ef          	jal	4a0a <exit>
- 
--0000000000003c5e <fourfiles>:
-+0000000000003bfe <fourfiles>:
- {
--    3c5e:	7135                	addi	sp,sp,-160
--    3c60:	ed06                	sd	ra,152(sp)
--    3c62:	e922                	sd	s0,144(sp)
--    3c64:	e526                	sd	s1,136(sp)
--    3c66:	e14a                	sd	s2,128(sp)
--    3c68:	fcce                	sd	s3,120(sp)
--    3c6a:	f8d2                	sd	s4,112(sp)
--    3c6c:	f4d6                	sd	s5,104(sp)
--    3c6e:	f0da                	sd	s6,96(sp)
--    3c70:	ecde                	sd	s7,88(sp)
--    3c72:	e8e2                	sd	s8,80(sp)
--    3c74:	e4e6                	sd	s9,72(sp)
--    3c76:	e0ea                	sd	s10,64(sp)
--    3c78:	fc6e                	sd	s11,56(sp)
--    3c7a:	1100                	addi	s0,sp,160
--    3c7c:	8caa                	mv	s9,a0
-+    3bfe:	7135                	add	sp,sp,-160
-+    3c00:	ed06                	sd	ra,152(sp)
-+    3c02:	e922                	sd	s0,144(sp)
-+    3c04:	e526                	sd	s1,136(sp)
-+    3c06:	e14a                	sd	s2,128(sp)
-+    3c08:	fcce                	sd	s3,120(sp)
-+    3c0a:	f8d2                	sd	s4,112(sp)
-+    3c0c:	f4d6                	sd	s5,104(sp)
-+    3c0e:	f0da                	sd	s6,96(sp)
-+    3c10:	ecde                	sd	s7,88(sp)
-+    3c12:	e8e2                	sd	s8,80(sp)
-+    3c14:	e4e6                	sd	s9,72(sp)
-+    3c16:	e0ea                	sd	s10,64(sp)
-+    3c18:	fc6e                	sd	s11,56(sp)
-+    3c1a:	1100                	add	s0,sp,160
-+    3c1c:	8caa                	mv	s9,a0
-   char *names[] = { "f0", "f1", "f2", "f3" };
--    3c7e:	00003797          	auipc	a5,0x3
--    3c82:	ffa78793          	addi	a5,a5,-6 # 6c78 <malloc+0x1d2c>
--    3c86:	f6f43823          	sd	a5,-144(s0)
--    3c8a:	00003797          	auipc	a5,0x3
--    3c8e:	ff678793          	addi	a5,a5,-10 # 6c80 <malloc+0x1d34>
--    3c92:	f6f43c23          	sd	a5,-136(s0)
--    3c96:	00003797          	auipc	a5,0x3
--    3c9a:	ff278793          	addi	a5,a5,-14 # 6c88 <malloc+0x1d3c>
--    3c9e:	f8f43023          	sd	a5,-128(s0)
--    3ca2:	00003797          	auipc	a5,0x3
--    3ca6:	fee78793          	addi	a5,a5,-18 # 6c90 <malloc+0x1d44>
--    3caa:	f8f43423          	sd	a5,-120(s0)
-+    3c1e:	00003797          	auipc	a5,0x3
-+    3c22:	fca78793          	add	a5,a5,-54 # 6be8 <malloc+0x1d10>
-+    3c26:	f6f43823          	sd	a5,-144(s0)
-+    3c2a:	00003797          	auipc	a5,0x3
-+    3c2e:	fc678793          	add	a5,a5,-58 # 6bf0 <malloc+0x1d18>
-+    3c32:	f6f43c23          	sd	a5,-136(s0)
-+    3c36:	00003797          	auipc	a5,0x3
-+    3c3a:	fc278793          	add	a5,a5,-62 # 6bf8 <malloc+0x1d20>
-+    3c3e:	f8f43023          	sd	a5,-128(s0)
-+    3c42:	00003797          	auipc	a5,0x3
-+    3c46:	fbe78793          	add	a5,a5,-66 # 6c00 <malloc+0x1d28>
-+    3c4a:	f8f43423          	sd	a5,-120(s0)
-   for(pi = 0; pi < NCHILD; pi++){
--    3cae:	f7040b93          	addi	s7,s0,-144
-+    3c4e:	f7040b93          	add	s7,s0,-144
-   char *names[] = { "f0", "f1", "f2", "f3" };
--    3cb2:	895e                	mv	s2,s7
-+    3c52:	895e                	mv	s2,s7
-   for(pi = 0; pi < NCHILD; pi++){
--    3cb4:	4481                	li	s1,0
--    3cb6:	4a11                	li	s4,4
-+    3c54:	4481                	li	s1,0
-+    3c56:	4a11                	li	s4,4
-     fname = names[pi];
--    3cb8:	00093983          	ld	s3,0(s2)
-+    3c58:	00093983          	ld	s3,0(s2)
-     unlink(fname);
--    3cbc:	854e                	mv	a0,s3
--    3cbe:	613000ef          	jal	4ad0 <unlink>
-+    3c5c:	854e                	mv	a0,s3
-+    3c5e:	5fd000ef          	jal	4a5a <unlink>
-     pid = fork();
--    3cc2:	5b7000ef          	jal	4a78 <fork>
-+    3c62:	5a1000ef          	jal	4a02 <fork>
-     if(pid < 0){
--    3cc6:	02054e63          	bltz	a0,3d02 <fourfiles+0xa4>
-+    3c66:	02054e63          	bltz	a0,3ca2 <fourfiles+0xa4>
-     if(pid == 0){
--    3cca:	c531                	beqz	a0,3d16 <fourfiles+0xb8>
-+    3c6a:	c531                	beqz	a0,3cb6 <fourfiles+0xb8>
-   for(pi = 0; pi < NCHILD; pi++){
--    3ccc:	2485                	addiw	s1,s1,1
--    3cce:	0921                	addi	s2,s2,8
--    3cd0:	ff4494e3          	bne	s1,s4,3cb8 <fourfiles+0x5a>
--    3cd4:	4491                	li	s1,4
-+    3c6c:	2485                	addw	s1,s1,1
-+    3c6e:	0921                	add	s2,s2,8
-+    3c70:	ff4494e3          	bne	s1,s4,3c58 <fourfiles+0x5a>
-+    3c74:	4491                	li	s1,4
-     wait(&xstatus);
--    3cd6:	f6c40513          	addi	a0,s0,-148
--    3cda:	5af000ef          	jal	4a88 <wait>
-+    3c76:	f6c40513          	add	a0,s0,-148
-+    3c7a:	599000ef          	jal	4a12 <wait>
-     if(xstatus != 0)
--    3cde:	f6c42a83          	lw	s5,-148(s0)
--    3ce2:	0a0a9463          	bnez	s5,3d8a <fourfiles+0x12c>
-+    3c7e:	f6c42a83          	lw	s5,-148(s0)
-+    3c82:	0a0a9463          	bnez	s5,3d2a <fourfiles+0x12c>
-   for(pi = 0; pi < NCHILD; pi++){
--    3ce6:	34fd                	addiw	s1,s1,-1
--    3ce8:	f4fd                	bnez	s1,3cd6 <fourfiles+0x78>
--    3cea:	03000b13          	li	s6,48
-+    3c86:	34fd                	addw	s1,s1,-1
-+    3c88:	f4fd                	bnez	s1,3c76 <fourfiles+0x78>
-+    3c8a:	03000b13          	li	s6,48
-     while((n = read(fd, buf, sizeof(buf))) > 0){
--    3cee:	00009a17          	auipc	s4,0x9
--    3cf2:	f8aa0a13          	addi	s4,s4,-118 # cc78 <buf>
-+    3c8e:	00008a17          	auipc	s4,0x8
-+    3c92:	feaa0a13          	add	s4,s4,-22 # bc78 <buf>
-     if(total != N*SZ){
--    3cf6:	6d05                	lui	s10,0x1
--    3cf8:	770d0d13          	addi	s10,s10,1904 # 1770 <forkfork+0x1e>
-+    3c96:	6d05                	lui	s10,0x1
-+    3c98:	770d0d13          	add	s10,s10,1904 # 1770 <forkfork+0x4c>
-   for(i = 0; i < NCHILD; i++){
--    3cfc:	03400d93          	li	s11,52
--    3d00:	a0ed                	j	3dea <fourfiles+0x18c>
-+    3c9c:	03400d93          	li	s11,52
-+    3ca0:	a0ed                	j	3d8a <fourfiles+0x18c>
-       printf("%s: fork failed\n", s);
--    3d02:	85e6                	mv	a1,s9
--    3d04:	00002517          	auipc	a0,0x2
--    3d08:	c1450513          	addi	a0,a0,-1004 # 5918 <malloc+0x9cc>
--    3d0c:	18c010ef          	jal	4e98 <printf>
-+    3ca2:	85e6                	mv	a1,s9
-+    3ca4:	00002517          	auipc	a0,0x2
-+    3ca8:	be450513          	add	a0,a0,-1052 # 5888 <malloc+0x9b0>
-+    3cac:	178010ef          	jal	4e24 <printf>
-       exit(1);
--    3d10:	4505                	li	a0,1
--    3d12:	56f000ef          	jal	4a80 <exit>
-+    3cb0:	4505                	li	a0,1
-+    3cb2:	559000ef          	jal	4a0a <exit>
-       fd = open(fname, O_CREATE | O_RDWR);
--    3d16:	20200593          	li	a1,514
--    3d1a:	854e                	mv	a0,s3
--    3d1c:	5a5000ef          	jal	4ac0 <open>
--    3d20:	892a                	mv	s2,a0
-+    3cb6:	20200593          	li	a1,514
-+    3cba:	854e                	mv	a0,s3
-+    3cbc:	58f000ef          	jal	4a4a <open>
-+    3cc0:	892a                	mv	s2,a0
-       if(fd < 0){
--    3d22:	04054163          	bltz	a0,3d64 <fourfiles+0x106>
-+    3cc2:	04054163          	bltz	a0,3d04 <fourfiles+0x106>
-       memset(buf, '0'+pi, SZ);
--    3d26:	1f400613          	li	a2,500
--    3d2a:	0304859b          	addiw	a1,s1,48
--    3d2e:	00009517          	auipc	a0,0x9
--    3d32:	f4a50513          	addi	a0,a0,-182 # cc78 <buf>
--    3d36:	365000ef          	jal	489a <memset>
--    3d3a:	44b1                	li	s1,12
-+    3cc6:	1f400613          	li	a2,500
-+    3cca:	0304859b          	addw	a1,s1,48
-+    3cce:	00008517          	auipc	a0,0x8
-+    3cd2:	faa50513          	add	a0,a0,-86 # bc78 <buf>
-+    3cd6:	34f000ef          	jal	4824 <memset>
-+    3cda:	44b1                	li	s1,12
-         if((n = write(fd, buf, SZ)) != SZ){
--    3d3c:	00009997          	auipc	s3,0x9
--    3d40:	f3c98993          	addi	s3,s3,-196 # cc78 <buf>
--    3d44:	1f400613          	li	a2,500
--    3d48:	85ce                	mv	a1,s3
--    3d4a:	854a                	mv	a0,s2
--    3d4c:	555000ef          	jal	4aa0 <write>
--    3d50:	85aa                	mv	a1,a0
--    3d52:	1f400793          	li	a5,500
--    3d56:	02f51163          	bne	a0,a5,3d78 <fourfiles+0x11a>
-+    3cdc:	00008997          	auipc	s3,0x8
-+    3ce0:	f9c98993          	add	s3,s3,-100 # bc78 <buf>
-+    3ce4:	1f400613          	li	a2,500
-+    3ce8:	85ce                	mv	a1,s3
-+    3cea:	854a                	mv	a0,s2
-+    3cec:	53f000ef          	jal	4a2a <write>
-+    3cf0:	85aa                	mv	a1,a0
-+    3cf2:	1f400793          	li	a5,500
-+    3cf6:	02f51163          	bne	a0,a5,3d18 <fourfiles+0x11a>
-       for(i = 0; i < N; i++){
--    3d5a:	34fd                	addiw	s1,s1,-1
--    3d5c:	f4e5                	bnez	s1,3d44 <fourfiles+0xe6>
-+    3cfa:	34fd                	addw	s1,s1,-1
-+    3cfc:	f4e5                	bnez	s1,3ce4 <fourfiles+0xe6>
-       exit(0);
--    3d5e:	4501                	li	a0,0
--    3d60:	521000ef          	jal	4a80 <exit>
-+    3cfe:	4501                	li	a0,0
-+    3d00:	50b000ef          	jal	4a0a <exit>
-         printf("%s: create failed\n", s);
--    3d64:	85e6                	mv	a1,s9
--    3d66:	00002517          	auipc	a0,0x2
--    3d6a:	c4a50513          	addi	a0,a0,-950 # 59b0 <malloc+0xa64>
--    3d6e:	12a010ef          	jal	4e98 <printf>
-+    3d04:	85e6                	mv	a1,s9
-+    3d06:	00002517          	auipc	a0,0x2
-+    3d0a:	c1a50513          	add	a0,a0,-998 # 5920 <malloc+0xa48>
-+    3d0e:	116010ef          	jal	4e24 <printf>
-         exit(1);
--    3d72:	4505                	li	a0,1
--    3d74:	50d000ef          	jal	4a80 <exit>
-+    3d12:	4505                	li	a0,1
-+    3d14:	4f7000ef          	jal	4a0a <exit>
-           printf("write failed %d\n", n);
--    3d78:	00003517          	auipc	a0,0x3
--    3d7c:	f2050513          	addi	a0,a0,-224 # 6c98 <malloc+0x1d4c>
--    3d80:	118010ef          	jal	4e98 <printf>
-+    3d18:	00003517          	auipc	a0,0x3
-+    3d1c:	ef050513          	add	a0,a0,-272 # 6c08 <malloc+0x1d30>
-+    3d20:	104010ef          	jal	4e24 <printf>
-           exit(1);
--    3d84:	4505                	li	a0,1
--    3d86:	4fb000ef          	jal	4a80 <exit>
-+    3d24:	4505                	li	a0,1
-+    3d26:	4e5000ef          	jal	4a0a <exit>
-       exit(xstatus);
--    3d8a:	8556                	mv	a0,s5
--    3d8c:	4f5000ef          	jal	4a80 <exit>
-+    3d2a:	8556                	mv	a0,s5
-+    3d2c:	4df000ef          	jal	4a0a <exit>
-           printf("%s: wrong char\n", s);
--    3d90:	85e6                	mv	a1,s9
--    3d92:	00003517          	auipc	a0,0x3
--    3d96:	f1e50513          	addi	a0,a0,-226 # 6cb0 <malloc+0x1d64>
--    3d9a:	0fe010ef          	jal	4e98 <printf>
-+    3d30:	85e6                	mv	a1,s9
-+    3d32:	00003517          	auipc	a0,0x3
-+    3d36:	eee50513          	add	a0,a0,-274 # 6c20 <malloc+0x1d48>
-+    3d3a:	0ea010ef          	jal	4e24 <printf>
-           exit(1);
--    3d9e:	4505                	li	a0,1
--    3da0:	4e1000ef          	jal	4a80 <exit>
-+    3d3e:	4505                	li	a0,1
-+    3d40:	4cb000ef          	jal	4a0a <exit>
-       total += n;
--    3da4:	00a9093b          	addw	s2,s2,a0
-+    3d44:	00a9093b          	addw	s2,s2,a0
-     while((n = read(fd, buf, sizeof(buf))) > 0){
--    3da8:	660d                	lui	a2,0x3
--    3daa:	85d2                	mv	a1,s4
--    3dac:	854e                	mv	a0,s3
--    3dae:	4eb000ef          	jal	4a98 <read>
--    3db2:	02a05063          	blez	a0,3dd2 <fourfiles+0x174>
--    3db6:	00009797          	auipc	a5,0x9
--    3dba:	ec278793          	addi	a5,a5,-318 # cc78 <buf>
--    3dbe:	00f506b3          	add	a3,a0,a5
-+    3d48:	660d                	lui	a2,0x3
-+    3d4a:	85d2                	mv	a1,s4
-+    3d4c:	854e                	mv	a0,s3
-+    3d4e:	4d5000ef          	jal	4a22 <read>
-+    3d52:	02a05063          	blez	a0,3d72 <fourfiles+0x174>
-+    3d56:	00008797          	auipc	a5,0x8
-+    3d5a:	f2278793          	add	a5,a5,-222 # bc78 <buf>
-+    3d5e:	00f506b3          	add	a3,a0,a5
-         if(buf[j] != '0'+i){
--    3dc2:	0007c703          	lbu	a4,0(a5)
--    3dc6:	fc9715e3          	bne	a4,s1,3d90 <fourfiles+0x132>
-+    3d62:	0007c703          	lbu	a4,0(a5)
-+    3d66:	fc9715e3          	bne	a4,s1,3d30 <fourfiles+0x132>
-       for(j = 0; j < n; j++){
--    3dca:	0785                	addi	a5,a5,1
--    3dcc:	fed79be3          	bne	a5,a3,3dc2 <fourfiles+0x164>
--    3dd0:	bfd1                	j	3da4 <fourfiles+0x146>
-+    3d6a:	0785                	add	a5,a5,1
-+    3d6c:	fed79be3          	bne	a5,a3,3d62 <fourfiles+0x164>
-+    3d70:	bfd1                	j	3d44 <fourfiles+0x146>
-     close(fd);
--    3dd2:	854e                	mv	a0,s3
--    3dd4:	4d5000ef          	jal	4aa8 <close>
-+    3d72:	854e                	mv	a0,s3
-+    3d74:	4bf000ef          	jal	4a32 <close>
-     if(total != N*SZ){
--    3dd8:	03a91463          	bne	s2,s10,3e00 <fourfiles+0x1a2>
-+    3d78:	03a91463          	bne	s2,s10,3da0 <fourfiles+0x1a2>
-     unlink(fname);
--    3ddc:	8562                	mv	a0,s8
--    3dde:	4f3000ef          	jal	4ad0 <unlink>
-+    3d7c:	8562                	mv	a0,s8
-+    3d7e:	4dd000ef          	jal	4a5a <unlink>
-   for(i = 0; i < NCHILD; i++){
--    3de2:	0ba1                	addi	s7,s7,8
--    3de4:	2b05                	addiw	s6,s6,1
--    3de6:	03bb0763          	beq	s6,s11,3e14 <fourfiles+0x1b6>
-+    3d82:	0ba1                	add	s7,s7,8
-+    3d84:	2b05                	addw	s6,s6,1
-+    3d86:	03bb0763          	beq	s6,s11,3db4 <fourfiles+0x1b6>
-     fname = names[i];
--    3dea:	000bbc03          	ld	s8,0(s7)
-+    3d8a:	000bbc03          	ld	s8,0(s7)
-     fd = open(fname, 0);
--    3dee:	4581                	li	a1,0
--    3df0:	8562                	mv	a0,s8
--    3df2:	4cf000ef          	jal	4ac0 <open>
--    3df6:	89aa                	mv	s3,a0
-+    3d8e:	4581                	li	a1,0
-+    3d90:	8562                	mv	a0,s8
-+    3d92:	4b9000ef          	jal	4a4a <open>
-+    3d96:	89aa                	mv	s3,a0
-     total = 0;
--    3df8:	8956                	mv	s2,s5
-+    3d98:	8956                	mv	s2,s5
-         if(buf[j] != '0'+i){
--    3dfa:	000b049b          	sext.w	s1,s6
-+    3d9a:	000b049b          	sext.w	s1,s6
-     while((n = read(fd, buf, sizeof(buf))) > 0){
--    3dfe:	b76d                	j	3da8 <fourfiles+0x14a>
-+    3d9e:	b76d                	j	3d48 <fourfiles+0x14a>
-       printf("wrong length %d\n", total);
--    3e00:	85ca                	mv	a1,s2
--    3e02:	00003517          	auipc	a0,0x3
--    3e06:	ebe50513          	addi	a0,a0,-322 # 6cc0 <malloc+0x1d74>
--    3e0a:	08e010ef          	jal	4e98 <printf>
-+    3da0:	85ca                	mv	a1,s2
-+    3da2:	00003517          	auipc	a0,0x3
-+    3da6:	e8e50513          	add	a0,a0,-370 # 6c30 <malloc+0x1d58>
-+    3daa:	07a010ef          	jal	4e24 <printf>
-       exit(1);
--    3e0e:	4505                	li	a0,1
--    3e10:	471000ef          	jal	4a80 <exit>
-+    3dae:	4505                	li	a0,1
-+    3db0:	45b000ef          	jal	4a0a <exit>
- }
--    3e14:	60ea                	ld	ra,152(sp)
--    3e16:	644a                	ld	s0,144(sp)
--    3e18:	64aa                	ld	s1,136(sp)
--    3e1a:	690a                	ld	s2,128(sp)
--    3e1c:	79e6                	ld	s3,120(sp)
--    3e1e:	7a46                	ld	s4,112(sp)
--    3e20:	7aa6                	ld	s5,104(sp)
--    3e22:	7b06                	ld	s6,96(sp)
--    3e24:	6be6                	ld	s7,88(sp)
--    3e26:	6c46                	ld	s8,80(sp)
--    3e28:	6ca6                	ld	s9,72(sp)
--    3e2a:	6d06                	ld	s10,64(sp)
--    3e2c:	7de2                	ld	s11,56(sp)
--    3e2e:	610d                	addi	sp,sp,160
--    3e30:	8082                	ret
--
--0000000000003e32 <concreate>:
-+    3db4:	60ea                	ld	ra,152(sp)
-+    3db6:	644a                	ld	s0,144(sp)
-+    3db8:	64aa                	ld	s1,136(sp)
-+    3dba:	690a                	ld	s2,128(sp)
-+    3dbc:	79e6                	ld	s3,120(sp)
-+    3dbe:	7a46                	ld	s4,112(sp)
-+    3dc0:	7aa6                	ld	s5,104(sp)
-+    3dc2:	7b06                	ld	s6,96(sp)
-+    3dc4:	6be6                	ld	s7,88(sp)
-+    3dc6:	6c46                	ld	s8,80(sp)
-+    3dc8:	6ca6                	ld	s9,72(sp)
-+    3dca:	6d06                	ld	s10,64(sp)
-+    3dcc:	7de2                	ld	s11,56(sp)
-+    3dce:	610d                	add	sp,sp,160
-+    3dd0:	8082                	ret
-+
-+0000000000003dd2 <concreate>:
- {
--    3e32:	7135                	addi	sp,sp,-160
--    3e34:	ed06                	sd	ra,152(sp)
--    3e36:	e922                	sd	s0,144(sp)
--    3e38:	e526                	sd	s1,136(sp)
--    3e3a:	e14a                	sd	s2,128(sp)
--    3e3c:	fcce                	sd	s3,120(sp)
--    3e3e:	f8d2                	sd	s4,112(sp)
--    3e40:	f4d6                	sd	s5,104(sp)
--    3e42:	f0da                	sd	s6,96(sp)
--    3e44:	ecde                	sd	s7,88(sp)
--    3e46:	1100                	addi	s0,sp,160
--    3e48:	89aa                	mv	s3,a0
-+    3dd2:	7135                	add	sp,sp,-160
-+    3dd4:	ed06                	sd	ra,152(sp)
-+    3dd6:	e922                	sd	s0,144(sp)
-+    3dd8:	e526                	sd	s1,136(sp)
-+    3dda:	e14a                	sd	s2,128(sp)
-+    3ddc:	fcce                	sd	s3,120(sp)
-+    3dde:	f8d2                	sd	s4,112(sp)
-+    3de0:	f4d6                	sd	s5,104(sp)
-+    3de2:	f0da                	sd	s6,96(sp)
-+    3de4:	ecde                	sd	s7,88(sp)
-+    3de6:	1100                	add	s0,sp,160
-+    3de8:	89aa                	mv	s3,a0
-   file[0] = 'C';
--    3e4a:	04300793          	li	a5,67
--    3e4e:	faf40423          	sb	a5,-88(s0)
-+    3dea:	04300793          	li	a5,67
-+    3dee:	faf40423          	sb	a5,-88(s0)
-   file[2] = '\0';
--    3e52:	fa040523          	sb	zero,-86(s0)
-+    3df2:	fa040523          	sb	zero,-86(s0)
-   for(i = 0; i < N; i++){
--    3e56:	4901                	li	s2,0
-+    3df6:	4901                	li	s2,0
-     if(pid && (i % 3) == 1){
--    3e58:	4b0d                	li	s6,3
--    3e5a:	4a85                	li	s5,1
-+    3df8:	4b0d                	li	s6,3
-+    3dfa:	4a85                	li	s5,1
-       link("C0", file);
--    3e5c:	00003b97          	auipc	s7,0x3
--    3e60:	e7cb8b93          	addi	s7,s7,-388 # 6cd8 <malloc+0x1d8c>
-+    3dfc:	00003b97          	auipc	s7,0x3
-+    3e00:	e4cb8b93          	add	s7,s7,-436 # 6c48 <malloc+0x1d70>
-   for(i = 0; i < N; i++){
--    3e64:	02800a13          	li	s4,40
--    3e68:	a41d                	j	408e <concreate+0x25c>
-+    3e04:	02800a13          	li	s4,40
-+    3e08:	a41d                	j	402e <concreate+0x25c>
-       link("C0", file);
--    3e6a:	fa840593          	addi	a1,s0,-88
--    3e6e:	855e                	mv	a0,s7
--    3e70:	471000ef          	jal	4ae0 <link>
-+    3e0a:	fa840593          	add	a1,s0,-88
-+    3e0e:	855e                	mv	a0,s7
-+    3e10:	45b000ef          	jal	4a6a <link>
-     if(pid == 0) {
--    3e74:	a411                	j	4078 <concreate+0x246>
-+    3e14:	a411                	j	4018 <concreate+0x246>
-     } else if(pid == 0 && (i % 5) == 1){
--    3e76:	4795                	li	a5,5
--    3e78:	02f9693b          	remw	s2,s2,a5
--    3e7c:	4785                	li	a5,1
--    3e7e:	02f90563          	beq	s2,a5,3ea8 <concreate+0x76>
-+    3e16:	4795                	li	a5,5
-+    3e18:	02f9693b          	remw	s2,s2,a5
-+    3e1c:	4785                	li	a5,1
-+    3e1e:	02f90563          	beq	s2,a5,3e48 <concreate+0x76>
-       fd = open(file, O_CREATE | O_RDWR);
--    3e82:	20200593          	li	a1,514
--    3e86:	fa840513          	addi	a0,s0,-88
--    3e8a:	437000ef          	jal	4ac0 <open>
-+    3e22:	20200593          	li	a1,514
-+    3e26:	fa840513          	add	a0,s0,-88
-+    3e2a:	421000ef          	jal	4a4a <open>
-       if(fd < 0){
--    3e8e:	1e055063          	bgez	a0,406e <concreate+0x23c>
-+    3e2e:	1e055063          	bgez	a0,400e <concreate+0x23c>
-         printf("concreate create %s failed\n", file);
--    3e92:	fa840593          	addi	a1,s0,-88
--    3e96:	00003517          	auipc	a0,0x3
--    3e9a:	e4a50513          	addi	a0,a0,-438 # 6ce0 <malloc+0x1d94>
--    3e9e:	7fb000ef          	jal	4e98 <printf>
-+    3e32:	fa840593          	add	a1,s0,-88
-+    3e36:	00003517          	auipc	a0,0x3
-+    3e3a:	e1a50513          	add	a0,a0,-486 # 6c50 <malloc+0x1d78>
-+    3e3e:	7e7000ef          	jal	4e24 <printf>
-         exit(1);
--    3ea2:	4505                	li	a0,1
--    3ea4:	3dd000ef          	jal	4a80 <exit>
-+    3e42:	4505                	li	a0,1
-+    3e44:	3c7000ef          	jal	4a0a <exit>
-       link("C0", file);
--    3ea8:	fa840593          	addi	a1,s0,-88
--    3eac:	00003517          	auipc	a0,0x3
--    3eb0:	e2c50513          	addi	a0,a0,-468 # 6cd8 <malloc+0x1d8c>
--    3eb4:	42d000ef          	jal	4ae0 <link>
-+    3e48:	fa840593          	add	a1,s0,-88
-+    3e4c:	00003517          	auipc	a0,0x3
-+    3e50:	dfc50513          	add	a0,a0,-516 # 6c48 <malloc+0x1d70>
-+    3e54:	417000ef          	jal	4a6a <link>
-       exit(0);
--    3eb8:	4501                	li	a0,0
--    3eba:	3c7000ef          	jal	4a80 <exit>
-+    3e58:	4501                	li	a0,0
-+    3e5a:	3b1000ef          	jal	4a0a <exit>
-         exit(1);
--    3ebe:	4505                	li	a0,1
--    3ec0:	3c1000ef          	jal	4a80 <exit>
-+    3e5e:	4505                	li	a0,1
-+    3e60:	3ab000ef          	jal	4a0a <exit>
-   memset(fa, 0, sizeof(fa));
--    3ec4:	02800613          	li	a2,40
--    3ec8:	4581                	li	a1,0
--    3eca:	f8040513          	addi	a0,s0,-128
--    3ece:	1cd000ef          	jal	489a <memset>
-+    3e64:	02800613          	li	a2,40
-+    3e68:	4581                	li	a1,0
-+    3e6a:	f8040513          	add	a0,s0,-128
-+    3e6e:	1b7000ef          	jal	4824 <memset>
-   fd = open(".", 0);
--    3ed2:	4581                	li	a1,0
--    3ed4:	00002517          	auipc	a0,0x2
--    3ed8:	89c50513          	addi	a0,a0,-1892 # 5770 <malloc+0x824>
--    3edc:	3e5000ef          	jal	4ac0 <open>
--    3ee0:	892a                	mv	s2,a0
-+    3e72:	4581                	li	a1,0
-+    3e74:	00002517          	auipc	a0,0x2
-+    3e78:	86c50513          	add	a0,a0,-1940 # 56e0 <malloc+0x808>
-+    3e7c:	3cf000ef          	jal	4a4a <open>
-+    3e80:	892a                	mv	s2,a0
-   n = 0;
--    3ee2:	8aa6                	mv	s5,s1
-+    3e82:	8aa6                	mv	s5,s1
-     if(de.name[0] == 'C' && de.name[2] == '\0'){
--    3ee4:	04300a13          	li	s4,67
-+    3e84:	04300a13          	li	s4,67
-       if(i < 0 || i >= sizeof(fa)){
--    3ee8:	02700b13          	li	s6,39
-+    3e88:	02700b13          	li	s6,39
-       fa[i] = 1;
--    3eec:	4b85                	li	s7,1
-+    3e8c:	4b85                	li	s7,1
-   while(read(fd, &de, sizeof(de)) > 0){
--    3eee:	4641                	li	a2,16
--    3ef0:	f7040593          	addi	a1,s0,-144
--    3ef4:	854a                	mv	a0,s2
--    3ef6:	3a3000ef          	jal	4a98 <read>
--    3efa:	06a05a63          	blez	a0,3f6e <concreate+0x13c>
-+    3e8e:	4641                	li	a2,16
-+    3e90:	f7040593          	add	a1,s0,-144
-+    3e94:	854a                	mv	a0,s2
-+    3e96:	38d000ef          	jal	4a22 <read>
-+    3e9a:	06a05a63          	blez	a0,3f0e <concreate+0x13c>
-     if(de.inum == 0)
--    3efe:	f7045783          	lhu	a5,-144(s0)
--    3f02:	d7f5                	beqz	a5,3eee <concreate+0xbc>
-+    3e9e:	f7045783          	lhu	a5,-144(s0)
-+    3ea2:	d7f5                	beqz	a5,3e8e <concreate+0xbc>
-     if(de.name[0] == 'C' && de.name[2] == '\0'){
--    3f04:	f7244783          	lbu	a5,-142(s0)
--    3f08:	ff4793e3          	bne	a5,s4,3eee <concreate+0xbc>
--    3f0c:	f7444783          	lbu	a5,-140(s0)
--    3f10:	fff9                	bnez	a5,3eee <concreate+0xbc>
-+    3ea4:	f7244783          	lbu	a5,-142(s0)
-+    3ea8:	ff4793e3          	bne	a5,s4,3e8e <concreate+0xbc>
-+    3eac:	f7444783          	lbu	a5,-140(s0)
-+    3eb0:	fff9                	bnez	a5,3e8e <concreate+0xbc>
-       i = de.name[1] - '0';
--    3f12:	f7344783          	lbu	a5,-141(s0)
--    3f16:	fd07879b          	addiw	a5,a5,-48
--    3f1a:	0007871b          	sext.w	a4,a5
-+    3eb2:	f7344783          	lbu	a5,-141(s0)
-+    3eb6:	fd07879b          	addw	a5,a5,-48
-+    3eba:	0007871b          	sext.w	a4,a5
-       if(i < 0 || i >= sizeof(fa)){
--    3f1e:	02eb6063          	bltu	s6,a4,3f3e <concreate+0x10c>
-+    3ebe:	02eb6063          	bltu	s6,a4,3ede <concreate+0x10c>
-       if(fa[i]){
--    3f22:	fb070793          	addi	a5,a4,-80 # fb0 <bigdir+0x112>
--    3f26:	97a2                	add	a5,a5,s0
--    3f28:	fd07c783          	lbu	a5,-48(a5)
--    3f2c:	e78d                	bnez	a5,3f56 <concreate+0x124>
-+    3ec2:	fb070793          	add	a5,a4,-80 # fb0 <bigdir+0x112>
-+    3ec6:	97a2                	add	a5,a5,s0
-+    3ec8:	fd07c783          	lbu	a5,-48(a5)
-+    3ecc:	e78d                	bnez	a5,3ef6 <concreate+0x124>
-       fa[i] = 1;
--    3f2e:	fb070793          	addi	a5,a4,-80
--    3f32:	00878733          	add	a4,a5,s0
--    3f36:	fd770823          	sb	s7,-48(a4)
-+    3ece:	fb070793          	add	a5,a4,-80
-+    3ed2:	00878733          	add	a4,a5,s0
-+    3ed6:	fd770823          	sb	s7,-48(a4)
-       n++;
--    3f3a:	2a85                	addiw	s5,s5,1
--    3f3c:	bf4d                	j	3eee <concreate+0xbc>
-+    3eda:	2a85                	addw	s5,s5,1
-+    3edc:	bf4d                	j	3e8e <concreate+0xbc>
-         printf("%s: concreate weird file %s\n", s, de.name);
--    3f3e:	f7240613          	addi	a2,s0,-142
--    3f42:	85ce                	mv	a1,s3
--    3f44:	00003517          	auipc	a0,0x3
--    3f48:	dbc50513          	addi	a0,a0,-580 # 6d00 <malloc+0x1db4>
--    3f4c:	74d000ef          	jal	4e98 <printf>
-+    3ede:	f7240613          	add	a2,s0,-142
-+    3ee2:	85ce                	mv	a1,s3
-+    3ee4:	00003517          	auipc	a0,0x3
-+    3ee8:	d8c50513          	add	a0,a0,-628 # 6c70 <malloc+0x1d98>
-+    3eec:	739000ef          	jal	4e24 <printf>
-         exit(1);
--    3f50:	4505                	li	a0,1
--    3f52:	32f000ef          	jal	4a80 <exit>
-+    3ef0:	4505                	li	a0,1
-+    3ef2:	319000ef          	jal	4a0a <exit>
-         printf("%s: concreate duplicate file %s\n", s, de.name);
--    3f56:	f7240613          	addi	a2,s0,-142
--    3f5a:	85ce                	mv	a1,s3
--    3f5c:	00003517          	auipc	a0,0x3
--    3f60:	dc450513          	addi	a0,a0,-572 # 6d20 <malloc+0x1dd4>
--    3f64:	735000ef          	jal	4e98 <printf>
-+    3ef6:	f7240613          	add	a2,s0,-142
-+    3efa:	85ce                	mv	a1,s3
-+    3efc:	00003517          	auipc	a0,0x3
-+    3f00:	d9450513          	add	a0,a0,-620 # 6c90 <malloc+0x1db8>
-+    3f04:	721000ef          	jal	4e24 <printf>
-         exit(1);
--    3f68:	4505                	li	a0,1
--    3f6a:	317000ef          	jal	4a80 <exit>
-+    3f08:	4505                	li	a0,1
-+    3f0a:	301000ef          	jal	4a0a <exit>
-   close(fd);
--    3f6e:	854a                	mv	a0,s2
--    3f70:	339000ef          	jal	4aa8 <close>
-+    3f0e:	854a                	mv	a0,s2
-+    3f10:	323000ef          	jal	4a32 <close>
-   if(n != N){
--    3f74:	02800793          	li	a5,40
--    3f78:	00fa9763          	bne	s5,a5,3f86 <concreate+0x154>
-+    3f14:	02800793          	li	a5,40
-+    3f18:	00fa9763          	bne	s5,a5,3f26 <concreate+0x154>
-     if(((i % 3) == 0 && pid == 0) ||
--    3f7c:	4a8d                	li	s5,3
--    3f7e:	4b05                	li	s6,1
-+    3f1c:	4a8d                	li	s5,3
-+    3f1e:	4b05                	li	s6,1
-   for(i = 0; i < N; i++){
--    3f80:	02800a13          	li	s4,40
--    3f84:	a079                	j	4012 <concreate+0x1e0>
-+    3f20:	02800a13          	li	s4,40
-+    3f24:	a079                	j	3fb2 <concreate+0x1e0>
-     printf("%s: concreate not enough files in directory listing\n", s);
--    3f86:	85ce                	mv	a1,s3
--    3f88:	00003517          	auipc	a0,0x3
--    3f8c:	dc050513          	addi	a0,a0,-576 # 6d48 <malloc+0x1dfc>
--    3f90:	709000ef          	jal	4e98 <printf>
-+    3f26:	85ce                	mv	a1,s3
-+    3f28:	00003517          	auipc	a0,0x3
-+    3f2c:	d9050513          	add	a0,a0,-624 # 6cb8 <malloc+0x1de0>
-+    3f30:	6f5000ef          	jal	4e24 <printf>
-     exit(1);
--    3f94:	4505                	li	a0,1
--    3f96:	2eb000ef          	jal	4a80 <exit>
-+    3f34:	4505                	li	a0,1
-+    3f36:	2d5000ef          	jal	4a0a <exit>
-       printf("%s: fork failed\n", s);
--    3f9a:	85ce                	mv	a1,s3
--    3f9c:	00002517          	auipc	a0,0x2
--    3fa0:	97c50513          	addi	a0,a0,-1668 # 5918 <malloc+0x9cc>
--    3fa4:	6f5000ef          	jal	4e98 <printf>
-+    3f3a:	85ce                	mv	a1,s3
-+    3f3c:	00002517          	auipc	a0,0x2
-+    3f40:	94c50513          	add	a0,a0,-1716 # 5888 <malloc+0x9b0>
-+    3f44:	6e1000ef          	jal	4e24 <printf>
-       exit(1);
--    3fa8:	4505                	li	a0,1
--    3faa:	2d7000ef          	jal	4a80 <exit>
-+    3f48:	4505                	li	a0,1
-+    3f4a:	2c1000ef          	jal	4a0a <exit>
-       close(open(file, 0));
--    3fae:	4581                	li	a1,0
--    3fb0:	fa840513          	addi	a0,s0,-88
--    3fb4:	30d000ef          	jal	4ac0 <open>
--    3fb8:	2f1000ef          	jal	4aa8 <close>
-+    3f4e:	4581                	li	a1,0
-+    3f50:	fa840513          	add	a0,s0,-88
-+    3f54:	2f7000ef          	jal	4a4a <open>
-+    3f58:	2db000ef          	jal	4a32 <close>
-       close(open(file, 0));
--    3fbc:	4581                	li	a1,0
--    3fbe:	fa840513          	addi	a0,s0,-88
--    3fc2:	2ff000ef          	jal	4ac0 <open>
--    3fc6:	2e3000ef          	jal	4aa8 <close>
-+    3f5c:	4581                	li	a1,0
-+    3f5e:	fa840513          	add	a0,s0,-88
-+    3f62:	2e9000ef          	jal	4a4a <open>
-+    3f66:	2cd000ef          	jal	4a32 <close>
-       close(open(file, 0));
--    3fca:	4581                	li	a1,0
--    3fcc:	fa840513          	addi	a0,s0,-88
--    3fd0:	2f1000ef          	jal	4ac0 <open>
--    3fd4:	2d5000ef          	jal	4aa8 <close>
-+    3f6a:	4581                	li	a1,0
-+    3f6c:	fa840513          	add	a0,s0,-88
-+    3f70:	2db000ef          	jal	4a4a <open>
-+    3f74:	2bf000ef          	jal	4a32 <close>
-       close(open(file, 0));
--    3fd8:	4581                	li	a1,0
--    3fda:	fa840513          	addi	a0,s0,-88
--    3fde:	2e3000ef          	jal	4ac0 <open>
--    3fe2:	2c7000ef          	jal	4aa8 <close>
-+    3f78:	4581                	li	a1,0
-+    3f7a:	fa840513          	add	a0,s0,-88
-+    3f7e:	2cd000ef          	jal	4a4a <open>
-+    3f82:	2b1000ef          	jal	4a32 <close>
-       close(open(file, 0));
--    3fe6:	4581                	li	a1,0
--    3fe8:	fa840513          	addi	a0,s0,-88
--    3fec:	2d5000ef          	jal	4ac0 <open>
--    3ff0:	2b9000ef          	jal	4aa8 <close>
-+    3f86:	4581                	li	a1,0
-+    3f88:	fa840513          	add	a0,s0,-88
-+    3f8c:	2bf000ef          	jal	4a4a <open>
-+    3f90:	2a3000ef          	jal	4a32 <close>
-       close(open(file, 0));
--    3ff4:	4581                	li	a1,0
--    3ff6:	fa840513          	addi	a0,s0,-88
--    3ffa:	2c7000ef          	jal	4ac0 <open>
--    3ffe:	2ab000ef          	jal	4aa8 <close>
-+    3f94:	4581                	li	a1,0
-+    3f96:	fa840513          	add	a0,s0,-88
-+    3f9a:	2b1000ef          	jal	4a4a <open>
-+    3f9e:	295000ef          	jal	4a32 <close>
-     if(pid == 0)
--    4002:	06090363          	beqz	s2,4068 <concreate+0x236>
-+    3fa2:	06090363          	beqz	s2,4008 <concreate+0x236>
-       wait(0);
--    4006:	4501                	li	a0,0
--    4008:	281000ef          	jal	4a88 <wait>
-+    3fa6:	4501                	li	a0,0
-+    3fa8:	26b000ef          	jal	4a12 <wait>
-   for(i = 0; i < N; i++){
--    400c:	2485                	addiw	s1,s1,1
--    400e:	0b448963          	beq	s1,s4,40c0 <concreate+0x28e>
-+    3fac:	2485                	addw	s1,s1,1
-+    3fae:	0b448963          	beq	s1,s4,4060 <concreate+0x28e>
-     file[1] = '0' + i;
--    4012:	0304879b          	addiw	a5,s1,48
--    4016:	faf404a3          	sb	a5,-87(s0)
-+    3fb2:	0304879b          	addw	a5,s1,48
-+    3fb6:	faf404a3          	sb	a5,-87(s0)
-     pid = fork();
--    401a:	25f000ef          	jal	4a78 <fork>
--    401e:	892a                	mv	s2,a0
-+    3fba:	249000ef          	jal	4a02 <fork>
-+    3fbe:	892a                	mv	s2,a0
-     if(pid < 0){
--    4020:	f6054de3          	bltz	a0,3f9a <concreate+0x168>
-+    3fc0:	f6054de3          	bltz	a0,3f3a <concreate+0x168>
-     if(((i % 3) == 0 && pid == 0) ||
--    4024:	0354e73b          	remw	a4,s1,s5
--    4028:	00a767b3          	or	a5,a4,a0
--    402c:	2781                	sext.w	a5,a5
--    402e:	d3c1                	beqz	a5,3fae <concreate+0x17c>
--    4030:	01671363          	bne	a4,s6,4036 <concreate+0x204>
-+    3fc4:	0354e73b          	remw	a4,s1,s5
-+    3fc8:	00a767b3          	or	a5,a4,a0
-+    3fcc:	2781                	sext.w	a5,a5
-+    3fce:	d3c1                	beqz	a5,3f4e <concreate+0x17c>
-+    3fd0:	01671363          	bne	a4,s6,3fd6 <concreate+0x204>
-        ((i % 3) == 1 && pid != 0)){
--    4034:	fd2d                	bnez	a0,3fae <concreate+0x17c>
-+    3fd4:	fd2d                	bnez	a0,3f4e <concreate+0x17c>
-       unlink(file);
--    4036:	fa840513          	addi	a0,s0,-88
--    403a:	297000ef          	jal	4ad0 <unlink>
-+    3fd6:	fa840513          	add	a0,s0,-88
-+    3fda:	281000ef          	jal	4a5a <unlink>
-       unlink(file);
--    403e:	fa840513          	addi	a0,s0,-88
--    4042:	28f000ef          	jal	4ad0 <unlink>
-+    3fde:	fa840513          	add	a0,s0,-88
-+    3fe2:	279000ef          	jal	4a5a <unlink>
-       unlink(file);
--    4046:	fa840513          	addi	a0,s0,-88
--    404a:	287000ef          	jal	4ad0 <unlink>
-+    3fe6:	fa840513          	add	a0,s0,-88
-+    3fea:	271000ef          	jal	4a5a <unlink>
-       unlink(file);
--    404e:	fa840513          	addi	a0,s0,-88
--    4052:	27f000ef          	jal	4ad0 <unlink>
-+    3fee:	fa840513          	add	a0,s0,-88
-+    3ff2:	269000ef          	jal	4a5a <unlink>
-       unlink(file);
--    4056:	fa840513          	addi	a0,s0,-88
--    405a:	277000ef          	jal	4ad0 <unlink>
-+    3ff6:	fa840513          	add	a0,s0,-88
-+    3ffa:	261000ef          	jal	4a5a <unlink>
-       unlink(file);
--    405e:	fa840513          	addi	a0,s0,-88
--    4062:	26f000ef          	jal	4ad0 <unlink>
--    4066:	bf71                	j	4002 <concreate+0x1d0>
-+    3ffe:	fa840513          	add	a0,s0,-88
-+    4002:	259000ef          	jal	4a5a <unlink>
-+    4006:	bf71                	j	3fa2 <concreate+0x1d0>
-       exit(0);
--    4068:	4501                	li	a0,0
--    406a:	217000ef          	jal	4a80 <exit>
-+    4008:	4501                	li	a0,0
-+    400a:	201000ef          	jal	4a0a <exit>
-       close(fd);
--    406e:	23b000ef          	jal	4aa8 <close>
-+    400e:	225000ef          	jal	4a32 <close>
-     if(pid == 0) {
--    4072:	b599                	j	3eb8 <concreate+0x86>
-+    4012:	b599                	j	3e58 <concreate+0x86>
-       close(fd);
--    4074:	235000ef          	jal	4aa8 <close>
-+    4014:	21f000ef          	jal	4a32 <close>
-       wait(&xstatus);
--    4078:	f6c40513          	addi	a0,s0,-148
--    407c:	20d000ef          	jal	4a88 <wait>
-+    4018:	f6c40513          	add	a0,s0,-148
-+    401c:	1f7000ef          	jal	4a12 <wait>
-       if(xstatus != 0)
--    4080:	f6c42483          	lw	s1,-148(s0)
--    4084:	e2049de3          	bnez	s1,3ebe <concreate+0x8c>
-+    4020:	f6c42483          	lw	s1,-148(s0)
-+    4024:	e2049de3          	bnez	s1,3e5e <concreate+0x8c>
-   for(i = 0; i < N; i++){
--    4088:	2905                	addiw	s2,s2,1
--    408a:	e3490de3          	beq	s2,s4,3ec4 <concreate+0x92>
-+    4028:	2905                	addw	s2,s2,1
-+    402a:	e3490de3          	beq	s2,s4,3e64 <concreate+0x92>
-     file[1] = '0' + i;
--    408e:	0309079b          	addiw	a5,s2,48
--    4092:	faf404a3          	sb	a5,-87(s0)
-+    402e:	0309079b          	addw	a5,s2,48
-+    4032:	faf404a3          	sb	a5,-87(s0)
-     unlink(file);
--    4096:	fa840513          	addi	a0,s0,-88
--    409a:	237000ef          	jal	4ad0 <unlink>
-+    4036:	fa840513          	add	a0,s0,-88
-+    403a:	221000ef          	jal	4a5a <unlink>
-     pid = fork();
--    409e:	1db000ef          	jal	4a78 <fork>
-+    403e:	1c5000ef          	jal	4a02 <fork>
-     if(pid && (i % 3) == 1){
--    40a2:	dc050ae3          	beqz	a0,3e76 <concreate+0x44>
--    40a6:	036967bb          	remw	a5,s2,s6
--    40aa:	dd5780e3          	beq	a5,s5,3e6a <concreate+0x38>
-+    4042:	dc050ae3          	beqz	a0,3e16 <concreate+0x44>
-+    4046:	036967bb          	remw	a5,s2,s6
-+    404a:	dd5780e3          	beq	a5,s5,3e0a <concreate+0x38>
-       fd = open(file, O_CREATE | O_RDWR);
--    40ae:	20200593          	li	a1,514
--    40b2:	fa840513          	addi	a0,s0,-88
--    40b6:	20b000ef          	jal	4ac0 <open>
-+    404e:	20200593          	li	a1,514
-+    4052:	fa840513          	add	a0,s0,-88
-+    4056:	1f5000ef          	jal	4a4a <open>
-       if(fd < 0){
--    40ba:	fa055de3          	bgez	a0,4074 <concreate+0x242>
--    40be:	bbd1                	j	3e92 <concreate+0x60>
-+    405a:	fa055de3          	bgez	a0,4014 <concreate+0x242>
-+    405e:	bbd1                	j	3e32 <concreate+0x60>
- }
--    40c0:	60ea                	ld	ra,152(sp)
--    40c2:	644a                	ld	s0,144(sp)
--    40c4:	64aa                	ld	s1,136(sp)
--    40c6:	690a                	ld	s2,128(sp)
--    40c8:	79e6                	ld	s3,120(sp)
--    40ca:	7a46                	ld	s4,112(sp)
--    40cc:	7aa6                	ld	s5,104(sp)
--    40ce:	7b06                	ld	s6,96(sp)
--    40d0:	6be6                	ld	s7,88(sp)
--    40d2:	610d                	addi	sp,sp,160
--    40d4:	8082                	ret
--
--00000000000040d6 <bigfile>:
-+    4060:	60ea                	ld	ra,152(sp)
-+    4062:	644a                	ld	s0,144(sp)
-+    4064:	64aa                	ld	s1,136(sp)
-+    4066:	690a                	ld	s2,128(sp)
-+    4068:	79e6                	ld	s3,120(sp)
-+    406a:	7a46                	ld	s4,112(sp)
-+    406c:	7aa6                	ld	s5,104(sp)
-+    406e:	7b06                	ld	s6,96(sp)
-+    4070:	6be6                	ld	s7,88(sp)
-+    4072:	610d                	add	sp,sp,160
-+    4074:	8082                	ret
-+
-+0000000000004076 <bigfile>:
- {
--    40d6:	7139                	addi	sp,sp,-64
--    40d8:	fc06                	sd	ra,56(sp)
--    40da:	f822                	sd	s0,48(sp)
--    40dc:	f426                	sd	s1,40(sp)
--    40de:	f04a                	sd	s2,32(sp)
--    40e0:	ec4e                	sd	s3,24(sp)
--    40e2:	e852                	sd	s4,16(sp)
--    40e4:	e456                	sd	s5,8(sp)
--    40e6:	0080                	addi	s0,sp,64
--    40e8:	8aaa                	mv	s5,a0
-+    4076:	7139                	add	sp,sp,-64
-+    4078:	fc06                	sd	ra,56(sp)
-+    407a:	f822                	sd	s0,48(sp)
-+    407c:	f426                	sd	s1,40(sp)
-+    407e:	f04a                	sd	s2,32(sp)
-+    4080:	ec4e                	sd	s3,24(sp)
-+    4082:	e852                	sd	s4,16(sp)
-+    4084:	e456                	sd	s5,8(sp)
-+    4086:	0080                	add	s0,sp,64
-+    4088:	8aaa                	mv	s5,a0
-   unlink("bigfile.dat");
--    40ea:	00003517          	auipc	a0,0x3
--    40ee:	c9650513          	addi	a0,a0,-874 # 6d80 <malloc+0x1e34>
--    40f2:	1df000ef          	jal	4ad0 <unlink>
-+    408a:	00003517          	auipc	a0,0x3
-+    408e:	c6650513          	add	a0,a0,-922 # 6cf0 <malloc+0x1e18>
-+    4092:	1c9000ef          	jal	4a5a <unlink>
-   fd = open("bigfile.dat", O_CREATE | O_RDWR);
--    40f6:	20200593          	li	a1,514
--    40fa:	00003517          	auipc	a0,0x3
--    40fe:	c8650513          	addi	a0,a0,-890 # 6d80 <malloc+0x1e34>
--    4102:	1bf000ef          	jal	4ac0 <open>
--    4106:	89aa                	mv	s3,a0
-+    4096:	20200593          	li	a1,514
-+    409a:	00003517          	auipc	a0,0x3
-+    409e:	c5650513          	add	a0,a0,-938 # 6cf0 <malloc+0x1e18>
-+    40a2:	1a9000ef          	jal	4a4a <open>
-+    40a6:	89aa                	mv	s3,a0
-   for(i = 0; i < N; i++){
--    4108:	4481                	li	s1,0
-+    40a8:	4481                	li	s1,0
-     memset(buf, i, SZ);
--    410a:	00009917          	auipc	s2,0x9
--    410e:	b6e90913          	addi	s2,s2,-1170 # cc78 <buf>
-+    40aa:	00008917          	auipc	s2,0x8
-+    40ae:	bce90913          	add	s2,s2,-1074 # bc78 <buf>
-   for(i = 0; i < N; i++){
--    4112:	4a51                	li	s4,20
-+    40b2:	4a51                	li	s4,20
-   if(fd < 0){
--    4114:	08054663          	bltz	a0,41a0 <bigfile+0xca>
-+    40b4:	08054663          	bltz	a0,4140 <bigfile+0xca>
-     memset(buf, i, SZ);
--    4118:	25800613          	li	a2,600
--    411c:	85a6                	mv	a1,s1
--    411e:	854a                	mv	a0,s2
--    4120:	77a000ef          	jal	489a <memset>
-+    40b8:	25800613          	li	a2,600
-+    40bc:	85a6                	mv	a1,s1
-+    40be:	854a                	mv	a0,s2
-+    40c0:	764000ef          	jal	4824 <memset>
-     if(write(fd, buf, SZ) != SZ){
--    4124:	25800613          	li	a2,600
--    4128:	85ca                	mv	a1,s2
--    412a:	854e                	mv	a0,s3
--    412c:	175000ef          	jal	4aa0 <write>
--    4130:	25800793          	li	a5,600
--    4134:	08f51063          	bne	a0,a5,41b4 <bigfile+0xde>
-+    40c4:	25800613          	li	a2,600
-+    40c8:	85ca                	mv	a1,s2
-+    40ca:	854e                	mv	a0,s3
-+    40cc:	15f000ef          	jal	4a2a <write>
-+    40d0:	25800793          	li	a5,600
-+    40d4:	08f51063          	bne	a0,a5,4154 <bigfile+0xde>
-   for(i = 0; i < N; i++){
--    4138:	2485                	addiw	s1,s1,1
--    413a:	fd449fe3          	bne	s1,s4,4118 <bigfile+0x42>
-+    40d8:	2485                	addw	s1,s1,1
-+    40da:	fd449fe3          	bne	s1,s4,40b8 <bigfile+0x42>
-   close(fd);
--    413e:	854e                	mv	a0,s3
--    4140:	169000ef          	jal	4aa8 <close>
-+    40de:	854e                	mv	a0,s3
-+    40e0:	153000ef          	jal	4a32 <close>
-   fd = open("bigfile.dat", 0);
--    4144:	4581                	li	a1,0
--    4146:	00003517          	auipc	a0,0x3
--    414a:	c3a50513          	addi	a0,a0,-966 # 6d80 <malloc+0x1e34>
--    414e:	173000ef          	jal	4ac0 <open>
--    4152:	8a2a                	mv	s4,a0
-+    40e4:	4581                	li	a1,0
-+    40e6:	00003517          	auipc	a0,0x3
-+    40ea:	c0a50513          	add	a0,a0,-1014 # 6cf0 <malloc+0x1e18>
-+    40ee:	15d000ef          	jal	4a4a <open>
-+    40f2:	8a2a                	mv	s4,a0
-   total = 0;
--    4154:	4981                	li	s3,0
-+    40f4:	4981                	li	s3,0
-   for(i = 0; ; i++){
--    4156:	4481                	li	s1,0
-+    40f6:	4481                	li	s1,0
-     cc = read(fd, buf, SZ/2);
--    4158:	00009917          	auipc	s2,0x9
--    415c:	b2090913          	addi	s2,s2,-1248 # cc78 <buf>
-+    40f8:	00008917          	auipc	s2,0x8
-+    40fc:	b8090913          	add	s2,s2,-1152 # bc78 <buf>
-   if(fd < 0){
--    4160:	06054463          	bltz	a0,41c8 <bigfile+0xf2>
-+    4100:	06054463          	bltz	a0,4168 <bigfile+0xf2>
-     cc = read(fd, buf, SZ/2);
--    4164:	12c00613          	li	a2,300
--    4168:	85ca                	mv	a1,s2
--    416a:	8552                	mv	a0,s4
--    416c:	12d000ef          	jal	4a98 <read>
-+    4104:	12c00613          	li	a2,300
-+    4108:	85ca                	mv	a1,s2
-+    410a:	8552                	mv	a0,s4
-+    410c:	117000ef          	jal	4a22 <read>
-     if(cc < 0){
--    4170:	06054663          	bltz	a0,41dc <bigfile+0x106>
-+    4110:	06054663          	bltz	a0,417c <bigfile+0x106>
-     if(cc == 0)
--    4174:	c155                	beqz	a0,4218 <bigfile+0x142>
-+    4114:	c155                	beqz	a0,41b8 <bigfile+0x142>
-     if(cc != SZ/2){
--    4176:	12c00793          	li	a5,300
--    417a:	06f51b63          	bne	a0,a5,41f0 <bigfile+0x11a>
-+    4116:	12c00793          	li	a5,300
-+    411a:	06f51b63          	bne	a0,a5,4190 <bigfile+0x11a>
-     if(buf[0] != i/2 || buf[SZ/2-1] != i/2){
--    417e:	01f4d79b          	srliw	a5,s1,0x1f
--    4182:	9fa5                	addw	a5,a5,s1
--    4184:	4017d79b          	sraiw	a5,a5,0x1
--    4188:	00094703          	lbu	a4,0(s2)
--    418c:	06f71c63          	bne	a4,a5,4204 <bigfile+0x12e>
--    4190:	12b94703          	lbu	a4,299(s2)
--    4194:	06f71863          	bne	a4,a5,4204 <bigfile+0x12e>
-+    411e:	01f4d79b          	srlw	a5,s1,0x1f
-+    4122:	9fa5                	addw	a5,a5,s1
-+    4124:	4017d79b          	sraw	a5,a5,0x1
-+    4128:	00094703          	lbu	a4,0(s2)
-+    412c:	06f71c63          	bne	a4,a5,41a4 <bigfile+0x12e>
-+    4130:	12b94703          	lbu	a4,299(s2)
-+    4134:	06f71863          	bne	a4,a5,41a4 <bigfile+0x12e>
-     total += cc;
--    4198:	12c9899b          	addiw	s3,s3,300
-+    4138:	12c9899b          	addw	s3,s3,300
-   for(i = 0; ; i++){
--    419c:	2485                	addiw	s1,s1,1
-+    413c:	2485                	addw	s1,s1,1
-     cc = read(fd, buf, SZ/2);
--    419e:	b7d9                	j	4164 <bigfile+0x8e>
-+    413e:	b7d9                	j	4104 <bigfile+0x8e>
-     printf("%s: cannot create bigfile", s);
--    41a0:	85d6                	mv	a1,s5
--    41a2:	00003517          	auipc	a0,0x3
--    41a6:	bee50513          	addi	a0,a0,-1042 # 6d90 <malloc+0x1e44>
--    41aa:	4ef000ef          	jal	4e98 <printf>
-+    4140:	85d6                	mv	a1,s5
-+    4142:	00003517          	auipc	a0,0x3
-+    4146:	bbe50513          	add	a0,a0,-1090 # 6d00 <malloc+0x1e28>
-+    414a:	4db000ef          	jal	4e24 <printf>
-     exit(1);
--    41ae:	4505                	li	a0,1
--    41b0:	0d1000ef          	jal	4a80 <exit>
-+    414e:	4505                	li	a0,1
-+    4150:	0bb000ef          	jal	4a0a <exit>
-       printf("%s: write bigfile failed\n", s);
--    41b4:	85d6                	mv	a1,s5
--    41b6:	00003517          	auipc	a0,0x3
--    41ba:	bfa50513          	addi	a0,a0,-1030 # 6db0 <malloc+0x1e64>
--    41be:	4db000ef          	jal	4e98 <printf>
-+    4154:	85d6                	mv	a1,s5
-+    4156:	00003517          	auipc	a0,0x3
-+    415a:	bca50513          	add	a0,a0,-1078 # 6d20 <malloc+0x1e48>
-+    415e:	4c7000ef          	jal	4e24 <printf>
-       exit(1);
--    41c2:	4505                	li	a0,1
--    41c4:	0bd000ef          	jal	4a80 <exit>
-+    4162:	4505                	li	a0,1
-+    4164:	0a7000ef          	jal	4a0a <exit>
-     printf("%s: cannot open bigfile\n", s);
--    41c8:	85d6                	mv	a1,s5
--    41ca:	00003517          	auipc	a0,0x3
--    41ce:	c0650513          	addi	a0,a0,-1018 # 6dd0 <malloc+0x1e84>
--    41d2:	4c7000ef          	jal	4e98 <printf>
-+    4168:	85d6                	mv	a1,s5
-+    416a:	00003517          	auipc	a0,0x3
-+    416e:	bd650513          	add	a0,a0,-1066 # 6d40 <malloc+0x1e68>
-+    4172:	4b3000ef          	jal	4e24 <printf>
-     exit(1);
--    41d6:	4505                	li	a0,1
--    41d8:	0a9000ef          	jal	4a80 <exit>
-+    4176:	4505                	li	a0,1
-+    4178:	093000ef          	jal	4a0a <exit>
-       printf("%s: read bigfile failed\n", s);
--    41dc:	85d6                	mv	a1,s5
--    41de:	00003517          	auipc	a0,0x3
--    41e2:	c1250513          	addi	a0,a0,-1006 # 6df0 <malloc+0x1ea4>
--    41e6:	4b3000ef          	jal	4e98 <printf>
-+    417c:	85d6                	mv	a1,s5
-+    417e:	00003517          	auipc	a0,0x3
-+    4182:	be250513          	add	a0,a0,-1054 # 6d60 <malloc+0x1e88>
-+    4186:	49f000ef          	jal	4e24 <printf>
-       exit(1);
--    41ea:	4505                	li	a0,1
--    41ec:	095000ef          	jal	4a80 <exit>
-+    418a:	4505                	li	a0,1
-+    418c:	07f000ef          	jal	4a0a <exit>
-       printf("%s: short read bigfile\n", s);
--    41f0:	85d6                	mv	a1,s5
--    41f2:	00003517          	auipc	a0,0x3
--    41f6:	c1e50513          	addi	a0,a0,-994 # 6e10 <malloc+0x1ec4>
--    41fa:	49f000ef          	jal	4e98 <printf>
-+    4190:	85d6                	mv	a1,s5
-+    4192:	00003517          	auipc	a0,0x3
-+    4196:	bee50513          	add	a0,a0,-1042 # 6d80 <malloc+0x1ea8>
-+    419a:	48b000ef          	jal	4e24 <printf>
-       exit(1);
--    41fe:	4505                	li	a0,1
--    4200:	081000ef          	jal	4a80 <exit>
-+    419e:	4505                	li	a0,1
-+    41a0:	06b000ef          	jal	4a0a <exit>
-       printf("%s: read bigfile wrong data\n", s);
--    4204:	85d6                	mv	a1,s5
--    4206:	00003517          	auipc	a0,0x3
--    420a:	c2250513          	addi	a0,a0,-990 # 6e28 <malloc+0x1edc>
--    420e:	48b000ef          	jal	4e98 <printf>
-+    41a4:	85d6                	mv	a1,s5
-+    41a6:	00003517          	auipc	a0,0x3
-+    41aa:	bf250513          	add	a0,a0,-1038 # 6d98 <malloc+0x1ec0>
-+    41ae:	477000ef          	jal	4e24 <printf>
-       exit(1);
--    4212:	4505                	li	a0,1
--    4214:	06d000ef          	jal	4a80 <exit>
-+    41b2:	4505                	li	a0,1
-+    41b4:	057000ef          	jal	4a0a <exit>
-   close(fd);
--    4218:	8552                	mv	a0,s4
--    421a:	08f000ef          	jal	4aa8 <close>
-+    41b8:	8552                	mv	a0,s4
-+    41ba:	079000ef          	jal	4a32 <close>
-   if(total != N*SZ){
--    421e:	678d                	lui	a5,0x3
--    4220:	ee078793          	addi	a5,a5,-288 # 2ee0 <subdir+0x304>
--    4224:	02f99163          	bne	s3,a5,4246 <bigfile+0x170>
-+    41be:	678d                	lui	a5,0x3
-+    41c0:	ee078793          	add	a5,a5,-288 # 2ee0 <subdir+0x358>
-+    41c4:	02f99163          	bne	s3,a5,41e6 <bigfile+0x170>
-   unlink("bigfile.dat");
--    4228:	00003517          	auipc	a0,0x3
--    422c:	b5850513          	addi	a0,a0,-1192 # 6d80 <malloc+0x1e34>
--    4230:	0a1000ef          	jal	4ad0 <unlink>
-+    41c8:	00003517          	auipc	a0,0x3
-+    41cc:	b2850513          	add	a0,a0,-1240 # 6cf0 <malloc+0x1e18>
-+    41d0:	08b000ef          	jal	4a5a <unlink>
- }
--    4234:	70e2                	ld	ra,56(sp)
--    4236:	7442                	ld	s0,48(sp)
--    4238:	74a2                	ld	s1,40(sp)
--    423a:	7902                	ld	s2,32(sp)
--    423c:	69e2                	ld	s3,24(sp)
--    423e:	6a42                	ld	s4,16(sp)
--    4240:	6aa2                	ld	s5,8(sp)
--    4242:	6121                	addi	sp,sp,64
--    4244:	8082                	ret
-+    41d4:	70e2                	ld	ra,56(sp)
-+    41d6:	7442                	ld	s0,48(sp)
-+    41d8:	74a2                	ld	s1,40(sp)
-+    41da:	7902                	ld	s2,32(sp)
-+    41dc:	69e2                	ld	s3,24(sp)
-+    41de:	6a42                	ld	s4,16(sp)
-+    41e0:	6aa2                	ld	s5,8(sp)
-+    41e2:	6121                	add	sp,sp,64
-+    41e4:	8082                	ret
-     printf("%s: read bigfile wrong total\n", s);
--    4246:	85d6                	mv	a1,s5
--    4248:	00003517          	auipc	a0,0x3
--    424c:	c0050513          	addi	a0,a0,-1024 # 6e48 <malloc+0x1efc>
--    4250:	449000ef          	jal	4e98 <printf>
-+    41e6:	85d6                	mv	a1,s5
-+    41e8:	00003517          	auipc	a0,0x3
-+    41ec:	bd050513          	add	a0,a0,-1072 # 6db8 <malloc+0x1ee0>
-+    41f0:	435000ef          	jal	4e24 <printf>
-     exit(1);
--    4254:	4505                	li	a0,1
--    4256:	02b000ef          	jal	4a80 <exit>
-+    41f4:	4505                	li	a0,1
-+    41f6:	015000ef          	jal	4a0a <exit>
- 
--000000000000425a <bigargtest>:
-+00000000000041fa <bigargtest>:
- {
--    425a:	7121                	addi	sp,sp,-448
--    425c:	ff06                	sd	ra,440(sp)
--    425e:	fb22                	sd	s0,432(sp)
--    4260:	f726                	sd	s1,424(sp)
--    4262:	0380                	addi	s0,sp,448
--    4264:	84aa                	mv	s1,a0
-+    41fa:	7121                	add	sp,sp,-448
-+    41fc:	ff06                	sd	ra,440(sp)
-+    41fe:	fb22                	sd	s0,432(sp)
-+    4200:	f726                	sd	s1,424(sp)
-+    4202:	0380                	add	s0,sp,448
-+    4204:	84aa                	mv	s1,a0
-   unlink("bigarg-ok");
--    4266:	00003517          	auipc	a0,0x3
--    426a:	c0250513          	addi	a0,a0,-1022 # 6e68 <malloc+0x1f1c>
--    426e:	063000ef          	jal	4ad0 <unlink>
-+    4206:	00003517          	auipc	a0,0x3
-+    420a:	bd250513          	add	a0,a0,-1070 # 6dd8 <malloc+0x1f00>
-+    420e:	04d000ef          	jal	4a5a <unlink>
-   pid = fork();
--    4272:	007000ef          	jal	4a78 <fork>
-+    4212:	7f0000ef          	jal	4a02 <fork>
-   if(pid == 0){
--    4276:	c915                	beqz	a0,42aa <bigargtest+0x50>
-+    4216:	c915                	beqz	a0,424a <bigargtest+0x50>
-   } else if(pid < 0){
--    4278:	08054a63          	bltz	a0,430c <bigargtest+0xb2>
-+    4218:	08054a63          	bltz	a0,42ac <bigargtest+0xb2>
-   wait(&xstatus);
--    427c:	fdc40513          	addi	a0,s0,-36
--    4280:	009000ef          	jal	4a88 <wait>
-+    421c:	fdc40513          	add	a0,s0,-36
-+    4220:	7f2000ef          	jal	4a12 <wait>
-   if(xstatus != 0)
--    4284:	fdc42503          	lw	a0,-36(s0)
--    4288:	ed41                	bnez	a0,4320 <bigargtest+0xc6>
-+    4224:	fdc42503          	lw	a0,-36(s0)
-+    4228:	ed41                	bnez	a0,42c0 <bigargtest+0xc6>
-   fd = open("bigarg-ok", 0);
--    428a:	4581                	li	a1,0
--    428c:	00003517          	auipc	a0,0x3
--    4290:	bdc50513          	addi	a0,a0,-1060 # 6e68 <malloc+0x1f1c>
--    4294:	02d000ef          	jal	4ac0 <open>
-+    422a:	4581                	li	a1,0
-+    422c:	00003517          	auipc	a0,0x3
-+    4230:	bac50513          	add	a0,a0,-1108 # 6dd8 <malloc+0x1f00>
-+    4234:	017000ef          	jal	4a4a <open>
-   if(fd < 0){
--    4298:	08054663          	bltz	a0,4324 <bigargtest+0xca>
-+    4238:	08054663          	bltz	a0,42c4 <bigargtest+0xca>
-   close(fd);
--    429c:	00d000ef          	jal	4aa8 <close>
-+    423c:	7f6000ef          	jal	4a32 <close>
- }
--    42a0:	70fa                	ld	ra,440(sp)
--    42a2:	745a                	ld	s0,432(sp)
--    42a4:	74ba                	ld	s1,424(sp)
--    42a6:	6139                	addi	sp,sp,448
--    42a8:	8082                	ret
-+    4240:	70fa                	ld	ra,440(sp)
-+    4242:	745a                	ld	s0,432(sp)
-+    4244:	74ba                	ld	s1,424(sp)
-+    4246:	6139                	add	sp,sp,448
-+    4248:	8082                	ret
-     memset(big, ' ', sizeof(big));
--    42aa:	19000613          	li	a2,400
--    42ae:	02000593          	li	a1,32
--    42b2:	e4840513          	addi	a0,s0,-440
--    42b6:	5e4000ef          	jal	489a <memset>
-+    424a:	19000613          	li	a2,400
-+    424e:	02000593          	li	a1,32
-+    4252:	e4840513          	add	a0,s0,-440
-+    4256:	5ce000ef          	jal	4824 <memset>
-     big[sizeof(big)-1] = '\0';
--    42ba:	fc040ba3          	sb	zero,-41(s0)
-+    425a:	fc040ba3          	sb	zero,-41(s0)
-     for(i = 0; i < MAXARG-1; i++)
--    42be:	00005797          	auipc	a5,0x5
--    42c2:	1a278793          	addi	a5,a5,418 # 9460 <args.1>
--    42c6:	00005697          	auipc	a3,0x5
--    42ca:	29268693          	addi	a3,a3,658 # 9558 <args.1+0xf8>
-+    425e:	00004797          	auipc	a5,0x4
-+    4262:	20278793          	add	a5,a5,514 # 8460 <args.1>
-+    4266:	00004697          	auipc	a3,0x4
-+    426a:	2f268693          	add	a3,a3,754 # 8558 <args.1+0xf8>
-       args[i] = big;
--    42ce:	e4840713          	addi	a4,s0,-440
--    42d2:	e398                	sd	a4,0(a5)
-+    426e:	e4840713          	add	a4,s0,-440
-+    4272:	e398                	sd	a4,0(a5)
-     for(i = 0; i < MAXARG-1; i++)
--    42d4:	07a1                	addi	a5,a5,8
--    42d6:	fed79ee3          	bne	a5,a3,42d2 <bigargtest+0x78>
-+    4274:	07a1                	add	a5,a5,8
-+    4276:	fed79ee3          	bne	a5,a3,4272 <bigargtest+0x78>
-     args[MAXARG-1] = 0;
--    42da:	00005597          	auipc	a1,0x5
--    42de:	18658593          	addi	a1,a1,390 # 9460 <args.1>
--    42e2:	0e05bc23          	sd	zero,248(a1)
-+    427a:	00004597          	auipc	a1,0x4
-+    427e:	1e658593          	add	a1,a1,486 # 8460 <args.1>
-+    4282:	0e05bc23          	sd	zero,248(a1)
-     exec("echo", args);
--    42e6:	00001517          	auipc	a0,0x1
--    42ea:	da250513          	addi	a0,a0,-606 # 5088 <malloc+0x13c>
--    42ee:	7ca000ef          	jal	4ab8 <exec>
-+    4286:	00001517          	auipc	a0,0x1
-+    428a:	d7250513          	add	a0,a0,-654 # 4ff8 <malloc+0x120>
-+    428e:	7b4000ef          	jal	4a42 <exec>
-     fd = open("bigarg-ok", O_CREATE);
--    42f2:	20000593          	li	a1,512
--    42f6:	00003517          	auipc	a0,0x3
--    42fa:	b7250513          	addi	a0,a0,-1166 # 6e68 <malloc+0x1f1c>
--    42fe:	7c2000ef          	jal	4ac0 <open>
-+    4292:	20000593          	li	a1,512
-+    4296:	00003517          	auipc	a0,0x3
-+    429a:	b4250513          	add	a0,a0,-1214 # 6dd8 <malloc+0x1f00>
-+    429e:	7ac000ef          	jal	4a4a <open>
-     close(fd);
--    4302:	7a6000ef          	jal	4aa8 <close>
-+    42a2:	790000ef          	jal	4a32 <close>
-     exit(0);
--    4306:	4501                	li	a0,0
--    4308:	778000ef          	jal	4a80 <exit>
-+    42a6:	4501                	li	a0,0
-+    42a8:	762000ef          	jal	4a0a <exit>
-     printf("%s: bigargtest: fork failed\n", s);
--    430c:	85a6                	mv	a1,s1
--    430e:	00003517          	auipc	a0,0x3
--    4312:	b6a50513          	addi	a0,a0,-1174 # 6e78 <malloc+0x1f2c>
--    4316:	383000ef          	jal	4e98 <printf>
-+    42ac:	85a6                	mv	a1,s1
-+    42ae:	00003517          	auipc	a0,0x3
-+    42b2:	b3a50513          	add	a0,a0,-1222 # 6de8 <malloc+0x1f10>
-+    42b6:	36f000ef          	jal	4e24 <printf>
-     exit(1);
--    431a:	4505                	li	a0,1
--    431c:	764000ef          	jal	4a80 <exit>
-+    42ba:	4505                	li	a0,1
-+    42bc:	74e000ef          	jal	4a0a <exit>
-     exit(xstatus);
--    4320:	760000ef          	jal	4a80 <exit>
-+    42c0:	74a000ef          	jal	4a0a <exit>
-     printf("%s: bigarg test failed!\n", s);
--    4324:	85a6                	mv	a1,s1
--    4326:	00003517          	auipc	a0,0x3
--    432a:	b7250513          	addi	a0,a0,-1166 # 6e98 <malloc+0x1f4c>
--    432e:	36b000ef          	jal	4e98 <printf>
-+    42c4:	85a6                	mv	a1,s1
-+    42c6:	00003517          	auipc	a0,0x3
-+    42ca:	b4250513          	add	a0,a0,-1214 # 6e08 <malloc+0x1f30>
-+    42ce:	357000ef          	jal	4e24 <printf>
-     exit(1);
--    4332:	4505                	li	a0,1
--    4334:	74c000ef          	jal	4a80 <exit>
-+    42d2:	4505                	li	a0,1
-+    42d4:	736000ef          	jal	4a0a <exit>
- 
--0000000000004338 <fsfull>:
-+00000000000042d8 <fsfull>:
- {
--    4338:	7135                	addi	sp,sp,-160
--    433a:	ed06                	sd	ra,152(sp)
--    433c:	e922                	sd	s0,144(sp)
--    433e:	e526                	sd	s1,136(sp)
--    4340:	e14a                	sd	s2,128(sp)
--    4342:	fcce                	sd	s3,120(sp)
--    4344:	f8d2                	sd	s4,112(sp)
--    4346:	f4d6                	sd	s5,104(sp)
--    4348:	f0da                	sd	s6,96(sp)
--    434a:	ecde                	sd	s7,88(sp)
--    434c:	e8e2                	sd	s8,80(sp)
--    434e:	e4e6                	sd	s9,72(sp)
--    4350:	e0ea                	sd	s10,64(sp)
--    4352:	1100                	addi	s0,sp,160
-+    42d8:	7135                	add	sp,sp,-160
-+    42da:	ed06                	sd	ra,152(sp)
-+    42dc:	e922                	sd	s0,144(sp)
-+    42de:	e526                	sd	s1,136(sp)
-+    42e0:	e14a                	sd	s2,128(sp)
-+    42e2:	fcce                	sd	s3,120(sp)
-+    42e4:	f8d2                	sd	s4,112(sp)
-+    42e6:	f4d6                	sd	s5,104(sp)
-+    42e8:	f0da                	sd	s6,96(sp)
-+    42ea:	ecde                	sd	s7,88(sp)
-+    42ec:	e8e2                	sd	s8,80(sp)
-+    42ee:	e4e6                	sd	s9,72(sp)
-+    42f0:	e0ea                	sd	s10,64(sp)
-+    42f2:	1100                	add	s0,sp,160
-   printf("fsfull test\n");
--    4354:	00003517          	auipc	a0,0x3
--    4358:	b6450513          	addi	a0,a0,-1180 # 6eb8 <malloc+0x1f6c>
--    435c:	33d000ef          	jal	4e98 <printf>
-+    42f4:	00003517          	auipc	a0,0x3
-+    42f8:	b3450513          	add	a0,a0,-1228 # 6e28 <malloc+0x1f50>
-+    42fc:	329000ef          	jal	4e24 <printf>
-   for(nfiles = 0; ; nfiles++){
--    4360:	4481                	li	s1,0
-+    4300:	4481                	li	s1,0
-     name[0] = 'f';
--    4362:	06600d13          	li	s10,102
-+    4302:	06600d13          	li	s10,102
-     name[1] = '0' + nfiles / 1000;
--    4366:	3e800c13          	li	s8,1000
-+    4306:	3e800c13          	li	s8,1000
-     name[2] = '0' + (nfiles % 1000) / 100;
--    436a:	06400b93          	li	s7,100
-+    430a:	06400b93          	li	s7,100
-     name[3] = '0' + (nfiles % 100) / 10;
--    436e:	4b29                	li	s6,10
-+    430e:	4b29                	li	s6,10
-     printf("writing %s\n", name);
--    4370:	00003c97          	auipc	s9,0x3
--    4374:	b58c8c93          	addi	s9,s9,-1192 # 6ec8 <malloc+0x1f7c>
-+    4310:	00003c97          	auipc	s9,0x3
-+    4314:	b28c8c93          	add	s9,s9,-1240 # 6e38 <malloc+0x1f60>
-     name[0] = 'f';
--    4378:	f7a40023          	sb	s10,-160(s0)
-+    4318:	f7a40023          	sb	s10,-160(s0)
-     name[1] = '0' + nfiles / 1000;
--    437c:	0384c7bb          	divw	a5,s1,s8
--    4380:	0307879b          	addiw	a5,a5,48
--    4384:	f6f400a3          	sb	a5,-159(s0)
-+    431c:	0384c7bb          	divw	a5,s1,s8
-+    4320:	0307879b          	addw	a5,a5,48
-+    4324:	f6f400a3          	sb	a5,-159(s0)
-     name[2] = '0' + (nfiles % 1000) / 100;
--    4388:	0384e7bb          	remw	a5,s1,s8
--    438c:	0377c7bb          	divw	a5,a5,s7
--    4390:	0307879b          	addiw	a5,a5,48
--    4394:	f6f40123          	sb	a5,-158(s0)
-+    4328:	0384e7bb          	remw	a5,s1,s8
-+    432c:	0377c7bb          	divw	a5,a5,s7
-+    4330:	0307879b          	addw	a5,a5,48
-+    4334:	f6f40123          	sb	a5,-158(s0)
-     name[3] = '0' + (nfiles % 100) / 10;
--    4398:	0374e7bb          	remw	a5,s1,s7
--    439c:	0367c7bb          	divw	a5,a5,s6
--    43a0:	0307879b          	addiw	a5,a5,48
--    43a4:	f6f401a3          	sb	a5,-157(s0)
-+    4338:	0374e7bb          	remw	a5,s1,s7
-+    433c:	0367c7bb          	divw	a5,a5,s6
-+    4340:	0307879b          	addw	a5,a5,48
-+    4344:	f6f401a3          	sb	a5,-157(s0)
-     name[4] = '0' + (nfiles % 10);
--    43a8:	0364e7bb          	remw	a5,s1,s6
--    43ac:	0307879b          	addiw	a5,a5,48
--    43b0:	f6f40223          	sb	a5,-156(s0)
-+    4348:	0364e7bb          	remw	a5,s1,s6
-+    434c:	0307879b          	addw	a5,a5,48
-+    4350:	f6f40223          	sb	a5,-156(s0)
-     name[5] = '\0';
--    43b4:	f60402a3          	sb	zero,-155(s0)
-+    4354:	f60402a3          	sb	zero,-155(s0)
-     printf("writing %s\n", name);
--    43b8:	f6040593          	addi	a1,s0,-160
--    43bc:	8566                	mv	a0,s9
--    43be:	2db000ef          	jal	4e98 <printf>
-+    4358:	f6040593          	add	a1,s0,-160
-+    435c:	8566                	mv	a0,s9
-+    435e:	2c7000ef          	jal	4e24 <printf>
-     int fd = open(name, O_CREATE|O_RDWR);
--    43c2:	20200593          	li	a1,514
--    43c6:	f6040513          	addi	a0,s0,-160
--    43ca:	6f6000ef          	jal	4ac0 <open>
--    43ce:	892a                	mv	s2,a0
-+    4362:	20200593          	li	a1,514
-+    4366:	f6040513          	add	a0,s0,-160
-+    436a:	6e0000ef          	jal	4a4a <open>
-+    436e:	892a                	mv	s2,a0
-     if(fd < 0){
--    43d0:	08055f63          	bgez	a0,446e <fsfull+0x136>
-+    4370:	08055f63          	bgez	a0,440e <fsfull+0x136>
-       printf("open %s failed\n", name);
--    43d4:	f6040593          	addi	a1,s0,-160
--    43d8:	00003517          	auipc	a0,0x3
--    43dc:	b0050513          	addi	a0,a0,-1280 # 6ed8 <malloc+0x1f8c>
--    43e0:	2b9000ef          	jal	4e98 <printf>
-+    4374:	f6040593          	add	a1,s0,-160
-+    4378:	00003517          	auipc	a0,0x3
-+    437c:	ad050513          	add	a0,a0,-1328 # 6e48 <malloc+0x1f70>
-+    4380:	2a5000ef          	jal	4e24 <printf>
-   while(nfiles >= 0){
--    43e4:	0604c163          	bltz	s1,4446 <fsfull+0x10e>
-+    4384:	0604c163          	bltz	s1,43e6 <fsfull+0x10e>
-     name[0] = 'f';
--    43e8:	06600b13          	li	s6,102
-+    4388:	06600b13          	li	s6,102
-     name[1] = '0' + nfiles / 1000;
--    43ec:	3e800a13          	li	s4,1000
-+    438c:	3e800a13          	li	s4,1000
-     name[2] = '0' + (nfiles % 1000) / 100;
--    43f0:	06400993          	li	s3,100
-+    4390:	06400993          	li	s3,100
-     name[3] = '0' + (nfiles % 100) / 10;
--    43f4:	4929                	li	s2,10
-+    4394:	4929                	li	s2,10
-   while(nfiles >= 0){
--    43f6:	5afd                	li	s5,-1
-+    4396:	5afd                	li	s5,-1
-     name[0] = 'f';
--    43f8:	f7640023          	sb	s6,-160(s0)
-+    4398:	f7640023          	sb	s6,-160(s0)
-     name[1] = '0' + nfiles / 1000;
--    43fc:	0344c7bb          	divw	a5,s1,s4
--    4400:	0307879b          	addiw	a5,a5,48
--    4404:	f6f400a3          	sb	a5,-159(s0)
-+    439c:	0344c7bb          	divw	a5,s1,s4
-+    43a0:	0307879b          	addw	a5,a5,48
-+    43a4:	f6f400a3          	sb	a5,-159(s0)
-     name[2] = '0' + (nfiles % 1000) / 100;
--    4408:	0344e7bb          	remw	a5,s1,s4
--    440c:	0337c7bb          	divw	a5,a5,s3
--    4410:	0307879b          	addiw	a5,a5,48
--    4414:	f6f40123          	sb	a5,-158(s0)
-+    43a8:	0344e7bb          	remw	a5,s1,s4
-+    43ac:	0337c7bb          	divw	a5,a5,s3
-+    43b0:	0307879b          	addw	a5,a5,48
-+    43b4:	f6f40123          	sb	a5,-158(s0)
-     name[3] = '0' + (nfiles % 100) / 10;
--    4418:	0334e7bb          	remw	a5,s1,s3
--    441c:	0327c7bb          	divw	a5,a5,s2
--    4420:	0307879b          	addiw	a5,a5,48
--    4424:	f6f401a3          	sb	a5,-157(s0)
-+    43b8:	0334e7bb          	remw	a5,s1,s3
-+    43bc:	0327c7bb          	divw	a5,a5,s2
-+    43c0:	0307879b          	addw	a5,a5,48
-+    43c4:	f6f401a3          	sb	a5,-157(s0)
-     name[4] = '0' + (nfiles % 10);
--    4428:	0324e7bb          	remw	a5,s1,s2
--    442c:	0307879b          	addiw	a5,a5,48
--    4430:	f6f40223          	sb	a5,-156(s0)
-+    43c8:	0324e7bb          	remw	a5,s1,s2
-+    43cc:	0307879b          	addw	a5,a5,48
-+    43d0:	f6f40223          	sb	a5,-156(s0)
-     name[5] = '\0';
--    4434:	f60402a3          	sb	zero,-155(s0)
-+    43d4:	f60402a3          	sb	zero,-155(s0)
-     unlink(name);
--    4438:	f6040513          	addi	a0,s0,-160
--    443c:	694000ef          	jal	4ad0 <unlink>
-+    43d8:	f6040513          	add	a0,s0,-160
-+    43dc:	67e000ef          	jal	4a5a <unlink>
-     nfiles--;
--    4440:	34fd                	addiw	s1,s1,-1
-+    43e0:	34fd                	addw	s1,s1,-1
-   while(nfiles >= 0){
--    4442:	fb549be3          	bne	s1,s5,43f8 <fsfull+0xc0>
-+    43e2:	fb549be3          	bne	s1,s5,4398 <fsfull+0xc0>
-   printf("fsfull test finished\n");
--    4446:	00003517          	auipc	a0,0x3
--    444a:	ab250513          	addi	a0,a0,-1358 # 6ef8 <malloc+0x1fac>
--    444e:	24b000ef          	jal	4e98 <printf>
-+    43e6:	00003517          	auipc	a0,0x3
-+    43ea:	a8250513          	add	a0,a0,-1406 # 6e68 <malloc+0x1f90>
-+    43ee:	237000ef          	jal	4e24 <printf>
- }
--    4452:	60ea                	ld	ra,152(sp)
--    4454:	644a                	ld	s0,144(sp)
--    4456:	64aa                	ld	s1,136(sp)
--    4458:	690a                	ld	s2,128(sp)
--    445a:	79e6                	ld	s3,120(sp)
--    445c:	7a46                	ld	s4,112(sp)
--    445e:	7aa6                	ld	s5,104(sp)
--    4460:	7b06                	ld	s6,96(sp)
--    4462:	6be6                	ld	s7,88(sp)
--    4464:	6c46                	ld	s8,80(sp)
--    4466:	6ca6                	ld	s9,72(sp)
--    4468:	6d06                	ld	s10,64(sp)
--    446a:	610d                	addi	sp,sp,160
--    446c:	8082                	ret
-+    43f2:	60ea                	ld	ra,152(sp)
-+    43f4:	644a                	ld	s0,144(sp)
-+    43f6:	64aa                	ld	s1,136(sp)
-+    43f8:	690a                	ld	s2,128(sp)
-+    43fa:	79e6                	ld	s3,120(sp)
-+    43fc:	7a46                	ld	s4,112(sp)
-+    43fe:	7aa6                	ld	s5,104(sp)
-+    4400:	7b06                	ld	s6,96(sp)
-+    4402:	6be6                	ld	s7,88(sp)
-+    4404:	6c46                	ld	s8,80(sp)
-+    4406:	6ca6                	ld	s9,72(sp)
-+    4408:	6d06                	ld	s10,64(sp)
-+    440a:	610d                	add	sp,sp,160
-+    440c:	8082                	ret
-     int total = 0;
--    446e:	4981                	li	s3,0
-+    440e:	4981                	li	s3,0
-       int cc = write(fd, buf, BSIZE);
--    4470:	00009a97          	auipc	s5,0x9
--    4474:	808a8a93          	addi	s5,s5,-2040 # cc78 <buf>
-+    4410:	00008a97          	auipc	s5,0x8
-+    4414:	868a8a93          	add	s5,s5,-1944 # bc78 <buf>
-       if(cc < BSIZE)
--    4478:	3ff00a13          	li	s4,1023
-+    4418:	3ff00a13          	li	s4,1023
-       int cc = write(fd, buf, BSIZE);
--    447c:	40000613          	li	a2,1024
--    4480:	85d6                	mv	a1,s5
--    4482:	854a                	mv	a0,s2
--    4484:	61c000ef          	jal	4aa0 <write>
-+    441c:	40000613          	li	a2,1024
-+    4420:	85d6                	mv	a1,s5
-+    4422:	854a                	mv	a0,s2
-+    4424:	606000ef          	jal	4a2a <write>
-       if(cc < BSIZE)
--    4488:	00aa5563          	bge	s4,a0,4492 <fsfull+0x15a>
-+    4428:	00aa5563          	bge	s4,a0,4432 <fsfull+0x15a>
-       total += cc;
--    448c:	00a989bb          	addw	s3,s3,a0
-+    442c:	00a989bb          	addw	s3,s3,a0
-     while(1){
--    4490:	b7f5                	j	447c <fsfull+0x144>
-+    4430:	b7f5                	j	441c <fsfull+0x144>
-     printf("wrote %d bytes\n", total);
--    4492:	85ce                	mv	a1,s3
--    4494:	00003517          	auipc	a0,0x3
--    4498:	a5450513          	addi	a0,a0,-1452 # 6ee8 <malloc+0x1f9c>
--    449c:	1fd000ef          	jal	4e98 <printf>
-+    4432:	85ce                	mv	a1,s3
-+    4434:	00003517          	auipc	a0,0x3
-+    4438:	a2450513          	add	a0,a0,-1500 # 6e58 <malloc+0x1f80>
-+    443c:	1e9000ef          	jal	4e24 <printf>
-     close(fd);
--    44a0:	854a                	mv	a0,s2
--    44a2:	606000ef          	jal	4aa8 <close>
-+    4440:	854a                	mv	a0,s2
-+    4442:	5f0000ef          	jal	4a32 <close>
-     if(total == 0)
--    44a6:	f2098fe3          	beqz	s3,43e4 <fsfull+0xac>
-+    4446:	f2098fe3          	beqz	s3,4384 <fsfull+0xac>
-   for(nfiles = 0; ; nfiles++){
--    44aa:	2485                	addiw	s1,s1,1
--    44ac:	b5f1                	j	4378 <fsfull+0x40>
-+    444a:	2485                	addw	s1,s1,1
-+    444c:	b5f1                	j	4318 <fsfull+0x40>
- 
--00000000000044ae <run>:
-+000000000000444e <run>:
- /* */
- 
- /* run each test in its own process. run returns 1 if child's exit() */
- /* indicates success. */
- int
- run(void f(char *), char *s) {
--    44ae:	7179                	addi	sp,sp,-48
--    44b0:	f406                	sd	ra,40(sp)
--    44b2:	f022                	sd	s0,32(sp)
--    44b4:	ec26                	sd	s1,24(sp)
--    44b6:	e84a                	sd	s2,16(sp)
--    44b8:	1800                	addi	s0,sp,48
--    44ba:	84aa                	mv	s1,a0
--    44bc:	892e                	mv	s2,a1
-+    444e:	7179                	add	sp,sp,-48
-+    4450:	f406                	sd	ra,40(sp)
-+    4452:	f022                	sd	s0,32(sp)
-+    4454:	ec26                	sd	s1,24(sp)
-+    4456:	e84a                	sd	s2,16(sp)
-+    4458:	1800                	add	s0,sp,48
-+    445a:	84aa                	mv	s1,a0
-+    445c:	892e                	mv	s2,a1
-   int pid;
-   int xstatus;
- 
-   printf("test %s: ", s);
--    44be:	00003517          	auipc	a0,0x3
--    44c2:	a5250513          	addi	a0,a0,-1454 # 6f10 <malloc+0x1fc4>
--    44c6:	1d3000ef          	jal	4e98 <printf>
-+    445e:	00003517          	auipc	a0,0x3
-+    4462:	a2250513          	add	a0,a0,-1502 # 6e80 <malloc+0x1fa8>
-+    4466:	1bf000ef          	jal	4e24 <printf>
-   if((pid = fork()) < 0) {
--    44ca:	5ae000ef          	jal	4a78 <fork>
--    44ce:	02054a63          	bltz	a0,4502 <run+0x54>
-+    446a:	598000ef          	jal	4a02 <fork>
-+    446e:	02054a63          	bltz	a0,44a2 <run+0x54>
-     printf("runtest: fork error\n");
-     exit(1);
-   }
-   if(pid == 0) {
--    44d2:	c129                	beqz	a0,4514 <run+0x66>
-+    4472:	c129                	beqz	a0,44b4 <run+0x66>
-     f(s);
-     exit(0);
-   } else {
-     wait(&xstatus);
--    44d4:	fdc40513          	addi	a0,s0,-36
--    44d8:	5b0000ef          	jal	4a88 <wait>
-+    4474:	fdc40513          	add	a0,s0,-36
-+    4478:	59a000ef          	jal	4a12 <wait>
-     if(xstatus != 0) 
--    44dc:	fdc42783          	lw	a5,-36(s0)
--    44e0:	cf9d                	beqz	a5,451e <run+0x70>
-+    447c:	fdc42783          	lw	a5,-36(s0)
-+    4480:	cf9d                	beqz	a5,44be <run+0x70>
-       printf("FAILED\n");
--    44e2:	00003517          	auipc	a0,0x3
--    44e6:	a5650513          	addi	a0,a0,-1450 # 6f38 <malloc+0x1fec>
--    44ea:	1af000ef          	jal	4e98 <printf>
-+    4482:	00003517          	auipc	a0,0x3
-+    4486:	a2650513          	add	a0,a0,-1498 # 6ea8 <malloc+0x1fd0>
-+    448a:	19b000ef          	jal	4e24 <printf>
-     else
-       printf("OK\n");
-     return xstatus == 0;
--    44ee:	fdc42503          	lw	a0,-36(s0)
-+    448e:	fdc42503          	lw	a0,-36(s0)
-   }
- }
--    44f2:	00153513          	seqz	a0,a0
--    44f6:	70a2                	ld	ra,40(sp)
--    44f8:	7402                	ld	s0,32(sp)
--    44fa:	64e2                	ld	s1,24(sp)
--    44fc:	6942                	ld	s2,16(sp)
--    44fe:	6145                	addi	sp,sp,48
--    4500:	8082                	ret
-+    4492:	00153513          	seqz	a0,a0
-+    4496:	70a2                	ld	ra,40(sp)
-+    4498:	7402                	ld	s0,32(sp)
-+    449a:	64e2                	ld	s1,24(sp)
-+    449c:	6942                	ld	s2,16(sp)
-+    449e:	6145                	add	sp,sp,48
-+    44a0:	8082                	ret
-     printf("runtest: fork error\n");
--    4502:	00003517          	auipc	a0,0x3
--    4506:	a1e50513          	addi	a0,a0,-1506 # 6f20 <malloc+0x1fd4>
--    450a:	18f000ef          	jal	4e98 <printf>
-+    44a2:	00003517          	auipc	a0,0x3
-+    44a6:	9ee50513          	add	a0,a0,-1554 # 6e90 <malloc+0x1fb8>
-+    44aa:	17b000ef          	jal	4e24 <printf>
-     exit(1);
--    450e:	4505                	li	a0,1
--    4510:	570000ef          	jal	4a80 <exit>
-+    44ae:	4505                	li	a0,1
-+    44b0:	55a000ef          	jal	4a0a <exit>
-     f(s);
--    4514:	854a                	mv	a0,s2
--    4516:	9482                	jalr	s1
-+    44b4:	854a                	mv	a0,s2
-+    44b6:	9482                	jalr	s1
-     exit(0);
--    4518:	4501                	li	a0,0
--    451a:	566000ef          	jal	4a80 <exit>
-+    44b8:	4501                	li	a0,0
-+    44ba:	550000ef          	jal	4a0a <exit>
-       printf("OK\n");
--    451e:	00003517          	auipc	a0,0x3
--    4522:	a2250513          	addi	a0,a0,-1502 # 6f40 <malloc+0x1ff4>
--    4526:	173000ef          	jal	4e98 <printf>
--    452a:	b7d1                	j	44ee <run+0x40>
-+    44be:	00003517          	auipc	a0,0x3
-+    44c2:	9f250513          	add	a0,a0,-1550 # 6eb0 <malloc+0x1fd8>
-+    44c6:	15f000ef          	jal	4e24 <printf>
-+    44ca:	b7d1                	j	448e <run+0x40>
- 
--000000000000452c <runtests>:
-+00000000000044cc <runtests>:
- 
- int
- runtests(struct test *tests, char *justone, int continuous) {
--    452c:	7139                	addi	sp,sp,-64
--    452e:	fc06                	sd	ra,56(sp)
--    4530:	f822                	sd	s0,48(sp)
--    4532:	f04a                	sd	s2,32(sp)
--    4534:	0080                	addi	s0,sp,64
-+    44cc:	7139                	add	sp,sp,-64
-+    44ce:	fc06                	sd	ra,56(sp)
-+    44d0:	f822                	sd	s0,48(sp)
-+    44d2:	f426                	sd	s1,40(sp)
-+    44d4:	f04a                	sd	s2,32(sp)
-+    44d6:	ec4e                	sd	s3,24(sp)
-+    44d8:	e852                	sd	s4,16(sp)
-+    44da:	e456                	sd	s5,8(sp)
-+    44dc:	0080                	add	s0,sp,64
-   for (struct test *t = tests; t->s != 0; t++) {
--    4536:	00853903          	ld	s2,8(a0)
--    453a:	06090463          	beqz	s2,45a2 <runtests+0x76>
--    453e:	f426                	sd	s1,40(sp)
--    4540:	ec4e                	sd	s3,24(sp)
--    4542:	e852                	sd	s4,16(sp)
--    4544:	e456                	sd	s5,8(sp)
--    4546:	84aa                	mv	s1,a0
--    4548:	89ae                	mv	s3,a1
--    454a:	8a32                	mv	s4,a2
-+    44de:	00853903          	ld	s2,8(a0)
-+    44e2:	04090c63          	beqz	s2,453a <runtests+0x6e>
-+    44e6:	84aa                	mv	s1,a0
-+    44e8:	89ae                	mv	s3,a1
-+    44ea:	8a32                	mv	s4,a2
-     if((justone == 0) || strcmp(t->s, justone) == 0) {
-       if(!run(t->f, t->s)){
-         if(continuous != 2){
--    454c:	4a89                	li	s5,2
--    454e:	a031                	j	455a <runtests+0x2e>
-+    44ec:	4a89                	li	s5,2
-+    44ee:	a031                	j	44fa <runtests+0x2e>
-   for (struct test *t = tests; t->s != 0; t++) {
--    4550:	04c1                	addi	s1,s1,16
--    4552:	0084b903          	ld	s2,8(s1)
--    4556:	02090c63          	beqz	s2,458e <runtests+0x62>
-+    44f0:	04c1                	add	s1,s1,16
-+    44f2:	0084b903          	ld	s2,8(s1)
-+    44f6:	02090863          	beqz	s2,4526 <runtests+0x5a>
-     if((justone == 0) || strcmp(t->s, justone) == 0) {
--    455a:	00098763          	beqz	s3,4568 <runtests+0x3c>
--    455e:	85ce                	mv	a1,s3
--    4560:	854a                	mv	a0,s2
--    4562:	2e2000ef          	jal	4844 <strcmp>
--    4566:	f56d                	bnez	a0,4550 <runtests+0x24>
-+    44fa:	00098763          	beqz	s3,4508 <runtests+0x3c>
-+    44fe:	85ce                	mv	a1,s3
-+    4500:	854a                	mv	a0,s2
-+    4502:	2cc000ef          	jal	47ce <strcmp>
-+    4506:	f56d                	bnez	a0,44f0 <runtests+0x24>
-       if(!run(t->f, t->s)){
--    4568:	85ca                	mv	a1,s2
--    456a:	6088                	ld	a0,0(s1)
--    456c:	f43ff0ef          	jal	44ae <run>
--    4570:	f165                	bnez	a0,4550 <runtests+0x24>
-+    4508:	85ca                	mv	a1,s2
-+    450a:	6088                	ld	a0,0(s1)
-+    450c:	f43ff0ef          	jal	444e <run>
-+    4510:	f165                	bnez	a0,44f0 <runtests+0x24>
-         if(continuous != 2){
--    4572:	fd5a0fe3          	beq	s4,s5,4550 <runtests+0x24>
-+    4512:	fd5a0fe3          	beq	s4,s5,44f0 <runtests+0x24>
-           printf("SOME TESTS FAILED\n");
--    4576:	00003517          	auipc	a0,0x3
--    457a:	9d250513          	addi	a0,a0,-1582 # 6f48 <malloc+0x1ffc>
--    457e:	11b000ef          	jal	4e98 <printf>
-+    4516:	00003517          	auipc	a0,0x3
-+    451a:	9a250513          	add	a0,a0,-1630 # 6eb8 <malloc+0x1fe0>
-+    451e:	107000ef          	jal	4e24 <printf>
-           return 1;
--    4582:	4505                	li	a0,1
--    4584:	74a2                	ld	s1,40(sp)
--    4586:	69e2                	ld	s3,24(sp)
--    4588:	6a42                	ld	s4,16(sp)
--    458a:	6aa2                	ld	s5,8(sp)
--    458c:	a031                	j	4598 <runtests+0x6c>
-+    4522:	4505                	li	a0,1
-+    4524:	a011                	j	4528 <runtests+0x5c>
-         }
-       }
-     }
-   }
-   return 0;
--    458e:	4501                	li	a0,0
--    4590:	74a2                	ld	s1,40(sp)
--    4592:	69e2                	ld	s3,24(sp)
--    4594:	6a42                	ld	s4,16(sp)
--    4596:	6aa2                	ld	s5,8(sp)
-+    4526:	4501                	li	a0,0
- }
--    4598:	70e2                	ld	ra,56(sp)
--    459a:	7442                	ld	s0,48(sp)
--    459c:	7902                	ld	s2,32(sp)
--    459e:	6121                	addi	sp,sp,64
--    45a0:	8082                	ret
-+    4528:	70e2                	ld	ra,56(sp)
-+    452a:	7442                	ld	s0,48(sp)
-+    452c:	74a2                	ld	s1,40(sp)
-+    452e:	7902                	ld	s2,32(sp)
-+    4530:	69e2                	ld	s3,24(sp)
-+    4532:	6a42                	ld	s4,16(sp)
-+    4534:	6aa2                	ld	s5,8(sp)
-+    4536:	6121                	add	sp,sp,64
-+    4538:	8082                	ret
-   return 0;
--    45a2:	4501                	li	a0,0
--    45a4:	bfd5                	j	4598 <runtests+0x6c>
-+    453a:	4501                	li	a0,0
-+    453c:	b7f5                	j	4528 <runtests+0x5c>
- 
--00000000000045a6 <countfree>:
-+000000000000453e <countfree>:
- /* because out of memory with lazy allocation results in the process */
- /* taking a fault and being killed, fork and report back. */
- /* */
- int
- countfree()
- {
--    45a6:	7139                	addi	sp,sp,-64
--    45a8:	fc06                	sd	ra,56(sp)
--    45aa:	f822                	sd	s0,48(sp)
--    45ac:	0080                	addi	s0,sp,64
-+    453e:	7139                	add	sp,sp,-64
-+    4540:	fc06                	sd	ra,56(sp)
-+    4542:	f822                	sd	s0,48(sp)
-+    4544:	f426                	sd	s1,40(sp)
-+    4546:	f04a                	sd	s2,32(sp)
-+    4548:	ec4e                	sd	s3,24(sp)
-+    454a:	0080                	add	s0,sp,64
-   int fds[2];
- 
-   if(pipe(fds) < 0){
--    45ae:	fc840513          	addi	a0,s0,-56
--    45b2:	4de000ef          	jal	4a90 <pipe>
--    45b6:	04054e63          	bltz	a0,4612 <countfree+0x6c>
-+    454c:	fc840513          	add	a0,s0,-56
-+    4550:	4ca000ef          	jal	4a1a <pipe>
-+    4554:	04054b63          	bltz	a0,45aa <countfree+0x6c>
-     printf("pipe() failed in countfree()\n");
-     exit(1);
-   }
-   
-   int pid = fork();
--    45ba:	4be000ef          	jal	4a78 <fork>
-+    4558:	4aa000ef          	jal	4a02 <fork>
- 
-   if(pid < 0){
--    45be:	06054663          	bltz	a0,462a <countfree+0x84>
-+    455c:	06054063          	bltz	a0,45bc <countfree+0x7e>
-     printf("fork failed in countfree()\n");
-     exit(1);
-   }
- 
-   if(pid == 0){
--    45c2:	e159                	bnez	a0,4648 <countfree+0xa2>
--    45c4:	f426                	sd	s1,40(sp)
--    45c6:	f04a                	sd	s2,32(sp)
--    45c8:	ec4e                	sd	s3,24(sp)
-+    4560:	e935                	bnez	a0,45d4 <countfree+0x96>
-     close(fds[0]);
--    45ca:	fc842503          	lw	a0,-56(s0)
--    45ce:	4da000ef          	jal	4aa8 <close>
-+    4562:	fc842503          	lw	a0,-56(s0)
-+    4566:	4cc000ef          	jal	4a32 <close>
-     
-     while(1){
-       uint64 a = (uint64) sbrk(4096);
-       if(a == 0xffffffffffffffff){
--    45d2:	597d                	li	s2,-1
-+    456a:	597d                	li	s2,-1
-         break;
-       }
- 
-       /* modify the memory to make sure it's really allocated. */
-       *(char *)(a + 4096 - 1) = 1;
--    45d4:	4485                	li	s1,1
-+    456c:	4485                	li	s1,1
- 
-       /* report back one more page. */
-       if(write(fds[1], "x", 1) != 1){
--    45d6:	00001997          	auipc	s3,0x1
--    45da:	b2298993          	addi	s3,s3,-1246 # 50f8 <malloc+0x1ac>
-+    456e:	00001997          	auipc	s3,0x1
-+    4572:	afa98993          	add	s3,s3,-1286 # 5068 <malloc+0x190>
-       uint64 a = (uint64) sbrk(4096);
--    45de:	6505                	lui	a0,0x1
--    45e0:	528000ef          	jal	4b08 <sbrk>
-+    4576:	6505                	lui	a0,0x1
-+    4578:	51a000ef          	jal	4a92 <sbrk>
-       if(a == 0xffffffffffffffff){
--    45e4:	05250f63          	beq	a0,s2,4642 <countfree+0x9c>
-+    457c:	05250963          	beq	a0,s2,45ce <countfree+0x90>
-       *(char *)(a + 4096 - 1) = 1;
--    45e8:	6785                	lui	a5,0x1
--    45ea:	97aa                	add	a5,a5,a0
--    45ec:	fe978fa3          	sb	s1,-1(a5) # fff <pgbug+0x2b>
-+    4580:	6785                	lui	a5,0x1
-+    4582:	97aa                	add	a5,a5,a0
-+    4584:	fe978fa3          	sb	s1,-1(a5) # fff <pgbug+0x2b>
-       if(write(fds[1], "x", 1) != 1){
--    45f0:	8626                	mv	a2,s1
--    45f2:	85ce                	mv	a1,s3
--    45f4:	fcc42503          	lw	a0,-52(s0)
--    45f8:	4a8000ef          	jal	4aa0 <write>
--    45fc:	fe9501e3          	beq	a0,s1,45de <countfree+0x38>
-+    4588:	8626                	mv	a2,s1
-+    458a:	85ce                	mv	a1,s3
-+    458c:	fcc42503          	lw	a0,-52(s0)
-+    4590:	49a000ef          	jal	4a2a <write>
-+    4594:	fe9501e3          	beq	a0,s1,4576 <countfree+0x38>
-         printf("write() failed in countfree()\n");
--    4600:	00003517          	auipc	a0,0x3
--    4604:	9a050513          	addi	a0,a0,-1632 # 6fa0 <malloc+0x2054>
--    4608:	091000ef          	jal	4e98 <printf>
-+    4598:	00003517          	auipc	a0,0x3
-+    459c:	97850513          	add	a0,a0,-1672 # 6f10 <malloc+0x2038>
-+    45a0:	085000ef          	jal	4e24 <printf>
-         exit(1);
--    460c:	4505                	li	a0,1
--    460e:	472000ef          	jal	4a80 <exit>
--    4612:	f426                	sd	s1,40(sp)
--    4614:	f04a                	sd	s2,32(sp)
--    4616:	ec4e                	sd	s3,24(sp)
-+    45a4:	4505                	li	a0,1
-+    45a6:	464000ef          	jal	4a0a <exit>
-     printf("pipe() failed in countfree()\n");
--    4618:	00003517          	auipc	a0,0x3
--    461c:	94850513          	addi	a0,a0,-1720 # 6f60 <malloc+0x2014>
--    4620:	079000ef          	jal	4e98 <printf>
--    exit(1);
--    4624:	4505                	li	a0,1
--    4626:	45a000ef          	jal	4a80 <exit>
--    462a:	f426                	sd	s1,40(sp)
--    462c:	f04a                	sd	s2,32(sp)
--    462e:	ec4e                	sd	s3,24(sp)
-+    45aa:	00003517          	auipc	a0,0x3
-+    45ae:	92650513          	add	a0,a0,-1754 # 6ed0 <malloc+0x1ff8>
-+    45b2:	073000ef          	jal	4e24 <printf>
-+    exit(1);
-+    45b6:	4505                	li	a0,1
-+    45b8:	452000ef          	jal	4a0a <exit>
-     printf("fork failed in countfree()\n");
--    4630:	00003517          	auipc	a0,0x3
--    4634:	95050513          	addi	a0,a0,-1712 # 6f80 <malloc+0x2034>
--    4638:	061000ef          	jal	4e98 <printf>
-+    45bc:	00003517          	auipc	a0,0x3
-+    45c0:	93450513          	add	a0,a0,-1740 # 6ef0 <malloc+0x2018>
-+    45c4:	061000ef          	jal	4e24 <printf>
-     exit(1);
--    463c:	4505                	li	a0,1
--    463e:	442000ef          	jal	4a80 <exit>
-+    45c8:	4505                	li	a0,1
-+    45ca:	440000ef          	jal	4a0a <exit>
-       }
-     }
- 
-     exit(0);
--    4642:	4501                	li	a0,0
--    4644:	43c000ef          	jal	4a80 <exit>
--    4648:	f426                	sd	s1,40(sp)
-+    45ce:	4501                	li	a0,0
-+    45d0:	43a000ef          	jal	4a0a <exit>
-   }
- 
-   close(fds[1]);
--    464a:	fcc42503          	lw	a0,-52(s0)
--    464e:	45a000ef          	jal	4aa8 <close>
-+    45d4:	fcc42503          	lw	a0,-52(s0)
-+    45d8:	45a000ef          	jal	4a32 <close>
- 
-   int n = 0;
--    4652:	4481                	li	s1,0
-+    45dc:	4481                	li	s1,0
-   while(1){
-     char c;
-     int cc = read(fds[0], &c, 1);
--    4654:	4605                	li	a2,1
--    4656:	fc740593          	addi	a1,s0,-57
--    465a:	fc842503          	lw	a0,-56(s0)
--    465e:	43a000ef          	jal	4a98 <read>
-+    45de:	4605                	li	a2,1
-+    45e0:	fc740593          	add	a1,s0,-57
-+    45e4:	fc842503          	lw	a0,-56(s0)
-+    45e8:	43a000ef          	jal	4a22 <read>
-     if(cc < 0){
--    4662:	00054563          	bltz	a0,466c <countfree+0xc6>
-+    45ec:	00054563          	bltz	a0,45f6 <countfree+0xb8>
-       printf("read() failed in countfree()\n");
-       exit(1);
-     }
-     if(cc == 0)
--    4666:	cd11                	beqz	a0,4682 <countfree+0xdc>
-+    45f0:	cd01                	beqz	a0,4608 <countfree+0xca>
-       break;
-     n += 1;
--    4668:	2485                	addiw	s1,s1,1
-+    45f2:	2485                	addw	s1,s1,1
-   while(1){
--    466a:	b7ed                	j	4654 <countfree+0xae>
--    466c:	f04a                	sd	s2,32(sp)
--    466e:	ec4e                	sd	s3,24(sp)
-+    45f4:	b7ed                	j	45de <countfree+0xa0>
-       printf("read() failed in countfree()\n");
--    4670:	00003517          	auipc	a0,0x3
--    4674:	95050513          	addi	a0,a0,-1712 # 6fc0 <malloc+0x2074>
--    4678:	021000ef          	jal	4e98 <printf>
-+    45f6:	00003517          	auipc	a0,0x3
-+    45fa:	93a50513          	add	a0,a0,-1734 # 6f30 <malloc+0x2058>
-+    45fe:	027000ef          	jal	4e24 <printf>
-       exit(1);
--    467c:	4505                	li	a0,1
--    467e:	402000ef          	jal	4a80 <exit>
-+    4602:	4505                	li	a0,1
-+    4604:	406000ef          	jal	4a0a <exit>
-   }
- 
-   close(fds[0]);
--    4682:	fc842503          	lw	a0,-56(s0)
--    4686:	422000ef          	jal	4aa8 <close>
-+    4608:	fc842503          	lw	a0,-56(s0)
-+    460c:	426000ef          	jal	4a32 <close>
-   wait((int*)0);
--    468a:	4501                	li	a0,0
--    468c:	3fc000ef          	jal	4a88 <wait>
-+    4610:	4501                	li	a0,0
-+    4612:	400000ef          	jal	4a12 <wait>
-   
-   return n;
- }
--    4690:	8526                	mv	a0,s1
--    4692:	74a2                	ld	s1,40(sp)
--    4694:	70e2                	ld	ra,56(sp)
--    4696:	7442                	ld	s0,48(sp)
--    4698:	6121                	addi	sp,sp,64
--    469a:	8082                	ret
-+    4616:	8526                	mv	a0,s1
-+    4618:	70e2                	ld	ra,56(sp)
-+    461a:	7442                	ld	s0,48(sp)
-+    461c:	74a2                	ld	s1,40(sp)
-+    461e:	7902                	ld	s2,32(sp)
-+    4620:	69e2                	ld	s3,24(sp)
-+    4622:	6121                	add	sp,sp,64
-+    4624:	8082                	ret
- 
--000000000000469c <drivetests>:
-+0000000000004626 <drivetests>:
- 
- int
- drivetests(int quick, int continuous, char *justone) {
--    469c:	711d                	addi	sp,sp,-96
--    469e:	ec86                	sd	ra,88(sp)
--    46a0:	e8a2                	sd	s0,80(sp)
--    46a2:	e4a6                	sd	s1,72(sp)
--    46a4:	e0ca                	sd	s2,64(sp)
--    46a6:	fc4e                	sd	s3,56(sp)
--    46a8:	f852                	sd	s4,48(sp)
--    46aa:	f456                	sd	s5,40(sp)
--    46ac:	f05a                	sd	s6,32(sp)
--    46ae:	ec5e                	sd	s7,24(sp)
--    46b0:	e862                	sd	s8,16(sp)
--    46b2:	e466                	sd	s9,8(sp)
--    46b4:	e06a                	sd	s10,0(sp)
--    46b6:	1080                	addi	s0,sp,96
--    46b8:	8aaa                	mv	s5,a0
--    46ba:	892e                	mv	s2,a1
--    46bc:	89b2                	mv	s3,a2
-+    4626:	711d                	add	sp,sp,-96
-+    4628:	ec86                	sd	ra,88(sp)
-+    462a:	e8a2                	sd	s0,80(sp)
-+    462c:	e4a6                	sd	s1,72(sp)
-+    462e:	e0ca                	sd	s2,64(sp)
-+    4630:	fc4e                	sd	s3,56(sp)
-+    4632:	f852                	sd	s4,48(sp)
-+    4634:	f456                	sd	s5,40(sp)
-+    4636:	f05a                	sd	s6,32(sp)
-+    4638:	ec5e                	sd	s7,24(sp)
-+    463a:	e862                	sd	s8,16(sp)
-+    463c:	e466                	sd	s9,8(sp)
-+    463e:	e06a                	sd	s10,0(sp)
-+    4640:	1080                	add	s0,sp,96
-+    4642:	8aaa                	mv	s5,a0
-+    4644:	892e                	mv	s2,a1
-+    4646:	89b2                	mv	s3,a2
-   do {
-     printf("usertests starting\n");
--    46be:	00003b97          	auipc	s7,0x3
--    46c2:	922b8b93          	addi	s7,s7,-1758 # 6fe0 <malloc+0x2094>
-+    4648:	00003b97          	auipc	s7,0x3
-+    464c:	908b8b93          	add	s7,s7,-1784 # 6f50 <malloc+0x2078>
-     int free0 = countfree();
-     int free1 = 0;
-     if (runtests(quicktests, justone, continuous)) {
--    46c6:	00005b17          	auipc	s6,0x5
--    46ca:	94ab0b13          	addi	s6,s6,-1718 # 9010 <quicktests>
-+    4650:	00004b17          	auipc	s6,0x4
-+    4654:	9c0b0b13          	add	s6,s6,-1600 # 8010 <quicktests>
-       if(continuous != 2) {
--    46ce:	4a09                	li	s4,2
-+    4658:	4a09                	li	s4,2
-       }
-     }
-     if(!quick) {
-       if (justone == 0)
-         printf("usertests slow tests starting\n");
-       if (runtests(slowtests, justone, continuous)) {
--    46d0:	00005c17          	auipc	s8,0x5
--    46d4:	d10c0c13          	addi	s8,s8,-752 # 93e0 <slowtests>
-+    465a:	00004c17          	auipc	s8,0x4
-+    465e:	d86c0c13          	add	s8,s8,-634 # 83e0 <slowtests>
-         printf("usertests slow tests starting\n");
--    46d8:	00003d17          	auipc	s10,0x3
--    46dc:	920d0d13          	addi	s10,s10,-1760 # 6ff8 <malloc+0x20ac>
-+    4662:	00003d17          	auipc	s10,0x3
-+    4666:	906d0d13          	add	s10,s10,-1786 # 6f68 <malloc+0x2090>
-           return 1;
-         }
-       }
-     }
-     if((free1 = countfree()) < free0) {
-       printf("FAILED -- lost some free pages %d (out of %d)\n", free1, free0);
--    46e0:	00003c97          	auipc	s9,0x3
--    46e4:	938c8c93          	addi	s9,s9,-1736 # 7018 <malloc+0x20cc>
--    46e8:	a819                	j	46fe <drivetests+0x62>
-+    466a:	00003c97          	auipc	s9,0x3
-+    466e:	91ec8c93          	add	s9,s9,-1762 # 6f88 <malloc+0x20b0>
-+    4672:	a819                	j	4688 <drivetests+0x62>
-         printf("usertests slow tests starting\n");
--    46ea:	856a                	mv	a0,s10
--    46ec:	7ac000ef          	jal	4e98 <printf>
--    46f0:	a80d                	j	4722 <drivetests+0x86>
-+    4674:	856a                	mv	a0,s10
-+    4676:	7ae000ef          	jal	4e24 <printf>
-+    467a:	a80d                	j	46ac <drivetests+0x86>
-     if((free1 = countfree()) < free0) {
--    46f2:	eb5ff0ef          	jal	45a6 <countfree>
--    46f6:	04954063          	blt	a0,s1,4736 <drivetests+0x9a>
-+    467c:	ec3ff0ef          	jal	453e <countfree>
-+    4680:	04954063          	blt	a0,s1,46c0 <drivetests+0x9a>
-       if(continuous != 2) {
-         return 1;
-       }
-     }
-   } while(continuous);
--    46fa:	04090963          	beqz	s2,474c <drivetests+0xb0>
-+    4684:	04090963          	beqz	s2,46d6 <drivetests+0xb0>
-     printf("usertests starting\n");
--    46fe:	855e                	mv	a0,s7
--    4700:	798000ef          	jal	4e98 <printf>
-+    4688:	855e                	mv	a0,s7
-+    468a:	79a000ef          	jal	4e24 <printf>
-     int free0 = countfree();
--    4704:	ea3ff0ef          	jal	45a6 <countfree>
--    4708:	84aa                	mv	s1,a0
-+    468e:	eb1ff0ef          	jal	453e <countfree>
-+    4692:	84aa                	mv	s1,a0
-     if (runtests(quicktests, justone, continuous)) {
--    470a:	864a                	mv	a2,s2
--    470c:	85ce                	mv	a1,s3
--    470e:	855a                	mv	a0,s6
--    4710:	e1dff0ef          	jal	452c <runtests>
--    4714:	c119                	beqz	a0,471a <drivetests+0x7e>
-+    4694:	864a                	mv	a2,s2
-+    4696:	85ce                	mv	a1,s3
-+    4698:	855a                	mv	a0,s6
-+    469a:	e33ff0ef          	jal	44cc <runtests>
-+    469e:	c119                	beqz	a0,46a4 <drivetests+0x7e>
-       if(continuous != 2) {
--    4716:	03491963          	bne	s2,s4,4748 <drivetests+0xac>
-+    46a0:	03491963          	bne	s2,s4,46d2 <drivetests+0xac>
-     if(!quick) {
--    471a:	fc0a9ce3          	bnez	s5,46f2 <drivetests+0x56>
-+    46a4:	fc0a9ce3          	bnez	s5,467c <drivetests+0x56>
-       if (justone == 0)
--    471e:	fc0986e3          	beqz	s3,46ea <drivetests+0x4e>
-+    46a8:	fc0986e3          	beqz	s3,4674 <drivetests+0x4e>
-       if (runtests(slowtests, justone, continuous)) {
--    4722:	864a                	mv	a2,s2
--    4724:	85ce                	mv	a1,s3
--    4726:	8562                	mv	a0,s8
--    4728:	e05ff0ef          	jal	452c <runtests>
--    472c:	d179                	beqz	a0,46f2 <drivetests+0x56>
-+    46ac:	864a                	mv	a2,s2
-+    46ae:	85ce                	mv	a1,s3
-+    46b0:	8562                	mv	a0,s8
-+    46b2:	e1bff0ef          	jal	44cc <runtests>
-+    46b6:	d179                	beqz	a0,467c <drivetests+0x56>
-         if(continuous != 2) {
--    472e:	fd4902e3          	beq	s2,s4,46f2 <drivetests+0x56>
-+    46b8:	fd4902e3          	beq	s2,s4,467c <drivetests+0x56>
-           return 1;
--    4732:	4505                	li	a0,1
--    4734:	a829                	j	474e <drivetests+0xb2>
-+    46bc:	4505                	li	a0,1
-+    46be:	a829                	j	46d8 <drivetests+0xb2>
-       printf("FAILED -- lost some free pages %d (out of %d)\n", free1, free0);
--    4736:	8626                	mv	a2,s1
--    4738:	85aa                	mv	a1,a0
--    473a:	8566                	mv	a0,s9
--    473c:	75c000ef          	jal	4e98 <printf>
-+    46c0:	8626                	mv	a2,s1
-+    46c2:	85aa                	mv	a1,a0
-+    46c4:	8566                	mv	a0,s9
-+    46c6:	75e000ef          	jal	4e24 <printf>
-       if(continuous != 2) {
--    4740:	fb490fe3          	beq	s2,s4,46fe <drivetests+0x62>
-+    46ca:	fb490fe3          	beq	s2,s4,4688 <drivetests+0x62>
-         return 1;
--    4744:	4505                	li	a0,1
--    4746:	a021                	j	474e <drivetests+0xb2>
-+    46ce:	4505                	li	a0,1
-+    46d0:	a021                	j	46d8 <drivetests+0xb2>
-         return 1;
--    4748:	4505                	li	a0,1
--    474a:	a011                	j	474e <drivetests+0xb2>
-+    46d2:	4505                	li	a0,1
-+    46d4:	a011                	j	46d8 <drivetests+0xb2>
-   return 0;
--    474c:	854a                	mv	a0,s2
-+    46d6:	854a                	mv	a0,s2
- }
--    474e:	60e6                	ld	ra,88(sp)
--    4750:	6446                	ld	s0,80(sp)
--    4752:	64a6                	ld	s1,72(sp)
--    4754:	6906                	ld	s2,64(sp)
--    4756:	79e2                	ld	s3,56(sp)
--    4758:	7a42                	ld	s4,48(sp)
--    475a:	7aa2                	ld	s5,40(sp)
--    475c:	7b02                	ld	s6,32(sp)
--    475e:	6be2                	ld	s7,24(sp)
--    4760:	6c42                	ld	s8,16(sp)
--    4762:	6ca2                	ld	s9,8(sp)
--    4764:	6d02                	ld	s10,0(sp)
--    4766:	6125                	addi	sp,sp,96
--    4768:	8082                	ret
--
--000000000000476a <main>:
-+    46d8:	60e6                	ld	ra,88(sp)
-+    46da:	6446                	ld	s0,80(sp)
-+    46dc:	64a6                	ld	s1,72(sp)
-+    46de:	6906                	ld	s2,64(sp)
-+    46e0:	79e2                	ld	s3,56(sp)
-+    46e2:	7a42                	ld	s4,48(sp)
-+    46e4:	7aa2                	ld	s5,40(sp)
-+    46e6:	7b02                	ld	s6,32(sp)
-+    46e8:	6be2                	ld	s7,24(sp)
-+    46ea:	6c42                	ld	s8,16(sp)
-+    46ec:	6ca2                	ld	s9,8(sp)
-+    46ee:	6d02                	ld	s10,0(sp)
-+    46f0:	6125                	add	sp,sp,96
-+    46f2:	8082                	ret
-+
-+00000000000046f4 <main>:
- 
- int
- main(int argc, char *argv[])
- {
--    476a:	1101                	addi	sp,sp,-32
--    476c:	ec06                	sd	ra,24(sp)
--    476e:	e822                	sd	s0,16(sp)
--    4770:	e426                	sd	s1,8(sp)
--    4772:	e04a                	sd	s2,0(sp)
--    4774:	1000                	addi	s0,sp,32
--    4776:	84aa                	mv	s1,a0
-+    46f4:	1101                	add	sp,sp,-32
-+    46f6:	ec06                	sd	ra,24(sp)
-+    46f8:	e822                	sd	s0,16(sp)
-+    46fa:	e426                	sd	s1,8(sp)
-+    46fc:	e04a                	sd	s2,0(sp)
-+    46fe:	1000                	add	s0,sp,32
-+    4700:	84aa                	mv	s1,a0
-   int continuous = 0;
-   int quick = 0;
-   char *justone = 0;
- 
-   if(argc == 2 && strcmp(argv[1], "-q") == 0){
--    4778:	4789                	li	a5,2
--    477a:	00f50f63          	beq	a0,a5,4798 <main+0x2e>
-+    4702:	4789                	li	a5,2
-+    4704:	00f50f63          	beq	a0,a5,4722 <main+0x2e>
-     continuous = 1;
-   } else if(argc == 2 && strcmp(argv[1], "-C") == 0){
-     continuous = 2;
-   } else if(argc == 2 && argv[1][0] != '-'){
-     justone = argv[1];
-   } else if(argc > 1){
--    477e:	4785                	li	a5,1
--    4780:	06a7c063          	blt	a5,a0,47e0 <main+0x76>
-+    4708:	4785                	li	a5,1
-+    470a:	06a7c063          	blt	a5,a0,476a <main+0x76>
-   char *justone = 0;
--    4784:	4901                	li	s2,0
-+    470e:	4901                	li	s2,0
-   int quick = 0;
--    4786:	4501                	li	a0,0
-+    4710:	4501                	li	a0,0
-   int continuous = 0;
--    4788:	4581                	li	a1,0
-+    4712:	4581                	li	a1,0
-     printf("Usage: usertests [-c] [-C] [-q] [testname]\n");
-     exit(1);
-   }
-   if (drivetests(quick, continuous, justone)) {
--    478a:	864a                	mv	a2,s2
--    478c:	f11ff0ef          	jal	469c <drivetests>
--    4790:	c935                	beqz	a0,4804 <main+0x9a>
-+    4714:	864a                	mv	a2,s2
-+    4716:	f11ff0ef          	jal	4626 <drivetests>
-+    471a:	c935                	beqz	a0,478e <main+0x9a>
-     exit(1);
--    4792:	4505                	li	a0,1
--    4794:	2ec000ef          	jal	4a80 <exit>
-+    471c:	4505                	li	a0,1
-+    471e:	2ec000ef          	jal	4a0a <exit>
-   if(argc == 2 && strcmp(argv[1], "-q") == 0){
--    4798:	0085b903          	ld	s2,8(a1)
--    479c:	00003597          	auipc	a1,0x3
--    47a0:	8ac58593          	addi	a1,a1,-1876 # 7048 <malloc+0x20fc>
--    47a4:	854a                	mv	a0,s2
--    47a6:	09e000ef          	jal	4844 <strcmp>
--    47aa:	85aa                	mv	a1,a0
--    47ac:	c139                	beqz	a0,47f2 <main+0x88>
-+    4722:	0085b903          	ld	s2,8(a1)
-+    4726:	00003597          	auipc	a1,0x3
-+    472a:	89258593          	add	a1,a1,-1902 # 6fb8 <malloc+0x20e0>
-+    472e:	854a                	mv	a0,s2
-+    4730:	09e000ef          	jal	47ce <strcmp>
-+    4734:	85aa                	mv	a1,a0
-+    4736:	c139                	beqz	a0,477c <main+0x88>
-   } else if(argc == 2 && strcmp(argv[1], "-c") == 0){
--    47ae:	00003597          	auipc	a1,0x3
--    47b2:	8a258593          	addi	a1,a1,-1886 # 7050 <malloc+0x2104>
--    47b6:	854a                	mv	a0,s2
--    47b8:	08c000ef          	jal	4844 <strcmp>
--    47bc:	cd15                	beqz	a0,47f8 <main+0x8e>
-+    4738:	00003597          	auipc	a1,0x3
-+    473c:	88858593          	add	a1,a1,-1912 # 6fc0 <malloc+0x20e8>
-+    4740:	854a                	mv	a0,s2
-+    4742:	08c000ef          	jal	47ce <strcmp>
-+    4746:	cd15                	beqz	a0,4782 <main+0x8e>
-   } else if(argc == 2 && strcmp(argv[1], "-C") == 0){
--    47be:	00003597          	auipc	a1,0x3
--    47c2:	89a58593          	addi	a1,a1,-1894 # 7058 <malloc+0x210c>
--    47c6:	854a                	mv	a0,s2
--    47c8:	07c000ef          	jal	4844 <strcmp>
--    47cc:	c90d                	beqz	a0,47fe <main+0x94>
-+    4748:	00003597          	auipc	a1,0x3
-+    474c:	88058593          	add	a1,a1,-1920 # 6fc8 <malloc+0x20f0>
-+    4750:	854a                	mv	a0,s2
-+    4752:	07c000ef          	jal	47ce <strcmp>
-+    4756:	c90d                	beqz	a0,4788 <main+0x94>
-   } else if(argc == 2 && argv[1][0] != '-'){
--    47ce:	00094703          	lbu	a4,0(s2)
--    47d2:	02d00793          	li	a5,45
--    47d6:	00f70563          	beq	a4,a5,47e0 <main+0x76>
-+    4758:	00094703          	lbu	a4,0(s2)
-+    475c:	02d00793          	li	a5,45
-+    4760:	00f70563          	beq	a4,a5,476a <main+0x76>
-   int quick = 0;
--    47da:	4501                	li	a0,0
-+    4764:	4501                	li	a0,0
-   int continuous = 0;
--    47dc:	4581                	li	a1,0
--    47de:	b775                	j	478a <main+0x20>
-+    4766:	4581                	li	a1,0
-+    4768:	b775                	j	4714 <main+0x20>
-     printf("Usage: usertests [-c] [-C] [-q] [testname]\n");
--    47e0:	00003517          	auipc	a0,0x3
--    47e4:	88050513          	addi	a0,a0,-1920 # 7060 <malloc+0x2114>
--    47e8:	6b0000ef          	jal	4e98 <printf>
-+    476a:	00003517          	auipc	a0,0x3
-+    476e:	86650513          	add	a0,a0,-1946 # 6fd0 <malloc+0x20f8>
-+    4772:	6b2000ef          	jal	4e24 <printf>
-     exit(1);
--    47ec:	4505                	li	a0,1
--    47ee:	292000ef          	jal	4a80 <exit>
-+    4776:	4505                	li	a0,1
-+    4778:	292000ef          	jal	4a0a <exit>
-   char *justone = 0;
--    47f2:	4901                	li	s2,0
-+    477c:	4901                	li	s2,0
-     quick = 1;
--    47f4:	4505                	li	a0,1
--    47f6:	bf51                	j	478a <main+0x20>
-+    477e:	4505                	li	a0,1
-+    4780:	bf51                	j	4714 <main+0x20>
-   char *justone = 0;
--    47f8:	4901                	li	s2,0
-+    4782:	4901                	li	s2,0
-     continuous = 1;
--    47fa:	4585                	li	a1,1
--    47fc:	b779                	j	478a <main+0x20>
-+    4784:	4585                	li	a1,1
-+    4786:	b779                	j	4714 <main+0x20>
-     continuous = 2;
--    47fe:	85a6                	mv	a1,s1
-+    4788:	85a6                	mv	a1,s1
-   char *justone = 0;
--    4800:	4901                	li	s2,0
--    4802:	b761                	j	478a <main+0x20>
-+    478a:	4901                	li	s2,0
-+    478c:	b761                	j	4714 <main+0x20>
-   }
-   printf("ALL TESTS PASSED\n");
--    4804:	00003517          	auipc	a0,0x3
--    4808:	88c50513          	addi	a0,a0,-1908 # 7090 <malloc+0x2144>
--    480c:	68c000ef          	jal	4e98 <printf>
-+    478e:	00003517          	auipc	a0,0x3
-+    4792:	87250513          	add	a0,a0,-1934 # 7000 <malloc+0x2128>
-+    4796:	68e000ef          	jal	4e24 <printf>
-   exit(0);
--    4810:	4501                	li	a0,0
--    4812:	26e000ef          	jal	4a80 <exit>
-+    479a:	4501                	li	a0,0
-+    479c:	26e000ef          	jal	4a0a <exit>
- 
--0000000000004816 <start>:
-+00000000000047a0 <start>:
- /* */
- /* wrapper so that it's OK if main() does not call exit(). */
- /* */
- void
- start()
- {
--    4816:	1141                	addi	sp,sp,-16
--    4818:	e406                	sd	ra,8(sp)
--    481a:	e022                	sd	s0,0(sp)
--    481c:	0800                	addi	s0,sp,16
-+    47a0:	1141                	add	sp,sp,-16
-+    47a2:	e406                	sd	ra,8(sp)
-+    47a4:	e022                	sd	s0,0(sp)
-+    47a6:	0800                	add	s0,sp,16
-   extern int main();
-   main();
--    481e:	f4dff0ef          	jal	476a <main>
-+    47a8:	f4dff0ef          	jal	46f4 <main>
-   exit(0);
--    4822:	4501                	li	a0,0
--    4824:	25c000ef          	jal	4a80 <exit>
-+    47ac:	4501                	li	a0,0
-+    47ae:	25c000ef          	jal	4a0a <exit>
- 
--0000000000004828 <strcpy>:
-+00000000000047b2 <strcpy>:
- }
- 
- char*
- strcpy(char *s, const char *t)
- {
--    4828:	1141                	addi	sp,sp,-16
--    482a:	e422                	sd	s0,8(sp)
--    482c:	0800                	addi	s0,sp,16
-+    47b2:	1141                	add	sp,sp,-16
-+    47b4:	e422                	sd	s0,8(sp)
-+    47b6:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
--    482e:	87aa                	mv	a5,a0
--    4830:	0585                	addi	a1,a1,1
--    4832:	0785                	addi	a5,a5,1
--    4834:	fff5c703          	lbu	a4,-1(a1)
--    4838:	fee78fa3          	sb	a4,-1(a5)
--    483c:	fb75                	bnez	a4,4830 <strcpy+0x8>
-+    47b8:	87aa                	mv	a5,a0
-+    47ba:	0585                	add	a1,a1,1
-+    47bc:	0785                	add	a5,a5,1
-+    47be:	fff5c703          	lbu	a4,-1(a1)
-+    47c2:	fee78fa3          	sb	a4,-1(a5)
-+    47c6:	fb75                	bnez	a4,47ba <strcpy+0x8>
-     ;
-   return os;
- }
--    483e:	6422                	ld	s0,8(sp)
--    4840:	0141                	addi	sp,sp,16
--    4842:	8082                	ret
-+    47c8:	6422                	ld	s0,8(sp)
-+    47ca:	0141                	add	sp,sp,16
-+    47cc:	8082                	ret
- 
--0000000000004844 <strcmp>:
-+00000000000047ce <strcmp>:
- 
- int
- strcmp(const char *p, const char *q)
- {
--    4844:	1141                	addi	sp,sp,-16
--    4846:	e422                	sd	s0,8(sp)
--    4848:	0800                	addi	s0,sp,16
-+    47ce:	1141                	add	sp,sp,-16
-+    47d0:	e422                	sd	s0,8(sp)
-+    47d2:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
--    484a:	00054783          	lbu	a5,0(a0)
--    484e:	cb91                	beqz	a5,4862 <strcmp+0x1e>
--    4850:	0005c703          	lbu	a4,0(a1)
--    4854:	00f71763          	bne	a4,a5,4862 <strcmp+0x1e>
-+    47d4:	00054783          	lbu	a5,0(a0)
-+    47d8:	cb91                	beqz	a5,47ec <strcmp+0x1e>
-+    47da:	0005c703          	lbu	a4,0(a1)
-+    47de:	00f71763          	bne	a4,a5,47ec <strcmp+0x1e>
-     p++, q++;
--    4858:	0505                	addi	a0,a0,1
--    485a:	0585                	addi	a1,a1,1
-+    47e2:	0505                	add	a0,a0,1
-+    47e4:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
--    485c:	00054783          	lbu	a5,0(a0)
--    4860:	fbe5                	bnez	a5,4850 <strcmp+0xc>
-+    47e6:	00054783          	lbu	a5,0(a0)
-+    47ea:	fbe5                	bnez	a5,47da <strcmp+0xc>
-   return (uchar)*p - (uchar)*q;
--    4862:	0005c503          	lbu	a0,0(a1)
-+    47ec:	0005c503          	lbu	a0,0(a1)
- }
--    4866:	40a7853b          	subw	a0,a5,a0
--    486a:	6422                	ld	s0,8(sp)
--    486c:	0141                	addi	sp,sp,16
--    486e:	8082                	ret
-+    47f0:	40a7853b          	subw	a0,a5,a0
-+    47f4:	6422                	ld	s0,8(sp)
-+    47f6:	0141                	add	sp,sp,16
-+    47f8:	8082                	ret
- 
--0000000000004870 <strlen>:
-+00000000000047fa <strlen>:
- 
- uint
- strlen(const char *s)
- {
--    4870:	1141                	addi	sp,sp,-16
--    4872:	e422                	sd	s0,8(sp)
--    4874:	0800                	addi	s0,sp,16
-+    47fa:	1141                	add	sp,sp,-16
-+    47fc:	e422                	sd	s0,8(sp)
-+    47fe:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
--    4876:	00054783          	lbu	a5,0(a0)
--    487a:	cf91                	beqz	a5,4896 <strlen+0x26>
--    487c:	0505                	addi	a0,a0,1
--    487e:	87aa                	mv	a5,a0
--    4880:	86be                	mv	a3,a5
--    4882:	0785                	addi	a5,a5,1
--    4884:	fff7c703          	lbu	a4,-1(a5)
--    4888:	ff65                	bnez	a4,4880 <strlen+0x10>
--    488a:	40a6853b          	subw	a0,a3,a0
--    488e:	2505                	addiw	a0,a0,1
-+    4800:	00054783          	lbu	a5,0(a0)
-+    4804:	cf91                	beqz	a5,4820 <strlen+0x26>
-+    4806:	0505                	add	a0,a0,1
-+    4808:	87aa                	mv	a5,a0
-+    480a:	86be                	mv	a3,a5
-+    480c:	0785                	add	a5,a5,1
-+    480e:	fff7c703          	lbu	a4,-1(a5)
-+    4812:	ff65                	bnez	a4,480a <strlen+0x10>
-+    4814:	40a6853b          	subw	a0,a3,a0
-+    4818:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
--    4890:	6422                	ld	s0,8(sp)
--    4892:	0141                	addi	sp,sp,16
--    4894:	8082                	ret
-+    481a:	6422                	ld	s0,8(sp)
-+    481c:	0141                	add	sp,sp,16
-+    481e:	8082                	ret
-   for(n = 0; s[n]; n++)
--    4896:	4501                	li	a0,0
--    4898:	bfe5                	j	4890 <strlen+0x20>
-+    4820:	4501                	li	a0,0
-+    4822:	bfe5                	j	481a <strlen+0x20>
- 
--000000000000489a <memset>:
-+0000000000004824 <memset>:
- 
- void*
- memset(void *dst, int c, uint n)
- {
--    489a:	1141                	addi	sp,sp,-16
--    489c:	e422                	sd	s0,8(sp)
--    489e:	0800                	addi	s0,sp,16
-+    4824:	1141                	add	sp,sp,-16
-+    4826:	e422                	sd	s0,8(sp)
-+    4828:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
--    48a0:	ca19                	beqz	a2,48b6 <memset+0x1c>
--    48a2:	87aa                	mv	a5,a0
--    48a4:	1602                	slli	a2,a2,0x20
--    48a6:	9201                	srli	a2,a2,0x20
--    48a8:	00a60733          	add	a4,a2,a0
-+    482a:	ca19                	beqz	a2,4840 <memset+0x1c>
-+    482c:	87aa                	mv	a5,a0
-+    482e:	1602                	sll	a2,a2,0x20
-+    4830:	9201                	srl	a2,a2,0x20
-+    4832:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
--    48ac:	00b78023          	sb	a1,0(a5)
-+    4836:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
--    48b0:	0785                	addi	a5,a5,1
--    48b2:	fee79de3          	bne	a5,a4,48ac <memset+0x12>
-+    483a:	0785                	add	a5,a5,1
-+    483c:	fee79de3          	bne	a5,a4,4836 <memset+0x12>
-   }
-   return dst;
- }
--    48b6:	6422                	ld	s0,8(sp)
--    48b8:	0141                	addi	sp,sp,16
--    48ba:	8082                	ret
-+    4840:	6422                	ld	s0,8(sp)
-+    4842:	0141                	add	sp,sp,16
-+    4844:	8082                	ret
- 
--00000000000048bc <strchr>:
-+0000000000004846 <strchr>:
- 
- char*
- strchr(const char *s, char c)
- {
--    48bc:	1141                	addi	sp,sp,-16
--    48be:	e422                	sd	s0,8(sp)
--    48c0:	0800                	addi	s0,sp,16
-+    4846:	1141                	add	sp,sp,-16
-+    4848:	e422                	sd	s0,8(sp)
-+    484a:	0800                	add	s0,sp,16
-   for(; *s; s++)
--    48c2:	00054783          	lbu	a5,0(a0)
--    48c6:	cb99                	beqz	a5,48dc <strchr+0x20>
-+    484c:	00054783          	lbu	a5,0(a0)
-+    4850:	cb99                	beqz	a5,4866 <strchr+0x20>
-     if(*s == c)
--    48c8:	00f58763          	beq	a1,a5,48d6 <strchr+0x1a>
-+    4852:	00f58763          	beq	a1,a5,4860 <strchr+0x1a>
-   for(; *s; s++)
--    48cc:	0505                	addi	a0,a0,1
--    48ce:	00054783          	lbu	a5,0(a0)
--    48d2:	fbfd                	bnez	a5,48c8 <strchr+0xc>
-+    4856:	0505                	add	a0,a0,1
-+    4858:	00054783          	lbu	a5,0(a0)
-+    485c:	fbfd                	bnez	a5,4852 <strchr+0xc>
-       return (char*)s;
-   return 0;
--    48d4:	4501                	li	a0,0
-+    485e:	4501                	li	a0,0
- }
--    48d6:	6422                	ld	s0,8(sp)
--    48d8:	0141                	addi	sp,sp,16
--    48da:	8082                	ret
-+    4860:	6422                	ld	s0,8(sp)
-+    4862:	0141                	add	sp,sp,16
-+    4864:	8082                	ret
-   return 0;
--    48dc:	4501                	li	a0,0
--    48de:	bfe5                	j	48d6 <strchr+0x1a>
-+    4866:	4501                	li	a0,0
-+    4868:	bfe5                	j	4860 <strchr+0x1a>
- 
--00000000000048e0 <gets>:
-+000000000000486a <gets>:
- 
- char*
- gets(char *buf, int max)
- {
--    48e0:	711d                	addi	sp,sp,-96
--    48e2:	ec86                	sd	ra,88(sp)
--    48e4:	e8a2                	sd	s0,80(sp)
--    48e6:	e4a6                	sd	s1,72(sp)
--    48e8:	e0ca                	sd	s2,64(sp)
--    48ea:	fc4e                	sd	s3,56(sp)
--    48ec:	f852                	sd	s4,48(sp)
--    48ee:	f456                	sd	s5,40(sp)
--    48f0:	f05a                	sd	s6,32(sp)
--    48f2:	ec5e                	sd	s7,24(sp)
--    48f4:	1080                	addi	s0,sp,96
--    48f6:	8baa                	mv	s7,a0
--    48f8:	8a2e                	mv	s4,a1
-+    486a:	711d                	add	sp,sp,-96
-+    486c:	ec86                	sd	ra,88(sp)
-+    486e:	e8a2                	sd	s0,80(sp)
-+    4870:	e4a6                	sd	s1,72(sp)
-+    4872:	e0ca                	sd	s2,64(sp)
-+    4874:	fc4e                	sd	s3,56(sp)
-+    4876:	f852                	sd	s4,48(sp)
-+    4878:	f456                	sd	s5,40(sp)
-+    487a:	f05a                	sd	s6,32(sp)
-+    487c:	ec5e                	sd	s7,24(sp)
-+    487e:	1080                	add	s0,sp,96
-+    4880:	8baa                	mv	s7,a0
-+    4882:	8a2e                	mv	s4,a1
-   int i, cc;
-   char c;
- 
-   for(i=0; i+1 < max; ){
--    48fa:	892a                	mv	s2,a0
--    48fc:	4481                	li	s1,0
-+    4884:	892a                	mv	s2,a0
-+    4886:	4481                	li	s1,0
-     cc = read(0, &c, 1);
-     if(cc < 1)
-       break;
-     buf[i++] = c;
-     if(c == '\n' || c == '\r')
--    48fe:	4aa9                	li	s5,10
--    4900:	4b35                	li	s6,13
-+    4888:	4aa9                	li	s5,10
-+    488a:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
--    4902:	89a6                	mv	s3,s1
--    4904:	2485                	addiw	s1,s1,1
--    4906:	0344d663          	bge	s1,s4,4932 <gets+0x52>
-+    488c:	89a6                	mv	s3,s1
-+    488e:	2485                	addw	s1,s1,1
-+    4890:	0344d663          	bge	s1,s4,48bc <gets+0x52>
-     cc = read(0, &c, 1);
--    490a:	4605                	li	a2,1
--    490c:	faf40593          	addi	a1,s0,-81
--    4910:	4501                	li	a0,0
--    4912:	186000ef          	jal	4a98 <read>
-+    4894:	4605                	li	a2,1
-+    4896:	faf40593          	add	a1,s0,-81
-+    489a:	4501                	li	a0,0
-+    489c:	186000ef          	jal	4a22 <read>
-     if(cc < 1)
--    4916:	00a05e63          	blez	a0,4932 <gets+0x52>
-+    48a0:	00a05e63          	blez	a0,48bc <gets+0x52>
-     buf[i++] = c;
--    491a:	faf44783          	lbu	a5,-81(s0)
--    491e:	00f90023          	sb	a5,0(s2)
-+    48a4:	faf44783          	lbu	a5,-81(s0)
-+    48a8:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
--    4922:	01578763          	beq	a5,s5,4930 <gets+0x50>
--    4926:	0905                	addi	s2,s2,1
--    4928:	fd679de3          	bne	a5,s6,4902 <gets+0x22>
--    buf[i++] = c;
--    492c:	89a6                	mv	s3,s1
--    492e:	a011                	j	4932 <gets+0x52>
--    4930:	89a6                	mv	s3,s1
-+    48ac:	01578763          	beq	a5,s5,48ba <gets+0x50>
-+    48b0:	0905                	add	s2,s2,1
-+    48b2:	fd679de3          	bne	a5,s6,488c <gets+0x22>
-+  for(i=0; i+1 < max; ){
-+    48b6:	89a6                	mv	s3,s1
-+    48b8:	a011                	j	48bc <gets+0x52>
-+    48ba:	89a6                	mv	s3,s1
-       break;
-   }
-   buf[i] = '\0';
--    4932:	99de                	add	s3,s3,s7
--    4934:	00098023          	sb	zero,0(s3)
-+    48bc:	99de                	add	s3,s3,s7
-+    48be:	00098023          	sb	zero,0(s3)
-   return buf;
- }
--    4938:	855e                	mv	a0,s7
--    493a:	60e6                	ld	ra,88(sp)
--    493c:	6446                	ld	s0,80(sp)
--    493e:	64a6                	ld	s1,72(sp)
--    4940:	6906                	ld	s2,64(sp)
--    4942:	79e2                	ld	s3,56(sp)
--    4944:	7a42                	ld	s4,48(sp)
--    4946:	7aa2                	ld	s5,40(sp)
--    4948:	7b02                	ld	s6,32(sp)
--    494a:	6be2                	ld	s7,24(sp)
--    494c:	6125                	addi	sp,sp,96
--    494e:	8082                	ret
--
--0000000000004950 <stat>:
-+    48c2:	855e                	mv	a0,s7
-+    48c4:	60e6                	ld	ra,88(sp)
-+    48c6:	6446                	ld	s0,80(sp)
-+    48c8:	64a6                	ld	s1,72(sp)
-+    48ca:	6906                	ld	s2,64(sp)
-+    48cc:	79e2                	ld	s3,56(sp)
-+    48ce:	7a42                	ld	s4,48(sp)
-+    48d0:	7aa2                	ld	s5,40(sp)
-+    48d2:	7b02                	ld	s6,32(sp)
-+    48d4:	6be2                	ld	s7,24(sp)
-+    48d6:	6125                	add	sp,sp,96
-+    48d8:	8082                	ret
-+
-+00000000000048da <stat>:
- 
- int
- stat(const char *n, struct stat *st)
- {
--    4950:	1101                	addi	sp,sp,-32
--    4952:	ec06                	sd	ra,24(sp)
--    4954:	e822                	sd	s0,16(sp)
--    4956:	e04a                	sd	s2,0(sp)
--    4958:	1000                	addi	s0,sp,32
--    495a:	892e                	mv	s2,a1
-+    48da:	1101                	add	sp,sp,-32
-+    48dc:	ec06                	sd	ra,24(sp)
-+    48de:	e822                	sd	s0,16(sp)
-+    48e0:	e426                	sd	s1,8(sp)
-+    48e2:	e04a                	sd	s2,0(sp)
-+    48e4:	1000                	add	s0,sp,32
-+    48e6:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
--    495c:	4581                	li	a1,0
--    495e:	162000ef          	jal	4ac0 <open>
-+    48e8:	4581                	li	a1,0
-+    48ea:	160000ef          	jal	4a4a <open>
-   if(fd < 0)
--    4962:	02054263          	bltz	a0,4986 <stat+0x36>
--    4966:	e426                	sd	s1,8(sp)
--    4968:	84aa                	mv	s1,a0
-+    48ee:	02054163          	bltz	a0,4910 <stat+0x36>
-+    48f2:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
--    496a:	85ca                	mv	a1,s2
--    496c:	16c000ef          	jal	4ad8 <fstat>
--    4970:	892a                	mv	s2,a0
-+    48f4:	85ca                	mv	a1,s2
-+    48f6:	16c000ef          	jal	4a62 <fstat>
-+    48fa:	892a                	mv	s2,a0
-   close(fd);
--    4972:	8526                	mv	a0,s1
--    4974:	134000ef          	jal	4aa8 <close>
-+    48fc:	8526                	mv	a0,s1
-+    48fe:	134000ef          	jal	4a32 <close>
-   return r;
--    4978:	64a2                	ld	s1,8(sp)
- }
--    497a:	854a                	mv	a0,s2
--    497c:	60e2                	ld	ra,24(sp)
--    497e:	6442                	ld	s0,16(sp)
--    4980:	6902                	ld	s2,0(sp)
--    4982:	6105                	addi	sp,sp,32
--    4984:	8082                	ret
-+    4902:	854a                	mv	a0,s2
-+    4904:	60e2                	ld	ra,24(sp)
-+    4906:	6442                	ld	s0,16(sp)
-+    4908:	64a2                	ld	s1,8(sp)
-+    490a:	6902                	ld	s2,0(sp)
-+    490c:	6105                	add	sp,sp,32
-+    490e:	8082                	ret
-     return -1;
--    4986:	597d                	li	s2,-1
--    4988:	bfcd                	j	497a <stat+0x2a>
-+    4910:	597d                	li	s2,-1
-+    4912:	bfc5                	j	4902 <stat+0x28>
- 
--000000000000498a <atoi>:
-+0000000000004914 <atoi>:
- 
- int
- atoi(const char *s)
- {
--    498a:	1141                	addi	sp,sp,-16
--    498c:	e422                	sd	s0,8(sp)
--    498e:	0800                	addi	s0,sp,16
-+    4914:	1141                	add	sp,sp,-16
-+    4916:	e422                	sd	s0,8(sp)
-+    4918:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
--    4990:	00054683          	lbu	a3,0(a0)
--    4994:	fd06879b          	addiw	a5,a3,-48
--    4998:	0ff7f793          	zext.b	a5,a5
--    499c:	4625                	li	a2,9
--    499e:	02f66863          	bltu	a2,a5,49ce <atoi+0x44>
--    49a2:	872a                	mv	a4,a0
-+    491a:	00054683          	lbu	a3,0(a0)
-+    491e:	fd06879b          	addw	a5,a3,-48
-+    4922:	0ff7f793          	zext.b	a5,a5
-+    4926:	4625                	li	a2,9
-+    4928:	02f66863          	bltu	a2,a5,4958 <atoi+0x44>
-+    492c:	872a                	mv	a4,a0
-   n = 0;
--    49a4:	4501                	li	a0,0
-+    492e:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
--    49a6:	0705                	addi	a4,a4,1
--    49a8:	0025179b          	slliw	a5,a0,0x2
--    49ac:	9fa9                	addw	a5,a5,a0
--    49ae:	0017979b          	slliw	a5,a5,0x1
--    49b2:	9fb5                	addw	a5,a5,a3
--    49b4:	fd07851b          	addiw	a0,a5,-48
-+    4930:	0705                	add	a4,a4,1
-+    4932:	0025179b          	sllw	a5,a0,0x2
-+    4936:	9fa9                	addw	a5,a5,a0
-+    4938:	0017979b          	sllw	a5,a5,0x1
-+    493c:	9fb5                	addw	a5,a5,a3
-+    493e:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
--    49b8:	00074683          	lbu	a3,0(a4)
--    49bc:	fd06879b          	addiw	a5,a3,-48
--    49c0:	0ff7f793          	zext.b	a5,a5
--    49c4:	fef671e3          	bgeu	a2,a5,49a6 <atoi+0x1c>
-+    4942:	00074683          	lbu	a3,0(a4)
-+    4946:	fd06879b          	addw	a5,a3,-48
-+    494a:	0ff7f793          	zext.b	a5,a5
-+    494e:	fef671e3          	bgeu	a2,a5,4930 <atoi+0x1c>
-   return n;
- }
--    49c8:	6422                	ld	s0,8(sp)
--    49ca:	0141                	addi	sp,sp,16
--    49cc:	8082                	ret
-+    4952:	6422                	ld	s0,8(sp)
-+    4954:	0141                	add	sp,sp,16
-+    4956:	8082                	ret
-   n = 0;
--    49ce:	4501                	li	a0,0
--    49d0:	bfe5                	j	49c8 <atoi+0x3e>
-+    4958:	4501                	li	a0,0
-+    495a:	bfe5                	j	4952 <atoi+0x3e>
- 
--00000000000049d2 <memmove>:
-+000000000000495c <memmove>:
- 
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
--    49d2:	1141                	addi	sp,sp,-16
--    49d4:	e422                	sd	s0,8(sp)
--    49d6:	0800                	addi	s0,sp,16
-+    495c:	1141                	add	sp,sp,-16
-+    495e:	e422                	sd	s0,8(sp)
-+    4960:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-   dst = vdst;
-   src = vsrc;
-   if (src > dst) {
--    49d8:	02b57463          	bgeu	a0,a1,4a00 <memmove+0x2e>
-+    4962:	02b57463          	bgeu	a0,a1,498a <memmove+0x2e>
-     while(n-- > 0)
--    49dc:	00c05f63          	blez	a2,49fa <memmove+0x28>
--    49e0:	1602                	slli	a2,a2,0x20
--    49e2:	9201                	srli	a2,a2,0x20
--    49e4:	00c507b3          	add	a5,a0,a2
-+    4966:	00c05f63          	blez	a2,4984 <memmove+0x28>
-+    496a:	1602                	sll	a2,a2,0x20
-+    496c:	9201                	srl	a2,a2,0x20
-+    496e:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
--    49e8:	872a                	mv	a4,a0
-+    4972:	872a                	mv	a4,a0
-       *dst++ = *src++;
--    49ea:	0585                	addi	a1,a1,1
--    49ec:	0705                	addi	a4,a4,1
--    49ee:	fff5c683          	lbu	a3,-1(a1)
--    49f2:	fed70fa3          	sb	a3,-1(a4)
-+    4974:	0585                	add	a1,a1,1
-+    4976:	0705                	add	a4,a4,1
-+    4978:	fff5c683          	lbu	a3,-1(a1)
-+    497c:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
--    49f6:	fef71ae3          	bne	a4,a5,49ea <memmove+0x18>
-+    4980:	fee79ae3          	bne	a5,a4,4974 <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-   }
-   return vdst;
- }
--    49fa:	6422                	ld	s0,8(sp)
--    49fc:	0141                	addi	sp,sp,16
--    49fe:	8082                	ret
-+    4984:	6422                	ld	s0,8(sp)
-+    4986:	0141                	add	sp,sp,16
-+    4988:	8082                	ret
-     dst += n;
--    4a00:	00c50733          	add	a4,a0,a2
-+    498a:	00c50733          	add	a4,a0,a2
-     src += n;
--    4a04:	95b2                	add	a1,a1,a2
-+    498e:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
--    4a06:	fec05ae3          	blez	a2,49fa <memmove+0x28>
--    4a0a:	fff6079b          	addiw	a5,a2,-1 # 2fff <subdir+0x423>
--    4a0e:	1782                	slli	a5,a5,0x20
--    4a10:	9381                	srli	a5,a5,0x20
--    4a12:	fff7c793          	not	a5,a5
--    4a16:	97ba                	add	a5,a5,a4
-+    4990:	fec05ae3          	blez	a2,4984 <memmove+0x28>
-+    4994:	fff6079b          	addw	a5,a2,-1 # 2fff <subdir+0x477>
-+    4998:	1782                	sll	a5,a5,0x20
-+    499a:	9381                	srl	a5,a5,0x20
-+    499c:	fff7c793          	not	a5,a5
-+    49a0:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
--    4a18:	15fd                	addi	a1,a1,-1
--    4a1a:	177d                	addi	a4,a4,-1
--    4a1c:	0005c683          	lbu	a3,0(a1)
--    4a20:	00d70023          	sb	a3,0(a4)
-+    49a2:	15fd                	add	a1,a1,-1
-+    49a4:	177d                	add	a4,a4,-1
-+    49a6:	0005c683          	lbu	a3,0(a1)
-+    49aa:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
--    4a24:	fee79ae3          	bne	a5,a4,4a18 <memmove+0x46>
--    4a28:	bfc9                	j	49fa <memmove+0x28>
-+    49ae:	fee79ae3          	bne	a5,a4,49a2 <memmove+0x46>
-+    49b2:	bfc9                	j	4984 <memmove+0x28>
- 
--0000000000004a2a <memcmp>:
-+00000000000049b4 <memcmp>:
- 
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
--    4a2a:	1141                	addi	sp,sp,-16
--    4a2c:	e422                	sd	s0,8(sp)
--    4a2e:	0800                	addi	s0,sp,16
-+    49b4:	1141                	add	sp,sp,-16
-+    49b6:	e422                	sd	s0,8(sp)
-+    49b8:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
--    4a30:	ca05                	beqz	a2,4a60 <memcmp+0x36>
--    4a32:	fff6069b          	addiw	a3,a2,-1
--    4a36:	1682                	slli	a3,a3,0x20
--    4a38:	9281                	srli	a3,a3,0x20
--    4a3a:	0685                	addi	a3,a3,1
--    4a3c:	96aa                	add	a3,a3,a0
-+    49ba:	ca05                	beqz	a2,49ea <memcmp+0x36>
-+    49bc:	fff6069b          	addw	a3,a2,-1
-+    49c0:	1682                	sll	a3,a3,0x20
-+    49c2:	9281                	srl	a3,a3,0x20
-+    49c4:	0685                	add	a3,a3,1
-+    49c6:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
--    4a3e:	00054783          	lbu	a5,0(a0)
--    4a42:	0005c703          	lbu	a4,0(a1)
--    4a46:	00e79863          	bne	a5,a4,4a56 <memcmp+0x2c>
-+    49c8:	00054783          	lbu	a5,0(a0)
-+    49cc:	0005c703          	lbu	a4,0(a1)
-+    49d0:	00e79863          	bne	a5,a4,49e0 <memcmp+0x2c>
-       return *p1 - *p2;
-     }
-     p1++;
--    4a4a:	0505                	addi	a0,a0,1
-+    49d4:	0505                	add	a0,a0,1
-     p2++;
--    4a4c:	0585                	addi	a1,a1,1
-+    49d6:	0585                	add	a1,a1,1
-   while (n-- > 0) {
--    4a4e:	fed518e3          	bne	a0,a3,4a3e <memcmp+0x14>
-+    49d8:	fed518e3          	bne	a0,a3,49c8 <memcmp+0x14>
-   }
-   return 0;
--    4a52:	4501                	li	a0,0
--    4a54:	a019                	j	4a5a <memcmp+0x30>
-+    49dc:	4501                	li	a0,0
-+    49de:	a019                	j	49e4 <memcmp+0x30>
-       return *p1 - *p2;
--    4a56:	40e7853b          	subw	a0,a5,a4
-+    49e0:	40e7853b          	subw	a0,a5,a4
- }
--    4a5a:	6422                	ld	s0,8(sp)
--    4a5c:	0141                	addi	sp,sp,16
--    4a5e:	8082                	ret
-+    49e4:	6422                	ld	s0,8(sp)
-+    49e6:	0141                	add	sp,sp,16
-+    49e8:	8082                	ret
-   return 0;
--    4a60:	4501                	li	a0,0
--    4a62:	bfe5                	j	4a5a <memcmp+0x30>
-+    49ea:	4501                	li	a0,0
-+    49ec:	bfe5                	j	49e4 <memcmp+0x30>
- 
--0000000000004a64 <memcpy>:
-+00000000000049ee <memcpy>:
- 
- void *
- memcpy(void *dst, const void *src, uint n)
- {
--    4a64:	1141                	addi	sp,sp,-16
--    4a66:	e406                	sd	ra,8(sp)
--    4a68:	e022                	sd	s0,0(sp)
--    4a6a:	0800                	addi	s0,sp,16
-+    49ee:	1141                	add	sp,sp,-16
-+    49f0:	e406                	sd	ra,8(sp)
-+    49f2:	e022                	sd	s0,0(sp)
-+    49f4:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
--    4a6c:	f67ff0ef          	jal	49d2 <memmove>
-+    49f6:	f67ff0ef          	jal	495c <memmove>
- }
--    4a70:	60a2                	ld	ra,8(sp)
--    4a72:	6402                	ld	s0,0(sp)
--    4a74:	0141                	addi	sp,sp,16
--    4a76:	8082                	ret
-+    49fa:	60a2                	ld	ra,8(sp)
-+    49fc:	6402                	ld	s0,0(sp)
-+    49fe:	0141                	add	sp,sp,16
-+    4a00:	8082                	ret
- 
--0000000000004a78 <fork>:
-+0000000000004a02 <fork>:
- # generated by usys.pl - do not edit
- #include "kernel/syscall.h"
- .global fork
- fork:
-  li a7, SYS_fork
--    4a78:	4885                	li	a7,1
-+    4a02:	4885                	li	a7,1
-  ecall
--    4a7a:	00000073          	ecall
-+    4a04:	00000073          	ecall
-  ret
--    4a7e:	8082                	ret
-+    4a08:	8082                	ret
- 
--0000000000004a80 <exit>:
-+0000000000004a0a <exit>:
- .global exit
- exit:
-  li a7, SYS_exit
--    4a80:	4889                	li	a7,2
-+    4a0a:	4889                	li	a7,2
-  ecall
--    4a82:	00000073          	ecall
-+    4a0c:	00000073          	ecall
-  ret
--    4a86:	8082                	ret
-+    4a10:	8082                	ret
- 
--0000000000004a88 <wait>:
-+0000000000004a12 <wait>:
- .global wait
- wait:
-  li a7, SYS_wait
--    4a88:	488d                	li	a7,3
-+    4a12:	488d                	li	a7,3
-  ecall
--    4a8a:	00000073          	ecall
-+    4a14:	00000073          	ecall
-  ret
--    4a8e:	8082                	ret
-+    4a18:	8082                	ret
- 
--0000000000004a90 <pipe>:
-+0000000000004a1a <pipe>:
- .global pipe
- pipe:
-  li a7, SYS_pipe
--    4a90:	4891                	li	a7,4
-+    4a1a:	4891                	li	a7,4
-  ecall
--    4a92:	00000073          	ecall
-+    4a1c:	00000073          	ecall
-  ret
--    4a96:	8082                	ret
-+    4a20:	8082                	ret
- 
--0000000000004a98 <read>:
-+0000000000004a22 <read>:
- .global read
- read:
-  li a7, SYS_read
--    4a98:	4895                	li	a7,5
-+    4a22:	4895                	li	a7,5
-  ecall
--    4a9a:	00000073          	ecall
-+    4a24:	00000073          	ecall
-  ret
--    4a9e:	8082                	ret
-+    4a28:	8082                	ret
- 
--0000000000004aa0 <write>:
-+0000000000004a2a <write>:
- .global write
- write:
-  li a7, SYS_write
--    4aa0:	48c1                	li	a7,16
-+    4a2a:	48c1                	li	a7,16
-  ecall
--    4aa2:	00000073          	ecall
-+    4a2c:	00000073          	ecall
-  ret
--    4aa6:	8082                	ret
-+    4a30:	8082                	ret
- 
--0000000000004aa8 <close>:
-+0000000000004a32 <close>:
- .global close
- close:
-  li a7, SYS_close
--    4aa8:	48d5                	li	a7,21
-+    4a32:	48d5                	li	a7,21
-  ecall
--    4aaa:	00000073          	ecall
-+    4a34:	00000073          	ecall
-  ret
--    4aae:	8082                	ret
-+    4a38:	8082                	ret
- 
--0000000000004ab0 <kill>:
-+0000000000004a3a <kill>:
- .global kill
- kill:
-  li a7, SYS_kill
--    4ab0:	4899                	li	a7,6
-+    4a3a:	4899                	li	a7,6
-  ecall
--    4ab2:	00000073          	ecall
-+    4a3c:	00000073          	ecall
-  ret
--    4ab6:	8082                	ret
-+    4a40:	8082                	ret
- 
--0000000000004ab8 <exec>:
-+0000000000004a42 <exec>:
- .global exec
- exec:
-  li a7, SYS_exec
--    4ab8:	489d                	li	a7,7
-+    4a42:	489d                	li	a7,7
-  ecall
--    4aba:	00000073          	ecall
-+    4a44:	00000073          	ecall
-  ret
--    4abe:	8082                	ret
-+    4a48:	8082                	ret
- 
--0000000000004ac0 <open>:
-+0000000000004a4a <open>:
- .global open
- open:
-  li a7, SYS_open
--    4ac0:	48bd                	li	a7,15
-+    4a4a:	48bd                	li	a7,15
-  ecall
--    4ac2:	00000073          	ecall
-+    4a4c:	00000073          	ecall
-  ret
--    4ac6:	8082                	ret
-+    4a50:	8082                	ret
- 
--0000000000004ac8 <mknod>:
-+0000000000004a52 <mknod>:
- .global mknod
- mknod:
-  li a7, SYS_mknod
--    4ac8:	48c5                	li	a7,17
-+    4a52:	48c5                	li	a7,17
-  ecall
--    4aca:	00000073          	ecall
-+    4a54:	00000073          	ecall
-  ret
--    4ace:	8082                	ret
-+    4a58:	8082                	ret
- 
--0000000000004ad0 <unlink>:
-+0000000000004a5a <unlink>:
- .global unlink
- unlink:
-  li a7, SYS_unlink
--    4ad0:	48c9                	li	a7,18
-+    4a5a:	48c9                	li	a7,18
-  ecall
--    4ad2:	00000073          	ecall
-+    4a5c:	00000073          	ecall
-  ret
--    4ad6:	8082                	ret
-+    4a60:	8082                	ret
- 
--0000000000004ad8 <fstat>:
-+0000000000004a62 <fstat>:
- .global fstat
- fstat:
-  li a7, SYS_fstat
--    4ad8:	48a1                	li	a7,8
-+    4a62:	48a1                	li	a7,8
-  ecall
--    4ada:	00000073          	ecall
-+    4a64:	00000073          	ecall
-  ret
--    4ade:	8082                	ret
-+    4a68:	8082                	ret
- 
--0000000000004ae0 <link>:
-+0000000000004a6a <link>:
- .global link
- link:
-  li a7, SYS_link
--    4ae0:	48cd                	li	a7,19
-+    4a6a:	48cd                	li	a7,19
-  ecall
--    4ae2:	00000073          	ecall
-+    4a6c:	00000073          	ecall
-  ret
--    4ae6:	8082                	ret
-+    4a70:	8082                	ret
- 
--0000000000004ae8 <mkdir>:
-+0000000000004a72 <mkdir>:
- .global mkdir
- mkdir:
-  li a7, SYS_mkdir
--    4ae8:	48d1                	li	a7,20
-+    4a72:	48d1                	li	a7,20
-  ecall
--    4aea:	00000073          	ecall
-+    4a74:	00000073          	ecall
-  ret
--    4aee:	8082                	ret
-+    4a78:	8082                	ret
- 
--0000000000004af0 <chdir>:
-+0000000000004a7a <chdir>:
- .global chdir
- chdir:
-  li a7, SYS_chdir
--    4af0:	48a5                	li	a7,9
-+    4a7a:	48a5                	li	a7,9
-  ecall
--    4af2:	00000073          	ecall
-+    4a7c:	00000073          	ecall
-  ret
--    4af6:	8082                	ret
-+    4a80:	8082                	ret
- 
--0000000000004af8 <dup>:
-+0000000000004a82 <dup>:
- .global dup
- dup:
-  li a7, SYS_dup
--    4af8:	48a9                	li	a7,10
-+    4a82:	48a9                	li	a7,10
-  ecall
--    4afa:	00000073          	ecall
-+    4a84:	00000073          	ecall
-  ret
--    4afe:	8082                	ret
-+    4a88:	8082                	ret
- 
--0000000000004b00 <getpid>:
-+0000000000004a8a <getpid>:
- .global getpid
- getpid:
-  li a7, SYS_getpid
--    4b00:	48ad                	li	a7,11
-+    4a8a:	48ad                	li	a7,11
-  ecall
--    4b02:	00000073          	ecall
-+    4a8c:	00000073          	ecall
-  ret
--    4b06:	8082                	ret
-+    4a90:	8082                	ret
- 
--0000000000004b08 <sbrk>:
-+0000000000004a92 <sbrk>:
- .global sbrk
- sbrk:
-  li a7, SYS_sbrk
--    4b08:	48b1                	li	a7,12
-+    4a92:	48b1                	li	a7,12
-  ecall
--    4b0a:	00000073          	ecall
-+    4a94:	00000073          	ecall
-  ret
--    4b0e:	8082                	ret
-+    4a98:	8082                	ret
- 
--0000000000004b10 <sleep>:
-+0000000000004a9a <sleep>:
- .global sleep
- sleep:
-  li a7, SYS_sleep
--    4b10:	48b5                	li	a7,13
-+    4a9a:	48b5                	li	a7,13
-  ecall
--    4b12:	00000073          	ecall
-+    4a9c:	00000073          	ecall
-  ret
--    4b16:	8082                	ret
-+    4aa0:	8082                	ret
- 
--0000000000004b18 <uptime>:
-+0000000000004aa2 <uptime>:
- .global uptime
- uptime:
-  li a7, SYS_uptime
--    4b18:	48b9                	li	a7,14
-+    4aa2:	48b9                	li	a7,14
-  ecall
--    4b1a:	00000073          	ecall
-+    4aa4:	00000073          	ecall
-  ret
--    4b1e:	8082                	ret
-+    4aa8:	8082                	ret
- 
--0000000000004b20 <putc>:
-+0000000000004aaa <putc>:
- 
- static char digits[] = "0123456789ABCDEF";
- 
- static void
- putc(int fd, char c)
- {
--    4b20:	1101                	addi	sp,sp,-32
--    4b22:	ec06                	sd	ra,24(sp)
--    4b24:	e822                	sd	s0,16(sp)
--    4b26:	1000                	addi	s0,sp,32
--    4b28:	feb407a3          	sb	a1,-17(s0)
-+    4aaa:	1101                	add	sp,sp,-32
-+    4aac:	ec06                	sd	ra,24(sp)
-+    4aae:	e822                	sd	s0,16(sp)
-+    4ab0:	1000                	add	s0,sp,32
-+    4ab2:	feb407a3          	sb	a1,-17(s0)
-   write(fd, &c, 1);
--    4b2c:	4605                	li	a2,1
--    4b2e:	fef40593          	addi	a1,s0,-17
--    4b32:	f6fff0ef          	jal	4aa0 <write>
-+    4ab6:	4605                	li	a2,1
-+    4ab8:	fef40593          	add	a1,s0,-17
-+    4abc:	f6fff0ef          	jal	4a2a <write>
- }
--    4b36:	60e2                	ld	ra,24(sp)
--    4b38:	6442                	ld	s0,16(sp)
--    4b3a:	6105                	addi	sp,sp,32
--    4b3c:	8082                	ret
-+    4ac0:	60e2                	ld	ra,24(sp)
-+    4ac2:	6442                	ld	s0,16(sp)
-+    4ac4:	6105                	add	sp,sp,32
-+    4ac6:	8082                	ret
- 
--0000000000004b3e <printint>:
-+0000000000004ac8 <printint>:
- 
- static void
- printint(int fd, int xx, int base, int sgn)
- {
--    4b3e:	7139                	addi	sp,sp,-64
--    4b40:	fc06                	sd	ra,56(sp)
--    4b42:	f822                	sd	s0,48(sp)
--    4b44:	f426                	sd	s1,40(sp)
--    4b46:	0080                	addi	s0,sp,64
--    4b48:	84aa                	mv	s1,a0
-+    4ac8:	7139                	add	sp,sp,-64
-+    4aca:	fc06                	sd	ra,56(sp)
-+    4acc:	f822                	sd	s0,48(sp)
-+    4ace:	f426                	sd	s1,40(sp)
-+    4ad0:	f04a                	sd	s2,32(sp)
-+    4ad2:	ec4e                	sd	s3,24(sp)
-+    4ad4:	0080                	add	s0,sp,64
-+    4ad6:	84aa                	mv	s1,a0
-   char buf[16];
-   int i, neg;
-   uint x;
- 
-   neg = 0;
-   if(sgn && xx < 0){
--    4b4a:	c299                	beqz	a3,4b50 <printint+0x12>
--    4b4c:	0805c963          	bltz	a1,4bde <printint+0xa0>
-+    4ad8:	c299                	beqz	a3,4ade <printint+0x16>
-+    4ada:	0805c763          	bltz	a1,4b68 <printint+0xa0>
-     neg = 1;
-     x = -xx;
-   } else {
-     x = xx;
--    4b50:	2581                	sext.w	a1,a1
-+    4ade:	2581                	sext.w	a1,a1
-   neg = 0;
--    4b52:	4881                	li	a7,0
--    4b54:	fc040693          	addi	a3,s0,-64
-+    4ae0:	4881                	li	a7,0
-+    4ae2:	fc040693          	add	a3,s0,-64
-   }
- 
-   i = 0;
--    4b58:	4701                	li	a4,0
-+    4ae6:	4701                	li	a4,0
-   do{
-     buf[i++] = digits[x % base];
--    4b5a:	2601                	sext.w	a2,a2
--    4b5c:	00003517          	auipc	a0,0x3
--    4b60:	90450513          	addi	a0,a0,-1788 # 7460 <digits>
--    4b64:	883a                	mv	a6,a4
--    4b66:	2705                	addiw	a4,a4,1
--    4b68:	02c5f7bb          	remuw	a5,a1,a2
--    4b6c:	1782                	slli	a5,a5,0x20
--    4b6e:	9381                	srli	a5,a5,0x20
--    4b70:	97aa                	add	a5,a5,a0
--    4b72:	0007c783          	lbu	a5,0(a5)
--    4b76:	00f68023          	sb	a5,0(a3)
-+    4ae8:	2601                	sext.w	a2,a2
-+    4aea:	00003517          	auipc	a0,0x3
-+    4aee:	8e650513          	add	a0,a0,-1818 # 73d0 <digits>
-+    4af2:	883a                	mv	a6,a4
-+    4af4:	2705                	addw	a4,a4,1
-+    4af6:	02c5f7bb          	remuw	a5,a1,a2
-+    4afa:	1782                	sll	a5,a5,0x20
-+    4afc:	9381                	srl	a5,a5,0x20
-+    4afe:	97aa                	add	a5,a5,a0
-+    4b00:	0007c783          	lbu	a5,0(a5)
-+    4b04:	00f68023          	sb	a5,0(a3)
-   }while((x /= base) != 0);
--    4b7a:	0005879b          	sext.w	a5,a1
--    4b7e:	02c5d5bb          	divuw	a1,a1,a2
--    4b82:	0685                	addi	a3,a3,1
--    4b84:	fec7f0e3          	bgeu	a5,a2,4b64 <printint+0x26>
-+    4b08:	0005879b          	sext.w	a5,a1
-+    4b0c:	02c5d5bb          	divuw	a1,a1,a2
-+    4b10:	0685                	add	a3,a3,1
-+    4b12:	fec7f0e3          	bgeu	a5,a2,4af2 <printint+0x2a>
-   if(neg)
--    4b88:	00088c63          	beqz	a7,4ba0 <printint+0x62>
-+    4b16:	00088c63          	beqz	a7,4b2e <printint+0x66>
-     buf[i++] = '-';
--    4b8c:	fd070793          	addi	a5,a4,-48
--    4b90:	00878733          	add	a4,a5,s0
--    4b94:	02d00793          	li	a5,45
--    4b98:	fef70823          	sb	a5,-16(a4)
--    4b9c:	0028071b          	addiw	a4,a6,2
-+    4b1a:	fd070793          	add	a5,a4,-48
-+    4b1e:	00878733          	add	a4,a5,s0
-+    4b22:	02d00793          	li	a5,45
-+    4b26:	fef70823          	sb	a5,-16(a4)
-+    4b2a:	0028071b          	addw	a4,a6,2
- 
-   while(--i >= 0)
--    4ba0:	02e05a63          	blez	a4,4bd4 <printint+0x96>
--    4ba4:	f04a                	sd	s2,32(sp)
--    4ba6:	ec4e                	sd	s3,24(sp)
--    4ba8:	fc040793          	addi	a5,s0,-64
--    4bac:	00e78933          	add	s2,a5,a4
--    4bb0:	fff78993          	addi	s3,a5,-1
--    4bb4:	99ba                	add	s3,s3,a4
--    4bb6:	377d                	addiw	a4,a4,-1
--    4bb8:	1702                	slli	a4,a4,0x20
--    4bba:	9301                	srli	a4,a4,0x20
--    4bbc:	40e989b3          	sub	s3,s3,a4
-+    4b2e:	02e05663          	blez	a4,4b5a <printint+0x92>
-+    4b32:	fc040793          	add	a5,s0,-64
-+    4b36:	00e78933          	add	s2,a5,a4
-+    4b3a:	fff78993          	add	s3,a5,-1
-+    4b3e:	99ba                	add	s3,s3,a4
-+    4b40:	377d                	addw	a4,a4,-1
-+    4b42:	1702                	sll	a4,a4,0x20
-+    4b44:	9301                	srl	a4,a4,0x20
-+    4b46:	40e989b3          	sub	s3,s3,a4
-     putc(fd, buf[i]);
--    4bc0:	fff94583          	lbu	a1,-1(s2)
--    4bc4:	8526                	mv	a0,s1
--    4bc6:	f5bff0ef          	jal	4b20 <putc>
-+    4b4a:	fff94583          	lbu	a1,-1(s2)
-+    4b4e:	8526                	mv	a0,s1
-+    4b50:	f5bff0ef          	jal	4aaa <putc>
-   while(--i >= 0)
--    4bca:	197d                	addi	s2,s2,-1
--    4bcc:	ff391ae3          	bne	s2,s3,4bc0 <printint+0x82>
--    4bd0:	7902                	ld	s2,32(sp)
--    4bd2:	69e2                	ld	s3,24(sp)
-+    4b54:	197d                	add	s2,s2,-1
-+    4b56:	ff391ae3          	bne	s2,s3,4b4a <printint+0x82>
- }
--    4bd4:	70e2                	ld	ra,56(sp)
--    4bd6:	7442                	ld	s0,48(sp)
--    4bd8:	74a2                	ld	s1,40(sp)
--    4bda:	6121                	addi	sp,sp,64
--    4bdc:	8082                	ret
-+    4b5a:	70e2                	ld	ra,56(sp)
-+    4b5c:	7442                	ld	s0,48(sp)
-+    4b5e:	74a2                	ld	s1,40(sp)
-+    4b60:	7902                	ld	s2,32(sp)
-+    4b62:	69e2                	ld	s3,24(sp)
-+    4b64:	6121                	add	sp,sp,64
-+    4b66:	8082                	ret
-     x = -xx;
--    4bde:	40b005bb          	negw	a1,a1
-+    4b68:	40b005bb          	negw	a1,a1
-     neg = 1;
--    4be2:	4885                	li	a7,1
-+    4b6c:	4885                	li	a7,1
-     x = -xx;
--    4be4:	bf85                	j	4b54 <printint+0x16>
-+    4b6e:	bf95                	j	4ae2 <printint+0x1a>
- 
--0000000000004be6 <vprintf>:
-+0000000000004b70 <vprintf>:
- }
- 
- /* Print to the given fd. Only understands %d, %x, %p, %s. */
- void
- vprintf(int fd, const char *fmt, va_list ap)
- {
--    4be6:	711d                	addi	sp,sp,-96
--    4be8:	ec86                	sd	ra,88(sp)
--    4bea:	e8a2                	sd	s0,80(sp)
--    4bec:	e0ca                	sd	s2,64(sp)
--    4bee:	1080                	addi	s0,sp,96
-+    4b70:	711d                	add	sp,sp,-96
-+    4b72:	ec86                	sd	ra,88(sp)
-+    4b74:	e8a2                	sd	s0,80(sp)
-+    4b76:	e4a6                	sd	s1,72(sp)
-+    4b78:	e0ca                	sd	s2,64(sp)
-+    4b7a:	fc4e                	sd	s3,56(sp)
-+    4b7c:	f852                	sd	s4,48(sp)
-+    4b7e:	f456                	sd	s5,40(sp)
-+    4b80:	f05a                	sd	s6,32(sp)
-+    4b82:	ec5e                	sd	s7,24(sp)
-+    4b84:	e862                	sd	s8,16(sp)
-+    4b86:	e466                	sd	s9,8(sp)
-+    4b88:	e06a                	sd	s10,0(sp)
-+    4b8a:	1080                	add	s0,sp,96
-   char *s;
-   int c0, c1, c2, i, state;
- 
-   state = 0;
-   for(i = 0; fmt[i]; i++){
--    4bf0:	0005c903          	lbu	s2,0(a1)
--    4bf4:	26090863          	beqz	s2,4e64 <vprintf+0x27e>
--    4bf8:	e4a6                	sd	s1,72(sp)
--    4bfa:	fc4e                	sd	s3,56(sp)
--    4bfc:	f852                	sd	s4,48(sp)
--    4bfe:	f456                	sd	s5,40(sp)
--    4c00:	f05a                	sd	s6,32(sp)
--    4c02:	ec5e                	sd	s7,24(sp)
--    4c04:	e862                	sd	s8,16(sp)
--    4c06:	e466                	sd	s9,8(sp)
--    4c08:	8b2a                	mv	s6,a0
--    4c0a:	8a2e                	mv	s4,a1
--    4c0c:	8bb2                	mv	s7,a2
-+    4b8c:	0005c903          	lbu	s2,0(a1)
-+    4b90:	24090763          	beqz	s2,4dde <vprintf+0x26e>
-+    4b94:	8b2a                	mv	s6,a0
-+    4b96:	8a2e                	mv	s4,a1
-+    4b98:	8bb2                	mv	s7,a2
-   state = 0;
--    4c0e:	4981                	li	s3,0
-+    4b9a:	4981                	li	s3,0
-   for(i = 0; fmt[i]; i++){
--    4c10:	4481                	li	s1,0
--    4c12:	4701                	li	a4,0
-+    4b9c:	4481                	li	s1,0
-+    4b9e:	4701                	li	a4,0
-       if(c0 == '%'){
-         state = '%';
-       } else {
-         putc(fd, c0);
-       }
-     } else if(state == '%'){
--    4c14:	02500a93          	li	s5,37
-+    4ba0:	02500a93          	li	s5,37
-       c1 = c2 = 0;
-       if(c0) c1 = fmt[i+1] & 0xff;
-       if(c1) c2 = fmt[i+2] & 0xff;
-       if(c0 == 'd'){
--    4c18:	06400c13          	li	s8,100
-+    4ba4:	06400c13          	li	s8,100
-         printint(fd, va_arg(ap, int), 10, 1);
-       } else if(c0 == 'l' && c1 == 'd'){
--    4c1c:	06c00c93          	li	s9,108
--    4c20:	a005                	j	4c40 <vprintf+0x5a>
-+    4ba8:	06c00c93          	li	s9,108
-+    4bac:	a005                	j	4bcc <vprintf+0x5c>
-         putc(fd, c0);
--    4c22:	85ca                	mv	a1,s2
--    4c24:	855a                	mv	a0,s6
--    4c26:	efbff0ef          	jal	4b20 <putc>
--    4c2a:	a019                	j	4c30 <vprintf+0x4a>
-+    4bae:	85ca                	mv	a1,s2
-+    4bb0:	855a                	mv	a0,s6
-+    4bb2:	ef9ff0ef          	jal	4aaa <putc>
-+    4bb6:	a019                	j	4bbc <vprintf+0x4c>
-     } else if(state == '%'){
--    4c2c:	03598263          	beq	s3,s5,4c50 <vprintf+0x6a>
-+    4bb8:	03598263          	beq	s3,s5,4bdc <vprintf+0x6c>
-   for(i = 0; fmt[i]; i++){
--    4c30:	2485                	addiw	s1,s1,1
--    4c32:	8726                	mv	a4,s1
--    4c34:	009a07b3          	add	a5,s4,s1
--    4c38:	0007c903          	lbu	s2,0(a5)
--    4c3c:	20090c63          	beqz	s2,4e54 <vprintf+0x26e>
-+    4bbc:	2485                	addw	s1,s1,1
-+    4bbe:	8726                	mv	a4,s1
-+    4bc0:	009a07b3          	add	a5,s4,s1
-+    4bc4:	0007c903          	lbu	s2,0(a5)
-+    4bc8:	20090b63          	beqz	s2,4dde <vprintf+0x26e>
-     c0 = fmt[i] & 0xff;
--    4c40:	0009079b          	sext.w	a5,s2
-+    4bcc:	0009079b          	sext.w	a5,s2
-     if(state == 0){
--    4c44:	fe0994e3          	bnez	s3,4c2c <vprintf+0x46>
-+    4bd0:	fe0994e3          	bnez	s3,4bb8 <vprintf+0x48>
-       if(c0 == '%'){
--    4c48:	fd579de3          	bne	a5,s5,4c22 <vprintf+0x3c>
-+    4bd4:	fd579de3          	bne	a5,s5,4bae <vprintf+0x3e>
-         state = '%';
--    4c4c:	89be                	mv	s3,a5
--    4c4e:	b7cd                	j	4c30 <vprintf+0x4a>
-+    4bd8:	89be                	mv	s3,a5
-+    4bda:	b7cd                	j	4bbc <vprintf+0x4c>
-       if(c0) c1 = fmt[i+1] & 0xff;
--    4c50:	00ea06b3          	add	a3,s4,a4
--    4c54:	0016c683          	lbu	a3,1(a3)
-+    4bdc:	c7c9                	beqz	a5,4c66 <vprintf+0xf6>
-+    4bde:	00ea06b3          	add	a3,s4,a4
-+    4be2:	0016c683          	lbu	a3,1(a3)
-       c1 = c2 = 0;
--    4c58:	8636                	mv	a2,a3
-+    4be6:	8636                	mv	a2,a3
-       if(c1) c2 = fmt[i+2] & 0xff;
--    4c5a:	c681                	beqz	a3,4c62 <vprintf+0x7c>
--    4c5c:	9752                	add	a4,a4,s4
--    4c5e:	00274603          	lbu	a2,2(a4)
-+    4be8:	c681                	beqz	a3,4bf0 <vprintf+0x80>
-+    4bea:	9752                	add	a4,a4,s4
-+    4bec:	00274603          	lbu	a2,2(a4)
-       if(c0 == 'd'){
--    4c62:	03878f63          	beq	a5,s8,4ca0 <vprintf+0xba>
-+    4bf0:	03878f63          	beq	a5,s8,4c2e <vprintf+0xbe>
-       } else if(c0 == 'l' && c1 == 'd'){
--    4c66:	05978963          	beq	a5,s9,4cb8 <vprintf+0xd2>
-+    4bf4:	05978963          	beq	a5,s9,4c46 <vprintf+0xd6>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 2;
-       } else if(c0 == 'u'){
--    4c6a:	07500713          	li	a4,117
--    4c6e:	0ee78363          	beq	a5,a4,4d54 <vprintf+0x16e>
-+    4bf8:	07500713          	li	a4,117
-+    4bfc:	0ee78363          	beq	a5,a4,4ce2 <vprintf+0x172>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 2;
-       } else if(c0 == 'x'){
--    4c72:	07800713          	li	a4,120
--    4c76:	12e78563          	beq	a5,a4,4da0 <vprintf+0x1ba>
-+    4c00:	07800713          	li	a4,120
-+    4c04:	12e78563          	beq	a5,a4,4d2e <vprintf+0x1be>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 2;
-       } else if(c0 == 'p'){
--    4c7a:	07000713          	li	a4,112
--    4c7e:	14e78a63          	beq	a5,a4,4dd2 <vprintf+0x1ec>
-+    4c08:	07000713          	li	a4,112
-+    4c0c:	14e78a63          	beq	a5,a4,4d60 <vprintf+0x1f0>
-         printptr(fd, va_arg(ap, uint64));
-       } else if(c0 == 's'){
--    4c82:	07300713          	li	a4,115
--    4c86:	18e78a63          	beq	a5,a4,4e1a <vprintf+0x234>
-+    4c10:	07300713          	li	a4,115
-+    4c14:	18e78863          	beq	a5,a4,4da4 <vprintf+0x234>
-         if((s = va_arg(ap, char*)) == 0)
-           s = "(null)";
-         for(; *s; s++)
-           putc(fd, *s);
-       } else if(c0 == '%'){
--    4c8a:	02500713          	li	a4,37
--    4c8e:	04e79563          	bne	a5,a4,4cd8 <vprintf+0xf2>
-+    4c18:	02500713          	li	a4,37
-+    4c1c:	04e79563          	bne	a5,a4,4c66 <vprintf+0xf6>
-         putc(fd, '%');
--    4c92:	02500593          	li	a1,37
--    4c96:	855a                	mv	a0,s6
--    4c98:	e89ff0ef          	jal	4b20 <putc>
-+    4c20:	02500593          	li	a1,37
-+    4c24:	855a                	mv	a0,s6
-+    4c26:	e85ff0ef          	jal	4aaa <putc>
-         /* Unknown % sequence.  Print it to draw attention. */
-         putc(fd, '%');
-         putc(fd, c);
-       }
- #endif
-       state = 0;
--    4c9c:	4981                	li	s3,0
--    4c9e:	bf49                	j	4c30 <vprintf+0x4a>
-+    4c2a:	4981                	li	s3,0
-+    4c2c:	bf41                	j	4bbc <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 1);
--    4ca0:	008b8913          	addi	s2,s7,8
--    4ca4:	4685                	li	a3,1
--    4ca6:	4629                	li	a2,10
--    4ca8:	000ba583          	lw	a1,0(s7)
--    4cac:	855a                	mv	a0,s6
--    4cae:	e91ff0ef          	jal	4b3e <printint>
--    4cb2:	8bca                	mv	s7,s2
-+    4c2e:	008b8913          	add	s2,s7,8
-+    4c32:	4685                	li	a3,1
-+    4c34:	4629                	li	a2,10
-+    4c36:	000ba583          	lw	a1,0(s7)
-+    4c3a:	855a                	mv	a0,s6
-+    4c3c:	e8dff0ef          	jal	4ac8 <printint>
-+    4c40:	8bca                	mv	s7,s2
-       state = 0;
--    4cb4:	4981                	li	s3,0
--    4cb6:	bfad                	j	4c30 <vprintf+0x4a>
-+    4c42:	4981                	li	s3,0
-+    4c44:	bfa5                	j	4bbc <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'd'){
--    4cb8:	06400793          	li	a5,100
--    4cbc:	02f68963          	beq	a3,a5,4cee <vprintf+0x108>
-+    4c46:	06400793          	li	a5,100
-+    4c4a:	02f68963          	beq	a3,a5,4c7c <vprintf+0x10c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
--    4cc0:	06c00793          	li	a5,108
--    4cc4:	04f68263          	beq	a3,a5,4d08 <vprintf+0x122>
-+    4c4e:	06c00793          	li	a5,108
-+    4c52:	04f68263          	beq	a3,a5,4c96 <vprintf+0x126>
-       } else if(c0 == 'l' && c1 == 'u'){
--    4cc8:	07500793          	li	a5,117
--    4ccc:	0af68063          	beq	a3,a5,4d6c <vprintf+0x186>
-+    4c56:	07500793          	li	a5,117
-+    4c5a:	0af68063          	beq	a3,a5,4cfa <vprintf+0x18a>
-       } else if(c0 == 'l' && c1 == 'x'){
--    4cd0:	07800793          	li	a5,120
--    4cd4:	0ef68263          	beq	a3,a5,4db8 <vprintf+0x1d2>
-+    4c5e:	07800793          	li	a5,120
-+    4c62:	0ef68263          	beq	a3,a5,4d46 <vprintf+0x1d6>
-         putc(fd, '%');
--    4cd8:	02500593          	li	a1,37
--    4cdc:	855a                	mv	a0,s6
--    4cde:	e43ff0ef          	jal	4b20 <putc>
-+    4c66:	02500593          	li	a1,37
-+    4c6a:	855a                	mv	a0,s6
-+    4c6c:	e3fff0ef          	jal	4aaa <putc>
-         putc(fd, c0);
--    4ce2:	85ca                	mv	a1,s2
--    4ce4:	855a                	mv	a0,s6
--    4ce6:	e3bff0ef          	jal	4b20 <putc>
-+    4c70:	85ca                	mv	a1,s2
-+    4c72:	855a                	mv	a0,s6
-+    4c74:	e37ff0ef          	jal	4aaa <putc>
-       state = 0;
--    4cea:	4981                	li	s3,0
--    4cec:	b791                	j	4c30 <vprintf+0x4a>
-+    4c78:	4981                	li	s3,0
-+    4c7a:	b789                	j	4bbc <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
--    4cee:	008b8913          	addi	s2,s7,8
--    4cf2:	4685                	li	a3,1
--    4cf4:	4629                	li	a2,10
--    4cf6:	000ba583          	lw	a1,0(s7)
--    4cfa:	855a                	mv	a0,s6
--    4cfc:	e43ff0ef          	jal	4b3e <printint>
-+    4c7c:	008b8913          	add	s2,s7,8
-+    4c80:	4685                	li	a3,1
-+    4c82:	4629                	li	a2,10
-+    4c84:	000ba583          	lw	a1,0(s7)
-+    4c88:	855a                	mv	a0,s6
-+    4c8a:	e3fff0ef          	jal	4ac8 <printint>
-         i += 1;
--    4d00:	2485                	addiw	s1,s1,1
-+    4c8e:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 1);
--    4d02:	8bca                	mv	s7,s2
-+    4c90:	8bca                	mv	s7,s2
-       state = 0;
--    4d04:	4981                	li	s3,0
-+    4c92:	4981                	li	s3,0
-         i += 1;
--    4d06:	b72d                	j	4c30 <vprintf+0x4a>
-+    4c94:	b725                	j	4bbc <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
--    4d08:	06400793          	li	a5,100
--    4d0c:	02f60763          	beq	a2,a5,4d3a <vprintf+0x154>
-+    4c96:	06400793          	li	a5,100
-+    4c9a:	02f60763          	beq	a2,a5,4cc8 <vprintf+0x158>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
--    4d10:	07500793          	li	a5,117
--    4d14:	06f60963          	beq	a2,a5,4d86 <vprintf+0x1a0>
-+    4c9e:	07500793          	li	a5,117
-+    4ca2:	06f60963          	beq	a2,a5,4d14 <vprintf+0x1a4>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
--    4d18:	07800793          	li	a5,120
--    4d1c:	faf61ee3          	bne	a2,a5,4cd8 <vprintf+0xf2>
-+    4ca6:	07800793          	li	a5,120
-+    4caa:	faf61ee3          	bne	a2,a5,4c66 <vprintf+0xf6>
-         printint(fd, va_arg(ap, uint64), 16, 0);
--    4d20:	008b8913          	addi	s2,s7,8
--    4d24:	4681                	li	a3,0
--    4d26:	4641                	li	a2,16
--    4d28:	000ba583          	lw	a1,0(s7)
--    4d2c:	855a                	mv	a0,s6
--    4d2e:	e11ff0ef          	jal	4b3e <printint>
-+    4cae:	008b8913          	add	s2,s7,8
-+    4cb2:	4681                	li	a3,0
-+    4cb4:	4641                	li	a2,16
-+    4cb6:	000ba583          	lw	a1,0(s7)
-+    4cba:	855a                	mv	a0,s6
-+    4cbc:	e0dff0ef          	jal	4ac8 <printint>
-         i += 2;
--    4d32:	2489                	addiw	s1,s1,2
-+    4cc0:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 16, 0);
--    4d34:	8bca                	mv	s7,s2
-+    4cc2:	8bca                	mv	s7,s2
-       state = 0;
--    4d36:	4981                	li	s3,0
-+    4cc4:	4981                	li	s3,0
-         i += 2;
--    4d38:	bde5                	j	4c30 <vprintf+0x4a>
-+    4cc6:	bddd                	j	4bbc <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
--    4d3a:	008b8913          	addi	s2,s7,8
--    4d3e:	4685                	li	a3,1
--    4d40:	4629                	li	a2,10
--    4d42:	000ba583          	lw	a1,0(s7)
--    4d46:	855a                	mv	a0,s6
--    4d48:	df7ff0ef          	jal	4b3e <printint>
-+    4cc8:	008b8913          	add	s2,s7,8
-+    4ccc:	4685                	li	a3,1
-+    4cce:	4629                	li	a2,10
-+    4cd0:	000ba583          	lw	a1,0(s7)
-+    4cd4:	855a                	mv	a0,s6
-+    4cd6:	df3ff0ef          	jal	4ac8 <printint>
-         i += 2;
--    4d4c:	2489                	addiw	s1,s1,2
-+    4cda:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 1);
--    4d4e:	8bca                	mv	s7,s2
-+    4cdc:	8bca                	mv	s7,s2
-       state = 0;
--    4d50:	4981                	li	s3,0
-+    4cde:	4981                	li	s3,0
-         i += 2;
--    4d52:	bdf9                	j	4c30 <vprintf+0x4a>
-+    4ce0:	bdf1                	j	4bbc <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 0);
--    4d54:	008b8913          	addi	s2,s7,8
--    4d58:	4681                	li	a3,0
--    4d5a:	4629                	li	a2,10
--    4d5c:	000ba583          	lw	a1,0(s7)
--    4d60:	855a                	mv	a0,s6
--    4d62:	dddff0ef          	jal	4b3e <printint>
--    4d66:	8bca                	mv	s7,s2
-+    4ce2:	008b8913          	add	s2,s7,8
-+    4ce6:	4681                	li	a3,0
-+    4ce8:	4629                	li	a2,10
-+    4cea:	000ba583          	lw	a1,0(s7)
-+    4cee:	855a                	mv	a0,s6
-+    4cf0:	dd9ff0ef          	jal	4ac8 <printint>
-+    4cf4:	8bca                	mv	s7,s2
-       state = 0;
--    4d68:	4981                	li	s3,0
--    4d6a:	b5d9                	j	4c30 <vprintf+0x4a>
-+    4cf6:	4981                	li	s3,0
-+    4cf8:	b5d1                	j	4bbc <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
--    4d6c:	008b8913          	addi	s2,s7,8
--    4d70:	4681                	li	a3,0
--    4d72:	4629                	li	a2,10
--    4d74:	000ba583          	lw	a1,0(s7)
--    4d78:	855a                	mv	a0,s6
--    4d7a:	dc5ff0ef          	jal	4b3e <printint>
-+    4cfa:	008b8913          	add	s2,s7,8
-+    4cfe:	4681                	li	a3,0
-+    4d00:	4629                	li	a2,10
-+    4d02:	000ba583          	lw	a1,0(s7)
-+    4d06:	855a                	mv	a0,s6
-+    4d08:	dc1ff0ef          	jal	4ac8 <printint>
-         i += 1;
--    4d7e:	2485                	addiw	s1,s1,1
-+    4d0c:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 0);
--    4d80:	8bca                	mv	s7,s2
-+    4d0e:	8bca                	mv	s7,s2
-       state = 0;
--    4d82:	4981                	li	s3,0
-+    4d10:	4981                	li	s3,0
-         i += 1;
--    4d84:	b575                	j	4c30 <vprintf+0x4a>
-+    4d12:	b56d                	j	4bbc <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
--    4d86:	008b8913          	addi	s2,s7,8
--    4d8a:	4681                	li	a3,0
--    4d8c:	4629                	li	a2,10
--    4d8e:	000ba583          	lw	a1,0(s7)
--    4d92:	855a                	mv	a0,s6
--    4d94:	dabff0ef          	jal	4b3e <printint>
-+    4d14:	008b8913          	add	s2,s7,8
-+    4d18:	4681                	li	a3,0
-+    4d1a:	4629                	li	a2,10
-+    4d1c:	000ba583          	lw	a1,0(s7)
-+    4d20:	855a                	mv	a0,s6
-+    4d22:	da7ff0ef          	jal	4ac8 <printint>
-         i += 2;
--    4d98:	2489                	addiw	s1,s1,2
-+    4d26:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 0);
--    4d9a:	8bca                	mv	s7,s2
-+    4d28:	8bca                	mv	s7,s2
-       state = 0;
--    4d9c:	4981                	li	s3,0
-+    4d2a:	4981                	li	s3,0
-         i += 2;
--    4d9e:	bd49                	j	4c30 <vprintf+0x4a>
-+    4d2c:	bd41                	j	4bbc <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 16, 0);
--    4da0:	008b8913          	addi	s2,s7,8
--    4da4:	4681                	li	a3,0
--    4da6:	4641                	li	a2,16
--    4da8:	000ba583          	lw	a1,0(s7)
--    4dac:	855a                	mv	a0,s6
--    4dae:	d91ff0ef          	jal	4b3e <printint>
--    4db2:	8bca                	mv	s7,s2
-+    4d2e:	008b8913          	add	s2,s7,8
-+    4d32:	4681                	li	a3,0
-+    4d34:	4641                	li	a2,16
-+    4d36:	000ba583          	lw	a1,0(s7)
-+    4d3a:	855a                	mv	a0,s6
-+    4d3c:	d8dff0ef          	jal	4ac8 <printint>
-+    4d40:	8bca                	mv	s7,s2
-       state = 0;
--    4db4:	4981                	li	s3,0
--    4db6:	bdad                	j	4c30 <vprintf+0x4a>
-+    4d42:	4981                	li	s3,0
-+    4d44:	bda5                	j	4bbc <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 16, 0);
--    4db8:	008b8913          	addi	s2,s7,8
--    4dbc:	4681                	li	a3,0
--    4dbe:	4641                	li	a2,16
--    4dc0:	000ba583          	lw	a1,0(s7)
--    4dc4:	855a                	mv	a0,s6
--    4dc6:	d79ff0ef          	jal	4b3e <printint>
-+    4d46:	008b8913          	add	s2,s7,8
-+    4d4a:	4681                	li	a3,0
-+    4d4c:	4641                	li	a2,16
-+    4d4e:	000ba583          	lw	a1,0(s7)
-+    4d52:	855a                	mv	a0,s6
-+    4d54:	d75ff0ef          	jal	4ac8 <printint>
-         i += 1;
--    4dca:	2485                	addiw	s1,s1,1
-+    4d58:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 16, 0);
--    4dcc:	8bca                	mv	s7,s2
-+    4d5a:	8bca                	mv	s7,s2
-       state = 0;
--    4dce:	4981                	li	s3,0
-+    4d5c:	4981                	li	s3,0
-         i += 1;
--    4dd0:	b585                	j	4c30 <vprintf+0x4a>
--    4dd2:	e06a                	sd	s10,0(sp)
-+    4d5e:	bdb9                	j	4bbc <vprintf+0x4c>
-         printptr(fd, va_arg(ap, uint64));
--    4dd4:	008b8d13          	addi	s10,s7,8
--    4dd8:	000bb983          	ld	s3,0(s7)
-+    4d60:	008b8d13          	add	s10,s7,8
-+    4d64:	000bb983          	ld	s3,0(s7)
-   putc(fd, '0');
--    4ddc:	03000593          	li	a1,48
--    4de0:	855a                	mv	a0,s6
--    4de2:	d3fff0ef          	jal	4b20 <putc>
-+    4d68:	03000593          	li	a1,48
-+    4d6c:	855a                	mv	a0,s6
-+    4d6e:	d3dff0ef          	jal	4aaa <putc>
-   putc(fd, 'x');
--    4de6:	07800593          	li	a1,120
--    4dea:	855a                	mv	a0,s6
--    4dec:	d35ff0ef          	jal	4b20 <putc>
--    4df0:	4941                	li	s2,16
-+    4d72:	07800593          	li	a1,120
-+    4d76:	855a                	mv	a0,s6
-+    4d78:	d33ff0ef          	jal	4aaa <putc>
-+    4d7c:	4941                	li	s2,16
-     putc(fd, digits[x >> (sizeof(uint64) * 8 - 4)]);
--    4df2:	00002b97          	auipc	s7,0x2
--    4df6:	66eb8b93          	addi	s7,s7,1646 # 7460 <digits>
--    4dfa:	03c9d793          	srli	a5,s3,0x3c
--    4dfe:	97de                	add	a5,a5,s7
--    4e00:	0007c583          	lbu	a1,0(a5)
--    4e04:	855a                	mv	a0,s6
--    4e06:	d1bff0ef          	jal	4b20 <putc>
-+    4d7e:	00002b97          	auipc	s7,0x2
-+    4d82:	652b8b93          	add	s7,s7,1618 # 73d0 <digits>
-+    4d86:	03c9d793          	srl	a5,s3,0x3c
-+    4d8a:	97de                	add	a5,a5,s7
-+    4d8c:	0007c583          	lbu	a1,0(a5)
-+    4d90:	855a                	mv	a0,s6
-+    4d92:	d19ff0ef          	jal	4aaa <putc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
--    4e0a:	0992                	slli	s3,s3,0x4
--    4e0c:	397d                	addiw	s2,s2,-1
--    4e0e:	fe0916e3          	bnez	s2,4dfa <vprintf+0x214>
-+    4d96:	0992                	sll	s3,s3,0x4
-+    4d98:	397d                	addw	s2,s2,-1
-+    4d9a:	fe0916e3          	bnez	s2,4d86 <vprintf+0x216>
-         printptr(fd, va_arg(ap, uint64));
--    4e12:	8bea                	mv	s7,s10
-+    4d9e:	8bea                	mv	s7,s10
-       state = 0;
--    4e14:	4981                	li	s3,0
--    4e16:	6d02                	ld	s10,0(sp)
--    4e18:	bd21                	j	4c30 <vprintf+0x4a>
-+    4da0:	4981                	li	s3,0
-+    4da2:	bd29                	j	4bbc <vprintf+0x4c>
-         if((s = va_arg(ap, char*)) == 0)
--    4e1a:	008b8993          	addi	s3,s7,8
--    4e1e:	000bb903          	ld	s2,0(s7)
--    4e22:	00090f63          	beqz	s2,4e40 <vprintf+0x25a>
-+    4da4:	008b8993          	add	s3,s7,8
-+    4da8:	000bb903          	ld	s2,0(s7)
-+    4dac:	00090f63          	beqz	s2,4dca <vprintf+0x25a>
-         for(; *s; s++)
--    4e26:	00094583          	lbu	a1,0(s2)
--    4e2a:	c195                	beqz	a1,4e4e <vprintf+0x268>
-+    4db0:	00094583          	lbu	a1,0(s2)
-+    4db4:	c195                	beqz	a1,4dd8 <vprintf+0x268>
-           putc(fd, *s);
--    4e2c:	855a                	mv	a0,s6
--    4e2e:	cf3ff0ef          	jal	4b20 <putc>
-+    4db6:	855a                	mv	a0,s6
-+    4db8:	cf3ff0ef          	jal	4aaa <putc>
-         for(; *s; s++)
--    4e32:	0905                	addi	s2,s2,1
--    4e34:	00094583          	lbu	a1,0(s2)
--    4e38:	f9f5                	bnez	a1,4e2c <vprintf+0x246>
-+    4dbc:	0905                	add	s2,s2,1
-+    4dbe:	00094583          	lbu	a1,0(s2)
-+    4dc2:	f9f5                	bnez	a1,4db6 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
--    4e3a:	8bce                	mv	s7,s3
-+    4dc4:	8bce                	mv	s7,s3
-       state = 0;
--    4e3c:	4981                	li	s3,0
--    4e3e:	bbcd                	j	4c30 <vprintf+0x4a>
-+    4dc6:	4981                	li	s3,0
-+    4dc8:	bbd5                	j	4bbc <vprintf+0x4c>
-           s = "(null)";
--    4e40:	00002917          	auipc	s2,0x2
--    4e44:	5a090913          	addi	s2,s2,1440 # 73e0 <malloc+0x2494>
-+    4dca:	00002917          	auipc	s2,0x2
-+    4dce:	5fe90913          	add	s2,s2,1534 # 73c8 <malloc+0x24f0>
-         for(; *s; s++)
--    4e48:	02800593          	li	a1,40
--    4e4c:	b7c5                	j	4e2c <vprintf+0x246>
-+    4dd2:	02800593          	li	a1,40
-+    4dd6:	b7c5                	j	4db6 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
--    4e4e:	8bce                	mv	s7,s3
-+    4dd8:	8bce                	mv	s7,s3
-       state = 0;
--    4e50:	4981                	li	s3,0
--    4e52:	bbf9                	j	4c30 <vprintf+0x4a>
--    4e54:	64a6                	ld	s1,72(sp)
--    4e56:	79e2                	ld	s3,56(sp)
--    4e58:	7a42                	ld	s4,48(sp)
--    4e5a:	7aa2                	ld	s5,40(sp)
--    4e5c:	7b02                	ld	s6,32(sp)
--    4e5e:	6be2                	ld	s7,24(sp)
--    4e60:	6c42                	ld	s8,16(sp)
--    4e62:	6ca2                	ld	s9,8(sp)
-+    4dda:	4981                	li	s3,0
-+    4ddc:	b3c5                	j	4bbc <vprintf+0x4c>
-     }
-   }
- }
--    4e64:	60e6                	ld	ra,88(sp)
--    4e66:	6446                	ld	s0,80(sp)
--    4e68:	6906                	ld	s2,64(sp)
--    4e6a:	6125                	addi	sp,sp,96
--    4e6c:	8082                	ret
--
--0000000000004e6e <fprintf>:
-+    4dde:	60e6                	ld	ra,88(sp)
-+    4de0:	6446                	ld	s0,80(sp)
-+    4de2:	64a6                	ld	s1,72(sp)
-+    4de4:	6906                	ld	s2,64(sp)
-+    4de6:	79e2                	ld	s3,56(sp)
-+    4de8:	7a42                	ld	s4,48(sp)
-+    4dea:	7aa2                	ld	s5,40(sp)
-+    4dec:	7b02                	ld	s6,32(sp)
-+    4dee:	6be2                	ld	s7,24(sp)
-+    4df0:	6c42                	ld	s8,16(sp)
-+    4df2:	6ca2                	ld	s9,8(sp)
-+    4df4:	6d02                	ld	s10,0(sp)
-+    4df6:	6125                	add	sp,sp,96
-+    4df8:	8082                	ret
-+
-+0000000000004dfa <fprintf>:
- 
- void
- fprintf(int fd, const char *fmt, ...)
- {
--    4e6e:	715d                	addi	sp,sp,-80
--    4e70:	ec06                	sd	ra,24(sp)
--    4e72:	e822                	sd	s0,16(sp)
--    4e74:	1000                	addi	s0,sp,32
--    4e76:	e010                	sd	a2,0(s0)
--    4e78:	e414                	sd	a3,8(s0)
--    4e7a:	e818                	sd	a4,16(s0)
--    4e7c:	ec1c                	sd	a5,24(s0)
--    4e7e:	03043023          	sd	a6,32(s0)
--    4e82:	03143423          	sd	a7,40(s0)
-+    4dfa:	715d                	add	sp,sp,-80
-+    4dfc:	ec06                	sd	ra,24(sp)
-+    4dfe:	e822                	sd	s0,16(sp)
-+    4e00:	1000                	add	s0,sp,32
-+    4e02:	e010                	sd	a2,0(s0)
-+    4e04:	e414                	sd	a3,8(s0)
-+    4e06:	e818                	sd	a4,16(s0)
-+    4e08:	ec1c                	sd	a5,24(s0)
-+    4e0a:	03043023          	sd	a6,32(s0)
-+    4e0e:	03143423          	sd	a7,40(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
--    4e86:	fe843423          	sd	s0,-24(s0)
-+    4e12:	fe843423          	sd	s0,-24(s0)
-   vprintf(fd, fmt, ap);
--    4e8a:	8622                	mv	a2,s0
--    4e8c:	d5bff0ef          	jal	4be6 <vprintf>
-+    4e16:	8622                	mv	a2,s0
-+    4e18:	d59ff0ef          	jal	4b70 <vprintf>
- }
--    4e90:	60e2                	ld	ra,24(sp)
--    4e92:	6442                	ld	s0,16(sp)
--    4e94:	6161                	addi	sp,sp,80
--    4e96:	8082                	ret
-+    4e1c:	60e2                	ld	ra,24(sp)
-+    4e1e:	6442                	ld	s0,16(sp)
-+    4e20:	6161                	add	sp,sp,80
-+    4e22:	8082                	ret
- 
--0000000000004e98 <printf>:
-+0000000000004e24 <printf>:
- 
- void
- printf(const char *fmt, ...)
- {
--    4e98:	711d                	addi	sp,sp,-96
--    4e9a:	ec06                	sd	ra,24(sp)
--    4e9c:	e822                	sd	s0,16(sp)
--    4e9e:	1000                	addi	s0,sp,32
--    4ea0:	e40c                	sd	a1,8(s0)
--    4ea2:	e810                	sd	a2,16(s0)
--    4ea4:	ec14                	sd	a3,24(s0)
--    4ea6:	f018                	sd	a4,32(s0)
--    4ea8:	f41c                	sd	a5,40(s0)
--    4eaa:	03043823          	sd	a6,48(s0)
--    4eae:	03143c23          	sd	a7,56(s0)
-+    4e24:	711d                	add	sp,sp,-96
-+    4e26:	ec06                	sd	ra,24(sp)
-+    4e28:	e822                	sd	s0,16(sp)
-+    4e2a:	1000                	add	s0,sp,32
-+    4e2c:	e40c                	sd	a1,8(s0)
-+    4e2e:	e810                	sd	a2,16(s0)
-+    4e30:	ec14                	sd	a3,24(s0)
-+    4e32:	f018                	sd	a4,32(s0)
-+    4e34:	f41c                	sd	a5,40(s0)
-+    4e36:	03043823          	sd	a6,48(s0)
-+    4e3a:	03143c23          	sd	a7,56(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
--    4eb2:	00840613          	addi	a2,s0,8
--    4eb6:	fec43423          	sd	a2,-24(s0)
-+    4e3e:	00840613          	add	a2,s0,8
-+    4e42:	fec43423          	sd	a2,-24(s0)
-   vprintf(1, fmt, ap);
--    4eba:	85aa                	mv	a1,a0
--    4ebc:	4505                	li	a0,1
--    4ebe:	d29ff0ef          	jal	4be6 <vprintf>
-+    4e46:	85aa                	mv	a1,a0
-+    4e48:	4505                	li	a0,1
-+    4e4a:	d27ff0ef          	jal	4b70 <vprintf>
- }
--    4ec2:	60e2                	ld	ra,24(sp)
--    4ec4:	6442                	ld	s0,16(sp)
--    4ec6:	6125                	addi	sp,sp,96
--    4ec8:	8082                	ret
-+    4e4e:	60e2                	ld	ra,24(sp)
-+    4e50:	6442                	ld	s0,16(sp)
-+    4e52:	6125                	add	sp,sp,96
-+    4e54:	8082                	ret
- 
--0000000000004eca <free>:
-+0000000000004e56 <free>:
- static Header base;
- static Header *freep;
- 
- void
- free(void *ap)
- {
--    4eca:	1141                	addi	sp,sp,-16
--    4ecc:	e422                	sd	s0,8(sp)
--    4ece:	0800                	addi	s0,sp,16
-+    4e56:	1141                	add	sp,sp,-16
-+    4e58:	e422                	sd	s0,8(sp)
-+    4e5a:	0800                	add	s0,sp,16
-   Header *bp, *p;
- 
-   bp = (Header*)ap - 1;
--    4ed0:	ff050693          	addi	a3,a0,-16
-+    4e5c:	ff050693          	add	a3,a0,-16
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
--    4ed4:	00004797          	auipc	a5,0x4
--    4ed8:	57c7b783          	ld	a5,1404(a5) # 9450 <freep>
--    4edc:	a02d                	j	4f06 <free+0x3c>
-+    4e60:	00003797          	auipc	a5,0x3
-+    4e64:	5f07b783          	ld	a5,1520(a5) # 8450 <freep>
-+    4e68:	a02d                	j	4e92 <free+0x3c>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-       break;
-   if(bp + bp->s.size == p->s.ptr){
-     bp->s.size += p->s.ptr->s.size;
--    4ede:	4618                	lw	a4,8(a2)
--    4ee0:	9f2d                	addw	a4,a4,a1
--    4ee2:	fee52c23          	sw	a4,-8(a0)
-+    4e6a:	4618                	lw	a4,8(a2)
-+    4e6c:	9f2d                	addw	a4,a4,a1
-+    4e6e:	fee52c23          	sw	a4,-8(a0)
-     bp->s.ptr = p->s.ptr->s.ptr;
--    4ee6:	6398                	ld	a4,0(a5)
--    4ee8:	6310                	ld	a2,0(a4)
--    4eea:	a83d                	j	4f28 <free+0x5e>
-+    4e72:	6398                	ld	a4,0(a5)
-+    4e74:	6310                	ld	a2,0(a4)
-+    4e76:	a83d                	j	4eb4 <free+0x5e>
-   } else
-     bp->s.ptr = p->s.ptr;
-   if(p + p->s.size == bp){
-     p->s.size += bp->s.size;
--    4eec:	ff852703          	lw	a4,-8(a0)
--    4ef0:	9f31                	addw	a4,a4,a2
--    4ef2:	c798                	sw	a4,8(a5)
-+    4e78:	ff852703          	lw	a4,-8(a0)
-+    4e7c:	9f31                	addw	a4,a4,a2
-+    4e7e:	c798                	sw	a4,8(a5)
-     p->s.ptr = bp->s.ptr;
--    4ef4:	ff053683          	ld	a3,-16(a0)
--    4ef8:	a091                	j	4f3c <free+0x72>
-+    4e80:	ff053683          	ld	a3,-16(a0)
-+    4e84:	a091                	j	4ec8 <free+0x72>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
--    4efa:	6398                	ld	a4,0(a5)
--    4efc:	00e7e463          	bltu	a5,a4,4f04 <free+0x3a>
--    4f00:	00e6ea63          	bltu	a3,a4,4f14 <free+0x4a>
-+    4e86:	6398                	ld	a4,0(a5)
-+    4e88:	00e7e463          	bltu	a5,a4,4e90 <free+0x3a>
-+    4e8c:	00e6ea63          	bltu	a3,a4,4ea0 <free+0x4a>
- {
--    4f04:	87ba                	mv	a5,a4
-+    4e90:	87ba                	mv	a5,a4
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
--    4f06:	fed7fae3          	bgeu	a5,a3,4efa <free+0x30>
--    4f0a:	6398                	ld	a4,0(a5)
--    4f0c:	00e6e463          	bltu	a3,a4,4f14 <free+0x4a>
-+    4e92:	fed7fae3          	bgeu	a5,a3,4e86 <free+0x30>
-+    4e96:	6398                	ld	a4,0(a5)
-+    4e98:	00e6e463          	bltu	a3,a4,4ea0 <free+0x4a>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
--    4f10:	fee7eae3          	bltu	a5,a4,4f04 <free+0x3a>
-+    4e9c:	fee7eae3          	bltu	a5,a4,4e90 <free+0x3a>
-   if(bp + bp->s.size == p->s.ptr){
--    4f14:	ff852583          	lw	a1,-8(a0)
--    4f18:	6390                	ld	a2,0(a5)
--    4f1a:	02059813          	slli	a6,a1,0x20
--    4f1e:	01c85713          	srli	a4,a6,0x1c
--    4f22:	9736                	add	a4,a4,a3
--    4f24:	fae60de3          	beq	a2,a4,4ede <free+0x14>
-+    4ea0:	ff852583          	lw	a1,-8(a0)
-+    4ea4:	6390                	ld	a2,0(a5)
-+    4ea6:	02059813          	sll	a6,a1,0x20
-+    4eaa:	01c85713          	srl	a4,a6,0x1c
-+    4eae:	9736                	add	a4,a4,a3
-+    4eb0:	fae60de3          	beq	a2,a4,4e6a <free+0x14>
-     bp->s.ptr = p->s.ptr->s.ptr;
--    4f28:	fec53823          	sd	a2,-16(a0)
-+    4eb4:	fec53823          	sd	a2,-16(a0)
-   if(p + p->s.size == bp){
--    4f2c:	4790                	lw	a2,8(a5)
--    4f2e:	02061593          	slli	a1,a2,0x20
--    4f32:	01c5d713          	srli	a4,a1,0x1c
--    4f36:	973e                	add	a4,a4,a5
--    4f38:	fae68ae3          	beq	a3,a4,4eec <free+0x22>
-+    4eb8:	4790                	lw	a2,8(a5)
-+    4eba:	02061593          	sll	a1,a2,0x20
-+    4ebe:	01c5d713          	srl	a4,a1,0x1c
-+    4ec2:	973e                	add	a4,a4,a5
-+    4ec4:	fae68ae3          	beq	a3,a4,4e78 <free+0x22>
-     p->s.ptr = bp->s.ptr;
--    4f3c:	e394                	sd	a3,0(a5)
-+    4ec8:	e394                	sd	a3,0(a5)
-   } else
-     p->s.ptr = bp;
-   freep = p;
--    4f3e:	00004717          	auipc	a4,0x4
--    4f42:	50f73923          	sd	a5,1298(a4) # 9450 <freep>
-+    4eca:	00003717          	auipc	a4,0x3
-+    4ece:	58f73323          	sd	a5,1414(a4) # 8450 <freep>
- }
--    4f46:	6422                	ld	s0,8(sp)
--    4f48:	0141                	addi	sp,sp,16
--    4f4a:	8082                	ret
-+    4ed2:	6422                	ld	s0,8(sp)
-+    4ed4:	0141                	add	sp,sp,16
-+    4ed6:	8082                	ret
- 
--0000000000004f4c <malloc>:
-+0000000000004ed8 <malloc>:
-   return freep;
- }
- 
- void*
- malloc(uint nbytes)
- {
--    4f4c:	7139                	addi	sp,sp,-64
--    4f4e:	fc06                	sd	ra,56(sp)
--    4f50:	f822                	sd	s0,48(sp)
--    4f52:	f426                	sd	s1,40(sp)
--    4f54:	ec4e                	sd	s3,24(sp)
--    4f56:	0080                	addi	s0,sp,64
-+    4ed8:	7139                	add	sp,sp,-64
-+    4eda:	fc06                	sd	ra,56(sp)
-+    4edc:	f822                	sd	s0,48(sp)
-+    4ede:	f426                	sd	s1,40(sp)
-+    4ee0:	f04a                	sd	s2,32(sp)
-+    4ee2:	ec4e                	sd	s3,24(sp)
-+    4ee4:	e852                	sd	s4,16(sp)
-+    4ee6:	e456                	sd	s5,8(sp)
-+    4ee8:	e05a                	sd	s6,0(sp)
-+    4eea:	0080                	add	s0,sp,64
-   Header *p, *prevp;
-   uint nunits;
- 
-   nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;
--    4f58:	02051493          	slli	s1,a0,0x20
--    4f5c:	9081                	srli	s1,s1,0x20
--    4f5e:	04bd                	addi	s1,s1,15
--    4f60:	8091                	srli	s1,s1,0x4
--    4f62:	0014899b          	addiw	s3,s1,1
--    4f66:	0485                	addi	s1,s1,1
-+    4eec:	02051493          	sll	s1,a0,0x20
-+    4ef0:	9081                	srl	s1,s1,0x20
-+    4ef2:	04bd                	add	s1,s1,15
-+    4ef4:	8091                	srl	s1,s1,0x4
-+    4ef6:	0014899b          	addw	s3,s1,1
-+    4efa:	0485                	add	s1,s1,1
-   if((prevp = freep) == 0){
--    4f68:	00004517          	auipc	a0,0x4
--    4f6c:	4e853503          	ld	a0,1256(a0) # 9450 <freep>
--    4f70:	c915                	beqz	a0,4fa4 <malloc+0x58>
-+    4efc:	00003517          	auipc	a0,0x3
-+    4f00:	55453503          	ld	a0,1364(a0) # 8450 <freep>
-+    4f04:	c515                	beqz	a0,4f30 <malloc+0x58>
-     base.s.ptr = freep = prevp = &base;
-     base.s.size = 0;
-   }
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
--    4f72:	611c                	ld	a5,0(a0)
-+    4f06:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
--    4f74:	4798                	lw	a4,8(a5)
--    4f76:	08977a63          	bgeu	a4,s1,500a <malloc+0xbe>
--    4f7a:	f04a                	sd	s2,32(sp)
--    4f7c:	e852                	sd	s4,16(sp)
--    4f7e:	e456                	sd	s5,8(sp)
--    4f80:	e05a                	sd	s6,0(sp)
-+    4f08:	4798                	lw	a4,8(a5)
-+    4f0a:	02977f63          	bgeu	a4,s1,4f48 <malloc+0x70>
-   if(nu < 4096)
--    4f82:	8a4e                	mv	s4,s3
--    4f84:	0009871b          	sext.w	a4,s3
--    4f88:	6685                	lui	a3,0x1
--    4f8a:	00d77363          	bgeu	a4,a3,4f90 <malloc+0x44>
--    4f8e:	6a05                	lui	s4,0x1
--    4f90:	000a0b1b          	sext.w	s6,s4
-+    4f0e:	8a4e                	mv	s4,s3
-+    4f10:	0009871b          	sext.w	a4,s3
-+    4f14:	6685                	lui	a3,0x1
-+    4f16:	00d77363          	bgeu	a4,a3,4f1c <malloc+0x44>
-+    4f1a:	6a05                	lui	s4,0x1
-+    4f1c:	000a0b1b          	sext.w	s6,s4
-   p = sbrk(nu * sizeof(Header));
--    4f94:	004a1a1b          	slliw	s4,s4,0x4
-+    4f20:	004a1a1b          	sllw	s4,s4,0x4
-         p->s.size = nunits;
-       }
-       freep = prevp;
-       return (void*)(p + 1);
-     }
-     if(p == freep)
--    4f98:	00004917          	auipc	s2,0x4
--    4f9c:	4b890913          	addi	s2,s2,1208 # 9450 <freep>
-+    4f24:	00003917          	auipc	s2,0x3
-+    4f28:	52c90913          	add	s2,s2,1324 # 8450 <freep>
-   if(p == (char*)-1)
--    4fa0:	5afd                	li	s5,-1
--    4fa2:	a081                	j	4fe2 <malloc+0x96>
--    4fa4:	f04a                	sd	s2,32(sp)
--    4fa6:	e852                	sd	s4,16(sp)
--    4fa8:	e456                	sd	s5,8(sp)
--    4faa:	e05a                	sd	s6,0(sp)
-+    4f2c:	5afd                	li	s5,-1
-+    4f2e:	a885                	j	4f9e <malloc+0xc6>
-     base.s.ptr = freep = prevp = &base;
--    4fac:	0000b797          	auipc	a5,0xb
--    4fb0:	ccc78793          	addi	a5,a5,-820 # fc78 <base>
--    4fb4:	00004717          	auipc	a4,0x4
--    4fb8:	48f73e23          	sd	a5,1180(a4) # 9450 <freep>
--    4fbc:	e39c                	sd	a5,0(a5)
-+    4f30:	0000a797          	auipc	a5,0xa
-+    4f34:	d4878793          	add	a5,a5,-696 # ec78 <base>
-+    4f38:	00003717          	auipc	a4,0x3
-+    4f3c:	50f73c23          	sd	a5,1304(a4) # 8450 <freep>
-+    4f40:	e39c                	sd	a5,0(a5)
-     base.s.size = 0;
--    4fbe:	0007a423          	sw	zero,8(a5)
-+    4f42:	0007a423          	sw	zero,8(a5)
-     if(p->s.size >= nunits){
--    4fc2:	b7c1                	j	4f82 <malloc+0x36>
-+    4f46:	b7e1                	j	4f0e <malloc+0x36>
-+      if(p->s.size == nunits)
-+    4f48:	02e48c63          	beq	s1,a4,4f80 <malloc+0xa8>
-+        p->s.size -= nunits;
-+    4f4c:	4137073b          	subw	a4,a4,s3
-+    4f50:	c798                	sw	a4,8(a5)
-+        p += p->s.size;
-+    4f52:	02071693          	sll	a3,a4,0x20
-+    4f56:	01c6d713          	srl	a4,a3,0x1c
-+    4f5a:	97ba                	add	a5,a5,a4
-+        p->s.size = nunits;
-+    4f5c:	0137a423          	sw	s3,8(a5)
-+      freep = prevp;
-+    4f60:	00003717          	auipc	a4,0x3
-+    4f64:	4ea73823          	sd	a0,1264(a4) # 8450 <freep>
-+      return (void*)(p + 1);
-+    4f68:	01078513          	add	a0,a5,16
-+      if((p = morecore(nunits)) == 0)
-+        return 0;
-+  }
-+}
-+    4f6c:	70e2                	ld	ra,56(sp)
-+    4f6e:	7442                	ld	s0,48(sp)
-+    4f70:	74a2                	ld	s1,40(sp)
-+    4f72:	7902                	ld	s2,32(sp)
-+    4f74:	69e2                	ld	s3,24(sp)
-+    4f76:	6a42                	ld	s4,16(sp)
-+    4f78:	6aa2                	ld	s5,8(sp)
-+    4f7a:	6b02                	ld	s6,0(sp)
-+    4f7c:	6121                	add	sp,sp,64
-+    4f7e:	8082                	ret
-         prevp->s.ptr = p->s.ptr;
--    4fc4:	6398                	ld	a4,0(a5)
--    4fc6:	e118                	sd	a4,0(a0)
--    4fc8:	a8a9                	j	5022 <malloc+0xd6>
-+    4f80:	6398                	ld	a4,0(a5)
-+    4f82:	e118                	sd	a4,0(a0)
-+    4f84:	bff1                	j	4f60 <malloc+0x88>
-   hp->s.size = nu;
--    4fca:	01652423          	sw	s6,8(a0)
-+    4f86:	01652423          	sw	s6,8(a0)
-   free((void*)(hp + 1));
--    4fce:	0541                	addi	a0,a0,16
--    4fd0:	efbff0ef          	jal	4eca <free>
-+    4f8a:	0541                	add	a0,a0,16
-+    4f8c:	ecbff0ef          	jal	4e56 <free>
-   return freep;
--    4fd4:	00093503          	ld	a0,0(s2)
-+    4f90:	00093503          	ld	a0,0(s2)
-       if((p = morecore(nunits)) == 0)
--    4fd8:	c12d                	beqz	a0,503a <malloc+0xee>
-+    4f94:	dd61                	beqz	a0,4f6c <malloc+0x94>
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
--    4fda:	611c                	ld	a5,0(a0)
-+    4f96:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
--    4fdc:	4798                	lw	a4,8(a5)
--    4fde:	02977263          	bgeu	a4,s1,5002 <malloc+0xb6>
-+    4f98:	4798                	lw	a4,8(a5)
-+    4f9a:	fa9777e3          	bgeu	a4,s1,4f48 <malloc+0x70>
-     if(p == freep)
--    4fe2:	00093703          	ld	a4,0(s2)
--    4fe6:	853e                	mv	a0,a5
--    4fe8:	fef719e3          	bne	a4,a5,4fda <malloc+0x8e>
-+    4f9e:	00093703          	ld	a4,0(s2)
-+    4fa2:	853e                	mv	a0,a5
-+    4fa4:	fef719e3          	bne	a4,a5,4f96 <malloc+0xbe>
-   p = sbrk(nu * sizeof(Header));
--    4fec:	8552                	mv	a0,s4
--    4fee:	b1bff0ef          	jal	4b08 <sbrk>
-+    4fa8:	8552                	mv	a0,s4
-+    4faa:	ae9ff0ef          	jal	4a92 <sbrk>
-   if(p == (char*)-1)
--    4ff2:	fd551ce3          	bne	a0,s5,4fca <malloc+0x7e>
-+    4fae:	fd551ce3          	bne	a0,s5,4f86 <malloc+0xae>
-         return 0;
--    4ff6:	4501                	li	a0,0
--    4ff8:	7902                	ld	s2,32(sp)
--    4ffa:	6a42                	ld	s4,16(sp)
--    4ffc:	6aa2                	ld	s5,8(sp)
--    4ffe:	6b02                	ld	s6,0(sp)
--    5000:	a03d                	j	502e <malloc+0xe2>
--    5002:	7902                	ld	s2,32(sp)
--    5004:	6a42                	ld	s4,16(sp)
--    5006:	6aa2                	ld	s5,8(sp)
--    5008:	6b02                	ld	s6,0(sp)
--      if(p->s.size == nunits)
--    500a:	fae48de3          	beq	s1,a4,4fc4 <malloc+0x78>
--        p->s.size -= nunits;
--    500e:	4137073b          	subw	a4,a4,s3
--    5012:	c798                	sw	a4,8(a5)
--        p += p->s.size;
--    5014:	02071693          	slli	a3,a4,0x20
--    5018:	01c6d713          	srli	a4,a3,0x1c
--    501c:	97ba                	add	a5,a5,a4
--        p->s.size = nunits;
--    501e:	0137a423          	sw	s3,8(a5)
--      freep = prevp;
--    5022:	00004717          	auipc	a4,0x4
--    5026:	42a73723          	sd	a0,1070(a4) # 9450 <freep>
--      return (void*)(p + 1);
--    502a:	01078513          	addi	a0,a5,16
--  }
--}
--    502e:	70e2                	ld	ra,56(sp)
--    5030:	7442                	ld	s0,48(sp)
--    5032:	74a2                	ld	s1,40(sp)
--    5034:	69e2                	ld	s3,24(sp)
--    5036:	6121                	addi	sp,sp,64
--    5038:	8082                	ret
--    503a:	7902                	ld	s2,32(sp)
--    503c:	6a42                	ld	s4,16(sp)
--    503e:	6aa2                	ld	s5,8(sp)
--    5040:	6b02                	ld	s6,0(sp)
--    5042:	b7f5                	j	502e <malloc+0xe2>
-+    4fb2:	4501                	li	a0,0
-+    4fb4:	bf65                	j	4f6c <malloc+0x94>
-diff --git a/Assignments/Assignment-6/xv6/user/usertests.d b/Assignments/Assignment-6/xv6/user/usertests.d
-index edacb54..c76551d 100644
---- a/Assignments/Assignment-6/xv6/user/usertests.d
-+++ b/Assignments/Assignment-6/xv6/user/usertests.d
-@@ -1,4 +1,3 @@
--user/usertests.o: user/usertests.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/param.h kernel/types.h kernel/stat.h user/user.h kernel/fs.h \
-- kernel/fcntl.h kernel/syscall.h kernel/memlayout.h kernel/riscv.h
-+user/usertests.o: user/usertests.c kernel/param.h kernel/types.h \
-+ kernel/stat.h user/user.h kernel/fs.h kernel/fcntl.h kernel/syscall.h \
-+ kernel/memlayout.h kernel/riscv.h
-diff --git a/Assignments/Assignment-6/xv6/user/usertests.o b/Assignments/Assignment-6/xv6/user/usertests.o
-index 5359195..49e35e9 100644
-Binary files a/Assignments/Assignment-6/xv6/user/usertests.o and b/Assignments/Assignment-6/xv6/user/usertests.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/usertests.sym b/Assignments/Assignment-6/xv6/user/usertests.sym
-index 6972d3d..4d1f345 100644
---- a/Assignments/Assignment-6/xv6/user/usertests.sym
-+++ b/Assignments/Assignment-6/xv6/user/usertests.sym
-@@ -1,8 +1,7 @@
- 0000000000000000 .text
--0000000000005048 .rodata
--0000000000007478 .eh_frame
--0000000000009000 .data
--0000000000009450 .bss
-+0000000000004fb8 .rodata
-+0000000000008000 .data
-+0000000000008450 .bss
- 0000000000000000 .debug_info
- 0000000000000000 .debug_abbrev
- 0000000000000000 .debug_loc
-@@ -12,130 +11,131 @@
- 0000000000000000 .debug_str
- 0000000000000000 .comment
- 0000000000000000 .riscv.attributes
-+0000000000000000 .debug_frame
- 0000000000000000 usertests.c
--0000000000009560 big.0
--0000000000009460 args.1
-+0000000000008560 big.0
-+0000000000008460 args.1
- 0000000000000000 ulib.c
- 0000000000000000 usys.o
- 0000000000000000 printf.c
--0000000000004b20 putc
--0000000000004b3e printint
--0000000000007460 digits
-+0000000000004aaa putc
-+0000000000004ac8 printint
-+00000000000073d0 digits
- 0000000000000000 umalloc.c
--0000000000009450 freep
--000000000000fc78 base
-+0000000000008450 freep
-+000000000000ec78 base
- 00000000000009be writebig
--00000000000025ca sbrk8000
--0000000000004828 strcpy
--0000000000001650 exitwait
--0000000000001db6 manywrites
--0000000000004e98 printf
-+0000000000002576 sbrk8000
-+00000000000047b2 strcpy
-+0000000000001622 exitwait
-+0000000000001d8e manywrites
-+0000000000004e24 printf
- 00000000000003be outofinodes
--000000000000425a bigargtest
--00000000000049d2 memmove
--000000000000359a openiputtest
--0000000000004ac8 mknod
--00000000000038a0 reparent
--00000000000048e0 gets
--0000000000004b00 getpid
--00000000000014b4 pipe1
--0000000000004a64 memcpy
--00000000000034a0 iref
-+00000000000041fa bigargtest
-+000000000000495c memmove
-+0000000000003546 openiputtest
-+0000000000004a52 mknod
-+000000000000384c reparent
-+000000000000486a gets
-+0000000000004a8a getpid
-+00000000000014a2 pipe1
-+00000000000049ee memcpy
-+000000000000344c iref
- 0000000000000fd4 pgbug
--0000000000001d12 nowrite
--0000000000004f4c malloc
-+0000000000001cea nowrite
-+0000000000004ed8 malloc
- 00000000000005aa copyout
--0000000000004b10 sleep
--0000000000001cae stacktest
--00000000000025f8 execout
--000000000000246c sbrkbugs
--0000000000002a8a exitiputtest
--0000000000004338 fsfull
-+0000000000004a9a sleep
-+0000000000001c86 stacktest
-+00000000000025a4 execout
-+0000000000002418 sbrkbugs
-+0000000000002a36 exitiputtest
-+00000000000042d8 fsfull
- 0000000000000e9e bigdir
--0000000000001ae4 forktest
--0000000000001fce rwsbrk
-+0000000000001ab4 forktest
-+0000000000001f98 rwsbrk
- 00000000000011dc truncate3
- 000000000000022c bigwrite
--0000000000003af2 sharedfd
--0000000000004a90 pipe
--00000000000036ea killstatus
--000000000000a568 uninit
--00000000000032f0 dirfile
--0000000000004aa0 write
-+0000000000003a9e sharedfd
-+0000000000004a1a pipe
-+0000000000003696 killstatus
-+0000000000009568 uninit
-+000000000000329c dirfile
-+0000000000004a2a write
- 0000000000000078 bsstest
--0000000000004ad8 fstat
--0000000000004e6e fprintf
--0000000000004ab0 kill
--00000000000027d0 diskfull
-+0000000000004a62 fstat
-+0000000000004dfa fprintf
-+0000000000004a3a kill
-+000000000000277c diskfull
- 0000000000000e3c validatetest
--0000000000009010 quicktests
--00000000000031ca rmdot
-+0000000000008010 quicktests
-+0000000000003176 rmdot
- 000000000000047e copyin
--0000000000004be6 vprintf
-+0000000000004b70 vprintf
- 0000000000000118 truncate2
--0000000000004af0 chdir
--0000000000009000 big
--000000000000133e exectest
--0000000000004ab8 exec
-+0000000000004a7a chdir
-+0000000000008000 big
-+000000000000132e exectest
-+0000000000004a42 exec
- 00000000000002ee badwrite
--0000000000004a88 wait
--0000000000004a98 read
--0000000000003764 preempt
--0000000000004ad0 unlink
-+0000000000004a12 wait
-+0000000000004a22 read
-+0000000000003710 preempt
-+0000000000004a5a unlink
- 0000000000001000 badarg
--0000000000002412 argptest
--0000000000003a7a mem
--000000000000452c runtests
--0000000000004a2a memcmp
--0000000000004a78 fork
--0000000000002528 sbrklast
--0000000000001eca copyinstr3
--0000000000001752 forkfork
--0000000000004b08 sbrk
--00000000000093e0 slowtests
--0000000000004b18 uptime
--00000000000016e0 twochildren
--0000000000001c1c MAXVAplus
--000000000000489a memset
--0000000000001b8c kernmem
-+00000000000023be argptest
-+0000000000003a26 mem
-+00000000000044cc runtests
-+00000000000049b4 memcmp
-+0000000000004a02 fork
-+00000000000024d4 sbrklast
-+0000000000001e94 copyinstr3
-+0000000000001724 forkfork
-+0000000000004a92 sbrk
-+00000000000083e0 slowtests
-+0000000000004aa2 uptime
-+00000000000016b2 twochildren
-+0000000000001bf4 MAXVAplus
-+0000000000004824 memset
-+0000000000001b64 kernmem
- 00000000000001b8 createtest
--000000000000476a main
--0000000000001830 createdelete
--000000000000364c forkforkfork
--0000000000003920 sbrkfail
--0000000000004844 strcmp
-+00000000000046f4 main
-+0000000000001802 createdelete
-+00000000000035f8 forkforkfork
-+00000000000038cc sbrkfail
-+00000000000047ce strcmp
- 000000000000087e writetest
--0000000000004af8 dup
-+0000000000004a82 dup
- 00000000000006e0 truncate1
- 00000000000000b2 opentest
--00000000000044ae run
--0000000000002bdc subdir
-+000000000000444e run
-+0000000000002b88 subdir
- 000000000000103e copyinstr2
- 0000000000000c74 linktest
--000000000000cc78 buf
--0000000000002b36 dirtest
--000000000000469c drivetests
--000000000000236e sbrkarg
--00000000000029e4 iputtest
--0000000000004950 stat
--00000000000040d6 bigfile
--00000000000045a6 countfree
-+000000000000bc78 buf
-+0000000000002ae2 dirtest
-+0000000000004626 drivetests
-+000000000000231a sbrkarg
-+0000000000002990 iputtest
-+00000000000048da stat
-+0000000000004076 bigfile
-+000000000000453e countfree
- 0000000000000b1e unlinkread
--0000000000004ae0 link
--0000000000004a80 exit
--0000000000004816 start
--000000000000498a atoi
-+0000000000004a6a link
-+0000000000004a0a exit
-+00000000000047a0 start
-+0000000000004914 atoi
- 0000000000000000 copyinstr1
--0000000000001a08 linkunlink
--00000000000020d4 sbrkbasic
--0000000000004870 strlen
--0000000000004ac0 open
--00000000000048bc strchr
--0000000000003e32 concreate
--0000000000002694 fourteen
--0000000000003c5e fourfiles
--0000000000002216 sbrkmuch
--0000000000004ae8 mkdir
--0000000000004aa8 close
--00000000000017e8 reparent2
--0000000000004eca free
-+00000000000019da linkunlink
-+0000000000002098 sbrkbasic
-+00000000000047fa strlen
-+0000000000004a4a open
-+0000000000004846 strchr
-+0000000000003dd2 concreate
-+0000000000002640 fourteen
-+0000000000003bfe fourfiles
-+00000000000021c2 sbrkmuch
-+0000000000004a72 mkdir
-+0000000000004a32 close
-+00000000000017ba reparent2
-+0000000000004e56 free
-diff --git a/Assignments/Assignment-6/xv6/user/usys.d b/Assignments/Assignment-6/xv6/user/usys.d
-index 4506d6c..80c63fd 100644
---- a/Assignments/Assignment-6/xv6/user/usys.d
-+++ b/Assignments/Assignment-6/xv6/user/usys.d
-@@ -1,3 +1 @@
--user/usys.o: user/usys.S \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/syscall.h
-+user/usys.o: user/usys.S kernel/syscall.h
-diff --git a/Assignments/Assignment-6/xv6/user/usys.o b/Assignments/Assignment-6/xv6/user/usys.o
-index 9172957..29c23a8 100644
-Binary files a/Assignments/Assignment-6/xv6/user/usys.o and b/Assignments/Assignment-6/xv6/user/usys.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/wc.asm b/Assignments/Assignment-6/xv6/user/wc.asm
-index 034b4ea..c7ba055 100644
---- a/Assignments/Assignment-6/xv6/user/wc.asm
-+++ b/Assignments/Assignment-6/xv6/user/wc.asm
-@@ -11,7 +11,7 @@ char buf[512];
- void
- wc(int fd, char *name)
- {
--   0:	7119                	addi	sp,sp,-128
-+   0:	7119                	add	sp,sp,-128
-    2:	fc86                	sd	ra,120(sp)
-    4:	f8a2                	sd	s0,112(sp)
-    6:	f4a6                	sd	s1,104(sp)
-@@ -25,7 +25,7 @@ wc(int fd, char *name)
-   16:	f466                	sd	s9,40(sp)
-   18:	f06a                	sd	s10,32(sp)
-   1a:	ec6e                	sd	s11,24(sp)
--  1c:	0100                	addi	s0,sp,128
-+  1c:	0100                	add	s0,sp,128
-   1e:	f8a43423          	sd	a0,-120(s0)
-   22:	f8b43023          	sd	a1,-128(s0)
-   int i, n;
-@@ -40,7 +40,7 @@ wc(int fd, char *name)
-   2c:	4c01                	li	s8,0
-   while((n = read(fd, buf, sizeof(buf))) > 0){
-   2e:	00001d97          	auipc	s11,0x1
--  32:	fe2d8d93          	addi	s11,s11,-30 # 1010 <buf>
-+  32:	fe2d8d93          	add	s11,s11,-30 # 1010 <buf>
-     for(i=0; i<n; i++){
-       c++;
-       if(buf[i] == '\n')
-@@ -48,44 +48,45 @@ wc(int fd, char *name)
-         l++;
-       if(strchr(" \r\t\n\v", buf[i]))
-   38:	00001a17          	auipc	s4,0x1
--  3c:	958a0a13          	addi	s4,s4,-1704 # 990 <malloc+0xfe>
-+  3c:	938a0a13          	add	s4,s4,-1736 # 970 <malloc+0xe2>
-         inword = 0;
-   40:	4b81                	li	s7,0
-   while((n = read(fd, buf, sizeof(buf))) > 0){
-   42:	a035                	j	6e <wc+0x6e>
-       if(strchr(" \r\t\n\v", buf[i]))
-   44:	8552                	mv	a0,s4
--  46:	1bc000ef          	jal	202 <strchr>
-+  46:	1b6000ef          	jal	1fc <strchr>
-   4a:	c919                	beqz	a0,60 <wc+0x60>
-         inword = 0;
-   4c:	895e                	mv	s2,s7
-     for(i=0; i<n; i++){
--  4e:	0485                	addi	s1,s1,1
--  50:	01348d63          	beq	s1,s3,6a <wc+0x6a>
-+  4e:	0485                	add	s1,s1,1
-+  50:	00998d63          	beq	s3,s1,6a <wc+0x6a>
-       if(buf[i] == '\n')
-   54:	0004c583          	lbu	a1,0(s1)
-   58:	ff5596e3          	bne	a1,s5,44 <wc+0x44>
-         l++;
--  5c:	2c05                	addiw	s8,s8,1
-+  5c:	2c05                	addw	s8,s8,1
-   5e:	b7dd                	j	44 <wc+0x44>
-       else if(!inword){
-   60:	fe0917e3          	bnez	s2,4e <wc+0x4e>
-         w++;
--  64:	2c85                	addiw	s9,s9,1
-+  64:	2c85                	addw	s9,s9,1
-         inword = 1;
-   66:	4905                	li	s2,1
-   68:	b7dd                	j	4e <wc+0x4e>
-+      c++;
-   6a:	01ab0d3b          	addw	s10,s6,s10
-   while((n = read(fd, buf, sizeof(buf))) > 0){
-   6e:	20000613          	li	a2,512
-   72:	85ee                	mv	a1,s11
-   74:	f8843503          	ld	a0,-120(s0)
--  78:	366000ef          	jal	3de <read>
-+  78:	360000ef          	jal	3d8 <read>
-   7c:	8b2a                	mv	s6,a0
-   7e:	00a05963          	blez	a0,90 <wc+0x90>
-     for(i=0; i<n; i++){
-   82:	00001497          	auipc	s1,0x1
--  86:	f8e48493          	addi	s1,s1,-114 # 1010 <buf>
-+  86:	f8e48493          	add	s1,s1,-114 # 1010 <buf>
-   8a:	009509b3          	add	s3,a0,s1
-   8e:	b7d9                	j	54 <wc+0x54>
-       }
-@@ -102,8 +103,8 @@ wc(int fd, char *name)
-   9a:	8666                	mv	a2,s9
-   9c:	85e2                	mv	a1,s8
-   9e:	00001517          	auipc	a0,0x1
--  a2:	91250513          	addi	a0,a0,-1774 # 9b0 <malloc+0x11e>
--  a6:	738000ef          	jal	7de <printf>
-+  a2:	8ea50513          	add	a0,a0,-1814 # 988 <malloc+0xfa>
-+  a6:	734000ef          	jal	7da <printf>
- }
-   aa:	70e6                	ld	ra,120(sp)
-   ac:	7446                	ld	s0,112(sp)
-@@ -118,38 +119,38 @@ wc(int fd, char *name)
-   be:	7ca2                	ld	s9,40(sp)
-   c0:	7d02                	ld	s10,32(sp)
-   c2:	6de2                	ld	s11,24(sp)
--  c4:	6109                	addi	sp,sp,128
-+  c4:	6109                	add	sp,sp,128
-   c6:	8082                	ret
-     printf("wc: read error\n");
-   c8:	00001517          	auipc	a0,0x1
--  cc:	8d850513          	addi	a0,a0,-1832 # 9a0 <malloc+0x10e>
--  d0:	70e000ef          	jal	7de <printf>
-+  cc:	8b050513          	add	a0,a0,-1872 # 978 <malloc+0xea>
-+  d0:	70a000ef          	jal	7da <printf>
-     exit(1);
-   d4:	4505                	li	a0,1
--  d6:	2f0000ef          	jal	3c6 <exit>
-+  d6:	2ea000ef          	jal	3c0 <exit>
- 
- 00000000000000da <main>:
- 
- int
- main(int argc, char *argv[])
- {
--  da:	7179                	addi	sp,sp,-48
-+  da:	7179                	add	sp,sp,-48
-   dc:	f406                	sd	ra,40(sp)
-   de:	f022                	sd	s0,32(sp)
--  e0:	1800                	addi	s0,sp,48
-+  e0:	ec26                	sd	s1,24(sp)
-+  e2:	e84a                	sd	s2,16(sp)
-+  e4:	e44e                	sd	s3,8(sp)
-+  e6:	1800                	add	s0,sp,48
-   int fd, i;
- 
-   if(argc <= 1){
--  e2:	4785                	li	a5,1
--  e4:	04a7d463          	bge	a5,a0,12c <main+0x52>
--  e8:	ec26                	sd	s1,24(sp)
--  ea:	e84a                	sd	s2,16(sp)
--  ec:	e44e                	sd	s3,8(sp)
--  ee:	00858913          	addi	s2,a1,8
--  f2:	ffe5099b          	addiw	s3,a0,-2
--  f6:	02099793          	slli	a5,s3,0x20
--  fa:	01d7d993          	srli	s3,a5,0x1d
--  fe:	05c1                	addi	a1,a1,16
-+  e8:	4785                	li	a5,1
-+  ea:	04a7d163          	bge	a5,a0,12c <main+0x52>
-+  ee:	00858913          	add	s2,a1,8
-+  f2:	ffe5099b          	addw	s3,a0,-2
-+  f6:	02099793          	sll	a5,s3,0x20
-+  fa:	01d7d993          	srl	s3,a5,0x1d
-+  fe:	05c1                	add	a1,a1,16
-  100:	99ae                	add	s3,s3,a1
-     wc(0, "");
-     exit(0);
-@@ -159,9 +160,9 @@ main(int argc, char *argv[])
-     if((fd = open(argv[i], O_RDONLY)) < 0){
-  102:	4581                	li	a1,0
-  104:	00093503          	ld	a0,0(s2)
-- 108:	2fe000ef          	jal	406 <open>
-+ 108:	2f8000ef          	jal	400 <open>
-  10c:	84aa                	mv	s1,a0
-- 10e:	02054c63          	bltz	a0,146 <main+0x6c>
-+ 10e:	02054963          	bltz	a0,140 <main+0x66>
-       printf("wc: cannot open %s\n", argv[i]);
-       exit(1);
-     }
-@@ -170,1141 +171,1144 @@ main(int argc, char *argv[])
-  116:	eebff0ef          	jal	0 <wc>
-     close(fd);
-  11a:	8526                	mv	a0,s1
-- 11c:	2d2000ef          	jal	3ee <close>
-+ 11c:	2cc000ef          	jal	3e8 <close>
-   for(i = 1; i < argc; i++){
-- 120:	0921                	addi	s2,s2,8
-+ 120:	0921                	add	s2,s2,8
-  122:	ff3910e3          	bne	s2,s3,102 <main+0x28>
-   }
-   exit(0);
-  126:	4501                	li	a0,0
-- 128:	29e000ef          	jal	3c6 <exit>
-- 12c:	ec26                	sd	s1,24(sp)
-- 12e:	e84a                	sd	s2,16(sp)
-- 130:	e44e                	sd	s3,8(sp)
-+ 128:	298000ef          	jal	3c0 <exit>
-     wc(0, "");
-- 132:	00001597          	auipc	a1,0x1
-- 136:	86658593          	addi	a1,a1,-1946 # 998 <malloc+0x106>
-- 13a:	4501                	li	a0,0
-- 13c:	ec5ff0ef          	jal	0 <wc>
-+ 12c:	00001597          	auipc	a1,0x1
-+ 130:	86c58593          	add	a1,a1,-1940 # 998 <malloc+0x10a>
-+ 134:	4501                	li	a0,0
-+ 136:	ecbff0ef          	jal	0 <wc>
-     exit(0);
-- 140:	4501                	li	a0,0
-- 142:	284000ef          	jal	3c6 <exit>
-+ 13a:	4501                	li	a0,0
-+ 13c:	284000ef          	jal	3c0 <exit>
-       printf("wc: cannot open %s\n", argv[i]);
-- 146:	00093583          	ld	a1,0(s2)
-- 14a:	00001517          	auipc	a0,0x1
-- 14e:	87650513          	addi	a0,a0,-1930 # 9c0 <malloc+0x12e>
-- 152:	68c000ef          	jal	7de <printf>
-+ 140:	00093583          	ld	a1,0(s2)
-+ 144:	00001517          	auipc	a0,0x1
-+ 148:	85c50513          	add	a0,a0,-1956 # 9a0 <malloc+0x112>
-+ 14c:	68e000ef          	jal	7da <printf>
-       exit(1);
-- 156:	4505                	li	a0,1
-- 158:	26e000ef          	jal	3c6 <exit>
-+ 150:	4505                	li	a0,1
-+ 152:	26e000ef          	jal	3c0 <exit>
- 
--000000000000015c <start>:
-+0000000000000156 <start>:
- /* */
- /* wrapper so that it's OK if main() does not call exit(). */
- /* */
- void
- start()
- {
-- 15c:	1141                	addi	sp,sp,-16
-- 15e:	e406                	sd	ra,8(sp)
-- 160:	e022                	sd	s0,0(sp)
-- 162:	0800                	addi	s0,sp,16
-+ 156:	1141                	add	sp,sp,-16
-+ 158:	e406                	sd	ra,8(sp)
-+ 15a:	e022                	sd	s0,0(sp)
-+ 15c:	0800                	add	s0,sp,16
-   extern int main();
-   main();
-- 164:	f77ff0ef          	jal	da <main>
-+ 15e:	f7dff0ef          	jal	da <main>
-   exit(0);
-- 168:	4501                	li	a0,0
-- 16a:	25c000ef          	jal	3c6 <exit>
-+ 162:	4501                	li	a0,0
-+ 164:	25c000ef          	jal	3c0 <exit>
- 
--000000000000016e <strcpy>:
-+0000000000000168 <strcpy>:
- }
- 
- char*
- strcpy(char *s, const char *t)
- {
-- 16e:	1141                	addi	sp,sp,-16
-- 170:	e422                	sd	s0,8(sp)
-- 172:	0800                	addi	s0,sp,16
-+ 168:	1141                	add	sp,sp,-16
-+ 16a:	e422                	sd	s0,8(sp)
-+ 16c:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
-- 174:	87aa                	mv	a5,a0
-- 176:	0585                	addi	a1,a1,1
-- 178:	0785                	addi	a5,a5,1
-- 17a:	fff5c703          	lbu	a4,-1(a1)
-- 17e:	fee78fa3          	sb	a4,-1(a5)
-- 182:	fb75                	bnez	a4,176 <strcpy+0x8>
-+ 16e:	87aa                	mv	a5,a0
-+ 170:	0585                	add	a1,a1,1
-+ 172:	0785                	add	a5,a5,1
-+ 174:	fff5c703          	lbu	a4,-1(a1)
-+ 178:	fee78fa3          	sb	a4,-1(a5)
-+ 17c:	fb75                	bnez	a4,170 <strcpy+0x8>
-     ;
-   return os;
- }
-- 184:	6422                	ld	s0,8(sp)
-- 186:	0141                	addi	sp,sp,16
-- 188:	8082                	ret
-+ 17e:	6422                	ld	s0,8(sp)
-+ 180:	0141                	add	sp,sp,16
-+ 182:	8082                	ret
- 
--000000000000018a <strcmp>:
-+0000000000000184 <strcmp>:
- 
- int
- strcmp(const char *p, const char *q)
- {
-- 18a:	1141                	addi	sp,sp,-16
-- 18c:	e422                	sd	s0,8(sp)
-- 18e:	0800                	addi	s0,sp,16
-+ 184:	1141                	add	sp,sp,-16
-+ 186:	e422                	sd	s0,8(sp)
-+ 188:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
-- 190:	00054783          	lbu	a5,0(a0)
-- 194:	cb91                	beqz	a5,1a8 <strcmp+0x1e>
-- 196:	0005c703          	lbu	a4,0(a1)
-- 19a:	00f71763          	bne	a4,a5,1a8 <strcmp+0x1e>
-+ 18a:	00054783          	lbu	a5,0(a0)
-+ 18e:	cb91                	beqz	a5,1a2 <strcmp+0x1e>
-+ 190:	0005c703          	lbu	a4,0(a1)
-+ 194:	00f71763          	bne	a4,a5,1a2 <strcmp+0x1e>
-     p++, q++;
-- 19e:	0505                	addi	a0,a0,1
-- 1a0:	0585                	addi	a1,a1,1
-+ 198:	0505                	add	a0,a0,1
-+ 19a:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
-- 1a2:	00054783          	lbu	a5,0(a0)
-- 1a6:	fbe5                	bnez	a5,196 <strcmp+0xc>
-+ 19c:	00054783          	lbu	a5,0(a0)
-+ 1a0:	fbe5                	bnez	a5,190 <strcmp+0xc>
-   return (uchar)*p - (uchar)*q;
-- 1a8:	0005c503          	lbu	a0,0(a1)
-+ 1a2:	0005c503          	lbu	a0,0(a1)
- }
-- 1ac:	40a7853b          	subw	a0,a5,a0
-- 1b0:	6422                	ld	s0,8(sp)
-- 1b2:	0141                	addi	sp,sp,16
-- 1b4:	8082                	ret
-+ 1a6:	40a7853b          	subw	a0,a5,a0
-+ 1aa:	6422                	ld	s0,8(sp)
-+ 1ac:	0141                	add	sp,sp,16
-+ 1ae:	8082                	ret
- 
--00000000000001b6 <strlen>:
-+00000000000001b0 <strlen>:
- 
- uint
- strlen(const char *s)
- {
-- 1b6:	1141                	addi	sp,sp,-16
-- 1b8:	e422                	sd	s0,8(sp)
-- 1ba:	0800                	addi	s0,sp,16
-+ 1b0:	1141                	add	sp,sp,-16
-+ 1b2:	e422                	sd	s0,8(sp)
-+ 1b4:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
-- 1bc:	00054783          	lbu	a5,0(a0)
-- 1c0:	cf91                	beqz	a5,1dc <strlen+0x26>
-- 1c2:	0505                	addi	a0,a0,1
-- 1c4:	87aa                	mv	a5,a0
-- 1c6:	86be                	mv	a3,a5
-- 1c8:	0785                	addi	a5,a5,1
-- 1ca:	fff7c703          	lbu	a4,-1(a5)
-- 1ce:	ff65                	bnez	a4,1c6 <strlen+0x10>
-- 1d0:	40a6853b          	subw	a0,a3,a0
-- 1d4:	2505                	addiw	a0,a0,1
-+ 1b6:	00054783          	lbu	a5,0(a0)
-+ 1ba:	cf91                	beqz	a5,1d6 <strlen+0x26>
-+ 1bc:	0505                	add	a0,a0,1
-+ 1be:	87aa                	mv	a5,a0
-+ 1c0:	86be                	mv	a3,a5
-+ 1c2:	0785                	add	a5,a5,1
-+ 1c4:	fff7c703          	lbu	a4,-1(a5)
-+ 1c8:	ff65                	bnez	a4,1c0 <strlen+0x10>
-+ 1ca:	40a6853b          	subw	a0,a3,a0
-+ 1ce:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
-- 1d6:	6422                	ld	s0,8(sp)
-- 1d8:	0141                	addi	sp,sp,16
-- 1da:	8082                	ret
-+ 1d0:	6422                	ld	s0,8(sp)
-+ 1d2:	0141                	add	sp,sp,16
-+ 1d4:	8082                	ret
-   for(n = 0; s[n]; n++)
-- 1dc:	4501                	li	a0,0
-- 1de:	bfe5                	j	1d6 <strlen+0x20>
-+ 1d6:	4501                	li	a0,0
-+ 1d8:	bfe5                	j	1d0 <strlen+0x20>
- 
--00000000000001e0 <memset>:
-+00000000000001da <memset>:
- 
- void*
- memset(void *dst, int c, uint n)
- {
-- 1e0:	1141                	addi	sp,sp,-16
-- 1e2:	e422                	sd	s0,8(sp)
-- 1e4:	0800                	addi	s0,sp,16
-+ 1da:	1141                	add	sp,sp,-16
-+ 1dc:	e422                	sd	s0,8(sp)
-+ 1de:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
-- 1e6:	ca19                	beqz	a2,1fc <memset+0x1c>
-- 1e8:	87aa                	mv	a5,a0
-- 1ea:	1602                	slli	a2,a2,0x20
-- 1ec:	9201                	srli	a2,a2,0x20
-- 1ee:	00a60733          	add	a4,a2,a0
-+ 1e0:	ca19                	beqz	a2,1f6 <memset+0x1c>
-+ 1e2:	87aa                	mv	a5,a0
-+ 1e4:	1602                	sll	a2,a2,0x20
-+ 1e6:	9201                	srl	a2,a2,0x20
-+ 1e8:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
-- 1f2:	00b78023          	sb	a1,0(a5)
-+ 1ec:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
-- 1f6:	0785                	addi	a5,a5,1
-- 1f8:	fee79de3          	bne	a5,a4,1f2 <memset+0x12>
-+ 1f0:	0785                	add	a5,a5,1
-+ 1f2:	fee79de3          	bne	a5,a4,1ec <memset+0x12>
-   }
-   return dst;
- }
-- 1fc:	6422                	ld	s0,8(sp)
-- 1fe:	0141                	addi	sp,sp,16
-- 200:	8082                	ret
-+ 1f6:	6422                	ld	s0,8(sp)
-+ 1f8:	0141                	add	sp,sp,16
-+ 1fa:	8082                	ret
- 
--0000000000000202 <strchr>:
-+00000000000001fc <strchr>:
- 
- char*
- strchr(const char *s, char c)
- {
-- 202:	1141                	addi	sp,sp,-16
-- 204:	e422                	sd	s0,8(sp)
-- 206:	0800                	addi	s0,sp,16
-+ 1fc:	1141                	add	sp,sp,-16
-+ 1fe:	e422                	sd	s0,8(sp)
-+ 200:	0800                	add	s0,sp,16
-   for(; *s; s++)
-- 208:	00054783          	lbu	a5,0(a0)
-- 20c:	cb99                	beqz	a5,222 <strchr+0x20>
-+ 202:	00054783          	lbu	a5,0(a0)
-+ 206:	cb99                	beqz	a5,21c <strchr+0x20>
-     if(*s == c)
-- 20e:	00f58763          	beq	a1,a5,21c <strchr+0x1a>
-+ 208:	00f58763          	beq	a1,a5,216 <strchr+0x1a>
-   for(; *s; s++)
-- 212:	0505                	addi	a0,a0,1
-- 214:	00054783          	lbu	a5,0(a0)
-- 218:	fbfd                	bnez	a5,20e <strchr+0xc>
-+ 20c:	0505                	add	a0,a0,1
-+ 20e:	00054783          	lbu	a5,0(a0)
-+ 212:	fbfd                	bnez	a5,208 <strchr+0xc>
-       return (char*)s;
-   return 0;
-- 21a:	4501                	li	a0,0
-+ 214:	4501                	li	a0,0
- }
-- 21c:	6422                	ld	s0,8(sp)
-- 21e:	0141                	addi	sp,sp,16
-- 220:	8082                	ret
-+ 216:	6422                	ld	s0,8(sp)
-+ 218:	0141                	add	sp,sp,16
-+ 21a:	8082                	ret
-   return 0;
-- 222:	4501                	li	a0,0
-- 224:	bfe5                	j	21c <strchr+0x1a>
-+ 21c:	4501                	li	a0,0
-+ 21e:	bfe5                	j	216 <strchr+0x1a>
- 
--0000000000000226 <gets>:
-+0000000000000220 <gets>:
- 
- char*
- gets(char *buf, int max)
- {
-- 226:	711d                	addi	sp,sp,-96
-- 228:	ec86                	sd	ra,88(sp)
-- 22a:	e8a2                	sd	s0,80(sp)
-- 22c:	e4a6                	sd	s1,72(sp)
-- 22e:	e0ca                	sd	s2,64(sp)
-- 230:	fc4e                	sd	s3,56(sp)
-- 232:	f852                	sd	s4,48(sp)
-- 234:	f456                	sd	s5,40(sp)
-- 236:	f05a                	sd	s6,32(sp)
-- 238:	ec5e                	sd	s7,24(sp)
-- 23a:	1080                	addi	s0,sp,96
-- 23c:	8baa                	mv	s7,a0
-- 23e:	8a2e                	mv	s4,a1
-+ 220:	711d                	add	sp,sp,-96
-+ 222:	ec86                	sd	ra,88(sp)
-+ 224:	e8a2                	sd	s0,80(sp)
-+ 226:	e4a6                	sd	s1,72(sp)
-+ 228:	e0ca                	sd	s2,64(sp)
-+ 22a:	fc4e                	sd	s3,56(sp)
-+ 22c:	f852                	sd	s4,48(sp)
-+ 22e:	f456                	sd	s5,40(sp)
-+ 230:	f05a                	sd	s6,32(sp)
-+ 232:	ec5e                	sd	s7,24(sp)
-+ 234:	1080                	add	s0,sp,96
-+ 236:	8baa                	mv	s7,a0
-+ 238:	8a2e                	mv	s4,a1
-   int i, cc;
-   char c;
- 
-   for(i=0; i+1 < max; ){
-- 240:	892a                	mv	s2,a0
-- 242:	4481                	li	s1,0
-+ 23a:	892a                	mv	s2,a0
-+ 23c:	4481                	li	s1,0
-     cc = read(0, &c, 1);
-     if(cc < 1)
-       break;
-     buf[i++] = c;
-     if(c == '\n' || c == '\r')
-- 244:	4aa9                	li	s5,10
-- 246:	4b35                	li	s6,13
-+ 23e:	4aa9                	li	s5,10
-+ 240:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
-- 248:	89a6                	mv	s3,s1
-- 24a:	2485                	addiw	s1,s1,1
-- 24c:	0344d663          	bge	s1,s4,278 <gets+0x52>
-+ 242:	89a6                	mv	s3,s1
-+ 244:	2485                	addw	s1,s1,1
-+ 246:	0344d663          	bge	s1,s4,272 <gets+0x52>
-     cc = read(0, &c, 1);
-- 250:	4605                	li	a2,1
-- 252:	faf40593          	addi	a1,s0,-81
-- 256:	4501                	li	a0,0
-- 258:	186000ef          	jal	3de <read>
-+ 24a:	4605                	li	a2,1
-+ 24c:	faf40593          	add	a1,s0,-81
-+ 250:	4501                	li	a0,0
-+ 252:	186000ef          	jal	3d8 <read>
-     if(cc < 1)
-- 25c:	00a05e63          	blez	a0,278 <gets+0x52>
-+ 256:	00a05e63          	blez	a0,272 <gets+0x52>
-     buf[i++] = c;
-- 260:	faf44783          	lbu	a5,-81(s0)
-- 264:	00f90023          	sb	a5,0(s2)
-+ 25a:	faf44783          	lbu	a5,-81(s0)
-+ 25e:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
-- 268:	01578763          	beq	a5,s5,276 <gets+0x50>
-- 26c:	0905                	addi	s2,s2,1
-- 26e:	fd679de3          	bne	a5,s6,248 <gets+0x22>
--    buf[i++] = c;
-- 272:	89a6                	mv	s3,s1
-- 274:	a011                	j	278 <gets+0x52>
-- 276:	89a6                	mv	s3,s1
-+ 262:	01578763          	beq	a5,s5,270 <gets+0x50>
-+ 266:	0905                	add	s2,s2,1
-+ 268:	fd679de3          	bne	a5,s6,242 <gets+0x22>
-+  for(i=0; i+1 < max; ){
-+ 26c:	89a6                	mv	s3,s1
-+ 26e:	a011                	j	272 <gets+0x52>
-+ 270:	89a6                	mv	s3,s1
-       break;
-   }
-   buf[i] = '\0';
-- 278:	99de                	add	s3,s3,s7
-- 27a:	00098023          	sb	zero,0(s3)
-+ 272:	99de                	add	s3,s3,s7
-+ 274:	00098023          	sb	zero,0(s3)
-   return buf;
- }
-- 27e:	855e                	mv	a0,s7
-- 280:	60e6                	ld	ra,88(sp)
-- 282:	6446                	ld	s0,80(sp)
-- 284:	64a6                	ld	s1,72(sp)
-- 286:	6906                	ld	s2,64(sp)
-- 288:	79e2                	ld	s3,56(sp)
-- 28a:	7a42                	ld	s4,48(sp)
-- 28c:	7aa2                	ld	s5,40(sp)
-- 28e:	7b02                	ld	s6,32(sp)
-- 290:	6be2                	ld	s7,24(sp)
-- 292:	6125                	addi	sp,sp,96
-- 294:	8082                	ret
--
--0000000000000296 <stat>:
-+ 278:	855e                	mv	a0,s7
-+ 27a:	60e6                	ld	ra,88(sp)
-+ 27c:	6446                	ld	s0,80(sp)
-+ 27e:	64a6                	ld	s1,72(sp)
-+ 280:	6906                	ld	s2,64(sp)
-+ 282:	79e2                	ld	s3,56(sp)
-+ 284:	7a42                	ld	s4,48(sp)
-+ 286:	7aa2                	ld	s5,40(sp)
-+ 288:	7b02                	ld	s6,32(sp)
-+ 28a:	6be2                	ld	s7,24(sp)
-+ 28c:	6125                	add	sp,sp,96
-+ 28e:	8082                	ret
-+
-+0000000000000290 <stat>:
- 
- int
- stat(const char *n, struct stat *st)
- {
-- 296:	1101                	addi	sp,sp,-32
-- 298:	ec06                	sd	ra,24(sp)
-- 29a:	e822                	sd	s0,16(sp)
-- 29c:	e04a                	sd	s2,0(sp)
-- 29e:	1000                	addi	s0,sp,32
-- 2a0:	892e                	mv	s2,a1
-+ 290:	1101                	add	sp,sp,-32
-+ 292:	ec06                	sd	ra,24(sp)
-+ 294:	e822                	sd	s0,16(sp)
-+ 296:	e426                	sd	s1,8(sp)
-+ 298:	e04a                	sd	s2,0(sp)
-+ 29a:	1000                	add	s0,sp,32
-+ 29c:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
-- 2a2:	4581                	li	a1,0
-- 2a4:	162000ef          	jal	406 <open>
-+ 29e:	4581                	li	a1,0
-+ 2a0:	160000ef          	jal	400 <open>
-   if(fd < 0)
-- 2a8:	02054263          	bltz	a0,2cc <stat+0x36>
-- 2ac:	e426                	sd	s1,8(sp)
-- 2ae:	84aa                	mv	s1,a0
-+ 2a4:	02054163          	bltz	a0,2c6 <stat+0x36>
-+ 2a8:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
-- 2b0:	85ca                	mv	a1,s2
-- 2b2:	16c000ef          	jal	41e <fstat>
-- 2b6:	892a                	mv	s2,a0
-+ 2aa:	85ca                	mv	a1,s2
-+ 2ac:	16c000ef          	jal	418 <fstat>
-+ 2b0:	892a                	mv	s2,a0
-   close(fd);
-- 2b8:	8526                	mv	a0,s1
-- 2ba:	134000ef          	jal	3ee <close>
-+ 2b2:	8526                	mv	a0,s1
-+ 2b4:	134000ef          	jal	3e8 <close>
-   return r;
-- 2be:	64a2                	ld	s1,8(sp)
- }
-- 2c0:	854a                	mv	a0,s2
-- 2c2:	60e2                	ld	ra,24(sp)
-- 2c4:	6442                	ld	s0,16(sp)
-- 2c6:	6902                	ld	s2,0(sp)
-- 2c8:	6105                	addi	sp,sp,32
-- 2ca:	8082                	ret
-+ 2b8:	854a                	mv	a0,s2
-+ 2ba:	60e2                	ld	ra,24(sp)
-+ 2bc:	6442                	ld	s0,16(sp)
-+ 2be:	64a2                	ld	s1,8(sp)
-+ 2c0:	6902                	ld	s2,0(sp)
-+ 2c2:	6105                	add	sp,sp,32
-+ 2c4:	8082                	ret
-     return -1;
-- 2cc:	597d                	li	s2,-1
-- 2ce:	bfcd                	j	2c0 <stat+0x2a>
-+ 2c6:	597d                	li	s2,-1
-+ 2c8:	bfc5                	j	2b8 <stat+0x28>
- 
--00000000000002d0 <atoi>:
-+00000000000002ca <atoi>:
- 
- int
- atoi(const char *s)
- {
-- 2d0:	1141                	addi	sp,sp,-16
-- 2d2:	e422                	sd	s0,8(sp)
-- 2d4:	0800                	addi	s0,sp,16
-+ 2ca:	1141                	add	sp,sp,-16
-+ 2cc:	e422                	sd	s0,8(sp)
-+ 2ce:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
-- 2d6:	00054683          	lbu	a3,0(a0)
-- 2da:	fd06879b          	addiw	a5,a3,-48
-- 2de:	0ff7f793          	zext.b	a5,a5
-- 2e2:	4625                	li	a2,9
-- 2e4:	02f66863          	bltu	a2,a5,314 <atoi+0x44>
-- 2e8:	872a                	mv	a4,a0
-+ 2d0:	00054683          	lbu	a3,0(a0)
-+ 2d4:	fd06879b          	addw	a5,a3,-48
-+ 2d8:	0ff7f793          	zext.b	a5,a5
-+ 2dc:	4625                	li	a2,9
-+ 2de:	02f66863          	bltu	a2,a5,30e <atoi+0x44>
-+ 2e2:	872a                	mv	a4,a0
-   n = 0;
-- 2ea:	4501                	li	a0,0
-+ 2e4:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
-- 2ec:	0705                	addi	a4,a4,1
-- 2ee:	0025179b          	slliw	a5,a0,0x2
-- 2f2:	9fa9                	addw	a5,a5,a0
-- 2f4:	0017979b          	slliw	a5,a5,0x1
-- 2f8:	9fb5                	addw	a5,a5,a3
-- 2fa:	fd07851b          	addiw	a0,a5,-48
-+ 2e6:	0705                	add	a4,a4,1
-+ 2e8:	0025179b          	sllw	a5,a0,0x2
-+ 2ec:	9fa9                	addw	a5,a5,a0
-+ 2ee:	0017979b          	sllw	a5,a5,0x1
-+ 2f2:	9fb5                	addw	a5,a5,a3
-+ 2f4:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
-- 2fe:	00074683          	lbu	a3,0(a4)
-- 302:	fd06879b          	addiw	a5,a3,-48
-- 306:	0ff7f793          	zext.b	a5,a5
-- 30a:	fef671e3          	bgeu	a2,a5,2ec <atoi+0x1c>
-+ 2f8:	00074683          	lbu	a3,0(a4)
-+ 2fc:	fd06879b          	addw	a5,a3,-48
-+ 300:	0ff7f793          	zext.b	a5,a5
-+ 304:	fef671e3          	bgeu	a2,a5,2e6 <atoi+0x1c>
-   return n;
- }
-- 30e:	6422                	ld	s0,8(sp)
-- 310:	0141                	addi	sp,sp,16
-- 312:	8082                	ret
-+ 308:	6422                	ld	s0,8(sp)
-+ 30a:	0141                	add	sp,sp,16
-+ 30c:	8082                	ret
-   n = 0;
-- 314:	4501                	li	a0,0
-- 316:	bfe5                	j	30e <atoi+0x3e>
-+ 30e:	4501                	li	a0,0
-+ 310:	bfe5                	j	308 <atoi+0x3e>
- 
--0000000000000318 <memmove>:
-+0000000000000312 <memmove>:
- 
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
-- 318:	1141                	addi	sp,sp,-16
-- 31a:	e422                	sd	s0,8(sp)
-- 31c:	0800                	addi	s0,sp,16
-+ 312:	1141                	add	sp,sp,-16
-+ 314:	e422                	sd	s0,8(sp)
-+ 316:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-   dst = vdst;
-   src = vsrc;
-   if (src > dst) {
-- 31e:	02b57463          	bgeu	a0,a1,346 <memmove+0x2e>
-+ 318:	02b57463          	bgeu	a0,a1,340 <memmove+0x2e>
-     while(n-- > 0)
-- 322:	00c05f63          	blez	a2,340 <memmove+0x28>
-- 326:	1602                	slli	a2,a2,0x20
-- 328:	9201                	srli	a2,a2,0x20
-- 32a:	00c507b3          	add	a5,a0,a2
-+ 31c:	00c05f63          	blez	a2,33a <memmove+0x28>
-+ 320:	1602                	sll	a2,a2,0x20
-+ 322:	9201                	srl	a2,a2,0x20
-+ 324:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
-- 32e:	872a                	mv	a4,a0
-+ 328:	872a                	mv	a4,a0
-       *dst++ = *src++;
-- 330:	0585                	addi	a1,a1,1
-- 332:	0705                	addi	a4,a4,1
-- 334:	fff5c683          	lbu	a3,-1(a1)
-- 338:	fed70fa3          	sb	a3,-1(a4)
-+ 32a:	0585                	add	a1,a1,1
-+ 32c:	0705                	add	a4,a4,1
-+ 32e:	fff5c683          	lbu	a3,-1(a1)
-+ 332:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
-- 33c:	fef71ae3          	bne	a4,a5,330 <memmove+0x18>
-+ 336:	fee79ae3          	bne	a5,a4,32a <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-   }
-   return vdst;
- }
-- 340:	6422                	ld	s0,8(sp)
-- 342:	0141                	addi	sp,sp,16
-- 344:	8082                	ret
-+ 33a:	6422                	ld	s0,8(sp)
-+ 33c:	0141                	add	sp,sp,16
-+ 33e:	8082                	ret
-     dst += n;
-- 346:	00c50733          	add	a4,a0,a2
-+ 340:	00c50733          	add	a4,a0,a2
-     src += n;
-- 34a:	95b2                	add	a1,a1,a2
-+ 344:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
-- 34c:	fec05ae3          	blez	a2,340 <memmove+0x28>
-- 350:	fff6079b          	addiw	a5,a2,-1
-- 354:	1782                	slli	a5,a5,0x20
-- 356:	9381                	srli	a5,a5,0x20
-- 358:	fff7c793          	not	a5,a5
-- 35c:	97ba                	add	a5,a5,a4
-+ 346:	fec05ae3          	blez	a2,33a <memmove+0x28>
-+ 34a:	fff6079b          	addw	a5,a2,-1
-+ 34e:	1782                	sll	a5,a5,0x20
-+ 350:	9381                	srl	a5,a5,0x20
-+ 352:	fff7c793          	not	a5,a5
-+ 356:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
-- 35e:	15fd                	addi	a1,a1,-1
-- 360:	177d                	addi	a4,a4,-1
-- 362:	0005c683          	lbu	a3,0(a1)
-- 366:	00d70023          	sb	a3,0(a4)
-+ 358:	15fd                	add	a1,a1,-1
-+ 35a:	177d                	add	a4,a4,-1
-+ 35c:	0005c683          	lbu	a3,0(a1)
-+ 360:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
-- 36a:	fee79ae3          	bne	a5,a4,35e <memmove+0x46>
-- 36e:	bfc9                	j	340 <memmove+0x28>
-+ 364:	fee79ae3          	bne	a5,a4,358 <memmove+0x46>
-+ 368:	bfc9                	j	33a <memmove+0x28>
- 
--0000000000000370 <memcmp>:
-+000000000000036a <memcmp>:
- 
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
-- 370:	1141                	addi	sp,sp,-16
-- 372:	e422                	sd	s0,8(sp)
-- 374:	0800                	addi	s0,sp,16
-+ 36a:	1141                	add	sp,sp,-16
-+ 36c:	e422                	sd	s0,8(sp)
-+ 36e:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
-- 376:	ca05                	beqz	a2,3a6 <memcmp+0x36>
-- 378:	fff6069b          	addiw	a3,a2,-1
-- 37c:	1682                	slli	a3,a3,0x20
-- 37e:	9281                	srli	a3,a3,0x20
-- 380:	0685                	addi	a3,a3,1
-- 382:	96aa                	add	a3,a3,a0
-+ 370:	ca05                	beqz	a2,3a0 <memcmp+0x36>
-+ 372:	fff6069b          	addw	a3,a2,-1
-+ 376:	1682                	sll	a3,a3,0x20
-+ 378:	9281                	srl	a3,a3,0x20
-+ 37a:	0685                	add	a3,a3,1
-+ 37c:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
-- 384:	00054783          	lbu	a5,0(a0)
-- 388:	0005c703          	lbu	a4,0(a1)
-- 38c:	00e79863          	bne	a5,a4,39c <memcmp+0x2c>
-+ 37e:	00054783          	lbu	a5,0(a0)
-+ 382:	0005c703          	lbu	a4,0(a1)
-+ 386:	00e79863          	bne	a5,a4,396 <memcmp+0x2c>
-       return *p1 - *p2;
-     }
-     p1++;
-- 390:	0505                	addi	a0,a0,1
-+ 38a:	0505                	add	a0,a0,1
-     p2++;
-- 392:	0585                	addi	a1,a1,1
-+ 38c:	0585                	add	a1,a1,1
-   while (n-- > 0) {
-- 394:	fed518e3          	bne	a0,a3,384 <memcmp+0x14>
-+ 38e:	fed518e3          	bne	a0,a3,37e <memcmp+0x14>
-   }
-   return 0;
-- 398:	4501                	li	a0,0
-- 39a:	a019                	j	3a0 <memcmp+0x30>
-+ 392:	4501                	li	a0,0
-+ 394:	a019                	j	39a <memcmp+0x30>
-       return *p1 - *p2;
-- 39c:	40e7853b          	subw	a0,a5,a4
-+ 396:	40e7853b          	subw	a0,a5,a4
- }
-- 3a0:	6422                	ld	s0,8(sp)
-- 3a2:	0141                	addi	sp,sp,16
-- 3a4:	8082                	ret
-+ 39a:	6422                	ld	s0,8(sp)
-+ 39c:	0141                	add	sp,sp,16
-+ 39e:	8082                	ret
-   return 0;
-- 3a6:	4501                	li	a0,0
-- 3a8:	bfe5                	j	3a0 <memcmp+0x30>
-+ 3a0:	4501                	li	a0,0
-+ 3a2:	bfe5                	j	39a <memcmp+0x30>
- 
--00000000000003aa <memcpy>:
-+00000000000003a4 <memcpy>:
- 
- void *
- memcpy(void *dst, const void *src, uint n)
- {
-- 3aa:	1141                	addi	sp,sp,-16
-- 3ac:	e406                	sd	ra,8(sp)
-- 3ae:	e022                	sd	s0,0(sp)
-- 3b0:	0800                	addi	s0,sp,16
-+ 3a4:	1141                	add	sp,sp,-16
-+ 3a6:	e406                	sd	ra,8(sp)
-+ 3a8:	e022                	sd	s0,0(sp)
-+ 3aa:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
-- 3b2:	f67ff0ef          	jal	318 <memmove>
-+ 3ac:	f67ff0ef          	jal	312 <memmove>
- }
-- 3b6:	60a2                	ld	ra,8(sp)
-- 3b8:	6402                	ld	s0,0(sp)
-- 3ba:	0141                	addi	sp,sp,16
-- 3bc:	8082                	ret
-+ 3b0:	60a2                	ld	ra,8(sp)
-+ 3b2:	6402                	ld	s0,0(sp)
-+ 3b4:	0141                	add	sp,sp,16
-+ 3b6:	8082                	ret
- 
--00000000000003be <fork>:
-+00000000000003b8 <fork>:
- # generated by usys.pl - do not edit
- #include "kernel/syscall.h"
- .global fork
- fork:
-  li a7, SYS_fork
-- 3be:	4885                	li	a7,1
-+ 3b8:	4885                	li	a7,1
-  ecall
-- 3c0:	00000073          	ecall
-+ 3ba:	00000073          	ecall
-  ret
-- 3c4:	8082                	ret
-+ 3be:	8082                	ret
- 
--00000000000003c6 <exit>:
-+00000000000003c0 <exit>:
- .global exit
- exit:
-  li a7, SYS_exit
-- 3c6:	4889                	li	a7,2
-+ 3c0:	4889                	li	a7,2
-  ecall
-- 3c8:	00000073          	ecall
-+ 3c2:	00000073          	ecall
-  ret
-- 3cc:	8082                	ret
-+ 3c6:	8082                	ret
- 
--00000000000003ce <wait>:
-+00000000000003c8 <wait>:
- .global wait
- wait:
-  li a7, SYS_wait
-- 3ce:	488d                	li	a7,3
-+ 3c8:	488d                	li	a7,3
-  ecall
-- 3d0:	00000073          	ecall
-+ 3ca:	00000073          	ecall
-  ret
-- 3d4:	8082                	ret
-+ 3ce:	8082                	ret
- 
--00000000000003d6 <pipe>:
-+00000000000003d0 <pipe>:
- .global pipe
- pipe:
-  li a7, SYS_pipe
-- 3d6:	4891                	li	a7,4
-+ 3d0:	4891                	li	a7,4
-  ecall
-- 3d8:	00000073          	ecall
-+ 3d2:	00000073          	ecall
-  ret
-- 3dc:	8082                	ret
-+ 3d6:	8082                	ret
- 
--00000000000003de <read>:
-+00000000000003d8 <read>:
- .global read
- read:
-  li a7, SYS_read
-- 3de:	4895                	li	a7,5
-+ 3d8:	4895                	li	a7,5
-  ecall
-- 3e0:	00000073          	ecall
-+ 3da:	00000073          	ecall
-  ret
-- 3e4:	8082                	ret
-+ 3de:	8082                	ret
- 
--00000000000003e6 <write>:
-+00000000000003e0 <write>:
- .global write
- write:
-  li a7, SYS_write
-- 3e6:	48c1                	li	a7,16
-+ 3e0:	48c1                	li	a7,16
-  ecall
-- 3e8:	00000073          	ecall
-+ 3e2:	00000073          	ecall
-  ret
-- 3ec:	8082                	ret
-+ 3e6:	8082                	ret
- 
--00000000000003ee <close>:
-+00000000000003e8 <close>:
- .global close
- close:
-  li a7, SYS_close
-- 3ee:	48d5                	li	a7,21
-+ 3e8:	48d5                	li	a7,21
-  ecall
-- 3f0:	00000073          	ecall
-+ 3ea:	00000073          	ecall
-  ret
-- 3f4:	8082                	ret
-+ 3ee:	8082                	ret
- 
--00000000000003f6 <kill>:
-+00000000000003f0 <kill>:
- .global kill
- kill:
-  li a7, SYS_kill
-- 3f6:	4899                	li	a7,6
-+ 3f0:	4899                	li	a7,6
-  ecall
-- 3f8:	00000073          	ecall
-+ 3f2:	00000073          	ecall
-  ret
-- 3fc:	8082                	ret
-+ 3f6:	8082                	ret
- 
--00000000000003fe <exec>:
-+00000000000003f8 <exec>:
- .global exec
- exec:
-  li a7, SYS_exec
-- 3fe:	489d                	li	a7,7
-+ 3f8:	489d                	li	a7,7
-  ecall
-- 400:	00000073          	ecall
-+ 3fa:	00000073          	ecall
-  ret
-- 404:	8082                	ret
-+ 3fe:	8082                	ret
- 
--0000000000000406 <open>:
-+0000000000000400 <open>:
- .global open
- open:
-  li a7, SYS_open
-- 406:	48bd                	li	a7,15
-+ 400:	48bd                	li	a7,15
-  ecall
-- 408:	00000073          	ecall
-+ 402:	00000073          	ecall
-  ret
-- 40c:	8082                	ret
-+ 406:	8082                	ret
- 
--000000000000040e <mknod>:
-+0000000000000408 <mknod>:
- .global mknod
- mknod:
-  li a7, SYS_mknod
-- 40e:	48c5                	li	a7,17
-+ 408:	48c5                	li	a7,17
-  ecall
-- 410:	00000073          	ecall
-+ 40a:	00000073          	ecall
-  ret
-- 414:	8082                	ret
-+ 40e:	8082                	ret
- 
--0000000000000416 <unlink>:
-+0000000000000410 <unlink>:
- .global unlink
- unlink:
-  li a7, SYS_unlink
-- 416:	48c9                	li	a7,18
-+ 410:	48c9                	li	a7,18
-  ecall
-- 418:	00000073          	ecall
-+ 412:	00000073          	ecall
-  ret
-- 41c:	8082                	ret
-+ 416:	8082                	ret
- 
--000000000000041e <fstat>:
-+0000000000000418 <fstat>:
- .global fstat
- fstat:
-  li a7, SYS_fstat
-- 41e:	48a1                	li	a7,8
-+ 418:	48a1                	li	a7,8
-  ecall
-- 420:	00000073          	ecall
-+ 41a:	00000073          	ecall
-  ret
-- 424:	8082                	ret
-+ 41e:	8082                	ret
- 
--0000000000000426 <link>:
-+0000000000000420 <link>:
- .global link
- link:
-  li a7, SYS_link
-- 426:	48cd                	li	a7,19
-+ 420:	48cd                	li	a7,19
-  ecall
-- 428:	00000073          	ecall
-+ 422:	00000073          	ecall
-  ret
-- 42c:	8082                	ret
-+ 426:	8082                	ret
- 
--000000000000042e <mkdir>:
-+0000000000000428 <mkdir>:
- .global mkdir
- mkdir:
-  li a7, SYS_mkdir
-- 42e:	48d1                	li	a7,20
-+ 428:	48d1                	li	a7,20
-  ecall
-- 430:	00000073          	ecall
-+ 42a:	00000073          	ecall
-  ret
-- 434:	8082                	ret
-+ 42e:	8082                	ret
- 
--0000000000000436 <chdir>:
-+0000000000000430 <chdir>:
- .global chdir
- chdir:
-  li a7, SYS_chdir
-- 436:	48a5                	li	a7,9
-+ 430:	48a5                	li	a7,9
-  ecall
-- 438:	00000073          	ecall
-+ 432:	00000073          	ecall
-  ret
-- 43c:	8082                	ret
-+ 436:	8082                	ret
- 
--000000000000043e <dup>:
-+0000000000000438 <dup>:
- .global dup
- dup:
-  li a7, SYS_dup
-- 43e:	48a9                	li	a7,10
-+ 438:	48a9                	li	a7,10
-  ecall
-- 440:	00000073          	ecall
-+ 43a:	00000073          	ecall
-  ret
-- 444:	8082                	ret
-+ 43e:	8082                	ret
- 
--0000000000000446 <getpid>:
-+0000000000000440 <getpid>:
- .global getpid
- getpid:
-  li a7, SYS_getpid
-- 446:	48ad                	li	a7,11
-+ 440:	48ad                	li	a7,11
-  ecall
-- 448:	00000073          	ecall
-+ 442:	00000073          	ecall
-  ret
-- 44c:	8082                	ret
-+ 446:	8082                	ret
- 
--000000000000044e <sbrk>:
-+0000000000000448 <sbrk>:
- .global sbrk
- sbrk:
-  li a7, SYS_sbrk
-- 44e:	48b1                	li	a7,12
-+ 448:	48b1                	li	a7,12
-  ecall
-- 450:	00000073          	ecall
-+ 44a:	00000073          	ecall
-  ret
-- 454:	8082                	ret
-+ 44e:	8082                	ret
- 
--0000000000000456 <sleep>:
-+0000000000000450 <sleep>:
- .global sleep
- sleep:
-  li a7, SYS_sleep
-- 456:	48b5                	li	a7,13
-+ 450:	48b5                	li	a7,13
-  ecall
-- 458:	00000073          	ecall
-+ 452:	00000073          	ecall
-  ret
-- 45c:	8082                	ret
-+ 456:	8082                	ret
- 
--000000000000045e <uptime>:
-+0000000000000458 <uptime>:
- .global uptime
- uptime:
-  li a7, SYS_uptime
-- 45e:	48b9                	li	a7,14
-+ 458:	48b9                	li	a7,14
-  ecall
-- 460:	00000073          	ecall
-+ 45a:	00000073          	ecall
-  ret
-- 464:	8082                	ret
-+ 45e:	8082                	ret
- 
--0000000000000466 <putc>:
-+0000000000000460 <putc>:
- 
- static char digits[] = "0123456789ABCDEF";
- 
- static void
- putc(int fd, char c)
- {
-- 466:	1101                	addi	sp,sp,-32
-- 468:	ec06                	sd	ra,24(sp)
-- 46a:	e822                	sd	s0,16(sp)
-- 46c:	1000                	addi	s0,sp,32
-- 46e:	feb407a3          	sb	a1,-17(s0)
-+ 460:	1101                	add	sp,sp,-32
-+ 462:	ec06                	sd	ra,24(sp)
-+ 464:	e822                	sd	s0,16(sp)
-+ 466:	1000                	add	s0,sp,32
-+ 468:	feb407a3          	sb	a1,-17(s0)
-   write(fd, &c, 1);
-- 472:	4605                	li	a2,1
-- 474:	fef40593          	addi	a1,s0,-17
-- 478:	f6fff0ef          	jal	3e6 <write>
-+ 46c:	4605                	li	a2,1
-+ 46e:	fef40593          	add	a1,s0,-17
-+ 472:	f6fff0ef          	jal	3e0 <write>
- }
-- 47c:	60e2                	ld	ra,24(sp)
-- 47e:	6442                	ld	s0,16(sp)
-- 480:	6105                	addi	sp,sp,32
-- 482:	8082                	ret
-+ 476:	60e2                	ld	ra,24(sp)
-+ 478:	6442                	ld	s0,16(sp)
-+ 47a:	6105                	add	sp,sp,32
-+ 47c:	8082                	ret
- 
--0000000000000484 <printint>:
-+000000000000047e <printint>:
- 
- static void
- printint(int fd, int xx, int base, int sgn)
- {
-- 484:	7139                	addi	sp,sp,-64
-- 486:	fc06                	sd	ra,56(sp)
-- 488:	f822                	sd	s0,48(sp)
-- 48a:	f426                	sd	s1,40(sp)
-- 48c:	0080                	addi	s0,sp,64
-- 48e:	84aa                	mv	s1,a0
-+ 47e:	7139                	add	sp,sp,-64
-+ 480:	fc06                	sd	ra,56(sp)
-+ 482:	f822                	sd	s0,48(sp)
-+ 484:	f426                	sd	s1,40(sp)
-+ 486:	f04a                	sd	s2,32(sp)
-+ 488:	ec4e                	sd	s3,24(sp)
-+ 48a:	0080                	add	s0,sp,64
-+ 48c:	84aa                	mv	s1,a0
-   char buf[16];
-   int i, neg;
-   uint x;
- 
-   neg = 0;
-   if(sgn && xx < 0){
-- 490:	c299                	beqz	a3,496 <printint+0x12>
-- 492:	0805c963          	bltz	a1,524 <printint+0xa0>
-+ 48e:	c299                	beqz	a3,494 <printint+0x16>
-+ 490:	0805c763          	bltz	a1,51e <printint+0xa0>
-     neg = 1;
-     x = -xx;
-   } else {
-     x = xx;
-- 496:	2581                	sext.w	a1,a1
-+ 494:	2581                	sext.w	a1,a1
-   neg = 0;
-- 498:	4881                	li	a7,0
-- 49a:	fc040693          	addi	a3,s0,-64
-+ 496:	4881                	li	a7,0
-+ 498:	fc040693          	add	a3,s0,-64
-   }
- 
-   i = 0;
-- 49e:	4701                	li	a4,0
-+ 49c:	4701                	li	a4,0
-   do{
-     buf[i++] = digits[x % base];
-- 4a0:	2601                	sext.w	a2,a2
-- 4a2:	00000517          	auipc	a0,0x0
-- 4a6:	53e50513          	addi	a0,a0,1342 # 9e0 <digits>
-- 4aa:	883a                	mv	a6,a4
-- 4ac:	2705                	addiw	a4,a4,1
-- 4ae:	02c5f7bb          	remuw	a5,a1,a2
-- 4b2:	1782                	slli	a5,a5,0x20
-- 4b4:	9381                	srli	a5,a5,0x20
-- 4b6:	97aa                	add	a5,a5,a0
-- 4b8:	0007c783          	lbu	a5,0(a5)
-- 4bc:	00f68023          	sb	a5,0(a3)
-+ 49e:	2601                	sext.w	a2,a2
-+ 4a0:	00000517          	auipc	a0,0x0
-+ 4a4:	52050513          	add	a0,a0,1312 # 9c0 <digits>
-+ 4a8:	883a                	mv	a6,a4
-+ 4aa:	2705                	addw	a4,a4,1
-+ 4ac:	02c5f7bb          	remuw	a5,a1,a2
-+ 4b0:	1782                	sll	a5,a5,0x20
-+ 4b2:	9381                	srl	a5,a5,0x20
-+ 4b4:	97aa                	add	a5,a5,a0
-+ 4b6:	0007c783          	lbu	a5,0(a5)
-+ 4ba:	00f68023          	sb	a5,0(a3)
-   }while((x /= base) != 0);
-- 4c0:	0005879b          	sext.w	a5,a1
-- 4c4:	02c5d5bb          	divuw	a1,a1,a2
-- 4c8:	0685                	addi	a3,a3,1
-- 4ca:	fec7f0e3          	bgeu	a5,a2,4aa <printint+0x26>
-+ 4be:	0005879b          	sext.w	a5,a1
-+ 4c2:	02c5d5bb          	divuw	a1,a1,a2
-+ 4c6:	0685                	add	a3,a3,1
-+ 4c8:	fec7f0e3          	bgeu	a5,a2,4a8 <printint+0x2a>
-   if(neg)
-- 4ce:	00088c63          	beqz	a7,4e6 <printint+0x62>
-+ 4cc:	00088c63          	beqz	a7,4e4 <printint+0x66>
-     buf[i++] = '-';
-- 4d2:	fd070793          	addi	a5,a4,-48
-- 4d6:	00878733          	add	a4,a5,s0
-- 4da:	02d00793          	li	a5,45
-- 4de:	fef70823          	sb	a5,-16(a4)
-- 4e2:	0028071b          	addiw	a4,a6,2
-+ 4d0:	fd070793          	add	a5,a4,-48
-+ 4d4:	00878733          	add	a4,a5,s0
-+ 4d8:	02d00793          	li	a5,45
-+ 4dc:	fef70823          	sb	a5,-16(a4)
-+ 4e0:	0028071b          	addw	a4,a6,2
- 
-   while(--i >= 0)
-- 4e6:	02e05a63          	blez	a4,51a <printint+0x96>
-- 4ea:	f04a                	sd	s2,32(sp)
-- 4ec:	ec4e                	sd	s3,24(sp)
-- 4ee:	fc040793          	addi	a5,s0,-64
-- 4f2:	00e78933          	add	s2,a5,a4
-- 4f6:	fff78993          	addi	s3,a5,-1
-- 4fa:	99ba                	add	s3,s3,a4
-- 4fc:	377d                	addiw	a4,a4,-1
-- 4fe:	1702                	slli	a4,a4,0x20
-- 500:	9301                	srli	a4,a4,0x20
-- 502:	40e989b3          	sub	s3,s3,a4
-+ 4e4:	02e05663          	blez	a4,510 <printint+0x92>
-+ 4e8:	fc040793          	add	a5,s0,-64
-+ 4ec:	00e78933          	add	s2,a5,a4
-+ 4f0:	fff78993          	add	s3,a5,-1
-+ 4f4:	99ba                	add	s3,s3,a4
-+ 4f6:	377d                	addw	a4,a4,-1
-+ 4f8:	1702                	sll	a4,a4,0x20
-+ 4fa:	9301                	srl	a4,a4,0x20
-+ 4fc:	40e989b3          	sub	s3,s3,a4
-     putc(fd, buf[i]);
-- 506:	fff94583          	lbu	a1,-1(s2)
-- 50a:	8526                	mv	a0,s1
-- 50c:	f5bff0ef          	jal	466 <putc>
-+ 500:	fff94583          	lbu	a1,-1(s2)
-+ 504:	8526                	mv	a0,s1
-+ 506:	f5bff0ef          	jal	460 <putc>
-   while(--i >= 0)
-- 510:	197d                	addi	s2,s2,-1
-- 512:	ff391ae3          	bne	s2,s3,506 <printint+0x82>
-+ 50a:	197d                	add	s2,s2,-1
-+ 50c:	ff391ae3          	bne	s2,s3,500 <printint+0x82>
-+}
-+ 510:	70e2                	ld	ra,56(sp)
-+ 512:	7442                	ld	s0,48(sp)
-+ 514:	74a2                	ld	s1,40(sp)
-  516:	7902                	ld	s2,32(sp)
-  518:	69e2                	ld	s3,24(sp)
--}
-- 51a:	70e2                	ld	ra,56(sp)
-- 51c:	7442                	ld	s0,48(sp)
-- 51e:	74a2                	ld	s1,40(sp)
-- 520:	6121                	addi	sp,sp,64
-- 522:	8082                	ret
-+ 51a:	6121                	add	sp,sp,64
-+ 51c:	8082                	ret
-     x = -xx;
-- 524:	40b005bb          	negw	a1,a1
-+ 51e:	40b005bb          	negw	a1,a1
-     neg = 1;
-- 528:	4885                	li	a7,1
-+ 522:	4885                	li	a7,1
-     x = -xx;
-- 52a:	bf85                	j	49a <printint+0x16>
-+ 524:	bf95                	j	498 <printint+0x1a>
- 
--000000000000052c <vprintf>:
-+0000000000000526 <vprintf>:
- }
- 
- /* Print to the given fd. Only understands %d, %x, %p, %s. */
- void
- vprintf(int fd, const char *fmt, va_list ap)
- {
-- 52c:	711d                	addi	sp,sp,-96
-- 52e:	ec86                	sd	ra,88(sp)
-- 530:	e8a2                	sd	s0,80(sp)
-- 532:	e0ca                	sd	s2,64(sp)
-- 534:	1080                	addi	s0,sp,96
-+ 526:	711d                	add	sp,sp,-96
-+ 528:	ec86                	sd	ra,88(sp)
-+ 52a:	e8a2                	sd	s0,80(sp)
-+ 52c:	e4a6                	sd	s1,72(sp)
-+ 52e:	e0ca                	sd	s2,64(sp)
-+ 530:	fc4e                	sd	s3,56(sp)
-+ 532:	f852                	sd	s4,48(sp)
-+ 534:	f456                	sd	s5,40(sp)
-+ 536:	f05a                	sd	s6,32(sp)
-+ 538:	ec5e                	sd	s7,24(sp)
-+ 53a:	e862                	sd	s8,16(sp)
-+ 53c:	e466                	sd	s9,8(sp)
-+ 53e:	e06a                	sd	s10,0(sp)
-+ 540:	1080                	add	s0,sp,96
-   char *s;
-   int c0, c1, c2, i, state;
- 
-   state = 0;
-   for(i = 0; fmt[i]; i++){
-- 536:	0005c903          	lbu	s2,0(a1)
-- 53a:	26090863          	beqz	s2,7aa <vprintf+0x27e>
-- 53e:	e4a6                	sd	s1,72(sp)
-- 540:	fc4e                	sd	s3,56(sp)
-- 542:	f852                	sd	s4,48(sp)
-- 544:	f456                	sd	s5,40(sp)
-- 546:	f05a                	sd	s6,32(sp)
-- 548:	ec5e                	sd	s7,24(sp)
-- 54a:	e862                	sd	s8,16(sp)
-- 54c:	e466                	sd	s9,8(sp)
-- 54e:	8b2a                	mv	s6,a0
-- 550:	8a2e                	mv	s4,a1
-- 552:	8bb2                	mv	s7,a2
-+ 542:	0005c903          	lbu	s2,0(a1)
-+ 546:	24090763          	beqz	s2,794 <vprintf+0x26e>
-+ 54a:	8b2a                	mv	s6,a0
-+ 54c:	8a2e                	mv	s4,a1
-+ 54e:	8bb2                	mv	s7,a2
-   state = 0;
-- 554:	4981                	li	s3,0
-+ 550:	4981                	li	s3,0
-   for(i = 0; fmt[i]; i++){
-- 556:	4481                	li	s1,0
-- 558:	4701                	li	a4,0
-+ 552:	4481                	li	s1,0
-+ 554:	4701                	li	a4,0
-       if(c0 == '%'){
-         state = '%';
-       } else {
-         putc(fd, c0);
-       }
-     } else if(state == '%'){
-- 55a:	02500a93          	li	s5,37
-+ 556:	02500a93          	li	s5,37
-       c1 = c2 = 0;
-       if(c0) c1 = fmt[i+1] & 0xff;
-       if(c1) c2 = fmt[i+2] & 0xff;
-       if(c0 == 'd'){
-- 55e:	06400c13          	li	s8,100
-+ 55a:	06400c13          	li	s8,100
-         printint(fd, va_arg(ap, int), 10, 1);
-       } else if(c0 == 'l' && c1 == 'd'){
-- 562:	06c00c93          	li	s9,108
-- 566:	a005                	j	586 <vprintf+0x5a>
-+ 55e:	06c00c93          	li	s9,108
-+ 562:	a005                	j	582 <vprintf+0x5c>
-         putc(fd, c0);
-- 568:	85ca                	mv	a1,s2
-- 56a:	855a                	mv	a0,s6
-- 56c:	efbff0ef          	jal	466 <putc>
-- 570:	a019                	j	576 <vprintf+0x4a>
-+ 564:	85ca                	mv	a1,s2
-+ 566:	855a                	mv	a0,s6
-+ 568:	ef9ff0ef          	jal	460 <putc>
-+ 56c:	a019                	j	572 <vprintf+0x4c>
-     } else if(state == '%'){
-- 572:	03598263          	beq	s3,s5,596 <vprintf+0x6a>
-+ 56e:	03598263          	beq	s3,s5,592 <vprintf+0x6c>
-   for(i = 0; fmt[i]; i++){
-- 576:	2485                	addiw	s1,s1,1
-- 578:	8726                	mv	a4,s1
-- 57a:	009a07b3          	add	a5,s4,s1
-- 57e:	0007c903          	lbu	s2,0(a5)
-- 582:	20090c63          	beqz	s2,79a <vprintf+0x26e>
-+ 572:	2485                	addw	s1,s1,1
-+ 574:	8726                	mv	a4,s1
-+ 576:	009a07b3          	add	a5,s4,s1
-+ 57a:	0007c903          	lbu	s2,0(a5)
-+ 57e:	20090b63          	beqz	s2,794 <vprintf+0x26e>
-     c0 = fmt[i] & 0xff;
-- 586:	0009079b          	sext.w	a5,s2
-+ 582:	0009079b          	sext.w	a5,s2
-     if(state == 0){
-- 58a:	fe0994e3          	bnez	s3,572 <vprintf+0x46>
-+ 586:	fe0994e3          	bnez	s3,56e <vprintf+0x48>
-       if(c0 == '%'){
-- 58e:	fd579de3          	bne	a5,s5,568 <vprintf+0x3c>
-+ 58a:	fd579de3          	bne	a5,s5,564 <vprintf+0x3e>
-         state = '%';
-- 592:	89be                	mv	s3,a5
-- 594:	b7cd                	j	576 <vprintf+0x4a>
-+ 58e:	89be                	mv	s3,a5
-+ 590:	b7cd                	j	572 <vprintf+0x4c>
-       if(c0) c1 = fmt[i+1] & 0xff;
-- 596:	00ea06b3          	add	a3,s4,a4
-- 59a:	0016c683          	lbu	a3,1(a3)
-+ 592:	c7c9                	beqz	a5,61c <vprintf+0xf6>
-+ 594:	00ea06b3          	add	a3,s4,a4
-+ 598:	0016c683          	lbu	a3,1(a3)
-       c1 = c2 = 0;
-- 59e:	8636                	mv	a2,a3
-+ 59c:	8636                	mv	a2,a3
-       if(c1) c2 = fmt[i+2] & 0xff;
-- 5a0:	c681                	beqz	a3,5a8 <vprintf+0x7c>
-- 5a2:	9752                	add	a4,a4,s4
-- 5a4:	00274603          	lbu	a2,2(a4)
-+ 59e:	c681                	beqz	a3,5a6 <vprintf+0x80>
-+ 5a0:	9752                	add	a4,a4,s4
-+ 5a2:	00274603          	lbu	a2,2(a4)
-       if(c0 == 'd'){
-- 5a8:	03878f63          	beq	a5,s8,5e6 <vprintf+0xba>
-+ 5a6:	03878f63          	beq	a5,s8,5e4 <vprintf+0xbe>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 5ac:	05978963          	beq	a5,s9,5fe <vprintf+0xd2>
-+ 5aa:	05978963          	beq	a5,s9,5fc <vprintf+0xd6>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 2;
-       } else if(c0 == 'u'){
-- 5b0:	07500713          	li	a4,117
-- 5b4:	0ee78363          	beq	a5,a4,69a <vprintf+0x16e>
-+ 5ae:	07500713          	li	a4,117
-+ 5b2:	0ee78363          	beq	a5,a4,698 <vprintf+0x172>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 2;
-       } else if(c0 == 'x'){
-- 5b8:	07800713          	li	a4,120
-- 5bc:	12e78563          	beq	a5,a4,6e6 <vprintf+0x1ba>
-+ 5b6:	07800713          	li	a4,120
-+ 5ba:	12e78563          	beq	a5,a4,6e4 <vprintf+0x1be>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 2;
-       } else if(c0 == 'p'){
-- 5c0:	07000713          	li	a4,112
-- 5c4:	14e78a63          	beq	a5,a4,718 <vprintf+0x1ec>
-+ 5be:	07000713          	li	a4,112
-+ 5c2:	14e78a63          	beq	a5,a4,716 <vprintf+0x1f0>
-         printptr(fd, va_arg(ap, uint64));
-       } else if(c0 == 's'){
-- 5c8:	07300713          	li	a4,115
-- 5cc:	18e78a63          	beq	a5,a4,760 <vprintf+0x234>
-+ 5c6:	07300713          	li	a4,115
-+ 5ca:	18e78863          	beq	a5,a4,75a <vprintf+0x234>
-         if((s = va_arg(ap, char*)) == 0)
-           s = "(null)";
-         for(; *s; s++)
-           putc(fd, *s);
-       } else if(c0 == '%'){
-- 5d0:	02500713          	li	a4,37
-- 5d4:	04e79563          	bne	a5,a4,61e <vprintf+0xf2>
-+ 5ce:	02500713          	li	a4,37
-+ 5d2:	04e79563          	bne	a5,a4,61c <vprintf+0xf6>
-         putc(fd, '%');
-- 5d8:	02500593          	li	a1,37
-- 5dc:	855a                	mv	a0,s6
-- 5de:	e89ff0ef          	jal	466 <putc>
-+ 5d6:	02500593          	li	a1,37
-+ 5da:	855a                	mv	a0,s6
-+ 5dc:	e85ff0ef          	jal	460 <putc>
-         /* Unknown % sequence.  Print it to draw attention. */
-         putc(fd, '%');
-         putc(fd, c);
-       }
- #endif
-       state = 0;
-- 5e2:	4981                	li	s3,0
-- 5e4:	bf49                	j	576 <vprintf+0x4a>
-+ 5e0:	4981                	li	s3,0
-+ 5e2:	bf41                	j	572 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 1);
-- 5e6:	008b8913          	addi	s2,s7,8
-- 5ea:	4685                	li	a3,1
-- 5ec:	4629                	li	a2,10
-- 5ee:	000ba583          	lw	a1,0(s7)
-- 5f2:	855a                	mv	a0,s6
-- 5f4:	e91ff0ef          	jal	484 <printint>
-- 5f8:	8bca                	mv	s7,s2
-+ 5e4:	008b8913          	add	s2,s7,8
-+ 5e8:	4685                	li	a3,1
-+ 5ea:	4629                	li	a2,10
-+ 5ec:	000ba583          	lw	a1,0(s7)
-+ 5f0:	855a                	mv	a0,s6
-+ 5f2:	e8dff0ef          	jal	47e <printint>
-+ 5f6:	8bca                	mv	s7,s2
-       state = 0;
-- 5fa:	4981                	li	s3,0
-- 5fc:	bfad                	j	576 <vprintf+0x4a>
-+ 5f8:	4981                	li	s3,0
-+ 5fa:	bfa5                	j	572 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 5fe:	06400793          	li	a5,100
-- 602:	02f68963          	beq	a3,a5,634 <vprintf+0x108>
-+ 5fc:	06400793          	li	a5,100
-+ 600:	02f68963          	beq	a3,a5,632 <vprintf+0x10c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 606:	06c00793          	li	a5,108
-- 60a:	04f68263          	beq	a3,a5,64e <vprintf+0x122>
-+ 604:	06c00793          	li	a5,108
-+ 608:	04f68263          	beq	a3,a5,64c <vprintf+0x126>
-       } else if(c0 == 'l' && c1 == 'u'){
-- 60e:	07500793          	li	a5,117
-- 612:	0af68063          	beq	a3,a5,6b2 <vprintf+0x186>
-+ 60c:	07500793          	li	a5,117
-+ 610:	0af68063          	beq	a3,a5,6b0 <vprintf+0x18a>
-       } else if(c0 == 'l' && c1 == 'x'){
-- 616:	07800793          	li	a5,120
-- 61a:	0ef68263          	beq	a3,a5,6fe <vprintf+0x1d2>
-+ 614:	07800793          	li	a5,120
-+ 618:	0ef68263          	beq	a3,a5,6fc <vprintf+0x1d6>
-         putc(fd, '%');
-- 61e:	02500593          	li	a1,37
-- 622:	855a                	mv	a0,s6
-- 624:	e43ff0ef          	jal	466 <putc>
-+ 61c:	02500593          	li	a1,37
-+ 620:	855a                	mv	a0,s6
-+ 622:	e3fff0ef          	jal	460 <putc>
-         putc(fd, c0);
-- 628:	85ca                	mv	a1,s2
-- 62a:	855a                	mv	a0,s6
-- 62c:	e3bff0ef          	jal	466 <putc>
-+ 626:	85ca                	mv	a1,s2
-+ 628:	855a                	mv	a0,s6
-+ 62a:	e37ff0ef          	jal	460 <putc>
-       state = 0;
-- 630:	4981                	li	s3,0
-- 632:	b791                	j	576 <vprintf+0x4a>
-+ 62e:	4981                	li	s3,0
-+ 630:	b789                	j	572 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 634:	008b8913          	addi	s2,s7,8
-- 638:	4685                	li	a3,1
-- 63a:	4629                	li	a2,10
-- 63c:	000ba583          	lw	a1,0(s7)
-- 640:	855a                	mv	a0,s6
-- 642:	e43ff0ef          	jal	484 <printint>
-+ 632:	008b8913          	add	s2,s7,8
-+ 636:	4685                	li	a3,1
-+ 638:	4629                	li	a2,10
-+ 63a:	000ba583          	lw	a1,0(s7)
-+ 63e:	855a                	mv	a0,s6
-+ 640:	e3fff0ef          	jal	47e <printint>
-         i += 1;
-- 646:	2485                	addiw	s1,s1,1
-+ 644:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 648:	8bca                	mv	s7,s2
-+ 646:	8bca                	mv	s7,s2
-       state = 0;
-- 64a:	4981                	li	s3,0
-+ 648:	4981                	li	s3,0
-         i += 1;
-- 64c:	b72d                	j	576 <vprintf+0x4a>
-+ 64a:	b725                	j	572 <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 64e:	06400793          	li	a5,100
-- 652:	02f60763          	beq	a2,a5,680 <vprintf+0x154>
-+ 64c:	06400793          	li	a5,100
-+ 650:	02f60763          	beq	a2,a5,67e <vprintf+0x158>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-- 656:	07500793          	li	a5,117
-- 65a:	06f60963          	beq	a2,a5,6cc <vprintf+0x1a0>
-+ 654:	07500793          	li	a5,117
-+ 658:	06f60963          	beq	a2,a5,6ca <vprintf+0x1a4>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-- 65e:	07800793          	li	a5,120
-- 662:	faf61ee3          	bne	a2,a5,61e <vprintf+0xf2>
-+ 65c:	07800793          	li	a5,120
-+ 660:	faf61ee3          	bne	a2,a5,61c <vprintf+0xf6>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 666:	008b8913          	addi	s2,s7,8
-- 66a:	4681                	li	a3,0
-- 66c:	4641                	li	a2,16
-- 66e:	000ba583          	lw	a1,0(s7)
-- 672:	855a                	mv	a0,s6
-- 674:	e11ff0ef          	jal	484 <printint>
-+ 664:	008b8913          	add	s2,s7,8
-+ 668:	4681                	li	a3,0
-+ 66a:	4641                	li	a2,16
-+ 66c:	000ba583          	lw	a1,0(s7)
-+ 670:	855a                	mv	a0,s6
-+ 672:	e0dff0ef          	jal	47e <printint>
-         i += 2;
-- 678:	2489                	addiw	s1,s1,2
-+ 676:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 67a:	8bca                	mv	s7,s2
-+ 678:	8bca                	mv	s7,s2
-       state = 0;
-- 67c:	4981                	li	s3,0
-+ 67a:	4981                	li	s3,0
-         i += 2;
-- 67e:	bde5                	j	576 <vprintf+0x4a>
-+ 67c:	bddd                	j	572 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 680:	008b8913          	addi	s2,s7,8
-- 684:	4685                	li	a3,1
-- 686:	4629                	li	a2,10
-- 688:	000ba583          	lw	a1,0(s7)
-- 68c:	855a                	mv	a0,s6
-- 68e:	df7ff0ef          	jal	484 <printint>
-+ 67e:	008b8913          	add	s2,s7,8
-+ 682:	4685                	li	a3,1
-+ 684:	4629                	li	a2,10
-+ 686:	000ba583          	lw	a1,0(s7)
-+ 68a:	855a                	mv	a0,s6
-+ 68c:	df3ff0ef          	jal	47e <printint>
-         i += 2;
-- 692:	2489                	addiw	s1,s1,2
-+ 690:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 694:	8bca                	mv	s7,s2
-+ 692:	8bca                	mv	s7,s2
-       state = 0;
-- 696:	4981                	li	s3,0
-+ 694:	4981                	li	s3,0
-         i += 2;
-- 698:	bdf9                	j	576 <vprintf+0x4a>
-+ 696:	bdf1                	j	572 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 0);
-- 69a:	008b8913          	addi	s2,s7,8
-- 69e:	4681                	li	a3,0
-- 6a0:	4629                	li	a2,10
-- 6a2:	000ba583          	lw	a1,0(s7)
-- 6a6:	855a                	mv	a0,s6
-- 6a8:	dddff0ef          	jal	484 <printint>
-- 6ac:	8bca                	mv	s7,s2
-+ 698:	008b8913          	add	s2,s7,8
-+ 69c:	4681                	li	a3,0
-+ 69e:	4629                	li	a2,10
-+ 6a0:	000ba583          	lw	a1,0(s7)
-+ 6a4:	855a                	mv	a0,s6
-+ 6a6:	dd9ff0ef          	jal	47e <printint>
-+ 6aa:	8bca                	mv	s7,s2
-       state = 0;
-- 6ae:	4981                	li	s3,0
-- 6b0:	b5d9                	j	576 <vprintf+0x4a>
-+ 6ac:	4981                	li	s3,0
-+ 6ae:	b5d1                	j	572 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 6b2:	008b8913          	addi	s2,s7,8
-- 6b6:	4681                	li	a3,0
-- 6b8:	4629                	li	a2,10
-- 6ba:	000ba583          	lw	a1,0(s7)
-- 6be:	855a                	mv	a0,s6
-- 6c0:	dc5ff0ef          	jal	484 <printint>
-+ 6b0:	008b8913          	add	s2,s7,8
-+ 6b4:	4681                	li	a3,0
-+ 6b6:	4629                	li	a2,10
-+ 6b8:	000ba583          	lw	a1,0(s7)
-+ 6bc:	855a                	mv	a0,s6
-+ 6be:	dc1ff0ef          	jal	47e <printint>
-         i += 1;
-- 6c4:	2485                	addiw	s1,s1,1
-+ 6c2:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 6c6:	8bca                	mv	s7,s2
-+ 6c4:	8bca                	mv	s7,s2
-       state = 0;
-- 6c8:	4981                	li	s3,0
-+ 6c6:	4981                	li	s3,0
-         i += 1;
-- 6ca:	b575                	j	576 <vprintf+0x4a>
-+ 6c8:	b56d                	j	572 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 6cc:	008b8913          	addi	s2,s7,8
-- 6d0:	4681                	li	a3,0
-- 6d2:	4629                	li	a2,10
-- 6d4:	000ba583          	lw	a1,0(s7)
-- 6d8:	855a                	mv	a0,s6
-- 6da:	dabff0ef          	jal	484 <printint>
-+ 6ca:	008b8913          	add	s2,s7,8
-+ 6ce:	4681                	li	a3,0
-+ 6d0:	4629                	li	a2,10
-+ 6d2:	000ba583          	lw	a1,0(s7)
-+ 6d6:	855a                	mv	a0,s6
-+ 6d8:	da7ff0ef          	jal	47e <printint>
-         i += 2;
-- 6de:	2489                	addiw	s1,s1,2
-+ 6dc:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 6e0:	8bca                	mv	s7,s2
-+ 6de:	8bca                	mv	s7,s2
-       state = 0;
-- 6e2:	4981                	li	s3,0
-+ 6e0:	4981                	li	s3,0
-         i += 2;
-- 6e4:	bd49                	j	576 <vprintf+0x4a>
-+ 6e2:	bd41                	j	572 <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 16, 0);
-- 6e6:	008b8913          	addi	s2,s7,8
-- 6ea:	4681                	li	a3,0
-- 6ec:	4641                	li	a2,16
-- 6ee:	000ba583          	lw	a1,0(s7)
-- 6f2:	855a                	mv	a0,s6
-- 6f4:	d91ff0ef          	jal	484 <printint>
-- 6f8:	8bca                	mv	s7,s2
-+ 6e4:	008b8913          	add	s2,s7,8
-+ 6e8:	4681                	li	a3,0
-+ 6ea:	4641                	li	a2,16
-+ 6ec:	000ba583          	lw	a1,0(s7)
-+ 6f0:	855a                	mv	a0,s6
-+ 6f2:	d8dff0ef          	jal	47e <printint>
-+ 6f6:	8bca                	mv	s7,s2
-       state = 0;
-- 6fa:	4981                	li	s3,0
-- 6fc:	bdad                	j	576 <vprintf+0x4a>
-+ 6f8:	4981                	li	s3,0
-+ 6fa:	bda5                	j	572 <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 6fe:	008b8913          	addi	s2,s7,8
-- 702:	4681                	li	a3,0
-- 704:	4641                	li	a2,16
-- 706:	000ba583          	lw	a1,0(s7)
-- 70a:	855a                	mv	a0,s6
-- 70c:	d79ff0ef          	jal	484 <printint>
-+ 6fc:	008b8913          	add	s2,s7,8
-+ 700:	4681                	li	a3,0
-+ 702:	4641                	li	a2,16
-+ 704:	000ba583          	lw	a1,0(s7)
-+ 708:	855a                	mv	a0,s6
-+ 70a:	d75ff0ef          	jal	47e <printint>
-         i += 1;
-- 710:	2485                	addiw	s1,s1,1
-+ 70e:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 712:	8bca                	mv	s7,s2
-+ 710:	8bca                	mv	s7,s2
-       state = 0;
-- 714:	4981                	li	s3,0
-+ 712:	4981                	li	s3,0
-         i += 1;
-- 716:	b585                	j	576 <vprintf+0x4a>
-- 718:	e06a                	sd	s10,0(sp)
-+ 714:	bdb9                	j	572 <vprintf+0x4c>
-         printptr(fd, va_arg(ap, uint64));
-- 71a:	008b8d13          	addi	s10,s7,8
-- 71e:	000bb983          	ld	s3,0(s7)
-+ 716:	008b8d13          	add	s10,s7,8
-+ 71a:	000bb983          	ld	s3,0(s7)
-   putc(fd, '0');
-- 722:	03000593          	li	a1,48
-- 726:	855a                	mv	a0,s6
-- 728:	d3fff0ef          	jal	466 <putc>
-+ 71e:	03000593          	li	a1,48
-+ 722:	855a                	mv	a0,s6
-+ 724:	d3dff0ef          	jal	460 <putc>
-   putc(fd, 'x');
-- 72c:	07800593          	li	a1,120
-- 730:	855a                	mv	a0,s6
-- 732:	d35ff0ef          	jal	466 <putc>
-- 736:	4941                	li	s2,16
-+ 728:	07800593          	li	a1,120
-+ 72c:	855a                	mv	a0,s6
-+ 72e:	d33ff0ef          	jal	460 <putc>
-+ 732:	4941                	li	s2,16
-     putc(fd, digits[x >> (sizeof(uint64) * 8 - 4)]);
-- 738:	00000b97          	auipc	s7,0x0
-- 73c:	2a8b8b93          	addi	s7,s7,680 # 9e0 <digits>
-- 740:	03c9d793          	srli	a5,s3,0x3c
-- 744:	97de                	add	a5,a5,s7
-- 746:	0007c583          	lbu	a1,0(a5)
-- 74a:	855a                	mv	a0,s6
-- 74c:	d1bff0ef          	jal	466 <putc>
-+ 734:	00000b97          	auipc	s7,0x0
-+ 738:	28cb8b93          	add	s7,s7,652 # 9c0 <digits>
-+ 73c:	03c9d793          	srl	a5,s3,0x3c
-+ 740:	97de                	add	a5,a5,s7
-+ 742:	0007c583          	lbu	a1,0(a5)
-+ 746:	855a                	mv	a0,s6
-+ 748:	d19ff0ef          	jal	460 <putc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
-- 750:	0992                	slli	s3,s3,0x4
-- 752:	397d                	addiw	s2,s2,-1
-- 754:	fe0916e3          	bnez	s2,740 <vprintf+0x214>
-+ 74c:	0992                	sll	s3,s3,0x4
-+ 74e:	397d                	addw	s2,s2,-1
-+ 750:	fe0916e3          	bnez	s2,73c <vprintf+0x216>
-         printptr(fd, va_arg(ap, uint64));
-- 758:	8bea                	mv	s7,s10
-+ 754:	8bea                	mv	s7,s10
-       state = 0;
-- 75a:	4981                	li	s3,0
-- 75c:	6d02                	ld	s10,0(sp)
-- 75e:	bd21                	j	576 <vprintf+0x4a>
-+ 756:	4981                	li	s3,0
-+ 758:	bd29                	j	572 <vprintf+0x4c>
-         if((s = va_arg(ap, char*)) == 0)
-- 760:	008b8993          	addi	s3,s7,8
-- 764:	000bb903          	ld	s2,0(s7)
-- 768:	00090f63          	beqz	s2,786 <vprintf+0x25a>
-+ 75a:	008b8993          	add	s3,s7,8
-+ 75e:	000bb903          	ld	s2,0(s7)
-+ 762:	00090f63          	beqz	s2,780 <vprintf+0x25a>
-         for(; *s; s++)
-- 76c:	00094583          	lbu	a1,0(s2)
-- 770:	c195                	beqz	a1,794 <vprintf+0x268>
-+ 766:	00094583          	lbu	a1,0(s2)
-+ 76a:	c195                	beqz	a1,78e <vprintf+0x268>
-           putc(fd, *s);
-- 772:	855a                	mv	a0,s6
-- 774:	cf3ff0ef          	jal	466 <putc>
-+ 76c:	855a                	mv	a0,s6
-+ 76e:	cf3ff0ef          	jal	460 <putc>
-         for(; *s; s++)
-- 778:	0905                	addi	s2,s2,1
-- 77a:	00094583          	lbu	a1,0(s2)
-- 77e:	f9f5                	bnez	a1,772 <vprintf+0x246>
-+ 772:	0905                	add	s2,s2,1
-+ 774:	00094583          	lbu	a1,0(s2)
-+ 778:	f9f5                	bnez	a1,76c <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-- 780:	8bce                	mv	s7,s3
-+ 77a:	8bce                	mv	s7,s3
-       state = 0;
-- 782:	4981                	li	s3,0
-- 784:	bbcd                	j	576 <vprintf+0x4a>
-+ 77c:	4981                	li	s3,0
-+ 77e:	bbd5                	j	572 <vprintf+0x4c>
-           s = "(null)";
-- 786:	00000917          	auipc	s2,0x0
-- 78a:	25290913          	addi	s2,s2,594 # 9d8 <malloc+0x146>
-+ 780:	00000917          	auipc	s2,0x0
-+ 784:	23890913          	add	s2,s2,568 # 9b8 <malloc+0x12a>
-         for(; *s; s++)
-- 78e:	02800593          	li	a1,40
-- 792:	b7c5                	j	772 <vprintf+0x246>
-+ 788:	02800593          	li	a1,40
-+ 78c:	b7c5                	j	76c <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-- 794:	8bce                	mv	s7,s3
-+ 78e:	8bce                	mv	s7,s3
-       state = 0;
-- 796:	4981                	li	s3,0
-- 798:	bbf9                	j	576 <vprintf+0x4a>
-- 79a:	64a6                	ld	s1,72(sp)
-+ 790:	4981                	li	s3,0
-+ 792:	b3c5                	j	572 <vprintf+0x4c>
-+    }
-+  }
-+}
-+ 794:	60e6                	ld	ra,88(sp)
-+ 796:	6446                	ld	s0,80(sp)
-+ 798:	64a6                	ld	s1,72(sp)
-+ 79a:	6906                	ld	s2,64(sp)
-  79c:	79e2                	ld	s3,56(sp)
-  79e:	7a42                	ld	s4,48(sp)
-  7a0:	7aa2                	ld	s5,40(sp)
-@@ -1312,289 +1316,273 @@ vprintf(int fd, const char *fmt, va_list ap)
-  7a4:	6be2                	ld	s7,24(sp)
-  7a6:	6c42                	ld	s8,16(sp)
-  7a8:	6ca2                	ld	s9,8(sp)
--    }
--  }
--}
-- 7aa:	60e6                	ld	ra,88(sp)
-- 7ac:	6446                	ld	s0,80(sp)
-- 7ae:	6906                	ld	s2,64(sp)
-- 7b0:	6125                	addi	sp,sp,96
-- 7b2:	8082                	ret
-+ 7aa:	6d02                	ld	s10,0(sp)
-+ 7ac:	6125                	add	sp,sp,96
-+ 7ae:	8082                	ret
- 
--00000000000007b4 <fprintf>:
-+00000000000007b0 <fprintf>:
- 
- void
- fprintf(int fd, const char *fmt, ...)
- {
-- 7b4:	715d                	addi	sp,sp,-80
-- 7b6:	ec06                	sd	ra,24(sp)
-- 7b8:	e822                	sd	s0,16(sp)
-- 7ba:	1000                	addi	s0,sp,32
-- 7bc:	e010                	sd	a2,0(s0)
-- 7be:	e414                	sd	a3,8(s0)
-- 7c0:	e818                	sd	a4,16(s0)
-- 7c2:	ec1c                	sd	a5,24(s0)
-- 7c4:	03043023          	sd	a6,32(s0)
-- 7c8:	03143423          	sd	a7,40(s0)
-+ 7b0:	715d                	add	sp,sp,-80
-+ 7b2:	ec06                	sd	ra,24(sp)
-+ 7b4:	e822                	sd	s0,16(sp)
-+ 7b6:	1000                	add	s0,sp,32
-+ 7b8:	e010                	sd	a2,0(s0)
-+ 7ba:	e414                	sd	a3,8(s0)
-+ 7bc:	e818                	sd	a4,16(s0)
-+ 7be:	ec1c                	sd	a5,24(s0)
-+ 7c0:	03043023          	sd	a6,32(s0)
-+ 7c4:	03143423          	sd	a7,40(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 7cc:	fe843423          	sd	s0,-24(s0)
-+ 7c8:	fe843423          	sd	s0,-24(s0)
-   vprintf(fd, fmt, ap);
-- 7d0:	8622                	mv	a2,s0
-- 7d2:	d5bff0ef          	jal	52c <vprintf>
-+ 7cc:	8622                	mv	a2,s0
-+ 7ce:	d59ff0ef          	jal	526 <vprintf>
- }
-- 7d6:	60e2                	ld	ra,24(sp)
-- 7d8:	6442                	ld	s0,16(sp)
-- 7da:	6161                	addi	sp,sp,80
-- 7dc:	8082                	ret
-+ 7d2:	60e2                	ld	ra,24(sp)
-+ 7d4:	6442                	ld	s0,16(sp)
-+ 7d6:	6161                	add	sp,sp,80
-+ 7d8:	8082                	ret
- 
--00000000000007de <printf>:
-+00000000000007da <printf>:
- 
- void
- printf(const char *fmt, ...)
- {
-- 7de:	711d                	addi	sp,sp,-96
-- 7e0:	ec06                	sd	ra,24(sp)
-- 7e2:	e822                	sd	s0,16(sp)
-- 7e4:	1000                	addi	s0,sp,32
-- 7e6:	e40c                	sd	a1,8(s0)
-- 7e8:	e810                	sd	a2,16(s0)
-- 7ea:	ec14                	sd	a3,24(s0)
-- 7ec:	f018                	sd	a4,32(s0)
-- 7ee:	f41c                	sd	a5,40(s0)
-- 7f0:	03043823          	sd	a6,48(s0)
-- 7f4:	03143c23          	sd	a7,56(s0)
-+ 7da:	711d                	add	sp,sp,-96
-+ 7dc:	ec06                	sd	ra,24(sp)
-+ 7de:	e822                	sd	s0,16(sp)
-+ 7e0:	1000                	add	s0,sp,32
-+ 7e2:	e40c                	sd	a1,8(s0)
-+ 7e4:	e810                	sd	a2,16(s0)
-+ 7e6:	ec14                	sd	a3,24(s0)
-+ 7e8:	f018                	sd	a4,32(s0)
-+ 7ea:	f41c                	sd	a5,40(s0)
-+ 7ec:	03043823          	sd	a6,48(s0)
-+ 7f0:	03143c23          	sd	a7,56(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 7f8:	00840613          	addi	a2,s0,8
-- 7fc:	fec43423          	sd	a2,-24(s0)
-+ 7f4:	00840613          	add	a2,s0,8
-+ 7f8:	fec43423          	sd	a2,-24(s0)
-   vprintf(1, fmt, ap);
-- 800:	85aa                	mv	a1,a0
-- 802:	4505                	li	a0,1
-- 804:	d29ff0ef          	jal	52c <vprintf>
-+ 7fc:	85aa                	mv	a1,a0
-+ 7fe:	4505                	li	a0,1
-+ 800:	d27ff0ef          	jal	526 <vprintf>
- }
-- 808:	60e2                	ld	ra,24(sp)
-- 80a:	6442                	ld	s0,16(sp)
-- 80c:	6125                	addi	sp,sp,96
-- 80e:	8082                	ret
-+ 804:	60e2                	ld	ra,24(sp)
-+ 806:	6442                	ld	s0,16(sp)
-+ 808:	6125                	add	sp,sp,96
-+ 80a:	8082                	ret
- 
--0000000000000810 <free>:
-+000000000000080c <free>:
- static Header base;
- static Header *freep;
- 
- void
- free(void *ap)
- {
-- 810:	1141                	addi	sp,sp,-16
-- 812:	e422                	sd	s0,8(sp)
-- 814:	0800                	addi	s0,sp,16
-+ 80c:	1141                	add	sp,sp,-16
-+ 80e:	e422                	sd	s0,8(sp)
-+ 810:	0800                	add	s0,sp,16
-   Header *bp, *p;
- 
-   bp = (Header*)ap - 1;
-- 816:	ff050693          	addi	a3,a0,-16
-+ 812:	ff050693          	add	a3,a0,-16
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 81a:	00000797          	auipc	a5,0x0
-- 81e:	7e67b783          	ld	a5,2022(a5) # 1000 <freep>
-- 822:	a02d                	j	84c <free+0x3c>
-+ 816:	00000797          	auipc	a5,0x0
-+ 81a:	7ea7b783          	ld	a5,2026(a5) # 1000 <freep>
-+ 81e:	a02d                	j	848 <free+0x3c>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-       break;
-   if(bp + bp->s.size == p->s.ptr){
-     bp->s.size += p->s.ptr->s.size;
-- 824:	4618                	lw	a4,8(a2)
-- 826:	9f2d                	addw	a4,a4,a1
-- 828:	fee52c23          	sw	a4,-8(a0)
-+ 820:	4618                	lw	a4,8(a2)
-+ 822:	9f2d                	addw	a4,a4,a1
-+ 824:	fee52c23          	sw	a4,-8(a0)
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 82c:	6398                	ld	a4,0(a5)
-- 82e:	6310                	ld	a2,0(a4)
-- 830:	a83d                	j	86e <free+0x5e>
-+ 828:	6398                	ld	a4,0(a5)
-+ 82a:	6310                	ld	a2,0(a4)
-+ 82c:	a83d                	j	86a <free+0x5e>
-   } else
-     bp->s.ptr = p->s.ptr;
-   if(p + p->s.size == bp){
-     p->s.size += bp->s.size;
-- 832:	ff852703          	lw	a4,-8(a0)
-- 836:	9f31                	addw	a4,a4,a2
-- 838:	c798                	sw	a4,8(a5)
-+ 82e:	ff852703          	lw	a4,-8(a0)
-+ 832:	9f31                	addw	a4,a4,a2
-+ 834:	c798                	sw	a4,8(a5)
-     p->s.ptr = bp->s.ptr;
-- 83a:	ff053683          	ld	a3,-16(a0)
-- 83e:	a091                	j	882 <free+0x72>
-+ 836:	ff053683          	ld	a3,-16(a0)
-+ 83a:	a091                	j	87e <free+0x72>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 840:	6398                	ld	a4,0(a5)
-- 842:	00e7e463          	bltu	a5,a4,84a <free+0x3a>
-- 846:	00e6ea63          	bltu	a3,a4,85a <free+0x4a>
-+ 83c:	6398                	ld	a4,0(a5)
-+ 83e:	00e7e463          	bltu	a5,a4,846 <free+0x3a>
-+ 842:	00e6ea63          	bltu	a3,a4,856 <free+0x4a>
- {
-- 84a:	87ba                	mv	a5,a4
-+ 846:	87ba                	mv	a5,a4
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 84c:	fed7fae3          	bgeu	a5,a3,840 <free+0x30>
-- 850:	6398                	ld	a4,0(a5)
-- 852:	00e6e463          	bltu	a3,a4,85a <free+0x4a>
-+ 848:	fed7fae3          	bgeu	a5,a3,83c <free+0x30>
-+ 84c:	6398                	ld	a4,0(a5)
-+ 84e:	00e6e463          	bltu	a3,a4,856 <free+0x4a>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 856:	fee7eae3          	bltu	a5,a4,84a <free+0x3a>
-+ 852:	fee7eae3          	bltu	a5,a4,846 <free+0x3a>
-   if(bp + bp->s.size == p->s.ptr){
-- 85a:	ff852583          	lw	a1,-8(a0)
-- 85e:	6390                	ld	a2,0(a5)
-- 860:	02059813          	slli	a6,a1,0x20
-- 864:	01c85713          	srli	a4,a6,0x1c
-- 868:	9736                	add	a4,a4,a3
-- 86a:	fae60de3          	beq	a2,a4,824 <free+0x14>
-+ 856:	ff852583          	lw	a1,-8(a0)
-+ 85a:	6390                	ld	a2,0(a5)
-+ 85c:	02059813          	sll	a6,a1,0x20
-+ 860:	01c85713          	srl	a4,a6,0x1c
-+ 864:	9736                	add	a4,a4,a3
-+ 866:	fae60de3          	beq	a2,a4,820 <free+0x14>
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 86e:	fec53823          	sd	a2,-16(a0)
-+ 86a:	fec53823          	sd	a2,-16(a0)
-   if(p + p->s.size == bp){
-- 872:	4790                	lw	a2,8(a5)
-- 874:	02061593          	slli	a1,a2,0x20
-- 878:	01c5d713          	srli	a4,a1,0x1c
-- 87c:	973e                	add	a4,a4,a5
-- 87e:	fae68ae3          	beq	a3,a4,832 <free+0x22>
-+ 86e:	4790                	lw	a2,8(a5)
-+ 870:	02061593          	sll	a1,a2,0x20
-+ 874:	01c5d713          	srl	a4,a1,0x1c
-+ 878:	973e                	add	a4,a4,a5
-+ 87a:	fae68ae3          	beq	a3,a4,82e <free+0x22>
-     p->s.ptr = bp->s.ptr;
-- 882:	e394                	sd	a3,0(a5)
-+ 87e:	e394                	sd	a3,0(a5)
-   } else
-     p->s.ptr = bp;
-   freep = p;
-- 884:	00000717          	auipc	a4,0x0
-- 888:	76f73e23          	sd	a5,1916(a4) # 1000 <freep>
-+ 880:	00000717          	auipc	a4,0x0
-+ 884:	78f73023          	sd	a5,1920(a4) # 1000 <freep>
- }
-- 88c:	6422                	ld	s0,8(sp)
-- 88e:	0141                	addi	sp,sp,16
-- 890:	8082                	ret
-+ 888:	6422                	ld	s0,8(sp)
-+ 88a:	0141                	add	sp,sp,16
-+ 88c:	8082                	ret
- 
--0000000000000892 <malloc>:
-+000000000000088e <malloc>:
-   return freep;
- }
- 
- void*
- malloc(uint nbytes)
- {
-- 892:	7139                	addi	sp,sp,-64
-- 894:	fc06                	sd	ra,56(sp)
-- 896:	f822                	sd	s0,48(sp)
-- 898:	f426                	sd	s1,40(sp)
-- 89a:	ec4e                	sd	s3,24(sp)
-- 89c:	0080                	addi	s0,sp,64
-+ 88e:	7139                	add	sp,sp,-64
-+ 890:	fc06                	sd	ra,56(sp)
-+ 892:	f822                	sd	s0,48(sp)
-+ 894:	f426                	sd	s1,40(sp)
-+ 896:	f04a                	sd	s2,32(sp)
-+ 898:	ec4e                	sd	s3,24(sp)
-+ 89a:	e852                	sd	s4,16(sp)
-+ 89c:	e456                	sd	s5,8(sp)
-+ 89e:	e05a                	sd	s6,0(sp)
-+ 8a0:	0080                	add	s0,sp,64
-   Header *p, *prevp;
-   uint nunits;
- 
-   nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;
-- 89e:	02051493          	slli	s1,a0,0x20
-- 8a2:	9081                	srli	s1,s1,0x20
-- 8a4:	04bd                	addi	s1,s1,15
-- 8a6:	8091                	srli	s1,s1,0x4
-- 8a8:	0014899b          	addiw	s3,s1,1
-- 8ac:	0485                	addi	s1,s1,1
-+ 8a2:	02051493          	sll	s1,a0,0x20
-+ 8a6:	9081                	srl	s1,s1,0x20
-+ 8a8:	04bd                	add	s1,s1,15
-+ 8aa:	8091                	srl	s1,s1,0x4
-+ 8ac:	0014899b          	addw	s3,s1,1
-+ 8b0:	0485                	add	s1,s1,1
-   if((prevp = freep) == 0){
-- 8ae:	00000517          	auipc	a0,0x0
-- 8b2:	75253503          	ld	a0,1874(a0) # 1000 <freep>
-- 8b6:	c915                	beqz	a0,8ea <malloc+0x58>
-+ 8b2:	00000517          	auipc	a0,0x0
-+ 8b6:	74e53503          	ld	a0,1870(a0) # 1000 <freep>
-+ 8ba:	c515                	beqz	a0,8e6 <malloc+0x58>
-     base.s.ptr = freep = prevp = &base;
-     base.s.size = 0;
-   }
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 8b8:	611c                	ld	a5,0(a0)
-+ 8bc:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 8ba:	4798                	lw	a4,8(a5)
-- 8bc:	08977a63          	bgeu	a4,s1,950 <malloc+0xbe>
-- 8c0:	f04a                	sd	s2,32(sp)
-- 8c2:	e852                	sd	s4,16(sp)
-- 8c4:	e456                	sd	s5,8(sp)
-- 8c6:	e05a                	sd	s6,0(sp)
-+ 8be:	4798                	lw	a4,8(a5)
-+ 8c0:	02977f63          	bgeu	a4,s1,8fe <malloc+0x70>
-   if(nu < 4096)
-- 8c8:	8a4e                	mv	s4,s3
-- 8ca:	0009871b          	sext.w	a4,s3
-- 8ce:	6685                	lui	a3,0x1
-- 8d0:	00d77363          	bgeu	a4,a3,8d6 <malloc+0x44>
-- 8d4:	6a05                	lui	s4,0x1
-- 8d6:	000a0b1b          	sext.w	s6,s4
-+ 8c4:	8a4e                	mv	s4,s3
-+ 8c6:	0009871b          	sext.w	a4,s3
-+ 8ca:	6685                	lui	a3,0x1
-+ 8cc:	00d77363          	bgeu	a4,a3,8d2 <malloc+0x44>
-+ 8d0:	6a05                	lui	s4,0x1
-+ 8d2:	000a0b1b          	sext.w	s6,s4
-   p = sbrk(nu * sizeof(Header));
-- 8da:	004a1a1b          	slliw	s4,s4,0x4
-+ 8d6:	004a1a1b          	sllw	s4,s4,0x4
-         p->s.size = nunits;
-       }
-       freep = prevp;
-       return (void*)(p + 1);
-     }
-     if(p == freep)
-- 8de:	00000917          	auipc	s2,0x0
-- 8e2:	72290913          	addi	s2,s2,1826 # 1000 <freep>
-+ 8da:	00000917          	auipc	s2,0x0
-+ 8de:	72690913          	add	s2,s2,1830 # 1000 <freep>
-   if(p == (char*)-1)
-- 8e6:	5afd                	li	s5,-1
-- 8e8:	a081                	j	928 <malloc+0x96>
-- 8ea:	f04a                	sd	s2,32(sp)
-- 8ec:	e852                	sd	s4,16(sp)
-- 8ee:	e456                	sd	s5,8(sp)
-- 8f0:	e05a                	sd	s6,0(sp)
-+ 8e2:	5afd                	li	s5,-1
-+ 8e4:	a885                	j	954 <malloc+0xc6>
-     base.s.ptr = freep = prevp = &base;
-- 8f2:	00001797          	auipc	a5,0x1
-- 8f6:	91e78793          	addi	a5,a5,-1762 # 1210 <base>
-- 8fa:	00000717          	auipc	a4,0x0
-- 8fe:	70f73323          	sd	a5,1798(a4) # 1000 <freep>
-- 902:	e39c                	sd	a5,0(a5)
-+ 8e6:	00001797          	auipc	a5,0x1
-+ 8ea:	92a78793          	add	a5,a5,-1750 # 1210 <base>
-+ 8ee:	00000717          	auipc	a4,0x0
-+ 8f2:	70f73923          	sd	a5,1810(a4) # 1000 <freep>
-+ 8f6:	e39c                	sd	a5,0(a5)
-     base.s.size = 0;
-- 904:	0007a423          	sw	zero,8(a5)
-+ 8f8:	0007a423          	sw	zero,8(a5)
-     if(p->s.size >= nunits){
-- 908:	b7c1                	j	8c8 <malloc+0x36>
-+ 8fc:	b7e1                	j	8c4 <malloc+0x36>
-+      if(p->s.size == nunits)
-+ 8fe:	02e48c63          	beq	s1,a4,936 <malloc+0xa8>
-+        p->s.size -= nunits;
-+ 902:	4137073b          	subw	a4,a4,s3
-+ 906:	c798                	sw	a4,8(a5)
-+        p += p->s.size;
-+ 908:	02071693          	sll	a3,a4,0x20
-+ 90c:	01c6d713          	srl	a4,a3,0x1c
-+ 910:	97ba                	add	a5,a5,a4
-+        p->s.size = nunits;
-+ 912:	0137a423          	sw	s3,8(a5)
-+      freep = prevp;
-+ 916:	00000717          	auipc	a4,0x0
-+ 91a:	6ea73523          	sd	a0,1770(a4) # 1000 <freep>
-+      return (void*)(p + 1);
-+ 91e:	01078513          	add	a0,a5,16
-+      if((p = morecore(nunits)) == 0)
-+        return 0;
-+  }
-+}
-+ 922:	70e2                	ld	ra,56(sp)
-+ 924:	7442                	ld	s0,48(sp)
-+ 926:	74a2                	ld	s1,40(sp)
-+ 928:	7902                	ld	s2,32(sp)
-+ 92a:	69e2                	ld	s3,24(sp)
-+ 92c:	6a42                	ld	s4,16(sp)
-+ 92e:	6aa2                	ld	s5,8(sp)
-+ 930:	6b02                	ld	s6,0(sp)
-+ 932:	6121                	add	sp,sp,64
-+ 934:	8082                	ret
-         prevp->s.ptr = p->s.ptr;
-- 90a:	6398                	ld	a4,0(a5)
-- 90c:	e118                	sd	a4,0(a0)
-- 90e:	a8a9                	j	968 <malloc+0xd6>
-+ 936:	6398                	ld	a4,0(a5)
-+ 938:	e118                	sd	a4,0(a0)
-+ 93a:	bff1                	j	916 <malloc+0x88>
-   hp->s.size = nu;
-- 910:	01652423          	sw	s6,8(a0)
-+ 93c:	01652423          	sw	s6,8(a0)
-   free((void*)(hp + 1));
-- 914:	0541                	addi	a0,a0,16
-- 916:	efbff0ef          	jal	810 <free>
-+ 940:	0541                	add	a0,a0,16
-+ 942:	ecbff0ef          	jal	80c <free>
-   return freep;
-- 91a:	00093503          	ld	a0,0(s2)
-+ 946:	00093503          	ld	a0,0(s2)
-       if((p = morecore(nunits)) == 0)
-- 91e:	c12d                	beqz	a0,980 <malloc+0xee>
-+ 94a:	dd61                	beqz	a0,922 <malloc+0x94>
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 920:	611c                	ld	a5,0(a0)
-+ 94c:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 922:	4798                	lw	a4,8(a5)
-- 924:	02977263          	bgeu	a4,s1,948 <malloc+0xb6>
-+ 94e:	4798                	lw	a4,8(a5)
-+ 950:	fa9777e3          	bgeu	a4,s1,8fe <malloc+0x70>
-     if(p == freep)
-- 928:	00093703          	ld	a4,0(s2)
-- 92c:	853e                	mv	a0,a5
-- 92e:	fef719e3          	bne	a4,a5,920 <malloc+0x8e>
-+ 954:	00093703          	ld	a4,0(s2)
-+ 958:	853e                	mv	a0,a5
-+ 95a:	fef719e3          	bne	a4,a5,94c <malloc+0xbe>
-   p = sbrk(nu * sizeof(Header));
-- 932:	8552                	mv	a0,s4
-- 934:	b1bff0ef          	jal	44e <sbrk>
-+ 95e:	8552                	mv	a0,s4
-+ 960:	ae9ff0ef          	jal	448 <sbrk>
-   if(p == (char*)-1)
-- 938:	fd551ce3          	bne	a0,s5,910 <malloc+0x7e>
-+ 964:	fd551ce3          	bne	a0,s5,93c <malloc+0xae>
-         return 0;
-- 93c:	4501                	li	a0,0
-- 93e:	7902                	ld	s2,32(sp)
-- 940:	6a42                	ld	s4,16(sp)
-- 942:	6aa2                	ld	s5,8(sp)
-- 944:	6b02                	ld	s6,0(sp)
-- 946:	a03d                	j	974 <malloc+0xe2>
-- 948:	7902                	ld	s2,32(sp)
-- 94a:	6a42                	ld	s4,16(sp)
-- 94c:	6aa2                	ld	s5,8(sp)
-- 94e:	6b02                	ld	s6,0(sp)
--      if(p->s.size == nunits)
-- 950:	fae48de3          	beq	s1,a4,90a <malloc+0x78>
--        p->s.size -= nunits;
-- 954:	4137073b          	subw	a4,a4,s3
-- 958:	c798                	sw	a4,8(a5)
--        p += p->s.size;
-- 95a:	02071693          	slli	a3,a4,0x20
-- 95e:	01c6d713          	srli	a4,a3,0x1c
-- 962:	97ba                	add	a5,a5,a4
--        p->s.size = nunits;
-- 964:	0137a423          	sw	s3,8(a5)
--      freep = prevp;
-- 968:	00000717          	auipc	a4,0x0
-- 96c:	68a73c23          	sd	a0,1688(a4) # 1000 <freep>
--      return (void*)(p + 1);
-- 970:	01078513          	addi	a0,a5,16
--  }
--}
-- 974:	70e2                	ld	ra,56(sp)
-- 976:	7442                	ld	s0,48(sp)
-- 978:	74a2                	ld	s1,40(sp)
-- 97a:	69e2                	ld	s3,24(sp)
-- 97c:	6121                	addi	sp,sp,64
-- 97e:	8082                	ret
-- 980:	7902                	ld	s2,32(sp)
-- 982:	6a42                	ld	s4,16(sp)
-- 984:	6aa2                	ld	s5,8(sp)
-- 986:	6b02                	ld	s6,0(sp)
-- 988:	b7f5                	j	974 <malloc+0xe2>
-+ 968:	4501                	li	a0,0
-+ 96a:	bf65                	j	922 <malloc+0x94>
-diff --git a/Assignments/Assignment-6/xv6/user/wc.d b/Assignments/Assignment-6/xv6/user/wc.d
-index 0022dbd..813c90b 100644
---- a/Assignments/Assignment-6/xv6/user/wc.d
-+++ b/Assignments/Assignment-6/xv6/user/wc.d
-@@ -1,3 +1,2 @@
--user/wc.o: user/wc.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/stat.h kernel/fcntl.h user/user.h
-+user/wc.o: user/wc.c kernel/types.h kernel/stat.h kernel/fcntl.h \
-+ user/user.h
-diff --git a/Assignments/Assignment-6/xv6/user/wc.o b/Assignments/Assignment-6/xv6/user/wc.o
-index dbab3df..73adfae 100644
-Binary files a/Assignments/Assignment-6/xv6/user/wc.o and b/Assignments/Assignment-6/xv6/user/wc.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/wc.sym b/Assignments/Assignment-6/xv6/user/wc.sym
-index 927a695..7299984 100644
---- a/Assignments/Assignment-6/xv6/user/wc.sym
-+++ b/Assignments/Assignment-6/xv6/user/wc.sym
-@@ -1,6 +1,5 @@
- 0000000000000000 .text
--0000000000000990 .rodata
--00000000000009f8 .eh_frame
-+0000000000000970 .rodata
- 0000000000001000 .data
- 0000000000001000 .bss
- 0000000000000000 .debug_info
-@@ -11,55 +10,56 @@
- 0000000000000000 .debug_str
- 0000000000000000 .comment
- 0000000000000000 .riscv.attributes
-+0000000000000000 .debug_frame
- 0000000000000000 .debug_ranges
- 0000000000000000 wc.c
- 0000000000000000 ulib.c
- 0000000000000000 usys.o
- 0000000000000000 printf.c
--0000000000000466 putc
--0000000000000484 printint
--00000000000009e0 digits
-+0000000000000460 putc
-+000000000000047e printint
-+00000000000009c0 digits
- 0000000000000000 umalloc.c
- 0000000000001000 freep
- 0000000000001210 base
--000000000000016e strcpy
--00000000000007de printf
--0000000000000318 memmove
--000000000000040e mknod
--0000000000000226 gets
--0000000000000446 getpid
--00000000000003aa memcpy
--0000000000000892 malloc
--0000000000000456 sleep
--00000000000003d6 pipe
--00000000000003e6 write
--000000000000041e fstat
--00000000000007b4 fprintf
--00000000000003f6 kill
--000000000000052c vprintf
--0000000000000436 chdir
--00000000000003fe exec
--00000000000003ce wait
--00000000000003de read
--0000000000000416 unlink
-+0000000000000168 strcpy
-+00000000000007da printf
-+0000000000000312 memmove
-+0000000000000408 mknod
-+0000000000000220 gets
-+0000000000000440 getpid
-+00000000000003a4 memcpy
-+000000000000088e malloc
-+0000000000000450 sleep
-+00000000000003d0 pipe
-+00000000000003e0 write
-+0000000000000418 fstat
-+00000000000007b0 fprintf
-+00000000000003f0 kill
-+0000000000000526 vprintf
-+0000000000000430 chdir
-+00000000000003f8 exec
-+00000000000003c8 wait
-+00000000000003d8 read
-+0000000000000410 unlink
- 0000000000000000 wc
--0000000000000370 memcmp
--00000000000003be fork
--000000000000044e sbrk
--000000000000045e uptime
--00000000000001e0 memset
-+000000000000036a memcmp
-+00000000000003b8 fork
-+0000000000000448 sbrk
-+0000000000000458 uptime
-+00000000000001da memset
- 00000000000000da main
--000000000000018a strcmp
--000000000000043e dup
-+0000000000000184 strcmp
-+0000000000000438 dup
- 0000000000001010 buf
--0000000000000296 stat
--0000000000000426 link
--00000000000003c6 exit
--000000000000015c start
--00000000000002d0 atoi
--00000000000001b6 strlen
--0000000000000406 open
--0000000000000202 strchr
--000000000000042e mkdir
--00000000000003ee close
--0000000000000810 free
-+0000000000000290 stat
-+0000000000000420 link
-+00000000000003c0 exit
-+0000000000000156 start
-+00000000000002ca atoi
-+00000000000001b0 strlen
-+0000000000000400 open
-+00000000000001fc strchr
-+0000000000000428 mkdir
-+00000000000003e8 close
-+000000000000080c free
-diff --git a/Assignments/Assignment-6/xv6/user/zombie.asm b/Assignments/Assignment-6/xv6/user/zombie.asm
-index fd4641b..dbf3548 100644
---- a/Assignments/Assignment-6/xv6/user/zombie.asm
-+++ b/Assignments/Assignment-6/xv6/user/zombie.asm
-@@ -11,10 +11,10 @@ Disassembly of section .text:
- int
- main(void)
- {
--   0:	1141                	addi	sp,sp,-16
-+   0:	1141                	add	sp,sp,-16
-    2:	e406                	sd	ra,8(sp)
-    4:	e022                	sd	s0,0(sp)
--   6:	0800                	addi	s0,sp,16
-+   6:	0800                	add	s0,sp,16
-   if(fork() > 0)
-    8:	278000ef          	jal	280 <fork>
-    c:	00a04563          	bgtz	a0,16 <main+0x16>
-@@ -34,10 +34,10 @@ main(void)
- void
- start()
- {
--  1e:	1141                	addi	sp,sp,-16
-+  1e:	1141                	add	sp,sp,-16
-   20:	e406                	sd	ra,8(sp)
-   22:	e022                	sd	s0,0(sp)
--  24:	0800                	addi	s0,sp,16
-+  24:	0800                	add	s0,sp,16
-   extern int main();
-   main();
-   26:	fdbff0ef          	jal	0 <main>
-@@ -51,16 +51,16 @@ start()
- char*
- strcpy(char *s, const char *t)
- {
--  30:	1141                	addi	sp,sp,-16
-+  30:	1141                	add	sp,sp,-16
-   32:	e422                	sd	s0,8(sp)
--  34:	0800                	addi	s0,sp,16
-+  34:	0800                	add	s0,sp,16
-   char *os;
- 
-   os = s;
-   while((*s++ = *t++) != 0)
-   36:	87aa                	mv	a5,a0
--  38:	0585                	addi	a1,a1,1
--  3a:	0785                	addi	a5,a5,1
-+  38:	0585                	add	a1,a1,1
-+  3a:	0785                	add	a5,a5,1
-   3c:	fff5c703          	lbu	a4,-1(a1)
-   40:	fee78fa3          	sb	a4,-1(a5)
-   44:	fb75                	bnez	a4,38 <strcpy+0x8>
-@@ -68,7 +68,7 @@ strcpy(char *s, const char *t)
-   return os;
- }
-   46:	6422                	ld	s0,8(sp)
--  48:	0141                	addi	sp,sp,16
-+  48:	0141                	add	sp,sp,16
-   4a:	8082                	ret
- 
- 000000000000004c <strcmp>:
-@@ -76,17 +76,17 @@ strcpy(char *s, const char *t)
- int
- strcmp(const char *p, const char *q)
- {
--  4c:	1141                	addi	sp,sp,-16
-+  4c:	1141                	add	sp,sp,-16
-   4e:	e422                	sd	s0,8(sp)
--  50:	0800                	addi	s0,sp,16
-+  50:	0800                	add	s0,sp,16
-   while(*p && *p == *q)
-   52:	00054783          	lbu	a5,0(a0)
-   56:	cb91                	beqz	a5,6a <strcmp+0x1e>
-   58:	0005c703          	lbu	a4,0(a1)
-   5c:	00f71763          	bne	a4,a5,6a <strcmp+0x1e>
-     p++, q++;
--  60:	0505                	addi	a0,a0,1
--  62:	0585                	addi	a1,a1,1
-+  60:	0505                	add	a0,a0,1
-+  62:	0585                	add	a1,a1,1
-   while(*p && *p == *q)
-   64:	00054783          	lbu	a5,0(a0)
-   68:	fbe5                	bnez	a5,58 <strcmp+0xc>
-@@ -95,7 +95,7 @@ strcmp(const char *p, const char *q)
- }
-   6e:	40a7853b          	subw	a0,a5,a0
-   72:	6422                	ld	s0,8(sp)
--  74:	0141                	addi	sp,sp,16
-+  74:	0141                	add	sp,sp,16
-   76:	8082                	ret
- 
- 0000000000000078 <strlen>:
-@@ -103,27 +103,27 @@ strcmp(const char *p, const char *q)
- uint
- strlen(const char *s)
- {
--  78:	1141                	addi	sp,sp,-16
-+  78:	1141                	add	sp,sp,-16
-   7a:	e422                	sd	s0,8(sp)
--  7c:	0800                	addi	s0,sp,16
-+  7c:	0800                	add	s0,sp,16
-   int n;
- 
-   for(n = 0; s[n]; n++)
-   7e:	00054783          	lbu	a5,0(a0)
-   82:	cf91                	beqz	a5,9e <strlen+0x26>
--  84:	0505                	addi	a0,a0,1
-+  84:	0505                	add	a0,a0,1
-   86:	87aa                	mv	a5,a0
-   88:	86be                	mv	a3,a5
--  8a:	0785                	addi	a5,a5,1
-+  8a:	0785                	add	a5,a5,1
-   8c:	fff7c703          	lbu	a4,-1(a5)
-   90:	ff65                	bnez	a4,88 <strlen+0x10>
-   92:	40a6853b          	subw	a0,a3,a0
--  96:	2505                	addiw	a0,a0,1
-+  96:	2505                	addw	a0,a0,1
-     ;
-   return n;
- }
-   98:	6422                	ld	s0,8(sp)
--  9a:	0141                	addi	sp,sp,16
-+  9a:	0141                	add	sp,sp,16
-   9c:	8082                	ret
-   for(n = 0; s[n]; n++)
-   9e:	4501                	li	a0,0
-@@ -134,27 +134,27 @@ strlen(const char *s)
- void*
- memset(void *dst, int c, uint n)
- {
--  a2:	1141                	addi	sp,sp,-16
-+  a2:	1141                	add	sp,sp,-16
-   a4:	e422                	sd	s0,8(sp)
--  a6:	0800                	addi	s0,sp,16
-+  a6:	0800                	add	s0,sp,16
-   char *cdst = (char *) dst;
-   int i;
-   for(i = 0; i < n; i++){
-   a8:	ca19                	beqz	a2,be <memset+0x1c>
-   aa:	87aa                	mv	a5,a0
--  ac:	1602                	slli	a2,a2,0x20
--  ae:	9201                	srli	a2,a2,0x20
-+  ac:	1602                	sll	a2,a2,0x20
-+  ae:	9201                	srl	a2,a2,0x20
-   b0:	00a60733          	add	a4,a2,a0
-     cdst[i] = c;
-   b4:	00b78023          	sb	a1,0(a5)
-   for(i = 0; i < n; i++){
--  b8:	0785                	addi	a5,a5,1
-+  b8:	0785                	add	a5,a5,1
-   ba:	fee79de3          	bne	a5,a4,b4 <memset+0x12>
-   }
-   return dst;
- }
-   be:	6422                	ld	s0,8(sp)
--  c0:	0141                	addi	sp,sp,16
-+  c0:	0141                	add	sp,sp,16
-   c2:	8082                	ret
- 
- 00000000000000c4 <strchr>:
-@@ -162,16 +162,16 @@ memset(void *dst, int c, uint n)
- char*
- strchr(const char *s, char c)
- {
--  c4:	1141                	addi	sp,sp,-16
-+  c4:	1141                	add	sp,sp,-16
-   c6:	e422                	sd	s0,8(sp)
--  c8:	0800                	addi	s0,sp,16
-+  c8:	0800                	add	s0,sp,16
-   for(; *s; s++)
-   ca:	00054783          	lbu	a5,0(a0)
-   ce:	cb99                	beqz	a5,e4 <strchr+0x20>
-     if(*s == c)
-   d0:	00f58763          	beq	a1,a5,de <strchr+0x1a>
-   for(; *s; s++)
--  d4:	0505                	addi	a0,a0,1
-+  d4:	0505                	add	a0,a0,1
-   d6:	00054783          	lbu	a5,0(a0)
-   da:	fbfd                	bnez	a5,d0 <strchr+0xc>
-       return (char*)s;
-@@ -179,7 +179,7 @@ strchr(const char *s, char c)
-   dc:	4501                	li	a0,0
- }
-   de:	6422                	ld	s0,8(sp)
--  e0:	0141                	addi	sp,sp,16
-+  e0:	0141                	add	sp,sp,16
-   e2:	8082                	ret
-   return 0;
-   e4:	4501                	li	a0,0
-@@ -190,7 +190,7 @@ strchr(const char *s, char c)
- char*
- gets(char *buf, int max)
- {
--  e8:	711d                	addi	sp,sp,-96
-+  e8:	711d                	add	sp,sp,-96
-   ea:	ec86                	sd	ra,88(sp)
-   ec:	e8a2                	sd	s0,80(sp)
-   ee:	e4a6                	sd	s1,72(sp)
-@@ -200,7 +200,7 @@ gets(char *buf, int max)
-   f6:	f456                	sd	s5,40(sp)
-   f8:	f05a                	sd	s6,32(sp)
-   fa:	ec5e                	sd	s7,24(sp)
--  fc:	1080                	addi	s0,sp,96
-+  fc:	1080                	add	s0,sp,96
-   fe:	8baa                	mv	s7,a0
-  100:	8a2e                	mv	s4,a1
-   int i, cc;
-@@ -218,11 +218,11 @@ gets(char *buf, int max)
-  108:	4b35                	li	s6,13
-   for(i=0; i+1 < max; ){
-  10a:	89a6                	mv	s3,s1
-- 10c:	2485                	addiw	s1,s1,1
-+ 10c:	2485                	addw	s1,s1,1
-  10e:	0344d663          	bge	s1,s4,13a <gets+0x52>
-     cc = read(0, &c, 1);
-  112:	4605                	li	a2,1
-- 114:	faf40593          	addi	a1,s0,-81
-+ 114:	faf40593          	add	a1,s0,-81
-  118:	4501                	li	a0,0
-  11a:	186000ef          	jal	2a0 <read>
-     if(cc < 1)
-@@ -232,9 +232,9 @@ gets(char *buf, int max)
-  126:	00f90023          	sb	a5,0(s2)
-     if(c == '\n' || c == '\r')
-  12a:	01578763          	beq	a5,s5,138 <gets+0x50>
-- 12e:	0905                	addi	s2,s2,1
-+ 12e:	0905                	add	s2,s2,1
-  130:	fd679de3          	bne	a5,s6,10a <gets+0x22>
--    buf[i++] = c;
-+  for(i=0; i+1 < max; ){
-  134:	89a6                	mv	s3,s1
-  136:	a011                	j	13a <gets+0x52>
-  138:	89a6                	mv	s3,s1
-@@ -255,7 +255,7 @@ gets(char *buf, int max)
-  14e:	7aa2                	ld	s5,40(sp)
-  150:	7b02                	ld	s6,32(sp)
-  152:	6be2                	ld	s7,24(sp)
-- 154:	6125                	addi	sp,sp,96
-+ 154:	6125                	add	sp,sp,96
-  156:	8082                	ret
- 
- 0000000000000158 <stat>:
-@@ -263,21 +263,21 @@ gets(char *buf, int max)
- int
- stat(const char *n, struct stat *st)
- {
-- 158:	1101                	addi	sp,sp,-32
-+ 158:	1101                	add	sp,sp,-32
-  15a:	ec06                	sd	ra,24(sp)
-  15c:	e822                	sd	s0,16(sp)
-- 15e:	e04a                	sd	s2,0(sp)
-- 160:	1000                	addi	s0,sp,32
-- 162:	892e                	mv	s2,a1
-+ 15e:	e426                	sd	s1,8(sp)
-+ 160:	e04a                	sd	s2,0(sp)
-+ 162:	1000                	add	s0,sp,32
-+ 164:	892e                	mv	s2,a1
-   int fd;
-   int r;
- 
-   fd = open(n, O_RDONLY);
-- 164:	4581                	li	a1,0
-- 166:	162000ef          	jal	2c8 <open>
-+ 166:	4581                	li	a1,0
-+ 168:	160000ef          	jal	2c8 <open>
-   if(fd < 0)
-- 16a:	02054263          	bltz	a0,18e <stat+0x36>
-- 16e:	e426                	sd	s1,8(sp)
-+ 16c:	02054163          	bltz	a0,18e <stat+0x36>
-  170:	84aa                	mv	s1,a0
-     return -1;
-   r = fstat(fd, st);
-@@ -288,32 +288,32 @@ stat(const char *n, struct stat *st)
-  17a:	8526                	mv	a0,s1
-  17c:	134000ef          	jal	2b0 <close>
-   return r;
-- 180:	64a2                	ld	s1,8(sp)
- }
-- 182:	854a                	mv	a0,s2
-- 184:	60e2                	ld	ra,24(sp)
-- 186:	6442                	ld	s0,16(sp)
-+ 180:	854a                	mv	a0,s2
-+ 182:	60e2                	ld	ra,24(sp)
-+ 184:	6442                	ld	s0,16(sp)
-+ 186:	64a2                	ld	s1,8(sp)
-  188:	6902                	ld	s2,0(sp)
-- 18a:	6105                	addi	sp,sp,32
-+ 18a:	6105                	add	sp,sp,32
-  18c:	8082                	ret
-     return -1;
-  18e:	597d                	li	s2,-1
-- 190:	bfcd                	j	182 <stat+0x2a>
-+ 190:	bfc5                	j	180 <stat+0x28>
- 
- 0000000000000192 <atoi>:
- 
- int
- atoi(const char *s)
- {
-- 192:	1141                	addi	sp,sp,-16
-+ 192:	1141                	add	sp,sp,-16
-  194:	e422                	sd	s0,8(sp)
-- 196:	0800                	addi	s0,sp,16
-+ 196:	0800                	add	s0,sp,16
-   int n;
- 
-   n = 0;
-   while('0' <= *s && *s <= '9')
-  198:	00054683          	lbu	a3,0(a0)
-- 19c:	fd06879b          	addiw	a5,a3,-48
-+ 19c:	fd06879b          	addw	a5,a3,-48
-  1a0:	0ff7f793          	zext.b	a5,a5
-  1a4:	4625                	li	a2,9
-  1a6:	02f66863          	bltu	a2,a5,1d6 <atoi+0x44>
-@@ -321,21 +321,21 @@ atoi(const char *s)
-   n = 0;
-  1ac:	4501                	li	a0,0
-     n = n*10 + *s++ - '0';
-- 1ae:	0705                	addi	a4,a4,1
-- 1b0:	0025179b          	slliw	a5,a0,0x2
-+ 1ae:	0705                	add	a4,a4,1
-+ 1b0:	0025179b          	sllw	a5,a0,0x2
-  1b4:	9fa9                	addw	a5,a5,a0
-- 1b6:	0017979b          	slliw	a5,a5,0x1
-+ 1b6:	0017979b          	sllw	a5,a5,0x1
-  1ba:	9fb5                	addw	a5,a5,a3
-- 1bc:	fd07851b          	addiw	a0,a5,-48
-+ 1bc:	fd07851b          	addw	a0,a5,-48
-   while('0' <= *s && *s <= '9')
-  1c0:	00074683          	lbu	a3,0(a4)
-- 1c4:	fd06879b          	addiw	a5,a3,-48
-+ 1c4:	fd06879b          	addw	a5,a3,-48
-  1c8:	0ff7f793          	zext.b	a5,a5
-  1cc:	fef671e3          	bgeu	a2,a5,1ae <atoi+0x1c>
-   return n;
- }
-  1d0:	6422                	ld	s0,8(sp)
-- 1d2:	0141                	addi	sp,sp,16
-+ 1d2:	0141                	add	sp,sp,16
-  1d4:	8082                	ret
-   n = 0;
-  1d6:	4501                	li	a0,0
-@@ -346,9 +346,9 @@ atoi(const char *s)
- void*
- memmove(void *vdst, const void *vsrc, int n)
- {
-- 1da:	1141                	addi	sp,sp,-16
-+ 1da:	1141                	add	sp,sp,-16
-  1dc:	e422                	sd	s0,8(sp)
-- 1de:	0800                	addi	s0,sp,16
-+ 1de:	0800                	add	s0,sp,16
-   char *dst;
-   const char *src;
- 
-@@ -358,18 +358,18 @@ memmove(void *vdst, const void *vsrc, int n)
-  1e0:	02b57463          	bgeu	a0,a1,208 <memmove+0x2e>
-     while(n-- > 0)
-  1e4:	00c05f63          	blez	a2,202 <memmove+0x28>
-- 1e8:	1602                	slli	a2,a2,0x20
-- 1ea:	9201                	srli	a2,a2,0x20
-+ 1e8:	1602                	sll	a2,a2,0x20
-+ 1ea:	9201                	srl	a2,a2,0x20
-  1ec:	00c507b3          	add	a5,a0,a2
-   dst = vdst;
-  1f0:	872a                	mv	a4,a0
-       *dst++ = *src++;
-- 1f2:	0585                	addi	a1,a1,1
-- 1f4:	0705                	addi	a4,a4,1
-+ 1f2:	0585                	add	a1,a1,1
-+ 1f4:	0705                	add	a4,a4,1
-  1f6:	fff5c683          	lbu	a3,-1(a1)
-  1fa:	fed70fa3          	sb	a3,-1(a4)
-     while(n-- > 0)
-- 1fe:	fef71ae3          	bne	a4,a5,1f2 <memmove+0x18>
-+ 1fe:	fee79ae3          	bne	a5,a4,1f2 <memmove+0x18>
-     src += n;
-     while(n-- > 0)
-       *--dst = *--src;
-@@ -377,7 +377,7 @@ memmove(void *vdst, const void *vsrc, int n)
-   return vdst;
- }
-  202:	6422                	ld	s0,8(sp)
-- 204:	0141                	addi	sp,sp,16
-+ 204:	0141                	add	sp,sp,16
-  206:	8082                	ret
-     dst += n;
-  208:	00c50733          	add	a4,a0,a2
-@@ -385,14 +385,14 @@ memmove(void *vdst, const void *vsrc, int n)
-  20c:	95b2                	add	a1,a1,a2
-     while(n-- > 0)
-  20e:	fec05ae3          	blez	a2,202 <memmove+0x28>
-- 212:	fff6079b          	addiw	a5,a2,-1
-- 216:	1782                	slli	a5,a5,0x20
-- 218:	9381                	srli	a5,a5,0x20
-+ 212:	fff6079b          	addw	a5,a2,-1
-+ 216:	1782                	sll	a5,a5,0x20
-+ 218:	9381                	srl	a5,a5,0x20
-  21a:	fff7c793          	not	a5,a5
-  21e:	97ba                	add	a5,a5,a4
-       *--dst = *--src;
-- 220:	15fd                	addi	a1,a1,-1
-- 222:	177d                	addi	a4,a4,-1
-+ 220:	15fd                	add	a1,a1,-1
-+ 222:	177d                	add	a4,a4,-1
-  224:	0005c683          	lbu	a3,0(a1)
-  228:	00d70023          	sb	a3,0(a4)
-     while(n-- > 0)
-@@ -404,16 +404,16 @@ memmove(void *vdst, const void *vsrc, int n)
- int
- memcmp(const void *s1, const void *s2, uint n)
- {
-- 232:	1141                	addi	sp,sp,-16
-+ 232:	1141                	add	sp,sp,-16
-  234:	e422                	sd	s0,8(sp)
-- 236:	0800                	addi	s0,sp,16
-+ 236:	0800                	add	s0,sp,16
-   const char *p1 = s1, *p2 = s2;
-   while (n-- > 0) {
-  238:	ca05                	beqz	a2,268 <memcmp+0x36>
-- 23a:	fff6069b          	addiw	a3,a2,-1
-- 23e:	1682                	slli	a3,a3,0x20
-- 240:	9281                	srli	a3,a3,0x20
-- 242:	0685                	addi	a3,a3,1
-+ 23a:	fff6069b          	addw	a3,a2,-1
-+ 23e:	1682                	sll	a3,a3,0x20
-+ 240:	9281                	srl	a3,a3,0x20
-+ 242:	0685                	add	a3,a3,1
-  244:	96aa                	add	a3,a3,a0
-     if (*p1 != *p2) {
-  246:	00054783          	lbu	a5,0(a0)
-@@ -422,9 +422,9 @@ memcmp(const void *s1, const void *s2, uint n)
-       return *p1 - *p2;
-     }
-     p1++;
-- 252:	0505                	addi	a0,a0,1
-+ 252:	0505                	add	a0,a0,1
-     p2++;
-- 254:	0585                	addi	a1,a1,1
-+ 254:	0585                	add	a1,a1,1
-   while (n-- > 0) {
-  256:	fed518e3          	bne	a0,a3,246 <memcmp+0x14>
-   }
-@@ -435,7 +435,7 @@ memcmp(const void *s1, const void *s2, uint n)
-  25e:	40e7853b          	subw	a0,a5,a4
- }
-  262:	6422                	ld	s0,8(sp)
-- 264:	0141                	addi	sp,sp,16
-+ 264:	0141                	add	sp,sp,16
-  266:	8082                	ret
-   return 0;
-  268:	4501                	li	a0,0
-@@ -446,16 +446,16 @@ memcmp(const void *s1, const void *s2, uint n)
- void *
- memcpy(void *dst, const void *src, uint n)
- {
-- 26c:	1141                	addi	sp,sp,-16
-+ 26c:	1141                	add	sp,sp,-16
-  26e:	e406                	sd	ra,8(sp)
-  270:	e022                	sd	s0,0(sp)
-- 272:	0800                	addi	s0,sp,16
-+ 272:	0800                	add	s0,sp,16
-   return memmove(dst, src, n);
-  274:	f67ff0ef          	jal	1da <memmove>
- }
-  278:	60a2                	ld	ra,8(sp)
-  27a:	6402                	ld	s0,0(sp)
-- 27c:	0141                	addi	sp,sp,16
-+ 27c:	0141                	add	sp,sp,16
-  27e:	8082                	ret
- 
- 0000000000000280 <fork>:
-@@ -677,19 +677,19 @@ static char digits[] = "0123456789ABCDEF";
- static void
- putc(int fd, char c)
- {
-- 328:	1101                	addi	sp,sp,-32
-+ 328:	1101                	add	sp,sp,-32
-  32a:	ec06                	sd	ra,24(sp)
-  32c:	e822                	sd	s0,16(sp)
-- 32e:	1000                	addi	s0,sp,32
-+ 32e:	1000                	add	s0,sp,32
-  330:	feb407a3          	sb	a1,-17(s0)
-   write(fd, &c, 1);
-  334:	4605                	li	a2,1
-- 336:	fef40593          	addi	a1,s0,-17
-+ 336:	fef40593          	add	a1,s0,-17
-  33a:	f6fff0ef          	jal	2a8 <write>
- }
-  33e:	60e2                	ld	ra,24(sp)
-  340:	6442                	ld	s0,16(sp)
-- 342:	6105                	addi	sp,sp,32
-+ 342:	6105                	add	sp,sp,32
-  344:	8082                	ret
- 
- 0000000000000346 <printint>:
-@@ -697,92 +697,92 @@ putc(int fd, char c)
- static void
- printint(int fd, int xx, int base, int sgn)
- {
-- 346:	7139                	addi	sp,sp,-64
-+ 346:	7139                	add	sp,sp,-64
-  348:	fc06                	sd	ra,56(sp)
-  34a:	f822                	sd	s0,48(sp)
-  34c:	f426                	sd	s1,40(sp)
-- 34e:	0080                	addi	s0,sp,64
-- 350:	84aa                	mv	s1,a0
-+ 34e:	f04a                	sd	s2,32(sp)
-+ 350:	ec4e                	sd	s3,24(sp)
-+ 352:	0080                	add	s0,sp,64
-+ 354:	84aa                	mv	s1,a0
-   char buf[16];
-   int i, neg;
-   uint x;
- 
-   neg = 0;
-   if(sgn && xx < 0){
-- 352:	c299                	beqz	a3,358 <printint+0x12>
-- 354:	0805c963          	bltz	a1,3e6 <printint+0xa0>
-+ 356:	c299                	beqz	a3,35c <printint+0x16>
-+ 358:	0805c763          	bltz	a1,3e6 <printint+0xa0>
-     neg = 1;
-     x = -xx;
-   } else {
-     x = xx;
-- 358:	2581                	sext.w	a1,a1
-+ 35c:	2581                	sext.w	a1,a1
-   neg = 0;
-- 35a:	4881                	li	a7,0
-- 35c:	fc040693          	addi	a3,s0,-64
-+ 35e:	4881                	li	a7,0
-+ 360:	fc040693          	add	a3,s0,-64
-   }
- 
-   i = 0;
-- 360:	4701                	li	a4,0
-+ 364:	4701                	li	a4,0
-   do{
-     buf[i++] = digits[x % base];
-- 362:	2601                	sext.w	a2,a2
-- 364:	00000517          	auipc	a0,0x0
-- 368:	4f450513          	addi	a0,a0,1268 # 858 <digits>
-- 36c:	883a                	mv	a6,a4
-- 36e:	2705                	addiw	a4,a4,1
-- 370:	02c5f7bb          	remuw	a5,a1,a2
-- 374:	1782                	slli	a5,a5,0x20
-- 376:	9381                	srli	a5,a5,0x20
-- 378:	97aa                	add	a5,a5,a0
-- 37a:	0007c783          	lbu	a5,0(a5)
-- 37e:	00f68023          	sb	a5,0(a3)
-+ 366:	2601                	sext.w	a2,a2
-+ 368:	00000517          	auipc	a0,0x0
-+ 36c:	4e050513          	add	a0,a0,1248 # 848 <digits>
-+ 370:	883a                	mv	a6,a4
-+ 372:	2705                	addw	a4,a4,1
-+ 374:	02c5f7bb          	remuw	a5,a1,a2
-+ 378:	1782                	sll	a5,a5,0x20
-+ 37a:	9381                	srl	a5,a5,0x20
-+ 37c:	97aa                	add	a5,a5,a0
-+ 37e:	0007c783          	lbu	a5,0(a5)
-+ 382:	00f68023          	sb	a5,0(a3)
-   }while((x /= base) != 0);
-- 382:	0005879b          	sext.w	a5,a1
-- 386:	02c5d5bb          	divuw	a1,a1,a2
-- 38a:	0685                	addi	a3,a3,1
-- 38c:	fec7f0e3          	bgeu	a5,a2,36c <printint+0x26>
-+ 386:	0005879b          	sext.w	a5,a1
-+ 38a:	02c5d5bb          	divuw	a1,a1,a2
-+ 38e:	0685                	add	a3,a3,1
-+ 390:	fec7f0e3          	bgeu	a5,a2,370 <printint+0x2a>
-   if(neg)
-- 390:	00088c63          	beqz	a7,3a8 <printint+0x62>
-+ 394:	00088c63          	beqz	a7,3ac <printint+0x66>
-     buf[i++] = '-';
-- 394:	fd070793          	addi	a5,a4,-48
-- 398:	00878733          	add	a4,a5,s0
-- 39c:	02d00793          	li	a5,45
-- 3a0:	fef70823          	sb	a5,-16(a4)
-- 3a4:	0028071b          	addiw	a4,a6,2
-+ 398:	fd070793          	add	a5,a4,-48
-+ 39c:	00878733          	add	a4,a5,s0
-+ 3a0:	02d00793          	li	a5,45
-+ 3a4:	fef70823          	sb	a5,-16(a4)
-+ 3a8:	0028071b          	addw	a4,a6,2
- 
-   while(--i >= 0)
-- 3a8:	02e05a63          	blez	a4,3dc <printint+0x96>
-- 3ac:	f04a                	sd	s2,32(sp)
-- 3ae:	ec4e                	sd	s3,24(sp)
-- 3b0:	fc040793          	addi	a5,s0,-64
-+ 3ac:	02e05663          	blez	a4,3d8 <printint+0x92>
-+ 3b0:	fc040793          	add	a5,s0,-64
-  3b4:	00e78933          	add	s2,a5,a4
-- 3b8:	fff78993          	addi	s3,a5,-1
-+ 3b8:	fff78993          	add	s3,a5,-1
-  3bc:	99ba                	add	s3,s3,a4
-- 3be:	377d                	addiw	a4,a4,-1
-- 3c0:	1702                	slli	a4,a4,0x20
-- 3c2:	9301                	srli	a4,a4,0x20
-+ 3be:	377d                	addw	a4,a4,-1
-+ 3c0:	1702                	sll	a4,a4,0x20
-+ 3c2:	9301                	srl	a4,a4,0x20
-  3c4:	40e989b3          	sub	s3,s3,a4
-     putc(fd, buf[i]);
-  3c8:	fff94583          	lbu	a1,-1(s2)
-  3cc:	8526                	mv	a0,s1
-  3ce:	f5bff0ef          	jal	328 <putc>
-   while(--i >= 0)
-- 3d2:	197d                	addi	s2,s2,-1
-+ 3d2:	197d                	add	s2,s2,-1
-  3d4:	ff391ae3          	bne	s2,s3,3c8 <printint+0x82>
-- 3d8:	7902                	ld	s2,32(sp)
-- 3da:	69e2                	ld	s3,24(sp)
- }
-- 3dc:	70e2                	ld	ra,56(sp)
-- 3de:	7442                	ld	s0,48(sp)
-- 3e0:	74a2                	ld	s1,40(sp)
-- 3e2:	6121                	addi	sp,sp,64
-+ 3d8:	70e2                	ld	ra,56(sp)
-+ 3da:	7442                	ld	s0,48(sp)
-+ 3dc:	74a2                	ld	s1,40(sp)
-+ 3de:	7902                	ld	s2,32(sp)
-+ 3e0:	69e2                	ld	s3,24(sp)
-+ 3e2:	6121                	add	sp,sp,64
-  3e4:	8082                	ret
-     x = -xx;
-  3e6:	40b005bb          	negw	a1,a1
-     neg = 1;
-  3ea:	4885                	li	a7,1
-     x = -xx;
-- 3ec:	bf85                	j	35c <printint+0x16>
-+ 3ec:	bf95                	j	360 <printint+0x1a>
- 
- 00000000000003ee <vprintf>:
- }
-@@ -791,320 +791,320 @@ printint(int fd, int xx, int base, int sgn)
- void
- vprintf(int fd, const char *fmt, va_list ap)
- {
-- 3ee:	711d                	addi	sp,sp,-96
-+ 3ee:	711d                	add	sp,sp,-96
-  3f0:	ec86                	sd	ra,88(sp)
-  3f2:	e8a2                	sd	s0,80(sp)
-- 3f4:	e0ca                	sd	s2,64(sp)
-- 3f6:	1080                	addi	s0,sp,96
-+ 3f4:	e4a6                	sd	s1,72(sp)
-+ 3f6:	e0ca                	sd	s2,64(sp)
-+ 3f8:	fc4e                	sd	s3,56(sp)
-+ 3fa:	f852                	sd	s4,48(sp)
-+ 3fc:	f456                	sd	s5,40(sp)
-+ 3fe:	f05a                	sd	s6,32(sp)
-+ 400:	ec5e                	sd	s7,24(sp)
-+ 402:	e862                	sd	s8,16(sp)
-+ 404:	e466                	sd	s9,8(sp)
-+ 406:	e06a                	sd	s10,0(sp)
-+ 408:	1080                	add	s0,sp,96
-   char *s;
-   int c0, c1, c2, i, state;
- 
-   state = 0;
-   for(i = 0; fmt[i]; i++){
-- 3f8:	0005c903          	lbu	s2,0(a1)
-- 3fc:	26090863          	beqz	s2,66c <vprintf+0x27e>
-- 400:	e4a6                	sd	s1,72(sp)
-- 402:	fc4e                	sd	s3,56(sp)
-- 404:	f852                	sd	s4,48(sp)
-- 406:	f456                	sd	s5,40(sp)
-- 408:	f05a                	sd	s6,32(sp)
-- 40a:	ec5e                	sd	s7,24(sp)
-- 40c:	e862                	sd	s8,16(sp)
-- 40e:	e466                	sd	s9,8(sp)
-- 410:	8b2a                	mv	s6,a0
-- 412:	8a2e                	mv	s4,a1
-- 414:	8bb2                	mv	s7,a2
-+ 40a:	0005c903          	lbu	s2,0(a1)
-+ 40e:	24090763          	beqz	s2,65c <vprintf+0x26e>
-+ 412:	8b2a                	mv	s6,a0
-+ 414:	8a2e                	mv	s4,a1
-+ 416:	8bb2                	mv	s7,a2
-   state = 0;
-- 416:	4981                	li	s3,0
-+ 418:	4981                	li	s3,0
-   for(i = 0; fmt[i]; i++){
-- 418:	4481                	li	s1,0
-- 41a:	4701                	li	a4,0
-+ 41a:	4481                	li	s1,0
-+ 41c:	4701                	li	a4,0
-       if(c0 == '%'){
-         state = '%';
-       } else {
-         putc(fd, c0);
-       }
-     } else if(state == '%'){
-- 41c:	02500a93          	li	s5,37
-+ 41e:	02500a93          	li	s5,37
-       c1 = c2 = 0;
-       if(c0) c1 = fmt[i+1] & 0xff;
-       if(c1) c2 = fmt[i+2] & 0xff;
-       if(c0 == 'd'){
-- 420:	06400c13          	li	s8,100
-+ 422:	06400c13          	li	s8,100
-         printint(fd, va_arg(ap, int), 10, 1);
-       } else if(c0 == 'l' && c1 == 'd'){
-- 424:	06c00c93          	li	s9,108
-- 428:	a005                	j	448 <vprintf+0x5a>
-+ 426:	06c00c93          	li	s9,108
-+ 42a:	a005                	j	44a <vprintf+0x5c>
-         putc(fd, c0);
-- 42a:	85ca                	mv	a1,s2
-- 42c:	855a                	mv	a0,s6
-- 42e:	efbff0ef          	jal	328 <putc>
-- 432:	a019                	j	438 <vprintf+0x4a>
-+ 42c:	85ca                	mv	a1,s2
-+ 42e:	855a                	mv	a0,s6
-+ 430:	ef9ff0ef          	jal	328 <putc>
-+ 434:	a019                	j	43a <vprintf+0x4c>
-     } else if(state == '%'){
-- 434:	03598263          	beq	s3,s5,458 <vprintf+0x6a>
-+ 436:	03598263          	beq	s3,s5,45a <vprintf+0x6c>
-   for(i = 0; fmt[i]; i++){
-- 438:	2485                	addiw	s1,s1,1
-- 43a:	8726                	mv	a4,s1
-- 43c:	009a07b3          	add	a5,s4,s1
-- 440:	0007c903          	lbu	s2,0(a5)
-- 444:	20090c63          	beqz	s2,65c <vprintf+0x26e>
-+ 43a:	2485                	addw	s1,s1,1
-+ 43c:	8726                	mv	a4,s1
-+ 43e:	009a07b3          	add	a5,s4,s1
-+ 442:	0007c903          	lbu	s2,0(a5)
-+ 446:	20090b63          	beqz	s2,65c <vprintf+0x26e>
-     c0 = fmt[i] & 0xff;
-- 448:	0009079b          	sext.w	a5,s2
-+ 44a:	0009079b          	sext.w	a5,s2
-     if(state == 0){
-- 44c:	fe0994e3          	bnez	s3,434 <vprintf+0x46>
-+ 44e:	fe0994e3          	bnez	s3,436 <vprintf+0x48>
-       if(c0 == '%'){
-- 450:	fd579de3          	bne	a5,s5,42a <vprintf+0x3c>
-+ 452:	fd579de3          	bne	a5,s5,42c <vprintf+0x3e>
-         state = '%';
-- 454:	89be                	mv	s3,a5
-- 456:	b7cd                	j	438 <vprintf+0x4a>
-+ 456:	89be                	mv	s3,a5
-+ 458:	b7cd                	j	43a <vprintf+0x4c>
-       if(c0) c1 = fmt[i+1] & 0xff;
-- 458:	00ea06b3          	add	a3,s4,a4
-- 45c:	0016c683          	lbu	a3,1(a3)
-+ 45a:	c7c9                	beqz	a5,4e4 <vprintf+0xf6>
-+ 45c:	00ea06b3          	add	a3,s4,a4
-+ 460:	0016c683          	lbu	a3,1(a3)
-       c1 = c2 = 0;
-- 460:	8636                	mv	a2,a3
-+ 464:	8636                	mv	a2,a3
-       if(c1) c2 = fmt[i+2] & 0xff;
-- 462:	c681                	beqz	a3,46a <vprintf+0x7c>
-- 464:	9752                	add	a4,a4,s4
-- 466:	00274603          	lbu	a2,2(a4)
-+ 466:	c681                	beqz	a3,46e <vprintf+0x80>
-+ 468:	9752                	add	a4,a4,s4
-+ 46a:	00274603          	lbu	a2,2(a4)
-       if(c0 == 'd'){
-- 46a:	03878f63          	beq	a5,s8,4a8 <vprintf+0xba>
-+ 46e:	03878f63          	beq	a5,s8,4ac <vprintf+0xbe>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 46e:	05978963          	beq	a5,s9,4c0 <vprintf+0xd2>
-+ 472:	05978963          	beq	a5,s9,4c4 <vprintf+0xd6>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-         printint(fd, va_arg(ap, uint64), 10, 1);
-         i += 2;
-       } else if(c0 == 'u'){
-- 472:	07500713          	li	a4,117
-- 476:	0ee78363          	beq	a5,a4,55c <vprintf+0x16e>
-+ 476:	07500713          	li	a4,117
-+ 47a:	0ee78363          	beq	a5,a4,560 <vprintf+0x172>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-         printint(fd, va_arg(ap, uint64), 10, 0);
-         i += 2;
-       } else if(c0 == 'x'){
-- 47a:	07800713          	li	a4,120
-- 47e:	12e78563          	beq	a5,a4,5a8 <vprintf+0x1ba>
-+ 47e:	07800713          	li	a4,120
-+ 482:	12e78563          	beq	a5,a4,5ac <vprintf+0x1be>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 1;
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-         printint(fd, va_arg(ap, uint64), 16, 0);
-         i += 2;
-       } else if(c0 == 'p'){
-- 482:	07000713          	li	a4,112
-- 486:	14e78a63          	beq	a5,a4,5da <vprintf+0x1ec>
-+ 486:	07000713          	li	a4,112
-+ 48a:	14e78a63          	beq	a5,a4,5de <vprintf+0x1f0>
-         printptr(fd, va_arg(ap, uint64));
-       } else if(c0 == 's'){
-- 48a:	07300713          	li	a4,115
-- 48e:	18e78a63          	beq	a5,a4,622 <vprintf+0x234>
-+ 48e:	07300713          	li	a4,115
-+ 492:	18e78863          	beq	a5,a4,622 <vprintf+0x234>
-         if((s = va_arg(ap, char*)) == 0)
-           s = "(null)";
-         for(; *s; s++)
-           putc(fd, *s);
-       } else if(c0 == '%'){
-- 492:	02500713          	li	a4,37
-- 496:	04e79563          	bne	a5,a4,4e0 <vprintf+0xf2>
-+ 496:	02500713          	li	a4,37
-+ 49a:	04e79563          	bne	a5,a4,4e4 <vprintf+0xf6>
-         putc(fd, '%');
-- 49a:	02500593          	li	a1,37
-- 49e:	855a                	mv	a0,s6
-- 4a0:	e89ff0ef          	jal	328 <putc>
-+ 49e:	02500593          	li	a1,37
-+ 4a2:	855a                	mv	a0,s6
-+ 4a4:	e85ff0ef          	jal	328 <putc>
-         /* Unknown % sequence.  Print it to draw attention. */
-         putc(fd, '%');
-         putc(fd, c);
-       }
- #endif
-       state = 0;
-- 4a4:	4981                	li	s3,0
-- 4a6:	bf49                	j	438 <vprintf+0x4a>
-+ 4a8:	4981                	li	s3,0
-+ 4aa:	bf41                	j	43a <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 1);
-- 4a8:	008b8913          	addi	s2,s7,8
-- 4ac:	4685                	li	a3,1
-- 4ae:	4629                	li	a2,10
-- 4b0:	000ba583          	lw	a1,0(s7)
-- 4b4:	855a                	mv	a0,s6
-- 4b6:	e91ff0ef          	jal	346 <printint>
-- 4ba:	8bca                	mv	s7,s2
-+ 4ac:	008b8913          	add	s2,s7,8
-+ 4b0:	4685                	li	a3,1
-+ 4b2:	4629                	li	a2,10
-+ 4b4:	000ba583          	lw	a1,0(s7)
-+ 4b8:	855a                	mv	a0,s6
-+ 4ba:	e8dff0ef          	jal	346 <printint>
-+ 4be:	8bca                	mv	s7,s2
-       state = 0;
-- 4bc:	4981                	li	s3,0
-- 4be:	bfad                	j	438 <vprintf+0x4a>
-+ 4c0:	4981                	li	s3,0
-+ 4c2:	bfa5                	j	43a <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'd'){
-- 4c0:	06400793          	li	a5,100
-- 4c4:	02f68963          	beq	a3,a5,4f6 <vprintf+0x108>
-+ 4c4:	06400793          	li	a5,100
-+ 4c8:	02f68963          	beq	a3,a5,4fa <vprintf+0x10c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 4c8:	06c00793          	li	a5,108
-- 4cc:	04f68263          	beq	a3,a5,510 <vprintf+0x122>
-+ 4cc:	06c00793          	li	a5,108
-+ 4d0:	04f68263          	beq	a3,a5,514 <vprintf+0x126>
-       } else if(c0 == 'l' && c1 == 'u'){
-- 4d0:	07500793          	li	a5,117
-- 4d4:	0af68063          	beq	a3,a5,574 <vprintf+0x186>
-+ 4d4:	07500793          	li	a5,117
-+ 4d8:	0af68063          	beq	a3,a5,578 <vprintf+0x18a>
-       } else if(c0 == 'l' && c1 == 'x'){
-- 4d8:	07800793          	li	a5,120
-- 4dc:	0ef68263          	beq	a3,a5,5c0 <vprintf+0x1d2>
-+ 4dc:	07800793          	li	a5,120
-+ 4e0:	0ef68263          	beq	a3,a5,5c4 <vprintf+0x1d6>
-         putc(fd, '%');
-- 4e0:	02500593          	li	a1,37
-- 4e4:	855a                	mv	a0,s6
-- 4e6:	e43ff0ef          	jal	328 <putc>
-+ 4e4:	02500593          	li	a1,37
-+ 4e8:	855a                	mv	a0,s6
-+ 4ea:	e3fff0ef          	jal	328 <putc>
-         putc(fd, c0);
-- 4ea:	85ca                	mv	a1,s2
-- 4ec:	855a                	mv	a0,s6
-- 4ee:	e3bff0ef          	jal	328 <putc>
-+ 4ee:	85ca                	mv	a1,s2
-+ 4f0:	855a                	mv	a0,s6
-+ 4f2:	e37ff0ef          	jal	328 <putc>
-       state = 0;
-- 4f2:	4981                	li	s3,0
-- 4f4:	b791                	j	438 <vprintf+0x4a>
-+ 4f6:	4981                	li	s3,0
-+ 4f8:	b789                	j	43a <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 4f6:	008b8913          	addi	s2,s7,8
-- 4fa:	4685                	li	a3,1
-- 4fc:	4629                	li	a2,10
-- 4fe:	000ba583          	lw	a1,0(s7)
-- 502:	855a                	mv	a0,s6
-- 504:	e43ff0ef          	jal	346 <printint>
-+ 4fa:	008b8913          	add	s2,s7,8
-+ 4fe:	4685                	li	a3,1
-+ 500:	4629                	li	a2,10
-+ 502:	000ba583          	lw	a1,0(s7)
-+ 506:	855a                	mv	a0,s6
-+ 508:	e3fff0ef          	jal	346 <printint>
-         i += 1;
-- 508:	2485                	addiw	s1,s1,1
-+ 50c:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 50a:	8bca                	mv	s7,s2
-+ 50e:	8bca                	mv	s7,s2
-       state = 0;
-- 50c:	4981                	li	s3,0
-+ 510:	4981                	li	s3,0
-         i += 1;
-- 50e:	b72d                	j	438 <vprintf+0x4a>
-+ 512:	b725                	j	43a <vprintf+0x4c>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'd'){
-- 510:	06400793          	li	a5,100
-- 514:	02f60763          	beq	a2,a5,542 <vprintf+0x154>
-+ 514:	06400793          	li	a5,100
-+ 518:	02f60763          	beq	a2,a5,546 <vprintf+0x158>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'u'){
-- 518:	07500793          	li	a5,117
-- 51c:	06f60963          	beq	a2,a5,58e <vprintf+0x1a0>
-+ 51c:	07500793          	li	a5,117
-+ 520:	06f60963          	beq	a2,a5,592 <vprintf+0x1a4>
-       } else if(c0 == 'l' && c1 == 'l' && c2 == 'x'){
-- 520:	07800793          	li	a5,120
-- 524:	faf61ee3          	bne	a2,a5,4e0 <vprintf+0xf2>
-+ 524:	07800793          	li	a5,120
-+ 528:	faf61ee3          	bne	a2,a5,4e4 <vprintf+0xf6>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 528:	008b8913          	addi	s2,s7,8
-- 52c:	4681                	li	a3,0
-- 52e:	4641                	li	a2,16
-- 530:	000ba583          	lw	a1,0(s7)
-- 534:	855a                	mv	a0,s6
-- 536:	e11ff0ef          	jal	346 <printint>
-+ 52c:	008b8913          	add	s2,s7,8
-+ 530:	4681                	li	a3,0
-+ 532:	4641                	li	a2,16
-+ 534:	000ba583          	lw	a1,0(s7)
-+ 538:	855a                	mv	a0,s6
-+ 53a:	e0dff0ef          	jal	346 <printint>
-         i += 2;
-- 53a:	2489                	addiw	s1,s1,2
-+ 53e:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 53c:	8bca                	mv	s7,s2
-+ 540:	8bca                	mv	s7,s2
-       state = 0;
-- 53e:	4981                	li	s3,0
-+ 542:	4981                	li	s3,0
-         i += 2;
-- 540:	bde5                	j	438 <vprintf+0x4a>
-+ 544:	bddd                	j	43a <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 542:	008b8913          	addi	s2,s7,8
-- 546:	4685                	li	a3,1
-- 548:	4629                	li	a2,10
-- 54a:	000ba583          	lw	a1,0(s7)
-- 54e:	855a                	mv	a0,s6
-- 550:	df7ff0ef          	jal	346 <printint>
-+ 546:	008b8913          	add	s2,s7,8
-+ 54a:	4685                	li	a3,1
-+ 54c:	4629                	li	a2,10
-+ 54e:	000ba583          	lw	a1,0(s7)
-+ 552:	855a                	mv	a0,s6
-+ 554:	df3ff0ef          	jal	346 <printint>
-         i += 2;
-- 554:	2489                	addiw	s1,s1,2
-+ 558:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 1);
-- 556:	8bca                	mv	s7,s2
-+ 55a:	8bca                	mv	s7,s2
-       state = 0;
-- 558:	4981                	li	s3,0
-+ 55c:	4981                	li	s3,0
-         i += 2;
-- 55a:	bdf9                	j	438 <vprintf+0x4a>
-+ 55e:	bdf1                	j	43a <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 10, 0);
-- 55c:	008b8913          	addi	s2,s7,8
-- 560:	4681                	li	a3,0
-- 562:	4629                	li	a2,10
-- 564:	000ba583          	lw	a1,0(s7)
-- 568:	855a                	mv	a0,s6
-- 56a:	dddff0ef          	jal	346 <printint>
-- 56e:	8bca                	mv	s7,s2
-+ 560:	008b8913          	add	s2,s7,8
-+ 564:	4681                	li	a3,0
-+ 566:	4629                	li	a2,10
-+ 568:	000ba583          	lw	a1,0(s7)
-+ 56c:	855a                	mv	a0,s6
-+ 56e:	dd9ff0ef          	jal	346 <printint>
-+ 572:	8bca                	mv	s7,s2
-       state = 0;
-- 570:	4981                	li	s3,0
-- 572:	b5d9                	j	438 <vprintf+0x4a>
-+ 574:	4981                	li	s3,0
-+ 576:	b5d1                	j	43a <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 574:	008b8913          	addi	s2,s7,8
-- 578:	4681                	li	a3,0
-- 57a:	4629                	li	a2,10
-- 57c:	000ba583          	lw	a1,0(s7)
-- 580:	855a                	mv	a0,s6
-- 582:	dc5ff0ef          	jal	346 <printint>
-+ 578:	008b8913          	add	s2,s7,8
-+ 57c:	4681                	li	a3,0
-+ 57e:	4629                	li	a2,10
-+ 580:	000ba583          	lw	a1,0(s7)
-+ 584:	855a                	mv	a0,s6
-+ 586:	dc1ff0ef          	jal	346 <printint>
-         i += 1;
-- 586:	2485                	addiw	s1,s1,1
-+ 58a:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 588:	8bca                	mv	s7,s2
-+ 58c:	8bca                	mv	s7,s2
-       state = 0;
-- 58a:	4981                	li	s3,0
-+ 58e:	4981                	li	s3,0
-         i += 1;
-- 58c:	b575                	j	438 <vprintf+0x4a>
-+ 590:	b56d                	j	43a <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 58e:	008b8913          	addi	s2,s7,8
-- 592:	4681                	li	a3,0
-- 594:	4629                	li	a2,10
-- 596:	000ba583          	lw	a1,0(s7)
-- 59a:	855a                	mv	a0,s6
-- 59c:	dabff0ef          	jal	346 <printint>
-+ 592:	008b8913          	add	s2,s7,8
-+ 596:	4681                	li	a3,0
-+ 598:	4629                	li	a2,10
-+ 59a:	000ba583          	lw	a1,0(s7)
-+ 59e:	855a                	mv	a0,s6
-+ 5a0:	da7ff0ef          	jal	346 <printint>
-         i += 2;
-- 5a0:	2489                	addiw	s1,s1,2
-+ 5a4:	2489                	addw	s1,s1,2
-         printint(fd, va_arg(ap, uint64), 10, 0);
-- 5a2:	8bca                	mv	s7,s2
-+ 5a6:	8bca                	mv	s7,s2
-       state = 0;
-- 5a4:	4981                	li	s3,0
-+ 5a8:	4981                	li	s3,0
-         i += 2;
-- 5a6:	bd49                	j	438 <vprintf+0x4a>
-+ 5aa:	bd41                	j	43a <vprintf+0x4c>
-         printint(fd, va_arg(ap, int), 16, 0);
-- 5a8:	008b8913          	addi	s2,s7,8
-- 5ac:	4681                	li	a3,0
-- 5ae:	4641                	li	a2,16
-- 5b0:	000ba583          	lw	a1,0(s7)
-- 5b4:	855a                	mv	a0,s6
-- 5b6:	d91ff0ef          	jal	346 <printint>
-- 5ba:	8bca                	mv	s7,s2
-+ 5ac:	008b8913          	add	s2,s7,8
-+ 5b0:	4681                	li	a3,0
-+ 5b2:	4641                	li	a2,16
-+ 5b4:	000ba583          	lw	a1,0(s7)
-+ 5b8:	855a                	mv	a0,s6
-+ 5ba:	d8dff0ef          	jal	346 <printint>
-+ 5be:	8bca                	mv	s7,s2
-       state = 0;
-- 5bc:	4981                	li	s3,0
-- 5be:	bdad                	j	438 <vprintf+0x4a>
-+ 5c0:	4981                	li	s3,0
-+ 5c2:	bda5                	j	43a <vprintf+0x4c>
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 5c0:	008b8913          	addi	s2,s7,8
-- 5c4:	4681                	li	a3,0
-- 5c6:	4641                	li	a2,16
-- 5c8:	000ba583          	lw	a1,0(s7)
-- 5cc:	855a                	mv	a0,s6
-- 5ce:	d79ff0ef          	jal	346 <printint>
-+ 5c4:	008b8913          	add	s2,s7,8
-+ 5c8:	4681                	li	a3,0
-+ 5ca:	4641                	li	a2,16
-+ 5cc:	000ba583          	lw	a1,0(s7)
-+ 5d0:	855a                	mv	a0,s6
-+ 5d2:	d75ff0ef          	jal	346 <printint>
-         i += 1;
-- 5d2:	2485                	addiw	s1,s1,1
-+ 5d6:	2485                	addw	s1,s1,1
-         printint(fd, va_arg(ap, uint64), 16, 0);
-- 5d4:	8bca                	mv	s7,s2
-+ 5d8:	8bca                	mv	s7,s2
-       state = 0;
-- 5d6:	4981                	li	s3,0
-+ 5da:	4981                	li	s3,0
-         i += 1;
-- 5d8:	b585                	j	438 <vprintf+0x4a>
-- 5da:	e06a                	sd	s10,0(sp)
-+ 5dc:	bdb9                	j	43a <vprintf+0x4c>
-         printptr(fd, va_arg(ap, uint64));
-- 5dc:	008b8d13          	addi	s10,s7,8
-- 5e0:	000bb983          	ld	s3,0(s7)
-+ 5de:	008b8d13          	add	s10,s7,8
-+ 5e2:	000bb983          	ld	s3,0(s7)
-   putc(fd, '0');
-- 5e4:	03000593          	li	a1,48
-- 5e8:	855a                	mv	a0,s6
-- 5ea:	d3fff0ef          	jal	328 <putc>
-+ 5e6:	03000593          	li	a1,48
-+ 5ea:	855a                	mv	a0,s6
-+ 5ec:	d3dff0ef          	jal	328 <putc>
-   putc(fd, 'x');
-- 5ee:	07800593          	li	a1,120
-- 5f2:	855a                	mv	a0,s6
-- 5f4:	d35ff0ef          	jal	328 <putc>
-- 5f8:	4941                	li	s2,16
-+ 5f0:	07800593          	li	a1,120
-+ 5f4:	855a                	mv	a0,s6
-+ 5f6:	d33ff0ef          	jal	328 <putc>
-+ 5fa:	4941                	li	s2,16
-     putc(fd, digits[x >> (sizeof(uint64) * 8 - 4)]);
-- 5fa:	00000b97          	auipc	s7,0x0
-- 5fe:	25eb8b93          	addi	s7,s7,606 # 858 <digits>
-- 602:	03c9d793          	srli	a5,s3,0x3c
-- 606:	97de                	add	a5,a5,s7
-- 608:	0007c583          	lbu	a1,0(a5)
-- 60c:	855a                	mv	a0,s6
-- 60e:	d1bff0ef          	jal	328 <putc>
-+ 5fc:	00000b97          	auipc	s7,0x0
-+ 600:	24cb8b93          	add	s7,s7,588 # 848 <digits>
-+ 604:	03c9d793          	srl	a5,s3,0x3c
-+ 608:	97de                	add	a5,a5,s7
-+ 60a:	0007c583          	lbu	a1,0(a5)
-+ 60e:	855a                	mv	a0,s6
-+ 610:	d19ff0ef          	jal	328 <putc>
-   for (i = 0; i < (sizeof(uint64) * 2); i++, x <<= 4)
-- 612:	0992                	slli	s3,s3,0x4
-- 614:	397d                	addiw	s2,s2,-1
-- 616:	fe0916e3          	bnez	s2,602 <vprintf+0x214>
-+ 614:	0992                	sll	s3,s3,0x4
-+ 616:	397d                	addw	s2,s2,-1
-+ 618:	fe0916e3          	bnez	s2,604 <vprintf+0x216>
-         printptr(fd, va_arg(ap, uint64));
-- 61a:	8bea                	mv	s7,s10
-+ 61c:	8bea                	mv	s7,s10
-       state = 0;
-- 61c:	4981                	li	s3,0
-- 61e:	6d02                	ld	s10,0(sp)
-- 620:	bd21                	j	438 <vprintf+0x4a>
-+ 61e:	4981                	li	s3,0
-+ 620:	bd29                	j	43a <vprintf+0x4c>
-         if((s = va_arg(ap, char*)) == 0)
-- 622:	008b8993          	addi	s3,s7,8
-+ 622:	008b8993          	add	s3,s7,8
-  626:	000bb903          	ld	s2,0(s7)
-  62a:	00090f63          	beqz	s2,648 <vprintf+0x25a>
-         for(; *s; s++)
-@@ -1114,17 +1114,17 @@ vprintf(int fd, const char *fmt, va_list ap)
-  634:	855a                	mv	a0,s6
-  636:	cf3ff0ef          	jal	328 <putc>
-         for(; *s; s++)
-- 63a:	0905                	addi	s2,s2,1
-+ 63a:	0905                	add	s2,s2,1
-  63c:	00094583          	lbu	a1,0(s2)
-  640:	f9f5                	bnez	a1,634 <vprintf+0x246>
-         if((s = va_arg(ap, char*)) == 0)
-  642:	8bce                	mv	s7,s3
-       state = 0;
-  644:	4981                	li	s3,0
-- 646:	bbcd                	j	438 <vprintf+0x4a>
-+ 646:	bbd5                	j	43a <vprintf+0x4c>
-           s = "(null)";
-  648:	00000917          	auipc	s2,0x0
-- 64c:	20890913          	addi	s2,s2,520 # 850 <malloc+0xfc>
-+ 64c:	1f890913          	add	s2,s2,504 # 840 <malloc+0xea>
-         for(; *s; s++)
-  650:	02800593          	li	a1,40
-  654:	b7c5                	j	634 <vprintf+0x246>
-@@ -1132,298 +1132,288 @@ vprintf(int fd, const char *fmt, va_list ap)
-  656:	8bce                	mv	s7,s3
-       state = 0;
-  658:	4981                	li	s3,0
-- 65a:	bbf9                	j	438 <vprintf+0x4a>
-- 65c:	64a6                	ld	s1,72(sp)
-- 65e:	79e2                	ld	s3,56(sp)
-- 660:	7a42                	ld	s4,48(sp)
-- 662:	7aa2                	ld	s5,40(sp)
-- 664:	7b02                	ld	s6,32(sp)
-- 666:	6be2                	ld	s7,24(sp)
-- 668:	6c42                	ld	s8,16(sp)
-- 66a:	6ca2                	ld	s9,8(sp)
-+ 65a:	b3c5                	j	43a <vprintf+0x4c>
-     }
-   }
- }
-- 66c:	60e6                	ld	ra,88(sp)
-- 66e:	6446                	ld	s0,80(sp)
-- 670:	6906                	ld	s2,64(sp)
-- 672:	6125                	addi	sp,sp,96
-- 674:	8082                	ret
--
--0000000000000676 <fprintf>:
-+ 65c:	60e6                	ld	ra,88(sp)
-+ 65e:	6446                	ld	s0,80(sp)
-+ 660:	64a6                	ld	s1,72(sp)
-+ 662:	6906                	ld	s2,64(sp)
-+ 664:	79e2                	ld	s3,56(sp)
-+ 666:	7a42                	ld	s4,48(sp)
-+ 668:	7aa2                	ld	s5,40(sp)
-+ 66a:	7b02                	ld	s6,32(sp)
-+ 66c:	6be2                	ld	s7,24(sp)
-+ 66e:	6c42                	ld	s8,16(sp)
-+ 670:	6ca2                	ld	s9,8(sp)
-+ 672:	6d02                	ld	s10,0(sp)
-+ 674:	6125                	add	sp,sp,96
-+ 676:	8082                	ret
-+
-+0000000000000678 <fprintf>:
- 
- void
- fprintf(int fd, const char *fmt, ...)
- {
-- 676:	715d                	addi	sp,sp,-80
-- 678:	ec06                	sd	ra,24(sp)
-- 67a:	e822                	sd	s0,16(sp)
-- 67c:	1000                	addi	s0,sp,32
-- 67e:	e010                	sd	a2,0(s0)
-- 680:	e414                	sd	a3,8(s0)
-- 682:	e818                	sd	a4,16(s0)
-- 684:	ec1c                	sd	a5,24(s0)
-- 686:	03043023          	sd	a6,32(s0)
-- 68a:	03143423          	sd	a7,40(s0)
-+ 678:	715d                	add	sp,sp,-80
-+ 67a:	ec06                	sd	ra,24(sp)
-+ 67c:	e822                	sd	s0,16(sp)
-+ 67e:	1000                	add	s0,sp,32
-+ 680:	e010                	sd	a2,0(s0)
-+ 682:	e414                	sd	a3,8(s0)
-+ 684:	e818                	sd	a4,16(s0)
-+ 686:	ec1c                	sd	a5,24(s0)
-+ 688:	03043023          	sd	a6,32(s0)
-+ 68c:	03143423          	sd	a7,40(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 68e:	fe843423          	sd	s0,-24(s0)
-+ 690:	fe843423          	sd	s0,-24(s0)
-   vprintf(fd, fmt, ap);
-- 692:	8622                	mv	a2,s0
-- 694:	d5bff0ef          	jal	3ee <vprintf>
-+ 694:	8622                	mv	a2,s0
-+ 696:	d59ff0ef          	jal	3ee <vprintf>
- }
-- 698:	60e2                	ld	ra,24(sp)
-- 69a:	6442                	ld	s0,16(sp)
-- 69c:	6161                	addi	sp,sp,80
-- 69e:	8082                	ret
-+ 69a:	60e2                	ld	ra,24(sp)
-+ 69c:	6442                	ld	s0,16(sp)
-+ 69e:	6161                	add	sp,sp,80
-+ 6a0:	8082                	ret
- 
--00000000000006a0 <printf>:
-+00000000000006a2 <printf>:
- 
- void
- printf(const char *fmt, ...)
- {
-- 6a0:	711d                	addi	sp,sp,-96
-- 6a2:	ec06                	sd	ra,24(sp)
-- 6a4:	e822                	sd	s0,16(sp)
-- 6a6:	1000                	addi	s0,sp,32
-- 6a8:	e40c                	sd	a1,8(s0)
-- 6aa:	e810                	sd	a2,16(s0)
-- 6ac:	ec14                	sd	a3,24(s0)
-- 6ae:	f018                	sd	a4,32(s0)
-- 6b0:	f41c                	sd	a5,40(s0)
-- 6b2:	03043823          	sd	a6,48(s0)
-- 6b6:	03143c23          	sd	a7,56(s0)
-+ 6a2:	711d                	add	sp,sp,-96
-+ 6a4:	ec06                	sd	ra,24(sp)
-+ 6a6:	e822                	sd	s0,16(sp)
-+ 6a8:	1000                	add	s0,sp,32
-+ 6aa:	e40c                	sd	a1,8(s0)
-+ 6ac:	e810                	sd	a2,16(s0)
-+ 6ae:	ec14                	sd	a3,24(s0)
-+ 6b0:	f018                	sd	a4,32(s0)
-+ 6b2:	f41c                	sd	a5,40(s0)
-+ 6b4:	03043823          	sd	a6,48(s0)
-+ 6b8:	03143c23          	sd	a7,56(s0)
-   va_list ap;
- 
-   va_start(ap, fmt);
-- 6ba:	00840613          	addi	a2,s0,8
-- 6be:	fec43423          	sd	a2,-24(s0)
-+ 6bc:	00840613          	add	a2,s0,8
-+ 6c0:	fec43423          	sd	a2,-24(s0)
-   vprintf(1, fmt, ap);
-- 6c2:	85aa                	mv	a1,a0
-- 6c4:	4505                	li	a0,1
-- 6c6:	d29ff0ef          	jal	3ee <vprintf>
-+ 6c4:	85aa                	mv	a1,a0
-+ 6c6:	4505                	li	a0,1
-+ 6c8:	d27ff0ef          	jal	3ee <vprintf>
- }
-- 6ca:	60e2                	ld	ra,24(sp)
-- 6cc:	6442                	ld	s0,16(sp)
-- 6ce:	6125                	addi	sp,sp,96
-- 6d0:	8082                	ret
-+ 6cc:	60e2                	ld	ra,24(sp)
-+ 6ce:	6442                	ld	s0,16(sp)
-+ 6d0:	6125                	add	sp,sp,96
-+ 6d2:	8082                	ret
- 
--00000000000006d2 <free>:
-+00000000000006d4 <free>:
- static Header base;
- static Header *freep;
- 
- void
- free(void *ap)
- {
-- 6d2:	1141                	addi	sp,sp,-16
-- 6d4:	e422                	sd	s0,8(sp)
-- 6d6:	0800                	addi	s0,sp,16
-+ 6d4:	1141                	add	sp,sp,-16
-+ 6d6:	e422                	sd	s0,8(sp)
-+ 6d8:	0800                	add	s0,sp,16
-   Header *bp, *p;
- 
-   bp = (Header*)ap - 1;
-- 6d8:	ff050693          	addi	a3,a0,-16
-+ 6da:	ff050693          	add	a3,a0,-16
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 6dc:	00001797          	auipc	a5,0x1
-- 6e0:	9247b783          	ld	a5,-1756(a5) # 1000 <freep>
-- 6e4:	a02d                	j	70e <free+0x3c>
-+ 6de:	00001797          	auipc	a5,0x1
-+ 6e2:	9227b783          	ld	a5,-1758(a5) # 1000 <freep>
-+ 6e6:	a02d                	j	710 <free+0x3c>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-       break;
-   if(bp + bp->s.size == p->s.ptr){
-     bp->s.size += p->s.ptr->s.size;
-- 6e6:	4618                	lw	a4,8(a2)
-- 6e8:	9f2d                	addw	a4,a4,a1
-- 6ea:	fee52c23          	sw	a4,-8(a0)
-+ 6e8:	4618                	lw	a4,8(a2)
-+ 6ea:	9f2d                	addw	a4,a4,a1
-+ 6ec:	fee52c23          	sw	a4,-8(a0)
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 6ee:	6398                	ld	a4,0(a5)
-- 6f0:	6310                	ld	a2,0(a4)
-- 6f2:	a83d                	j	730 <free+0x5e>
-+ 6f0:	6398                	ld	a4,0(a5)
-+ 6f2:	6310                	ld	a2,0(a4)
-+ 6f4:	a83d                	j	732 <free+0x5e>
-   } else
-     bp->s.ptr = p->s.ptr;
-   if(p + p->s.size == bp){
-     p->s.size += bp->s.size;
-- 6f4:	ff852703          	lw	a4,-8(a0)
-- 6f8:	9f31                	addw	a4,a4,a2
-- 6fa:	c798                	sw	a4,8(a5)
-+ 6f6:	ff852703          	lw	a4,-8(a0)
-+ 6fa:	9f31                	addw	a4,a4,a2
-+ 6fc:	c798                	sw	a4,8(a5)
-     p->s.ptr = bp->s.ptr;
-- 6fc:	ff053683          	ld	a3,-16(a0)
-- 700:	a091                	j	744 <free+0x72>
-+ 6fe:	ff053683          	ld	a3,-16(a0)
-+ 702:	a091                	j	746 <free+0x72>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 702:	6398                	ld	a4,0(a5)
-- 704:	00e7e463          	bltu	a5,a4,70c <free+0x3a>
-- 708:	00e6ea63          	bltu	a3,a4,71c <free+0x4a>
-+ 704:	6398                	ld	a4,0(a5)
-+ 706:	00e7e463          	bltu	a5,a4,70e <free+0x3a>
-+ 70a:	00e6ea63          	bltu	a3,a4,71e <free+0x4a>
- {
-- 70c:	87ba                	mv	a5,a4
-+ 70e:	87ba                	mv	a5,a4
-   for(p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
-- 70e:	fed7fae3          	bgeu	a5,a3,702 <free+0x30>
-- 712:	6398                	ld	a4,0(a5)
-- 714:	00e6e463          	bltu	a3,a4,71c <free+0x4a>
-+ 710:	fed7fae3          	bgeu	a5,a3,704 <free+0x30>
-+ 714:	6398                	ld	a4,0(a5)
-+ 716:	00e6e463          	bltu	a3,a4,71e <free+0x4a>
-     if(p >= p->s.ptr && (bp > p || bp < p->s.ptr))
-- 718:	fee7eae3          	bltu	a5,a4,70c <free+0x3a>
-+ 71a:	fee7eae3          	bltu	a5,a4,70e <free+0x3a>
-   if(bp + bp->s.size == p->s.ptr){
-- 71c:	ff852583          	lw	a1,-8(a0)
-- 720:	6390                	ld	a2,0(a5)
-- 722:	02059813          	slli	a6,a1,0x20
-- 726:	01c85713          	srli	a4,a6,0x1c
-- 72a:	9736                	add	a4,a4,a3
-- 72c:	fae60de3          	beq	a2,a4,6e6 <free+0x14>
-+ 71e:	ff852583          	lw	a1,-8(a0)
-+ 722:	6390                	ld	a2,0(a5)
-+ 724:	02059813          	sll	a6,a1,0x20
-+ 728:	01c85713          	srl	a4,a6,0x1c
-+ 72c:	9736                	add	a4,a4,a3
-+ 72e:	fae60de3          	beq	a2,a4,6e8 <free+0x14>
-     bp->s.ptr = p->s.ptr->s.ptr;
-- 730:	fec53823          	sd	a2,-16(a0)
-+ 732:	fec53823          	sd	a2,-16(a0)
-   if(p + p->s.size == bp){
-- 734:	4790                	lw	a2,8(a5)
-- 736:	02061593          	slli	a1,a2,0x20
-- 73a:	01c5d713          	srli	a4,a1,0x1c
-- 73e:	973e                	add	a4,a4,a5
-- 740:	fae68ae3          	beq	a3,a4,6f4 <free+0x22>
-+ 736:	4790                	lw	a2,8(a5)
-+ 738:	02061593          	sll	a1,a2,0x20
-+ 73c:	01c5d713          	srl	a4,a1,0x1c
-+ 740:	973e                	add	a4,a4,a5
-+ 742:	fae68ae3          	beq	a3,a4,6f6 <free+0x22>
-     p->s.ptr = bp->s.ptr;
-- 744:	e394                	sd	a3,0(a5)
-+ 746:	e394                	sd	a3,0(a5)
-   } else
-     p->s.ptr = bp;
-   freep = p;
-- 746:	00001717          	auipc	a4,0x1
-- 74a:	8af73d23          	sd	a5,-1862(a4) # 1000 <freep>
-+ 748:	00001717          	auipc	a4,0x1
-+ 74c:	8af73c23          	sd	a5,-1864(a4) # 1000 <freep>
- }
-- 74e:	6422                	ld	s0,8(sp)
-- 750:	0141                	addi	sp,sp,16
-- 752:	8082                	ret
-+ 750:	6422                	ld	s0,8(sp)
-+ 752:	0141                	add	sp,sp,16
-+ 754:	8082                	ret
- 
--0000000000000754 <malloc>:
-+0000000000000756 <malloc>:
-   return freep;
- }
- 
- void*
- malloc(uint nbytes)
- {
-- 754:	7139                	addi	sp,sp,-64
-- 756:	fc06                	sd	ra,56(sp)
-- 758:	f822                	sd	s0,48(sp)
-- 75a:	f426                	sd	s1,40(sp)
-- 75c:	ec4e                	sd	s3,24(sp)
-- 75e:	0080                	addi	s0,sp,64
-+ 756:	7139                	add	sp,sp,-64
-+ 758:	fc06                	sd	ra,56(sp)
-+ 75a:	f822                	sd	s0,48(sp)
-+ 75c:	f426                	sd	s1,40(sp)
-+ 75e:	f04a                	sd	s2,32(sp)
-+ 760:	ec4e                	sd	s3,24(sp)
-+ 762:	e852                	sd	s4,16(sp)
-+ 764:	e456                	sd	s5,8(sp)
-+ 766:	e05a                	sd	s6,0(sp)
-+ 768:	0080                	add	s0,sp,64
-   Header *p, *prevp;
-   uint nunits;
- 
-   nunits = (nbytes + sizeof(Header) - 1)/sizeof(Header) + 1;
-- 760:	02051493          	slli	s1,a0,0x20
-- 764:	9081                	srli	s1,s1,0x20
-- 766:	04bd                	addi	s1,s1,15
-- 768:	8091                	srli	s1,s1,0x4
-- 76a:	0014899b          	addiw	s3,s1,1
-- 76e:	0485                	addi	s1,s1,1
-+ 76a:	02051493          	sll	s1,a0,0x20
-+ 76e:	9081                	srl	s1,s1,0x20
-+ 770:	04bd                	add	s1,s1,15
-+ 772:	8091                	srl	s1,s1,0x4
-+ 774:	0014899b          	addw	s3,s1,1
-+ 778:	0485                	add	s1,s1,1
-   if((prevp = freep) == 0){
-- 770:	00001517          	auipc	a0,0x1
-- 774:	89053503          	ld	a0,-1904(a0) # 1000 <freep>
-- 778:	c915                	beqz	a0,7ac <malloc+0x58>
-+ 77a:	00001517          	auipc	a0,0x1
-+ 77e:	88653503          	ld	a0,-1914(a0) # 1000 <freep>
-+ 782:	c515                	beqz	a0,7ae <malloc+0x58>
-     base.s.ptr = freep = prevp = &base;
-     base.s.size = 0;
-   }
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 77a:	611c                	ld	a5,0(a0)
-+ 784:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 77c:	4798                	lw	a4,8(a5)
-- 77e:	08977a63          	bgeu	a4,s1,812 <malloc+0xbe>
-- 782:	f04a                	sd	s2,32(sp)
-- 784:	e852                	sd	s4,16(sp)
-- 786:	e456                	sd	s5,8(sp)
-- 788:	e05a                	sd	s6,0(sp)
-+ 786:	4798                	lw	a4,8(a5)
-+ 788:	02977f63          	bgeu	a4,s1,7c6 <malloc+0x70>
-   if(nu < 4096)
-- 78a:	8a4e                	mv	s4,s3
-- 78c:	0009871b          	sext.w	a4,s3
-- 790:	6685                	lui	a3,0x1
-- 792:	00d77363          	bgeu	a4,a3,798 <malloc+0x44>
-- 796:	6a05                	lui	s4,0x1
-- 798:	000a0b1b          	sext.w	s6,s4
-+ 78c:	8a4e                	mv	s4,s3
-+ 78e:	0009871b          	sext.w	a4,s3
-+ 792:	6685                	lui	a3,0x1
-+ 794:	00d77363          	bgeu	a4,a3,79a <malloc+0x44>
-+ 798:	6a05                	lui	s4,0x1
-+ 79a:	000a0b1b          	sext.w	s6,s4
-   p = sbrk(nu * sizeof(Header));
-- 79c:	004a1a1b          	slliw	s4,s4,0x4
-+ 79e:	004a1a1b          	sllw	s4,s4,0x4
-         p->s.size = nunits;
-       }
-       freep = prevp;
-       return (void*)(p + 1);
-     }
-     if(p == freep)
-- 7a0:	00001917          	auipc	s2,0x1
-- 7a4:	86090913          	addi	s2,s2,-1952 # 1000 <freep>
-+ 7a2:	00001917          	auipc	s2,0x1
-+ 7a6:	85e90913          	add	s2,s2,-1954 # 1000 <freep>
-   if(p == (char*)-1)
-- 7a8:	5afd                	li	s5,-1
-- 7aa:	a081                	j	7ea <malloc+0x96>
-- 7ac:	f04a                	sd	s2,32(sp)
-- 7ae:	e852                	sd	s4,16(sp)
-- 7b0:	e456                	sd	s5,8(sp)
-- 7b2:	e05a                	sd	s6,0(sp)
-+ 7aa:	5afd                	li	s5,-1
-+ 7ac:	a885                	j	81c <malloc+0xc6>
-     base.s.ptr = freep = prevp = &base;
-- 7b4:	00001797          	auipc	a5,0x1
-- 7b8:	85c78793          	addi	a5,a5,-1956 # 1010 <base>
-- 7bc:	00001717          	auipc	a4,0x1
-- 7c0:	84f73223          	sd	a5,-1980(a4) # 1000 <freep>
-- 7c4:	e39c                	sd	a5,0(a5)
-+ 7ae:	00001797          	auipc	a5,0x1
-+ 7b2:	86278793          	add	a5,a5,-1950 # 1010 <base>
-+ 7b6:	00001717          	auipc	a4,0x1
-+ 7ba:	84f73523          	sd	a5,-1974(a4) # 1000 <freep>
-+ 7be:	e39c                	sd	a5,0(a5)
-     base.s.size = 0;
-- 7c6:	0007a423          	sw	zero,8(a5)
-+ 7c0:	0007a423          	sw	zero,8(a5)
-     if(p->s.size >= nunits){
-- 7ca:	b7c1                	j	78a <malloc+0x36>
-+ 7c4:	b7e1                	j	78c <malloc+0x36>
-+      if(p->s.size == nunits)
-+ 7c6:	02e48c63          	beq	s1,a4,7fe <malloc+0xa8>
-+        p->s.size -= nunits;
-+ 7ca:	4137073b          	subw	a4,a4,s3
-+ 7ce:	c798                	sw	a4,8(a5)
-+        p += p->s.size;
-+ 7d0:	02071693          	sll	a3,a4,0x20
-+ 7d4:	01c6d713          	srl	a4,a3,0x1c
-+ 7d8:	97ba                	add	a5,a5,a4
-+        p->s.size = nunits;
-+ 7da:	0137a423          	sw	s3,8(a5)
-+      freep = prevp;
-+ 7de:	00001717          	auipc	a4,0x1
-+ 7e2:	82a73123          	sd	a0,-2014(a4) # 1000 <freep>
-+      return (void*)(p + 1);
-+ 7e6:	01078513          	add	a0,a5,16
-+      if((p = morecore(nunits)) == 0)
-+        return 0;
-+  }
-+}
-+ 7ea:	70e2                	ld	ra,56(sp)
-+ 7ec:	7442                	ld	s0,48(sp)
-+ 7ee:	74a2                	ld	s1,40(sp)
-+ 7f0:	7902                	ld	s2,32(sp)
-+ 7f2:	69e2                	ld	s3,24(sp)
-+ 7f4:	6a42                	ld	s4,16(sp)
-+ 7f6:	6aa2                	ld	s5,8(sp)
-+ 7f8:	6b02                	ld	s6,0(sp)
-+ 7fa:	6121                	add	sp,sp,64
-+ 7fc:	8082                	ret
-         prevp->s.ptr = p->s.ptr;
-- 7cc:	6398                	ld	a4,0(a5)
-- 7ce:	e118                	sd	a4,0(a0)
-- 7d0:	a8a9                	j	82a <malloc+0xd6>
-+ 7fe:	6398                	ld	a4,0(a5)
-+ 800:	e118                	sd	a4,0(a0)
-+ 802:	bff1                	j	7de <malloc+0x88>
-   hp->s.size = nu;
-- 7d2:	01652423          	sw	s6,8(a0)
-+ 804:	01652423          	sw	s6,8(a0)
-   free((void*)(hp + 1));
-- 7d6:	0541                	addi	a0,a0,16
-- 7d8:	efbff0ef          	jal	6d2 <free>
-+ 808:	0541                	add	a0,a0,16
-+ 80a:	ecbff0ef          	jal	6d4 <free>
-   return freep;
-- 7dc:	00093503          	ld	a0,0(s2)
-+ 80e:	00093503          	ld	a0,0(s2)
-       if((p = morecore(nunits)) == 0)
-- 7e0:	c12d                	beqz	a0,842 <malloc+0xee>
-+ 812:	dd61                	beqz	a0,7ea <malloc+0x94>
-   for(p = prevp->s.ptr; ; prevp = p, p = p->s.ptr){
-- 7e2:	611c                	ld	a5,0(a0)
-+ 814:	611c                	ld	a5,0(a0)
-     if(p->s.size >= nunits){
-- 7e4:	4798                	lw	a4,8(a5)
-- 7e6:	02977263          	bgeu	a4,s1,80a <malloc+0xb6>
-+ 816:	4798                	lw	a4,8(a5)
-+ 818:	fa9777e3          	bgeu	a4,s1,7c6 <malloc+0x70>
-     if(p == freep)
-- 7ea:	00093703          	ld	a4,0(s2)
-- 7ee:	853e                	mv	a0,a5
-- 7f0:	fef719e3          	bne	a4,a5,7e2 <malloc+0x8e>
-+ 81c:	00093703          	ld	a4,0(s2)
-+ 820:	853e                	mv	a0,a5
-+ 822:	fef719e3          	bne	a4,a5,814 <malloc+0xbe>
-   p = sbrk(nu * sizeof(Header));
-- 7f4:	8552                	mv	a0,s4
-- 7f6:	b1bff0ef          	jal	310 <sbrk>
-+ 826:	8552                	mv	a0,s4
-+ 828:	ae9ff0ef          	jal	310 <sbrk>
-   if(p == (char*)-1)
-- 7fa:	fd551ce3          	bne	a0,s5,7d2 <malloc+0x7e>
-+ 82c:	fd551ce3          	bne	a0,s5,804 <malloc+0xae>
-         return 0;
-- 7fe:	4501                	li	a0,0
-- 800:	7902                	ld	s2,32(sp)
-- 802:	6a42                	ld	s4,16(sp)
-- 804:	6aa2                	ld	s5,8(sp)
-- 806:	6b02                	ld	s6,0(sp)
-- 808:	a03d                	j	836 <malloc+0xe2>
-- 80a:	7902                	ld	s2,32(sp)
-- 80c:	6a42                	ld	s4,16(sp)
-- 80e:	6aa2                	ld	s5,8(sp)
-- 810:	6b02                	ld	s6,0(sp)
--      if(p->s.size == nunits)
-- 812:	fae48de3          	beq	s1,a4,7cc <malloc+0x78>
--        p->s.size -= nunits;
-- 816:	4137073b          	subw	a4,a4,s3
-- 81a:	c798                	sw	a4,8(a5)
--        p += p->s.size;
-- 81c:	02071693          	slli	a3,a4,0x20
-- 820:	01c6d713          	srli	a4,a3,0x1c
-- 824:	97ba                	add	a5,a5,a4
--        p->s.size = nunits;
-- 826:	0137a423          	sw	s3,8(a5)
--      freep = prevp;
-- 82a:	00000717          	auipc	a4,0x0
-- 82e:	7ca73b23          	sd	a0,2006(a4) # 1000 <freep>
--      return (void*)(p + 1);
-- 832:	01078513          	addi	a0,a5,16
--  }
--}
-- 836:	70e2                	ld	ra,56(sp)
-- 838:	7442                	ld	s0,48(sp)
-- 83a:	74a2                	ld	s1,40(sp)
-- 83c:	69e2                	ld	s3,24(sp)
-- 83e:	6121                	addi	sp,sp,64
-- 840:	8082                	ret
-- 842:	7902                	ld	s2,32(sp)
-- 844:	6a42                	ld	s4,16(sp)
-- 846:	6aa2                	ld	s5,8(sp)
-- 848:	6b02                	ld	s6,0(sp)
-- 84a:	b7f5                	j	836 <malloc+0xe2>
-+ 830:	4501                	li	a0,0
-+ 832:	bf65                	j	7ea <malloc+0x94>
-diff --git a/Assignments/Assignment-6/xv6/user/zombie.d b/Assignments/Assignment-6/xv6/user/zombie.d
-index 5813955..588534d 100644
---- a/Assignments/Assignment-6/xv6/user/zombie.d
-+++ b/Assignments/Assignment-6/xv6/user/zombie.d
-@@ -1,3 +1 @@
--user/zombie.o: user/zombie.c \
-- /student/cmpt332/xv6-2024/riscv/sysroot/usr/include/stdc-predef.h \
-- kernel/types.h kernel/stat.h user/user.h
-+user/zombie.o: user/zombie.c kernel/types.h kernel/stat.h user/user.h
-diff --git a/Assignments/Assignment-6/xv6/user/zombie.o b/Assignments/Assignment-6/xv6/user/zombie.o
-index 271e759..d599d47 100644
-Binary files a/Assignments/Assignment-6/xv6/user/zombie.o and b/Assignments/Assignment-6/xv6/user/zombie.o differ
-diff --git a/Assignments/Assignment-6/xv6/user/zombie.sym b/Assignments/Assignment-6/xv6/user/zombie.sym
-index 4cc709c..45cb8db 100644
---- a/Assignments/Assignment-6/xv6/user/zombie.sym
-+++ b/Assignments/Assignment-6/xv6/user/zombie.sym
-@@ -1,6 +1,5 @@
- 0000000000000000 .text
--0000000000000850 .rodata
--0000000000000870 .eh_frame
-+0000000000000838 .rodata
- 0000000000001000 .data
- 0000000000001000 .bss
- 0000000000000000 .debug_info
-@@ -11,6 +10,7 @@
- 0000000000000000 .debug_str
- 0000000000000000 .comment
- 0000000000000000 .riscv.attributes
-+0000000000000000 .debug_frame
- 0000000000000000 .debug_ranges
- 0000000000000000 zombie.c
- 0000000000000000 ulib.c
-@@ -18,23 +18,23 @@
- 0000000000000000 printf.c
- 0000000000000328 putc
- 0000000000000346 printint
--0000000000000858 digits
-+0000000000000848 digits
- 0000000000000000 umalloc.c
- 0000000000001000 freep
- 0000000000001010 base
- 0000000000000030 strcpy
--00000000000006a0 printf
-+00000000000006a2 printf
- 00000000000001da memmove
- 00000000000002d0 mknod
- 00000000000000e8 gets
- 0000000000000308 getpid
- 000000000000026c memcpy
--0000000000000754 malloc
-+0000000000000756 malloc
- 0000000000000318 sleep
- 0000000000000298 pipe
- 00000000000002a8 write
- 00000000000002e0 fstat
--0000000000000676 fprintf
-+0000000000000678 fprintf
- 00000000000002b8 kill
- 00000000000003ee vprintf
- 00000000000002f8 chdir
-@@ -60,4 +60,4 @@
- 00000000000000c4 strchr
- 00000000000002f0 mkdir
- 00000000000002b0 close
--00000000000006d2 free
-+00000000000006d4 free
-diff --git a/Assignments/empty.txt b/Assignments/empty.txt
-deleted file mode 100644
-index e69de29..0000000
-diff --git a/Labs/lab9-main/produceconsume.c b/Labs/lab9-main/produceconsume.c
-index c8c1fb8..2712a97 100644
---- a/Labs/lab9-main/produceconsume.c
-+++ b/Labs/lab9-main/produceconsume.c
-@@ -60,6 +60,41 @@ ssize_t producer(const char *user_buffer, size_t count){
-  * In simplest terms, you would read the data from 
-  * the circular buffer to ensure that there is no
-  * overhead data available. */
-+ssize_t consumer_read(char __user *user_buffer, size_t count){
-+	unsigned long flags;
-+	bool condition;
-+	size_t need_to_read, continuing, continue_to_end, bytes_read = 0;
-+ 	spin_lock_irqsave(&lock_buffer, flags);
-+	while (count > 0){
-+		continuing = CIRC_CNT(buffer.head, buffer.tail, BUF_SIZE);
-+
-+		if (CIRC_CNT(buffer.head, buffer.tail, BUF_SIZE) > 0){
-+			condition = true;
-+		}
-+		else{
-+			condition = false;
-+		}
-+	
-+		if (continuing = 0){
-+			spin_unlock_irqrestore(&lock_buffer, flags);
-+			wait_event_interruptible(wait_queue, condition);
-+			spin_lock_irqsave(&lock_buffer, flags);
-+		}
-+
-+		continue_to_end = CIRC_CNT_TO_END(buffer.head, buffer.tail, BUF_SIZE);
-+		need_to_read = min(continue_to_end, count);
-+		if (copy_to_user(user_buffer + bytes_read, buffer.buf + buffer.tail, need_to_read)){
-+			spin_unlock_irqrestore(&lock_buffer, flags);
-+			return -EFAULT;
-+		}
-+	buffer.tail = (buffer.tail + need_to_read) & (BUF_SIZE - 1);
-+	count -= need_to_read;
-+	bytes_read += need_to_read;
-+	}
-+	spin_unlock_irqrestore(&lock_buffer, flags);
-+	wake_up_interruptible(&wait_queue);
-+	return bytes_read;
-+}
- 
- static int __init producer_consumer_init(void){
- 	spin_lock_init(&lock_buffer);
diff --git a/Assignments/empty.txt b/Assignments/empty.txt
deleted file mode 100644
index e69de29..0000000
diff --git a/Labs/lab9-main/produceconsume.c b/Labs/lab9-main/produceconsume.c
index c8c1fb8..2712a97 100644
--- a/Labs/lab9-main/produceconsume.c
+++ b/Labs/lab9-main/produceconsume.c
@@ -60,6 +60,41 @@ ssize_t producer(const char *user_buffer, size_t count){
  * In simplest terms, you would read the data from 
  * the circular buffer to ensure that there is no
  * overhead data available. */
+ssize_t consumer_read(char __user *user_buffer, size_t count){
+	unsigned long flags;
+	bool condition;
+	size_t need_to_read, continuing, continue_to_end, bytes_read = 0;
+ 	spin_lock_irqsave(&lock_buffer, flags);
+	while (count > 0){
+		continuing = CIRC_CNT(buffer.head, buffer.tail, BUF_SIZE);
+
+		if (CIRC_CNT(buffer.head, buffer.tail, BUF_SIZE) > 0){
+			condition = true;
+		}
+		else{
+			condition = false;
+		}
+	
+		if (continuing = 0){
+			spin_unlock_irqrestore(&lock_buffer, flags);
+			wait_event_interruptible(wait_queue, condition);
+			spin_lock_irqsave(&lock_buffer, flags);
+		}
+
+		continue_to_end = CIRC_CNT_TO_END(buffer.head, buffer.tail, BUF_SIZE);
+		need_to_read = min(continue_to_end, count);
+		if (copy_to_user(user_buffer + bytes_read, buffer.buf + buffer.tail, need_to_read)){
+			spin_unlock_irqrestore(&lock_buffer, flags);
+			return -EFAULT;
+		}
+	buffer.tail = (buffer.tail + need_to_read) & (BUF_SIZE - 1);
+	count -= need_to_read;
+	bytes_read += need_to_read;
+	}
+	spin_unlock_irqrestore(&lock_buffer, flags);
+	wake_up_interruptible(&wait_queue);
+	return bytes_read;
+}
 
 static int __init producer_consumer_init(void){
 	spin_lock_init(&lock_buffer);
